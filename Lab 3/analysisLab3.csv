old_file_path,new_file_path,commit_sha,parent_commit_sha,commit_message,diff_myers,diff_histogram,diff_equal
src\arch\simddetect.cpp,src\arch\simddetect.cpp,3157ff0e741ea5c85e16fbd1c6edf20f30eccbd3,a5fa1bdf7680782656a5f1508fc8bc2087f91dc9,"Fix building elf_aux_info() support on OpenBSD/arm

Remove the unnecessary use of the sys/elf.h header which breaks
the build.","@@ -61,7 +61,6 @@
 #    include <sys/auxv.h>
 #  elif defined(HAVE_ELF_AUX_INFO)
 #    include <sys/auxv.h>
-#    include <sys/elf.h>
 #  endif
 #endif
 
","{'added': [], 'deleted': [(64, '#    include <sys/elf.h>')]}",yes
configure.ac,configure.ac,92b2f37aa86233e0c1625a4c9034a3d8c1752c23,f657ec2213cc7349dcb9b5fb6c1cd036c1c74813,Extend elf_aux_info() support for RISC-V,"@@ -221,9 +221,9 @@ fi
 # additional checks for RVV targets
 if test x$check_for_rvv = x1; then
   AC_MSG_NOTICE([checking how to detect RVV availability])
-  AC_CHECK_FUNCS([getauxval])
+  AC_CHECK_FUNCS([getauxval elf_aux_info])
 
-  if test $ac_cv_func_getauxval = no; then
+  if test $ac_cv_func_getauxval = no && test $ac_cv_func_elf_aux_info = no; then
       AC_MSG_WARN([RVV is available, but we don't know how to check for it.  Will not be able to use RVV.])
   fi
 fi
","{'added': [(224, '  AC_CHECK_FUNCS([getauxval elf_aux_info])'), (226, '  if test $ac_cv_func_getauxval = no && test $ac_cv_func_elf_aux_info = no; then')], 'deleted': [(224, '  AC_CHECK_FUNCS([getauxval])'), (226, '  if test $ac_cv_func_getauxval = no; then')]}",yes
src\arch\simddetect.cpp,src\arch\simddetect.cpp,92b2f37aa86233e0c1625a4c9034a3d8c1752c23,f657ec2213cc7349dcb9b5fb6c1cd036c1c74813,Extend elf_aux_info() support for RISC-V,"@@ -66,7 +66,7 @@
 #endif
 
 #if defined(HAVE_RVV)
-#  if defined(HAVE_GETAUXVAL)
+#  if defined(HAVE_GETAUXVAL) || defined(HAVE_ELF_AUX_INFO)
 #    include <sys/auxv.h>
 #    define HWCAP_RV(letter) (1ul << ((letter) - 'A'))
 #  endif
@@ -244,6 +244,10 @@ SIMDDetect::SIMDDetect() {
 #  if defined(HAVE_GETAUXVAL)
   const unsigned long hwcap = getauxval(AT_HWCAP);
   rvv_available_ = hwcap & HWCAP_RV('V');
+#  elif defined(HAVE_ELF_AUX_INFO)
+  unsigned long hwcap = 0;
+  elf_aux_info(AT_HWCAP, &hwcap, sizeof hwcap);
+  rvv_available_ = hwcap & HWCAP_RV('V');
 #  endif
 #endif
 
","{'added': [(69, '#  if defined(HAVE_GETAUXVAL) || defined(HAVE_ELF_AUX_INFO)'), (247, '#  elif defined(HAVE_ELF_AUX_INFO)'), (248, '  unsigned long hwcap = 0;'), (249, '  elf_aux_info(AT_HWCAP, &hwcap, sizeof hwcap);'), (250, ""  rvv_available_ = hwcap & HWCAP_RV('V');"")], 'deleted': [(69, '#  if defined(HAVE_GETAUXVAL)')]}",yes
CMakeLists.txt,CMakeLists.txt,f657ec2213cc7349dcb9b5fb6c1cd036c1c74813,770d9e1302541263640f285f7eca5d1d3af3da62,cmake: allow unittest (windows & linux),"@@ -282,7 +282,7 @@ endif()
 # Compiler specific environment
 if(CMAKE_COMPILER_IS_GNUCXX OR MINGW)
   set(CMAKE_CXX_FLAGS_DEBUG
-      ""${CMAKE_CXX_FLAGS_DEBUG} -Wall -DDEBUG -pedantic -Og"")
+      ""${CMAKE_CXX_FLAGS_DEBUG} -Wall -DDEBUG -pedantic -Og -Wno-unknown-pragmas"")
 elseif(MSVC)
   add_definitions(-D_CRT_SECURE_NO_WARNINGS)
   add_definitions(-D_CRT_NONSTDC_NO_DEPRECATE) # strdup
@@ -526,6 +526,7 @@ message(STATUS ""General configuration for Tesseract ${PACKAGE_VERSION}"")
 message(STATUS ""--------------------------------------------------------"")
 message(STATUS ""Build type: ${CMAKE_BUILD_TYPE} ${BUILD_ARCH}"")
 message(STATUS ""Compiler: ${CMAKE_CXX_COMPILER_ID}"")
+message(STATUS ""Compiler version: ${CMAKE_CXX_COMPILER_VERSION}"")
 message(STATUS ""Used standard: C++${CMAKE_CXX_STANDARD}"")
 message(STATUS ""CXX compiler options: ${COMPILER_FLAGS}"")
 get_directory_property(DirCompDefs COMPILE_DEFINITIONS)
@@ -898,7 +899,9 @@ if(BUILD_TESTS
    AND EXISTS
        ${CMAKE_CURRENT_SOURCE_DIR}/unittest/third_party/googletest/CMakeLists.txt
 )
+  enable_testing()
   add_subdirectory(unittest/third_party/googletest)
+  add_subdirectory(unittest)
 endif()
 
 if(BUILD_TRAINING_TOOLS)
","{'added': [(285, '      ""${CMAKE_CXX_FLAGS_DEBUG} -Wall -DDEBUG -pedantic -Og -Wno-unknown-pragmas"")'), (529, 'message(STATUS ""Compiler version: ${CMAKE_CXX_COMPILER_VERSION}"")'), (902, '  enable_testing()'), (904, '  add_subdirectory(unittest)')], 'deleted': [(285, '      ""${CMAKE_CXX_FLAGS_DEBUG} -Wall -DDEBUG -pedantic -Og"")')]}",yes
,unittest\CMakeLists.txt,f657ec2213cc7349dcb9b5fb6c1cd036c1c74813,770d9e1302541263640f285f7eca5d1d3af3da62,cmake: allow unittest (windows & linux),"@@ -0,0 +1,110 @@
+# find_package(GTest REQUIRED)
+include(GoogleTest) # Todo install GoogleTests?
+
+# Set common include directories
+set(COMMON_INCLUDE_DIRS
+    ${CMAKE_CURRENT_BINARY_DIR}/../src/training
+    ${CMAKE_CURRENT_SOURCE_DIR}/../src/ccutil
+    ${CMAKE_CURRENT_SOURCE_DIR}/../src/ccstruct
+    ${CMAKE_CURRENT_SOURCE_DIR}/../src/viewer
+    ${CMAKE_CURRENT_SOURCE_DIR}/../include
+    ${CMAKE_CURRENT_SOURCE_DIR}/../src/training/unicharset
+    ${CMAKE_CURRENT_SOURCE_DIR}/../src/training/common
+    ${CMAKE_CURRENT_SOURCE_DIR}/third_party/googletest/googlemock/include)
+
+if (MSVC)
+    set(TESSBIN_DIR ${EXECUTABLE_OUTPUT_PATH}/$<CONFIG>)
+else()
+    set(TESSBIN_DIR ${EXECUTABLE_OUTPUT_PATH})
+endif()
+
+# Set common compile definitions
+set(COMMON_COMPILE_DEFINITIONS
+    ""-DTESTING_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/../test/testing\""""
+    ""-DTESSDATA_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/../tessdata\""""
+    ""-DTESSBIN_DIR=\""${TESSBIN_DIR}\""""
+    ""-DTESTDATA_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/../test/testdata\""""
+    ""-DLANGDATA_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/../langdata_lstm\"""")
+
+file(
+  GLOB TEST_SOURCES
+  RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
+  ""*.cc"")
+
+set(COMMON_LINK_LIBS libtesseract GTest::gtest_main common_training
+                     unicharset_training)
+
+set(TRAINING_TESTS
+    commandlineflags_test.cc
+    dawg_test.cc
+    lstm_recode_test.cc
+    lstm_squashed_test.cc
+    lstm_test.cc
+    lstm_test.cc
+    normstrngs_test.cc
+    unichar_test.cc
+    unicharcompress_test.cc
+    unicharset_test.cc
+    validate_grapheme_test.cc
+    validate_indic_test.cc
+    validate_khmer_test.cc
+    validate_myanmar_test.cc
+    validator_test.cc)
+
+set(PANGO_TESTS ligature_table_test.cc pango_font_info_test.cc
+                pango_font_info_test.cc stringrenderer_test.cc)
+
+set(LEGACY_TESTS
+    applybox_test.cc
+    bitvector_test.cc
+    equationdetect_test.cc
+    indexmapbidi_test.cc
+    intfeaturemap_test.cc
+    mastertrainer_test.cc
+    osd_test.cc
+    params_model_test.cc
+    shapetable_test.cc)
+
+if(BUILD_TRAINING_TOOLS AND PANGO_FOUND)
+  list(APPEND COMMON_INCLUDE_DIRS
+       ${CMAKE_CURRENT_SOURCE_DIR}/../src/training/pango ${PANGO_INCLUDE_DIRS})
+
+else()
+  list(REMOVE_ITEM TEST_SOURCES ${PANGO_TESTS})
+endif()
+
+if(DISABLED_LEGACY_ENGINE)
+  list(REMOVE_ITEM TEST_SOURCES ${LEGACY_TESTS})
+endif()
+
+if(NOT BUILD_TRAINING_TOOLS)
+  list(REMOVE_ITEM TEST_SOURCES ${TRAINING_TESTS})
+endif()
+
+set(TATWEEL_TEST_EXTRA_SRC util/utf8/unilib.cc util/utf8/unicodetext.cc
+                           third_party/utf/rune.c)
+
+message(STATUS ""Enabled tests: ${TEST_SOURCES}"")
+
+foreach(test_source IN LISTS TEST_SOURCES)
+  get_filename_component(test_name ${test_source} NAME_WE)
+  if(${test_source} IN_LIST PANGO_TESTS)
+    list(APPEND COMMON_LINK_LIBS pango_training ${PANGO_LIBRARIES})
+  endif()
+  if(${test_name} MATCHES ""tatweel_test"")
+    list(APPEND test_source ${TATWEEL_TEST_EXTRA_SRC})
+    list(APPEND COMMON_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}
+         ${CMAKE_CURRENT_SOURCE_DIR}/util/utf8)
+  endif()
+  add_executable(${test_name} ${test_source})
+  if(${test_name} MATCHES ""progress_test"")
+    target_link_libraries(${test_name} PRIVATE GTest::gmock)
+  endif()
+  target_compile_definitions(${test_name} PRIVATE ${COMMON_COMPILE_DEFINITIONS})
+  target_include_directories(${test_name} PRIVATE ${COMMON_INCLUDE_DIRS})
+  target_link_libraries(${test_name} PRIVATE ${COMMON_LINK_LIBS})
+  add_test(NAME ${test_name} COMMAND ${test_name})
+endforeach()
+
+# Discover tests gtest_discover_tests(apiexample_test baseapi_test
+# baseapi_thread_test) add_test(baseapi_gtests baseapi_test.cc)
","{'added': [(1, '# find_package(GTest REQUIRED)'), (2, 'include(GoogleTest) # Todo install GoogleTests?'), (3, ''), (4, '# Set common include directories'), (5, 'set(COMMON_INCLUDE_DIRS'), (6, '    ${CMAKE_CURRENT_BINARY_DIR}/../src/training'), (7, '    ${CMAKE_CURRENT_SOURCE_DIR}/../src/ccutil'), (8, '    ${CMAKE_CURRENT_SOURCE_DIR}/../src/ccstruct'), (9, '    ${CMAKE_CURRENT_SOURCE_DIR}/../src/viewer'), (10, '    ${CMAKE_CURRENT_SOURCE_DIR}/../include'), (11, '    ${CMAKE_CURRENT_SOURCE_DIR}/../src/training/unicharset'), (12, '    ${CMAKE_CURRENT_SOURCE_DIR}/../src/training/common'), (13, '    ${CMAKE_CURRENT_SOURCE_DIR}/third_party/googletest/googlemock/include)'), (14, ''), (15, 'if (MSVC)'), (16, '    set(TESSBIN_DIR ${EXECUTABLE_OUTPUT_PATH}/$<CONFIG>)'), (17, 'else()'), (18, '    set(TESSBIN_DIR ${EXECUTABLE_OUTPUT_PATH})'), (19, 'endif()'), (20, ''), (21, '# Set common compile definitions'), (22, 'set(COMMON_COMPILE_DEFINITIONS'), (23, '    ""-DTESTING_DIR=\\""${CMAKE_CURRENT_SOURCE_DIR}/../test/testing\\""""'), (24, '    ""-DTESSDATA_DIR=\\""${CMAKE_CURRENT_SOURCE_DIR}/../tessdata\\""""'), (25, '    ""-DTESSBIN_DIR=\\""${TESSBIN_DIR}\\""""'), (26, '    ""-DTESTDATA_DIR=\\""${CMAKE_CURRENT_SOURCE_DIR}/../test/testdata\\""""'), (27, '    ""-DLANGDATA_DIR=\\""${CMAKE_CURRENT_SOURCE_DIR}/../langdata_lstm\\"""")'), (28, ''), (29, 'file('), (30, '  GLOB TEST_SOURCES'), (31, '  RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}'), (32, '  ""*.cc"")'), (33, ''), (34, 'set(COMMON_LINK_LIBS libtesseract GTest::gtest_main common_training'), (35, '                     unicharset_training)'), (36, ''), (37, 'set(TRAINING_TESTS'), (38, '    commandlineflags_test.cc'), (39, '    dawg_test.cc'), (40, '    lstm_recode_test.cc'), (41, '    lstm_squashed_test.cc'), (42, '    lstm_test.cc'), (43, '    lstm_test.cc'), (44, '    normstrngs_test.cc'), (45, '    unichar_test.cc'), (46, '    unicharcompress_test.cc'), (47, '    unicharset_test.cc'), (48, '    validate_grapheme_test.cc'), (49, '    validate_indic_test.cc'), (50, '    validate_khmer_test.cc'), (51, '    validate_myanmar_test.cc'), (52, '    validator_test.cc)'), (53, ''), (54, 'set(PANGO_TESTS ligature_table_test.cc pango_font_info_test.cc'), (55, '                pango_font_info_test.cc stringrenderer_test.cc)'), (56, ''), (57, 'set(LEGACY_TESTS'), (58, '    applybox_test.cc'), (59, '    bitvector_test.cc'), (60, '    equationdetect_test.cc'), (61, '    indexmapbidi_test.cc'), (62, '    intfeaturemap_test.cc'), (63, '    mastertrainer_test.cc'), (64, '    osd_test.cc'), (65, '    params_model_test.cc'), (66, '    shapetable_test.cc)'), (67, ''), (68, 'if(BUILD_TRAINING_TOOLS AND PANGO_FOUND)'), (69, '  list(APPEND COMMON_INCLUDE_DIRS'), (70, '       ${CMAKE_CURRENT_SOURCE_DIR}/../src/training/pango ${PANGO_INCLUDE_DIRS})'), (71, ''), (72, 'else()'), (73, '  list(REMOVE_ITEM TEST_SOURCES ${PANGO_TESTS})'), (74, 'endif()'), (75, ''), (76, 'if(DISABLED_LEGACY_ENGINE)'), (77, '  list(REMOVE_ITEM TEST_SOURCES ${LEGACY_TESTS})'), (78, 'endif()'), (79, ''), (80, 'if(NOT BUILD_TRAINING_TOOLS)'), (81, '  list(REMOVE_ITEM TEST_SOURCES ${TRAINING_TESTS})'), (82, 'endif()'), (83, ''), (84, 'set(TATWEEL_TEST_EXTRA_SRC util/utf8/unilib.cc util/utf8/unicodetext.cc'), (85, '                           third_party/utf/rune.c)'), (86, ''), (87, 'message(STATUS ""Enabled tests: ${TEST_SOURCES}"")'), (88, ''), (89, 'foreach(test_source IN LISTS TEST_SOURCES)'), (90, '  get_filename_component(test_name ${test_source} NAME_WE)'), (91, '  if(${test_source} IN_LIST PANGO_TESTS)'), (92, '    list(APPEND COMMON_LINK_LIBS pango_training ${PANGO_LIBRARIES})'), (93, '  endif()'), (94, '  if(${test_name} MATCHES ""tatweel_test"")'), (95, '    list(APPEND test_source ${TATWEEL_TEST_EXTRA_SRC})'), (96, '    list(APPEND COMMON_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}'), (97, '         ${CMAKE_CURRENT_SOURCE_DIR}/util/utf8)'), (98, '  endif()'), (99, '  add_executable(${test_name} ${test_source})'), (100, '  if(${test_name} MATCHES ""progress_test"")'), (101, '    target_link_libraries(${test_name} PRIVATE GTest::gmock)'), (102, '  endif()'), (103, '  target_compile_definitions(${test_name} PRIVATE ${COMMON_COMPILE_DEFINITIONS})'), (104, '  target_include_directories(${test_name} PRIVATE ${COMMON_INCLUDE_DIRS})'), (105, '  target_link_libraries(${test_name} PRIVATE ${COMMON_LINK_LIBS})'), (106, '  add_test(NAME ${test_name} COMMAND ${test_name})'), (107, 'endforeach()'), (108, ''), (109, '# Discover tests gtest_discover_tests(apiexample_test baseapi_test'), (110, '# baseapi_thread_test) add_test(baseapi_gtests baseapi_test.cc)')], 'deleted': []}",yes
src\dict\dawg.h,src\dict\dawg.h,57769d93e73c9b4550e98c8e740a7ca2f1c59576,08f531aabd569c5d44ffdee0b14f187a2b95fc1f,use constexpr for kDawgMagicNumber,"@@ -110,7 +110,7 @@ static const char kWildcard[] = ""*"";
 class TESS_API Dawg {
 public:
   /// Magic number to determine endianness when reading the Dawg from file.
-  static const int16_t kDawgMagicNumber = 42;
+  static constexpr int16_t kDawgMagicNumber = 42;
   /// A special unichar id that indicates that any appropriate pattern
   /// (e.g.dictionary word, 0-9 digit, etc) can be inserted instead
   /// Used for expressing patterns in punctuation and number Dawgs.
","{'added': [(113, '  static constexpr int16_t kDawgMagicNumber = 42;')], 'deleted': [(113, '  static const int16_t kDawgMagicNumber = 42;')]}",yes
test,test,08f531aabd569c5d44ffdee0b14f187a2b95fc1f,014b9d00930bae26eec380ae5a83d1a34ba49a83,Pulled down update for submodules,"@@ -1 +1 @@
-Subproject commit 2761899921c08014cf9dbf3b63592237fb9e6ecb
+Subproject commit 232ff181c66516116ec0e84c4963f70de15050fd
","{'added': [(1, 'Subproject commit 232ff181c66516116ec0e84c4963f70de15050fd')], 'deleted': [(1, 'Subproject commit 2761899921c08014cf9dbf3b63592237fb9e6ecb')]}",yes
unittest\third_party\googletest,unittest\third_party\googletest,08f531aabd569c5d44ffdee0b14f187a2b95fc1f,014b9d00930bae26eec380ae5a83d1a34ba49a83,Pulled down update for submodules,"@@ -1 +1 @@
-Subproject commit b514bdc898e2951020cbdca1304b75f5950d1f59
+Subproject commit 7d76a231b0e29caf86e68d1df858308cd53b2a66
","{'added': [(1, 'Subproject commit 7d76a231b0e29caf86e68d1df858308cd53b2a66')], 'deleted': [(1, 'Subproject commit b514bdc898e2951020cbdca1304b75f5950d1f59')]}",yes
.github\workflows\autotools-openmp.yml,.github\workflows\autotools-openmp.yml,014b9d00930bae26eec380ae5a83d1a34ba49a83,13c966b747fdc9f335b0b0b889100d5aa68646a4,use ubuntu 24.04 LTS with g++14 instead of 20.04 with g++9,"@@ -13,7 +13,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: 20.04-openmp, os: ubuntu-20.04 }
+          - { name: 24.04-openmp, os: ubuntu-24.04 }
           - { name: 22.04-openmp, os: ubuntu-22.04 }
 
     steps:
","{'added': [(16, '          - { name: 24.04-openmp, os: ubuntu-24.04 }')], 'deleted': [(16, '          - { name: 20.04-openmp, os: ubuntu-20.04 }')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,014b9d00930bae26eec380ae5a83d1a34ba49a83,13c966b747fdc9f335b0b0b889100d5aa68646a4,use ubuntu 24.04 LTS with g++14 instead of 20.04 with g++9,"@@ -15,10 +15,10 @@ jobs:
         config:
           - { name: ubuntu-22.04-clang-15-autotools, os: ubuntu-22.04, cxx: clang++-15 } #installed
 
+          - { name: ubuntu-24.04-gcc-14-autotools, os: ubuntu-24.04, cxx: g++-14 } #installed
           - { name: ubuntu-22.04-gcc-12-autotools, os: ubuntu-22.04, cxx: g++-12 } #installed
           - { name: ubuntu-22.04-gcc-11-autotools, os: ubuntu-22.04, cxx: g++-11 } #installed
           - { name: ubuntu-20.04-gcc-10-autotools, os: ubuntu-20.04, cxx: g++-10 } #installed
-          - { name: ubuntu-20.04-gcc-9-autotools, os: ubuntu-20.04, cxx: g++-9 } #installed
 
     steps:
     - uses: actions/checkout@v4
","{'added': [(18, '          - { name: ubuntu-24.04-gcc-14-autotools, os: ubuntu-24.04, cxx: g++-14 } #installed')], 'deleted': [(21, '          - { name: ubuntu-20.04-gcc-9-autotools, os: ubuntu-20.04, cxx: g++-9 } #installed')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,014b9d00930bae26eec380ae5a83d1a34ba49a83,13c966b747fdc9f335b0b0b889100d5aa68646a4,use ubuntu 24.04 LTS with g++14 instead of 20.04 with g++9,"@@ -19,11 +19,9 @@ jobs:
           - { name: macos-15-clang-cmake, os: macos-15, cxx: clang++ } # default
 
           - { name: ubuntu-22.04-clang-15-cmake, os: ubuntu-22.04, cxx: clang++-15 } #installed
-
+          - { name: ubuntu-24.04-gcc-12-cmake, os: ubuntu-24.04, cxx: g++-14 } #installed
           - { name: ubuntu-22.04-gcc-12-cmake, os: ubuntu-22.04, cxx: g++-12 } #installed
-          - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed
           - { name: ubuntu-20.04-gcc-10-cmake, os: ubuntu-20.04, cxx: g++-10 } #installed
-          - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed
 
     steps:
       - name: Install compilers on Linux
","{'added': [(22, '          - { name: ubuntu-24.04-gcc-12-cmake, os: ubuntu-24.04, cxx: g++-14 } #installed')], 'deleted': [(22, ''), (24, '          - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed'), (26, '          - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,014b9d00930bae26eec380ae5a83d1a34ba49a83,13c966b747fdc9f335b0b0b889100d5aa68646a4,use ubuntu 24.04 LTS with g++14 instead of 20.04 with g++9,"@@ -14,8 +14,8 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        compiler: [ g++, clang++-15 ]
-        os: [ ubuntu-22.04 ]
+        compiler: [ g++, clang++-18 ]
+        os: [ ubuntu-24.04 ]
 
     steps:
     - uses: actions/checkout@v4
","{'added': [(17, '        compiler: [ g++, clang++-18 ]'), (18, '        os: [ ubuntu-24.04 ]')], 'deleted': [(17, '        compiler: [ g++, clang++-15 ]'), (18, '        os: [ ubuntu-22.04 ]')]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,014b9d00930bae26eec380ae5a83d1a34ba49a83,13c966b747fdc9f335b0b0b889100d5aa68646a4,use ubuntu 24.04 LTS with g++14 instead of 20.04 with g++9,"@@ -23,7 +23,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++, cxxflags: '-g -O2 -fsanitize=address,undefined' }
+          - { name: ubuntu-24.04-gcc-unittest, os: ubuntu-24.04, cxx: g++, cxxflags: '-g -O2 -fsanitize=address,undefined' }
           - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++, cxxflags: '-g -O2 -fsanitize=address,undefined -stdlib=libc++' }
     steps:
     - uses: actions/checkout@v4
","{'added': [(26, ""          - { name: ubuntu-24.04-gcc-unittest, os: ubuntu-24.04, cxx: g++, cxxflags: '-g -O2 -fsanitize=address,undefined' }"")], 'deleted': [(26, ""          - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++, cxxflags: '-g -O2 -fsanitize=address,undefined' }"")]}",yes
CMakeLists.txt,CMakeLists.txt,13c966b747fdc9f335b0b0b889100d5aa68646a4,65e864bbbb87742bf1a463188b7cd9f8be5ec537,Windows: workaround for mutex crash when building with VS 2022 17.10 or newer.,"@@ -306,6 +306,10 @@ elseif(MSVC)
     set(CMAKE_MSVC_RUNTIME_LIBRARY ""MultiThreaded$<$<CONFIG:Debug>:Debug>"")
     message(STATUS ""Building with static CRT."")
   endif()
+  # Workaround: When building on VS 2022 17.10 or newer, but using an older runtime,
+  # mutexes can crash
+  # https://stackoverflow.com/questions/78598141/first-stdmutexlock-crashes-in-application-built-with-latest-visual-studio
+  add_definitions(-D_DISABLE_CONSTEXPR_MUTEX_CONSTRUCTOR)
 endif()
 if(CLANG) # clang all platforms
   set(CMAKE_CXX_FLAGS_RELEASE
","{'added': [(309, '  # Workaround: When building on VS 2022 17.10 or newer, but using an older runtime,'), (310, '  # mutexes can crash'), (311, '  # https://stackoverflow.com/questions/78598141/first-stdmutexlock-crashes-in-application-built-with-latest-visual-studio'), (312, '  add_definitions(-D_DISABLE_CONSTEXPR_MUTEX_CONSTRUCTOR)')], 'deleted': []}",yes
src\training\pango\pango_font_info.cpp,src\training\pango\pango_font_info.cpp,65e864bbbb87742bf1a463188b7cd9f8be5ec537,dcb2ef91e852e8360ca73f2c9895d0b65e86d0c1,mute pango warning about depreciation of pango_coverage_unref for pango>=1.50.4,"@@ -230,7 +230,7 @@ bool PangoFontInfo::CoversUTF8Text(const char *utf8_text, int byte_length) const
       int len = it.get_utf8(tmp);
       tmp[len] = '\0';
       tlog(2, ""'%s' (U+%x) not covered by font\n"", tmp, *it);
-#if PANGO_VERSION_CHECK(1, 52, 0)
+#if PANGO_VERSION_CHECK(1, 50, 4)
       g_object_unref(coverage);
 #else
       pango_coverage_unref(coverage);
@@ -239,7 +239,7 @@ bool PangoFontInfo::CoversUTF8Text(const char *utf8_text, int byte_length) const
       return false;
     }
   }
-#if PANGO_VERSION_CHECK(1, 52, 0)
+#if PANGO_VERSION_CHECK(1, 50, 4)
   g_object_unref(coverage);
 #else
   pango_coverage_unref(coverage);
@@ -311,7 +311,7 @@ int PangoFontInfo::DropUncoveredChars(std::string *utf8_text) const {
     my_strnmove(out, utf8_char, utf8_len);
     out += utf8_len;
   }
-#if PANGO_VERSION_CHECK(1, 52, 0)
+#if PANGO_VERSION_CHECK(1, 50, 4)
   g_object_unref(coverage);
 #else
   pango_coverage_unref(coverage);
@@ -615,7 +615,7 @@ int FontUtils::FontScore(const std::unordered_map<char32, int64_t> &ch_map,
       ch_flags->push_back(covered);
     }
   }
-#if PANGO_VERSION_CHECK(1, 52, 0)
+#if PANGO_VERSION_CHECK(1, 50, 4)
   g_object_unref(coverage);
 #else
   pango_coverage_unref(coverage);
","{'added': [(233, '#if PANGO_VERSION_CHECK(1, 50, 4)'), (242, '#if PANGO_VERSION_CHECK(1, 50, 4)'), (314, '#if PANGO_VERSION_CHECK(1, 50, 4)'), (618, '#if PANGO_VERSION_CHECK(1, 50, 4)')], 'deleted': [(233, '#if PANGO_VERSION_CHECK(1, 52, 0)'), (242, '#if PANGO_VERSION_CHECK(1, 52, 0)'), (314, '#if PANGO_VERSION_CHECK(1, 52, 0)'), (618, '#if PANGO_VERSION_CHECK(1, 52, 0)')]}",yes
unittest\README.md,unittest\README.md,dcb2ef91e852e8360ca73f2c9895d0b65e86d0c1,2a944fbe98ed4408a5f0fd5693c398a9cebaf6d4,"Update README.md

add info about using egorpugin/tessdata tessdata_unittest","@@ -82,6 +82,9 @@ To run the tests, do the following in tesseract folder
 ```
 autoreconf -fiv
 git submodule update --init
+git clone https://github.com/egorpugin/tessdata tessdata_unittest --depth 1
+cp tessdata_unittest/fonts/* test/testing/
+mv tessdata_unittest/* ../
 export TESSDATA_PREFIX=/prefix/to/path/to/tessdata
 make check
 ```
","{'added': [(85, 'git clone https://github.com/egorpugin/tessdata tessdata_unittest --depth 1'), (86, 'cp tessdata_unittest/fonts/* test/testing/'), (87, 'mv tessdata_unittest/* ../')], 'deleted': []}",yes
src\ccutil\tprintf.h,src\ccutil\tprintf.h,2a944fbe98ed4408a5f0fd5693c398a9cebaf6d4,d95e9f7905cc9427d4d2d351e3ea696e98739004,tprintf: pacify clang warning.,"@@ -33,8 +33,11 @@ TESS_API FILE *get_debugfp();
 
 // Main logging function. Trace printf.
 template <typename ... Types>
-auto tprintf(const char *format, Types && ... args) {
-  return fprintf(get_debugfp(), format, std::forward<Types>(args)...);
+auto tprintf(Types && ... args) {
+#pragma clang diagnostic push
+#pragma clang diagnostic ignored ""-Wformat-security""
+  return fprintf(get_debugfp(), std::forward<Types>(args)...);
+#pragma clang diagnostic pop
 }
 
 } // namespace tesseract
","{'added': [(36, 'auto tprintf(Types && ... args) {'), (37, '#pragma clang diagnostic push'), (38, '#pragma clang diagnostic ignored ""-Wformat-security""'), (39, '  return fprintf(get_debugfp(), std::forward<Types>(args)...);'), (40, '#pragma clang diagnostic pop')], 'deleted': [(36, 'auto tprintf(const char *format, Types && ... args) {'), (37, '  return fprintf(get_debugfp(), format, std::forward<Types>(args)...);')]}",yes
src\ccutil\tprintf.h,src\ccutil\tprintf.h,d95e9f7905cc9427d4d2d351e3ea696e98739004,8cb04183c1953f9889558986a786d46bcd832395,Add mandatory format argument to tpritnf().,"@@ -33,8 +33,8 @@ TESS_API FILE *get_debugfp();
 
 // Main logging function. Trace printf.
 template <typename ... Types>
-auto tprintf(Types && ... args) {
-  return fprintf(get_debugfp(), std::forward<Types>(args)...);
+auto tprintf(const char *format, Types && ... args) {
+  return fprintf(get_debugfp(), format, std::forward<Types>(args)...);
 }
 
 } // namespace tesseract
","{'added': [(36, 'auto tprintf(const char *format, Types && ... args) {'), (37, '  return fprintf(get_debugfp(), format, std::forward<Types>(args)...);')], 'deleted': [(36, 'auto tprintf(Types && ... args) {'), (37, '  return fprintf(get_debugfp(), std::forward<Types>(args)...);')]}",yes
src\ccutil\tprintf.cpp,src\ccutil\tprintf.cpp,8cb04183c1953f9889558986a786d46bcd832395,3299901b9c966cfe37570040070f16c40725d176,Convert tprintf() to C++ style without va args and attributes.,"@@ -70,15 +70,6 @@ FILE *get_debugfp() {
   return debugfp;
 }
 
-// Trace printf.
-void tprintf(const char *format, ...) {
-  FILE *f = get_debugfp();
-  va_list args;           // variable args
-  va_start(args, format); // variable list
-  vfprintf(f, format, args);
-  va_end(args);
-}
-
 TessErrStream tesserr;
 
 } // namespace tesseract
","{'added': [], 'deleted': [(73, '// Trace printf.'), (74, 'void tprintf(const char *format, ...) {'), (75, '  FILE *f = get_debugfp();'), (76, '  va_list args;           // variable args'), (77, '  va_start(args, format); // variable list'), (78, '  vfprintf(f, format, args);'), (79, '  va_end(args);'), (80, '}'), (81, '')]}",yes
src\ccutil\tprintf.h,src\ccutil\tprintf.h,8cb04183c1953f9889558986a786d46bcd832395,3299901b9c966cfe37570040070f16c40725d176,Convert tprintf() to C++ style without va args and attributes.,"@@ -21,26 +21,22 @@
 
 #include ""params.h""           // for INT_VAR_H
 #include <tesseract/export.h> // for TESS_API
+#include <utility>            // for std::forward
 
 namespace tesseract {
 
-#if !defined(__GNUC__) && !defined(__attribute__)
-# define __attribute__(attr) // compiler without support for __attribute__
-#endif
-
 // Disable some log messages by setting log_level > 0.
 extern TESS_API INT_VAR_H(log_level);
 
-// Main logging function.
-extern TESS_API void tprintf( // Trace printf
-    const char *format, ...)  // Message
-    __attribute__((format(printf, 1, 2)));
-
 // Get file for debug output.
-FILE *get_debugfp();
+TESS_API FILE *get_debugfp();
 
-} // namespace tesseract
+// Main logging function. Trace printf.
+template <typename ... Types>
+auto tprintf(Types && ... args) {
+  return fprintf(get_debugfp(), std::forward<Types>(args)...);
+}
 
-#undef __attribute__
+} // namespace tesseract
 
 #endif // define TESSERACT_CCUTIL_TPRINTF_H
","{'added': [(24, '#include <utility>            // for std::forward'), (32, 'TESS_API FILE *get_debugfp();'), (34, '// Main logging function. Trace printf.'), (35, 'template <typename ... Types>'), (36, 'auto tprintf(Types && ... args) {'), (37, '  return fprintf(get_debugfp(), std::forward<Types>(args)...);'), (38, '}'), (40, '} // namespace tesseract')], 'deleted': [(27, '#if !defined(__GNUC__) && !defined(__attribute__)'), (28, '# define __attribute__(attr) // compiler without support for __attribute__'), (29, '#endif'), (30, ''), (34, '// Main logging function.'), (35, 'extern TESS_API void tprintf( // Trace printf'), (36, '    const char *format, ...)  // Message'), (37, '    __attribute__((format(printf, 1, 2)));'), (38, ''), (40, 'FILE *get_debugfp();'), (42, '} // namespace tesseract'), (44, '#undef __attribute__')]}",yes
src\ccmain\thresholder.cpp,src\ccmain\thresholder.cpp,3299901b9c966cfe37570040070f16c40725d176,d1fbbb88fc65a6c62259495e3e33f4450cadb39a,handle colormaps correctly - fixes #4127,"@@ -283,30 +283,24 @@ bool ImageThresholder::ThresholdToPix(Image *pix) {
     tprintf(""Image too large: (%d, %d)\n"", image_width_, image_height_);
     return false;
   }
-  Image original = GetPixRect();
+  // Handle binary image
   if (pix_channels_ == 0) {
     // We have a binary image, but it still has to be copied, as this API
     // allows the caller to modify the output.
+    Image original = GetPixRect();
     *pix = original.copy();
-  } else {
-    if (pixGetColormap(original)) {
-      Image tmp;
-      Image without_cmap =
-          pixRemoveColormap(original, REMOVE_CMAP_BASED_ON_SRC);
-      int depth = pixGetDepth(without_cmap);
-      if (depth > 1 && depth < 8) {
-        tmp = pixConvertTo8(without_cmap, false);
-      } else {
-        tmp = without_cmap.copy();
-      }
-      without_cmap.destroy();
-      OtsuThresholdRectToPix(tmp, pix);
-      tmp.destroy();
-    } else {
-      OtsuThresholdRectToPix(pix_, pix);
-    }
+    original.destroy();
+    return true;
+  }
+  // Handle colormaps
+  Image src = pix_;
+  if (pixGetColormap(src)) {
+    src = pixRemoveColormap(src, REMOVE_CMAP_BASED_ON_SRC);
+  }
+  OtsuThresholdRectToPix(src, pix);
+  if (src != pix_) {
+    src.destroy();
   }
-  original.destroy();
   return true;
 }
 
","{'added': [(286, '  // Handle binary image'), (290, '    Image original = GetPixRect();'), (292, '    original.destroy();'), (293, '    return true;'), (294, '  }'), (295, '  // Handle colormaps'), (296, '  Image src = pix_;'), (297, '  if (pixGetColormap(src)) {'), (298, '    src = pixRemoveColormap(src, REMOVE_CMAP_BASED_ON_SRC);'), (299, '  }'), (300, '  OtsuThresholdRectToPix(src, pix);'), (301, '  if (src != pix_) {'), (302, '    src.destroy();')], 'deleted': [(286, '  Image original = GetPixRect();'), (291, '  } else {'), (292, '    if (pixGetColormap(original)) {'), (293, '      Image tmp;'), (294, '      Image without_cmap ='), (295, '          pixRemoveColormap(original, REMOVE_CMAP_BASED_ON_SRC);'), (296, '      int depth = pixGetDepth(without_cmap);'), (297, '      if (depth > 1 && depth < 8) {'), (298, '        tmp = pixConvertTo8(without_cmap, false);'), (299, '      } else {'), (300, '        tmp = without_cmap.copy();'), (301, '      }'), (302, '      without_cmap.destroy();'), (303, '      OtsuThresholdRectToPix(tmp, pix);'), (304, '      tmp.destroy();'), (305, '    } else {'), (306, '      OtsuThresholdRectToPix(pix_, pix);'), (307, '    }'), (309, '  original.destroy();')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,d1fbbb88fc65a6c62259495e3e33f4450cadb39a,ede08698aa32e62ba637eabb3ba7a0f8e6baba69,"Update cmake-win64.yml

cmake (win64) GithutAction: stop uninstalling strawberryperl; use png 1.6.44","@@ -9,7 +9,7 @@ on:
 
 env:
   ILOC: d:/a/local
-  png_ver: 1643
+  png_ver: 1644
 
 jobs:
   build:
@@ -37,9 +37,9 @@ jobs:
         run: |
              mkdir ${{env.ILOC}}
 
-      - name: Uninstall Perl
-        run: |
-          choco uninstall strawberryperl
+      #- name: Uninstall Perl
+      #  run: |
+      #    choco uninstall strawberryperl
 
       - name: Build and Install zlib-ng
         shell: cmd
","{'added': [(12, '  png_ver: 1644'), (40, '      #- name: Uninstall Perl'), (41, '      #  run: |'), (42, '      #    choco uninstall strawberryperl')], 'deleted': [(12, '  png_ver: 1643'), (40, '      - name: Uninstall Perl'), (41, '        run: |'), (42, '          choco uninstall strawberryperl')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,ede08698aa32e62ba637eabb3ba7a0f8e6baba69,0a9df94fffffb2182836e69b7a33d4d455a34fc7,"Update cmake-win64.yml

try to change schedule time to solve `- strawberryperl -  Auto uninstaller failed. Please remove machine installation manually.`","@@ -4,7 +4,7 @@ name: cmake-win64
 on:
   #push:
   schedule:
-    - cron: 0 23 * * *
+    - cron: 0 5 * * *
   workflow_dispatch:
 
 env:
","{'added': [(7, '    - cron: 0 5 * * *')], 'deleted': [(7, '    - cron: 0 23 * * *')]}",yes
src\tesseract.cpp,src\tesseract.cpp,0a9df94fffffb2182836e69b7a33d4d455a34fc7,2e5a114bd2aab932b53e103d1391e7f27d2d8cff,Wrap main() into try catch.,"@@ -648,7 +648,7 @@ static void PreloadRenderers(tesseract::TessBaseAPI &api,
  *
  **********************************************************************/
 
-int main(int argc, char **argv) {
+int main1(int argc, char **argv) {
 #if defined(__USE_GNU) && defined(HAVE_FEENABLEEXCEPT)
   // Raise SIGFPE.
 #  if defined(__clang__)
@@ -852,3 +852,14 @@ int main(int argc, char **argv) {
 
   return ret_val;
 }
+
+int main(int argc, char **argv) {
+  try {
+    return main1(argc, argv);
+  } catch (std::exception &e) {
+    std::cerr << ""exception: "" << e.what() << ""\n"";
+  } catch (...) {
+    std::cerr << ""unknown exception\n"";
+  }
+  return 1;
+}
","{'added': [(651, 'int main1(int argc, char **argv) {'), (855, ''), (856, 'int main(int argc, char **argv) {'), (857, '  try {'), (858, '    return main1(argc, argv);'), (859, '  } catch (std::exception &e) {'), (860, '    std::cerr << ""exception: "" << e.what() << ""\\n"";'), (861, '  } catch (...) {'), (862, '    std::cerr << ""unknown exception\\n"";'), (863, '  }'), (864, '  return 1;'), (865, '}')], 'deleted': [(651, 'int main(int argc, char **argv) {')]}",yes
src\tesseract.cpp,src\tesseract.cpp,2e5a114bd2aab932b53e103d1391e7f27d2d8cff,6f67d263549837f69e815b759a36cd7c961bd5ab,add cli `-c` parameter(s) to init vectors (#4363),"@@ -273,32 +273,6 @@ static void PrintHelpMessage(const char *program) {
       program, program, program);
 }
 
-static bool SetVariablesFromCLArgs(tesseract::TessBaseAPI &api, int argc, char **argv) {
-  bool success = true;
-  char opt1[256], opt2[255];
-  for (int i = 0; i < argc; i++) {
-    if (strcmp(argv[i], ""-c"") == 0 && i + 1 < argc) {
-      strncpy(opt1, argv[i + 1], 255);
-      opt1[255] = '\0';
-      char *p = strchr(opt1, '=');
-      if (!p) {
-        fprintf(stderr, ""Missing = in configvar assignment\n"");
-        success = false;
-        break;
-      }
-      *p = 0;
-      strncpy(opt2, strchr(argv[i + 1], '=') + 1, sizeof(opt2) - 1);
-      opt2[254] = 0;
-      ++i;
-
-      if (!api.SetVariable(opt1, opt2)) {
-        fprintf(stderr, ""Could not set option: %s=%s\n"", opt1, opt2);
-      }
-    }
-  }
-  return success;
-}
-
 static void PrintLangsList(tesseract::TessBaseAPI &api) {
   std::vector<std::string> languages;
   api.GetAvailableLanguagesAsVector(&languages);
@@ -485,7 +459,16 @@ static bool ParseArgs(int argc, char **argv, const char **lang, const char **ima
       *print_fonts_table = true;
 #endif  // ndef DISABLED_LEGACY_ENGINE
     } else if (strcmp(argv[i], ""-c"") == 0 && i + 1 < argc) {
-      // handled properly after api init
+      const std::string argument(argv[i + 1]);
+      const auto equal_pos = argument.find('=');
+      if (equal_pos == std::string::npos) {
+          throw std::invalid_argument(""Missing '=' in configvar assignment"");
+      }
+      // Extract key and value
+      const std::string key = argument.substr(0, equal_pos);
+      const std::string value = argument.substr(equal_pos + 1);
+      vars_vec->push_back(key);
+      vars_values->push_back(value);
       ++i;
     } else if (*image == nullptr) {
       *image = argv[i];
@@ -736,10 +719,6 @@ int main(int argc, char **argv) {
   const int init_failed = api.Init(datapath, lang, enginemode, &(argv[arg_i]), argc - arg_i,
                                    &vars_vec, &vars_values, false);
 
-  if (!SetVariablesFromCLArgs(api, argc, argv)) {
-    return EXIT_FAILURE;
-  }
-
   // SIMD settings might be overridden by config variable.
   tesseract::SIMDDetect::Update();
 
","{'added': [(462, '      const std::string argument(argv[i + 1]);'), (463, ""      const auto equal_pos = argument.find('=');""), (464, '      if (equal_pos == std::string::npos) {'), (465, '          throw std::invalid_argument(""Missing \'=\' in configvar assignment"");'), (466, '      }'), (467, '      // Extract key and value'), (468, '      const std::string key = argument.substr(0, equal_pos);'), (469, '      const std::string value = argument.substr(equal_pos + 1);'), (470, '      vars_vec->push_back(key);'), (471, '      vars_values->push_back(value);')], 'deleted': [(276, 'static bool SetVariablesFromCLArgs(tesseract::TessBaseAPI &api, int argc, char **argv) {'), (277, '  bool success = true;'), (278, '  char opt1[256], opt2[255];'), (279, '  for (int i = 0; i < argc; i++) {'), (280, '    if (strcmp(argv[i], ""-c"") == 0 && i + 1 < argc) {'), (281, '      strncpy(opt1, argv[i + 1], 255);'), (282, ""      opt1[255] = '\\0';""), (283, ""      char *p = strchr(opt1, '=');""), (284, '      if (!p) {'), (285, '        fprintf(stderr, ""Missing = in configvar assignment\\n"");'), (286, '        success = false;'), (287, '        break;'), (288, '      }'), (289, '      *p = 0;'), (290, ""      strncpy(opt2, strchr(argv[i + 1], '=') + 1, sizeof(opt2) - 1);""), (291, '      opt2[254] = 0;'), (292, '      ++i;'), (293, ''), (294, '      if (!api.SetVariable(opt1, opt2)) {'), (295, '        fprintf(stderr, ""Could not set option: %s=%s\\n"", opt1, opt2);'), (296, '      }'), (297, '    }'), (298, '  }'), (299, '  return success;'), (300, '}'), (301, ''), (488, '      // handled properly after api init'), (739, '  if (!SetVariablesFromCLArgs(api, argc, argv)) {'), (740, '    return EXIT_FAILURE;'), (741, '  }'), (742, '')]}",yes
CMakeLists.txt,CMakeLists.txt,6f67d263549837f69e815b759a36cd7c961bd5ab,c1bb752ed5574f077ac72cb2c65e3ba25b3c50a3,"cmake: get rid off warning ""D9025: overriding '/openmp' with '/openmp:llvm'"" (cmake >= 3.30 needed)","@@ -320,7 +320,10 @@ if(OPENMP_BUILD
   set(OPENMP_BUILD OFF)
 endif()
 if(OPENMP_BUILD)
-  find_package(OpenMP QUIET)
+  if(MSVC)  # supported from cmake 3.30
+    set(OpenMP_RUNTIME_MSVC ""llvm"")
+  endif(MSVC)
+  find_package(OpenMP)
   # https://stackoverflow.com/questions/12399422
   # how-to-set-linker-flags-for-openmp-in-cmakes-try-compile-function
   if(NOT OpenMP_FOUND
","{'added': [(323, '  if(MSVC)  # supported from cmake 3.30'), (324, '    set(OpenMP_RUNTIME_MSVC ""llvm"")'), (325, '  endif(MSVC)'), (326, '  find_package(OpenMP)')], 'deleted': [(323, '  find_package(OpenMP QUIET)')]}",yes
src\ccstruct\imagedata.cpp,src\ccstruct\imagedata.cpp,c1bb752ed5574f077ac72cb2c65e3ba25b3c50a3,9f17a3fdd0da907573cbef99ebb73a014b55563a,"Simplify and clean code related to class TRand

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -526,7 +526,8 @@ void DocumentData::Shuffle() {
   TRand random;
   // Different documents get shuffled differently, but the same for the same
   // name.
-  random.set_seed(document_name_.c_str());
+  std::hash<std::string> hasher;
+  random.set_seed(static_cast<uint64_t>(hasher(document_name_)));
   int num_pages = pages_.size();
   // Execute one random swap for each page in the document.
   for (int i = 0; i < num_pages; ++i) {
","{'added': [(529, '  std::hash<std::string> hasher;'), (530, '  random.set_seed(static_cast<uint64_t>(hasher(document_name_)));')], 'deleted': [(529, '  random.set_seed(document_name_.c_str());')]}",yes
src\ccutil\helpers.h,src\ccutil\helpers.h,c1bb752ed5574f077ac72cb2c65e3ba25b3c50a3,9f17a3fdd0da907573cbef99ebb73a014b55563a,"Simplify and clean code related to class TRand

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -24,9 +24,7 @@
 #include <climits> // for INT_MIN, INT_MAX
 #include <cmath> // std::isfinite
 #include <cstdio>
-#include <cstring>
 #include <algorithm>  // for std::find
-#include <functional>
 #include <string>
 #include <vector>
 
@@ -77,11 +75,6 @@ public:
   void set_seed(uint64_t seed) {
     seed_ = seed;
   }
-  // Sets the seed using a hash of a string.
-  void set_seed(const std::string &str) {
-    std::hash<std::string> hasher;
-    set_seed(static_cast<uint64_t>(hasher(str)));
-  }
 
   // Returns an integer in the range 0 to INT32_MAX.
   int32_t IntRand() {
","{'added': [], 'deleted': [(27, '#include <cstring>'), (29, '#include <functional>'), (80, '  // Sets the seed using a hash of a string.'), (81, '  void set_seed(const std::string &str) {'), (82, '    std::hash<std::string> hasher;'), (83, '    set_seed(static_cast<uint64_t>(hasher(str)));'), (84, '  }')]}",yes
src\lstm\lstmrecognizer.h,src\lstm\lstmrecognizer.h,c1bb752ed5574f077ac72cb2c65e3ba25b3c50a3,9f17a3fdd0da907573cbef99ebb73a014b55563a,"Simplify and clean code related to class TRand

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -286,7 +286,7 @@ public:
 protected:
   // Sets the random seed from the sample_iteration_;
   void SetRandomSeed() {
-    int64_t seed = static_cast<int64_t>(sample_iteration_) * 0x10000001;
+    int64_t seed = sample_iteration_ * 0x10000001LL;
     randomizer_.set_seed(seed);
     randomizer_.IntRand();
   }
","{'added': [(289, '    int64_t seed = sample_iteration_ * 0x10000001LL;')], 'deleted': [(289, '    int64_t seed = static_cast<int64_t>(sample_iteration_) * 0x10000001;')]}",yes
src\ccutil\errcode.cpp,src\ccutil\errcode.cpp,9f17a3fdd0da907573cbef99ebb73a014b55563a,6d7ec87ee82d884ecd9faa9ae3ad2a77b91069d7,Move small function into a header.,"@@ -86,8 +86,4 @@ void ERRCODE::error(         // handle error
   }
 }
 
-void ERRCODE::error(const char *caller, TessErrorLogCode action) const {
-  error(caller, action, nullptr);
-}
-
 } // namespace tesseract
","{'added': [], 'deleted': [(89, 'void ERRCODE::error(const char *caller, TessErrorLogCode action) const {'), (90, '  error(caller, action, nullptr);'), (91, '}'), (92, '')]}",yes
src\ccutil\errcode.h,src\ccutil\errcode.h,9f17a3fdd0da907573cbef99ebb73a014b55563a,6d7ec87ee82d884ecd9faa9ae3ad2a77b91069d7,Move small function into a header.,"@@ -43,7 +43,9 @@ public:
       TessErrorLogCode action, // action to take
       const char *format, ...  // fprintf format
   ) const __attribute__((format(printf, 4, 5)));
-  void error(const char *caller, TessErrorLogCode action) const;
+  void error(const char *caller, TessErrorLogCode action) const {
+    error(caller, action, nullptr);
+  }
   constexpr ERRCODE(const char *string) : message(string) {} // initialize with string
 };
 
","{'added': [(46, '  void error(const char *caller, TessErrorLogCode action) const {'), (47, '    error(caller, action, nullptr);'), (48, '  }')], 'deleted': [(46, '  void error(const char *caller, TessErrorLogCode action) const;')]}",yes
src\ccutil\clst.h,src\ccutil\clst.h,6d7ec87ee82d884ecd9faa9ae3ad2a77b91069d7,363bf4e00d5fe10b12f06182253cc169245abef3,Rename lists internally.,"@@ -33,59 +33,57 @@ namespace tesseract {
  * Generic list class for singly linked CONS cell lists
  **********************************************************************/
 
-template <typename CLASSNAME>
-class CLIST {
-  friend class LINK;
-  //friend class ITERATOR;
+template <typename T>
+class ConsList {
+  friend class Link;
 
 public:
-
   /**********************************************************************
-   *              CLASS - LINK
+   *              CLASS - Link
    *
    *              Generic link class for singly linked CONS cell lists
    *
    *  Note:  No destructor - elements are assumed to be destroyed EITHER after
-   *  they have been extracted from a list OR by the CLIST destructor which
+   *  they have been extracted from a list OR by the ConsList destructor which
    *  walks the list.
    **********************************************************************/
-  struct LINK {
-    LINK *next{};
-    CLASSNAME *data{};
+  struct Link {
+    Link *next{};
+    T *data{};
 
-    LINK() = default;
-    LINK(const LINK &) = delete;
-    void operator=(const LINK &) = delete;
+    Link() = default;
+    Link(const Link &) = delete;
+    void operator=(const Link &) = delete;
   };
 
   /***********************************************************************
-   *              CLASS - ITERATOR
+   *              CLASS - Iterator
    *
    *              Generic iterator class for singly linked lists with embedded
    *links
    **********************************************************************/
-  class ITERATOR {
-    CLIST *list;                  // List being iterated
-    LINK *prev;             // prev element
-    LINK *current;          // current element
-    LINK *next;             // next element
-    LINK *cycle_pt;         // point we are cycling the list to.
+  class Iterator {
+    ConsList *list;                  // List being iterated
+    Link *prev;             // prev element
+    Link *current;          // current element
+    Link *next;             // next element
+    Link *cycle_pt;         // point we are cycling the list to.
     bool ex_current_was_last;     // current extracted was end of list
     bool ex_current_was_cycle_pt; // current extracted was cycle point
     bool started_cycling;         // Have we moved off the start?
 
     /***********************************************************************
-     *              ITERATOR::extract_sublist()
+     *              Iterator::extract_sublist()
      *
-     *  This is a private member, used only by CLIST::assign_to_sublist.
+     *  This is a private member, used only by ConsList::assign_to_sublist.
      *  Given another iterator for the same list, extract the links from THIS to
      *  OTHER inclusive, link them into a new circular list, and return a
      *  pointer to the last element.
      *  (Can't inline this function because it contains a loop)
      **********************************************************************/
-    LINK *extract_sublist(  // from this current
-      ITERATOR *other_it) {              // to other current
-      ITERATOR temp_it = *this;
+    Link *extract_sublist(  // from this current
+      Iterator *other_it) {              // to other current
+      Iterator temp_it = *this;
 
       constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
 #ifndef NDEBUG
@@ -93,12 +91,12 @@ public:
       constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
 
       if (list != other_it->list)
-        BAD_EXTRACTION_PTS.error(""ITERATOR.extract_sublist"", ABORT);
+        BAD_EXTRACTION_PTS.error(""Iterator.extract_sublist"", ABORT);
       if (list->empty())
-        EMPTY_LIST.error(""ITERATOR::extract_sublist"", ABORT);
+        EMPTY_LIST.error(""Iterator::extract_sublist"", ABORT);
 
       if (!current || !other_it->current)
-        DONT_EXTRACT_DELETED.error(""ITERATOR.extract_sublist"", ABORT);
+        DONT_EXTRACT_DELETED.error(""Iterator.extract_sublist"", ABORT);
 #endif
 
       ex_current_was_last = other_it->ex_current_was_last = false;
@@ -108,7 +106,7 @@ public:
       temp_it.mark_cycle_pt();
       do {                         // walk sublist
         if (temp_it.cycled_list()) { // can't find end pt
-          BAD_SUBLIST.error(""ITERATOR.extract_sublist"", ABORT);
+          BAD_SUBLIST.error(""Iterator.extract_sublist"", ABORT);
         }
 
         if (temp_it.at_last()) {
@@ -146,28 +144,28 @@ public:
     }
 
   public:
-    ITERATOR() { // constructor
+    Iterator() { // constructor
       list = nullptr;
     } // unassigned list
 
   /***********************************************************************
-   *              ITERATOR::ITERATOR
+   *              Iterator::Iterator
    *
    *  CONSTRUCTOR - set iterator to specified list;
    **********************************************************************/
-    ITERATOR( // constructor
-      CLIST *list_to_iterate) {
+    Iterator( // constructor
+      ConsList *list_to_iterate) {
       set_to_list(list_to_iterate);
     }
 
     /***********************************************************************
-     *              ITERATOR::set_to_list
+     *              Iterator::set_to_list
      *
      *  (Re-)initialise the iterator to point to the start of the list_to_iterate
      *  over.
      **********************************************************************/
     void set_to_list( // change list
-      CLIST *list_to_iterate) {
+      ConsList *list_to_iterate) {
       list = list_to_iterate;
       prev = list->last;
       current = list->First();
@@ -179,20 +177,20 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::add_after_then_move
+     *              Iterator::add_after_then_move
      *
      *  Add a new element to the list after the current element and move the
      *  iterator to the new element.
      **********************************************************************/
     void add_after_then_move( // add after current &
-      CLASSNAME *new_data) {
+      T *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
-        BAD_PARAMETER.error(""ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""Iterator::add_after_then_move"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
-      auto new_element = new LINK;
+      auto new_element = new Link;
       new_element->data = new_data;
 
       if (list->empty()) {
@@ -222,20 +220,20 @@ public:
     }      // move to new
 
     /***********************************************************************
-     *              ITERATOR::add_after_stay_put
+     *              Iterator::add_after_stay_put
      *
      *  Add a new element to the list after the current element but do not move
      *  the iterator to the new element.
      **********************************************************************/
     void add_after_stay_put( // add after current &
-      CLASSNAME *new_data) {
+      T *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
-        BAD_PARAMETER.error(""ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""Iterator::add_after_stay_put"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
-      auto new_element = new LINK;
+      auto new_element = new Link;
       new_element->data = new_data;
 
       if (list->empty()) {
@@ -267,20 +265,20 @@ public:
     }     // stay at current
 
     /***********************************************************************
-     *              ITERATOR::add_before_then_move
+     *              Iterator::add_before_then_move
      *
      *  Add a new element to the list before the current element and move the
      *  iterator to the new element.
      **********************************************************************/
     void add_before_then_move( // add before current &
-      CLASSNAME *new_data) {
+      T *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
-        BAD_PARAMETER.error(""ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""Iterator::add_before_then_move"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
-      auto new_element = new LINK;
+      auto new_element = new Link;
       new_element->data = new_data;
 
       if (list->empty()) {
@@ -306,20 +304,20 @@ public:
     }       // move to new
 
     /***********************************************************************
-     *              ITERATOR::add_before_stay_put
+     *              Iterator::add_before_stay_put
      *
      *  Add a new element to the list before the current element but don't move the
      *  iterator to the new element.
      **********************************************************************/
     void add_before_stay_put( // add before current &
-      CLASSNAME *new_data) {
+      T *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
-        BAD_PARAMETER.error(""ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""Iterator::add_before_stay_put"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
-      auto new_element = new LINK;
+      auto new_element = new Link;
       new_element->data = new_data;
 
       if (list->empty()) {
@@ -346,14 +344,14 @@ public:
     }      // stay at current
 
     /***********************************************************************
-     *              ITERATOR::add_list_after
+     *              Iterator::add_list_after
      *
      *  Insert another list to this list after the current element but don't move
      *the
      *  iterator.
      **********************************************************************/
     void add_list_after(     // add a list &
-      CLIST *list_to_add) {
+      ConsList *list_to_add) {
       if (!list_to_add->empty()) {
         if (list->empty()) {
           list->last = list_to_add->last;
@@ -384,14 +382,14 @@ public:
     } // stay at current
 
     /***********************************************************************
-     *              ITERATOR::add_list_before
+     *              Iterator::add_list_before
      *
      *  Insert another list to this list before the current element. Move the
      *  iterator to the start of the inserted elements
      *  iterator.
      **********************************************************************/
     void add_list_before(    // add a list &
-      CLIST *list_to_add) {
+      ConsList *list_to_add) {
       if (!list_to_add->empty()) {
         if (list->empty()) {
           list->last = list_to_add->last;
@@ -419,33 +417,33 @@ public:
       }
     } // move to it 1st item
 
-    CLASSNAME *data() { // get current data
+    T *data() { // get current data
 #ifndef NDEBUG
       if (!list) {
-        NO_LIST.error(""ITERATOR::data"", ABORT);
+        NO_LIST.error(""Iterator::data"", ABORT);
       }
 #endif
       return current->data;
     }
 
     /***********************************************************************
-     *              ITERATOR::data_relative
+     *              Iterator::data_relative
      *
      *  Return the data pointer to the element ""offset"" elements from current.
      *  ""offset"" must not be less than -1.
      *  (This function can't be INLINEd because it contains a loop)
      **********************************************************************/
-    CLASSNAME *data_relative(  // get data + or - ...
+    T *data_relative(  // get data + or - ...
       int8_t offset) {                 // offset from current
-      LINK *ptr;
+      Link *ptr;
 
 #ifndef NDEBUG
       if (!list)
-        NO_LIST.error(""ITERATOR::data_relative"", ABORT);
+        NO_LIST.error(""Iterator::data_relative"", ABORT);
       if (list->empty())
-        EMPTY_LIST.error(""ITERATOR::data_relative"", ABORT);
+        EMPTY_LIST.error(""Iterator::data_relative"", ABORT);
       if (offset < -1)
-        BAD_PARAMETER.error(""ITERATOR::data_relative"", ABORT, ""offset < -l"");
+        BAD_PARAMETER.error(""Iterator::data_relative"", ABORT, ""offset < -l"");
 #endif
 
       if (offset == -1) {
@@ -460,12 +458,12 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::forward
+     *              Iterator::forward
      *
      *  Move the iterator to the next element of the list.
      *  REMEMBER: ALL LISTS ARE CIRCULAR.
      **********************************************************************/
-    CLASSNAME *forward() {
+    T *forward() {
       if (list->empty()) {
         return nullptr;
       }
@@ -488,18 +486,18 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::extract
+     *              Iterator::extract
      *
      *  Do extraction by removing current from the list, deleting the cons cell
      *  and returning the data to the caller, but NOT updating the iterator.  (So
      *  that any calling loop can do this.)  The iterator's current points to
      *  nullptr.  If the data is to be deleted, this is the callers responsibility.
      **********************************************************************/
-    CLASSNAME *extract() {
+    T *extract() {
 #ifndef NDEBUG
       if (!current) { // list empty or
         // element extracted
-        NULL_CURRENT.error(""ITERATOR::extract"", ABORT);
+        NULL_CURRENT.error(""Iterator::extract"", ABORT);
       }
 #endif
 
@@ -525,12 +523,12 @@ public:
     } // remove from list
 
     /***********************************************************************
-     *              ITERATOR::move_to_first()
+     *              Iterator::move_to_first()
      *
      *  Move current so that it is set to the start of the list.
      *  Return data just in case anyone wants it.
      **********************************************************************/
-    CLASSNAME *move_to_first() {
+    T *move_to_first() {
       current = list->First();
       prev = list->last;
       next = current != nullptr ? current->next : nullptr;
@@ -538,13 +536,13 @@ public:
     } // go to start of list
 
     /***********************************************************************
-     *              ITERATOR::move_to_last()
+     *              Iterator::move_to_last()
      *
      *  Move current so that it is set to the end of the list.
      *  Return data just in case anyone wants it.
      *  (This function can't be INLINEd because it contains a loop)
      **********************************************************************/
-    CLASSNAME *move_to_last() {
+    T *move_to_last() {
       while (current != list->last) {
         forward();
       }
@@ -557,7 +555,7 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::mark_cycle_pt()
+     *              Iterator::mark_cycle_pt()
      *
      *  Remember the current location so that we can tell whether we've returned
      *  to this point later.
@@ -569,7 +567,7 @@ public:
     void mark_cycle_pt() {
 #ifndef NDEBUG
       if (!list) {
-        NO_LIST.error(""ITERATOR::mark_cycle_pt"", ABORT);
+        NO_LIST.error(""Iterator::mark_cycle_pt"", ABORT);
       }
 #endif
 
@@ -590,7 +588,7 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::at_first()
+     *              Iterator::at_first()
      *
      *  Are we at the start of the list?
      *
@@ -603,7 +601,7 @@ public:
     } // Current is first?
 
     /***********************************************************************
-     *              ITERATOR::at_last()
+     *              Iterator::at_last()
      *
      *  Are we at the end of the list?
      *
@@ -616,7 +614,7 @@ public:
     } // Current is last?
 
     /***********************************************************************
-     *              ITERATOR::cycled_list()
+     *              Iterator::cycled_list()
      *
      *  Have we returned to the cycle_pt since it was set?
      *
@@ -626,7 +624,7 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::add_to_end
+     *              Iterator::add_to_end
      *
      *  Add a new element to the end of the list without moving the iterator.
      *  This is provided because a single linked list cannot move to the last as
@@ -635,13 +633,13 @@ public:
                   queues.
     **********************************************************************/
     void add_to_end(  // element to add
-      CLASSNAME *new_data) {
+      T *new_data) {
 #ifndef NDEBUG
       if (!list) {
-        NO_LIST.error(""ITERATOR::add_to_end"", ABORT);
+        NO_LIST.error(""Iterator::add_to_end"", ABORT);
       }
       if (!new_data) {
-        BAD_PARAMETER.error(""ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""Iterator::add_to_end"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
@@ -652,7 +650,7 @@ public:
           this->add_before_stay_put(new_data);
           list->last = prev;
         } else { // Iteratr is elsewhere
-          auto new_element = new LINK;
+          auto new_element = new Link;
           new_element->data = new_data;
 
           new_element->next = list->last->next;
@@ -663,7 +661,7 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::exchange()
+     *              Iterator::exchange()
      *
      *  Given another iterator, whose current element is a different element on
      *  the same list list OR an element of another list, exchange the two current
@@ -672,7 +670,7 @@ public:
      *  (This function hasn't been in-lined because its a bit big!)
      **********************************************************************/
     void exchange(                 // positions of 2 links
-      ITERATOR *other_it) { // other iterator
+      Iterator *other_it) { // other iterator
       constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
 
       /* Do nothing if either list is empty or if both iterators reference the same
@@ -685,7 +683,7 @@ public:
       /* Error if either current element is deleted */
 
       if (!current || !other_it->current) {
-        DONT_EXCHANGE_DELETED.error(""ITERATOR.exchange"", ABORT);
+        DONT_EXCHANGE_DELETED.error(""Iterator.exchange"", ABORT);
       }
 
       /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements
@@ -747,7 +745,7 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::length()
+     *              Iterator::length()
      *
      *  Return the length of the list
      *
@@ -757,38 +755,39 @@ public:
     }
 
     /***********************************************************************
-     *              ITERATOR::sort()
+     *              Iterator::sort()
      *
      *  Sort the elements of the list, then reposition at the start.
      *
      **********************************************************************/
     void sort(     // sort elements
       int comparator(               // comparison routine
-        const CLASSNAME *, const CLASSNAME *)) {
+        const T *, const T *)) {
       list->sort(comparator);
       move_to_first();
     }
   };
+  using ITERATOR = Iterator; // compat
 
 private:
-  LINK *last = nullptr; // End of list
+  Link *last = nullptr; // End of list
 
   //(Points to head)
-  LINK *First() { // return first
+  Link *First() { // return first
     return last != nullptr ? last->next : nullptr;
   }
 
-  const LINK *First() const { // return first
+  const Link *First() const { // return first
     return last != nullptr ? last->next : nullptr;
   }
 
 public:
-  ~CLIST() { // destructor
+  ~ConsList() { // destructor
     shallow_clear();
   }
 
   /***********************************************************************
-   *              CLIST::internal_deep_clear
+   *              ConsList::internal_deep_clear
    *
    *  Used by the ""deep_clear"" member function of derived list
    *  classes to destroy all the elements on the list.
@@ -816,7 +815,7 @@ public:
   }
 
   /***********************************************************************
-   *              CLIST::shallow_clear
+   *              ConsList::shallow_clear
    *
    *  Used by the destructor and the ""shallow_clear"" member function of derived
    *  list classes to destroy the list.
@@ -845,12 +844,12 @@ public:
   }
 
   void shallow_copy(      // dangerous!!
-    CLIST *from_list) { // beware destructors!!
+    ConsList *from_list) { // beware destructors!!
     last = from_list->last;
   }
 
   /***********************************************************************
-   *              CLIST::assign_to_sublist
+   *              ConsList::assign_to_sublist
    *
    *  The list is set to a sublist of another list.  ""This"" list must be empty
    *  before this function is invoked.  The two iterators passed must refer to
@@ -862,12 +861,12 @@ public:
    *  end point is always the end_it position.
    **********************************************************************/
   void assign_to_sublist(  // to this list
-    ITERATOR *start_it,  // from list start
-    ITERATOR *end_it) {  // from list end
+    Iterator *start_it,  // from list start
+    Iterator *end_it) {  // from list end
     constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");
 
     if (!empty()) {
-      LIST_NOT_EMPTY.error(""CLIST.assign_to_sublist"", ABORT);
+      LIST_NOT_EMPTY.error(""ConsList.assign_to_sublist"", ABORT);
     }
 
     last = start_it->extract_sublist(end_it);
@@ -885,21 +884,21 @@ public:
   }
 
   /***********************************************************************
-   *              CLIST::sort
+   *              ConsList::sort
    *
    *  Sort elements on list
    **********************************************************************/
   void sort(          // sort elements
     int comparator( // comparison routine
-      const CLASSNAME *, const CLASSNAME *)) {
+      const T *, const T *)) {
     // Allocate an array of pointers, one per list element.
     auto count = length();
     if (count > 0) {
       // ptr array to sort
-      std::vector<CLASSNAME *> base;
+      std::vector<T *> base;
       base.reserve(count);
 
-      ITERATOR it(this);
+      Iterator it(this);
 
       // Extract all elements, putting the pointers in the array.
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
@@ -925,10 +924,10 @@ public:
   // Time is linear to add pre-sorted items to an empty list.
   // If unique, then don't add duplicate entries.
   // Returns true if the element was added to the list.
-  bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_data) {
+  bool add_sorted(int comparator(const T *, const T *), bool unique, T *new_data) {
     // Check for adding at the end.
     if (last == nullptr || comparator(last->data, new_data) < 0) {
-      auto *new_element = new LINK;
+      auto *new_element = new Link;
       new_element->data = new_data;
       if (last == nullptr) {
         new_element->next = new_element;
@@ -940,7 +939,7 @@ public:
       return true;
     } else if (!unique || last->data != new_data) {
       // Need to use an iterator.
-      ITERATOR it(this);
+      Iterator it(this);
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
         auto data = it.data();
         if (data == new_data && unique) {
@@ -965,16 +964,16 @@ public:
   // the set difference minuend - subtrahend to this, being the elements
   // of minuend that do not compare equal to anything in subtrahend.
   // If unique is true, any duplicates in minuend are also eliminated.
-  void set_subtract(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLIST *minuend,
-    CLIST *subtrahend) {
+  void set_subtract(int comparator(const T *, const T *), bool unique, ConsList *minuend,
+    ConsList *subtrahend) {
     shallow_clear();
-    ITERATOR m_it(minuend);
-    ITERATOR s_it(subtrahend);
+    Iterator m_it(minuend);
+    Iterator s_it(subtrahend);
     // Since both lists are sorted, finding the subtras that are not
     // minus is a case of a parallel iteration.
     for (m_it.mark_cycle_pt(); !m_it.cycled_list(); m_it.forward()) {
       auto minu = m_it.data();
-      CLASSNAME *subtra = nullptr;
+      T *subtra = nullptr;
       if (!s_it.empty()) {
         subtra = s_it.data();
         while (!s_it.at_last() && comparator(subtra, minu) < 0) {
@@ -989,11 +988,11 @@ public:
   }
 };
 
-#define CLISTIZEH(CLASSNAME)                                    \
-  class CLASSNAME##_CLIST : public CLIST<CLASSNAME> {           \
-    using CLIST<CLASSNAME>::CLIST;                              \
-  };                                                            \
-  using CLASSNAME##_C_IT = CLIST<CLASSNAME>::ITERATOR;
+#define CLISTIZEH(T)                          \
+  class T##_CLIST : public ConsList<T> {      \
+    using ConsList<T>::ConsList;              \
+  };                                          \
+  using T##_C_IT = ConsList<T>::Iterator;
 
 } // namespace tesseract
 
","{'added': [(36, 'template <typename T>'), (37, 'class ConsList {'), (38, '  friend class Link;'), (42, '   *              CLASS - Link'), (47, '   *  they have been extracted from a list OR by the ConsList destructor which'), (50, '  struct Link {'), (51, '    Link *next{};'), (52, '    T *data{};'), (54, '    Link() = default;'), (55, '    Link(const Link &) = delete;'), (56, '    void operator=(const Link &) = delete;'), (60, '   *              CLASS - Iterator'), (65, '  class Iterator {'), (66, '    ConsList *list;                  // List being iterated'), (67, '    Link *prev;             // prev element'), (68, '    Link *current;          // current element'), (69, '    Link *next;             // next element'), (70, '    Link *cycle_pt;         // point we are cycling the list to.'), (76, '     *              Iterator::extract_sublist()'), (78, '     *  This is a private member, used only by ConsList::assign_to_sublist.'), (84, '    Link *extract_sublist(  // from this current'), (85, '      Iterator *other_it) {              // to other current'), (86, '      Iterator temp_it = *this;'), (94, '        BAD_EXTRACTION_PTS.error(""Iterator.extract_sublist"", ABORT);'), (96, '        EMPTY_LIST.error(""Iterator::extract_sublist"", ABORT);'), (99, '        DONT_EXTRACT_DELETED.error(""Iterator.extract_sublist"", ABORT);'), (109, '          BAD_SUBLIST.error(""Iterator.extract_sublist"", ABORT);'), (147, '    Iterator() { // constructor'), (152, '   *              Iterator::Iterator'), (156, '    Iterator( // constructor'), (157, '      ConsList *list_to_iterate) {'), (162, '     *              Iterator::set_to_list'), (168, '      ConsList *list_to_iterate) {'), (180, '     *              Iterator::add_after_then_move'), (186, '      T *new_data) {'), (189, '        BAD_PARAMETER.error(""Iterator::add_after_then_move"", ABORT, ""new_data is nullptr"");'), (193, '      auto new_element = new Link;'), (223, '     *              Iterator::add_after_stay_put'), (229, '      T *new_data) {'), (232, '        BAD_PARAMETER.error(""Iterator::add_after_stay_put"", ABORT, ""new_data is nullptr"");'), (236, '      auto new_element = new Link;'), (268, '     *              Iterator::add_before_then_move'), (274, '      T *new_data) {'), (277, '        BAD_PARAMETER.error(""Iterator::add_before_then_move"", ABORT, ""new_data is nullptr"");'), (281, '      auto new_element = new Link;'), (307, '     *              Iterator::add_before_stay_put'), (313, '      T *new_data) {'), (316, '        BAD_PARAMETER.error(""Iterator::add_before_stay_put"", ABORT, ""new_data is nullptr"");'), (320, '      auto new_element = new Link;'), (347, '     *              Iterator::add_list_after'), (354, '      ConsList *list_to_add) {'), (385, '     *              Iterator::add_list_before'), (392, '      ConsList *list_to_add) {'), (420, '    T *data() { // get current data'), (423, '        NO_LIST.error(""Iterator::data"", ABORT);'), (430, '     *              Iterator::data_relative'), (436, '    T *data_relative(  // get data + or - ...'), (438, '      Link *ptr;'), (442, '        NO_LIST.error(""Iterator::data_relative"", ABORT);'), (444, '        EMPTY_LIST.error(""Iterator::data_relative"", ABORT);'), (446, '        BAD_PARAMETER.error(""Iterator::data_relative"", ABORT, ""offset < -l"");'), (461, '     *              Iterator::forward'), (466, '    T *forward() {'), (489, '     *              Iterator::extract'), (496, '    T *extract() {'), (500, '        NULL_CURRENT.error(""Iterator::extract"", ABORT);'), (526, '     *              Iterator::move_to_first()'), (531, '    T *move_to_first() {'), (539, '     *              Iterator::move_to_last()'), (545, '    T *move_to_last() {'), (558, '     *              Iterator::mark_cycle_pt()'), (570, '        NO_LIST.error(""Iterator::mark_cycle_pt"", ABORT);'), (591, '     *              Iterator::at_first()'), (604, '     *              Iterator::at_last()'), (617, '     *              Iterator::cycled_list()'), (627, '     *              Iterator::add_to_end'), (636, '      T *new_data) {'), (639, '        NO_LIST.error(""Iterator::add_to_end"", ABORT);'), (642, '        BAD_PARAMETER.error(""Iterator::add_to_end"", ABORT, ""new_data is nullptr"");'), (653, '          auto new_element = new Link;'), (664, '     *              Iterator::exchange()'), (673, '      Iterator *other_it) { // other iterator'), (686, '        DONT_EXCHANGE_DELETED.error(""Iterator.exchange"", ABORT);'), (748, '     *              Iterator::length()'), (758, '     *              Iterator::sort()'), (765, '        const T *, const T *)) {'), (770, '  using ITERATOR = Iterator; // compat'), (773, '  Link *last = nullptr; // End of list'), (776, '  Link *First() { // return first'), (780, '  const Link *First() const { // return first'), (785, '  ~ConsList() { // destructor'), (790, '   *              ConsList::internal_deep_clear'), (818, '   *              ConsList::shallow_clear'), (847, '    ConsList *from_list) { // beware destructors!!'), (852, '   *              ConsList::assign_to_sublist'), (864, '    Iterator *start_it,  // from list start'), (865, '    Iterator *end_it) {  // from list end'), (869, '      LIST_NOT_EMPTY.error(""ConsList.assign_to_sublist"", ABORT);'), (887, '   *              ConsList::sort'), (893, '      const T *, const T *)) {'), (898, '      std::vector<T *> base;'), (901, '      Iterator it(this);'), (927, '  bool add_sorted(int comparator(const T *, const T *), bool unique, T *new_data) {'), (930, '      auto *new_element = new Link;'), (942, '      Iterator it(this);'), (967, '  void set_subtract(int comparator(const T *, const T *), bool unique, ConsList *minuend,'), (968, '    ConsList *subtrahend) {'), (970, '    Iterator m_it(minuend);'), (971, '    Iterator s_it(subtrahend);'), (976, '      T *subtra = nullptr;'), (991, '#define CLISTIZEH(T)                          \\'), (992, '  class T##_CLIST : public ConsList<T> {      \\'), (993, '    using ConsList<T>::ConsList;              \\'), (994, '  };                                          \\'), (995, '  using T##_C_IT = ConsList<T>::Iterator;')], 'deleted': [(36, 'template <typename CLASSNAME>'), (37, 'class CLIST {'), (38, '  friend class LINK;'), (39, '  //friend class ITERATOR;'), (42, ''), (44, '   *              CLASS - LINK'), (49, '   *  they have been extracted from a list OR by the CLIST destructor which'), (52, '  struct LINK {'), (53, '    LINK *next{};'), (54, '    CLASSNAME *data{};'), (56, '    LINK() = default;'), (57, '    LINK(const LINK &) = delete;'), (58, '    void operator=(const LINK &) = delete;'), (62, '   *              CLASS - ITERATOR'), (67, '  class ITERATOR {'), (68, '    CLIST *list;                  // List being iterated'), (69, '    LINK *prev;             // prev element'), (70, '    LINK *current;          // current element'), (71, '    LINK *next;             // next element'), (72, '    LINK *cycle_pt;         // point we are cycling the list to.'), (78, '     *              ITERATOR::extract_sublist()'), (80, '     *  This is a private member, used only by CLIST::assign_to_sublist.'), (86, '    LINK *extract_sublist(  // from this current'), (87, '      ITERATOR *other_it) {              // to other current'), (88, '      ITERATOR temp_it = *this;'), (96, '        BAD_EXTRACTION_PTS.error(""ITERATOR.extract_sublist"", ABORT);'), (98, '        EMPTY_LIST.error(""ITERATOR::extract_sublist"", ABORT);'), (101, '        DONT_EXTRACT_DELETED.error(""ITERATOR.extract_sublist"", ABORT);'), (111, '          BAD_SUBLIST.error(""ITERATOR.extract_sublist"", ABORT);'), (149, '    ITERATOR() { // constructor'), (154, '   *              ITERATOR::ITERATOR'), (158, '    ITERATOR( // constructor'), (159, '      CLIST *list_to_iterate) {'), (164, '     *              ITERATOR::set_to_list'), (170, '      CLIST *list_to_iterate) {'), (182, '     *              ITERATOR::add_after_then_move'), (188, '      CLASSNAME *new_data) {'), (191, '        BAD_PARAMETER.error(""ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");'), (195, '      auto new_element = new LINK;'), (225, '     *              ITERATOR::add_after_stay_put'), (231, '      CLASSNAME *new_data) {'), (234, '        BAD_PARAMETER.error(""ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");'), (238, '      auto new_element = new LINK;'), (270, '     *              ITERATOR::add_before_then_move'), (276, '      CLASSNAME *new_data) {'), (279, '        BAD_PARAMETER.error(""ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");'), (283, '      auto new_element = new LINK;'), (309, '     *              ITERATOR::add_before_stay_put'), (315, '      CLASSNAME *new_data) {'), (318, '        BAD_PARAMETER.error(""ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");'), (322, '      auto new_element = new LINK;'), (349, '     *              ITERATOR::add_list_after'), (356, '      CLIST *list_to_add) {'), (387, '     *              ITERATOR::add_list_before'), (394, '      CLIST *list_to_add) {'), (422, '    CLASSNAME *data() { // get current data'), (425, '        NO_LIST.error(""ITERATOR::data"", ABORT);'), (432, '     *              ITERATOR::data_relative'), (438, '    CLASSNAME *data_relative(  // get data + or - ...'), (440, '      LINK *ptr;'), (444, '        NO_LIST.error(""ITERATOR::data_relative"", ABORT);'), (446, '        EMPTY_LIST.error(""ITERATOR::data_relative"", ABORT);'), (448, '        BAD_PARAMETER.error(""ITERATOR::data_relative"", ABORT, ""offset < -l"");'), (463, '     *              ITERATOR::forward'), (468, '    CLASSNAME *forward() {'), (491, '     *              ITERATOR::extract'), (498, '    CLASSNAME *extract() {'), (502, '        NULL_CURRENT.error(""ITERATOR::extract"", ABORT);'), (528, '     *              ITERATOR::move_to_first()'), (533, '    CLASSNAME *move_to_first() {'), (541, '     *              ITERATOR::move_to_last()'), (547, '    CLASSNAME *move_to_last() {'), (560, '     *              ITERATOR::mark_cycle_pt()'), (572, '        NO_LIST.error(""ITERATOR::mark_cycle_pt"", ABORT);'), (593, '     *              ITERATOR::at_first()'), (606, '     *              ITERATOR::at_last()'), (619, '     *              ITERATOR::cycled_list()'), (629, '     *              ITERATOR::add_to_end'), (638, '      CLASSNAME *new_data) {'), (641, '        NO_LIST.error(""ITERATOR::add_to_end"", ABORT);'), (644, '        BAD_PARAMETER.error(""ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");'), (655, '          auto new_element = new LINK;'), (666, '     *              ITERATOR::exchange()'), (675, '      ITERATOR *other_it) { // other iterator'), (688, '        DONT_EXCHANGE_DELETED.error(""ITERATOR.exchange"", ABORT);'), (750, '     *              ITERATOR::length()'), (760, '     *              ITERATOR::sort()'), (767, '        const CLASSNAME *, const CLASSNAME *)) {'), (774, '  LINK *last = nullptr; // End of list'), (777, '  LINK *First() { // return first'), (781, '  const LINK *First() const { // return first'), (786, '  ~CLIST() { // destructor'), (791, '   *              CLIST::internal_deep_clear'), (819, '   *              CLIST::shallow_clear'), (848, '    CLIST *from_list) { // beware destructors!!'), (853, '   *              CLIST::assign_to_sublist'), (865, '    ITERATOR *start_it,  // from list start'), (866, '    ITERATOR *end_it) {  // from list end'), (870, '      LIST_NOT_EMPTY.error(""CLIST.assign_to_sublist"", ABORT);'), (888, '   *              CLIST::sort'), (894, '      const CLASSNAME *, const CLASSNAME *)) {'), (899, '      std::vector<CLASSNAME *> base;'), (902, '      ITERATOR it(this);'), (928, '  bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_data) {'), (931, '      auto *new_element = new LINK;'), (943, '      ITERATOR it(this);'), (968, '  void set_subtract(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLIST *minuend,'), (969, '    CLIST *subtrahend) {'), (971, '    ITERATOR m_it(minuend);'), (972, '    ITERATOR s_it(subtrahend);'), (977, '      CLASSNAME *subtra = nullptr;'), (992, '#define CLISTIZEH(CLASSNAME)                                    \\'), (993, '  class CLASSNAME##_CLIST : public CLIST<CLASSNAME> {           \\'), (994, '    using CLIST<CLASSNAME>::CLIST;                              \\'), (995, '  };                                                            \\'), (996, '  using CLASSNAME##_C_IT = CLIST<CLASSNAME>::ITERATOR;')]}",yes
src\ccutil\elst.h,src\ccutil\elst.h,6d7ec87ee82d884ecd9faa9ae3ad2a77b91069d7,363bf4e00d5fe10b12f06182253cc169245abef3,Rename lists internally.,"@@ -72,10 +72,9 @@ lists.
  * Generic list class for singly linked lists with embedded links
  **********************************************************************/
 
-template <typename CLASSNAME>
-class ELIST {
+template <typename T>
+class IntrusiveForwardList {
 public:
-
   /**********************************************************************
    *                          CLASS - ELIST_LINK
    *
@@ -83,33 +82,33 @@ public:
    *embedded links
    *
    *  Note:  No destructor - elements are assumed to be destroyed EITHER after
-   *  they have been extracted from a list OR by the ELIST destructor which
+   *  they have been extracted from a list OR by the IntrusiveForwardList destructor which
    *  walks the list.
    **********************************************************************/
 
-  class LINK {
-    friend class ITERATOR;
-    friend class ELIST;
+  class Link {
+    friend class Iterator;
+    friend class IntrusiveForwardList;
 
-    CLASSNAME *next;
+    T *next;
 
   public:
-    LINK() {
+    Link() {
       next = nullptr;
     }
     // constructor
 
     // The special copy constructor is used by lots of classes.
-    LINK(const LINK &) {
+    Link(const Link &) {
       next = nullptr;
     }
 
     // The special assignment operator is used by lots of classes.
-    void operator=(const LINK &) {
+    void operator=(const Link &) {
       next = nullptr;
     }
   };
-
+  using LINK = Link; // compat
 
   /***********************************************************************
    *                          CLASS - ELIST_ITERATOR
@@ -118,36 +117,36 @@ public:
    *embedded links
    **********************************************************************/
 
-  class ITERATOR {
-    friend void ELIST::assign_to_sublist(ITERATOR *, ITERATOR *);
+  class Iterator {
+    friend void IntrusiveForwardList::assign_to_sublist(Iterator *, Iterator *);
 
-    ELIST *list;                  // List being iterated
-    CLASSNAME *prev;             // prev element
-    CLASSNAME *current;          // current element
-    CLASSNAME *next;             // next element
-    CLASSNAME *cycle_pt;         // point we are cycling the list to.
+    IntrusiveForwardList *list;                  // List being iterated
+    T *prev;             // prev element
+    T *current;          // current element
+    T *next;             // next element
+    T *cycle_pt;         // point we are cycling the list to.
     bool ex_current_was_last;     // current extracted was end of list
     bool ex_current_was_cycle_pt; // current extracted was cycle point
     bool started_cycling;         // Have we moved off the start?
     /***********************************************************************
-   *              ITERATOR::extract_sublist()
+   *              Iterator::extract_sublist()
    *
-   *  This is a private member, used only by ELIST::assign_to_sublist.
+   *  This is a private member, used only by IntrusiveForwardList::assign_to_sublist.
    *  Given another iterator for the same list, extract the links from THIS to
    *  OTHER inclusive, link them into a new circular list, and return a
    *  pointer to the last element.
    *  (Can't inline this function because it contains a loop)
    **********************************************************************/
-    CLASSNAME *extract_sublist(   // from this current...
-      ITERATOR *other_it) {              // to other current
+    T *extract_sublist(   // from this current...
+      Iterator *other_it) {              // to other current
 #ifndef NDEBUG
       constexpr ERRCODE BAD_EXTRACTION_PTS(""Can't extract sublist from points on different lists"");
       constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
 #endif
       constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
 
-      ITERATOR temp_it = *this;
-      CLASSNAME *end_of_new_list;
+      Iterator temp_it = *this;
+      T *end_of_new_list;
 
 #ifndef NDEBUG
       if (!other_it)
@@ -170,7 +169,7 @@ public:
       temp_it.mark_cycle_pt();
       do {                         // walk sublist
         if (temp_it.cycled_list()) { // can't find end pt
-          BAD_SUBLIST.error(""ITERATOR.extract_sublist"", ABORT);
+          BAD_SUBLIST.error(""Iterator.extract_sublist"", ABORT);
         }
 
         if (temp_it.at_last()) {
@@ -208,7 +207,7 @@ public:
     } // to other current
 
   public:
-    ITERATOR() { // constructor
+    Iterator() { // constructor
       list = nullptr;
     } // unassigned list
     /***********************************************************************
@@ -216,7 +215,7 @@ public:
    *
    *  CONSTRUCTOR - set iterator to specified list;
    **********************************************************************/
-    ITERATOR(ELIST *list_to_iterate) {
+    Iterator(IntrusiveForwardList *list_to_iterate) {
       set_to_list(list_to_iterate);
     }
     /***********************************************************************
@@ -226,7 +225,7 @@ public:
    *  over.
    **********************************************************************/
     void set_to_list( // change list
-      ELIST *list_to_iterate) {
+      IntrusiveForwardList *list_to_iterate) {
 #ifndef NDEBUG
       if (!list_to_iterate) {
         BAD_PARAMETER.error(""ELIST_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");
@@ -249,7 +248,7 @@ public:
    *  iterator to the new element.
    **********************************************************************/
     void add_after_then_move(  // add after current &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);
@@ -294,7 +293,7 @@ public:
      *  the iterator to the new element.
      **********************************************************************/
     void add_after_stay_put(   // add after current &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);
@@ -341,7 +340,7 @@ public:
      *  iterator to the new element.
      **********************************************************************/
     void add_before_then_move( // add before current &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);
@@ -382,7 +381,7 @@ public:
      *  iterator to the new element.
      **********************************************************************/
     void add_before_stay_put(  // add before current &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);
@@ -425,7 +424,7 @@ public:
      *  iterator.
      **********************************************************************/
     void add_list_after(     // add a list &
-      ELIST *list_to_add) {
+      IntrusiveForwardList *list_to_add) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::add_list_after"", ABORT);
@@ -471,7 +470,7 @@ public:
      *  iterator.
      **********************************************************************/
     void add_list_before(    // add a list &
-      ELIST *list_to_add) {
+      IntrusiveForwardList *list_to_add) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::add_list_before"", ABORT);
@@ -508,7 +507,7 @@ public:
       }
     } // move to it 1st item
 
-    CLASSNAME *data() { // get current data
+    T *data() { // get current data
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::data"", ABORT);
@@ -526,9 +525,9 @@ public:
    *  ""offset"" must not be less than -1.
    *  (This function can't be INLINEd because it contains a loop)
    **********************************************************************/
-    CLASSNAME *data_relative( // get data + or - ...
+    T *data_relative( // get data + or - ...
       int8_t offset) {                       // offset from current
-      CLASSNAME *ptr;
+      T *ptr;
 
 #ifndef NDEBUG
       if (!list)
@@ -560,7 +559,7 @@ public:
      *  Move the iterator to the next element of the list.
      *  REMEMBER: ALL LISTS ARE CIRCULAR.
      **********************************************************************/
-    CLASSNAME *forward() {
+    T *forward() {
 #ifndef NDEBUG
       if (!list)
         NO_LIST.error(""ELIST_ITERATOR::forward"", ABORT);
@@ -606,8 +605,8 @@ public:
      *  this.)   The iterator's current points to nullptr.  If the extracted element
      *  is to be deleted, this is the callers responsibility.
      **********************************************************************/
-    CLASSNAME *extract() {
-      CLASSNAME *extracted_link;
+    T *extract() {
+      T *extracted_link;
 
 #ifndef NDEBUG
       if (!list) {
@@ -643,7 +642,7 @@ public:
      *  Move current so that it is set to the start of the list.
      *  Return data just in case anyone wants it.
      **********************************************************************/
-    CLASSNAME *move_to_first() {
+    T *move_to_first() {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::move_to_first"", ABORT);
@@ -662,7 +661,7 @@ public:
      *  Return data just in case anyone wants it.
      *  (This function can't be INLINEd because it contains a loop)
      **********************************************************************/
-    CLASSNAME *move_to_last() {
+    T *move_to_last() {
 #ifndef NDEBUG
       if (!list)
         NO_LIST.error(""ELIST_ITERATOR::move_to_last"", ABORT);
@@ -772,7 +771,7 @@ public:
                   queues.
     **********************************************************************/
     void add_to_end(           // add at end &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::add_to_end"", ABORT);
@@ -808,10 +807,10 @@ public:
      *  (This function hasn't been in-lined because its a bit big!)
      **********************************************************************/
     void exchange(                 // positions of 2 links
-      ITERATOR *other_it) { // other iterator
+      Iterator *other_it) { // other iterator
       constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
 
-      CLASSNAME *old_current;
+      T *old_current;
 
 #ifndef NDEBUG
       if (!list)
@@ -905,7 +904,7 @@ public:
    **********************************************************************/
     void sort(          // sort elements
       int comparator( // comparison routine
-        const CLASSNAME *, const CLASSNAME *)) {
+        const T *, const T *)) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::sort"", ABORT);
@@ -916,17 +915,17 @@ public:
       move_to_first();
     }
   };
-
+  using ITERATOR = Iterator; // compat
 
 private:
-  CLASSNAME *last = nullptr; // End of list
+  T *last = nullptr; // End of list
   //(Points to head)
-  CLASSNAME *First() { // return first
+  T *First() { // return first
     return last ? last->next : nullptr;
   }
 
 public:
-  ~ELIST() {
+  ~IntrusiveForwardList() {
     clear();
   }
 
@@ -937,16 +936,16 @@ public:
 
   /* Become a deep copy of src_list */
   template <typename U>
-  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {
-    ITERATOR from_it(const_cast<U *>(src_list));
-    ITERATOR to_it(this);
+  void deep_copy(const U *src_list, T *(*copier)(const T *)) {
+    Iterator from_it(const_cast<U *>(src_list));
+    Iterator to_it(this);
 
     for (from_it.mark_cycle_pt(); !from_it.cycled_list(); from_it.forward())
       to_it.add_after_then_move((*copier)(from_it.data()));
   }
 
   /***********************************************************************
-   *              ELIST::internal_clear
+   *              IntrusiveForwardList::internal_clear
    *
    *  Used by the destructor and the ""clear"" member function of derived list
    *  classes to destroy all the elements on the list.
@@ -959,8 +958,8 @@ public:
 
    // destroy all links
   void internal_clear() {
-    CLASSNAME *ptr;
-    CLASSNAME *next;
+    T *ptr;
+    T *next;
 
     if (!empty()) {
       ptr = last->next;     // set to first
@@ -983,12 +982,12 @@ public:
   }
 
   void shallow_copy(      // dangerous!!
-    ELIST *from_list) { // beware destructors!!
+    IntrusiveForwardList *from_list) { // beware destructors!!
     last = from_list->last;
   }
 
   /***********************************************************************
- *              ELIST::assign_to_sublist
+ *              IntrusiveForwardList::assign_to_sublist
  *
  *  The list is set to a sublist of another list.  ""This"" list must be empty
  *  before this function is invoked.  The two iterators passed must refer to
@@ -1000,12 +999,12 @@ public:
  *  end point is always the end_it position.
  **********************************************************************/
   void assign_to_sublist(       // to this list
-    ITERATOR *start_it, // from list start
-    ITERATOR *end_it) {  // from list end
+    Iterator *start_it, // from list start
+    Iterator *end_it) {  // from list end
     constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");
 
     if (!empty()) {
-      LIST_NOT_EMPTY.error(""ELIST.assign_to_sublist"", ABORT);
+      LIST_NOT_EMPTY.error(""IntrusiveForwardList.assign_to_sublist"", ABORT);
     }
 
     last = start_it->extract_sublist(end_it);
@@ -1024,7 +1023,7 @@ public:
   }
 
   /***********************************************************************
- *              ELIST::sort
+ *              IntrusiveForwardList::sort
  *
  *  Sort elements on list
  *  NB If you don't like the const declarations in the comparator, coerce yours:
@@ -1032,16 +1031,16 @@ public:
  **********************************************************************/
   void sort(          // sort elements
     int comparator( // comparison routine
-      const CLASSNAME *, const CLASSNAME *)) {
+      const T *, const T *)) {
     // Allocate an array of pointers, one per list element.
     auto count = length();
 
     if (count > 0) {
       // ptr array to sort
-      std::vector<CLASSNAME *> base;
+      std::vector<T *> base;
       base.reserve(count);
 
-      ITERATOR it(this);
+      Iterator it(this);
 
       // Extract all elements, putting the pointers in the array.
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
@@ -1070,8 +1069,8 @@ public:
   // list) - new_link is not added to the list and the function returns the
   // pointer to the identical entry that already exists in the list
   // (otherwise the function returns new_link).
-  CLASSNAME *add_sorted_and_find(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique,
-    CLASSNAME *new_link) {
+  T *add_sorted_and_find(int comparator(const T *, const T *), bool unique,
+    T *new_link) {
     // Check for adding at the end.
     if (last == nullptr || comparator(last, new_link) < 0) {
       if (last == nullptr) {
@@ -1083,7 +1082,7 @@ public:
       last = new_link;
     } else {
       // Need to use an iterator.
-      ITERATOR it(this);
+      Iterator it(this);
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
         auto *link = it.data();
         int compare = comparator(link, new_link);
@@ -1104,22 +1103,24 @@ public:
 
   // Same as above, but returns true if the new entry was inserted, false
   // if the identical entry already existed in the list.
-  bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_link) {
+  bool add_sorted(int comparator(const T *, const T *), bool unique, T *new_link) {
     return (add_sorted_and_find(comparator, unique, new_link) == new_link);
   }
 };
 
+template <typename CLASSNAME>
+using ELIST = IntrusiveForwardList<CLASSNAME>;
+
 // add TESS_API?
 // move templated lists to public include dirs?
-#define ELISTIZEH(CLASSNAME)                            \
-  class CLASSNAME##_LIST : public ELIST<CLASSNAME> {    \
-  public:                                               \
-    using ELIST<CLASSNAME>::ELIST;                      \
-  };                                                    \
-  class CLASSNAME##_IT : public ELIST<CLASSNAME>::ITERATOR { \
-  public:                                               \
-    using base = ELIST<CLASSNAME>::ITERATOR;            \
-    using base::base;                                   \
+#define ELISTIZEH(T)                                        \
+  class T##_LIST : public IntrusiveForwardList<T> {         \
+  public:                                                   \
+    using IntrusiveForwardList<T>::IntrusiveForwardList;    \
+  };                                                        \
+  class T##_IT : public IntrusiveForwardList<T>::Iterator { \
+  public:                                                   \
+    using IntrusiveForwardList<T>::Iterator::Iterator;      \
   };
 
 } // namespace tesseract
","{'added': [(75, 'template <typename T>'), (76, 'class IntrusiveForwardList {'), (85, '   *  they have been extracted from a list OR by the IntrusiveForwardList destructor which'), (89, '  class Link {'), (90, '    friend class Iterator;'), (91, '    friend class IntrusiveForwardList;'), (93, '    T *next;'), (96, '    Link() {'), (102, '    Link(const Link &) {'), (107, '    void operator=(const Link &) {'), (111, '  using LINK = Link; // compat'), (120, '  class Iterator {'), (121, '    friend void IntrusiveForwardList::assign_to_sublist(Iterator *, Iterator *);'), (123, '    IntrusiveForwardList *list;                  // List being iterated'), (124, '    T *prev;             // prev element'), (125, '    T *current;          // current element'), (126, '    T *next;             // next element'), (127, '    T *cycle_pt;         // point we are cycling the list to.'), (132, '   *              Iterator::extract_sublist()'), (134, '   *  This is a private member, used only by IntrusiveForwardList::assign_to_sublist.'), (140, '    T *extract_sublist(   // from this current...'), (141, '      Iterator *other_it) {              // to other current'), (148, '      Iterator temp_it = *this;'), (149, '      T *end_of_new_list;'), (172, '          BAD_SUBLIST.error(""Iterator.extract_sublist"", ABORT);'), (210, '    Iterator() { // constructor'), (218, '    Iterator(IntrusiveForwardList *list_to_iterate) {'), (228, '      IntrusiveForwardList *list_to_iterate) {'), (251, '      T *new_element) {'), (296, '      T *new_element) {'), (343, '      T *new_element) {'), (384, '      T *new_element) {'), (427, '      IntrusiveForwardList *list_to_add) {'), (473, '      IntrusiveForwardList *list_to_add) {'), (510, '    T *data() { // get current data'), (528, '    T *data_relative( // get data + or - ...'), (530, '      T *ptr;'), (562, '    T *forward() {'), (608, '    T *extract() {'), (609, '      T *extracted_link;'), (645, '    T *move_to_first() {'), (664, '    T *move_to_last() {'), (774, '      T *new_element) {'), (810, '      Iterator *other_it) { // other iterator'), (813, '      T *old_current;'), (907, '        const T *, const T *)) {'), (918, '  using ITERATOR = Iterator; // compat'), (921, '  T *last = nullptr; // End of list'), (923, '  T *First() { // return first'), (928, '  ~IntrusiveForwardList() {'), (939, '  void deep_copy(const U *src_list, T *(*copier)(const T *)) {'), (940, '    Iterator from_it(const_cast<U *>(src_list));'), (941, '    Iterator to_it(this);'), (948, '   *              IntrusiveForwardList::internal_clear'), (961, '    T *ptr;'), (962, '    T *next;'), (985, '    IntrusiveForwardList *from_list) { // beware destructors!!'), (990, ' *              IntrusiveForwardList::assign_to_sublist'), (1002, '    Iterator *start_it, // from list start'), (1003, '    Iterator *end_it) {  // from list end'), (1007, '      LIST_NOT_EMPTY.error(""IntrusiveForwardList.assign_to_sublist"", ABORT);'), (1026, ' *              IntrusiveForwardList::sort'), (1034, '      const T *, const T *)) {'), (1040, '      std::vector<T *> base;'), (1043, '      Iterator it(this);'), (1072, '  T *add_sorted_and_find(int comparator(const T *, const T *), bool unique,'), (1073, '    T *new_link) {'), (1085, '      Iterator it(this);'), (1106, '  bool add_sorted(int comparator(const T *, const T *), bool unique, T *new_link) {'), (1111, 'template <typename CLASSNAME>'), (1112, 'using ELIST = IntrusiveForwardList<CLASSNAME>;'), (1113, ''), (1116, '#define ELISTIZEH(T)                                        \\'), (1117, '  class T##_LIST : public IntrusiveForwardList<T> {         \\'), (1118, '  public:                                                   \\'), (1119, '    using IntrusiveForwardList<T>::IntrusiveForwardList;    \\'), (1120, '  };                                                        \\'), (1121, '  class T##_IT : public IntrusiveForwardList<T>::Iterator { \\'), (1122, '  public:                                                   \\'), (1123, '    using IntrusiveForwardList<T>::Iterator::Iterator;      \\')], 'deleted': [(75, 'template <typename CLASSNAME>'), (76, 'class ELIST {'), (78, ''), (86, '   *  they have been extracted from a list OR by the ELIST destructor which'), (90, '  class LINK {'), (91, '    friend class ITERATOR;'), (92, '    friend class ELIST;'), (94, '    CLASSNAME *next;'), (97, '    LINK() {'), (103, '    LINK(const LINK &) {'), (108, '    void operator=(const LINK &) {'), (112, ''), (121, '  class ITERATOR {'), (122, '    friend void ELIST::assign_to_sublist(ITERATOR *, ITERATOR *);'), (124, '    ELIST *list;                  // List being iterated'), (125, '    CLASSNAME *prev;             // prev element'), (126, '    CLASSNAME *current;          // current element'), (127, '    CLASSNAME *next;             // next element'), (128, '    CLASSNAME *cycle_pt;         // point we are cycling the list to.'), (133, '   *              ITERATOR::extract_sublist()'), (135, '   *  This is a private member, used only by ELIST::assign_to_sublist.'), (141, '    CLASSNAME *extract_sublist(   // from this current...'), (142, '      ITERATOR *other_it) {              // to other current'), (149, '      ITERATOR temp_it = *this;'), (150, '      CLASSNAME *end_of_new_list;'), (173, '          BAD_SUBLIST.error(""ITERATOR.extract_sublist"", ABORT);'), (211, '    ITERATOR() { // constructor'), (219, '    ITERATOR(ELIST *list_to_iterate) {'), (229, '      ELIST *list_to_iterate) {'), (252, '      CLASSNAME *new_element) {'), (297, '      CLASSNAME *new_element) {'), (344, '      CLASSNAME *new_element) {'), (385, '      CLASSNAME *new_element) {'), (428, '      ELIST *list_to_add) {'), (474, '      ELIST *list_to_add) {'), (511, '    CLASSNAME *data() { // get current data'), (529, '    CLASSNAME *data_relative( // get data + or - ...'), (531, '      CLASSNAME *ptr;'), (563, '    CLASSNAME *forward() {'), (609, '    CLASSNAME *extract() {'), (610, '      CLASSNAME *extracted_link;'), (646, '    CLASSNAME *move_to_first() {'), (665, '    CLASSNAME *move_to_last() {'), (775, '      CLASSNAME *new_element) {'), (811, '      ITERATOR *other_it) { // other iterator'), (814, '      CLASSNAME *old_current;'), (908, '        const CLASSNAME *, const CLASSNAME *)) {'), (919, ''), (922, '  CLASSNAME *last = nullptr; // End of list'), (924, '  CLASSNAME *First() { // return first'), (929, '  ~ELIST() {'), (940, '  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {'), (941, '    ITERATOR from_it(const_cast<U *>(src_list));'), (942, '    ITERATOR to_it(this);'), (949, '   *              ELIST::internal_clear'), (962, '    CLASSNAME *ptr;'), (963, '    CLASSNAME *next;'), (986, '    ELIST *from_list) { // beware destructors!!'), (991, ' *              ELIST::assign_to_sublist'), (1003, '    ITERATOR *start_it, // from list start'), (1004, '    ITERATOR *end_it) {  // from list end'), (1008, '      LIST_NOT_EMPTY.error(""ELIST.assign_to_sublist"", ABORT);'), (1027, ' *              ELIST::sort'), (1035, '      const CLASSNAME *, const CLASSNAME *)) {'), (1041, '      std::vector<CLASSNAME *> base;'), (1044, '      ITERATOR it(this);'), (1073, '  CLASSNAME *add_sorted_and_find(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique,'), (1074, '    CLASSNAME *new_link) {'), (1086, '      ITERATOR it(this);'), (1107, '  bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_link) {'), (1114, '#define ELISTIZEH(CLASSNAME)                            \\'), (1115, '  class CLASSNAME##_LIST : public ELIST<CLASSNAME> {    \\'), (1116, '  public:                                               \\'), (1117, '    using ELIST<CLASSNAME>::ELIST;                      \\'), (1118, '  };                                                    \\'), (1119, '  class CLASSNAME##_IT : public ELIST<CLASSNAME>::ITERATOR { \\'), (1120, '  public:                                               \\'), (1121, '    using base = ELIST<CLASSNAME>::ITERATOR;            \\'), (1122, '    using base::base;                                   \\')]}",yes
src\ccutil\elst2.h,src\ccutil\elst2.h,6d7ec87ee82d884ecd9faa9ae3ad2a77b91069d7,363bf4e00d5fe10b12f06182253cc169245abef3,Rename lists internally.,"@@ -51,11 +51,11 @@ i)  The duplication in source does not affect the run time code size - the
  * Generic list class for doubly linked lists with embedded links
  **********************************************************************/
 
-template <typename CLASSNAME>
-class ELIST2 {
+template <typename T>
+class IntrusiveList {
 public:
   /**********************************************************************
-   *              CLASS - LINK
+   *              CLASS - Link
    *
    *              Generic link class for doubly linked lists with embedded links
    *
@@ -64,26 +64,26 @@ public:
    *  walks the list.
    **********************************************************************/
 
-  class LINK {
-    friend class ITERATOR;
-    friend class ELIST2;
+  class Link {
+    friend class Iterator;
+    friend class IntrusiveList;
 
-    CLASSNAME *prev;
-    CLASSNAME *next;
+    T *prev;
+    T *next;
 
   public:
-    LINK() { // constructor
+    Link() { // constructor
       prev = next = nullptr;
     }
 
-    LINK(const LINK &) = delete;
+    Link(const Link &) = delete;
 
     // The assignment operator is required for WERD.
-    void operator=(const LINK &) {
+    void operator=(const Link &) {
       prev = next = nullptr;
     }
   };
-
+  using LINK = Link; // compat
 
   /***********************************************************************
    *              CLASS - ELIST2_ITERATOR
@@ -92,36 +92,36 @@ public:
    *links
    **********************************************************************/
 
-  class ITERATOR {
-    friend void ELIST2::assign_to_sublist(ITERATOR *, ITERATOR *);
+  class Iterator {
+    friend void IntrusiveList::assign_to_sublist(Iterator *, Iterator *);
 
-    ELIST2 *list;                 // List being iterated
-    CLASSNAME *prev;            // prev element
-    CLASSNAME *current;         // current element
-    CLASSNAME *next;            // next element
-    CLASSNAME *cycle_pt;        // point we are cycling the list to.
+    IntrusiveList *list;                 // List being iterated
+    T *prev;            // prev element
+    T *current;         // current element
+    T *next;            // next element
+    T *cycle_pt;        // point we are cycling the list to.
     bool ex_current_was_last;     // current extracted was end of list
     bool ex_current_was_cycle_pt; // current extracted was cycle point
     bool started_cycling;         // Have we moved off the start?
     /***********************************************************************
    *              ELIST2_ITERATOR::extract_sublist()
    *
-   *  This is a private member, used only by ELIST2::assign_to_sublist.
+   *  This is a private member, used only by IntrusiveList::assign_to_sublist.
    *  Given another iterator for the same list, extract the links from THIS to
    *  OTHER inclusive, link them into a new circular list, and return a
    *  pointer to the last element.
    *  (Can't inline this function because it contains a loop)
    **********************************************************************/
-    CLASSNAME *extract_sublist(   // from this current...
-      ITERATOR *other_it) {               // to other current
+    T *extract_sublist(   // from this current...
+      Iterator *other_it) {               // to other current
 #ifndef NDEBUG
       constexpr ERRCODE BAD_EXTRACTION_PTS(""Can't extract sublist from points on different lists"");
       constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
 #endif
       constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
 
-      ITERATOR temp_it = *this;
-      CLASSNAME *end_of_new_list;
+      Iterator temp_it = *this;
+      T *end_of_new_list;
 
 #ifndef NDEBUG
       if (!other_it)
@@ -193,8 +193,8 @@ public:
    *
    *  CONSTRUCTOR - set iterator to specified list;
    **********************************************************************/
-    ITERATOR( // constructor
-      ELIST2 *list_to_iterate) {
+    Iterator( // constructor
+      IntrusiveList *list_to_iterate) {
       set_to_list(list_to_iterate);
     }
 
@@ -206,7 +206,7 @@ public:
      **********************************************************************/
 
     void set_to_list( // change list
-      ELIST2 *list_to_iterate) {
+      IntrusiveList *list_to_iterate) {
 #ifndef NDEBUG
       if (!list_to_iterate) {
         BAD_PARAMETER.error(""ELIST2_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");
@@ -229,7 +229,7 @@ public:
    *  iterator to the new element.
    **********************************************************************/
     void add_after_then_move(   // add after current &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);
@@ -278,7 +278,7 @@ public:
      *  the iterator to the new element.
      **********************************************************************/
     void add_after_stay_put(    // add after current &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);
@@ -329,7 +329,7 @@ public:
      *  iterator to the new element.
      **********************************************************************/
     void add_before_then_move(  // add before current &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);
@@ -375,7 +375,7 @@ public:
      *  iterator to the new element.
      **********************************************************************/
     void add_before_stay_put(   // add before current &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);
@@ -423,7 +423,7 @@ public:
      *  iterator.
      **********************************************************************/
     void add_list_after(      // add a list &
-      ELIST2 *list_to_add) {
+      IntrusiveList *list_to_add) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::add_list_after"", ABORT);
@@ -473,7 +473,7 @@ public:
      *  iterator.
      **********************************************************************/
     void add_list_before(     // add a list &
-      ELIST2 *list_to_add) {
+      IntrusiveList *list_to_add) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::add_list_before"", ABORT);
@@ -514,7 +514,7 @@ public:
       }
     } // move to it 1st item
 
-    CLASSNAME *data() { // get current data
+    T *data() { // get current data
 #ifndef NDEBUG
       if (!current) {
         NULL_DATA.error(""ELIST2_ITERATOR::data"", ABORT);
@@ -531,9 +531,9 @@ public:
    *  Return the data pointer to the element ""offset"" elements from current.
    *  (This function can't be INLINEd because it contains a loop)
    **********************************************************************/
-    CLASSNAME *data_relative( // get data + or - ...
+    T *data_relative( // get data + or - ...
       int8_t offset) {                         // offset from current
-      CLASSNAME *ptr;
+      T *ptr;
 
 #ifndef NDEBUG
       if (!list)
@@ -565,7 +565,7 @@ public:
      *  Move the iterator to the next element of the list.
      *  REMEMBER: ALL LISTS ARE CIRCULAR.
      **********************************************************************/
-    CLASSNAME *forward() {
+    T *forward() {
 #ifndef NDEBUG
       if (!list)
         NO_LIST.error(""ELIST2_ITERATOR::forward"", ABORT);
@@ -611,7 +611,7 @@ public:
      *  Move the iterator to the previous element of the list.
      *  REMEMBER: ALL LISTS ARE CIRCULAR.
      **********************************************************************/
-    CLASSNAME *backward() {
+    T *backward() {
 #ifndef NDEBUG
       if (!list)
         NO_LIST.error(""ELIST2_ITERATOR::backward"", ABORT);
@@ -655,8 +655,8 @@ public:
      *  this.)   The iterator's current points to nullptr.  If the extracted element
      *  is to be deleted, this is the callers responsibility.
      **********************************************************************/
-    CLASSNAME *extract() {
-      CLASSNAME *extracted_link;
+    T *extract() {
+      T *extracted_link;
 
 #ifndef NDEBUG
       if (!list) {
@@ -697,7 +697,7 @@ public:
      *  Return data just in case anyone wants it.
      **********************************************************************/
      // go to start of list
-    CLASSNAME *move_to_first() {
+    T *move_to_first() {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::move_to_first"", ABORT);
@@ -715,7 +715,7 @@ public:
    *  Move current so that it is set to the end of the list.
    *  Return data just in case anyone wants it.
    **********************************************************************/
-    CLASSNAME *move_to_last() {
+    T *move_to_last() {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::move_to_last"", ABORT);
@@ -825,7 +825,7 @@ public:
                   queues.
     **********************************************************************/
     void add_to_end(            // add at end &
-      CLASSNAME *new_element) {
+      T *new_element) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::add_to_end"", ABORT);
@@ -863,10 +863,10 @@ public:
      *  (This function hasn't been in-lined because its a bit big!)
      **********************************************************************/
     void exchange(                  // positions of 2 links
-      ITERATOR *other_it) { // other iterator
+      Iterator *other_it) { // other iterator
       constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
 
-      CLASSNAME *old_current;
+      T *old_current;
 
 #ifndef NDEBUG
       if (!list)
@@ -972,7 +972,7 @@ public:
    **********************************************************************/
     void sort(          // sort elements
       int comparator( // comparison routine
-        const CLASSNAME *, const CLASSNAME *)) {
+        const T *, const T *)) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::sort"", ABORT);
@@ -985,19 +985,19 @@ public:
 
   private:
     // Don't use the following constructor.
-    ITERATOR() = delete;
+    Iterator() = delete;
   };
-
+  using ITERATOR = Iterator; // compat
 
 private:
-  CLASSNAME *last = nullptr; // End of list
+  T *last = nullptr; // End of list
   //(Points to head)
-  CLASSNAME *First() { // return first
+  T *First() { // return first
     return last ? last->next : nullptr;
   }
 
 public:
-  ~ELIST2() {
+  ~IntrusiveList() {
     clear();
   }
 
@@ -1008,16 +1008,16 @@ public:
 
   /* Become a deep copy of src_list */
   template <typename U>
-  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {
-    ITERATOR from_it(const_cast<U *>(src_list));
-    ITERATOR to_it(this);
+  void deep_copy(const U *src_list, T *(*copier)(const T *)) {
+    Iterator from_it(const_cast<U *>(src_list));
+    Iterator to_it(this);
 
     for (from_it.mark_cycle_pt(); !from_it.cycled_list(); from_it.forward())
       to_it.add_after_then_move((*copier)(from_it.data()));
   }
 
   /***********************************************************************
-   *              ELIST2::internal_clear
+   *              IntrusiveList::internal_clear
    *
    *  Used by the destructor and the ""clear"" member function of derived list
    *  classes to destroy all the elements on the list.
@@ -1031,8 +1031,8 @@ public:
    // destroy all links
   void internal_clear() {
     // ptr to zapper functn
-    CLASSNAME *ptr;
-    CLASSNAME *next;
+    T *ptr;
+    T *next;
 
     if (!empty()) {
       ptr = last->next;     // set to first
@@ -1055,12 +1055,12 @@ public:
   }
 
   void shallow_copy(       // dangerous!!
-    ELIST2 *from_list) { // beware destructors!!
+    IntrusiveList *from_list) { // beware destructors!!
     last = from_list->last;
   }
 
   /***********************************************************************
- *              ELIST2::assign_to_sublist
+ *              IntrusiveList::assign_to_sublist
  *
  *  The list is set to a sublist of another list.  ""This"" list must be empty
  *  before this function is invoked.  The two iterators passed must refer to
@@ -1072,8 +1072,8 @@ public:
  *  end point is always the end_it position.
  **********************************************************************/
   void assign_to_sublist(        // to this list
-    ITERATOR *start_it, // from list start
-    ITERATOR *end_it);  // from list end
+    Iterator *start_it, // from list start
+    Iterator *end_it);  // from list end
 
   // # elements in list
   int32_t length() const {
@@ -1087,7 +1087,7 @@ public:
     return count;
   }
   /***********************************************************************
- *              ELIST2::sort
+ *              IntrusiveList::sort
  *
  *  Sort elements on list
  *  NB If you don't like the const declarations in the comparator, coerce yours:
@@ -1095,15 +1095,15 @@ public:
  **********************************************************************/
   void sort(          // sort elements
     int comparator( // comparison routine
-      const CLASSNAME *, const CLASSNAME *)) {
+      const T *, const T *)) {
     // Allocate an array of pointers, one per list element.
     auto count = length();
     if (count > 0) {
       // ptr array to sort
-      std::vector<CLASSNAME *> base;
+      std::vector<T *> base;
       base.reserve(count);
 
-      ITERATOR it(this);
+      Iterator it(this);
 
       // Extract all elements, putting the pointers in the array.
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
@@ -1127,7 +1127,7 @@ public:
   // Comparison function is the same as used by sort, i.e. uses double
   // indirection. Time is O(1) to add to beginning or end.
   // Time is linear to add pre-sorted items to an empty list.
-  void add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), CLASSNAME *new_link) {
+  void add_sorted(int comparator(const T *, const T *), T *new_link) {
     // Check for adding at the end.
     if (last == nullptr || comparator(last, new_link) < 0) {
       if (last == nullptr) {
@@ -1142,7 +1142,7 @@ public:
       last = new_link;
     } else {
       // Need to use an iterator.
-      ITERATOR it(this);
+      Iterator it(this);
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
         auto link = it.data();
         if (comparator(link, new_link) > 0) {
@@ -1158,16 +1158,19 @@ public:
   }
 };
 
+template <typename CLASSNAME>
+using ELIST2 = IntrusiveList<CLASSNAME>;
+
 // add TESS_API?
 // move templated lists to public include dirs?
-#define ELIST2IZEH(CLASSNAME)                           \
-  class CLASSNAME##_LIST : public ELIST2<CLASSNAME> {   \
+#define ELIST2IZEH(T)                           \
+  class T##_LIST : public IntrusiveList<T> {   \
   public:                                               \
-    using ELIST2<CLASSNAME>::ELIST2;                    \
+    using IntrusiveList<T>::IntrusiveList;                    \
   };                                                    \
-  class CLASSNAME##_IT : public ELIST2<CLASSNAME>::ITERATOR { \
+  class T##_IT : public IntrusiveList<T>::Iterator { \
   public:                                               \
-    using base = ELIST2<CLASSNAME>::ITERATOR;           \
+    using base = IntrusiveList<T>::Iterator;           \
     using base::base;                                   \
   };
 
","{'added': [(54, 'template <typename T>'), (55, 'class IntrusiveList {'), (58, '   *              CLASS - Link'), (67, '  class Link {'), (68, '    friend class Iterator;'), (69, '    friend class IntrusiveList;'), (71, '    T *prev;'), (72, '    T *next;'), (75, '    Link() { // constructor'), (79, '    Link(const Link &) = delete;'), (82, '    void operator=(const Link &) {'), (86, '  using LINK = Link; // compat'), (95, '  class Iterator {'), (96, '    friend void IntrusiveList::assign_to_sublist(Iterator *, Iterator *);'), (98, '    IntrusiveList *list;                 // List being iterated'), (99, '    T *prev;            // prev element'), (100, '    T *current;         // current element'), (101, '    T *next;            // next element'), (102, '    T *cycle_pt;        // point we are cycling the list to.'), (109, '   *  This is a private member, used only by IntrusiveList::assign_to_sublist.'), (115, '    T *extract_sublist(   // from this current...'), (116, '      Iterator *other_it) {               // to other current'), (123, '      Iterator temp_it = *this;'), (124, '      T *end_of_new_list;'), (196, '    Iterator( // constructor'), (197, '      IntrusiveList *list_to_iterate) {'), (209, '      IntrusiveList *list_to_iterate) {'), (232, '      T *new_element) {'), (281, '      T *new_element) {'), (332, '      T *new_element) {'), (378, '      T *new_element) {'), (426, '      IntrusiveList *list_to_add) {'), (476, '      IntrusiveList *list_to_add) {'), (517, '    T *data() { // get current data'), (534, '    T *data_relative( // get data + or - ...'), (536, '      T *ptr;'), (568, '    T *forward() {'), (614, '    T *backward() {'), (658, '    T *extract() {'), (659, '      T *extracted_link;'), (700, '    T *move_to_first() {'), (718, '    T *move_to_last() {'), (828, '      T *new_element) {'), (866, '      Iterator *other_it) { // other iterator'), (869, '      T *old_current;'), (975, '        const T *, const T *)) {'), (988, '    Iterator() = delete;'), (990, '  using ITERATOR = Iterator; // compat'), (993, '  T *last = nullptr; // End of list'), (995, '  T *First() { // return first'), (1000, '  ~IntrusiveList() {'), (1011, '  void deep_copy(const U *src_list, T *(*copier)(const T *)) {'), (1012, '    Iterator from_it(const_cast<U *>(src_list));'), (1013, '    Iterator to_it(this);'), (1020, '   *              IntrusiveList::internal_clear'), (1034, '    T *ptr;'), (1035, '    T *next;'), (1058, '    IntrusiveList *from_list) { // beware destructors!!'), (1063, ' *              IntrusiveList::assign_to_sublist'), (1075, '    Iterator *start_it, // from list start'), (1076, '    Iterator *end_it);  // from list end'), (1090, ' *              IntrusiveList::sort'), (1098, '      const T *, const T *)) {'), (1103, '      std::vector<T *> base;'), (1106, '      Iterator it(this);'), (1130, '  void add_sorted(int comparator(const T *, const T *), T *new_link) {'), (1145, '      Iterator it(this);'), (1161, 'template <typename CLASSNAME>'), (1162, 'using ELIST2 = IntrusiveList<CLASSNAME>;'), (1163, ''), (1166, '#define ELIST2IZEH(T)                           \\'), (1167, '  class T##_LIST : public IntrusiveList<T> {   \\'), (1169, '    using IntrusiveList<T>::IntrusiveList;                    \\'), (1171, '  class T##_IT : public IntrusiveList<T>::Iterator { \\'), (1173, '    using base = IntrusiveList<T>::Iterator;           \\')], 'deleted': [(54, 'template <typename CLASSNAME>'), (55, 'class ELIST2 {'), (58, '   *              CLASS - LINK'), (67, '  class LINK {'), (68, '    friend class ITERATOR;'), (69, '    friend class ELIST2;'), (71, '    CLASSNAME *prev;'), (72, '    CLASSNAME *next;'), (75, '    LINK() { // constructor'), (79, '    LINK(const LINK &) = delete;'), (82, '    void operator=(const LINK &) {'), (86, ''), (95, '  class ITERATOR {'), (96, '    friend void ELIST2::assign_to_sublist(ITERATOR *, ITERATOR *);'), (98, '    ELIST2 *list;                 // List being iterated'), (99, '    CLASSNAME *prev;            // prev element'), (100, '    CLASSNAME *current;         // current element'), (101, '    CLASSNAME *next;            // next element'), (102, '    CLASSNAME *cycle_pt;        // point we are cycling the list to.'), (109, '   *  This is a private member, used only by ELIST2::assign_to_sublist.'), (115, '    CLASSNAME *extract_sublist(   // from this current...'), (116, '      ITERATOR *other_it) {               // to other current'), (123, '      ITERATOR temp_it = *this;'), (124, '      CLASSNAME *end_of_new_list;'), (196, '    ITERATOR( // constructor'), (197, '      ELIST2 *list_to_iterate) {'), (209, '      ELIST2 *list_to_iterate) {'), (232, '      CLASSNAME *new_element) {'), (281, '      CLASSNAME *new_element) {'), (332, '      CLASSNAME *new_element) {'), (378, '      CLASSNAME *new_element) {'), (426, '      ELIST2 *list_to_add) {'), (476, '      ELIST2 *list_to_add) {'), (517, '    CLASSNAME *data() { // get current data'), (534, '    CLASSNAME *data_relative( // get data + or - ...'), (536, '      CLASSNAME *ptr;'), (568, '    CLASSNAME *forward() {'), (614, '    CLASSNAME *backward() {'), (658, '    CLASSNAME *extract() {'), (659, '      CLASSNAME *extracted_link;'), (700, '    CLASSNAME *move_to_first() {'), (718, '    CLASSNAME *move_to_last() {'), (828, '      CLASSNAME *new_element) {'), (866, '      ITERATOR *other_it) { // other iterator'), (869, '      CLASSNAME *old_current;'), (975, '        const CLASSNAME *, const CLASSNAME *)) {'), (988, '    ITERATOR() = delete;'), (990, ''), (993, '  CLASSNAME *last = nullptr; // End of list'), (995, '  CLASSNAME *First() { // return first'), (1000, '  ~ELIST2() {'), (1011, '  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {'), (1012, '    ITERATOR from_it(const_cast<U *>(src_list));'), (1013, '    ITERATOR to_it(this);'), (1020, '   *              ELIST2::internal_clear'), (1034, '    CLASSNAME *ptr;'), (1035, '    CLASSNAME *next;'), (1058, '    ELIST2 *from_list) { // beware destructors!!'), (1063, ' *              ELIST2::assign_to_sublist'), (1075, '    ITERATOR *start_it, // from list start'), (1076, '    ITERATOR *end_it);  // from list end'), (1090, ' *              ELIST2::sort'), (1098, '      const CLASSNAME *, const CLASSNAME *)) {'), (1103, '      std::vector<CLASSNAME *> base;'), (1106, '      ITERATOR it(this);'), (1130, '  void add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), CLASSNAME *new_link) {'), (1145, '      ITERATOR it(this);'), (1163, '#define ELIST2IZEH(CLASSNAME)                           \\'), (1164, '  class CLASSNAME##_LIST : public ELIST2<CLASSNAME> {   \\'), (1166, '    using ELIST2<CLASSNAME>::ELIST2;                    \\'), (1168, '  class CLASSNAME##_IT : public ELIST2<CLASSNAME>::ITERATOR { \\'), (1170, '    using base = ELIST2<CLASSNAME>::ITERATOR;           \\')]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,363bf4e00d5fe10b12f06182253cc169245abef3,60c1c26d2f18e6bdf01970ccf42b084d5e7f9432,Update unittest.yml,"@@ -8,7 +8,7 @@ on:
       - '**.cpp'
       - '**.h'
       - '**Makefile.am'
-        '/configure.ac'
+      - '/configure.ac'
       - 'unittest/**.c'
       - 'unittest/**.cc'
   schedule:
","{'added': [(11, ""      - '/configure.ac'"")], 'deleted': [(11, ""        '/configure.ac'"")]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,60c1c26d2f18e6bdf01970ccf42b084d5e7f9432,a9b012bbe2f746c510f791fe20f5e88ada971201,unittest.yml: Add path filters for PRs,"@@ -4,6 +4,13 @@ name: unittest
 on:
   #push:
   pull_request:
+    paths:
+      - '**.cpp'
+      - '**.h'
+      - '**Makefile.am'
+        '/configure.ac'
+      - 'unittest/**.c'
+      - 'unittest/**.cc'
   schedule:
     - cron: 0 0 * * *
   workflow_dispatch:
","{'added': [(7, '    paths:'), (8, ""      - '**.cpp'""), (9, ""      - '**.h'""), (10, ""      - '**Makefile.am'""), (11, ""        '/configure.ac'""), (12, ""      - 'unittest/**.c'""), (13, ""      - 'unittest/**.cc'"")], 'deleted': []}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,a9b012bbe2f746c510f791fe20f5e88ada971201,5af6cacf84587c9c4af01c6a628bd6af90b6cd29,unittest.yml: run this also on PRs,"@@ -3,6 +3,7 @@ name: unittest
 # ubuntu-20.04-gcc-unittest - CI runs out of diskspace.
 on:
   #push:
+  pull_request:
   schedule:
     - cron: 0 0 * * *
   workflow_dispatch:
","{'added': [(6, '  pull_request:')], 'deleted': []}",yes
src\ccutil\helpers.h,src\ccutil\helpers.h,5af6cacf84587c9c4af01c6a628bd6af90b6cd29,66cf74f2dd82790444ef321d3bf03fa303e9caef,"Restore original congruential random number generator

This reverts commit 32fee1944772ba98f2c181e0a90221c09def78a7
(""Fix linear congruential random number generator""),
commit 2252936fc801aee6c65a0bae9daee0638f56febf
(""Use linear congruential random number generator from C++11."")
and commit 7b8af67eb5ebe333f289dea919e11769ddb6f138
(""[test] Fix intsimdmatrix test. Update result value based on updated TRand engine."").

It restores the original congruential random number generator
and the related unittest.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -27,7 +27,6 @@
 #include <cstring>
 #include <algorithm>  // for std::find
 #include <functional>
-#include <random>
 #include <string>
 #include <vector>
 
@@ -73,9 +72,10 @@ inline const std::vector<std::string> split(const std::string &s, char c) {
 // http://en.wikipedia.org/wiki/Linear_congruential_generator.
 class TRand {
 public:
+  TRand() = default;
   // Sets the seed to the given value.
   void set_seed(uint64_t seed) {
-    e.seed(seed);
+    seed_ = seed;
   }
   // Sets the seed using a hash of a string.
   void set_seed(const std::string &str) {
@@ -85,7 +85,8 @@ public:
 
   // Returns an integer in the range 0 to INT32_MAX.
   int32_t IntRand() {
-    return e();
+    Iterate();
+    return seed_ >> 33;
   }
   // Returns a floating point value in the range [-range, range].
   double SignedRand(double range) {
@@ -97,10 +98,14 @@ public:
   }
 
 private:
-  std::linear_congruential_engine<std::uint_fast32_t,
-                                  6364136223846793005ULL,
-                                  1442695040888963407ULL,
-                                  UINT64_MAX> e;
+  // Steps the generator to the next value.
+  void Iterate() {
+    seed_ *= 6364136223846793005ULL;
+    seed_ += 1442695040888963407ULL;
+  }
+
+  // The current value of the seed.
+  uint64_t seed_{1};
 };
 
 // Remove newline (if any) at the end of the string.
","{'added': [(75, '  TRand() = default;'), (78, '    seed_ = seed;'), (88, '    Iterate();'), (89, '    return seed_ >> 33;'), (101, '  // Steps the generator to the next value.'), (102, '  void Iterate() {'), (103, '    seed_ *= 6364136223846793005ULL;'), (104, '    seed_ += 1442695040888963407ULL;'), (105, '  }'), (106, ''), (107, '  // The current value of the seed.'), (108, '  uint64_t seed_{1};')], 'deleted': [(30, '#include <random>'), (78, '    e.seed(seed);'), (88, '    return e();'), (100, '  std::linear_congruential_engine<std::uint_fast32_t,'), (101, '                                  6364136223846793005ULL,'), (102, '                                  1442695040888963407ULL,'), (103, '                                  UINT64_MAX> e;')]}",yes
unittest\intsimdmatrix_test.cc,unittest\intsimdmatrix_test.cc,5af6cacf84587c9c4af01c6a628bd6af90b6cd29,66cf74f2dd82790444ef321d3bf03fa303e9caef,"Restore original congruential random number generator

This reverts commit 32fee1944772ba98f2c181e0a90221c09def78a7
(""Fix linear congruential random number generator""),
commit 2252936fc801aee6c65a0bae9daee0638f56febf
(""Use linear congruential random number generator from C++11."")
and commit 7b8af67eb5ebe333f289dea919e11769ddb6f138
(""[test] Fix intsimdmatrix test. Update result value based on updated TRand engine."").

It restores the original congruential random number generator
and the related unittest.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -92,9 +92,9 @@ protected:
     }
     // Compare sum of all results with expected value.
 #ifdef FAST_FLOAT
-    EXPECT_FLOAT_EQ(total, 337852.16f);
+    EXPECT_FLOAT_EQ(total, -423236.53f);
 #else
-    EXPECT_FLOAT_EQ(total, 337849.39354684710);
+    EXPECT_FLOAT_EQ(total, -423243.392011);
 #endif
   }
 
","{'added': [(95, '    EXPECT_FLOAT_EQ(total, -423236.53f);'), (97, '    EXPECT_FLOAT_EQ(total, -423243.392011);')], 'deleted': [(95, '    EXPECT_FLOAT_EQ(total, 337852.16f);'), (97, '    EXPECT_FLOAT_EQ(total, 337849.39354684710);')]}",yes
src\ccstruct\polyblk.cpp,src\ccstruct\polyblk.cpp,66cf74f2dd82790444ef321d3bf03fa303e9caef,b3e0c8e3a0cc8b4a4e587540d278633376986a20,Make one-time comparator a lambda.,"@@ -34,8 +34,6 @@ namespace tesseract {
 
 #define INTERSECTING INT16_MAX
 
-int lessthan(const ICOORDELT *first, const ICOORDELT *second);
-
 POLY_BLOCK::POLY_BLOCK(ICOORDELT_LIST *points, PolyBlockType t) {
   ICOORDELT_IT v = &vertices;
 
@@ -357,7 +355,15 @@ ICOORDELT_LIST *PB_LINE_IT::get_line(TDimension y) {
   }
 
   if (!r.empty()) {
-    r.sort(lessthan);
+    r.sort([](const ICOORDELT *p1, const ICOORDELT *p2) {
+      if (p1->x() < p2->x()) {
+        return (-1);
+      } else if (p1->x() > p2->x()) {
+        return (1);
+      } else {
+        return (0);
+      }
+      });
     for (r.mark_cycle_pt(); !r.cycled_list(); r.forward()) {
       x = r.data();
     }
@@ -371,16 +377,6 @@ ICOORDELT_LIST *PB_LINE_IT::get_line(TDimension y) {
   return result;
 }
 
-int lessthan(const ICOORDELT *p1, const ICOORDELT *p2) {
-  if (p1->x() < p2->x()) {
-    return (-1);
-  } else if (p1->x() > p2->x()) {
-    return (1);
-  } else {
-    return (0);
-  }
-}
-
 #ifndef GRAPHICS_DISABLED
 /// Returns a color to draw the given type.
 ScrollView::Color POLY_BLOCK::ColorForPolyBlockType(PolyBlockType type) {
","{'added': [(358, '    r.sort([](const ICOORDELT *p1, const ICOORDELT *p2) {'), (359, '      if (p1->x() < p2->x()) {'), (360, '        return (-1);'), (361, '      } else if (p1->x() > p2->x()) {'), (362, '        return (1);'), (363, '      } else {'), (364, '        return (0);'), (365, '      }'), (366, '      });')], 'deleted': [(37, 'int lessthan(const ICOORDELT *first, const ICOORDELT *second);'), (38, ''), (360, '    r.sort(lessthan);'), (374, 'int lessthan(const ICOORDELT *p1, const ICOORDELT *p2) {'), (375, '  if (p1->x() < p2->x()) {'), (376, '    return (-1);'), (377, '  } else if (p1->x() > p2->x()) {'), (378, '    return (1);'), (379, '  } else {'), (380, '    return (0);'), (381, '  }'), (382, '}'), (383, '')]}",yes
src\ccutil\clst.h,src\ccutil\clst.h,b3e0c8e3a0cc8b4a4e587540d278633376986a20,1526cf16fb2afa9258fa5426129c93f54470088b,Add missing <algorithm> header for std::sort().,"@@ -22,6 +22,7 @@
 #include ""lsterr.h""
 #include ""serialis.h""
 
+#include <algorithm>
 #include <cstdio>
 
 namespace tesseract {
","{'added': [(25, '#include <algorithm>')], 'deleted': []}",yes
src\ccutil\elst.h,src\ccutil\elst.h,b3e0c8e3a0cc8b4a4e587540d278633376986a20,1526cf16fb2afa9258fa5426129c93f54470088b,Add missing <algorithm> header for std::sort().,"@@ -22,6 +22,7 @@
 #include ""lsterr.h""
 #include ""serialis.h""
 
+#include <algorithm>
 #include <cstdio>
 
 namespace tesseract {
","{'added': [(25, '#include <algorithm>')], 'deleted': []}",yes
src\ccutil\elst2.h,src\ccutil\elst2.h,b3e0c8e3a0cc8b4a4e587540d278633376986a20,1526cf16fb2afa9258fa5426129c93f54470088b,Add missing <algorithm> header for std::sort().,"@@ -22,6 +22,7 @@
 #include ""lsterr.h""
 #include ""serialis.h""
 
+#include <algorithm>
 #include <cstdio>
 
 namespace tesseract {
","{'added': [(25, '#include <algorithm>')], 'deleted': []}",yes
src\ccutil\elst.h,src\ccutil\elst.h,1526cf16fb2afa9258fa5426129c93f54470088b,1355287df1b078d3b29ab308e454c3cb0e359836,Make lists classes again.,"@@ -1110,13 +1110,15 @@ public:
 
 // add TESS_API?
 // move templated lists to public include dirs?
-#define ELISTIZEH(CLASSNAME)                                                  \
-  struct CLASSNAME##_LIST : ELIST<CLASSNAME> {                          \
-    using ELIST<CLASSNAME>::ELIST;                                            \
-  };                  \
-  struct CLASSNAME##_IT : ELIST<CLASSNAME>::ITERATOR {            \
-    using base = ELIST<CLASSNAME>::ITERATOR;          \
-    using base::base;                   \
+#define ELISTIZEH(CLASSNAME)                            \
+  class CLASSNAME##_LIST : public ELIST<CLASSNAME> {    \
+  public:                                               \
+    using ELIST<CLASSNAME>::ELIST;                      \
+  };                                                    \
+  class CLASSNAME##_IT : public ELIST<CLASSNAME>::ITERATOR { \
+  public:                                               \
+    using base = ELIST<CLASSNAME>::ITERATOR;            \
+    using base::base;                                   \
   };
 
 } // namespace tesseract
","{'added': [(1113, '#define ELISTIZEH(CLASSNAME)                            \\'), (1114, '  class CLASSNAME##_LIST : public ELIST<CLASSNAME> {    \\'), (1115, '  public:                                               \\'), (1116, '    using ELIST<CLASSNAME>::ELIST;                      \\'), (1117, '  };                                                    \\'), (1118, '  class CLASSNAME##_IT : public ELIST<CLASSNAME>::ITERATOR { \\'), (1119, '  public:                                               \\'), (1120, '    using base = ELIST<CLASSNAME>::ITERATOR;            \\'), (1121, '    using base::base;                                   \\')], 'deleted': [(1113, '#define ELISTIZEH(CLASSNAME)                                                  \\'), (1114, '  struct CLASSNAME##_LIST : ELIST<CLASSNAME> {                          \\'), (1115, '    using ELIST<CLASSNAME>::ELIST;                                            \\'), (1116, '  };                  \\'), (1117, '  struct CLASSNAME##_IT : ELIST<CLASSNAME>::ITERATOR {            \\'), (1118, '    using base = ELIST<CLASSNAME>::ITERATOR;          \\'), (1119, '    using base::base;                   \\')]}",yes
src\ccutil\elst2.h,src\ccutil\elst2.h,1526cf16fb2afa9258fa5426129c93f54470088b,1355287df1b078d3b29ab308e454c3cb0e359836,Make lists classes again.,"@@ -1159,13 +1159,15 @@ public:
 
 // add TESS_API?
 // move templated lists to public include dirs?
-#define ELIST2IZEH(CLASSNAME)                                                  \
-  struct CLASSNAME##_LIST : ELIST2<CLASSNAME> {                          \
-    using ELIST2<CLASSNAME>::ELIST2;                                            \
-  };                  \
-  struct CLASSNAME##_IT : ELIST2<CLASSNAME>::ITERATOR {            \
-    using base = ELIST2<CLASSNAME>::ITERATOR;          \
-    using base::base;                   \
+#define ELIST2IZEH(CLASSNAME)                           \
+  class CLASSNAME##_LIST : public ELIST2<CLASSNAME> {   \
+  public:                                               \
+    using ELIST2<CLASSNAME>::ELIST2;                    \
+  };                                                    \
+  class CLASSNAME##_IT : public ELIST2<CLASSNAME>::ITERATOR { \
+  public:                                               \
+    using base = ELIST2<CLASSNAME>::ITERATOR;           \
+    using base::base;                                   \
   };
 
 } // namespace tesseract
","{'added': [(1162, '#define ELIST2IZEH(CLASSNAME)                           \\'), (1163, '  class CLASSNAME##_LIST : public ELIST2<CLASSNAME> {   \\'), (1164, '  public:                                               \\'), (1165, '    using ELIST2<CLASSNAME>::ELIST2;                    \\'), (1166, '  };                                                    \\'), (1167, '  class CLASSNAME##_IT : public ELIST2<CLASSNAME>::ITERATOR { \\'), (1168, '  public:                                               \\'), (1169, '    using base = ELIST2<CLASSNAME>::ITERATOR;           \\'), (1170, '    using base::base;                                   \\')], 'deleted': [(1162, '#define ELIST2IZEH(CLASSNAME)                                                  \\'), (1163, '  struct CLASSNAME##_LIST : ELIST2<CLASSNAME> {                          \\'), (1164, '    using ELIST2<CLASSNAME>::ELIST2;                                            \\'), (1165, '  };                  \\'), (1166, '  struct CLASSNAME##_IT : ELIST2<CLASSNAME>::ITERATOR {            \\'), (1167, '    using base = ELIST2<CLASSNAME>::ITERATOR;          \\'), (1168, '    using base::base;                   \\')]}",yes
src\ccmain\fixspace.cpp,src\ccmain\fixspace.cpp,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -55,12 +55,9 @@ class ROW;
  **********************************************************************/
 
 static int c_blob_comparator( // sort blobs
-    const void *blob1p,       // ptr to ptr to blob1
-    const void *blob2p        // ptr to ptr to blob2
+    const C_BLOB *blob1,
+    const C_BLOB *blob2
 ) {
-  const C_BLOB *blob1 = *reinterpret_cast<const C_BLOB *const *>(blob1p);
-  const C_BLOB *blob2 = *reinterpret_cast<const C_BLOB *const *>(blob2p);
-
   return blob1->bounding_box().left() - blob2->bounding_box().left();
 }
 
","{'added': [(58, '    const C_BLOB *blob1,'), (59, '    const C_BLOB *blob2')], 'deleted': [(58, '    const void *blob1p,       // ptr to ptr to blob1'), (59, '    const void *blob2p        // ptr to ptr to blob2'), (61, '  const C_BLOB *blob1 = *reinterpret_cast<const C_BLOB *const *>(blob1p);'), (62, '  const C_BLOB *blob2 = *reinterpret_cast<const C_BLOB *const *>(blob2p);'), (63, '')]}",yes
src\ccmain\paramsd.cpp,src\ccmain\paramsd.cpp,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -191,9 +191,7 @@ void ParamsEditor::GetPrefixes(const char *s, std::string *level_one, std::strin
 }
 
 // Compare two VC objects by their name.
-int ParamContent::Compare(const void *v1, const void *v2) {
-  const ParamContent *one = *static_cast<const ParamContent *const *>(v1);
-  const ParamContent *two = *static_cast<const ParamContent *const *>(v2);
+int ParamContent::Compare(const ParamContent *one, const ParamContent *two) {
   return strcmp(one->GetName(), two->GetName());
 }
 
","{'added': [(194, 'int ParamContent::Compare(const ParamContent *one, const ParamContent *two) {')], 'deleted': [(194, 'int ParamContent::Compare(const void *v1, const void *v2) {'), (195, '  const ParamContent *one = *static_cast<const ParamContent *const *>(v1);'), (196, '  const ParamContent *two = *static_cast<const ParamContent *const *>(v2);')]}",yes
src\ccmain\paramsd.h,src\ccmain\paramsd.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -47,7 +47,7 @@ enum ParamType { VT_INTEGER, VT_BOOLEAN, VT_STRING, VT_DOUBLE };
 class ParamContent : public ELIST<ParamContent>::LINK {
 public:
   // Compare two VC objects by their name.
-  static int Compare(const void *v1, const void *v2);
+  static int Compare(const ParamContent *v1, const ParamContent *v2);
 
   // Gets a VC object identified by its ID.
   static ParamContent *GetParamContentById(int id);
","{'added': [(50, '  static int Compare(const ParamContent *v1, const ParamContent *v2);')], 'deleted': [(50, '  static int Compare(const void *v1, const void *v2);')]}",yes
src\ccstruct\ocrblock.cpp,src\ccstruct\ocrblock.cpp,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -68,9 +68,9 @@ BLOCK::BLOCK(const char *name, ///< filename
  * Sort Comparator: Return <0 if row1 top < row2 top
  */
 
-static int decreasing_top_order(const void *row1, const void *row2) {
-  return (*reinterpret_cast<ROW *const *>(row2))->bounding_box().top() -
-         (*reinterpret_cast<ROW *const *>(row1))->bounding_box().top();
+static int decreasing_top_order(const ROW *row1, const ROW *row2) {
+  return row2->bounding_box().top() -
+         row1->bounding_box().top();
 }
 
 /**
","{'added': [(71, 'static int decreasing_top_order(const ROW *row1, const ROW *row2) {'), (72, '  return row2->bounding_box().top() -'), (73, '         row1->bounding_box().top();')], 'deleted': [(71, 'static int decreasing_top_order(const void *row1, const void *row2) {'), (72, '  return (*reinterpret_cast<ROW *const *>(row2))->bounding_box().top() -'), (73, '         (*reinterpret_cast<ROW *const *>(row1))->bounding_box().top();')]}",yes
src\ccstruct\polyblk.cpp,src\ccstruct\polyblk.cpp,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -34,7 +34,7 @@ namespace tesseract {
 
 #define INTERSECTING INT16_MAX
 
-int lessthan(const void *first, const void *second);
+int lessthan(const ICOORDELT *first, const ICOORDELT *second);
 
 POLY_BLOCK::POLY_BLOCK(ICOORDELT_LIST *points, PolyBlockType t) {
   ICOORDELT_IT v = &vertices;
@@ -371,10 +371,7 @@ ICOORDELT_LIST *PB_LINE_IT::get_line(TDimension y) {
   return result;
 }
 
-int lessthan(const void *first, const void *second) {
-  const ICOORDELT *p1 = *reinterpret_cast<const ICOORDELT *const *>(first);
-  const ICOORDELT *p2 = *reinterpret_cast<const ICOORDELT *const *>(second);
-
+int lessthan(const ICOORDELT *p1, const ICOORDELT *p2) {
   if (p1->x() < p2->x()) {
     return (-1);
   } else if (p1->x() > p2->x()) {
","{'added': [(37, 'int lessthan(const ICOORDELT *first, const ICOORDELT *second);'), (374, 'int lessthan(const ICOORDELT *p1, const ICOORDELT *p2) {')], 'deleted': [(37, 'int lessthan(const void *first, const void *second);'), (374, 'int lessthan(const void *first, const void *second) {'), (375, '  const ICOORDELT *p1 = *reinterpret_cast<const ICOORDELT *const *>(first);'), (376, '  const ICOORDELT *p2 = *reinterpret_cast<const ICOORDELT *const *>(second);'), (377, '')]}",yes
src\ccstruct\stepblob.h,src\ccstruct\stepblob.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -120,9 +120,7 @@ public:
     return blob;
   }
 
-  static int SortByXMiddle(const void *v1, const void *v2) {
-    const C_BLOB *blob1 = *static_cast<const C_BLOB *const *>(v1);
-    const C_BLOB *blob2 = *static_cast<const C_BLOB *const *>(v2);
+  static int SortByXMiddle(const C_BLOB *blob1, const C_BLOB *blob2) {
     return blob1->bounding_box().x_middle() - blob2->bounding_box().x_middle();
   }
 
","{'added': [(123, '  static int SortByXMiddle(const C_BLOB *blob1, const C_BLOB *blob2) {')], 'deleted': [(123, '  static int SortByXMiddle(const void *v1, const void *v2) {'), (124, '    const C_BLOB *blob1 = *static_cast<const C_BLOB *const *>(v1);'), (125, '    const C_BLOB *blob2 = *static_cast<const C_BLOB *const *>(v2);')]}",yes
src\ccstruct\werd.cpp,src\ccstruct\werd.cpp,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -374,9 +374,7 @@ WERD &WERD::operator=(const WERD &source) {
  *  order of left edge.
  */
 
-int word_comparator(const void *word1p, const void *word2p) {
-  const WERD *word1 = *reinterpret_cast<const WERD *const *>(word1p);
-  const WERD *word2 = *reinterpret_cast<const WERD *const *>(word2p);
+int word_comparator(const WERD *word1, const WERD *word2) {
   return word1->bounding_box().left() - word2->bounding_box().left();
 }
 
","{'added': [(377, 'int word_comparator(const WERD *word1, const WERD *word2) {')], 'deleted': [(377, 'int word_comparator(const void *word1p, const void *word2p) {'), (378, '  const WERD *word1 = *reinterpret_cast<const WERD *const *>(word1p);'), (379, '  const WERD *word2 = *reinterpret_cast<const WERD *const *>(word2p);')]}",yes
src\ccstruct\werd.h,src\ccstruct\werd.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -205,7 +205,7 @@ ELIST2IZEH(WERD)
 namespace tesseract {
 
 // compare words by increasing order of left edge, suitable for qsort(3)
-int word_comparator(const void *word1p, const void *word2p);
+int word_comparator(const WERD *word1, const WERD *word2);
 
 } // namespace tesseract
 
","{'added': [(208, 'int word_comparator(const WERD *word1, const WERD *word2);')], 'deleted': [(208, 'int word_comparator(const void *word1p, const void *word2p);')]}",yes
src\ccutil\ambigs.h,src\ccutil\ambigs.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -117,9 +117,7 @@ public:
   // Comparator function for sorting AmbigSpec_LISTs. The lists will
   // be sorted by their wrong_ngram arrays. Example of wrong_ngram vectors
   // in a sorted AmbigSpec_LIST: [9 1 3], [9 3 4], [9 8], [9, 8 1].
-  static int compare_ambig_specs(const void *spec1, const void *spec2) {
-    const AmbigSpec *s1 = *static_cast<const AmbigSpec *const *>(spec1);
-    const AmbigSpec *s2 = *static_cast<const AmbigSpec *const *>(spec2);
+  static int compare_ambig_specs(const AmbigSpec *s1, const AmbigSpec *s2) {
     int result = UnicharIdArrayUtils::compare(s1->wrong_ngram, s2->wrong_ngram);
     if (result != 0) {
       return result;
","{'added': [(120, '  static int compare_ambig_specs(const AmbigSpec *s1, const AmbigSpec *s2) {')], 'deleted': [(120, '  static int compare_ambig_specs(const void *spec1, const void *spec2) {'), (121, '    const AmbigSpec *s1 = *static_cast<const AmbigSpec *const *>(spec1);'), (122, '    const AmbigSpec *s2 = *static_cast<const AmbigSpec *const *>(spec2);')]}",yes
src\ccutil\clst.h,src\ccutil\clst.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -19,7 +19,6 @@
 #ifndef CLST_H
 #define CLST_H
 
-#include ""list.h""
 #include ""lsterr.h""
 #include ""serialis.h""
 
@@ -764,7 +763,7 @@ public:
      **********************************************************************/
     void sort(     // sort elements
       int comparator(               // comparison routine
-        const void *, const void *)) {
+        const CLASSNAME *, const CLASSNAME *)) {
       list->sort(comparator);
       move_to_first();
     }
@@ -907,7 +906,9 @@ public:
       }
 
       // Sort the pointer array.
-      std::sort(base.begin(), base.end(), comparator);
+      std::sort(base.begin(), base.end(),
+        // all current comparators return -1,0,1, so we handle this correctly for std::sort
+        [&](auto &&l, auto &&r) {return comparator(l, r) < 0; });
 
       // Rebuild the list from the sorted pointers.
       for (auto current : base) {
","{'added': [(766, '        const CLASSNAME *, const CLASSNAME *)) {'), (909, '      std::sort(base.begin(), base.end(),'), (910, '        // all current comparators return -1,0,1, so we handle this correctly for std::sort'), (911, '        [&](auto &&l, auto &&r) {return comparator(l, r) < 0; });')], 'deleted': [(22, '#include ""list.h""'), (767, '        const void *, const void *)) {'), (910, '      std::sort(base.begin(), base.end(), comparator);')]}",yes
src\ccutil\elst.h,src\ccutil\elst.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -19,7 +19,6 @@
 #ifndef ELST_H
 #define ELST_H
 
-#include ""list.h""
 #include ""lsterr.h""
 #include ""serialis.h""
 
@@ -905,7 +904,7 @@ public:
    **********************************************************************/
     void sort(          // sort elements
       int comparator( // comparison routine
-        const void *, const void *)) {
+        const CLASSNAME *, const CLASSNAME *)) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST_ITERATOR::sort"", ABORT);
@@ -1032,7 +1031,7 @@ public:
  **********************************************************************/
   void sort(          // sort elements
     int comparator( // comparison routine
-      const void *, const void *)) {
+      const CLASSNAME *, const CLASSNAME *)) {
     // Allocate an array of pointers, one per list element.
     auto count = length();
 
@@ -1049,7 +1048,9 @@ public:
       }
 
       // Sort the pointer array.
-      qsort(&base[0], count, sizeof(base[0]), comparator);
+      std::sort(base.begin(), base.end(),
+        // all current comparators return -1,0,1, so we handle this correctly for std::sort
+        [&](auto &&l, auto &&r) {return comparator(l, r) < 0; });
 
       // Rebuild the list from the sorted pointers.
       for (auto current : base) {
@@ -1068,10 +1069,10 @@ public:
   // list) - new_link is not added to the list and the function returns the
   // pointer to the identical entry that already exists in the list
   // (otherwise the function returns new_link).
-  CLASSNAME *add_sorted_and_find(int comparator(const void *, const void *), bool unique,
+  CLASSNAME *add_sorted_and_find(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique,
     CLASSNAME *new_link) {
     // Check for adding at the end.
-    if (last == nullptr || comparator(&last, &new_link) < 0) {
+    if (last == nullptr || comparator(last, new_link) < 0) {
       if (last == nullptr) {
         new_link->next = new_link;
       } else {
@@ -1084,7 +1085,7 @@ public:
       ITERATOR it(this);
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
         auto *link = it.data();
-        int compare = comparator(&link, &new_link);
+        int compare = comparator(link, new_link);
         if (compare > 0) {
           break;
         } else if (unique && compare == 0) {
@@ -1102,7 +1103,7 @@ public:
 
   // Same as above, but returns true if the new entry was inserted, false
   // if the identical entry already existed in the list.
-  bool add_sorted(int comparator(const void *, const void *), bool unique, CLASSNAME *new_link) {
+  bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_link) {
     return (add_sorted_and_find(comparator, unique, new_link) == new_link);
   }
 };
","{'added': [(907, '        const CLASSNAME *, const CLASSNAME *)) {'), (1034, '      const CLASSNAME *, const CLASSNAME *)) {'), (1051, '      std::sort(base.begin(), base.end(),'), (1052, '        // all current comparators return -1,0,1, so we handle this correctly for std::sort'), (1053, '        [&](auto &&l, auto &&r) {return comparator(l, r) < 0; });'), (1072, '  CLASSNAME *add_sorted_and_find(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique,'), (1075, '    if (last == nullptr || comparator(last, new_link) < 0) {'), (1088, '        int compare = comparator(link, new_link);'), (1106, '  bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_link) {')], 'deleted': [(22, '#include ""list.h""'), (908, '        const void *, const void *)) {'), (1035, '      const void *, const void *)) {'), (1052, '      qsort(&base[0], count, sizeof(base[0]), comparator);'), (1071, '  CLASSNAME *add_sorted_and_find(int comparator(const void *, const void *), bool unique,'), (1074, '    if (last == nullptr || comparator(&last, &new_link) < 0) {'), (1087, '        int compare = comparator(&link, &new_link);'), (1105, '  bool add_sorted(int comparator(const void *, const void *), bool unique, CLASSNAME *new_link) {')]}",yes
src\ccutil\elst2.h,src\ccutil\elst2.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -19,7 +19,6 @@
 #ifndef ELST2_H
 #define ELST2_H
 
-#include ""list.h""
 #include ""lsterr.h""
 #include ""serialis.h""
 
@@ -972,7 +971,7 @@ public:
    **********************************************************************/
     void sort(          // sort elements
       int comparator( // comparison routine
-        const void *, const void *)) {
+        const CLASSNAME *, const CLASSNAME *)) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""ELIST2_ITERATOR::sort"", ABORT);
@@ -1095,7 +1094,7 @@ public:
  **********************************************************************/
   void sort(          // sort elements
     int comparator( // comparison routine
-      const void *, const void *)) {
+      const CLASSNAME *, const CLASSNAME *)) {
     // Allocate an array of pointers, one per list element.
     auto count = length();
     if (count > 0) {
@@ -1111,7 +1110,9 @@ public:
       }
 
       // Sort the pointer array.
-      qsort(&base[0], count, sizeof(base[0]), comparator);
+      std::sort(base.begin(), base.end(),
+        // all current comparators return -1,0,1, so we handle this correctly for std::sort
+        [&](auto &&l, auto &&r) {return comparator(l, r) < 0; });
 
       // Rebuild the list from the sorted pointers.
       for (auto current : base) {
@@ -1125,9 +1126,9 @@ public:
   // Comparison function is the same as used by sort, i.e. uses double
   // indirection. Time is O(1) to add to beginning or end.
   // Time is linear to add pre-sorted items to an empty list.
-  void add_sorted(int comparator(const void *, const void *), CLASSNAME *new_link) {
+  void add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), CLASSNAME *new_link) {
     // Check for adding at the end.
-    if (last == nullptr || comparator(&last, &new_link) < 0) {
+    if (last == nullptr || comparator(last, new_link) < 0) {
       if (last == nullptr) {
         new_link->next = new_link;
         new_link->prev = new_link;
@@ -1143,7 +1144,7 @@ public:
       ITERATOR it(this);
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
         auto link = it.data();
-        if (comparator(&link, &new_link) > 0) {
+        if (comparator(link, new_link) > 0) {
           break;
         }
       }
","{'added': [(974, '        const CLASSNAME *, const CLASSNAME *)) {'), (1097, '      const CLASSNAME *, const CLASSNAME *)) {'), (1113, '      std::sort(base.begin(), base.end(),'), (1114, '        // all current comparators return -1,0,1, so we handle this correctly for std::sort'), (1115, '        [&](auto &&l, auto &&r) {return comparator(l, r) < 0; });'), (1129, '  void add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), CLASSNAME *new_link) {'), (1131, '    if (last == nullptr || comparator(last, new_link) < 0) {'), (1147, '        if (comparator(link, new_link) > 0) {')], 'deleted': [(22, '#include ""list.h""'), (975, '        const void *, const void *)) {'), (1098, '      const void *, const void *)) {'), (1114, '      qsort(&base[0], count, sizeof(base[0]), comparator);'), (1128, '  void add_sorted(int comparator(const void *, const void *), CLASSNAME *new_link) {'), (1130, '    if (last == nullptr || comparator(&last, &new_link) < 0) {'), (1146, '        if (comparator(&link, &new_link) > 0) {')]}",yes
src\textord\colpartition.h,src\textord\colpartition.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -709,9 +709,7 @@ public:
   bool IsInSameColumnAs(const ColPartition &part) const;
 
   // Sort function to sort by bounding box.
-  static int SortByBBox(const void *p1, const void *p2) {
-    const ColPartition *part1 = *static_cast<const ColPartition *const *>(p1);
-    const ColPartition *part2 = *static_cast<const ColPartition *const *>(p2);
+  static int SortByBBox(const ColPartition *part1, const ColPartition *part2) {
     int mid_y1 = part1->bounding_box_.y_middle();
     int mid_y2 = part2->bounding_box_.y_middle();
     if ((part2->bounding_box_.bottom() <= mid_y1 &&
","{'added': [(712, '  static int SortByBBox(const ColPartition *part1, const ColPartition *part2) {')], 'deleted': [(712, '  static int SortByBBox(const void *p1, const void *p2) {'), (713, '    const ColPartition *part1 = *static_cast<const ColPartition *const *>(p1);'), (714, '    const ColPartition *part2 = *static_cast<const ColPartition *const *>(p2);')]}",yes
src\textord\makerow.cpp,src\textord\makerow.cpp,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -105,13 +105,8 @@ const int kMinLeaderCount = 5;
  * Sort function to sort rows in y from page top.
  */
 static int row_y_order(       // sort function
-    const void *item1, // items to compare
-    const void *item2) {
-  // converted ptr
-  const TO_ROW *row1 = *reinterpret_cast<const TO_ROW *const *>(item1);
-  // converted ptr
-  const TO_ROW *row2 = *reinterpret_cast<const TO_ROW *const *>(item2);
-
+    const TO_ROW *row1, // items to compare
+    const TO_ROW *row2) {
   if (row1->parallel_c() > row2->parallel_c()) {
     return -1;
   } else if (row1->parallel_c() < row2->parallel_c()) {
@@ -2540,13 +2535,8 @@ OVERLAP_STATE most_overlapping_row( // find best row
  * Sort function to sort blobs in x from page left.
  */
 int blob_x_order(      // sort function
-    const void *item1, // items to compare
-    const void *item2) {
-  // converted ptr
-  const BLOBNBOX *blob1 = *reinterpret_cast<const BLOBNBOX *const *>(item1);
-  // converted ptr
-  const BLOBNBOX *blob2 = *reinterpret_cast<const BLOBNBOX *const *>(item2);
-
+    const BLOBNBOX *blob1, // items to compare
+    const BLOBNBOX *blob2) {
   if (blob1->bounding_box().left() < blob2->bounding_box().left()) {
     return -1;
   } else if (blob1->bounding_box().left() > blob2->bounding_box().left()) {
","{'added': [(108, '    const TO_ROW *row1, // items to compare'), (109, '    const TO_ROW *row2) {'), (2538, '    const BLOBNBOX *blob1, // items to compare'), (2539, '    const BLOBNBOX *blob2) {')], 'deleted': [(108, '    const void *item1, // items to compare'), (109, '    const void *item2) {'), (110, '  // converted ptr'), (111, '  const TO_ROW *row1 = *reinterpret_cast<const TO_ROW *const *>(item1);'), (112, '  // converted ptr'), (113, '  const TO_ROW *row2 = *reinterpret_cast<const TO_ROW *const *>(item2);'), (114, ''), (2543, '    const void *item1, // items to compare'), (2544, '    const void *item2) {'), (2545, '  // converted ptr'), (2546, '  const BLOBNBOX *blob1 = *reinterpret_cast<const BLOBNBOX *const *>(item1);'), (2547, '  // converted ptr'), (2548, '  const BLOBNBOX *blob2 = *reinterpret_cast<const BLOBNBOX *const *>(item2);'), (2549, '')]}",yes
src\textord\makerow.h,src\textord\makerow.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -243,8 +243,8 @@ OVERLAP_STATE most_overlapping_row(TO_ROW_IT *row_it, // iterator
                                    bool testing_blob  // test stuff
 );
 int blob_x_order(      // sort function
-    const void *item1, // items to compare
-    const void *item2);
+    const BLOBNBOX *item1, // items to compare
+    const BLOBNBOX *item2);
 
 void mark_repeated_chars(TO_ROW *row);
 
","{'added': [(246, '    const BLOBNBOX *item1, // items to compare'), (247, '    const BLOBNBOX *item2);')], 'deleted': [(246, '    const void *item1, // items to compare'), (247, '    const void *item2);')]}",yes
src\textord\tabvector.h,src\textord\tabvector.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -286,9 +286,7 @@ public:
   }
 
   // Sort function for E2LIST::sort to sort by sort_key_.
-  static int SortVectorsByKey(const void *v1, const void *v2) {
-    const TabVector *tv1 = *static_cast<const TabVector *const *>(v1);
-    const TabVector *tv2 = *static_cast<const TabVector *const *>(v2);
+  static int SortVectorsByKey(const TabVector *tv1, const TabVector *tv2) {
     return tv1->sort_key_ - tv2->sort_key_;
   }
 
","{'added': [(289, '  static int SortVectorsByKey(const TabVector *tv1, const TabVector *tv2) {')], 'deleted': [(289, '  static int SortVectorsByKey(const void *v1, const void *v2) {'), (290, '    const TabVector *tv1 = *static_cast<const TabVector *const *>(v1);'), (291, '    const TabVector *tv2 = *static_cast<const TabVector *const *>(v2);')]}",yes
src\wordrec\lm_state.h,src\wordrec\lm_state.h,1355287df1b078d3b29ab308e454c3cb0e359836,1ceb14e274fae938cb5916742b099b679e1eb01d,Update sorting routines for lists.,"@@ -133,9 +133,7 @@ struct ViterbiStateEntry : public ELIST<ViterbiStateEntry>::LINK {
   }
   /// Comparator function for sorting ViterbiStateEntry_LISTs in
   /// non-increasing order of costs.
-  static int Compare(const void *e1, const void *e2) {
-    const ViterbiStateEntry *ve1 = *static_cast<const ViterbiStateEntry *const *>(e1);
-    const ViterbiStateEntry *ve2 = *static_cast<const ViterbiStateEntry *const *>(e2);
+  static int Compare(const ViterbiStateEntry *ve1, const ViterbiStateEntry *ve2) {
     return (ve1->cost < ve2->cost) ? -1 : 1;
   }
   inline bool Consistent() const {
","{'added': [(136, '  static int Compare(const ViterbiStateEntry *ve1, const ViterbiStateEntry *ve2) {')], 'deleted': [(136, '  static int Compare(const void *e1, const void *e2) {'), (137, '    const ViterbiStateEntry *ve1 = *static_cast<const ViterbiStateEntry *const *>(e1);'), (138, '    const ViterbiStateEntry *ve2 = *static_cast<const ViterbiStateEntry *const *>(e2);')]}",yes
src\ccutil\list.h,,1ceb14e274fae938cb5916742b099b679e1eb01d,0e139fa9f95e24b988891693a50334d97743d1ee,list.h is now unnecessary and removed.,"@@ -1,68 +0,0 @@
-/**********************************************************************
- ** Licensed under the Apache License, Version 2.0 (the ""License"");
- ** you may not use this file except in compliance with the License.
- ** You may obtain a copy of the License at
- ** http://www.apache.org/licenses/LICENSE-2.0
- ** Unless required by applicable law or agreed to in writing, software
- ** distributed under the License is distributed on an ""AS IS"" BASIS,
- ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- ** See the License for the specific language governing permissions and
- ** limitations under the License.
- *
- **********************************************************************/
-
-#ifndef LIST_ITERATOR_H
-#define LIST_ITERATOR_H
-
-#include <stdint.h>
-
-namespace tesseract {
-
-template <typename ITERATOR, typename CLASSNAME>
-struct X_ITER : ITERATOR {
-  X_ITER() = default;
-  template <typename U>
-  X_ITER(U *list) : ITERATOR(list) {}
-
-  CLASSNAME *data() {
-    return static_cast<CLASSNAME *>(ITERATOR::data());
-  }
-  CLASSNAME *data_relative(int8_t offset) {
-    return static_cast<CLASSNAME *>(ITERATOR::data_relative(offset));
-  }
-  CLASSNAME *forward() {
-    return static_cast<CLASSNAME *>(ITERATOR::forward());
-  }
-  CLASSNAME *extract() {
-    return static_cast<CLASSNAME *>(ITERATOR::extract());
-  }
-};
-
-template <typename CONTAINER, typename ITERATOR, typename CLASSNAME>
-struct X_LIST : CONTAINER {
-  X_LIST() = default;
-  X_LIST(const X_LIST &) = delete;
-  X_LIST &operator=(const X_LIST &) = delete;
-  ~X_LIST() {
-    clear();
-  }
-
-  /* delete elements */
-  void clear() {
-    CONTAINER::internal_clear([](void *link) {delete reinterpret_cast<CLASSNAME *>(link);});
-  }
-
-  /* Become a deep copy of src_list */
-  template <typename U>
-  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {
-    X_ITER<ITERATOR, CLASSNAME> from_it(const_cast<U *>(src_list));
-    X_ITER<ITERATOR, CLASSNAME> to_it(this);
-
-    for (from_it.mark_cycle_pt(); !from_it.cycled_list(); from_it.forward())
-      to_it.add_after_then_move((*copier)(from_it.data()));
-  }
-};
-
-} // namespace tesseract
-
-#endif
","{'added': [], 'deleted': [(1, '/**********************************************************************'), (2, ' ** Licensed under the Apache License, Version 2.0 (the ""License"");'), (3, ' ** you may not use this file except in compliance with the License.'), (4, ' ** You may obtain a copy of the License at'), (5, ' ** http://www.apache.org/licenses/LICENSE-2.0'), (6, ' ** Unless required by applicable law or agreed to in writing, software'), (7, ' ** distributed under the License is distributed on an ""AS IS"" BASIS,'), (8, ' ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (9, ' ** See the License for the specific language governing permissions and'), (10, ' ** limitations under the License.'), (11, ' *'), (12, ' **********************************************************************/'), (13, ''), (14, '#ifndef LIST_ITERATOR_H'), (15, '#define LIST_ITERATOR_H'), (16, ''), (17, '#include <stdint.h>'), (18, ''), (19, 'namespace tesseract {'), (20, ''), (21, 'template <typename ITERATOR, typename CLASSNAME>'), (22, 'struct X_ITER : ITERATOR {'), (23, '  X_ITER() = default;'), (24, '  template <typename U>'), (25, '  X_ITER(U *list) : ITERATOR(list) {}'), (26, ''), (27, '  CLASSNAME *data() {'), (28, '    return static_cast<CLASSNAME *>(ITERATOR::data());'), (29, '  }'), (30, '  CLASSNAME *data_relative(int8_t offset) {'), (31, '    return static_cast<CLASSNAME *>(ITERATOR::data_relative(offset));'), (32, '  }'), (33, '  CLASSNAME *forward() {'), (34, '    return static_cast<CLASSNAME *>(ITERATOR::forward());'), (35, '  }'), (36, '  CLASSNAME *extract() {'), (37, '    return static_cast<CLASSNAME *>(ITERATOR::extract());'), (38, '  }'), (39, '};'), (40, ''), (41, 'template <typename CONTAINER, typename ITERATOR, typename CLASSNAME>'), (42, 'struct X_LIST : CONTAINER {'), (43, '  X_LIST() = default;'), (44, '  X_LIST(const X_LIST &) = delete;'), (45, '  X_LIST &operator=(const X_LIST &) = delete;'), (46, '  ~X_LIST() {'), (47, '    clear();'), (48, '  }'), (49, ''), (50, '  /* delete elements */'), (51, '  void clear() {'), (52, '    CONTAINER::internal_clear([](void *link) {delete reinterpret_cast<CLASSNAME *>(link);});'), (53, '  }'), (54, ''), (55, '  /* Become a deep copy of src_list */'), (56, '  template <typename U>'), (57, '  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {'), (58, '    X_ITER<ITERATOR, CLASSNAME> from_it(const_cast<U *>(src_list));'), (59, '    X_ITER<ITERATOR, CLASSNAME> to_it(this);'), (60, ''), (61, '    for (from_it.mark_cycle_pt(); !from_it.cycled_list(); from_it.forward())'), (62, '      to_it.add_after_then_move((*copier)(from_it.data()));'), (63, '  }'), (64, '};'), (65, ''), (66, '} // namespace tesseract'), (67, ''), (68, '#endif')]}",yes
Makefile.am,Makefile.am,0e139fa9f95e24b988891693a50334d97743d1ee,15635203f456e5c44c8f58c6c7576577ed755d67,Update Makefile.am.,"@@ -394,9 +394,6 @@ endif
 noinst_LTLIBRARIES += libtesseract_ccutil.la
 
 libtesseract_ccutil_la_SOURCES = src/ccutil/ccutil.cpp
-libtesseract_ccutil_la_SOURCES += src/ccutil/clst.cpp
-libtesseract_ccutil_la_SOURCES += src/ccutil/elst2.cpp
-libtesseract_ccutil_la_SOURCES += src/ccutil/elst.cpp
 libtesseract_ccutil_la_SOURCES += src/ccutil/errcode.cpp
 libtesseract_ccutil_la_SOURCES += src/ccutil/serialis.cpp
 libtesseract_ccutil_la_SOURCES += src/ccutil/scanutils.cpp
","{'added': [], 'deleted': [(397, 'libtesseract_ccutil_la_SOURCES += src/ccutil/clst.cpp'), (398, 'libtesseract_ccutil_la_SOURCES += src/ccutil/elst2.cpp'), (399, 'libtesseract_ccutil_la_SOURCES += src/ccutil/elst.cpp')]}",yes
src\ccutil\universalambigs.h,src\ccutil\universalambigs.h,15635203f456e5c44c8f58c6c7576577ed755d67,63be2168143e82df24f44ad8cee9447771fa6771,Fix msvc warning.,"@@ -22,8 +22,10 @@
 
 namespace tesseract {
 
+#ifndef _MSC_VER
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored ""-Woverlength-strings""
+#endif
 inline const char kUniversalAmbigsFile[] = {
     ""v2\n""
     ""'' \"" 1\n""
@@ -19035,7 +19037,9 @@ inline const char kUniversalAmbigsFile[] = {
     ""iXl in 1\n""
 #endif
 };
+#ifndef _MSC_VER
 #pragma GCC diagnostic pop
+#endif
 
 inline const int ksizeofUniversalAmbigsFile = sizeof(kUniversalAmbigsFile);
 
","{'added': [(25, '#ifndef _MSC_VER'), (28, '#endif'), (19040, '#ifndef _MSC_VER'), (19042, '#endif')], 'deleted': []}",yes
src\ccstruct\blobbox.h,src\ccstruct\blobbox.h,63be2168143e82df24f44ad8cee9447771fa6771,4991295a394ffa316c09da9fa745796a45ae3dbb,Convert ELIST2 into template.,"@@ -552,7 +552,7 @@ private:
   bool owns_cblob_ = false;
 };
 
-class TO_ROW : public ELIST2_LINK {
+class TO_ROW : public ELIST2<TO_ROW>::LINK {
 public:
   static const int kErrorWeight = 3;
 
","{'added': [(555, 'class TO_ROW : public ELIST2<TO_ROW>::LINK {')], 'deleted': [(555, 'class TO_ROW : public ELIST2_LINK {')]}",yes
src\ccstruct\werd.cpp,src\ccstruct\werd.cpp,63be2168143e82df24f44ad8cee9447771fa6771,4991295a394ffa316c09da9fa745796a45ae3dbb,Convert ELIST2 into template.,"@@ -355,7 +355,7 @@ WERD *WERD::shallow_copy() {
  */
 
 WERD &WERD::operator=(const WERD &source) {
-  this->ELIST2_LINK::operator=(source);
+  this->ELIST2<WERD>::LINK::operator=(source);
   blanks = source.blanks;
   flags = source.flags;
   script_id_ = source.script_id_;
","{'added': [(358, '  this->ELIST2<WERD>::LINK::operator=(source);')], 'deleted': [(358, '  this->ELIST2_LINK::operator=(source);')]}",yes
src\ccstruct\werd.h,src\ccstruct\werd.h,63be2168143e82df24f44ad8cee9447771fa6771,4991295a394ffa316c09da9fa745796a45ae3dbb,Convert ELIST2 into template.,"@@ -55,7 +55,7 @@ enum DISPLAY_FLAGS {
 
 class ROW; // forward decl
 
-class TESS_API WERD : public ELIST2_LINK {
+class TESS_API WERD : public ELIST2<WERD>::LINK {
 public:
   WERD() = default;
   // WERD constructed with:
","{'added': [(58, 'class TESS_API WERD : public ELIST2<WERD>::LINK {')], 'deleted': [(58, 'class TESS_API WERD : public ELIST2_LINK {')]}",yes
src\ccutil\elst2.cpp,,63be2168143e82df24f44ad8cee9447771fa6771,4991295a394ffa316c09da9fa745796a45ae3dbb,Convert ELIST2 into template.,"@@ -1,476 +0,0 @@
-/**********************************************************************
- * File:        elst2.cpp  (Formerly elist2.c)
- * Description: Doubly linked embedded list code not in the include file.
- * Author:      Phil Cheatle
- *
- * (C) Copyright 1991, Hewlett-Packard Ltd.
- ** Licensed under the Apache License, Version 2.0 (the ""License"");
- ** you may not use this file except in compliance with the License.
- ** You may obtain a copy of the License at
- ** http://www.apache.org/licenses/LICENSE-2.0
- ** Unless required by applicable law or agreed to in writing, software
- ** distributed under the License is distributed on an ""AS IS"" BASIS,
- ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- ** See the License for the specific language governing permissions and
- ** limitations under the License.
- *
- **********************************************************************/
-
-#include ""elst2.h""
-
-#include <cstdlib>
-
-namespace tesseract {
-
-/***********************************************************************
- *              ELIST2::internal_clear
- *
- *  Used by the destructor and the ""clear"" member function of derived list
- *  classes to destroy all the elements on the list.
- *  The calling function passes a ""zapper"" function which can be called to
- *  delete each element of the list, regardless of its derived type.  This
- *  technique permits a generic clear function to destroy elements of
- *  different derived types correctly, without requiring virtual functions and
- *  the consequential memory overhead.
- **********************************************************************/
-
-void ELIST2::internal_clear( // destroy all links
-    void (*zapper)(void *)) {
-  // ptr to zapper functn
-  ELIST2_LINK *ptr;
-  ELIST2_LINK *next;
-
-  if (!empty()) {
-    ptr = last->next;     // set to first
-    last->next = nullptr; // break circle
-    last = nullptr;       // set list empty
-    while (ptr) {
-      next = ptr->next;
-      zapper(ptr);
-      ptr = next;
-    }
-  }
-}
-
-/***********************************************************************
- *              ELIST2::assign_to_sublist
- *
- *  The list is set to a sublist of another list.  ""This"" list must be empty
- *  before this function is invoked.  The two iterators passed must refer to
- *  the same list, different from ""this"" one.  The sublist removed is the
- *  inclusive list from start_it's current position to end_it's current
- *  position.  If this range passes over the end of the source list then the
- *  source list has its end set to the previous element of start_it.  The
- *  extracted sublist is unaffected by the end point of the source list, its
- *  end point is always the end_it position.
- **********************************************************************/
-
-void ELIST2::assign_to_sublist( // to this list
-    ELIST2_ITERATOR *start_it,  // from list start
-    ELIST2_ITERATOR *end_it) {  // from list end
-  constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");
-
-  if (!empty()) {
-    LIST_NOT_EMPTY.error(""ELIST2.assign_to_sublist"", ABORT);
-  }
-
-  last = start_it->extract_sublist(end_it);
-}
-
-/***********************************************************************
- *              ELIST2::sort
- *
- *  Sort elements on list
- *  NB If you don't like the const declarations in the comparator, coerce yours:
- *   (int (*)(const void *, const void *)
- **********************************************************************/
-
-void ELIST2::sort(  // sort elements
-    int comparator( // comparison routine
-        const void *, const void *)) {
-  // Allocate an array of pointers, one per list element.
-  auto count = length();
-  if (count > 0) {
-    // ptr array to sort
-    std::vector<ELIST2_LINK *> base;
-    base.reserve(count);
-
-    ELIST2_ITERATOR it(this);
-
-    // Extract all elements, putting the pointers in the array.
-    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
-      base.push_back(it.extract());
-    }
-
-    // Sort the pointer array.
-    qsort(&base[0], count, sizeof(base[0]), comparator);
-
-    // Rebuild the list from the sorted pointers.
-    for (auto current : base) {
-      it.add_to_end(current);
-    }
-  }
-}
-
-// Assuming list has been sorted already, insert new_link to
-// keep the list sorted according to the same comparison function.
-// Comparison function is the same as used by sort, i.e. uses double
-// indirection. Time is O(1) to add to beginning or end.
-// Time is linear to add pre-sorted items to an empty list.
-void ELIST2::add_sorted(int comparator(const void *, const void *), ELIST2_LINK *new_link) {
-  // Check for adding at the end.
-  if (last == nullptr || comparator(&last, &new_link) < 0) {
-    if (last == nullptr) {
-      new_link->next = new_link;
-      new_link->prev = new_link;
-    } else {
-      new_link->next = last->next;
-      new_link->prev = last;
-      last->next = new_link;
-      new_link->next->prev = new_link;
-    }
-    last = new_link;
-  } else {
-    // Need to use an iterator.
-    ELIST2_ITERATOR it(this);
-    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
-      ELIST2_LINK *link = it.data();
-      if (comparator(&link, &new_link) > 0) {
-        break;
-      }
-    }
-    if (it.cycled_list()) {
-      it.add_to_end(new_link);
-    } else {
-      it.add_before_then_move(new_link);
-    }
-  }
-}
-
-/***********************************************************************
- *  MEMBER FUNCTIONS OF CLASS: ELIST2_ITERATOR
- *  ==========================================
- **********************************************************************/
-
-/***********************************************************************
- *              ELIST2_ITERATOR::forward
- *
- *  Move the iterator to the next element of the list.
- *  REMEMBER: ALL LISTS ARE CIRCULAR.
- **********************************************************************/
-
-ELIST2_LINK *ELIST2_ITERATOR::forward() {
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""ELIST2_ITERATOR::forward"", ABORT);
-#endif
-  if (list->empty()) {
-    return nullptr;
-  }
-
-  if (current) { // not removed so
-                 // set previous
-    prev = current;
-    started_cycling = true;
-    // In case next is deleted by another iterator, get it from the current.
-    current = current->next;
-  } else {
-    if (ex_current_was_cycle_pt) {
-      cycle_pt = next;
-    }
-    current = next;
-  }
-
-#ifndef NDEBUG
-  if (!current)
-    NULL_DATA.error(""ELIST2_ITERATOR::forward"", ABORT);
-#endif
-
-  next = current->next;
-
-#ifndef NDEBUG
-  if (!next) {
-    NULL_NEXT.error(""ELIST2_ITERATOR::forward"", ABORT,
-                    ""This is: %p  Current is: %p"",
-                    static_cast<void *>(this),
-                    static_cast<void *>(current));
-  }
-#endif
-
-  return current;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::backward
- *
- *  Move the iterator to the previous element of the list.
- *  REMEMBER: ALL LISTS ARE CIRCULAR.
- **********************************************************************/
-
-ELIST2_LINK *ELIST2_ITERATOR::backward() {
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""ELIST2_ITERATOR::backward"", ABORT);
-#endif
-  if (list->empty()) {
-    return nullptr;
-  }
-
-  if (current) { // not removed so
-                 // set previous
-    next = current;
-    started_cycling = true;
-    // In case prev is deleted by another iterator, get it from current.
-    current = current->prev;
-  } else {
-    if (ex_current_was_cycle_pt) {
-      cycle_pt = prev;
-    }
-    current = prev;
-  }
-
-#ifndef NDEBUG
-  if (!current)
-    NULL_DATA.error(""ELIST2_ITERATOR::backward"", ABORT);
-  if (!prev) {
-    NULL_PREV.error(""ELIST2_ITERATOR::backward"", ABORT,
-                    ""This is: %p  Current is: %p"",
-                    static_cast<void *>(this),
-                    static_cast<void *>(current));
-  }
-#endif
-
-  prev = current->prev;
-  return current;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::data_relative
- *
- *  Return the data pointer to the element ""offset"" elements from current.
- *  (This function can't be INLINEd because it contains a loop)
- **********************************************************************/
-
-ELIST2_LINK *ELIST2_ITERATOR::data_relative( // get data + or - ..
-    int8_t offset) {                         // offset from current
-  ELIST2_LINK *ptr;
-
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""ELIST2_ITERATOR::data_relative"", ABORT);
-  if (list->empty())
-    EMPTY_LIST.error(""ELIST2_ITERATOR::data_relative"", ABORT);
-#endif
-
-  if (offset < 0) {
-    for (ptr = current ? current : next; offset++ < 0; ptr = ptr->prev) {
-      ;
-    }
-  } else {
-    for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {
-      ;
-    }
-  }
-
-#ifndef NDEBUG
-  if (!ptr)
-    NULL_DATA.error(""ELIST2_ITERATOR::data_relative"", ABORT);
-#endif
-
-  return ptr;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::exchange()
- *
- *  Given another iterator, whose current element is a different element on
- *  the same list list OR an element of another list, exchange the two current
- *  elements.  On return, each iterator points to the element which was the
- *  other iterators current on entry.
- *  (This function hasn't been in-lined because its a bit big!)
- **********************************************************************/
-
-void ELIST2_ITERATOR::exchange(  // positions of 2 links
-    ELIST2_ITERATOR *other_it) { // other iterator
-  constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
-
-  ELIST2_LINK *old_current;
-
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""ELIST2_ITERATOR::exchange"", ABORT);
-  if (!other_it)
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::exchange"", ABORT, ""other_it nullptr"");
-  if (!(other_it->list))
-    NO_LIST.error(""ELIST2_ITERATOR::exchange"", ABORT, ""other_it"");
-#endif
-
-  /* Do nothing if either list is empty or if both iterators reference the same
-link */
-
-  if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {
-    return;
-  }
-
-  /* Error if either current element is deleted */
-
-  if (!current || !other_it->current) {
-    DONT_EXCHANGE_DELETED.error(""ELIST2_ITERATOR.exchange"", ABORT);
-  }
-
-  /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements
-(other before this); non-doubleton adjacent elements (this before other);
-non-adjacent elements. */
-
-  // adjacent links
-  if ((next == other_it->current) || (other_it->next == current)) {
-    // doubleton list
-    if ((next == other_it->current) && (other_it->next == current)) {
-      prev = next = current;
-      other_it->prev = other_it->next = other_it->current;
-    } else { // non-doubleton with
-             // adjacent links
-             // other before this
-      if (other_it->next == current) {
-        other_it->prev->next = current;
-        other_it->current->next = next;
-        other_it->current->prev = current;
-        current->next = other_it->current;
-        current->prev = other_it->prev;
-        next->prev = other_it->current;
-
-        other_it->next = other_it->current;
-        prev = current;
-      } else { // this before other
-        prev->next = other_it->current;
-        current->next = other_it->next;
-        current->prev = other_it->current;
-        other_it->current->next = current;
-        other_it->current->prev = prev;
-        other_it->next->prev = current;
-
-        next = current;
-        other_it->prev = other_it->current;
-      }
-    }
-  } else { // no overlap
-    prev->next = other_it->current;
-    current->next = other_it->next;
-    current->prev = other_it->prev;
-    next->prev = other_it->current;
-    other_it->prev->next = current;
-    other_it->current->next = next;
-    other_it->current->prev = prev;
-    other_it->next->prev = current;
-  }
-
-  /* update end of list pointer when necessary (remember that the 2 iterators
-  may iterate over different lists!) */
-
-  if (list->last == current) {
-    list->last = other_it->current;
-  }
-  if (other_it->list->last == other_it->current) {
-    other_it->list->last = current;
-  }
-
-  if (current == cycle_pt) {
-    cycle_pt = other_it->cycle_pt;
-  }
-  if (other_it->current == other_it->cycle_pt) {
-    other_it->cycle_pt = cycle_pt;
-  }
-
-  /* The actual exchange - in all cases*/
-
-  old_current = current;
-  current = other_it->current;
-  other_it->current = old_current;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::extract_sublist()
- *
- *  This is a private member, used only by ELIST2::assign_to_sublist.
- *  Given another iterator for the same list, extract the links from THIS to
- *  OTHER inclusive, link them into a new circular list, and return a
- *  pointer to the last element.
- *  (Can't inline this function because it contains a loop)
- **********************************************************************/
-
-ELIST2_LINK *ELIST2_ITERATOR::extract_sublist( // from this current
-    ELIST2_ITERATOR *other_it) {               // to other current
-#ifndef NDEBUG
-  constexpr ERRCODE BAD_EXTRACTION_PTS(""Can't extract sublist from points on different lists"");
-  constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
-#endif
-  constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
-
-  ELIST2_ITERATOR temp_it = *this;
-  ELIST2_LINK *end_of_new_list;
-
-#ifndef NDEBUG
-  if (!other_it)
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::extract_sublist"", ABORT, ""other_it nullptr"");
-  if (!list)
-    NO_LIST.error(""ELIST2_ITERATOR::extract_sublist"", ABORT);
-  if (list != other_it->list)
-    BAD_EXTRACTION_PTS.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);
-  if (list->empty())
-    EMPTY_LIST.error(""ELIST2_ITERATOR::extract_sublist"", ABORT);
-
-  if (!current || !other_it->current)
-    DONT_EXTRACT_DELETED.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);
-#endif
-
-  ex_current_was_last = other_it->ex_current_was_last = false;
-  ex_current_was_cycle_pt = false;
-  other_it->ex_current_was_cycle_pt = false;
-
-  temp_it.mark_cycle_pt();
-  do {                         // walk sublist
-    if (temp_it.cycled_list()) { // can't find end pt
-      BAD_SUBLIST.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);
-    }
-
-    if (temp_it.at_last()) {
-      list->last = prev;
-      ex_current_was_last = other_it->ex_current_was_last = true;
-    }
-
-    if (temp_it.current == cycle_pt) {
-      ex_current_was_cycle_pt = true;
-    }
-
-    if (temp_it.current == other_it->cycle_pt) {
-      other_it->ex_current_was_cycle_pt = true;
-    }
-
-    temp_it.forward();
-  }
-  // do INCLUSIVE list
-  while (temp_it.prev != other_it->current);
-
-  // circularise sublist
-  other_it->current->next = current;
-  // circularise sublist
-  current->prev = other_it->current;
-  end_of_new_list = other_it->current;
-
-  // sublist = whole list
-  if (prev == other_it->current) {
-    list->last = nullptr;
-    prev = current = next = nullptr;
-    other_it->prev = other_it->current = other_it->next = nullptr;
-  } else {
-    prev->next = other_it->next;
-    other_it->next->prev = prev;
-
-    current = other_it->current = nullptr;
-    next = other_it->next;
-    other_it->prev = prev;
-  }
-  return end_of_new_list;
-}
-
-} // namespace tesseract
","{'added': [], 'deleted': [(1, '/**********************************************************************'), (2, ' * File:        elst2.cpp  (Formerly elist2.c)'), (3, ' * Description: Doubly linked embedded list code not in the include file.'), (4, ' * Author:      Phil Cheatle'), (5, ' *'), (6, ' * (C) Copyright 1991, Hewlett-Packard Ltd.'), (7, ' ** Licensed under the Apache License, Version 2.0 (the ""License"");'), (8, ' ** you may not use this file except in compliance with the License.'), (9, ' ** You may obtain a copy of the License at'), (10, ' ** http://www.apache.org/licenses/LICENSE-2.0'), (11, ' ** Unless required by applicable law or agreed to in writing, software'), (12, ' ** distributed under the License is distributed on an ""AS IS"" BASIS,'), (13, ' ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (14, ' ** See the License for the specific language governing permissions and'), (15, ' ** limitations under the License.'), (16, ' *'), (17, ' **********************************************************************/'), (18, ''), (19, '#include ""elst2.h""'), (20, ''), (21, '#include <cstdlib>'), (22, ''), (23, 'namespace tesseract {'), (24, ''), (25, '/***********************************************************************'), (26, ' *              ELIST2::internal_clear'), (27, ' *'), (28, ' *  Used by the destructor and the ""clear"" member function of derived list'), (29, ' *  classes to destroy all the elements on the list.'), (30, ' *  The calling function passes a ""zapper"" function which can be called to'), (31, ' *  delete each element of the list, regardless of its derived type.  This'), (32, ' *  technique permits a generic clear function to destroy elements of'), (33, ' *  different derived types correctly, without requiring virtual functions and'), (34, ' *  the consequential memory overhead.'), (35, ' **********************************************************************/'), (36, ''), (37, 'void ELIST2::internal_clear( // destroy all links'), (38, '    void (*zapper)(void *)) {'), (39, '  // ptr to zapper functn'), (40, '  ELIST2_LINK *ptr;'), (41, '  ELIST2_LINK *next;'), (42, ''), (43, '  if (!empty()) {'), (44, '    ptr = last->next;     // set to first'), (45, '    last->next = nullptr; // break circle'), (46, '    last = nullptr;       // set list empty'), (47, '    while (ptr) {'), (48, '      next = ptr->next;'), (49, '      zapper(ptr);'), (50, '      ptr = next;'), (51, '    }'), (52, '  }'), (53, '}'), (54, ''), (55, '/***********************************************************************'), (56, ' *              ELIST2::assign_to_sublist'), (57, ' *'), (58, ' *  The list is set to a sublist of another list.  ""This"" list must be empty'), (59, ' *  before this function is invoked.  The two iterators passed must refer to'), (60, ' *  the same list, different from ""this"" one.  The sublist removed is the'), (61, "" *  inclusive list from start_it's current position to end_it's current""), (62, ' *  position.  If this range passes over the end of the source list then the'), (63, ' *  source list has its end set to the previous element of start_it.  The'), (64, ' *  extracted sublist is unaffected by the end point of the source list, its'), (65, ' *  end point is always the end_it position.'), (66, ' **********************************************************************/'), (67, ''), (68, 'void ELIST2::assign_to_sublist( // to this list'), (69, '    ELIST2_ITERATOR *start_it,  // from list start'), (70, '    ELIST2_ITERATOR *end_it) {  // from list end'), (71, '  constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");'), (72, ''), (73, '  if (!empty()) {'), (74, '    LIST_NOT_EMPTY.error(""ELIST2.assign_to_sublist"", ABORT);'), (75, '  }'), (76, ''), (77, '  last = start_it->extract_sublist(end_it);'), (78, '}'), (79, ''), (80, '/***********************************************************************'), (81, ' *              ELIST2::sort'), (82, ' *'), (83, ' *  Sort elements on list'), (84, "" *  NB If you don't like the const declarations in the comparator, coerce yours:""), (85, ' *   (int (*)(const void *, const void *)'), (86, ' **********************************************************************/'), (87, ''), (88, 'void ELIST2::sort(  // sort elements'), (89, '    int comparator( // comparison routine'), (90, '        const void *, const void *)) {'), (91, '  // Allocate an array of pointers, one per list element.'), (92, '  auto count = length();'), (93, '  if (count > 0) {'), (94, '    // ptr array to sort'), (95, '    std::vector<ELIST2_LINK *> base;'), (96, '    base.reserve(count);'), (97, ''), (98, '    ELIST2_ITERATOR it(this);'), (99, ''), (100, '    // Extract all elements, putting the pointers in the array.'), (101, '    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (102, '      base.push_back(it.extract());'), (103, '    }'), (104, ''), (105, '    // Sort the pointer array.'), (106, '    qsort(&base[0], count, sizeof(base[0]), comparator);'), (107, ''), (108, '    // Rebuild the list from the sorted pointers.'), (109, '    for (auto current : base) {'), (110, '      it.add_to_end(current);'), (111, '    }'), (112, '  }'), (113, '}'), (114, ''), (115, '// Assuming list has been sorted already, insert new_link to'), (116, '// keep the list sorted according to the same comparison function.'), (117, '// Comparison function is the same as used by sort, i.e. uses double'), (118, '// indirection. Time is O(1) to add to beginning or end.'), (119, '// Time is linear to add pre-sorted items to an empty list.'), (120, 'void ELIST2::add_sorted(int comparator(const void *, const void *), ELIST2_LINK *new_link) {'), (121, '  // Check for adding at the end.'), (122, '  if (last == nullptr || comparator(&last, &new_link) < 0) {'), (123, '    if (last == nullptr) {'), (124, '      new_link->next = new_link;'), (125, '      new_link->prev = new_link;'), (126, '    } else {'), (127, '      new_link->next = last->next;'), (128, '      new_link->prev = last;'), (129, '      last->next = new_link;'), (130, '      new_link->next->prev = new_link;'), (131, '    }'), (132, '    last = new_link;'), (133, '  } else {'), (134, '    // Need to use an iterator.'), (135, '    ELIST2_ITERATOR it(this);'), (136, '    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (137, '      ELIST2_LINK *link = it.data();'), (138, '      if (comparator(&link, &new_link) > 0) {'), (139, '        break;'), (140, '      }'), (141, '    }'), (142, '    if (it.cycled_list()) {'), (143, '      it.add_to_end(new_link);'), (144, '    } else {'), (145, '      it.add_before_then_move(new_link);'), (146, '    }'), (147, '  }'), (148, '}'), (149, ''), (150, '/***********************************************************************'), (151, ' *  MEMBER FUNCTIONS OF CLASS: ELIST2_ITERATOR'), (152, ' *  =========================================='), (153, ' **********************************************************************/'), (154, ''), (155, '/***********************************************************************'), (156, ' *              ELIST2_ITERATOR::forward'), (157, ' *'), (158, ' *  Move the iterator to the next element of the list.'), (159, ' *  REMEMBER: ALL LISTS ARE CIRCULAR.'), (160, ' **********************************************************************/'), (161, ''), (162, 'ELIST2_LINK *ELIST2_ITERATOR::forward() {'), (163, '#ifndef NDEBUG'), (164, '  if (!list)'), (165, '    NO_LIST.error(""ELIST2_ITERATOR::forward"", ABORT);'), (166, '#endif'), (167, '  if (list->empty()) {'), (168, '    return nullptr;'), (169, '  }'), (170, ''), (171, '  if (current) { // not removed so'), (172, '                 // set previous'), (173, '    prev = current;'), (174, '    started_cycling = true;'), (175, '    // In case next is deleted by another iterator, get it from the current.'), (176, '    current = current->next;'), (177, '  } else {'), (178, '    if (ex_current_was_cycle_pt) {'), (179, '      cycle_pt = next;'), (180, '    }'), (181, '    current = next;'), (182, '  }'), (183, ''), (184, '#ifndef NDEBUG'), (185, '  if (!current)'), (186, '    NULL_DATA.error(""ELIST2_ITERATOR::forward"", ABORT);'), (187, '#endif'), (188, ''), (189, '  next = current->next;'), (190, ''), (191, '#ifndef NDEBUG'), (192, '  if (!next) {'), (193, '    NULL_NEXT.error(""ELIST2_ITERATOR::forward"", ABORT,'), (194, '                    ""This is: %p  Current is: %p"",'), (195, '                    static_cast<void *>(this),'), (196, '                    static_cast<void *>(current));'), (197, '  }'), (198, '#endif'), (199, ''), (200, '  return current;'), (201, '}'), (202, ''), (203, '/***********************************************************************'), (204, ' *              ELIST2_ITERATOR::backward'), (205, ' *'), (206, ' *  Move the iterator to the previous element of the list.'), (207, ' *  REMEMBER: ALL LISTS ARE CIRCULAR.'), (208, ' **********************************************************************/'), (209, ''), (210, 'ELIST2_LINK *ELIST2_ITERATOR::backward() {'), (211, '#ifndef NDEBUG'), (212, '  if (!list)'), (213, '    NO_LIST.error(""ELIST2_ITERATOR::backward"", ABORT);'), (214, '#endif'), (215, '  if (list->empty()) {'), (216, '    return nullptr;'), (217, '  }'), (218, ''), (219, '  if (current) { // not removed so'), (220, '                 // set previous'), (221, '    next = current;'), (222, '    started_cycling = true;'), (223, '    // In case prev is deleted by another iterator, get it from current.'), (224, '    current = current->prev;'), (225, '  } else {'), (226, '    if (ex_current_was_cycle_pt) {'), (227, '      cycle_pt = prev;'), (228, '    }'), (229, '    current = prev;'), (230, '  }'), (231, ''), (232, '#ifndef NDEBUG'), (233, '  if (!current)'), (234, '    NULL_DATA.error(""ELIST2_ITERATOR::backward"", ABORT);'), (235, '  if (!prev) {'), (236, '    NULL_PREV.error(""ELIST2_ITERATOR::backward"", ABORT,'), (237, '                    ""This is: %p  Current is: %p"",'), (238, '                    static_cast<void *>(this),'), (239, '                    static_cast<void *>(current));'), (240, '  }'), (241, '#endif'), (242, ''), (243, '  prev = current->prev;'), (244, '  return current;'), (245, '}'), (246, ''), (247, '/***********************************************************************'), (248, ' *              ELIST2_ITERATOR::data_relative'), (249, ' *'), (250, ' *  Return the data pointer to the element ""offset"" elements from current.'), (251, "" *  (This function can't be INLINEd because it contains a loop)""), (252, ' **********************************************************************/'), (253, ''), (254, 'ELIST2_LINK *ELIST2_ITERATOR::data_relative( // get data + or - ..'), (255, '    int8_t offset) {                         // offset from current'), (256, '  ELIST2_LINK *ptr;'), (257, ''), (258, '#ifndef NDEBUG'), (259, '  if (!list)'), (260, '    NO_LIST.error(""ELIST2_ITERATOR::data_relative"", ABORT);'), (261, '  if (list->empty())'), (262, '    EMPTY_LIST.error(""ELIST2_ITERATOR::data_relative"", ABORT);'), (263, '#endif'), (264, ''), (265, '  if (offset < 0) {'), (266, '    for (ptr = current ? current : next; offset++ < 0; ptr = ptr->prev) {'), (267, '      ;'), (268, '    }'), (269, '  } else {'), (270, '    for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {'), (271, '      ;'), (272, '    }'), (273, '  }'), (274, ''), (275, '#ifndef NDEBUG'), (276, '  if (!ptr)'), (277, '    NULL_DATA.error(""ELIST2_ITERATOR::data_relative"", ABORT);'), (278, '#endif'), (279, ''), (280, '  return ptr;'), (281, '}'), (282, ''), (283, '/***********************************************************************'), (284, ' *              ELIST2_ITERATOR::exchange()'), (285, ' *'), (286, ' *  Given another iterator, whose current element is a different element on'), (287, ' *  the same list list OR an element of another list, exchange the two current'), (288, ' *  elements.  On return, each iterator points to the element which was the'), (289, ' *  other iterators current on entry.'), (290, "" *  (This function hasn't been in-lined because its a bit big!)""), (291, ' **********************************************************************/'), (292, ''), (293, 'void ELIST2_ITERATOR::exchange(  // positions of 2 links'), (294, '    ELIST2_ITERATOR *other_it) { // other iterator'), (295, '  constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can\'t exchange deleted elements of lists"");'), (296, ''), (297, '  ELIST2_LINK *old_current;'), (298, ''), (299, '#ifndef NDEBUG'), (300, '  if (!list)'), (301, '    NO_LIST.error(""ELIST2_ITERATOR::exchange"", ABORT);'), (302, '  if (!other_it)'), (303, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::exchange"", ABORT, ""other_it nullptr"");'), (304, '  if (!(other_it->list))'), (305, '    NO_LIST.error(""ELIST2_ITERATOR::exchange"", ABORT, ""other_it"");'), (306, '#endif'), (307, ''), (308, '  /* Do nothing if either list is empty or if both iterators reference the same'), (309, 'link */'), (310, ''), (311, '  if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {'), (312, '    return;'), (313, '  }'), (314, ''), (315, '  /* Error if either current element is deleted */'), (316, ''), (317, '  if (!current || !other_it->current) {'), (318, '    DONT_EXCHANGE_DELETED.error(""ELIST2_ITERATOR.exchange"", ABORT);'), (319, '  }'), (320, ''), (321, '  /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements'), (322, '(other before this); non-doubleton adjacent elements (this before other);'), (323, 'non-adjacent elements. */'), (324, ''), (325, '  // adjacent links'), (326, '  if ((next == other_it->current) || (other_it->next == current)) {'), (327, '    // doubleton list'), (328, '    if ((next == other_it->current) && (other_it->next == current)) {'), (329, '      prev = next = current;'), (330, '      other_it->prev = other_it->next = other_it->current;'), (331, '    } else { // non-doubleton with'), (332, '             // adjacent links'), (333, '             // other before this'), (334, '      if (other_it->next == current) {'), (335, '        other_it->prev->next = current;'), (336, '        other_it->current->next = next;'), (337, '        other_it->current->prev = current;'), (338, '        current->next = other_it->current;'), (339, '        current->prev = other_it->prev;'), (340, '        next->prev = other_it->current;'), (341, ''), (342, '        other_it->next = other_it->current;'), (343, '        prev = current;'), (344, '      } else { // this before other'), (345, '        prev->next = other_it->current;'), (346, '        current->next = other_it->next;'), (347, '        current->prev = other_it->current;'), (348, '        other_it->current->next = current;'), (349, '        other_it->current->prev = prev;'), (350, '        other_it->next->prev = current;'), (351, ''), (352, '        next = current;'), (353, '        other_it->prev = other_it->current;'), (354, '      }'), (355, '    }'), (356, '  } else { // no overlap'), (357, '    prev->next = other_it->current;'), (358, '    current->next = other_it->next;'), (359, '    current->prev = other_it->prev;'), (360, '    next->prev = other_it->current;'), (361, '    other_it->prev->next = current;'), (362, '    other_it->current->next = next;'), (363, '    other_it->current->prev = prev;'), (364, '    other_it->next->prev = current;'), (365, '  }'), (366, ''), (367, '  /* update end of list pointer when necessary (remember that the 2 iterators'), (368, '  may iterate over different lists!) */'), (369, ''), (370, '  if (list->last == current) {'), (371, '    list->last = other_it->current;'), (372, '  }'), (373, '  if (other_it->list->last == other_it->current) {'), (374, '    other_it->list->last = current;'), (375, '  }'), (376, ''), (377, '  if (current == cycle_pt) {'), (378, '    cycle_pt = other_it->cycle_pt;'), (379, '  }'), (380, '  if (other_it->current == other_it->cycle_pt) {'), (381, '    other_it->cycle_pt = cycle_pt;'), (382, '  }'), (383, ''), (384, '  /* The actual exchange - in all cases*/'), (385, ''), (386, '  old_current = current;'), (387, '  current = other_it->current;'), (388, '  other_it->current = old_current;'), (389, '}'), (390, ''), (391, '/***********************************************************************'), (392, ' *              ELIST2_ITERATOR::extract_sublist()'), (393, ' *'), (394, ' *  This is a private member, used only by ELIST2::assign_to_sublist.'), (395, ' *  Given another iterator for the same list, extract the links from THIS to'), (396, ' *  OTHER inclusive, link them into a new circular list, and return a'), (397, ' *  pointer to the last element.'), (398, "" *  (Can't inline this function because it contains a loop)""), (399, ' **********************************************************************/'), (400, ''), (401, 'ELIST2_LINK *ELIST2_ITERATOR::extract_sublist( // from this current'), (402, '    ELIST2_ITERATOR *other_it) {               // to other current'), (403, '#ifndef NDEBUG'), (404, '  constexpr ERRCODE BAD_EXTRACTION_PTS(""Can\'t extract sublist from points on different lists"");'), (405, '  constexpr ERRCODE DONT_EXTRACT_DELETED(""Can\'t extract a sublist marked by deleted points"");'), (406, '#endif'), (407, '  constexpr ERRCODE BAD_SUBLIST(""Can\'t find sublist end point in original list"");'), (408, ''), (409, '  ELIST2_ITERATOR temp_it = *this;'), (410, '  ELIST2_LINK *end_of_new_list;'), (411, ''), (412, '#ifndef NDEBUG'), (413, '  if (!other_it)'), (414, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::extract_sublist"", ABORT, ""other_it nullptr"");'), (415, '  if (!list)'), (416, '    NO_LIST.error(""ELIST2_ITERATOR::extract_sublist"", ABORT);'), (417, '  if (list != other_it->list)'), (418, '    BAD_EXTRACTION_PTS.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);'), (419, '  if (list->empty())'), (420, '    EMPTY_LIST.error(""ELIST2_ITERATOR::extract_sublist"", ABORT);'), (421, ''), (422, '  if (!current || !other_it->current)'), (423, '    DONT_EXTRACT_DELETED.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);'), (424, '#endif'), (425, ''), (426, '  ex_current_was_last = other_it->ex_current_was_last = false;'), (427, '  ex_current_was_cycle_pt = false;'), (428, '  other_it->ex_current_was_cycle_pt = false;'), (429, ''), (430, '  temp_it.mark_cycle_pt();'), (431, '  do {                         // walk sublist'), (432, ""    if (temp_it.cycled_list()) { // can't find end pt""), (433, '      BAD_SUBLIST.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);'), (434, '    }'), (435, ''), (436, '    if (temp_it.at_last()) {'), (437, '      list->last = prev;'), (438, '      ex_current_was_last = other_it->ex_current_was_last = true;'), (439, '    }'), (440, ''), (441, '    if (temp_it.current == cycle_pt) {'), (442, '      ex_current_was_cycle_pt = true;'), (443, '    }'), (444, ''), (445, '    if (temp_it.current == other_it->cycle_pt) {'), (446, '      other_it->ex_current_was_cycle_pt = true;'), (447, '    }'), (448, ''), (449, '    temp_it.forward();'), (450, '  }'), (451, '  // do INCLUSIVE list'), (452, '  while (temp_it.prev != other_it->current);'), (453, ''), (454, '  // circularise sublist'), (455, '  other_it->current->next = current;'), (456, '  // circularise sublist'), (457, '  current->prev = other_it->current;'), (458, '  end_of_new_list = other_it->current;'), (459, ''), (460, '  // sublist = whole list'), (461, '  if (prev == other_it->current) {'), (462, '    list->last = nullptr;'), (463, '    prev = current = next = nullptr;'), (464, '    other_it->prev = other_it->current = other_it->next = nullptr;'), (465, '  } else {'), (466, '    prev->next = other_it->next;'), (467, '    other_it->next->prev = prev;'), (468, ''), (469, '    current = other_it->current = nullptr;'), (470, '    next = other_it->next;'), (471, '    other_it->prev = prev;'), (472, '  }'), (473, '  return end_of_new_list;'), (474, '}'), (475, ''), (476, '} // namespace tesseract')]}",yes
src\ccutil\elst2.h,src\ccutil\elst2.h,63be2168143e82df24f44ad8cee9447771fa6771,4991295a394ffa316c09da9fa745796a45ae3dbb,Convert ELIST2 into template.,"@@ -27,8 +27,6 @@
 
 namespace tesseract {
 
-class ELIST2_ITERATOR;
-
 /**********************************************************************
 DESIGN NOTE
 ===========
@@ -47,787 +45,1126 @@ i)  The duplication in source does not affect the run time code size - the
   ii) The compiler should have a bit less work to do!
 **********************************************************************/
 
-/**********************************************************************
- *              CLASS - ELIST2_LINK
- *
- *              Generic link class for doubly linked lists with embedded links
- *
- *  Note:  No destructor - elements are assumed to be destroyed EITHER after
- *  they have been extracted from a list OR by the ELIST2 destructor which
- *  walks the list.
- **********************************************************************/
-
-class ELIST2_LINK {
-  friend class ELIST2_ITERATOR;
-  friend class ELIST2;
-
-  ELIST2_LINK *prev;
-  ELIST2_LINK *next;
-
-public:
-  ELIST2_LINK() { // constructor
-    prev = next = nullptr;
-  }
-
-  ELIST2_LINK(const ELIST2_LINK &) = delete;
-
-  // The assignment operator is required for WERD.
-  void operator=(const ELIST2_LINK &) {
-    prev = next = nullptr;
-  }
-};
-
 /**********************************************************************
  * CLASS - ELIST2
  *
  * Generic list class for doubly linked lists with embedded links
  **********************************************************************/
 
-class TESS_API ELIST2 {
-  friend class ELIST2_ITERATOR;
-
-  ELIST2_LINK *last = nullptr; // End of list
-  //(Points to head)
-  ELIST2_LINK *First() { // return first
-    return last ? last->next : nullptr;
-  }
-
+template <typename CLASSNAME>
+class ELIST2 {
 public:
-  // destroy all links
-  void internal_clear(void (*zapper)(void *));
-
-  bool empty() const { // is list empty?
-    return !last;
-  }
-
-  bool singleton() const {
-    return last ? (last == last->next) : false;
-  }
-
-  void shallow_copy(       // dangerous!!
-      ELIST2 *from_list) { // beware destructors!!
-    last = from_list->last;
-  }
-
-  // ptr to copier functn
-  void internal_deep_copy(ELIST2_LINK *(*copier)(ELIST2_LINK *),
-                          const ELIST2 *list); // list being copied
-
-  void assign_to_sublist(        // to this list
-      ELIST2_ITERATOR *start_it, // from list start
-      ELIST2_ITERATOR *end_it);  // from list end
-
-  // # elements in list
-  int32_t length() const {
-    int32_t count = 0;
-    if (last != nullptr) {
-      count = 1;
-      for (auto it = last->next; it != last; it = it->next) {
-        count++;
-      }
+  /**********************************************************************
+   *              CLASS - LINK
+   *
+   *              Generic link class for doubly linked lists with embedded links
+   *
+   *  Note:  No destructor - elements are assumed to be destroyed EITHER after
+   *  they have been extracted from a list OR by the ELIST2 destructor which
+   *  walks the list.
+   **********************************************************************/
+
+  class LINK {
+    friend class ITERATOR;
+    friend class ELIST2;
+
+    CLASSNAME *prev;
+    CLASSNAME *next;
+
+  public:
+    LINK() { // constructor
+      prev = next = nullptr;
     }
-    return count;
-  }
-
-  void sort(          // sort elements
-      int comparator( // comparison routine
-          const void *, const void *));
 
-  // Assuming list has been sorted already, insert new_link to
-  // keep the list sorted according to the same comparison function.
-  // Comparison function is the same as used by sort, i.e. uses double
-  // indirection. Time is O(1) to add to beginning or end.
-  // Time is linear to add pre-sorted items to an empty list.
-  void add_sorted(int comparator(const void *, const void *), ELIST2_LINK *new_link);
-};
+    LINK(const LINK &) = delete;
 
-/***********************************************************************
- *              CLASS - ELIST2_ITERATOR
- *
- *              Generic iterator class for doubly linked lists with embedded
- *links
- **********************************************************************/
+    // The assignment operator is required for WERD.
+    void operator=(const LINK &) {
+      prev = next = nullptr;
+    }
+  };
 
-class TESS_API ELIST2_ITERATOR {
-  friend void ELIST2::assign_to_sublist(ELIST2_ITERATOR *, ELIST2_ITERATOR *);
 
-  ELIST2 *list;                 // List being iterated
-  ELIST2_LINK *prev;            // prev element
-  ELIST2_LINK *current;         // current element
-  ELIST2_LINK *next;            // next element
-  ELIST2_LINK *cycle_pt;        // point we are cycling the list to.
-  bool ex_current_was_last;     // current extracted was end of list
-  bool ex_current_was_cycle_pt; // current extracted was cycle point
-  bool started_cycling;         // Have we moved off the start?
+  /***********************************************************************
+   *              CLASS - ELIST2_ITERATOR
+   *
+   *              Generic iterator class for doubly linked lists with embedded
+   *links
+   **********************************************************************/
+
+  class ITERATOR {
+    friend void ELIST2::assign_to_sublist(ITERATOR *, ITERATOR *);
+
+    ELIST2 *list;                 // List being iterated
+    CLASSNAME *prev;            // prev element
+    CLASSNAME *current;         // current element
+    CLASSNAME *next;            // next element
+    CLASSNAME *cycle_pt;        // point we are cycling the list to.
+    bool ex_current_was_last;     // current extracted was end of list
+    bool ex_current_was_cycle_pt; // current extracted was cycle point
+    bool started_cycling;         // Have we moved off the start?
+    /***********************************************************************
+   *              ELIST2_ITERATOR::extract_sublist()
+   *
+   *  This is a private member, used only by ELIST2::assign_to_sublist.
+   *  Given another iterator for the same list, extract the links from THIS to
+   *  OTHER inclusive, link them into a new circular list, and return a
+   *  pointer to the last element.
+   *  (Can't inline this function because it contains a loop)
+   **********************************************************************/
+    CLASSNAME *extract_sublist(   // from this current...
+      ITERATOR *other_it) {               // to other current
+#ifndef NDEBUG
+      constexpr ERRCODE BAD_EXTRACTION_PTS(""Can't extract sublist from points on different lists"");
+      constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
+#endif
+      constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
 
-  ELIST2_LINK *extract_sublist(   // from this current...
-      ELIST2_ITERATOR *other_it); // to other current
+      ITERATOR temp_it = *this;
+      CLASSNAME *end_of_new_list;
 
-public:
-  ELIST2_ITERATOR( // constructor
-      ELIST2 *list_to_iterate);
+#ifndef NDEBUG
+      if (!other_it)
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::extract_sublist"", ABORT, ""other_it nullptr"");
+      if (!list)
+        NO_LIST.error(""ELIST2_ITERATOR::extract_sublist"", ABORT);
+      if (list != other_it->list)
+        BAD_EXTRACTION_PTS.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);
+      if (list->empty())
+        EMPTY_LIST.error(""ELIST2_ITERATOR::extract_sublist"", ABORT);
+
+      if (!current || !other_it->current)
+        DONT_EXTRACT_DELETED.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);
+#endif
 
-  void set_to_list( // change list
-      ELIST2 *list_to_iterate);
+      ex_current_was_last = other_it->ex_current_was_last = false;
+      ex_current_was_cycle_pt = false;
+      other_it->ex_current_was_cycle_pt = false;
 
-  void add_after_then_move(   // add after current &
-      ELIST2_LINK *new_link); // move to new
+      temp_it.mark_cycle_pt();
+      do {                         // walk sublist
+        if (temp_it.cycled_list()) { // can't find end pt
+          BAD_SUBLIST.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);
+        }
 
-  void add_after_stay_put(    // add after current &
-      ELIST2_LINK *new_link); // stay at current
+        if (temp_it.at_last()) {
+          list->last = prev;
+          ex_current_was_last = other_it->ex_current_was_last = true;
+        }
 
-  void add_before_then_move(  // add before current &
-      ELIST2_LINK *new_link); // move to new
+        if (temp_it.current == cycle_pt) {
+          ex_current_was_cycle_pt = true;
+        }
 
-  void add_before_stay_put(   // add before current &
-      ELIST2_LINK *new_link); // stay at current
+        if (temp_it.current == other_it->cycle_pt) {
+          other_it->ex_current_was_cycle_pt = true;
+        }
 
-  void add_list_after(      // add a list &
-      ELIST2 *list_to_add); // stay at current
+        temp_it.forward();
+      }
+      // do INCLUSIVE list
+      while (temp_it.prev != other_it->current);
+
+      // circularise sublist
+      other_it->current->next = current;
+      // circularise sublist
+      current->prev = other_it->current;
+      end_of_new_list = other_it->current;
+
+      // sublist = whole list
+      if (prev == other_it->current) {
+        list->last = nullptr;
+        prev = current = next = nullptr;
+        other_it->prev = other_it->current = other_it->next = nullptr;
+      } else {
+        prev->next = other_it->next;
+        other_it->next->prev = prev;
+
+        current = other_it->current = nullptr;
+        next = other_it->next;
+        other_it->prev = prev;
+      }
+      return end_of_new_list;
+    } // to other current
+
+  public:
+    /***********************************************************************
+   *              ELIST2_ITERATOR::ELIST2_ITERATOR
+   *
+   *  CONSTRUCTOR - set iterator to specified list;
+   **********************************************************************/
+    ITERATOR( // constructor
+      ELIST2 *list_to_iterate) {
+      set_to_list(list_to_iterate);
+    }
 
-  void add_list_before(     // add a list &
-      ELIST2 *list_to_add); // move to it 1st item
+    /***********************************************************************
+     *              ELIST2_ITERATOR::set_to_list
+     *
+     *  (Re-)initialise the iterator to point to the start of the list_to_iterate
+     *  over.
+     **********************************************************************/
 
-  ELIST2_LINK *data() { // get current data
+    void set_to_list( // change list
+      ELIST2 *list_to_iterate) {
 #ifndef NDEBUG
-    if (!current) {
-      NULL_DATA.error(""ELIST2_ITERATOR::data"", ABORT);
-    }
-    if (!list) {
-      NO_LIST.error(""ELIST2_ITERATOR::data"", ABORT);
-    }
+      if (!list_to_iterate) {
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");
+      }
 #endif
-    return current;
-  }
 
-  ELIST2_LINK *data_relative( // get data + or - ...
-      int8_t offset);         // offset from current
-
-  ELIST2_LINK *forward(); // move to next element
-
-  ELIST2_LINK *backward(); // move to prev element
+      list = list_to_iterate;
+      prev = list->last;
+      current = list->First();
+      next = current ? current->next : nullptr;
+      cycle_pt = nullptr; // await explicit set
+      started_cycling = false;
+      ex_current_was_last = false;
+      ex_current_was_cycle_pt = false;
+    }
+    /***********************************************************************
+   *              ELIST2_ITERATOR::add_after_then_move
+   *
+   *  Add a new element to the list after the current element and move the
+   *  iterator to the new element.
+   **********************************************************************/
+    void add_after_then_move(   // add after current &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);
+      }
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT, ""new_element is nullptr"");
+      }
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);
+      }
+#endif
 
-  ELIST2_LINK *extract(); // remove from list
+      if (list->empty()) {
+        new_element->next = new_element;
+        new_element->prev = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+      } else {
+        new_element->next = next;
+        next->prev = new_element;
+
+        if (current) { // not extracted
+          new_element->prev = current;
+          current->next = new_element;
+          prev = current;
+          if (current == list->last) {
+            list->last = new_element;
+          }
+        } else { // current extracted
+          new_element->prev = prev;
+          prev->next = new_element;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+          if (ex_current_was_cycle_pt) {
+            cycle_pt = new_element;
+          }
+        }
+      }
+      current = new_element;
+    } // move to new
+      /***********************************************************************
+     *              ELIST2_ITERATOR::add_after_stay_put
+     *
+     *  Add a new element to the list after the current element but do not move
+     *  the iterator to the new element.
+     **********************************************************************/
+    void add_after_stay_put(    // add after current &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);
+      }
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT, ""new_element is nullptr"");
+      }
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);
+      }
+#endif
 
-  // go to start of list
-  ELIST2_LINK *move_to_first();
+      if (list->empty()) {
+        new_element->next = new_element;
+        new_element->prev = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+        ex_current_was_last = false;
+        current = nullptr;
+      } else {
+        new_element->next = next;
+        next->prev = new_element;
+
+        if (current) { // not extracted
+          new_element->prev = current;
+          current->next = new_element;
+          if (prev == current) {
+            prev = new_element;
+          }
+          if (current == list->last) {
+            list->last = new_element;
+          }
+        } else { // current extracted
+          new_element->prev = prev;
+          prev->next = new_element;
+          if (ex_current_was_last) {
+            list->last = new_element;
+            ex_current_was_last = false;
+          }
+        }
+        next = new_element;
+      }
+    } // stay at current
+      /***********************************************************************
+     *              ELIST2_ITERATOR::add_before_then_move
+     *
+     *  Add a new element to the list before the current element and move the
+     *  iterator to the new element.
+     **********************************************************************/
+    void add_before_then_move(  // add before current &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);
+      }
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT, ""new_element is nullptr"");
+      }
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);
+      }
+#endif
 
-  ELIST2_LINK *move_to_last(); // go to end of list
+      if (list->empty()) {
+        new_element->next = new_element;
+        new_element->prev = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+      } else {
+        prev->next = new_element;
+        new_element->prev = prev;
+
+        if (current) { // not extracted
+          new_element->next = current;
+          current->prev = new_element;
+          next = current;
+        } else { // current extracted
+          new_element->next = next;
+          next->prev = new_element;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+          if (ex_current_was_cycle_pt) {
+            cycle_pt = new_element;
+          }
+        }
+      }
+      current = new_element;
+    } // move to new
+      /***********************************************************************
+     *              ELIST2_ITERATOR::add_before_stay_put
+     *
+     *  Add a new element to the list before the current element but don't move the
+     *  iterator to the new element.
+     **********************************************************************/
+    void add_before_stay_put(   // add before current &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);
+      }
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT, ""new_element is nullptr"");
+      }
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);
+      }
+#endif
 
-  void mark_cycle_pt(); // remember current
+      if (list->empty()) {
+        new_element->next = new_element;
+        new_element->prev = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+        ex_current_was_last = true;
+        current = nullptr;
+      } else {
+        prev->next = new_element;
+        new_element->prev = prev;
+
+        if (current) { // not extracted
+          new_element->next = current;
+          current->prev = new_element;
+          if (next == current) {
+            next = new_element;
+          }
+        } else { // current extracted
+          new_element->next = next;
+          next->prev = new_element;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+        }
+        prev = new_element;
+      }
+    } // stay at current
+      /***********************************************************************
+     *              ELIST2_ITERATOR::add_list_after
+     *
+     *  Insert another list to this list after the current element but don't move
+     *the
+     *  iterator.
+     **********************************************************************/
+    void add_list_after(      // add a list &
+      ELIST2 *list_to_add) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::add_list_after"", ABORT);
+      }
+      if (!list_to_add) {
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_list_after"", ABORT, ""list_to_add is nullptr"");
+      }
+#endif
 
-  bool empty() const { // is list empty?
+      if (!list_to_add->empty()) {
+        if (list->empty()) {
+          list->last = list_to_add->last;
+          prev = list->last;
+          next = list->First();
+          ex_current_was_last = true;
+          current = nullptr;
+        } else {
+          if (current) { // not extracted
+            current->next = list_to_add->First();
+            current->next->prev = current;
+            if (current == list->last) {
+              list->last = list_to_add->last;
+            }
+            list_to_add->last->next = next;
+            next->prev = list_to_add->last;
+            next = current->next;
+          } else { // current extracted
+            prev->next = list_to_add->First();
+            prev->next->prev = prev;
+            if (ex_current_was_last) {
+              list->last = list_to_add->last;
+              ex_current_was_last = false;
+            }
+            list_to_add->last->next = next;
+            next->prev = list_to_add->last;
+            next = prev->next;
+          }
+        }
+        list_to_add->last = nullptr;
+      }
+    } // stay at current
+      /***********************************************************************
+     *              ELIST2_ITERATOR::add_list_before
+     *
+     *  Insert another list to this list before the current element. Move the
+     *  iterator to the start of the inserted elements
+     *  iterator.
+     **********************************************************************/
+    void add_list_before(     // add a list &
+      ELIST2 *list_to_add) {
 #ifndef NDEBUG
-    if (!list) {
-      NO_LIST.error(""ELIST2_ITERATOR::empty"", ABORT);
-    }
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::add_list_before"", ABORT);
+      }
+      if (!list_to_add) {
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_list_before"", ABORT, ""list_to_add is nullptr"");
+      }
 #endif
-    return list->empty();
-  }
 
-  bool current_extracted() const { // current extracted?
-    return !current;
-  }
+      if (!list_to_add->empty()) {
+        if (list->empty()) {
+          list->last = list_to_add->last;
+          prev = list->last;
+          current = list->First();
+          next = current->next;
+          ex_current_was_last = false;
+        } else {
+          prev->next = list_to_add->First();
+          prev->next->prev = prev;
+
+          if (current) { // not extracted
+            list_to_add->last->next = current;
+            current->prev = list_to_add->last;
+          } else { // current extracted
+            list_to_add->last->next = next;
+            next->prev = list_to_add->last;
+            if (ex_current_was_last) {
+              list->last = list_to_add->last;
+            }
+            if (ex_current_was_cycle_pt) {
+              cycle_pt = prev->next;
+            }
+          }
+          current = prev->next;
+          next = current->next;
+        }
+        list_to_add->last = nullptr;
+      }
+    } // move to it 1st item
 
-  bool at_first() const; // Current is first?
+    CLASSNAME *data() { // get current data
+#ifndef NDEBUG
+      if (!current) {
+        NULL_DATA.error(""ELIST2_ITERATOR::data"", ABORT);
+      }
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::data"", ABORT);
+      }
+#endif
+      return current;
+    }
+    /***********************************************************************
+   *              ELIST2_ITERATOR::data_relative
+   *
+   *  Return the data pointer to the element ""offset"" elements from current.
+   *  (This function can't be INLINEd because it contains a loop)
+   **********************************************************************/
+    CLASSNAME *data_relative( // get data + or - ...
+      int8_t offset) {                         // offset from current
+      CLASSNAME *ptr;
 
-  bool at_last() const; // Current is last?
+#ifndef NDEBUG
+      if (!list)
+        NO_LIST.error(""ELIST2_ITERATOR::data_relative"", ABORT);
+      if (list->empty())
+        EMPTY_LIST.error(""ELIST2_ITERATOR::data_relative"", ABORT);
+#endif
 
-  bool cycled_list() const; // Completed a cycle?
+      if (offset < 0) {
+        for (ptr = current ? current : next; offset++ < 0; ptr = ptr->prev) {
+          ;
+        }
+      } else {
+        for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {
+          ;
+        }
+      }
 
-  void add_to_end(            // add at end &
-      ELIST2_LINK *new_link); // don't move
+#ifndef NDEBUG
+      if (!ptr)
+        NULL_DATA.error(""ELIST2_ITERATOR::data_relative"", ABORT);
+#endif
 
-  void exchange(                  // positions of 2 links
-      ELIST2_ITERATOR *other_it); // other iterator
+      return ptr;
+    }         // offset from current
+      /***********************************************************************
+     *              ELIST2_ITERATOR::forward
+     *
+     *  Move the iterator to the next element of the list.
+     *  REMEMBER: ALL LISTS ARE CIRCULAR.
+     **********************************************************************/
+    CLASSNAME *forward() {
+#ifndef NDEBUG
+      if (!list)
+        NO_LIST.error(""ELIST2_ITERATOR::forward"", ABORT);
+#endif
+      if (list->empty()) {
+        return nullptr;
+      }
 
-  //# elements in list
-  int32_t length() const {
-    return list->length();
-  }
+      if (current) { // not removed so
+        // set previous
+        prev = current;
+        started_cycling = true;
+        // In case next is deleted by another iterator, get it from the current.
+        current = current->next;
+      } else {
+        if (ex_current_was_cycle_pt) {
+          cycle_pt = next;
+        }
+        current = next;
+      }
 
-  void sort(          // sort elements
-      int comparator( // comparison routine
-          const void *, const void *));
+#ifndef NDEBUG
+      if (!current)
+        NULL_DATA.error(""ELIST2_ITERATOR::forward"", ABORT);
+#endif
 
-private:
-  // Don't use the following constructor.
-  ELIST2_ITERATOR() = delete;
-};
+      next = current->next;
 
-/***********************************************************************
- *              ELIST2_ITERATOR::set_to_list
- *
- *  (Re-)initialise the iterator to point to the start of the list_to_iterate
- *  over.
- **********************************************************************/
+#ifndef NDEBUG
+      if (!next) {
+        NULL_NEXT.error(""ELIST2_ITERATOR::forward"", ABORT,
+          ""This is: %p  Current is: %p"",
+          static_cast<void *>(this),
+          static_cast<void *>(current));
+      }
+#endif
 
-inline void ELIST2_ITERATOR::set_to_list( // change list
-    ELIST2 *list_to_iterate) {
+      return current;
+    } // move to next element
+      /***********************************************************************
+     *              ELIST2_ITERATOR::backward
+     *
+     *  Move the iterator to the previous element of the list.
+     *  REMEMBER: ALL LISTS ARE CIRCULAR.
+     **********************************************************************/
+    CLASSNAME *backward() {
 #ifndef NDEBUG
-  if (!list_to_iterate) {
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");
-  }
+      if (!list)
+        NO_LIST.error(""ELIST2_ITERATOR::backward"", ABORT);
 #endif
+      if (list->empty()) {
+        return nullptr;
+      }
 
-  list = list_to_iterate;
-  prev = list->last;
-  current = list->First();
-  next = current ? current->next : nullptr;
-  cycle_pt = nullptr; // await explicit set
-  started_cycling = false;
-  ex_current_was_last = false;
-  ex_current_was_cycle_pt = false;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::ELIST2_ITERATOR
- *
- *  CONSTRUCTOR - set iterator to specified list;
- **********************************************************************/
+      if (current) { // not removed so
+        // set previous
+        next = current;
+        started_cycling = true;
+        // In case prev is deleted by another iterator, get it from current.
+        current = current->prev;
+      } else {
+        if (ex_current_was_cycle_pt) {
+          cycle_pt = prev;
+        }
+        current = prev;
+      }
 
-inline ELIST2_ITERATOR::ELIST2_ITERATOR(ELIST2 *list_to_iterate) {
-  set_to_list(list_to_iterate);
-}
+#ifndef NDEBUG
+      if (!current)
+        NULL_DATA.error(""ELIST2_ITERATOR::backward"", ABORT);
+      if (!prev) {
+        NULL_PREV.error(""ELIST2_ITERATOR::backward"", ABORT,
+          ""This is: %p  Current is: %p"",
+          static_cast<void *>(this),
+          static_cast<void *>(current));
+      }
+#endif
 
-/***********************************************************************
- *              ELIST2_ITERATOR::add_after_then_move
- *
- *  Add a new element to the list after the current element and move the
- *  iterator to the new element.
- **********************************************************************/
+      prev = current->prev;
+      return current;
+    } // move to prev element
+      /***********************************************************************
+     *              ELIST2_ITERATOR::extract
+     *
+     *  Do extraction by removing current from the list, returning it to the
+     *  caller, but NOT updating the iterator.  (So that any calling loop can do
+     *  this.)   The iterator's current points to nullptr.  If the extracted element
+     *  is to be deleted, this is the callers responsibility.
+     **********************************************************************/
+    CLASSNAME *extract() {
+      CLASSNAME *extracted_link;
 
-inline void ELIST2_ITERATOR::add_after_then_move( // element to add
-    ELIST2_LINK *new_element) {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::extract"", ABORT);
+      }
+      if (!current) { // list empty or
+        // element extracted
+        NULL_CURRENT.error(""ELIST2_ITERATOR::extract"", ABORT);
+      }
 #endif
 
-  if (list->empty()) {
-    new_element->next = new_element;
-    new_element->prev = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-  } else {
-    new_element->next = next;
-    next->prev = new_element;
-
-    if (current) { // not extracted
-      new_element->prev = current;
-      current->next = new_element;
-      prev = current;
-      if (current == list->last) {
-        list->last = new_element;
-      }
-    } else { // current extracted
-      new_element->prev = prev;
-      prev->next = new_element;
-      if (ex_current_was_last) {
-        list->last = new_element;
+      if (list->singleton()) {
+        // Special case where we do need to change the iterator.
+        prev = next = list->last = nullptr;
+      } else {
+        prev->next = next; // remove from list
+        next->prev = prev;
+
+        if (current == list->last) {
+          list->last = prev;
+          ex_current_was_last = true;
+        } else {
+          ex_current_was_last = false;
+        }
       }
-      if (ex_current_was_cycle_pt) {
-        cycle_pt = new_element;
+      // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.
+      ex_current_was_cycle_pt = (current == cycle_pt);
+      extracted_link = current;
+      extracted_link->next = nullptr; // for safety
+      extracted_link->prev = nullptr; // for safety
+      current = nullptr;
+      return extracted_link;
+    } // remove from list
+      /***********************************************************************
+     *              ELIST2_ITERATOR::move_to_first()
+     *
+     *  Move current so that it is set to the start of the list.
+     *  Return data just in case anyone wants it.
+     **********************************************************************/
+     // go to start of list
+    CLASSNAME *move_to_first() {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::move_to_first"", ABORT);
       }
-    }
-  }
-  current = new_element;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::add_after_stay_put
- *
- *  Add a new element to the list after the current element but do not move
- *  the iterator to the new element.
- **********************************************************************/
+#endif
 
-inline void ELIST2_ITERATOR::add_after_stay_put( // element to add
-    ELIST2_LINK *new_element) {
+      current = list->First();
+      prev = list->last;
+      next = current ? current->next : nullptr;
+      return current;
+    }
+    /***********************************************************************
+   *              ELIST2_ITERATOR::move_to_last()
+   *
+   *  Move current so that it is set to the end of the list.
+   *  Return data just in case anyone wants it.
+   **********************************************************************/
+    CLASSNAME *move_to_last() {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::move_to_last"", ABORT);
+      }
 #endif
 
-  if (list->empty()) {
-    new_element->next = new_element;
-    new_element->prev = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-    ex_current_was_last = false;
-    current = nullptr;
-  } else {
-    new_element->next = next;
-    next->prev = new_element;
-
-    if (current) { // not extracted
-      new_element->prev = current;
-      current->next = new_element;
-      if (prev == current) {
-        prev = new_element;
+      current = list->last;
+      prev = current ? current->prev : nullptr;
+      next = current ? current->next : nullptr;
+      return current;
+    } // go to end of list
+      /***********************************************************************
+     *              ELIST2_ITERATOR::mark_cycle_pt()
+     *
+     *  Remember the current location so that we can tell whether we've returned
+     *  to this point later.
+     *
+     *  If the current point is deleted either now, or in the future, the cycle
+     *  point will be set to the next item which is set to current.  This could be
+     *  by a forward, add_after_then_move or add_after_then_move.
+     **********************************************************************/
+    void mark_cycle_pt() {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::mark_cycle_pt"", ABORT);
       }
-      if (current == list->last) {
-        list->last = new_element;
+#endif
+
+      if (current) {
+        cycle_pt = current;
+      } else {
+        ex_current_was_cycle_pt = true;
       }
-    } else { // current extracted
-      new_element->prev = prev;
-      prev->next = new_element;
-      if (ex_current_was_last) {
-        list->last = new_element;
-        ex_current_was_last = false;
+      started_cycling = false;
+    } // remember current
+
+    bool empty() const { // is list empty?
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::empty"", ABORT);
       }
+#endif
+      return list->empty();
     }
-    next = new_element;
-  }
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::add_before_then_move
- *
- *  Add a new element to the list before the current element and move the
- *  iterator to the new element.
- **********************************************************************/
 
-inline void ELIST2_ITERATOR::add_before_then_move( // element to add
-    ELIST2_LINK *new_element) {
+    bool current_extracted() const { // current extracted?
+      return !current;
+    }
+    /***********************************************************************
+   *              ELIST2_ITERATOR::at_first()
+   *
+   *  Are we at the start of the list?
+   *
+   **********************************************************************/
+    bool at_first() const {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::at_first"", ABORT);
+      }
 #endif
 
-  if (list->empty()) {
-    new_element->next = new_element;
-    new_element->prev = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-  } else {
-    prev->next = new_element;
-    new_element->prev = prev;
-
-    if (current) { // not extracted
-      new_element->next = current;
-      current->prev = new_element;
-      next = current;
-    } else { // current extracted
-      new_element->next = next;
-      next->prev = new_element;
-      if (ex_current_was_last) {
-        list->last = new_element;
-      }
-      if (ex_current_was_cycle_pt) {
-        cycle_pt = new_element;
+      // we're at a deleted
+      return ((list->empty()) || (current == list->First()) ||
+        ((current == nullptr) && (prev == list->last) && // NON-last pt between
+          !ex_current_was_last));                         // first and last
+    } // Current is first?
+      /***********************************************************************
+     *              ELIST2_ITERATOR::at_last()
+     *
+     *  Are we at the end of the list?
+     *
+     **********************************************************************/
+    bool at_last() const {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::at_last"", ABORT);
       }
-    }
-  }
-  current = new_element;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::add_before_stay_put
- *
- *  Add a new element to the list before the current element but don't move the
- *  iterator to the new element.
- **********************************************************************/
+#endif
 
-inline void ELIST2_ITERATOR::add_before_stay_put( // element to add
-    ELIST2_LINK *new_element) {
+      // we're at a deleted
+      return ((list->empty()) || (current == list->last) ||
+        ((current == nullptr) && (prev == list->last) && // last point between
+          ex_current_was_last));                          // first and last
+    } // Current is last?
+      /***********************************************************************
+     *              ELIST2_ITERATOR::cycled_list()
+     *
+     *  Have we returned to the cycle_pt since it was set?
+     *
+     **********************************************************************/
+    bool cycled_list() const {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::cycled_list"", ABORT);
+      }
 #endif
 
-  if (list->empty()) {
-    new_element->next = new_element;
-    new_element->prev = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-    ex_current_was_last = true;
-    current = nullptr;
-  } else {
-    prev->next = new_element;
-    new_element->prev = prev;
-
-    if (current) { // not extracted
-      new_element->next = current;
-      current->prev = new_element;
-      if (next == current) {
-        next = new_element;
+      return ((list->empty()) || ((current == cycle_pt) && started_cycling));
+    } // Completed a cycle?
+      /***********************************************************************
+     *              ELIST2_ITERATOR::add_to_end
+     *
+     *  Add a new element to the end of the list without moving the iterator.
+     *  This is provided because a single linked list cannot move to the last as
+     *  the iterator couldn't set its prev pointer.  Adding to the end is
+     *  essential for implementing
+                  queues.
+    **********************************************************************/
+    void add_to_end(            // add at end &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::add_to_end"", ABORT);
       }
-    } else { // current extracted
-      new_element->next = next;
-      next->prev = new_element;
-      if (ex_current_was_last) {
-        list->last = new_element;
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_to_end"", ABORT, ""new_element is nullptr"");
       }
-    }
-    prev = new_element;
-  }
-}
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST2_ITERATOR::add_to_end"", ABORT);
+      }
+#endif
 
-/***********************************************************************
- *              ELIST2_ITERATOR::add_list_after
- *
- *  Insert another list to this list after the current element but don't move
- *the
- *  iterator.
- **********************************************************************/
+      if (this->at_last()) {
+        this->add_after_stay_put(new_element);
+      } else {
+        if (this->at_first()) {
+          this->add_before_stay_put(new_element);
+          list->last = new_element;
+        } else { // Iteratr is elsewhere
+          new_element->next = list->last->next;
+          new_element->prev = list->last;
+          list->last->next->prev = new_element;
+          list->last->next = new_element;
+          list->last = new_element;
+        }
+      }
+    } // don't move
+      /***********************************************************************
+     *              ELIST2_ITERATOR::exchange()
+     *
+     *  Given another iterator, whose current element is a different element on
+     *  the same list list OR an element of another list, exchange the two current
+     *  elements.  On return, each iterator points to the element which was the
+     *  other iterators current on entry.
+     *  (This function hasn't been in-lined because its a bit big!)
+     **********************************************************************/
+    void exchange(                  // positions of 2 links
+      ITERATOR *other_it) { // other iterator
+      constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
+
+      CLASSNAME *old_current;
 
-inline void ELIST2_ITERATOR::add_list_after(ELIST2 *list_to_add) {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::add_list_after"", ABORT);
-  }
-  if (!list_to_add) {
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_list_after"", ABORT, ""list_to_add is nullptr"");
-  }
+      if (!list)
+        NO_LIST.error(""ELIST2_ITERATOR::exchange"", ABORT);
+      if (!other_it)
+        BAD_PARAMETER.error(""ELIST2_ITERATOR::exchange"", ABORT, ""other_it nullptr"");
+      if (!(other_it->list))
+        NO_LIST.error(""ELIST2_ITERATOR::exchange"", ABORT, ""other_it"");
 #endif
 
-  if (!list_to_add->empty()) {
-    if (list->empty()) {
-      list->last = list_to_add->last;
-      prev = list->last;
-      next = list->First();
-      ex_current_was_last = true;
-      current = nullptr;
-    } else {
-      if (current) { // not extracted
-        current->next = list_to_add->First();
-        current->next->prev = current;
-        if (current == list->last) {
-          list->last = list_to_add->last;
-        }
-        list_to_add->last->next = next;
-        next->prev = list_to_add->last;
-        next = current->next;
-      } else { // current extracted
-        prev->next = list_to_add->First();
-        prev->next->prev = prev;
-        if (ex_current_was_last) {
-          list->last = list_to_add->last;
-          ex_current_was_last = false;
-        }
-        list_to_add->last->next = next;
-        next->prev = list_to_add->last;
-        next = prev->next;
+      /* Do nothing if either list is empty or if both iterators reference the same
+    link */
+
+      if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {
+        return;
       }
-    }
-    list_to_add->last = nullptr;
-  }
-}
 
-/***********************************************************************
- *              ELIST2_ITERATOR::add_list_before
- *
- *  Insert another list to this list before the current element. Move the
- *  iterator to the start of the inserted elements
- *  iterator.
- **********************************************************************/
+      /* Error if either current element is deleted */
 
-inline void ELIST2_ITERATOR::add_list_before(ELIST2 *list_to_add) {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::add_list_before"", ABORT);
-  }
-  if (!list_to_add) {
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_list_before"", ABORT, ""list_to_add is nullptr"");
-  }
-#endif
+      if (!current || !other_it->current) {
+        DONT_EXCHANGE_DELETED.error(""ELIST2_ITERATOR.exchange"", ABORT);
+      }
 
-  if (!list_to_add->empty()) {
-    if (list->empty()) {
-      list->last = list_to_add->last;
-      prev = list->last;
-      current = list->First();
-      next = current->next;
-      ex_current_was_last = false;
-    } else {
-      prev->next = list_to_add->First();
-      prev->next->prev = prev;
-
-      if (current) { // not extracted
-        list_to_add->last->next = current;
-        current->prev = list_to_add->last;
-      } else { // current extracted
-        list_to_add->last->next = next;
-        next->prev = list_to_add->last;
-        if (ex_current_was_last) {
-          list->last = list_to_add->last;
-        }
-        if (ex_current_was_cycle_pt) {
-          cycle_pt = prev->next;
+      /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements
+    (other before this); non-doubleton adjacent elements (this before other);
+    non-adjacent elements. */
+
+    // adjacent links
+      if ((next == other_it->current) || (other_it->next == current)) {
+        // doubleton list
+        if ((next == other_it->current) && (other_it->next == current)) {
+          prev = next = current;
+          other_it->prev = other_it->next = other_it->current;
+        } else { // non-doubleton with
+          // adjacent links
+          // other before this
+          if (other_it->next == current) {
+            other_it->prev->next = current;
+            other_it->current->next = next;
+            other_it->current->prev = current;
+            current->next = other_it->current;
+            current->prev = other_it->prev;
+            next->prev = other_it->current;
+
+            other_it->next = other_it->current;
+            prev = current;
+          } else { // this before other
+            prev->next = other_it->current;
+            current->next = other_it->next;
+            current->prev = other_it->current;
+            other_it->current->next = current;
+            other_it->current->prev = prev;
+            other_it->next->prev = current;
+
+            next = current;
+            other_it->prev = other_it->current;
+          }
         }
+      } else { // no overlap
+        prev->next = other_it->current;
+        current->next = other_it->next;
+        current->prev = other_it->prev;
+        next->prev = other_it->current;
+        other_it->prev->next = current;
+        other_it->current->next = next;
+        other_it->current->prev = prev;
+        other_it->next->prev = current;
       }
-      current = prev->next;
-      next = current->next;
-    }
-    list_to_add->last = nullptr;
-  }
-}
 
-/***********************************************************************
- *              ELIST2_ITERATOR::extract
- *
- *  Do extraction by removing current from the list, returning it to the
- *  caller, but NOT updating the iterator.  (So that any calling loop can do
- *  this.)   The iterator's current points to nullptr.  If the extracted element
- *  is to be deleted, this is the callers responsibility.
- **********************************************************************/
+      /* update end of list pointer when necessary (remember that the 2 iterators
+      may iterate over different lists!) */
 
-inline ELIST2_LINK *ELIST2_ITERATOR::extract() {
-  ELIST2_LINK *extracted_link;
+      if (list->last == current) {
+        list->last = other_it->current;
+      }
+      if (other_it->list->last == other_it->current) {
+        other_it->list->last = current;
+      }
 
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::extract"", ABORT);
-  }
-  if (!current) { // list empty or
-                  // element extracted
-    NULL_CURRENT.error(""ELIST2_ITERATOR::extract"", ABORT);
-  }
-#endif
+      if (current == cycle_pt) {
+        cycle_pt = other_it->cycle_pt;
+      }
+      if (other_it->current == other_it->cycle_pt) {
+        other_it->cycle_pt = cycle_pt;
+      }
 
-  if (list->singleton()) {
-    // Special case where we do need to change the iterator.
-    prev = next = list->last = nullptr;
-  } else {
-    prev->next = next; // remove from list
-    next->prev = prev;
+      /* The actual exchange - in all cases*/
 
-    if (current == list->last) {
-      list->last = prev;
-      ex_current_was_last = true;
-    } else {
-      ex_current_was_last = false;
-    }
-  }
-  // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.
-  ex_current_was_cycle_pt = (current == cycle_pt);
-  extracted_link = current;
-  extracted_link->next = nullptr; // for safety
-  extracted_link->prev = nullptr; // for safety
-  current = nullptr;
-  return extracted_link;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::move_to_first()
- *
- *  Move current so that it is set to the start of the list.
- *  Return data just in case anyone wants it.
- **********************************************************************/
+      old_current = current;
+      current = other_it->current;
+      other_it->current = old_current;
+    } // other iterator
 
-inline ELIST2_LINK *ELIST2_ITERATOR::move_to_first() {
+      //# elements in list
+    int32_t length() const {
+      return list->length();
+    }
+    /***********************************************************************
+   *              ELIST2_ITERATOR::sort()
+   *
+   *  Sort the elements of the list, then reposition at the start.
+   *
+   **********************************************************************/
+    void sort(          // sort elements
+      int comparator( // comparison routine
+        const void *, const void *)) {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::move_to_first"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST2_ITERATOR::sort"", ABORT);
+      }
 #endif
 
-  current = list->First();
-  prev = list->last;
-  next = current ? current->next : nullptr;
-  return current;
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::move_to_last()
- *
- *  Move current so that it is set to the end of the list.
- *  Return data just in case anyone wants it.
- **********************************************************************/
+      list->sort(comparator);
+      move_to_first();
+    }
 
-inline ELIST2_LINK *ELIST2_ITERATOR::move_to_last() {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::move_to_last"", ABORT);
-  }
-#endif
+  private:
+    // Don't use the following constructor.
+    ITERATOR() = delete;
+  };
 
-  current = list->last;
-  prev = current ? current->prev : nullptr;
-  next = current ? current->next : nullptr;
-  return current;
-}
 
-/***********************************************************************
- *              ELIST2_ITERATOR::mark_cycle_pt()
- *
- *  Remember the current location so that we can tell whether we've returned
- *  to this point later.
- *
- *  If the current point is deleted either now, or in the future, the cycle
- *  point will be set to the next item which is set to current.  This could be
- *  by a forward, add_after_then_move or add_after_then_move.
- **********************************************************************/
+private:
+  CLASSNAME *last = nullptr; // End of list
+  //(Points to head)
+  CLASSNAME *First() { // return first
+    return last ? last->next : nullptr;
+  }
 
-inline void ELIST2_ITERATOR::mark_cycle_pt() {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::mark_cycle_pt"", ABORT);
+public:
+  ~ELIST2() {
+    clear();
   }
-#endif
 
-  if (current) {
-    cycle_pt = current;
-  } else {
-    ex_current_was_cycle_pt = true;
+  /* delete elements */
+  void clear() {
+    internal_clear();
   }
-  started_cycling = false;
-}
 
-/***********************************************************************
- *              ELIST2_ITERATOR::at_first()
- *
- *  Are we at the start of the list?
- *
- **********************************************************************/
+  /* Become a deep copy of src_list */
+  template <typename U>
+  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {
+    ITERATOR from_it(const_cast<U *>(src_list));
+    ITERATOR to_it(this);
 
-inline bool ELIST2_ITERATOR::at_first() const {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::at_first"", ABORT);
+    for (from_it.mark_cycle_pt(); !from_it.cycled_list(); from_it.forward())
+      to_it.add_after_then_move((*copier)(from_it.data()));
   }
-#endif
 
-  // we're at a deleted
-  return ((list->empty()) || (current == list->First()) ||
-          ((current == nullptr) && (prev == list->last) && // NON-last pt between
-           !ex_current_was_last));                         // first and last
-}
+  /***********************************************************************
+   *              ELIST2::internal_clear
+   *
+   *  Used by the destructor and the ""clear"" member function of derived list
+   *  classes to destroy all the elements on the list.
+   *  The calling function passes a ""zapper"" function which can be called to
+   *  delete each element of the list, regardless of its derived type.  This
+   *  technique permits a generic clear function to destroy elements of
+   *  different derived types correctly, without requiring virtual functions and
+   *  the consequential memory overhead.
+   **********************************************************************/
+
+   // destroy all links
+  void internal_clear() {
+    // ptr to zapper functn
+    CLASSNAME *ptr;
+    CLASSNAME *next;
+
+    if (!empty()) {
+      ptr = last->next;     // set to first
+      last->next = nullptr; // break circle
+      last = nullptr;       // set list empty
+      while (ptr) {
+        next = ptr->next;
+        delete ptr;
+        ptr = next;
+      }
+    }
+  }
 
-/***********************************************************************
- *              ELIST2_ITERATOR::at_last()
- *
- *  Are we at the end of the list?
- *
- **********************************************************************/
+  bool empty() const { // is list empty?
+    return !last;
+  }
 
-inline bool ELIST2_ITERATOR::at_last() const {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::at_last"", ABORT);
+  bool singleton() const {
+    return last ? (last == last->next) : false;
   }
-#endif
 
-  // we're at a deleted
-  return ((list->empty()) || (current == list->last) ||
-          ((current == nullptr) && (prev == list->last) && // last point between
-           ex_current_was_last));                          // first and last
-}
+  void shallow_copy(       // dangerous!!
+    ELIST2 *from_list) { // beware destructors!!
+    last = from_list->last;
+  }
 
-/***********************************************************************
- *              ELIST2_ITERATOR::cycled_list()
- *
- *  Have we returned to the cycle_pt since it was set?
+  /***********************************************************************
+ *              ELIST2::assign_to_sublist
  *
+ *  The list is set to a sublist of another list.  ""This"" list must be empty
+ *  before this function is invoked.  The two iterators passed must refer to
+ *  the same list, different from ""this"" one.  The sublist removed is the
+ *  inclusive list from start_it's current position to end_it's current
+ *  position.  If this range passes over the end of the source list then the
+ *  source list has its end set to the previous element of start_it.  The
+ *  extracted sublist is unaffected by the end point of the source list, its
+ *  end point is always the end_it position.
  **********************************************************************/
+  void assign_to_sublist(        // to this list
+    ITERATOR *start_it, // from list start
+    ITERATOR *end_it);  // from list end
 
-inline bool ELIST2_ITERATOR::cycled_list() const {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::cycled_list"", ABORT);
+  // # elements in list
+  int32_t length() const {
+    int32_t count = 0;
+    if (last != nullptr) {
+      count = 1;
+      for (auto it = last->next; it != last; it = it->next) {
+        count++;
+      }
+    }
+    return count;
   }
-#endif
-
-  return ((list->empty()) || ((current == cycle_pt) && started_cycling));
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::sort()
- *
- *  Sort the elements of the list, then reposition at the start.
+  /***********************************************************************
+ *              ELIST2::sort
  *
+ *  Sort elements on list
+ *  NB If you don't like the const declarations in the comparator, coerce yours:
+ *   (int (*)(const void *, const void *)
  **********************************************************************/
+  void sort(          // sort elements
+    int comparator( // comparison routine
+      const void *, const void *)) {
+    // Allocate an array of pointers, one per list element.
+    auto count = length();
+    if (count > 0) {
+      // ptr array to sort
+      std::vector<CLASSNAME *> base;
+      base.reserve(count);
+
+      ITERATOR it(this);
+
+      // Extract all elements, putting the pointers in the array.
+      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
+        base.push_back(it.extract());
+      }
 
-inline void ELIST2_ITERATOR::sort( // sort elements
-    int comparator(                // comparison routine
-        const void *, const void *)) {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::sort"", ABORT);
-  }
-#endif
-
-  list->sort(comparator);
-  move_to_first();
-}
-
-/***********************************************************************
- *              ELIST2_ITERATOR::add_to_end
- *
- *  Add a new element to the end of the list without moving the iterator.
- *  This is provided because a single linked list cannot move to the last as
- *  the iterator couldn't set its prev pointer.  Adding to the end is
- *  essential for implementing
-              queues.
-**********************************************************************/
+      // Sort the pointer array.
+      qsort(&base[0], count, sizeof(base[0]), comparator);
 
-inline void ELIST2_ITERATOR::add_to_end( // element to add
-    ELIST2_LINK *new_element) {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST2_ITERATOR::add_to_end"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_to_end"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST2_ITERATOR::add_to_end"", ABORT);
+      // Rebuild the list from the sorted pointers.
+      for (auto current : base) {
+        it.add_to_end(current);
+      }
+    }
   }
-#endif
 
-  if (this->at_last()) {
-    this->add_after_stay_put(new_element);
-  } else {
-    if (this->at_first()) {
-      this->add_before_stay_put(new_element);
-      list->last = new_element;
-    } else { // Iteratr is elsewhere
-      new_element->next = list->last->next;
-      new_element->prev = list->last;
-      list->last->next->prev = new_element;
-      list->last->next = new_element;
-      list->last = new_element;
+  // Assuming list has been sorted already, insert new_link to
+  // keep the list sorted according to the same comparison function.
+  // Comparison function is the same as used by sort, i.e. uses double
+  // indirection. Time is O(1) to add to beginning or end.
+  // Time is linear to add pre-sorted items to an empty list.
+  void add_sorted(int comparator(const void *, const void *), CLASSNAME *new_link) {
+    // Check for adding at the end.
+    if (last == nullptr || comparator(&last, &new_link) < 0) {
+      if (last == nullptr) {
+        new_link->next = new_link;
+        new_link->prev = new_link;
+      } else {
+        new_link->next = last->next;
+        new_link->prev = last;
+        last->next = new_link;
+        new_link->next->prev = new_link;
+      }
+      last = new_link;
+    } else {
+      // Need to use an iterator.
+      ITERATOR it(this);
+      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
+        auto link = it.data();
+        if (comparator(&link, &new_link) > 0) {
+          break;
+        }
+      }
+      if (it.cycled_list()) {
+        it.add_to_end(new_link);
+      } else {
+        it.add_before_then_move(new_link);
+      }
     }
   }
-}
+};
 
+// add TESS_API?
+// move templated lists to public include dirs?
 #define ELIST2IZEH(CLASSNAME)                                                  \
-  class CLASSNAME##_LIST : public X_LIST<ELIST2, ELIST2_ITERATOR, CLASSNAME> { \
-    using X_LIST<ELIST2, ELIST2_ITERATOR, CLASSNAME>::X_LIST;                  \
-  };                                                                           \
-  struct CLASSNAME##_IT : X_ITER<ELIST2_ITERATOR, CLASSNAME> {                 \
-    using X_ITER<ELIST2_ITERATOR, CLASSNAME>::X_ITER;                          \
-    CLASSNAME *backward() {                                                    \
-      return reinterpret_cast<CLASSNAME *>(ELIST2_ITERATOR::backward());       \
-    }                                                                          \
+  struct CLASSNAME##_LIST : ELIST2<CLASSNAME> {                          \
+    using ELIST2<CLASSNAME>::ELIST2;                                            \
+  };                  \
+  struct CLASSNAME##_IT : ELIST2<CLASSNAME>::ITERATOR {            \
+    using base = ELIST2<CLASSNAME>::ITERATOR;          \
+    using base::base;                   \
   };
 
 } // namespace tesseract
","{'added': [(54, 'template <typename CLASSNAME>'), (55, 'class ELIST2 {'), (57, '  /**********************************************************************'), (58, '   *              CLASS - LINK'), (59, '   *'), (60, '   *              Generic link class for doubly linked lists with embedded links'), (61, '   *'), (62, '   *  Note:  No destructor - elements are assumed to be destroyed EITHER after'), (63, '   *  they have been extracted from a list OR by the ELIST2 destructor which'), (64, '   *  walks the list.'), (65, '   **********************************************************************/'), (66, ''), (67, '  class LINK {'), (68, '    friend class ITERATOR;'), (69, '    friend class ELIST2;'), (70, ''), (71, '    CLASSNAME *prev;'), (72, '    CLASSNAME *next;'), (73, ''), (74, '  public:'), (75, '    LINK() { // constructor'), (76, '      prev = next = nullptr;'), (79, '    LINK(const LINK &) = delete;'), (81, '    // The assignment operator is required for WERD.'), (82, '    void operator=(const LINK &) {'), (83, '      prev = next = nullptr;'), (84, '    }'), (85, '  };'), (88, '  /***********************************************************************'), (89, '   *              CLASS - ELIST2_ITERATOR'), (90, '   *'), (91, '   *              Generic iterator class for doubly linked lists with embedded'), (92, '   *links'), (93, '   **********************************************************************/'), (94, ''), (95, '  class ITERATOR {'), (96, '    friend void ELIST2::assign_to_sublist(ITERATOR *, ITERATOR *);'), (97, ''), (98, '    ELIST2 *list;                 // List being iterated'), (99, '    CLASSNAME *prev;            // prev element'), (100, '    CLASSNAME *current;         // current element'), (101, '    CLASSNAME *next;            // next element'), (102, '    CLASSNAME *cycle_pt;        // point we are cycling the list to.'), (103, '    bool ex_current_was_last;     // current extracted was end of list'), (104, '    bool ex_current_was_cycle_pt; // current extracted was cycle point'), (105, '    bool started_cycling;         // Have we moved off the start?'), (106, '    /***********************************************************************'), (107, '   *              ELIST2_ITERATOR::extract_sublist()'), (108, '   *'), (109, '   *  This is a private member, used only by ELIST2::assign_to_sublist.'), (110, '   *  Given another iterator for the same list, extract the links from THIS to'), (111, '   *  OTHER inclusive, link them into a new circular list, and return a'), (112, '   *  pointer to the last element.'), (113, ""   *  (Can't inline this function because it contains a loop)""), (114, '   **********************************************************************/'), (115, '    CLASSNAME *extract_sublist(   // from this current...'), (116, '      ITERATOR *other_it) {               // to other current'), (117, '#ifndef NDEBUG'), (118, '      constexpr ERRCODE BAD_EXTRACTION_PTS(""Can\'t extract sublist from points on different lists"");'), (119, '      constexpr ERRCODE DONT_EXTRACT_DELETED(""Can\'t extract a sublist marked by deleted points"");'), (120, '#endif'), (121, '      constexpr ERRCODE BAD_SUBLIST(""Can\'t find sublist end point in original list"");'), (123, '      ITERATOR temp_it = *this;'), (124, '      CLASSNAME *end_of_new_list;'), (126, '#ifndef NDEBUG'), (127, '      if (!other_it)'), (128, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::extract_sublist"", ABORT, ""other_it nullptr"");'), (129, '      if (!list)'), (130, '        NO_LIST.error(""ELIST2_ITERATOR::extract_sublist"", ABORT);'), (131, '      if (list != other_it->list)'), (132, '        BAD_EXTRACTION_PTS.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);'), (133, '      if (list->empty())'), (134, '        EMPTY_LIST.error(""ELIST2_ITERATOR::extract_sublist"", ABORT);'), (135, ''), (136, '      if (!current || !other_it->current)'), (137, '        DONT_EXTRACT_DELETED.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);'), (138, '#endif'), (140, '      ex_current_was_last = other_it->ex_current_was_last = false;'), (141, '      ex_current_was_cycle_pt = false;'), (142, '      other_it->ex_current_was_cycle_pt = false;'), (144, '      temp_it.mark_cycle_pt();'), (145, '      do {                         // walk sublist'), (146, ""        if (temp_it.cycled_list()) { // can't find end pt""), (147, '          BAD_SUBLIST.error(""ELIST2_ITERATOR.extract_sublist"", ABORT);'), (148, '        }'), (150, '        if (temp_it.at_last()) {'), (151, '          list->last = prev;'), (152, '          ex_current_was_last = other_it->ex_current_was_last = true;'), (153, '        }'), (155, '        if (temp_it.current == cycle_pt) {'), (156, '          ex_current_was_cycle_pt = true;'), (157, '        }'), (159, '        if (temp_it.current == other_it->cycle_pt) {'), (160, '          other_it->ex_current_was_cycle_pt = true;'), (161, '        }'), (163, '        temp_it.forward();'), (164, '      }'), (165, '      // do INCLUSIVE list'), (166, '      while (temp_it.prev != other_it->current);'), (167, ''), (168, '      // circularise sublist'), (169, '      other_it->current->next = current;'), (170, '      // circularise sublist'), (171, '      current->prev = other_it->current;'), (172, '      end_of_new_list = other_it->current;'), (173, ''), (174, '      // sublist = whole list'), (175, '      if (prev == other_it->current) {'), (176, '        list->last = nullptr;'), (177, '        prev = current = next = nullptr;'), (178, '        other_it->prev = other_it->current = other_it->next = nullptr;'), (179, '      } else {'), (180, '        prev->next = other_it->next;'), (181, '        other_it->next->prev = prev;'), (182, ''), (183, '        current = other_it->current = nullptr;'), (184, '        next = other_it->next;'), (185, '        other_it->prev = prev;'), (186, '      }'), (187, '      return end_of_new_list;'), (188, '    } // to other current'), (189, ''), (190, '  public:'), (191, '    /***********************************************************************'), (192, '   *              ELIST2_ITERATOR::ELIST2_ITERATOR'), (193, '   *'), (194, '   *  CONSTRUCTOR - set iterator to specified list;'), (195, '   **********************************************************************/'), (196, '    ITERATOR( // constructor'), (197, '      ELIST2 *list_to_iterate) {'), (198, '      set_to_list(list_to_iterate);'), (199, '    }'), (201, '    /***********************************************************************'), (202, '     *              ELIST2_ITERATOR::set_to_list'), (203, '     *'), (204, '     *  (Re-)initialise the iterator to point to the start of the list_to_iterate'), (205, '     *  over.'), (206, '     **********************************************************************/'), (208, '    void set_to_list( // change list'), (209, '      ELIST2 *list_to_iterate) {'), (211, '      if (!list_to_iterate) {'), (212, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");'), (213, '      }'), (216, '      list = list_to_iterate;'), (217, '      prev = list->last;'), (218, '      current = list->First();'), (219, '      next = current ? current->next : nullptr;'), (220, '      cycle_pt = nullptr; // await explicit set'), (221, '      started_cycling = false;'), (222, '      ex_current_was_last = false;'), (223, '      ex_current_was_cycle_pt = false;'), (224, '    }'), (225, '    /***********************************************************************'), (226, '   *              ELIST2_ITERATOR::add_after_then_move'), (227, '   *'), (228, '   *  Add a new element to the list after the current element and move the'), (229, '   *  iterator to the new element.'), (230, '   **********************************************************************/'), (231, '    void add_after_then_move(   // add after current &'), (232, '      CLASSNAME *new_element) {'), (233, '#ifndef NDEBUG'), (234, '      if (!list) {'), (235, '        NO_LIST.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);'), (236, '      }'), (237, '      if (!new_element) {'), (238, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT, ""new_element is nullptr"");'), (239, '      }'), (240, '      if (new_element->next) {'), (241, '        STILL_LINKED.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);'), (242, '      }'), (243, '#endif'), (245, '      if (list->empty()) {'), (246, '        new_element->next = new_element;'), (247, '        new_element->prev = new_element;'), (248, '        list->last = new_element;'), (249, '        prev = next = new_element;'), (250, '      } else {'), (251, '        new_element->next = next;'), (252, '        next->prev = new_element;'), (253, ''), (254, '        if (current) { // not extracted'), (255, '          new_element->prev = current;'), (256, '          current->next = new_element;'), (257, '          prev = current;'), (258, '          if (current == list->last) {'), (259, '            list->last = new_element;'), (260, '          }'), (261, '        } else { // current extracted'), (262, '          new_element->prev = prev;'), (263, '          prev->next = new_element;'), (264, '          if (ex_current_was_last) {'), (265, '            list->last = new_element;'), (266, '          }'), (267, '          if (ex_current_was_cycle_pt) {'), (268, '            cycle_pt = new_element;'), (269, '          }'), (270, '        }'), (271, '      }'), (272, '      current = new_element;'), (273, '    } // move to new'), (274, '      /***********************************************************************'), (275, '     *              ELIST2_ITERATOR::add_after_stay_put'), (276, '     *'), (277, '     *  Add a new element to the list after the current element but do not move'), (278, '     *  the iterator to the new element.'), (279, '     **********************************************************************/'), (280, '    void add_after_stay_put(    // add after current &'), (281, '      CLASSNAME *new_element) {'), (282, '#ifndef NDEBUG'), (283, '      if (!list) {'), (284, '        NO_LIST.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);'), (285, '      }'), (286, '      if (!new_element) {'), (287, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT, ""new_element is nullptr"");'), (288, '      }'), (289, '      if (new_element->next) {'), (290, '        STILL_LINKED.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);'), (291, '      }'), (292, '#endif'), (294, '      if (list->empty()) {'), (295, '        new_element->next = new_element;'), (296, '        new_element->prev = new_element;'), (297, '        list->last = new_element;'), (298, '        prev = next = new_element;'), (299, '        ex_current_was_last = false;'), (300, '        current = nullptr;'), (301, '      } else {'), (302, '        new_element->next = next;'), (303, '        next->prev = new_element;'), (304, ''), (305, '        if (current) { // not extracted'), (306, '          new_element->prev = current;'), (307, '          current->next = new_element;'), (308, '          if (prev == current) {'), (309, '            prev = new_element;'), (310, '          }'), (311, '          if (current == list->last) {'), (312, '            list->last = new_element;'), (313, '          }'), (314, '        } else { // current extracted'), (315, '          new_element->prev = prev;'), (316, '          prev->next = new_element;'), (317, '          if (ex_current_was_last) {'), (318, '            list->last = new_element;'), (319, '            ex_current_was_last = false;'), (320, '          }'), (321, '        }'), (322, '        next = new_element;'), (323, '      }'), (324, '    } // stay at current'), (325, '      /***********************************************************************'), (326, '     *              ELIST2_ITERATOR::add_before_then_move'), (327, '     *'), (328, '     *  Add a new element to the list before the current element and move the'), (329, '     *  iterator to the new element.'), (330, '     **********************************************************************/'), (331, '    void add_before_then_move(  // add before current &'), (332, '      CLASSNAME *new_element) {'), (333, '#ifndef NDEBUG'), (334, '      if (!list) {'), (335, '        NO_LIST.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);'), (336, '      }'), (337, '      if (!new_element) {'), (338, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT, ""new_element is nullptr"");'), (339, '      }'), (340, '      if (new_element->next) {'), (341, '        STILL_LINKED.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);'), (342, '      }'), (343, '#endif'), (345, '      if (list->empty()) {'), (346, '        new_element->next = new_element;'), (347, '        new_element->prev = new_element;'), (348, '        list->last = new_element;'), (349, '        prev = next = new_element;'), (350, '      } else {'), (351, '        prev->next = new_element;'), (352, '        new_element->prev = prev;'), (353, ''), (354, '        if (current) { // not extracted'), (355, '          new_element->next = current;'), (356, '          current->prev = new_element;'), (357, '          next = current;'), (358, '        } else { // current extracted'), (359, '          new_element->next = next;'), (360, '          next->prev = new_element;'), (361, '          if (ex_current_was_last) {'), (362, '            list->last = new_element;'), (363, '          }'), (364, '          if (ex_current_was_cycle_pt) {'), (365, '            cycle_pt = new_element;'), (366, '          }'), (367, '        }'), (368, '      }'), (369, '      current = new_element;'), (370, '    } // move to new'), (371, '      /***********************************************************************'), (372, '     *              ELIST2_ITERATOR::add_before_stay_put'), (373, '     *'), (374, ""     *  Add a new element to the list before the current element but don't move the""), (375, '     *  iterator to the new element.'), (376, '     **********************************************************************/'), (377, '    void add_before_stay_put(   // add before current &'), (378, '      CLASSNAME *new_element) {'), (379, '#ifndef NDEBUG'), (380, '      if (!list) {'), (381, '        NO_LIST.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);'), (382, '      }'), (383, '      if (!new_element) {'), (384, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT, ""new_element is nullptr"");'), (385, '      }'), (386, '      if (new_element->next) {'), (387, '        STILL_LINKED.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);'), (388, '      }'), (389, '#endif'), (391, '      if (list->empty()) {'), (392, '        new_element->next = new_element;'), (393, '        new_element->prev = new_element;'), (394, '        list->last = new_element;'), (395, '        prev = next = new_element;'), (396, '        ex_current_was_last = true;'), (397, '        current = nullptr;'), (398, '      } else {'), (399, '        prev->next = new_element;'), (400, '        new_element->prev = prev;'), (401, ''), (402, '        if (current) { // not extracted'), (403, '          new_element->next = current;'), (404, '          current->prev = new_element;'), (405, '          if (next == current) {'), (406, '            next = new_element;'), (407, '          }'), (408, '        } else { // current extracted'), (409, '          new_element->next = next;'), (410, '          next->prev = new_element;'), (411, '          if (ex_current_was_last) {'), (412, '            list->last = new_element;'), (413, '          }'), (414, '        }'), (415, '        prev = new_element;'), (416, '      }'), (417, '    } // stay at current'), (418, '      /***********************************************************************'), (419, '     *              ELIST2_ITERATOR::add_list_after'), (420, '     *'), (421, ""     *  Insert another list to this list after the current element but don't move""), (422, '     *the'), (423, '     *  iterator.'), (424, '     **********************************************************************/'), (425, '    void add_list_after(      // add a list &'), (426, '      ELIST2 *list_to_add) {'), (427, '#ifndef NDEBUG'), (428, '      if (!list) {'), (429, '        NO_LIST.error(""ELIST2_ITERATOR::add_list_after"", ABORT);'), (430, '      }'), (431, '      if (!list_to_add) {'), (432, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_list_after"", ABORT, ""list_to_add is nullptr"");'), (433, '      }'), (434, '#endif'), (436, '      if (!list_to_add->empty()) {'), (437, '        if (list->empty()) {'), (438, '          list->last = list_to_add->last;'), (439, '          prev = list->last;'), (440, '          next = list->First();'), (441, '          ex_current_was_last = true;'), (442, '          current = nullptr;'), (443, '        } else {'), (444, '          if (current) { // not extracted'), (445, '            current->next = list_to_add->First();'), (446, '            current->next->prev = current;'), (447, '            if (current == list->last) {'), (448, '              list->last = list_to_add->last;'), (449, '            }'), (450, '            list_to_add->last->next = next;'), (451, '            next->prev = list_to_add->last;'), (452, '            next = current->next;'), (453, '          } else { // current extracted'), (454, '            prev->next = list_to_add->First();'), (455, '            prev->next->prev = prev;'), (456, '            if (ex_current_was_last) {'), (457, '              list->last = list_to_add->last;'), (458, '              ex_current_was_last = false;'), (459, '            }'), (460, '            list_to_add->last->next = next;'), (461, '            next->prev = list_to_add->last;'), (462, '            next = prev->next;'), (463, '          }'), (464, '        }'), (465, '        list_to_add->last = nullptr;'), (466, '      }'), (467, '    } // stay at current'), (468, '      /***********************************************************************'), (469, '     *              ELIST2_ITERATOR::add_list_before'), (470, '     *'), (471, '     *  Insert another list to this list before the current element. Move the'), (472, '     *  iterator to the start of the inserted elements'), (473, '     *  iterator.'), (474, '     **********************************************************************/'), (475, '    void add_list_before(     // add a list &'), (476, '      ELIST2 *list_to_add) {'), (478, '      if (!list) {'), (479, '        NO_LIST.error(""ELIST2_ITERATOR::add_list_before"", ABORT);'), (480, '      }'), (481, '      if (!list_to_add) {'), (482, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_list_before"", ABORT, ""list_to_add is nullptr"");'), (483, '      }'), (486, '      if (!list_to_add->empty()) {'), (487, '        if (list->empty()) {'), (488, '          list->last = list_to_add->last;'), (489, '          prev = list->last;'), (490, '          current = list->First();'), (491, '          next = current->next;'), (492, '          ex_current_was_last = false;'), (493, '        } else {'), (494, '          prev->next = list_to_add->First();'), (495, '          prev->next->prev = prev;'), (496, ''), (497, '          if (current) { // not extracted'), (498, '            list_to_add->last->next = current;'), (499, '            current->prev = list_to_add->last;'), (500, '          } else { // current extracted'), (501, '            list_to_add->last->next = next;'), (502, '            next->prev = list_to_add->last;'), (503, '            if (ex_current_was_last) {'), (504, '              list->last = list_to_add->last;'), (505, '            }'), (506, '            if (ex_current_was_cycle_pt) {'), (507, '              cycle_pt = prev->next;'), (508, '            }'), (509, '          }'), (510, '          current = prev->next;'), (511, '          next = current->next;'), (512, '        }'), (513, '        list_to_add->last = nullptr;'), (514, '      }'), (515, '    } // move to it 1st item'), (517, '    CLASSNAME *data() { // get current data'), (518, '#ifndef NDEBUG'), (519, '      if (!current) {'), (520, '        NULL_DATA.error(""ELIST2_ITERATOR::data"", ABORT);'), (521, '      }'), (522, '      if (!list) {'), (523, '        NO_LIST.error(""ELIST2_ITERATOR::data"", ABORT);'), (524, '      }'), (525, '#endif'), (526, '      return current;'), (527, '    }'), (528, '    /***********************************************************************'), (529, '   *              ELIST2_ITERATOR::data_relative'), (530, '   *'), (531, '   *  Return the data pointer to the element ""offset"" elements from current.'), (532, ""   *  (This function can't be INLINEd because it contains a loop)""), (533, '   **********************************************************************/'), (534, '    CLASSNAME *data_relative( // get data + or - ...'), (535, '      int8_t offset) {                         // offset from current'), (536, '      CLASSNAME *ptr;'), (538, '#ifndef NDEBUG'), (539, '      if (!list)'), (540, '        NO_LIST.error(""ELIST2_ITERATOR::data_relative"", ABORT);'), (541, '      if (list->empty())'), (542, '        EMPTY_LIST.error(""ELIST2_ITERATOR::data_relative"", ABORT);'), (543, '#endif'), (545, '      if (offset < 0) {'), (546, '        for (ptr = current ? current : next; offset++ < 0; ptr = ptr->prev) {'), (547, '          ;'), (548, '        }'), (549, '      } else {'), (550, '        for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {'), (551, '          ;'), (552, '        }'), (553, '      }'), (555, '#ifndef NDEBUG'), (556, '      if (!ptr)'), (557, '        NULL_DATA.error(""ELIST2_ITERATOR::data_relative"", ABORT);'), (558, '#endif'), (560, '      return ptr;'), (561, '    }         // offset from current'), (562, '      /***********************************************************************'), (563, '     *              ELIST2_ITERATOR::forward'), (564, '     *'), (565, '     *  Move the iterator to the next element of the list.'), (566, '     *  REMEMBER: ALL LISTS ARE CIRCULAR.'), (567, '     **********************************************************************/'), (568, '    CLASSNAME *forward() {'), (569, '#ifndef NDEBUG'), (570, '      if (!list)'), (571, '        NO_LIST.error(""ELIST2_ITERATOR::forward"", ABORT);'), (572, '#endif'), (573, '      if (list->empty()) {'), (574, '        return nullptr;'), (575, '      }'), (577, '      if (current) { // not removed so'), (578, '        // set previous'), (579, '        prev = current;'), (580, '        started_cycling = true;'), (581, '        // In case next is deleted by another iterator, get it from the current.'), (582, '        current = current->next;'), (583, '      } else {'), (584, '        if (ex_current_was_cycle_pt) {'), (585, '          cycle_pt = next;'), (586, '        }'), (587, '        current = next;'), (588, '      }'), (590, '#ifndef NDEBUG'), (591, '      if (!current)'), (592, '        NULL_DATA.error(""ELIST2_ITERATOR::forward"", ABORT);'), (593, '#endif'), (595, '      next = current->next;'), (597, '#ifndef NDEBUG'), (598, '      if (!next) {'), (599, '        NULL_NEXT.error(""ELIST2_ITERATOR::forward"", ABORT,'), (600, '          ""This is: %p  Current is: %p"",'), (601, '          static_cast<void *>(this),'), (602, '          static_cast<void *>(current));'), (603, '      }'), (604, '#endif'), (606, '      return current;'), (607, '    } // move to next element'), (608, '      /***********************************************************************'), (609, '     *              ELIST2_ITERATOR::backward'), (610, '     *'), (611, '     *  Move the iterator to the previous element of the list.'), (612, '     *  REMEMBER: ALL LISTS ARE CIRCULAR.'), (613, '     **********************************************************************/'), (614, '    CLASSNAME *backward() {'), (616, '      if (!list)'), (617, '        NO_LIST.error(""ELIST2_ITERATOR::backward"", ABORT);'), (619, '      if (list->empty()) {'), (620, '        return nullptr;'), (621, '      }'), (623, '      if (current) { // not removed so'), (624, '        // set previous'), (625, '        next = current;'), (626, '        started_cycling = true;'), (627, '        // In case prev is deleted by another iterator, get it from current.'), (628, '        current = current->prev;'), (629, '      } else {'), (630, '        if (ex_current_was_cycle_pt) {'), (631, '          cycle_pt = prev;'), (632, '        }'), (633, '        current = prev;'), (634, '      }'), (636, '#ifndef NDEBUG'), (637, '      if (!current)'), (638, '        NULL_DATA.error(""ELIST2_ITERATOR::backward"", ABORT);'), (639, '      if (!prev) {'), (640, '        NULL_PREV.error(""ELIST2_ITERATOR::backward"", ABORT,'), (641, '          ""This is: %p  Current is: %p"",'), (642, '          static_cast<void *>(this),'), (643, '          static_cast<void *>(current));'), (644, '      }'), (645, '#endif'), (647, '      prev = current->prev;'), (648, '      return current;'), (649, '    } // move to prev element'), (650, '      /***********************************************************************'), (651, '     *              ELIST2_ITERATOR::extract'), (652, '     *'), (653, '     *  Do extraction by removing current from the list, returning it to the'), (654, '     *  caller, but NOT updating the iterator.  (So that any calling loop can do'), (655, ""     *  this.)   The iterator's current points to nullptr.  If the extracted element""), (656, '     *  is to be deleted, this is the callers responsibility.'), (657, '     **********************************************************************/'), (658, '    CLASSNAME *extract() {'), (659, '      CLASSNAME *extracted_link;'), (662, '      if (!list) {'), (663, '        NO_LIST.error(""ELIST2_ITERATOR::extract"", ABORT);'), (664, '      }'), (665, '      if (!current) { // list empty or'), (666, '        // element extracted'), (667, '        NULL_CURRENT.error(""ELIST2_ITERATOR::extract"", ABORT);'), (668, '      }'), (671, '      if (list->singleton()) {'), (672, '        // Special case where we do need to change the iterator.'), (673, '        prev = next = list->last = nullptr;'), (674, '      } else {'), (675, '        prev->next = next; // remove from list'), (676, '        next->prev = prev;'), (677, ''), (678, '        if (current == list->last) {'), (679, '          list->last = prev;'), (680, '          ex_current_was_last = true;'), (681, '        } else {'), (682, '          ex_current_was_last = false;'), (683, '        }'), (685, '      // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.'), (686, '      ex_current_was_cycle_pt = (current == cycle_pt);'), (687, '      extracted_link = current;'), (688, '      extracted_link->next = nullptr; // for safety'), (689, '      extracted_link->prev = nullptr; // for safety'), (690, '      current = nullptr;'), (691, '      return extracted_link;'), (692, '    } // remove from list'), (693, '      /***********************************************************************'), (694, '     *              ELIST2_ITERATOR::move_to_first()'), (695, '     *'), (696, '     *  Move current so that it is set to the start of the list.'), (697, '     *  Return data just in case anyone wants it.'), (698, '     **********************************************************************/'), (699, '     // go to start of list'), (700, '    CLASSNAME *move_to_first() {'), (701, '#ifndef NDEBUG'), (702, '      if (!list) {'), (703, '        NO_LIST.error(""ELIST2_ITERATOR::move_to_first"", ABORT);'), (705, '#endif'), (707, '      current = list->First();'), (708, '      prev = list->last;'), (709, '      next = current ? current->next : nullptr;'), (710, '      return current;'), (711, '    }'), (712, '    /***********************************************************************'), (713, '   *              ELIST2_ITERATOR::move_to_last()'), (714, '   *'), (715, '   *  Move current so that it is set to the end of the list.'), (716, '   *  Return data just in case anyone wants it.'), (717, '   **********************************************************************/'), (718, '    CLASSNAME *move_to_last() {'), (720, '      if (!list) {'), (721, '        NO_LIST.error(""ELIST2_ITERATOR::move_to_last"", ABORT);'), (722, '      }'), (725, '      current = list->last;'), (726, '      prev = current ? current->prev : nullptr;'), (727, '      next = current ? current->next : nullptr;'), (728, '      return current;'), (729, '    } // go to end of list'), (730, '      /***********************************************************************'), (731, '     *              ELIST2_ITERATOR::mark_cycle_pt()'), (732, '     *'), (733, ""     *  Remember the current location so that we can tell whether we've returned""), (734, '     *  to this point later.'), (735, '     *'), (736, '     *  If the current point is deleted either now, or in the future, the cycle'), (737, '     *  point will be set to the next item which is set to current.  This could be'), (738, '     *  by a forward, add_after_then_move or add_after_then_move.'), (739, '     **********************************************************************/'), (740, '    void mark_cycle_pt() {'), (741, '#ifndef NDEBUG'), (742, '      if (!list) {'), (743, '        NO_LIST.error(""ELIST2_ITERATOR::mark_cycle_pt"", ABORT);'), (745, '#endif'), (746, ''), (747, '      if (current) {'), (748, '        cycle_pt = current;'), (749, '      } else {'), (750, '        ex_current_was_cycle_pt = true;'), (752, '      started_cycling = false;'), (753, '    } // remember current'), (754, ''), (755, '    bool empty() const { // is list empty?'), (756, '#ifndef NDEBUG'), (757, '      if (!list) {'), (758, '        NO_LIST.error(""ELIST2_ITERATOR::empty"", ABORT);'), (760, '#endif'), (761, '      return list->empty();'), (764, '    bool current_extracted() const { // current extracted?'), (765, '      return !current;'), (766, '    }'), (767, '    /***********************************************************************'), (768, '   *              ELIST2_ITERATOR::at_first()'), (769, '   *'), (770, '   *  Are we at the start of the list?'), (771, '   *'), (772, '   **********************************************************************/'), (773, '    bool at_first() const {'), (775, '      if (!list) {'), (776, '        NO_LIST.error(""ELIST2_ITERATOR::at_first"", ABORT);'), (777, '      }'), (780, ""      // we're at a deleted""), (781, '      return ((list->empty()) || (current == list->First()) ||'), (782, '        ((current == nullptr) && (prev == list->last) && // NON-last pt between'), (783, '          !ex_current_was_last));                         // first and last'), (784, '    } // Current is first?'), (785, '      /***********************************************************************'), (786, '     *              ELIST2_ITERATOR::at_last()'), (787, '     *'), (788, '     *  Are we at the end of the list?'), (789, '     *'), (790, '     **********************************************************************/'), (791, '    bool at_last() const {'), (792, '#ifndef NDEBUG'), (793, '      if (!list) {'), (794, '        NO_LIST.error(""ELIST2_ITERATOR::at_last"", ABORT);'), (796, '#endif'), (798, ""      // we're at a deleted""), (799, '      return ((list->empty()) || (current == list->last) ||'), (800, '        ((current == nullptr) && (prev == list->last) && // last point between'), (801, '          ex_current_was_last));                          // first and last'), (802, '    } // Current is last?'), (803, '      /***********************************************************************'), (804, '     *              ELIST2_ITERATOR::cycled_list()'), (805, '     *'), (806, '     *  Have we returned to the cycle_pt since it was set?'), (807, '     *'), (808, '     **********************************************************************/'), (809, '    bool cycled_list() const {'), (811, '      if (!list) {'), (812, '        NO_LIST.error(""ELIST2_ITERATOR::cycled_list"", ABORT);'), (813, '      }'), (816, '      return ((list->empty()) || ((current == cycle_pt) && started_cycling));'), (817, '    } // Completed a cycle?'), (818, '      /***********************************************************************'), (819, '     *              ELIST2_ITERATOR::add_to_end'), (820, '     *'), (821, '     *  Add a new element to the end of the list without moving the iterator.'), (822, '     *  This is provided because a single linked list cannot move to the last as'), (823, ""     *  the iterator couldn't set its prev pointer.  Adding to the end is""), (824, '     *  essential for implementing'), (825, '                  queues.'), (826, '    **********************************************************************/'), (827, '    void add_to_end(            // add at end &'), (828, '      CLASSNAME *new_element) {'), (829, '#ifndef NDEBUG'), (830, '      if (!list) {'), (831, '        NO_LIST.error(""ELIST2_ITERATOR::add_to_end"", ABORT);'), (833, '      if (!new_element) {'), (834, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::add_to_end"", ABORT, ""new_element is nullptr"");'), (836, '      if (new_element->next) {'), (837, '        STILL_LINKED.error(""ELIST2_ITERATOR::add_to_end"", ABORT);'), (838, '      }'), (839, '#endif'), (841, '      if (this->at_last()) {'), (842, '        this->add_after_stay_put(new_element);'), (843, '      } else {'), (844, '        if (this->at_first()) {'), (845, '          this->add_before_stay_put(new_element);'), (846, '          list->last = new_element;'), (847, '        } else { // Iteratr is elsewhere'), (848, '          new_element->next = list->last->next;'), (849, '          new_element->prev = list->last;'), (850, '          list->last->next->prev = new_element;'), (851, '          list->last->next = new_element;'), (852, '          list->last = new_element;'), (853, '        }'), (854, '      }'), (855, ""    } // don't move""), (856, '      /***********************************************************************'), (857, '     *              ELIST2_ITERATOR::exchange()'), (858, '     *'), (859, '     *  Given another iterator, whose current element is a different element on'), (860, '     *  the same list list OR an element of another list, exchange the two current'), (861, '     *  elements.  On return, each iterator points to the element which was the'), (862, '     *  other iterators current on entry.'), (863, ""     *  (This function hasn't been in-lined because its a bit big!)""), (864, '     **********************************************************************/'), (865, '    void exchange(                  // positions of 2 links'), (866, '      ITERATOR *other_it) { // other iterator'), (867, '      constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can\'t exchange deleted elements of lists"");'), (868, ''), (869, '      CLASSNAME *old_current;'), (872, '      if (!list)'), (873, '        NO_LIST.error(""ELIST2_ITERATOR::exchange"", ABORT);'), (874, '      if (!other_it)'), (875, '        BAD_PARAMETER.error(""ELIST2_ITERATOR::exchange"", ABORT, ""other_it nullptr"");'), (876, '      if (!(other_it->list))'), (877, '        NO_LIST.error(""ELIST2_ITERATOR::exchange"", ABORT, ""other_it"");'), (880, '      /* Do nothing if either list is empty or if both iterators reference the same'), (881, '    link */'), (882, ''), (883, '      if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {'), (884, '        return;'), (887, '      /* Error if either current element is deleted */'), (889, '      if (!current || !other_it->current) {'), (890, '        DONT_EXCHANGE_DELETED.error(""ELIST2_ITERATOR.exchange"", ABORT);'), (891, '      }'), (893, '      /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements'), (894, '    (other before this); non-doubleton adjacent elements (this before other);'), (895, '    non-adjacent elements. */'), (896, ''), (897, '    // adjacent links'), (898, '      if ((next == other_it->current) || (other_it->next == current)) {'), (899, '        // doubleton list'), (900, '        if ((next == other_it->current) && (other_it->next == current)) {'), (901, '          prev = next = current;'), (902, '          other_it->prev = other_it->next = other_it->current;'), (903, '        } else { // non-doubleton with'), (904, '          // adjacent links'), (905, '          // other before this'), (906, '          if (other_it->next == current) {'), (907, '            other_it->prev->next = current;'), (908, '            other_it->current->next = next;'), (909, '            other_it->current->prev = current;'), (910, '            current->next = other_it->current;'), (911, '            current->prev = other_it->prev;'), (912, '            next->prev = other_it->current;'), (913, ''), (914, '            other_it->next = other_it->current;'), (915, '            prev = current;'), (916, '          } else { // this before other'), (917, '            prev->next = other_it->current;'), (918, '            current->next = other_it->next;'), (919, '            current->prev = other_it->current;'), (920, '            other_it->current->next = current;'), (921, '            other_it->current->prev = prev;'), (922, '            other_it->next->prev = current;'), (923, ''), (924, '            next = current;'), (925, '            other_it->prev = other_it->current;'), (926, '          }'), (928, '      } else { // no overlap'), (929, '        prev->next = other_it->current;'), (930, '        current->next = other_it->next;'), (931, '        current->prev = other_it->prev;'), (932, '        next->prev = other_it->current;'), (933, '        other_it->prev->next = current;'), (934, '        other_it->current->next = next;'), (935, '        other_it->current->prev = prev;'), (936, '        other_it->next->prev = current;'), (939, '      /* update end of list pointer when necessary (remember that the 2 iterators'), (940, '      may iterate over different lists!) */'), (942, '      if (list->last == current) {'), (943, '        list->last = other_it->current;'), (944, '      }'), (945, '      if (other_it->list->last == other_it->current) {'), (946, '        other_it->list->last = current;'), (947, '      }'), (949, '      if (current == cycle_pt) {'), (950, '        cycle_pt = other_it->cycle_pt;'), (951, '      }'), (952, '      if (other_it->current == other_it->cycle_pt) {'), (953, '        other_it->cycle_pt = cycle_pt;'), (954, '      }'), (956, '      /* The actual exchange - in all cases*/'), (958, '      old_current = current;'), (959, '      current = other_it->current;'), (960, '      other_it->current = old_current;'), (961, '    } // other iterator'), (963, '      //# elements in list'), (964, '    int32_t length() const {'), (965, '      return list->length();'), (966, '    }'), (967, '    /***********************************************************************'), (968, '   *              ELIST2_ITERATOR::sort()'), (969, '   *'), (970, '   *  Sort the elements of the list, then reposition at the start.'), (971, '   *'), (972, '   **********************************************************************/'), (973, '    void sort(          // sort elements'), (974, '      int comparator( // comparison routine'), (975, '        const void *, const void *)) {'), (977, '      if (!list) {'), (978, '        NO_LIST.error(""ELIST2_ITERATOR::sort"", ABORT);'), (979, '      }'), (982, '      list->sort(comparator);'), (983, '      move_to_first();'), (984, '    }'), (986, '  private:'), (987, ""    // Don't use the following constructor.""), (988, '    ITERATOR() = delete;'), (989, '  };'), (992, 'private:'), (993, '  CLASSNAME *last = nullptr; // End of list'), (994, '  //(Points to head)'), (995, '  CLASSNAME *First() { // return first'), (996, '    return last ? last->next : nullptr;'), (997, '  }'), (999, 'public:'), (1000, '  ~ELIST2() {'), (1001, '    clear();'), (1004, '  /* delete elements */'), (1005, '  void clear() {'), (1006, '    internal_clear();'), (1009, '  /* Become a deep copy of src_list */'), (1010, '  template <typename U>'), (1011, '  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {'), (1012, '    ITERATOR from_it(const_cast<U *>(src_list));'), (1013, '    ITERATOR to_it(this);'), (1015, '    for (from_it.mark_cycle_pt(); !from_it.cycled_list(); from_it.forward())'), (1016, '      to_it.add_after_then_move((*copier)(from_it.data()));'), (1019, '  /***********************************************************************'), (1020, '   *              ELIST2::internal_clear'), (1021, '   *'), (1022, '   *  Used by the destructor and the ""clear"" member function of derived list'), (1023, '   *  classes to destroy all the elements on the list.'), (1024, '   *  The calling function passes a ""zapper"" function which can be called to'), (1025, '   *  delete each element of the list, regardless of its derived type.  This'), (1026, '   *  technique permits a generic clear function to destroy elements of'), (1027, '   *  different derived types correctly, without requiring virtual functions and'), (1028, '   *  the consequential memory overhead.'), (1029, '   **********************************************************************/'), (1030, ''), (1031, '   // destroy all links'), (1032, '  void internal_clear() {'), (1033, '    // ptr to zapper functn'), (1034, '    CLASSNAME *ptr;'), (1035, '    CLASSNAME *next;'), (1036, ''), (1037, '    if (!empty()) {'), (1038, '      ptr = last->next;     // set to first'), (1039, '      last->next = nullptr; // break circle'), (1040, '      last = nullptr;       // set list empty'), (1041, '      while (ptr) {'), (1042, '        next = ptr->next;'), (1043, '        delete ptr;'), (1044, '        ptr = next;'), (1045, '      }'), (1046, '    }'), (1047, '  }'), (1049, '  bool empty() const { // is list empty?'), (1050, '    return !last;'), (1051, '  }'), (1053, '  bool singleton() const {'), (1054, '    return last ? (last == last->next) : false;'), (1057, '  void shallow_copy(       // dangerous!!'), (1058, '    ELIST2 *from_list) { // beware destructors!!'), (1059, '    last = from_list->last;'), (1060, '  }'), (1062, '  /***********************************************************************'), (1063, ' *              ELIST2::assign_to_sublist'), (1065, ' *  The list is set to a sublist of another list.  ""This"" list must be empty'), (1066, ' *  before this function is invoked.  The two iterators passed must refer to'), (1067, ' *  the same list, different from ""this"" one.  The sublist removed is the'), (1068, "" *  inclusive list from start_it's current position to end_it's current""), (1069, ' *  position.  If this range passes over the end of the source list then the'), (1070, ' *  source list has its end set to the previous element of start_it.  The'), (1071, ' *  extracted sublist is unaffected by the end point of the source list, its'), (1072, ' *  end point is always the end_it position.'), (1074, '  void assign_to_sublist(        // to this list'), (1075, '    ITERATOR *start_it, // from list start'), (1076, '    ITERATOR *end_it);  // from list end'), (1078, '  // # elements in list'), (1079, '  int32_t length() const {'), (1080, '    int32_t count = 0;'), (1081, '    if (last != nullptr) {'), (1082, '      count = 1;'), (1083, '      for (auto it = last->next; it != last; it = it->next) {'), (1084, '        count++;'), (1085, '      }'), (1086, '    }'), (1087, '    return count;'), (1089, '  /***********************************************************************'), (1090, ' *              ELIST2::sort'), (1092, ' *  Sort elements on list'), (1093, "" *  NB If you don't like the const declarations in the comparator, coerce yours:""), (1094, ' *   (int (*)(const void *, const void *)'), (1096, '  void sort(          // sort elements'), (1097, '    int comparator( // comparison routine'), (1098, '      const void *, const void *)) {'), (1099, '    // Allocate an array of pointers, one per list element.'), (1100, '    auto count = length();'), (1101, '    if (count > 0) {'), (1102, '      // ptr array to sort'), (1103, '      std::vector<CLASSNAME *> base;'), (1104, '      base.reserve(count);'), (1105, ''), (1106, '      ITERATOR it(this);'), (1107, ''), (1108, '      // Extract all elements, putting the pointers in the array.'), (1109, '      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (1110, '        base.push_back(it.extract());'), (1111, '      }'), (1113, '      // Sort the pointer array.'), (1114, '      qsort(&base[0], count, sizeof(base[0]), comparator);'), (1116, '      // Rebuild the list from the sorted pointers.'), (1117, '      for (auto current : base) {'), (1118, '        it.add_to_end(current);'), (1119, '      }'), (1120, '    }'), (1123, '  // Assuming list has been sorted already, insert new_link to'), (1124, '  // keep the list sorted according to the same comparison function.'), (1125, '  // Comparison function is the same as used by sort, i.e. uses double'), (1126, '  // indirection. Time is O(1) to add to beginning or end.'), (1127, '  // Time is linear to add pre-sorted items to an empty list.'), (1128, '  void add_sorted(int comparator(const void *, const void *), CLASSNAME *new_link) {'), (1129, '    // Check for adding at the end.'), (1130, '    if (last == nullptr || comparator(&last, &new_link) < 0) {'), (1131, '      if (last == nullptr) {'), (1132, '        new_link->next = new_link;'), (1133, '        new_link->prev = new_link;'), (1134, '      } else {'), (1135, '        new_link->next = last->next;'), (1136, '        new_link->prev = last;'), (1137, '        last->next = new_link;'), (1138, '        new_link->next->prev = new_link;'), (1139, '      }'), (1140, '      last = new_link;'), (1141, '    } else {'), (1142, '      // Need to use an iterator.'), (1143, '      ITERATOR it(this);'), (1144, '      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (1145, '        auto link = it.data();'), (1146, '        if (comparator(&link, &new_link) > 0) {'), (1147, '          break;'), (1148, '        }'), (1149, '      }'), (1150, '      if (it.cycled_list()) {'), (1151, '        it.add_to_end(new_link);'), (1152, '      } else {'), (1153, '        it.add_before_then_move(new_link);'), (1154, '      }'), (1157, '};'), (1159, '// add TESS_API?'), (1160, '// move templated lists to public include dirs?'), (1162, '  struct CLASSNAME##_LIST : ELIST2<CLASSNAME> {                          \\'), (1163, '    using ELIST2<CLASSNAME>::ELIST2;                                            \\'), (1164, '  };                  \\'), (1165, '  struct CLASSNAME##_IT : ELIST2<CLASSNAME>::ITERATOR {            \\'), (1166, '    using base = ELIST2<CLASSNAME>::ITERATOR;          \\'), (1167, '    using base::base;                   \\')], 'deleted': [(30, 'class ELIST2_ITERATOR;'), (31, ''), (50, '/**********************************************************************'), (51, ' *              CLASS - ELIST2_LINK'), (52, ' *'), (53, ' *              Generic link class for doubly linked lists with embedded links'), (54, ' *'), (55, ' *  Note:  No destructor - elements are assumed to be destroyed EITHER after'), (56, ' *  they have been extracted from a list OR by the ELIST2 destructor which'), (57, ' *  walks the list.'), (58, ' **********************************************************************/'), (59, ''), (60, 'class ELIST2_LINK {'), (61, '  friend class ELIST2_ITERATOR;'), (62, '  friend class ELIST2;'), (63, ''), (64, '  ELIST2_LINK *prev;'), (65, '  ELIST2_LINK *next;'), (66, ''), (67, 'public:'), (68, '  ELIST2_LINK() { // constructor'), (69, '    prev = next = nullptr;'), (70, '  }'), (71, ''), (72, '  ELIST2_LINK(const ELIST2_LINK &) = delete;'), (73, ''), (74, '  // The assignment operator is required for WERD.'), (75, '  void operator=(const ELIST2_LINK &) {'), (76, '    prev = next = nullptr;'), (77, '  }'), (78, '};'), (79, ''), (86, 'class TESS_API ELIST2 {'), (87, '  friend class ELIST2_ITERATOR;'), (88, ''), (89, '  ELIST2_LINK *last = nullptr; // End of list'), (90, '  //(Points to head)'), (91, '  ELIST2_LINK *First() { // return first'), (92, '    return last ? last->next : nullptr;'), (93, '  }'), (94, ''), (96, '  // destroy all links'), (97, '  void internal_clear(void (*zapper)(void *));'), (98, ''), (99, '  bool empty() const { // is list empty?'), (100, '    return !last;'), (101, '  }'), (102, ''), (103, '  bool singleton() const {'), (104, '    return last ? (last == last->next) : false;'), (105, '  }'), (106, ''), (107, '  void shallow_copy(       // dangerous!!'), (108, '      ELIST2 *from_list) { // beware destructors!!'), (109, '    last = from_list->last;'), (110, '  }'), (111, ''), (112, '  // ptr to copier functn'), (113, '  void internal_deep_copy(ELIST2_LINK *(*copier)(ELIST2_LINK *),'), (114, '                          const ELIST2 *list); // list being copied'), (115, ''), (116, '  void assign_to_sublist(        // to this list'), (117, '      ELIST2_ITERATOR *start_it, // from list start'), (118, '      ELIST2_ITERATOR *end_it);  // from list end'), (119, ''), (120, '  // # elements in list'), (121, '  int32_t length() const {'), (122, '    int32_t count = 0;'), (123, '    if (last != nullptr) {'), (124, '      count = 1;'), (125, '      for (auto it = last->next; it != last; it = it->next) {'), (126, '        count++;'), (127, '      }'), (129, '    return count;'), (130, '  }'), (131, ''), (132, '  void sort(          // sort elements'), (133, '      int comparator( // comparison routine'), (134, '          const void *, const void *));'), (136, '  // Assuming list has been sorted already, insert new_link to'), (137, '  // keep the list sorted according to the same comparison function.'), (138, '  // Comparison function is the same as used by sort, i.e. uses double'), (139, '  // indirection. Time is O(1) to add to beginning or end.'), (140, '  // Time is linear to add pre-sorted items to an empty list.'), (141, '  void add_sorted(int comparator(const void *, const void *), ELIST2_LINK *new_link);'), (142, '};'), (144, '/***********************************************************************'), (145, ' *              CLASS - ELIST2_ITERATOR'), (146, ' *'), (147, ' *              Generic iterator class for doubly linked lists with embedded'), (148, ' *links'), (149, ' **********************************************************************/'), (151, 'class TESS_API ELIST2_ITERATOR {'), (152, '  friend void ELIST2::assign_to_sublist(ELIST2_ITERATOR *, ELIST2_ITERATOR *);'), (154, '  ELIST2 *list;                 // List being iterated'), (155, '  ELIST2_LINK *prev;            // prev element'), (156, '  ELIST2_LINK *current;         // current element'), (157, '  ELIST2_LINK *next;            // next element'), (158, '  ELIST2_LINK *cycle_pt;        // point we are cycling the list to.'), (159, '  bool ex_current_was_last;     // current extracted was end of list'), (160, '  bool ex_current_was_cycle_pt; // current extracted was cycle point'), (161, '  bool started_cycling;         // Have we moved off the start?'), (163, '  ELIST2_LINK *extract_sublist(   // from this current...'), (164, '      ELIST2_ITERATOR *other_it); // to other current'), (166, 'public:'), (167, '  ELIST2_ITERATOR( // constructor'), (168, '      ELIST2 *list_to_iterate);'), (170, '  void set_to_list( // change list'), (171, '      ELIST2 *list_to_iterate);'), (173, '  void add_after_then_move(   // add after current &'), (174, '      ELIST2_LINK *new_link); // move to new'), (176, '  void add_after_stay_put(    // add after current &'), (177, '      ELIST2_LINK *new_link); // stay at current'), (179, '  void add_before_then_move(  // add before current &'), (180, '      ELIST2_LINK *new_link); // move to new'), (182, '  void add_before_stay_put(   // add before current &'), (183, '      ELIST2_LINK *new_link); // stay at current'), (185, '  void add_list_after(      // add a list &'), (186, '      ELIST2 *list_to_add); // stay at current'), (188, '  void add_list_before(     // add a list &'), (189, '      ELIST2 *list_to_add); // move to it 1st item'), (191, '  ELIST2_LINK *data() { // get current data'), (193, '    if (!current) {'), (194, '      NULL_DATA.error(""ELIST2_ITERATOR::data"", ABORT);'), (195, '    }'), (196, '    if (!list) {'), (197, '      NO_LIST.error(""ELIST2_ITERATOR::data"", ABORT);'), (198, '    }'), (200, '    return current;'), (201, '  }'), (203, '  ELIST2_LINK *data_relative( // get data + or - ...'), (204, '      int8_t offset);         // offset from current'), (205, ''), (206, '  ELIST2_LINK *forward(); // move to next element'), (207, ''), (208, '  ELIST2_LINK *backward(); // move to prev element'), (210, '  ELIST2_LINK *extract(); // remove from list'), (212, '  // go to start of list'), (213, '  ELIST2_LINK *move_to_first();'), (215, '  ELIST2_LINK *move_to_last(); // go to end of list'), (217, '  void mark_cycle_pt(); // remember current'), (219, '  bool empty() const { // is list empty?'), (221, '    if (!list) {'), (222, '      NO_LIST.error(""ELIST2_ITERATOR::empty"", ABORT);'), (223, '    }'), (225, '    return list->empty();'), (226, '  }'), (228, '  bool current_extracted() const { // current extracted?'), (229, '    return !current;'), (230, '  }'), (232, '  bool at_first() const; // Current is first?'), (234, '  bool at_last() const; // Current is last?'), (236, '  bool cycled_list() const; // Completed a cycle?'), (238, '  void add_to_end(            // add at end &'), (239, ""      ELIST2_LINK *new_link); // don't move""), (241, '  void exchange(                  // positions of 2 links'), (242, '      ELIST2_ITERATOR *other_it); // other iterator'), (244, '  //# elements in list'), (245, '  int32_t length() const {'), (246, '    return list->length();'), (247, '  }'), (249, '  void sort(          // sort elements'), (250, '      int comparator( // comparison routine'), (251, '          const void *, const void *));'), (253, 'private:'), (254, ""  // Don't use the following constructor.""), (255, '  ELIST2_ITERATOR() = delete;'), (256, '};'), (258, '/***********************************************************************'), (259, ' *              ELIST2_ITERATOR::set_to_list'), (260, ' *'), (261, ' *  (Re-)initialise the iterator to point to the start of the list_to_iterate'), (262, ' *  over.'), (263, ' **********************************************************************/'), (265, 'inline void ELIST2_ITERATOR::set_to_list( // change list'), (266, '    ELIST2 *list_to_iterate) {'), (268, '  if (!list_to_iterate) {'), (269, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");'), (270, '  }'), (273, '  list = list_to_iterate;'), (274, '  prev = list->last;'), (275, '  current = list->First();'), (276, '  next = current ? current->next : nullptr;'), (277, '  cycle_pt = nullptr; // await explicit set'), (278, '  started_cycling = false;'), (279, '  ex_current_was_last = false;'), (280, '  ex_current_was_cycle_pt = false;'), (281, '}'), (282, ''), (283, '/***********************************************************************'), (284, ' *              ELIST2_ITERATOR::ELIST2_ITERATOR'), (285, ' *'), (286, ' *  CONSTRUCTOR - set iterator to specified list;'), (287, ' **********************************************************************/'), (289, 'inline ELIST2_ITERATOR::ELIST2_ITERATOR(ELIST2 *list_to_iterate) {'), (290, '  set_to_list(list_to_iterate);'), (291, '}'), (293, '/***********************************************************************'), (294, ' *              ELIST2_ITERATOR::add_after_then_move'), (295, ' *'), (296, ' *  Add a new element to the list after the current element and move the'), (297, ' *  iterator to the new element.'), (298, ' **********************************************************************/'), (300, 'inline void ELIST2_ITERATOR::add_after_then_move( // element to add'), (301, '    ELIST2_LINK *new_element) {'), (303, '  if (!list) {'), (304, '    NO_LIST.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);'), (305, '  }'), (306, '  if (!new_element) {'), (307, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT, ""new_element is nullptr"");'), (308, '  }'), (309, '  if (new_element->next) {'), (310, '    STILL_LINKED.error(""ELIST2_ITERATOR::add_after_then_move"", ABORT);'), (311, '  }'), (314, '  if (list->empty()) {'), (315, '    new_element->next = new_element;'), (316, '    new_element->prev = new_element;'), (317, '    list->last = new_element;'), (318, '    prev = next = new_element;'), (319, '  } else {'), (320, '    new_element->next = next;'), (321, '    next->prev = new_element;'), (322, ''), (323, '    if (current) { // not extracted'), (324, '      new_element->prev = current;'), (325, '      current->next = new_element;'), (326, '      prev = current;'), (327, '      if (current == list->last) {'), (328, '        list->last = new_element;'), (329, '      }'), (330, '    } else { // current extracted'), (331, '      new_element->prev = prev;'), (332, '      prev->next = new_element;'), (333, '      if (ex_current_was_last) {'), (334, '        list->last = new_element;'), (336, '      if (ex_current_was_cycle_pt) {'), (337, '        cycle_pt = new_element;'), (339, '    }'), (340, '  }'), (341, '  current = new_element;'), (342, '}'), (343, ''), (344, '/***********************************************************************'), (345, ' *              ELIST2_ITERATOR::add_after_stay_put'), (346, ' *'), (347, ' *  Add a new element to the list after the current element but do not move'), (348, ' *  the iterator to the new element.'), (349, ' **********************************************************************/'), (351, 'inline void ELIST2_ITERATOR::add_after_stay_put( // element to add'), (352, '    ELIST2_LINK *new_element) {'), (354, '  if (!list) {'), (355, '    NO_LIST.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);'), (356, '  }'), (357, '  if (!new_element) {'), (358, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT, ""new_element is nullptr"");'), (359, '  }'), (360, '  if (new_element->next) {'), (361, '    STILL_LINKED.error(""ELIST2_ITERATOR::add_after_stay_put"", ABORT);'), (362, '  }'), (365, '  if (list->empty()) {'), (366, '    new_element->next = new_element;'), (367, '    new_element->prev = new_element;'), (368, '    list->last = new_element;'), (369, '    prev = next = new_element;'), (370, '    ex_current_was_last = false;'), (371, '    current = nullptr;'), (372, '  } else {'), (373, '    new_element->next = next;'), (374, '    next->prev = new_element;'), (375, ''), (376, '    if (current) { // not extracted'), (377, '      new_element->prev = current;'), (378, '      current->next = new_element;'), (379, '      if (prev == current) {'), (380, '        prev = new_element;'), (382, '      if (current == list->last) {'), (383, '        list->last = new_element;'), (385, '    } else { // current extracted'), (386, '      new_element->prev = prev;'), (387, '      prev->next = new_element;'), (388, '      if (ex_current_was_last) {'), (389, '        list->last = new_element;'), (390, '        ex_current_was_last = false;'), (393, '    next = new_element;'), (394, '  }'), (395, '}'), (396, ''), (397, '/***********************************************************************'), (398, ' *              ELIST2_ITERATOR::add_before_then_move'), (399, ' *'), (400, ' *  Add a new element to the list before the current element and move the'), (401, ' *  iterator to the new element.'), (402, ' **********************************************************************/'), (404, 'inline void ELIST2_ITERATOR::add_before_then_move( // element to add'), (405, '    ELIST2_LINK *new_element) {'), (407, '  if (!list) {'), (408, '    NO_LIST.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);'), (409, '  }'), (410, '  if (!new_element) {'), (411, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT, ""new_element is nullptr"");'), (412, '  }'), (413, '  if (new_element->next) {'), (414, '    STILL_LINKED.error(""ELIST2_ITERATOR::add_before_then_move"", ABORT);'), (415, '  }'), (418, '  if (list->empty()) {'), (419, '    new_element->next = new_element;'), (420, '    new_element->prev = new_element;'), (421, '    list->last = new_element;'), (422, '    prev = next = new_element;'), (423, '  } else {'), (424, '    prev->next = new_element;'), (425, '    new_element->prev = prev;'), (426, ''), (427, '    if (current) { // not extracted'), (428, '      new_element->next = current;'), (429, '      current->prev = new_element;'), (430, '      next = current;'), (431, '    } else { // current extracted'), (432, '      new_element->next = next;'), (433, '      next->prev = new_element;'), (434, '      if (ex_current_was_last) {'), (435, '        list->last = new_element;'), (436, '      }'), (437, '      if (ex_current_was_cycle_pt) {'), (438, '        cycle_pt = new_element;'), (440, '    }'), (441, '  }'), (442, '  current = new_element;'), (443, '}'), (444, ''), (445, '/***********************************************************************'), (446, ' *              ELIST2_ITERATOR::add_before_stay_put'), (447, ' *'), (448, "" *  Add a new element to the list before the current element but don't move the""), (449, ' *  iterator to the new element.'), (450, ' **********************************************************************/'), (452, 'inline void ELIST2_ITERATOR::add_before_stay_put( // element to add'), (453, '    ELIST2_LINK *new_element) {'), (455, '  if (!list) {'), (456, '    NO_LIST.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);'), (457, '  }'), (458, '  if (!new_element) {'), (459, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT, ""new_element is nullptr"");'), (460, '  }'), (461, '  if (new_element->next) {'), (462, '    STILL_LINKED.error(""ELIST2_ITERATOR::add_before_stay_put"", ABORT);'), (463, '  }'), (466, '  if (list->empty()) {'), (467, '    new_element->next = new_element;'), (468, '    new_element->prev = new_element;'), (469, '    list->last = new_element;'), (470, '    prev = next = new_element;'), (471, '    ex_current_was_last = true;'), (472, '    current = nullptr;'), (473, '  } else {'), (474, '    prev->next = new_element;'), (475, '    new_element->prev = prev;'), (476, ''), (477, '    if (current) { // not extracted'), (478, '      new_element->next = current;'), (479, '      current->prev = new_element;'), (480, '      if (next == current) {'), (481, '        next = new_element;'), (483, '    } else { // current extracted'), (484, '      new_element->next = next;'), (485, '      next->prev = new_element;'), (486, '      if (ex_current_was_last) {'), (487, '        list->last = new_element;'), (489, '    }'), (490, '    prev = new_element;'), (491, '  }'), (492, '}'), (494, '/***********************************************************************'), (495, ' *              ELIST2_ITERATOR::add_list_after'), (496, ' *'), (497, "" *  Insert another list to this list after the current element but don't move""), (498, ' *the'), (499, ' *  iterator.'), (500, ' **********************************************************************/'), (502, 'inline void ELIST2_ITERATOR::add_list_after(ELIST2 *list_to_add) {'), (504, '  if (!list) {'), (505, '    NO_LIST.error(""ELIST2_ITERATOR::add_list_after"", ABORT);'), (506, '  }'), (507, '  if (!list_to_add) {'), (508, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_list_after"", ABORT, ""list_to_add is nullptr"");'), (509, '  }'), (512, '  if (!list_to_add->empty()) {'), (513, '    if (list->empty()) {'), (514, '      list->last = list_to_add->last;'), (515, '      prev = list->last;'), (516, '      next = list->First();'), (517, '      ex_current_was_last = true;'), (518, '      current = nullptr;'), (519, '    } else {'), (520, '      if (current) { // not extracted'), (521, '        current->next = list_to_add->First();'), (522, '        current->next->prev = current;'), (523, '        if (current == list->last) {'), (524, '          list->last = list_to_add->last;'), (525, '        }'), (526, '        list_to_add->last->next = next;'), (527, '        next->prev = list_to_add->last;'), (528, '        next = current->next;'), (529, '      } else { // current extracted'), (530, '        prev->next = list_to_add->First();'), (531, '        prev->next->prev = prev;'), (532, '        if (ex_current_was_last) {'), (533, '          list->last = list_to_add->last;'), (534, '          ex_current_was_last = false;'), (535, '        }'), (536, '        list_to_add->last->next = next;'), (537, '        next->prev = list_to_add->last;'), (538, '        next = prev->next;'), (540, '    }'), (541, '    list_to_add->last = nullptr;'), (542, '  }'), (543, '}'), (545, '/***********************************************************************'), (546, ' *              ELIST2_ITERATOR::add_list_before'), (547, ' *'), (548, ' *  Insert another list to this list before the current element. Move the'), (549, ' *  iterator to the start of the inserted elements'), (550, ' *  iterator.'), (551, ' **********************************************************************/'), (553, 'inline void ELIST2_ITERATOR::add_list_before(ELIST2 *list_to_add) {'), (554, '#ifndef NDEBUG'), (555, '  if (!list) {'), (556, '    NO_LIST.error(""ELIST2_ITERATOR::add_list_before"", ABORT);'), (557, '  }'), (558, '  if (!list_to_add) {'), (559, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_list_before"", ABORT, ""list_to_add is nullptr"");'), (560, '  }'), (561, '#endif'), (563, '  if (!list_to_add->empty()) {'), (564, '    if (list->empty()) {'), (565, '      list->last = list_to_add->last;'), (566, '      prev = list->last;'), (567, '      current = list->First();'), (568, '      next = current->next;'), (569, '      ex_current_was_last = false;'), (570, '    } else {'), (571, '      prev->next = list_to_add->First();'), (572, '      prev->next->prev = prev;'), (573, ''), (574, '      if (current) { // not extracted'), (575, '        list_to_add->last->next = current;'), (576, '        current->prev = list_to_add->last;'), (577, '      } else { // current extracted'), (578, '        list_to_add->last->next = next;'), (579, '        next->prev = list_to_add->last;'), (580, '        if (ex_current_was_last) {'), (581, '          list->last = list_to_add->last;'), (582, '        }'), (583, '        if (ex_current_was_cycle_pt) {'), (584, '          cycle_pt = prev->next;'), (587, '      current = prev->next;'), (588, '      next = current->next;'), (589, '    }'), (590, '    list_to_add->last = nullptr;'), (591, '  }'), (592, '}'), (594, '/***********************************************************************'), (595, ' *              ELIST2_ITERATOR::extract'), (596, ' *'), (597, ' *  Do extraction by removing current from the list, returning it to the'), (598, ' *  caller, but NOT updating the iterator.  (So that any calling loop can do'), (599, "" *  this.)   The iterator's current points to nullptr.  If the extracted element""), (600, ' *  is to be deleted, this is the callers responsibility.'), (601, ' **********************************************************************/'), (603, 'inline ELIST2_LINK *ELIST2_ITERATOR::extract() {'), (604, '  ELIST2_LINK *extracted_link;'), (606, '#ifndef NDEBUG'), (607, '  if (!list) {'), (608, '    NO_LIST.error(""ELIST2_ITERATOR::extract"", ABORT);'), (609, '  }'), (610, '  if (!current) { // list empty or'), (611, '                  // element extracted'), (612, '    NULL_CURRENT.error(""ELIST2_ITERATOR::extract"", ABORT);'), (613, '  }'), (614, '#endif'), (616, '  if (list->singleton()) {'), (617, '    // Special case where we do need to change the iterator.'), (618, '    prev = next = list->last = nullptr;'), (619, '  } else {'), (620, '    prev->next = next; // remove from list'), (621, '    next->prev = prev;'), (623, '    if (current == list->last) {'), (624, '      list->last = prev;'), (625, '      ex_current_was_last = true;'), (626, '    } else {'), (627, '      ex_current_was_last = false;'), (628, '    }'), (629, '  }'), (630, '  // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.'), (631, '  ex_current_was_cycle_pt = (current == cycle_pt);'), (632, '  extracted_link = current;'), (633, '  extracted_link->next = nullptr; // for safety'), (634, '  extracted_link->prev = nullptr; // for safety'), (635, '  current = nullptr;'), (636, '  return extracted_link;'), (637, '}'), (638, ''), (639, '/***********************************************************************'), (640, ' *              ELIST2_ITERATOR::move_to_first()'), (641, ' *'), (642, ' *  Move current so that it is set to the start of the list.'), (643, ' *  Return data just in case anyone wants it.'), (644, ' **********************************************************************/'), (646, 'inline ELIST2_LINK *ELIST2_ITERATOR::move_to_first() {'), (648, '  if (!list) {'), (649, '    NO_LIST.error(""ELIST2_ITERATOR::move_to_first"", ABORT);'), (650, '  }'), (653, '  current = list->First();'), (654, '  prev = list->last;'), (655, '  next = current ? current->next : nullptr;'), (656, '  return current;'), (657, '}'), (658, ''), (659, '/***********************************************************************'), (660, ' *              ELIST2_ITERATOR::move_to_last()'), (661, ' *'), (662, ' *  Move current so that it is set to the end of the list.'), (663, ' *  Return data just in case anyone wants it.'), (664, ' **********************************************************************/'), (666, 'inline ELIST2_LINK *ELIST2_ITERATOR::move_to_last() {'), (667, '#ifndef NDEBUG'), (668, '  if (!list) {'), (669, '    NO_LIST.error(""ELIST2_ITERATOR::move_to_last"", ABORT);'), (670, '  }'), (671, '#endif'), (673, '  current = list->last;'), (674, '  prev = current ? current->prev : nullptr;'), (675, '  next = current ? current->next : nullptr;'), (676, '  return current;'), (677, '}'), (679, '/***********************************************************************'), (680, ' *              ELIST2_ITERATOR::mark_cycle_pt()'), (681, ' *'), (682, "" *  Remember the current location so that we can tell whether we've returned""), (683, ' *  to this point later.'), (684, ' *'), (685, ' *  If the current point is deleted either now, or in the future, the cycle'), (686, ' *  point will be set to the next item which is set to current.  This could be'), (687, ' *  by a forward, add_after_then_move or add_after_then_move.'), (688, ' **********************************************************************/'), (690, 'inline void ELIST2_ITERATOR::mark_cycle_pt() {'), (691, '#ifndef NDEBUG'), (692, '  if (!list) {'), (693, '    NO_LIST.error(""ELIST2_ITERATOR::mark_cycle_pt"", ABORT);'), (695, '#endif'), (697, '  if (current) {'), (698, '    cycle_pt = current;'), (699, '  } else {'), (700, '    ex_current_was_cycle_pt = true;'), (702, '  started_cycling = false;'), (703, '}'), (705, '/***********************************************************************'), (706, ' *              ELIST2_ITERATOR::at_first()'), (707, ' *'), (708, ' *  Are we at the start of the list?'), (709, ' *'), (710, ' **********************************************************************/'), (712, 'inline bool ELIST2_ITERATOR::at_first() const {'), (713, '#ifndef NDEBUG'), (714, '  if (!list) {'), (715, '    NO_LIST.error(""ELIST2_ITERATOR::at_first"", ABORT);'), (717, '#endif'), (719, ""  // we're at a deleted""), (720, '  return ((list->empty()) || (current == list->First()) ||'), (721, '          ((current == nullptr) && (prev == list->last) && // NON-last pt between'), (722, '           !ex_current_was_last));                         // first and last'), (723, '}'), (725, '/***********************************************************************'), (726, ' *              ELIST2_ITERATOR::at_last()'), (727, ' *'), (728, ' *  Are we at the end of the list?'), (729, ' *'), (730, ' **********************************************************************/'), (732, 'inline bool ELIST2_ITERATOR::at_last() const {'), (733, '#ifndef NDEBUG'), (734, '  if (!list) {'), (735, '    NO_LIST.error(""ELIST2_ITERATOR::at_last"", ABORT);'), (737, '#endif'), (739, ""  // we're at a deleted""), (740, '  return ((list->empty()) || (current == list->last) ||'), (741, '          ((current == nullptr) && (prev == list->last) && // last point between'), (742, '           ex_current_was_last));                          // first and last'), (743, '}'), (745, '/***********************************************************************'), (746, ' *              ELIST2_ITERATOR::cycled_list()'), (747, ' *'), (748, ' *  Have we returned to the cycle_pt since it was set?'), (752, 'inline bool ELIST2_ITERATOR::cycled_list() const {'), (753, '#ifndef NDEBUG'), (754, '  if (!list) {'), (755, '    NO_LIST.error(""ELIST2_ITERATOR::cycled_list"", ABORT);'), (757, '#endif'), (758, ''), (759, '  return ((list->empty()) || ((current == cycle_pt) && started_cycling));'), (760, '}'), (761, ''), (762, '/***********************************************************************'), (763, ' *              ELIST2_ITERATOR::sort()'), (764, ' *'), (765, ' *  Sort the elements of the list, then reposition at the start.'), (769, 'inline void ELIST2_ITERATOR::sort( // sort elements'), (770, '    int comparator(                // comparison routine'), (771, '        const void *, const void *)) {'), (772, '#ifndef NDEBUG'), (773, '  if (!list) {'), (774, '    NO_LIST.error(""ELIST2_ITERATOR::sort"", ABORT);'), (775, '  }'), (776, '#endif'), (777, ''), (778, '  list->sort(comparator);'), (779, '  move_to_first();'), (780, '}'), (781, ''), (782, '/***********************************************************************'), (783, ' *              ELIST2_ITERATOR::add_to_end'), (784, ' *'), (785, ' *  Add a new element to the end of the list without moving the iterator.'), (786, ' *  This is provided because a single linked list cannot move to the last as'), (787, "" *  the iterator couldn't set its prev pointer.  Adding to the end is""), (788, ' *  essential for implementing'), (789, '              queues.'), (790, '**********************************************************************/'), (792, 'inline void ELIST2_ITERATOR::add_to_end( // element to add'), (793, '    ELIST2_LINK *new_element) {'), (794, '#ifndef NDEBUG'), (795, '  if (!list) {'), (796, '    NO_LIST.error(""ELIST2_ITERATOR::add_to_end"", ABORT);'), (797, '  }'), (798, '  if (!new_element) {'), (799, '    BAD_PARAMETER.error(""ELIST2_ITERATOR::add_to_end"", ABORT, ""new_element is nullptr"");'), (800, '  }'), (801, '  if (new_element->next) {'), (802, '    STILL_LINKED.error(""ELIST2_ITERATOR::add_to_end"", ABORT);'), (804, '#endif'), (806, '  if (this->at_last()) {'), (807, '    this->add_after_stay_put(new_element);'), (808, '  } else {'), (809, '    if (this->at_first()) {'), (810, '      this->add_before_stay_put(new_element);'), (811, '      list->last = new_element;'), (812, '    } else { // Iteratr is elsewhere'), (813, '      new_element->next = list->last->next;'), (814, '      new_element->prev = list->last;'), (815, '      list->last->next->prev = new_element;'), (816, '      list->last->next = new_element;'), (817, '      list->last = new_element;'), (820, '}'), (823, '  class CLASSNAME##_LIST : public X_LIST<ELIST2, ELIST2_ITERATOR, CLASSNAME> { \\'), (824, '    using X_LIST<ELIST2, ELIST2_ITERATOR, CLASSNAME>::X_LIST;                  \\'), (825, '  };                                                                           \\'), (826, '  struct CLASSNAME##_IT : X_ITER<ELIST2_ITERATOR, CLASSNAME> {                 \\'), (827, '    using X_ITER<ELIST2_ITERATOR, CLASSNAME>::X_ITER;                          \\'), (828, '    CLASSNAME *backward() {                                                    \\'), (829, '      return reinterpret_cast<CLASSNAME *>(ELIST2_ITERATOR::backward());       \\'), (830, '    }                                                                          \\')]}",yes
src\textord\colpartition.h,src\textord\colpartition.h,63be2168143e82df24f44ad8cee9447771fa6771,4991295a394ffa316c09da9fa745796a45ae3dbb,Convert ELIST2 into template.,"@@ -64,7 +64,7 @@ CLISTIZEH(ColPartition)
  * to a given y-coordinate range, eventually, a ColPartitionSet of ColPartitions
  * emerges, which represents the columns over a wide y-coordinate range.
  */
-class TESS_API ColPartition : public ELIST2_LINK {
+class TESS_API ColPartition : public ELIST2<ColPartition>::LINK {
 public:
   // This empty constructor is here only so that the class can be ELISTIZED.
   // TODO(rays) change deep_copy in elst.h line 955 to take a callback copier
","{'added': [(67, 'class TESS_API ColPartition : public ELIST2<ColPartition>::LINK {')], 'deleted': [(67, 'class TESS_API ColPartition : public ELIST2_LINK {')]}",yes
src\textord\tabvector.h,src\textord\tabvector.h,63be2168143e82df24f44ad8cee9447771fa6771,4991295a394ffa316c09da9fa745796a45ae3dbb,Convert ELIST2 into template.,"@@ -102,7 +102,7 @@ private:
 
 // Class to hold information about a single vector
 // that represents a tab stop or a rule line.
-class TabVector : public ELIST2_LINK {
+class TabVector : public ELIST2<TabVector>::LINK {
 public:
   // TODO(rays) fix this in elst.h line 1076, where it should use the
   // copy constructor instead of operator=.
","{'added': [(105, 'class TabVector : public ELIST2<TabVector>::LINK {')], 'deleted': [(105, 'class TabVector : public ELIST2_LINK {')]}",yes
unittest\list_test.cc,unittest\list_test.cc,63be2168143e82df24f44ad8cee9447771fa6771,4991295a394ffa316c09da9fa745796a45ae3dbb,Convert ELIST2 into template.,"@@ -37,7 +37,7 @@ public:
   unsigned value;
 };
 
-class Elst2 : public ELIST2_LINK {
+class Elst2 : public ELIST2<Elst2>::LINK {
 public:
   Elst2(unsigned n) : value(n) {}
   unsigned value;
@@ -113,7 +113,7 @@ TEST_F(ListTest, TestELIST2) {
   Elst2_LIST list;
   EXPECT_TRUE(list.empty());
   EXPECT_EQ(list.length(), 0);
-  auto it = ELIST2_ITERATOR(&list);
+  auto it = ELIST2<Elst2>::ITERATOR(&list);
   for (unsigned i = 0; i < ListSize; i++) {
     auto *lst = new Elst2(i);
     it.add_to_end(lst);
","{'added': [(40, 'class Elst2 : public ELIST2<Elst2>::LINK {'), (116, '  auto it = ELIST2<Elst2>::ITERATOR(&list);')], 'deleted': [(40, 'class Elst2 : public ELIST2_LINK {'), (116, '  auto it = ELIST2_ITERATOR(&list);')]}",yes
src\ccmain\paramsd.h,src\ccmain\paramsd.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -44,7 +44,7 @@ enum ParamType { VT_INTEGER, VT_BOOLEAN, VT_STRING, VT_DOUBLE };
 // comparisond or getting its value. It is used in the context of the
 // ParamsEditor as a bridge from the internal tesseract parameters to the
 // ones displayed by the ScrollView server.
-class ParamContent : public ELIST_LINK {
+class ParamContent : public ELIST<ParamContent>::LINK {
 public:
   // Compare two VC objects by their name.
   static int Compare(const void *v1, const void *v2);
","{'added': [(47, 'class ParamContent : public ELIST<ParamContent>::LINK {')], 'deleted': [(47, 'class ParamContent : public ELIST_LINK {')]}",yes
src\ccstruct\blobbox.h,src\ccstruct\blobbox.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -138,7 +138,7 @@ class ColPartition;
 
 class BLOBNBOX;
 ELISTIZEH(BLOBNBOX)
-class BLOBNBOX : public ELIST_LINK {
+class BLOBNBOX : public ELIST<BLOBNBOX>::LINK {
 public:
   BLOBNBOX() {
     ReInit();
@@ -695,7 +695,7 @@ private:
 };
 
 ELIST2IZEH(TO_ROW)
-class TESS_API TO_BLOCK : public ELIST_LINK {
+class TESS_API TO_BLOCK : public ELIST<TO_BLOCK>::LINK {
 public:
   TO_BLOCK() : pitch_decision(PITCH_DUNNO) {
     clear();
","{'added': [(141, 'class BLOBNBOX : public ELIST<BLOBNBOX>::LINK {'), (698, 'class TESS_API TO_BLOCK : public ELIST<TO_BLOCK>::LINK {')], 'deleted': [(141, 'class BLOBNBOX : public ELIST_LINK {'), (698, 'class TESS_API TO_BLOCK : public ELIST_LINK {')]}",yes
src\ccstruct\coutln.h,src\ccstruct\coutln.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -72,7 +72,7 @@ struct EdgeOffset {
 class C_OUTLINE; // forward declaration
 
 ELISTIZEH(C_OUTLINE)
-class C_OUTLINE : public ELIST_LINK {
+class C_OUTLINE : public ELIST<C_OUTLINE>::LINK {
 public:
   C_OUTLINE() {
     stepcount = 0;
","{'added': [(75, 'class C_OUTLINE : public ELIST<C_OUTLINE>::LINK {')], 'deleted': [(75, 'class C_OUTLINE : public ELIST_LINK {')]}",yes
src\ccstruct\ocrblock.cpp,src\ccstruct\ocrblock.cpp,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -222,7 +222,7 @@ void BLOCK::print( // print list of sides
 BLOCK &BLOCK::operator=( // assignment
     const BLOCK &source  // from this
 ) {
-  this->ELIST_LINK::operator=(source);
+  this->ELIST<BLOCK>::LINK::operator=(source);
   pdblk = source.pdblk;
   proportional = source.proportional;
   kerning = source.kerning;
","{'added': [(225, '  this->ELIST<BLOCK>::LINK::operator=(source);')], 'deleted': [(225, '  this->ELIST_LINK::operator=(source);')]}",yes
src\ccstruct\ocrblock.h,src\ccstruct\ocrblock.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -29,7 +29,7 @@ class BLOCK; // forward decl
 
 ELISTIZEH(BLOCK)
 
-class TESS_API BLOCK : public ELIST_LINK
+class TESS_API BLOCK : public ELIST<BLOCK>::LINK
 // page block
 {
   friend class BLOCK_RECT_IT; // block iterator
","{'added': [(32, 'class TESS_API BLOCK : public ELIST<BLOCK>::LINK')], 'deleted': [(32, 'class TESS_API BLOCK : public ELIST_LINK')]}",yes
src\ccstruct\ocrpara.h,src\ccstruct\ocrpara.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -27,7 +27,7 @@ namespace tesseract {
 
 class ParagraphModel;
 
-struct PARA : public ELIST_LINK {
+struct PARA : public ELIST<PARA>::LINK {
 public:
   PARA()
       : model(nullptr)
","{'added': [(30, 'struct PARA : public ELIST<PARA>::LINK {')], 'deleted': [(30, 'struct PARA : public ELIST_LINK {')]}",yes
src\ccstruct\ocrrow.cpp,src\ccstruct\ocrrow.cpp,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -223,7 +223,7 @@ void ROW::plot(        // draw it
  **********************************************************************/
 
 ROW &ROW::operator=(const ROW &source) {
-  this->ELIST_LINK::operator=(source);
+  this->ELIST<ROW>::LINK::operator=(source);
   kerning = source.kerning;
   spacing = source.spacing;
   xheight = source.xheight;
","{'added': [(226, '  this->ELIST<ROW>::LINK::operator=(source);')], 'deleted': [(226, '  this->ELIST_LINK::operator=(source);')]}",yes
src\ccstruct\ocrrow.h,src\ccstruct\ocrrow.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -36,7 +36,7 @@ class TO_ROW;
 
 struct PARA;
 
-class ROW : public ELIST_LINK {
+class ROW : public ELIST<ROW>::LINK {
   friend void tweak_row_baseline(ROW *, double, double);
 
 public:
","{'added': [(39, 'class ROW : public ELIST<ROW>::LINK {')], 'deleted': [(39, 'class ROW : public ELIST_LINK {')]}",yes
src\ccstruct\pageres.cpp,src\ccstruct\pageres.cpp,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -184,7 +184,7 @@ ROW_RES::ROW_RES(bool merge_similar_words, ROW *the_row) {
 }
 
 WERD_RES &WERD_RES::operator=(const WERD_RES &source) {
-  this->ELIST_LINK::operator=(source);
+  this->ELIST<WERD_RES>::LINK::operator=(source);
   Clear();
   if (source.combination) {
     word = new WERD;
","{'added': [(187, '  this->ELIST<WERD_RES>::LINK::operator=(source);')], 'deleted': [(187, '  this->ELIST_LINK::operator=(source);')]}",yes
src\ccstruct\pageres.h,src\ccstruct\pageres.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -115,7 +115,7 @@ public:
  * BLOCK_RES - Block results
  *************************************************************************/
 
-class BLOCK_RES : public ELIST_LINK {
+class BLOCK_RES : public ELIST<BLOCK_RES>::LINK {
 public:
   BLOCK *block;       // real block
   int32_t char_count; // chars in block
@@ -139,7 +139,7 @@ public:
  * ROW_RES - Row results
  *************************************************************************/
 
-class ROW_RES : public ELIST_LINK {
+class ROW_RES : public ELIST<ROW_RES>::LINK {
 public:
   ROW *row;                     // real row
   int32_t char_count;           // chars in block
@@ -161,7 +161,7 @@ enum CRUNCH_MODE { CR_NONE, CR_KEEP_SPACE, CR_LOOSE_SPACE, CR_DELETE };
 
 // WERD_RES is a collection of publicly accessible members that gathers
 // information about a word result.
-class TESS_API WERD_RES : public ELIST_LINK {
+class TESS_API WERD_RES : public ELIST<WERD_RES>::LINK {
 public:
   // Which word is which?
   // There are 3 coordinate spaces in use here: a possibly rotated pixel space,
@@ -345,7 +345,7 @@ public:
   }
   // Deep copies everything except the ratings MATRIX.
   // To get that use deep_copy below.
-  WERD_RES(const WERD_RES &source) : ELIST_LINK(source) {
+  WERD_RES(const WERD_RES &source) : ELIST<WERD_RES>::LINK(source) {
     // combination is used in function Clear which is called from operator=.
     combination = false;
     *this = source; // see operator=
","{'added': [(118, 'class BLOCK_RES : public ELIST<BLOCK_RES>::LINK {'), (142, 'class ROW_RES : public ELIST<ROW_RES>::LINK {'), (164, 'class TESS_API WERD_RES : public ELIST<WERD_RES>::LINK {'), (348, '  WERD_RES(const WERD_RES &source) : ELIST<WERD_RES>::LINK(source) {')], 'deleted': [(118, 'class BLOCK_RES : public ELIST_LINK {'), (142, 'class ROW_RES : public ELIST_LINK {'), (164, 'class TESS_API WERD_RES : public ELIST_LINK {'), (348, '  WERD_RES(const WERD_RES &source) : ELIST_LINK(source) {')]}",yes
src\ccstruct\points.h,src\ccstruct\points.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -160,7 +160,7 @@ protected:
   TDimension ycoord; ///< y value
 };
 
-class ICOORDELT : public ELIST_LINK,
+class ICOORDELT : public ELIST<ICOORDELT>::LINK,
                   public ICOORD
 // embedded coord list
 {
","{'added': [(163, 'class ICOORDELT : public ELIST<ICOORDELT>::LINK,')], 'deleted': [(163, 'class ICOORDELT : public ELIST_LINK,')]}",yes
src\ccstruct\ratngs.cpp,src\ccstruct\ratngs.cpp,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -110,7 +110,7 @@ BLOB_CHOICE::BLOB_CHOICE(UNICHAR_ID src_unichar_id, // character id
  *
  * Constructor to build a BLOB_CHOICE from another BLOB_CHOICE.
  */
-BLOB_CHOICE::BLOB_CHOICE(const BLOB_CHOICE &other) : ELIST_LINK(other) {
+BLOB_CHOICE::BLOB_CHOICE(const BLOB_CHOICE &other) : ELIST<BLOB_CHOICE>::LINK(other) {
   unichar_id_ = other.unichar_id();
   rating_ = other.rating();
   certainty_ = other.certainty();
@@ -129,7 +129,7 @@ BLOB_CHOICE::BLOB_CHOICE(const BLOB_CHOICE &other) : ELIST_LINK(other) {
 
 // Copy assignment operator.
 BLOB_CHOICE &BLOB_CHOICE::operator=(const BLOB_CHOICE &other) {
-  ELIST_LINK::operator=(other);
+  ELIST<BLOB_CHOICE>::LINK::operator=(other);
   unichar_id_ = other.unichar_id();
   rating_ = other.rating();
   certainty_ = other.certainty();
","{'added': [(113, 'BLOB_CHOICE::BLOB_CHOICE(const BLOB_CHOICE &other) : ELIST<BLOB_CHOICE>::LINK(other) {'), (132, '  ELIST<BLOB_CHOICE>::LINK::operator=(other);')], 'deleted': [(113, 'BLOB_CHOICE::BLOB_CHOICE(const BLOB_CHOICE &other) : ELIST_LINK(other) {'), (132, '  ELIST_LINK::operator=(other);')]}",yes
src\ccstruct\ratngs.h,src\ccstruct\ratngs.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -53,7 +53,7 @@ enum BlobChoiceClassifier {
   BCC_FAKE,               // From some other process.
 };
 
-class BLOB_CHOICE : public ELIST_LINK {
+class BLOB_CHOICE : public ELIST<BLOB_CHOICE>::LINK {
 public:
   BLOB_CHOICE() {
     unichar_id_ = UNICHAR_SPACE;
@@ -255,7 +255,7 @@ enum ScriptPos { SP_NORMAL, SP_SUBSCRIPT, SP_SUPERSCRIPT, SP_DROPCAP };
 
 const char *ScriptPosToString(ScriptPos script_pos);
 
-class TESS_API WERD_CHOICE : public ELIST_LINK {
+class TESS_API WERD_CHOICE : public ELIST<WERD_CHOICE>::LINK {
 public:
   static const float kBadRating;
   static const char *permuter_name(uint8_t permuter);
@@ -272,7 +272,7 @@ public:
     this->init(src_string, src_lengths, src_rating, src_certainty, src_permuter);
   }
   WERD_CHOICE(const char *src_string, const UNICHARSET &unicharset);
-  WERD_CHOICE(const WERD_CHOICE &word) : ELIST_LINK(word), unicharset_(word.unicharset_) {
+  WERD_CHOICE(const WERD_CHOICE &word) : ELIST<WERD_CHOICE>::LINK(word), unicharset_(word.unicharset_) {
     this->init(word.length());
     this->operator=(word);
   }
","{'added': [(56, 'class BLOB_CHOICE : public ELIST<BLOB_CHOICE>::LINK {'), (258, 'class TESS_API WERD_CHOICE : public ELIST<WERD_CHOICE>::LINK {'), (275, '  WERD_CHOICE(const WERD_CHOICE &word) : ELIST<WERD_CHOICE>::LINK(word), unicharset_(word.unicharset_) {')], 'deleted': [(56, 'class BLOB_CHOICE : public ELIST_LINK {'), (258, 'class TESS_API WERD_CHOICE : public ELIST_LINK {'), (275, '  WERD_CHOICE(const WERD_CHOICE &word) : ELIST_LINK(word), unicharset_(word.unicharset_) {')]}",yes
src\ccstruct\stepblob.h,src\ccstruct\stepblob.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -36,8 +36,7 @@ class C_BLOB;
 class DENORM;
 
 ELISTIZEH(C_BLOB)
-
-class TESS_API C_BLOB : public ELIST_LINK {
+class TESS_API C_BLOB : public ELIST<C_BLOB>::LINK {
 public:
   C_BLOB() = default;
   explicit C_BLOB(C_OUTLINE_LIST *outline_list);
","{'added': [(39, 'class TESS_API C_BLOB : public ELIST<C_BLOB>::LINK {')], 'deleted': [(39, ''), (40, 'class TESS_API C_BLOB : public ELIST_LINK {')]}",yes
src\ccutil\ambigs.h,src\ccutil\ambigs.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -109,7 +109,7 @@ public:
 
 // AMBIG_SPEC_LIST stores a list of dangerous ambigs that
 // start with the same unichar (e.g. r->t rn->m rr1->m).
-class AmbigSpec : public ELIST_LINK {
+class AmbigSpec : public ELIST<AmbigSpec>::LINK {
 public:
   AmbigSpec();
   ~AmbigSpec() = default;
","{'added': [(112, 'class AmbigSpec : public ELIST<AmbigSpec>::LINK {')], 'deleted': [(112, 'class AmbigSpec : public ELIST_LINK {')]}",yes
src\ccutil\clst.h,src\ccutil\clst.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -34,7 +34,7 @@ namespace tesseract {
  **********************************************************************/
 
 template <typename CLASSNAME>
-class TESS_API CLIST {
+class CLIST {
   friend class LINK;
   //friend class ITERATOR;
 
@@ -64,7 +64,7 @@ public:
    *              Generic iterator class for singly linked lists with embedded
    *links
    **********************************************************************/
-  class TESS_API ITERATOR {
+  class ITERATOR {
     CLIST *list;                  // List being iterated
     LINK *prev;             // prev element
     LINK *current;          // current element
","{'added': [(37, 'class CLIST {'), (67, '  class ITERATOR {')], 'deleted': [(37, 'class TESS_API CLIST {'), (67, '  class TESS_API ITERATOR {')]}",yes
src\ccutil\elst.cpp,,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -1,440 +0,0 @@
-/**********************************************************************
- * File:        elst.cpp  (Formerly elist.c)
- * Description: Embedded list handling code which is not in the include file.
- * Author:      Phil Cheatle
- *
- * (C) Copyright 1991, Hewlett-Packard Ltd.
- ** Licensed under the Apache License, Version 2.0 (the ""License"");
- ** you may not use this file except in compliance with the License.
- ** You may obtain a copy of the License at
- ** http://www.apache.org/licenses/LICENSE-2.0
- ** Unless required by applicable law or agreed to in writing, software
- ** distributed under the License is distributed on an ""AS IS"" BASIS,
- ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- ** See the License for the specific language governing permissions and
- ** limitations under the License.
- *
- **********************************************************************/
-
-#include ""elst.h""
-#include <cstdlib>
-
-namespace tesseract {
-
-/***********************************************************************
- *              ELIST::internal_clear
- *
- *  Used by the destructor and the ""clear"" member function of derived list
- *  classes to destroy all the elements on the list.
- *  The calling function passes a ""zapper"" function which can be called to
- *  delete each element of the list, regardless of its derived type.  This
- *  technique permits a generic clear function to destroy elements of
- *  different derived types correctly, without requiring virtual functions and
- *  the consequential memory overhead.
- **********************************************************************/
-
-void ELIST::internal_clear( // destroy all links
-    void (*zapper)(void *)) {
-  // ptr to zapper functn
-  ELIST_LINK *ptr;
-  ELIST_LINK *next;
-
-  if (!empty()) {
-    ptr = last->next;     // set to first
-    last->next = nullptr; // break circle
-    last = nullptr;       // set list empty
-    while (ptr) {
-      next = ptr->next;
-      zapper(ptr);
-      ptr = next;
-    }
-  }
-}
-
-/***********************************************************************
- *              ELIST::assign_to_sublist
- *
- *  The list is set to a sublist of another list.  ""This"" list must be empty
- *  before this function is invoked.  The two iterators passed must refer to
- *  the same list, different from ""this"" one.  The sublist removed is the
- *  inclusive list from start_it's current position to end_it's current
- *  position.  If this range passes over the end of the source list then the
- *  source list has its end set to the previous element of start_it.  The
- *  extracted sublist is unaffected by the end point of the source list, its
- *  end point is always the end_it position.
- **********************************************************************/
-
-void ELIST::assign_to_sublist( // to this list
-    ELIST_ITERATOR *start_it,  // from list start
-    ELIST_ITERATOR *end_it) {  // from list end
-  constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");
-
-  if (!empty()) {
-    LIST_NOT_EMPTY.error(""ELIST.assign_to_sublist"", ABORT);
-  }
-
-  last = start_it->extract_sublist(end_it);
-}
-
-/***********************************************************************
- *              ELIST::sort
- *
- *  Sort elements on list
- *  NB If you don't like the const declarations in the comparator, coerce yours:
- *   ( int (*)(const void *, const void *)
- **********************************************************************/
-
-void ELIST::sort(   // sort elements
-    int comparator( // comparison routine
-        const void *, const void *)) {
-  // Allocate an array of pointers, one per list element.
-  auto count = length();
-
-  if (count > 0) {
-    // ptr array to sort
-    std::vector<ELIST_LINK *> base;
-    base.reserve(count);
-
-    ELIST_ITERATOR it(this);
-
-    // Extract all elements, putting the pointers in the array.
-    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
-      base.push_back(it.extract());
-    }
-
-    // Sort the pointer array.
-    qsort(&base[0], count, sizeof(base[0]), comparator);
-
-    // Rebuild the list from the sorted pointers.
-    for (auto current : base) {
-      it.add_to_end(current);
-    }
-  }
-}
-
-// Assuming list has been sorted already, insert new_link to
-// keep the list sorted according to the same comparison function.
-// Comparison function is the same as used by sort, i.e. uses double
-// indirection. Time is O(1) to add to beginning or end.
-// Time is linear to add pre-sorted items to an empty list.
-// If unique is set to true and comparator() returns 0 (an entry with the
-// same information as the one contained in new_link is already in the
-// list) - new_link is not added to the list and the function returns the
-// pointer to the identical entry that already exists in the list
-// (otherwise the function returns new_link).
-ELIST_LINK *ELIST::add_sorted_and_find(int comparator(const void *, const void *), bool unique,
-                                       ELIST_LINK *new_link) {
-  // Check for adding at the end.
-  if (last == nullptr || comparator(&last, &new_link) < 0) {
-    if (last == nullptr) {
-      new_link->next = new_link;
-    } else {
-      new_link->next = last->next;
-      last->next = new_link;
-    }
-    last = new_link;
-  } else {
-    // Need to use an iterator.
-    ELIST_ITERATOR it(this);
-    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
-      ELIST_LINK *link = it.data();
-      int compare = comparator(&link, &new_link);
-      if (compare > 0) {
-        break;
-      } else if (unique && compare == 0) {
-        return link;
-      }
-    }
-    if (it.cycled_list()) {
-      it.add_to_end(new_link);
-    } else {
-      it.add_before_then_move(new_link);
-    }
-  }
-  return new_link;
-}
-
-/***********************************************************************
- *  MEMBER FUNCTIONS OF CLASS: ELIST_ITERATOR
- *  =========================================
- **********************************************************************/
-
-/***********************************************************************
- *              ELIST_ITERATOR::forward
- *
- *  Move the iterator to the next element of the list.
- *  REMEMBER: ALL LISTS ARE CIRCULAR.
- **********************************************************************/
-
-ELIST_LINK *ELIST_ITERATOR::forward() {
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""ELIST_ITERATOR::forward"", ABORT);
-#endif
-  if (list->empty()) {
-    return nullptr;
-  }
-
-  if (current) { // not removed so
-                 // set previous
-    prev = current;
-    started_cycling = true;
-    // In case next is deleted by another iterator, get next from current.
-    current = current->next;
-  } else {
-    if (ex_current_was_cycle_pt) {
-      cycle_pt = next;
-    }
-    current = next;
-  }
-#ifndef NDEBUG
-  if (!current)
-    NULL_DATA.error(""ELIST_ITERATOR::forward"", ABORT);
-#endif
-  next = current->next;
-
-#ifndef NDEBUG
-  if (!next) {
-    NULL_NEXT.error(""ELIST_ITERATOR::forward"", ABORT,
-                    ""This is: %p  Current is: %p"",
-                    static_cast<void *>(this),
-                    static_cast<void *>(current));
-  }
-#endif
-  return current;
-}
-
-/***********************************************************************
- *              ELIST_ITERATOR::data_relative
- *
- *  Return the data pointer to the element ""offset"" elements from current.
- *  ""offset"" must not be less than -1.
- *  (This function can't be INLINEd because it contains a loop)
- **********************************************************************/
-
-ELIST_LINK *ELIST_ITERATOR::data_relative( // get data + or - ...
-    int8_t offset) {                       // offset from current
-  ELIST_LINK *ptr;
-
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""ELIST_ITERATOR::data_relative"", ABORT);
-  if (list->empty())
-    EMPTY_LIST.error(""ELIST_ITERATOR::data_relative"", ABORT);
-  if (offset < -1)
-    BAD_PARAMETER.error(""ELIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");
-#endif
-
-  if (offset == -1) {
-    ptr = prev;
-  } else {
-    for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {
-      ;
-    }
-  }
-
-#ifndef NDEBUG
-  if (!ptr)
-    NULL_DATA.error(""ELIST_ITERATOR::data_relative"", ABORT);
-#endif
-
-  return ptr;
-}
-
-/***********************************************************************
- *              ELIST_ITERATOR::move_to_last()
- *
- *  Move current so that it is set to the end of the list.
- *  Return data just in case anyone wants it.
- *  (This function can't be INLINEd because it contains a loop)
- **********************************************************************/
-
-ELIST_LINK *ELIST_ITERATOR::move_to_last() {
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""ELIST_ITERATOR::move_to_last"", ABORT);
-#endif
-
-  while (current != list->last) {
-    forward();
-  }
-
-  return current;
-}
-
-/***********************************************************************
- *              ELIST_ITERATOR::exchange()
- *
- *  Given another iterator, whose current element is a different element on
- *  the same list list OR an element of another list, exchange the two current
- *  elements.  On return, each iterator points to the element which was the
- *  other iterators current on entry.
- *  (This function hasn't been in-lined because its a bit big!)
- **********************************************************************/
-
-void ELIST_ITERATOR::exchange(  // positions of 2 links
-    ELIST_ITERATOR *other_it) { // other iterator
-  constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
-
-  ELIST_LINK *old_current;
-
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""ELIST_ITERATOR::exchange"", ABORT);
-  if (!other_it)
-    BAD_PARAMETER.error(""ELIST_ITERATOR::exchange"", ABORT, ""other_it nullptr"");
-  if (!(other_it->list))
-    NO_LIST.error(""ELIST_ITERATOR::exchange"", ABORT, ""other_it"");
-#endif
-
-  /* Do nothing if either list is empty or if both iterators reference the same
-link */
-
-  if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {
-    return;
-  }
-
-  /* Error if either current element is deleted */
-
-  if (!current || !other_it->current) {
-    DONT_EXCHANGE_DELETED.error(""ELIST_ITERATOR.exchange"", ABORT);
-  }
-
-  /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements
-(other before this); non-doubleton adjacent elements (this before other);
-non-adjacent elements. */
-
-  // adjacent links
-  if ((next == other_it->current) || (other_it->next == current)) {
-    // doubleton list
-    if ((next == other_it->current) && (other_it->next == current)) {
-      prev = next = current;
-      other_it->prev = other_it->next = other_it->current;
-    } else { // non-doubleton with
-             // adjacent links
-             // other before this
-      if (other_it->next == current) {
-        other_it->prev->next = current;
-        other_it->current->next = next;
-        current->next = other_it->current;
-        other_it->next = other_it->current;
-        prev = current;
-      } else { // this before other
-        prev->next = other_it->current;
-        current->next = other_it->next;
-        other_it->current->next = current;
-        next = current;
-        other_it->prev = other_it->current;
-      }
-    }
-  } else { // no overlap
-    prev->next = other_it->current;
-    current->next = other_it->next;
-    other_it->prev->next = current;
-    other_it->current->next = next;
-  }
-
-  /* update end of list pointer when necessary (remember that the 2 iterators
-  may iterate over different lists!) */
-
-  if (list->last == current) {
-    list->last = other_it->current;
-  }
-  if (other_it->list->last == other_it->current) {
-    other_it->list->last = current;
-  }
-
-  if (current == cycle_pt) {
-    cycle_pt = other_it->cycle_pt;
-  }
-  if (other_it->current == other_it->cycle_pt) {
-    other_it->cycle_pt = cycle_pt;
-  }
-
-  /* The actual exchange - in all cases*/
-
-  old_current = current;
-  current = other_it->current;
-  other_it->current = old_current;
-}
-
-/***********************************************************************
- *              ELIST_ITERATOR::extract_sublist()
- *
- *  This is a private member, used only by ELIST::assign_to_sublist.
- *  Given another iterator for the same list, extract the links from THIS to
- *  OTHER inclusive, link them into a new circular list, and return a
- *  pointer to the last element.
- *  (Can't inline this function because it contains a loop)
- **********************************************************************/
-
-ELIST_LINK *ELIST_ITERATOR::extract_sublist( // from this current
-    ELIST_ITERATOR *other_it) {              // to other current
-#ifndef NDEBUG
-  constexpr ERRCODE BAD_EXTRACTION_PTS(""Can't extract sublist from points on different lists"");
-  constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
-#endif
-  constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
-
-  ELIST_ITERATOR temp_it = *this;
-  ELIST_LINK *end_of_new_list;
-
-#ifndef NDEBUG
-  if (!other_it)
-    BAD_PARAMETER.error(""ELIST_ITERATOR::extract_sublist"", ABORT, ""other_it nullptr"");
-  if (!list)
-    NO_LIST.error(""ELIST_ITERATOR::extract_sublist"", ABORT);
-  if (list != other_it->list)
-    BAD_EXTRACTION_PTS.error(""ELIST_ITERATOR.extract_sublist"", ABORT);
-  if (list->empty())
-    EMPTY_LIST.error(""ELIST_ITERATOR::extract_sublist"", ABORT);
-
-  if (!current || !other_it->current)
-    DONT_EXTRACT_DELETED.error(""ELIST_ITERATOR.extract_sublist"", ABORT);
-#endif
-
-  ex_current_was_last = other_it->ex_current_was_last = false;
-  ex_current_was_cycle_pt = false;
-  other_it->ex_current_was_cycle_pt = false;
-
-  temp_it.mark_cycle_pt();
-  do {                         // walk sublist
-    if (temp_it.cycled_list()) { // can't find end pt
-      BAD_SUBLIST.error(""ELIST_ITERATOR.extract_sublist"", ABORT);
-    }
-
-    if (temp_it.at_last()) {
-      list->last = prev;
-      ex_current_was_last = other_it->ex_current_was_last = true;
-    }
-
-    if (temp_it.current == cycle_pt) {
-      ex_current_was_cycle_pt = true;
-    }
-
-    if (temp_it.current == other_it->cycle_pt) {
-      other_it->ex_current_was_cycle_pt = true;
-    }
-
-    temp_it.forward();
-  } while (temp_it.prev != other_it->current);
-
-  // circularise sublist
-  other_it->current->next = current;
-  end_of_new_list = other_it->current;
-
-  // sublist = whole list
-  if (prev == other_it->current) {
-    list->last = nullptr;
-    prev = current = next = nullptr;
-    other_it->prev = other_it->current = other_it->next = nullptr;
-  } else {
-    prev->next = other_it->next;
-    current = other_it->current = nullptr;
-    next = other_it->next;
-    other_it->prev = prev;
-  }
-  return end_of_new_list;
-}
-
-} // namespace tesseract
","{'added': [], 'deleted': [(1, '/**********************************************************************'), (2, ' * File:        elst.cpp  (Formerly elist.c)'), (3, ' * Description: Embedded list handling code which is not in the include file.'), (4, ' * Author:      Phil Cheatle'), (5, ' *'), (6, ' * (C) Copyright 1991, Hewlett-Packard Ltd.'), (7, ' ** Licensed under the Apache License, Version 2.0 (the ""License"");'), (8, ' ** you may not use this file except in compliance with the License.'), (9, ' ** You may obtain a copy of the License at'), (10, ' ** http://www.apache.org/licenses/LICENSE-2.0'), (11, ' ** Unless required by applicable law or agreed to in writing, software'), (12, ' ** distributed under the License is distributed on an ""AS IS"" BASIS,'), (13, ' ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (14, ' ** See the License for the specific language governing permissions and'), (15, ' ** limitations under the License.'), (16, ' *'), (17, ' **********************************************************************/'), (18, ''), (19, '#include ""elst.h""'), (20, '#include <cstdlib>'), (21, ''), (22, 'namespace tesseract {'), (23, ''), (24, '/***********************************************************************'), (25, ' *              ELIST::internal_clear'), (26, ' *'), (27, ' *  Used by the destructor and the ""clear"" member function of derived list'), (28, ' *  classes to destroy all the elements on the list.'), (29, ' *  The calling function passes a ""zapper"" function which can be called to'), (30, ' *  delete each element of the list, regardless of its derived type.  This'), (31, ' *  technique permits a generic clear function to destroy elements of'), (32, ' *  different derived types correctly, without requiring virtual functions and'), (33, ' *  the consequential memory overhead.'), (34, ' **********************************************************************/'), (35, ''), (36, 'void ELIST::internal_clear( // destroy all links'), (37, '    void (*zapper)(void *)) {'), (38, '  // ptr to zapper functn'), (39, '  ELIST_LINK *ptr;'), (40, '  ELIST_LINK *next;'), (41, ''), (42, '  if (!empty()) {'), (43, '    ptr = last->next;     // set to first'), (44, '    last->next = nullptr; // break circle'), (45, '    last = nullptr;       // set list empty'), (46, '    while (ptr) {'), (47, '      next = ptr->next;'), (48, '      zapper(ptr);'), (49, '      ptr = next;'), (50, '    }'), (51, '  }'), (52, '}'), (53, ''), (54, '/***********************************************************************'), (55, ' *              ELIST::assign_to_sublist'), (56, ' *'), (57, ' *  The list is set to a sublist of another list.  ""This"" list must be empty'), (58, ' *  before this function is invoked.  The two iterators passed must refer to'), (59, ' *  the same list, different from ""this"" one.  The sublist removed is the'), (60, "" *  inclusive list from start_it's current position to end_it's current""), (61, ' *  position.  If this range passes over the end of the source list then the'), (62, ' *  source list has its end set to the previous element of start_it.  The'), (63, ' *  extracted sublist is unaffected by the end point of the source list, its'), (64, ' *  end point is always the end_it position.'), (65, ' **********************************************************************/'), (66, ''), (67, 'void ELIST::assign_to_sublist( // to this list'), (68, '    ELIST_ITERATOR *start_it,  // from list start'), (69, '    ELIST_ITERATOR *end_it) {  // from list end'), (70, '  constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");'), (71, ''), (72, '  if (!empty()) {'), (73, '    LIST_NOT_EMPTY.error(""ELIST.assign_to_sublist"", ABORT);'), (74, '  }'), (75, ''), (76, '  last = start_it->extract_sublist(end_it);'), (77, '}'), (78, ''), (79, '/***********************************************************************'), (80, ' *              ELIST::sort'), (81, ' *'), (82, ' *  Sort elements on list'), (83, "" *  NB If you don't like the const declarations in the comparator, coerce yours:""), (84, ' *   ( int (*)(const void *, const void *)'), (85, ' **********************************************************************/'), (86, ''), (87, 'void ELIST::sort(   // sort elements'), (88, '    int comparator( // comparison routine'), (89, '        const void *, const void *)) {'), (90, '  // Allocate an array of pointers, one per list element.'), (91, '  auto count = length();'), (92, ''), (93, '  if (count > 0) {'), (94, '    // ptr array to sort'), (95, '    std::vector<ELIST_LINK *> base;'), (96, '    base.reserve(count);'), (97, ''), (98, '    ELIST_ITERATOR it(this);'), (99, ''), (100, '    // Extract all elements, putting the pointers in the array.'), (101, '    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (102, '      base.push_back(it.extract());'), (103, '    }'), (104, ''), (105, '    // Sort the pointer array.'), (106, '    qsort(&base[0], count, sizeof(base[0]), comparator);'), (107, ''), (108, '    // Rebuild the list from the sorted pointers.'), (109, '    for (auto current : base) {'), (110, '      it.add_to_end(current);'), (111, '    }'), (112, '  }'), (113, '}'), (114, ''), (115, '// Assuming list has been sorted already, insert new_link to'), (116, '// keep the list sorted according to the same comparison function.'), (117, '// Comparison function is the same as used by sort, i.e. uses double'), (118, '// indirection. Time is O(1) to add to beginning or end.'), (119, '// Time is linear to add pre-sorted items to an empty list.'), (120, '// If unique is set to true and comparator() returns 0 (an entry with the'), (121, '// same information as the one contained in new_link is already in the'), (122, '// list) - new_link is not added to the list and the function returns the'), (123, '// pointer to the identical entry that already exists in the list'), (124, '// (otherwise the function returns new_link).'), (125, 'ELIST_LINK *ELIST::add_sorted_and_find(int comparator(const void *, const void *), bool unique,'), (126, '                                       ELIST_LINK *new_link) {'), (127, '  // Check for adding at the end.'), (128, '  if (last == nullptr || comparator(&last, &new_link) < 0) {'), (129, '    if (last == nullptr) {'), (130, '      new_link->next = new_link;'), (131, '    } else {'), (132, '      new_link->next = last->next;'), (133, '      last->next = new_link;'), (134, '    }'), (135, '    last = new_link;'), (136, '  } else {'), (137, '    // Need to use an iterator.'), (138, '    ELIST_ITERATOR it(this);'), (139, '    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (140, '      ELIST_LINK *link = it.data();'), (141, '      int compare = comparator(&link, &new_link);'), (142, '      if (compare > 0) {'), (143, '        break;'), (144, '      } else if (unique && compare == 0) {'), (145, '        return link;'), (146, '      }'), (147, '    }'), (148, '    if (it.cycled_list()) {'), (149, '      it.add_to_end(new_link);'), (150, '    } else {'), (151, '      it.add_before_then_move(new_link);'), (152, '    }'), (153, '  }'), (154, '  return new_link;'), (155, '}'), (156, ''), (157, '/***********************************************************************'), (158, ' *  MEMBER FUNCTIONS OF CLASS: ELIST_ITERATOR'), (159, ' *  ========================================='), (160, ' **********************************************************************/'), (161, ''), (162, '/***********************************************************************'), (163, ' *              ELIST_ITERATOR::forward'), (164, ' *'), (165, ' *  Move the iterator to the next element of the list.'), (166, ' *  REMEMBER: ALL LISTS ARE CIRCULAR.'), (167, ' **********************************************************************/'), (168, ''), (169, 'ELIST_LINK *ELIST_ITERATOR::forward() {'), (170, '#ifndef NDEBUG'), (171, '  if (!list)'), (172, '    NO_LIST.error(""ELIST_ITERATOR::forward"", ABORT);'), (173, '#endif'), (174, '  if (list->empty()) {'), (175, '    return nullptr;'), (176, '  }'), (177, ''), (178, '  if (current) { // not removed so'), (179, '                 // set previous'), (180, '    prev = current;'), (181, '    started_cycling = true;'), (182, '    // In case next is deleted by another iterator, get next from current.'), (183, '    current = current->next;'), (184, '  } else {'), (185, '    if (ex_current_was_cycle_pt) {'), (186, '      cycle_pt = next;'), (187, '    }'), (188, '    current = next;'), (189, '  }'), (190, '#ifndef NDEBUG'), (191, '  if (!current)'), (192, '    NULL_DATA.error(""ELIST_ITERATOR::forward"", ABORT);'), (193, '#endif'), (194, '  next = current->next;'), (195, ''), (196, '#ifndef NDEBUG'), (197, '  if (!next) {'), (198, '    NULL_NEXT.error(""ELIST_ITERATOR::forward"", ABORT,'), (199, '                    ""This is: %p  Current is: %p"",'), (200, '                    static_cast<void *>(this),'), (201, '                    static_cast<void *>(current));'), (202, '  }'), (203, '#endif'), (204, '  return current;'), (205, '}'), (206, ''), (207, '/***********************************************************************'), (208, ' *              ELIST_ITERATOR::data_relative'), (209, ' *'), (210, ' *  Return the data pointer to the element ""offset"" elements from current.'), (211, ' *  ""offset"" must not be less than -1.'), (212, "" *  (This function can't be INLINEd because it contains a loop)""), (213, ' **********************************************************************/'), (214, ''), (215, 'ELIST_LINK *ELIST_ITERATOR::data_relative( // get data + or - ...'), (216, '    int8_t offset) {                       // offset from current'), (217, '  ELIST_LINK *ptr;'), (218, ''), (219, '#ifndef NDEBUG'), (220, '  if (!list)'), (221, '    NO_LIST.error(""ELIST_ITERATOR::data_relative"", ABORT);'), (222, '  if (list->empty())'), (223, '    EMPTY_LIST.error(""ELIST_ITERATOR::data_relative"", ABORT);'), (224, '  if (offset < -1)'), (225, '    BAD_PARAMETER.error(""ELIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");'), (226, '#endif'), (227, ''), (228, '  if (offset == -1) {'), (229, '    ptr = prev;'), (230, '  } else {'), (231, '    for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {'), (232, '      ;'), (233, '    }'), (234, '  }'), (235, ''), (236, '#ifndef NDEBUG'), (237, '  if (!ptr)'), (238, '    NULL_DATA.error(""ELIST_ITERATOR::data_relative"", ABORT);'), (239, '#endif'), (240, ''), (241, '  return ptr;'), (242, '}'), (243, ''), (244, '/***********************************************************************'), (245, ' *              ELIST_ITERATOR::move_to_last()'), (246, ' *'), (247, ' *  Move current so that it is set to the end of the list.'), (248, ' *  Return data just in case anyone wants it.'), (249, "" *  (This function can't be INLINEd because it contains a loop)""), (250, ' **********************************************************************/'), (251, ''), (252, 'ELIST_LINK *ELIST_ITERATOR::move_to_last() {'), (253, '#ifndef NDEBUG'), (254, '  if (!list)'), (255, '    NO_LIST.error(""ELIST_ITERATOR::move_to_last"", ABORT);'), (256, '#endif'), (257, ''), (258, '  while (current != list->last) {'), (259, '    forward();'), (260, '  }'), (261, ''), (262, '  return current;'), (263, '}'), (264, ''), (265, '/***********************************************************************'), (266, ' *              ELIST_ITERATOR::exchange()'), (267, ' *'), (268, ' *  Given another iterator, whose current element is a different element on'), (269, ' *  the same list list OR an element of another list, exchange the two current'), (270, ' *  elements.  On return, each iterator points to the element which was the'), (271, ' *  other iterators current on entry.'), (272, "" *  (This function hasn't been in-lined because its a bit big!)""), (273, ' **********************************************************************/'), (274, ''), (275, 'void ELIST_ITERATOR::exchange(  // positions of 2 links'), (276, '    ELIST_ITERATOR *other_it) { // other iterator'), (277, '  constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can\'t exchange deleted elements of lists"");'), (278, ''), (279, '  ELIST_LINK *old_current;'), (280, ''), (281, '#ifndef NDEBUG'), (282, '  if (!list)'), (283, '    NO_LIST.error(""ELIST_ITERATOR::exchange"", ABORT);'), (284, '  if (!other_it)'), (285, '    BAD_PARAMETER.error(""ELIST_ITERATOR::exchange"", ABORT, ""other_it nullptr"");'), (286, '  if (!(other_it->list))'), (287, '    NO_LIST.error(""ELIST_ITERATOR::exchange"", ABORT, ""other_it"");'), (288, '#endif'), (289, ''), (290, '  /* Do nothing if either list is empty or if both iterators reference the same'), (291, 'link */'), (292, ''), (293, '  if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {'), (294, '    return;'), (295, '  }'), (296, ''), (297, '  /* Error if either current element is deleted */'), (298, ''), (299, '  if (!current || !other_it->current) {'), (300, '    DONT_EXCHANGE_DELETED.error(""ELIST_ITERATOR.exchange"", ABORT);'), (301, '  }'), (302, ''), (303, '  /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements'), (304, '(other before this); non-doubleton adjacent elements (this before other);'), (305, 'non-adjacent elements. */'), (306, ''), (307, '  // adjacent links'), (308, '  if ((next == other_it->current) || (other_it->next == current)) {'), (309, '    // doubleton list'), (310, '    if ((next == other_it->current) && (other_it->next == current)) {'), (311, '      prev = next = current;'), (312, '      other_it->prev = other_it->next = other_it->current;'), (313, '    } else { // non-doubleton with'), (314, '             // adjacent links'), (315, '             // other before this'), (316, '      if (other_it->next == current) {'), (317, '        other_it->prev->next = current;'), (318, '        other_it->current->next = next;'), (319, '        current->next = other_it->current;'), (320, '        other_it->next = other_it->current;'), (321, '        prev = current;'), (322, '      } else { // this before other'), (323, '        prev->next = other_it->current;'), (324, '        current->next = other_it->next;'), (325, '        other_it->current->next = current;'), (326, '        next = current;'), (327, '        other_it->prev = other_it->current;'), (328, '      }'), (329, '    }'), (330, '  } else { // no overlap'), (331, '    prev->next = other_it->current;'), (332, '    current->next = other_it->next;'), (333, '    other_it->prev->next = current;'), (334, '    other_it->current->next = next;'), (335, '  }'), (336, ''), (337, '  /* update end of list pointer when necessary (remember that the 2 iterators'), (338, '  may iterate over different lists!) */'), (339, ''), (340, '  if (list->last == current) {'), (341, '    list->last = other_it->current;'), (342, '  }'), (343, '  if (other_it->list->last == other_it->current) {'), (344, '    other_it->list->last = current;'), (345, '  }'), (346, ''), (347, '  if (current == cycle_pt) {'), (348, '    cycle_pt = other_it->cycle_pt;'), (349, '  }'), (350, '  if (other_it->current == other_it->cycle_pt) {'), (351, '    other_it->cycle_pt = cycle_pt;'), (352, '  }'), (353, ''), (354, '  /* The actual exchange - in all cases*/'), (355, ''), (356, '  old_current = current;'), (357, '  current = other_it->current;'), (358, '  other_it->current = old_current;'), (359, '}'), (360, ''), (361, '/***********************************************************************'), (362, ' *              ELIST_ITERATOR::extract_sublist()'), (363, ' *'), (364, ' *  This is a private member, used only by ELIST::assign_to_sublist.'), (365, ' *  Given another iterator for the same list, extract the links from THIS to'), (366, ' *  OTHER inclusive, link them into a new circular list, and return a'), (367, ' *  pointer to the last element.'), (368, "" *  (Can't inline this function because it contains a loop)""), (369, ' **********************************************************************/'), (370, ''), (371, 'ELIST_LINK *ELIST_ITERATOR::extract_sublist( // from this current'), (372, '    ELIST_ITERATOR *other_it) {              // to other current'), (373, '#ifndef NDEBUG'), (374, '  constexpr ERRCODE BAD_EXTRACTION_PTS(""Can\'t extract sublist from points on different lists"");'), (375, '  constexpr ERRCODE DONT_EXTRACT_DELETED(""Can\'t extract a sublist marked by deleted points"");'), (376, '#endif'), (377, '  constexpr ERRCODE BAD_SUBLIST(""Can\'t find sublist end point in original list"");'), (378, ''), (379, '  ELIST_ITERATOR temp_it = *this;'), (380, '  ELIST_LINK *end_of_new_list;'), (381, ''), (382, '#ifndef NDEBUG'), (383, '  if (!other_it)'), (384, '    BAD_PARAMETER.error(""ELIST_ITERATOR::extract_sublist"", ABORT, ""other_it nullptr"");'), (385, '  if (!list)'), (386, '    NO_LIST.error(""ELIST_ITERATOR::extract_sublist"", ABORT);'), (387, '  if (list != other_it->list)'), (388, '    BAD_EXTRACTION_PTS.error(""ELIST_ITERATOR.extract_sublist"", ABORT);'), (389, '  if (list->empty())'), (390, '    EMPTY_LIST.error(""ELIST_ITERATOR::extract_sublist"", ABORT);'), (391, ''), (392, '  if (!current || !other_it->current)'), (393, '    DONT_EXTRACT_DELETED.error(""ELIST_ITERATOR.extract_sublist"", ABORT);'), (394, '#endif'), (395, ''), (396, '  ex_current_was_last = other_it->ex_current_was_last = false;'), (397, '  ex_current_was_cycle_pt = false;'), (398, '  other_it->ex_current_was_cycle_pt = false;'), (399, ''), (400, '  temp_it.mark_cycle_pt();'), (401, '  do {                         // walk sublist'), (402, ""    if (temp_it.cycled_list()) { // can't find end pt""), (403, '      BAD_SUBLIST.error(""ELIST_ITERATOR.extract_sublist"", ABORT);'), (404, '    }'), (405, ''), (406, '    if (temp_it.at_last()) {'), (407, '      list->last = prev;'), (408, '      ex_current_was_last = other_it->ex_current_was_last = true;'), (409, '    }'), (410, ''), (411, '    if (temp_it.current == cycle_pt) {'), (412, '      ex_current_was_cycle_pt = true;'), (413, '    }'), (414, ''), (415, '    if (temp_it.current == other_it->cycle_pt) {'), (416, '      other_it->ex_current_was_cycle_pt = true;'), (417, '    }'), (418, ''), (419, '    temp_it.forward();'), (420, '  } while (temp_it.prev != other_it->current);'), (421, ''), (422, '  // circularise sublist'), (423, '  other_it->current->next = current;'), (424, '  end_of_new_list = other_it->current;'), (425, ''), (426, '  // sublist = whole list'), (427, '  if (prev == other_it->current) {'), (428, '    list->last = nullptr;'), (429, '    prev = current = next = nullptr;'), (430, '    other_it->prev = other_it->current = other_it->next = nullptr;'), (431, '  } else {'), (432, '    prev->next = other_it->next;'), (433, '    current = other_it->current = nullptr;'), (434, '    next = other_it->next;'), (435, '    other_it->prev = prev;'), (436, '  }'), (437, '  return end_of_new_list;'), (438, '}'), (439, ''), (440, '} // namespace tesseract')]}",yes
src\ccutil\elst.h,src\ccutil\elst.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -27,8 +27,6 @@
 
 namespace tesseract {
 
-class ELIST_ITERATOR;
-
 /**********************************************************************
 This module implements list classes and iterators.
 The following list types and iterators are provided:
@@ -68,744 +66,1056 @@ list class - though macros can generate these.  It also prevents heterogeneous
 lists.
 **********************************************************************/
 
-/**********************************************************************
- *                          CLASS - ELIST_LINK
- *
- *                          Generic link class for singly linked lists with
- *embedded links
- *
- *  Note:  No destructor - elements are assumed to be destroyed EITHER after
- *  they have been extracted from a list OR by the ELIST destructor which
- *  walks the list.
- **********************************************************************/
-
-class ELIST_LINK {
-  friend class ELIST_ITERATOR;
-  friend class ELIST;
-
-  ELIST_LINK *next;
-
-public:
-  ELIST_LINK() {
-    next = nullptr;
-  }
-  // constructor
-
-  // The special copy constructor is used by lots of classes.
-  ELIST_LINK(const ELIST_LINK &) {
-    next = nullptr;
-  }
-
-  // The special assignment operator is used by lots of classes.
-  void operator=(const ELIST_LINK &) {
-    next = nullptr;
-  }
-};
-
 /**********************************************************************
  * CLASS - ELIST
  *
  * Generic list class for singly linked lists with embedded links
  **********************************************************************/
 
-class TESS_API ELIST {
-  friend class ELIST_ITERATOR;
-
-  ELIST_LINK *last = nullptr; // End of list
-  //(Points to head)
-  ELIST_LINK *First() { // return first
-    return last ? last->next : nullptr;
-  }
-
+template <typename CLASSNAME>
+class ELIST {
 public:
-  // destroy all links
-  void internal_clear(void (*zapper)(void *));
-
-  bool empty() const {
-    return !last;
-  }
 
-  bool singleton() const {
-    return last ? (last == last->next) : false;
-  }
-
-  void shallow_copy(      // dangerous!!
-      ELIST *from_list) { // beware destructors!!
-    last = from_list->last;
-  }
-
-  // ptr to copier functn
-  void internal_deep_copy(ELIST_LINK *(*copier)(ELIST_LINK *),
-                          const ELIST *list); // list being copied
-
-  void assign_to_sublist(       // to this list
-      ELIST_ITERATOR *start_it, // from list start
-      ELIST_ITERATOR *end_it);  // from list end
-
-  // # elements in list
-  int32_t length() const {
-    int32_t count = 0;
-    if (last != nullptr) {
-      count = 1;
-      for (auto it = last->next; it != last; it = it->next) {
-        count++;
-      }
+  /**********************************************************************
+   *                          CLASS - ELIST_LINK
+   *
+   *                          Generic link class for singly linked lists with
+   *embedded links
+   *
+   *  Note:  No destructor - elements are assumed to be destroyed EITHER after
+   *  they have been extracted from a list OR by the ELIST destructor which
+   *  walks the list.
+   **********************************************************************/
+
+  class LINK {
+    friend class ITERATOR;
+    friend class ELIST;
+
+    CLASSNAME *next;
+
+  public:
+    LINK() {
+      next = nullptr;
     }
-    return count;
-  }
-
-  void sort(          // sort elements
-      int comparator( // comparison routine
-          const void *, const void *));
+    // constructor
 
-  // Assuming list has been sorted already, insert new_link to
-  // keep the list sorted according to the same comparison function.
-  // Comparison function is the same as used by sort, i.e. uses double
-  // indirection. Time is O(1) to add to beginning or end.
-  // Time is linear to add pre-sorted items to an empty list.
-  // If unique is set to true and comparator() returns 0 (an entry with the
-  // same information as the one contained in new_link is already in the
-  // list) - new_link is not added to the list and the function returns the
-  // pointer to the identical entry that already exists in the list
-  // (otherwise the function returns new_link).
-  ELIST_LINK *add_sorted_and_find(int comparator(const void *, const void *), bool unique,
-                                  ELIST_LINK *new_link);
-
-  // Same as above, but returns true if the new entry was inserted, false
-  // if the identical entry already existed in the list.
-  bool add_sorted(int comparator(const void *, const void *), bool unique, ELIST_LINK *new_link) {
-    return (add_sorted_and_find(comparator, unique, new_link) == new_link);
-  }
-};
-
-/***********************************************************************
- *                          CLASS - ELIST_ITERATOR
- *
- *                          Generic iterator class for singly linked lists with
- *embedded links
- **********************************************************************/
-
-class TESS_API ELIST_ITERATOR {
-  friend void ELIST::assign_to_sublist(ELIST_ITERATOR *, ELIST_ITERATOR *);
-
-  ELIST *list;                  // List being iterated
-  ELIST_LINK *prev;             // prev element
-  ELIST_LINK *current;          // current element
-  ELIST_LINK *next;             // next element
-  ELIST_LINK *cycle_pt;         // point we are cycling the list to.
-  bool ex_current_was_last;     // current extracted was end of list
-  bool ex_current_was_cycle_pt; // current extracted was cycle point
-  bool started_cycling;         // Have we moved off the start?
+    // The special copy constructor is used by lots of classes.
+    LINK(const LINK &) {
+      next = nullptr;
+    }
 
-  ELIST_LINK *extract_sublist(   // from this current...
-      ELIST_ITERATOR *other_it); // to other current
+    // The special assignment operator is used by lots of classes.
+    void operator=(const LINK &) {
+      next = nullptr;
+    }
+  };
 
-public:
-  ELIST_ITERATOR() { // constructor
-    list = nullptr;
-  } // unassigned list
 
-  explicit ELIST_ITERATOR(ELIST *list_to_iterate);
+  /***********************************************************************
+   *                          CLASS - ELIST_ITERATOR
+   *
+   *                          Generic iterator class for singly linked lists with
+   *embedded links
+   **********************************************************************/
+
+  class ITERATOR {
+    friend void ELIST::assign_to_sublist(ITERATOR *, ITERATOR *);
+
+    ELIST *list;                  // List being iterated
+    CLASSNAME *prev;             // prev element
+    CLASSNAME *current;          // current element
+    CLASSNAME *next;             // next element
+    CLASSNAME *cycle_pt;         // point we are cycling the list to.
+    bool ex_current_was_last;     // current extracted was end of list
+    bool ex_current_was_cycle_pt; // current extracted was cycle point
+    bool started_cycling;         // Have we moved off the start?
+    /***********************************************************************
+   *              ITERATOR::extract_sublist()
+   *
+   *  This is a private member, used only by ELIST::assign_to_sublist.
+   *  Given another iterator for the same list, extract the links from THIS to
+   *  OTHER inclusive, link them into a new circular list, and return a
+   *  pointer to the last element.
+   *  (Can't inline this function because it contains a loop)
+   **********************************************************************/
+    CLASSNAME *extract_sublist(   // from this current...
+      ITERATOR *other_it) {              // to other current
+#ifndef NDEBUG
+      constexpr ERRCODE BAD_EXTRACTION_PTS(""Can't extract sublist from points on different lists"");
+      constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
+#endif
+      constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
 
-  void set_to_list( // change list
-      ELIST *list_to_iterate);
+      ITERATOR temp_it = *this;
+      CLASSNAME *end_of_new_list;
 
-  void add_after_then_move(  // add after current &
-      ELIST_LINK *new_link); // move to new
+#ifndef NDEBUG
+      if (!other_it)
+        BAD_PARAMETER.error(""ELIST_ITERATOR::extract_sublist"", ABORT, ""other_it nullptr"");
+      if (!list)
+        NO_LIST.error(""ELIST_ITERATOR::extract_sublist"", ABORT);
+      if (list != other_it->list)
+        BAD_EXTRACTION_PTS.error(""ELIST_ITERATOR.extract_sublist"", ABORT);
+      if (list->empty())
+        EMPTY_LIST.error(""ELIST_ITERATOR::extract_sublist"", ABORT);
+
+      if (!current || !other_it->current)
+        DONT_EXTRACT_DELETED.error(""ELIST_ITERATOR.extract_sublist"", ABORT);
+#endif
 
-  void add_after_stay_put(   // add after current &
-      ELIST_LINK *new_link); // stay at current
+      ex_current_was_last = other_it->ex_current_was_last = false;
+      ex_current_was_cycle_pt = false;
+      other_it->ex_current_was_cycle_pt = false;
 
-  void add_before_then_move( // add before current &
-      ELIST_LINK *new_link); // move to new
+      temp_it.mark_cycle_pt();
+      do {                         // walk sublist
+        if (temp_it.cycled_list()) { // can't find end pt
+          BAD_SUBLIST.error(""ITERATOR.extract_sublist"", ABORT);
+        }
 
-  void add_before_stay_put(  // add before current &
-      ELIST_LINK *new_link); // stay at current
+        if (temp_it.at_last()) {
+          list->last = prev;
+          ex_current_was_last = other_it->ex_current_was_last = true;
+        }
 
-  void add_list_after(     // add a list &
-      ELIST *list_to_add); // stay at current
+        if (temp_it.current == cycle_pt) {
+          ex_current_was_cycle_pt = true;
+        }
 
-  void add_list_before(    // add a list &
-      ELIST *list_to_add); // move to it 1st item
+        if (temp_it.current == other_it->cycle_pt) {
+          other_it->ex_current_was_cycle_pt = true;
+        }
 
-  ELIST_LINK *data() { // get current data
-#ifndef NDEBUG
-    if (!list) {
-      NO_LIST.error(""ELIST_ITERATOR::data"", ABORT);
+        temp_it.forward();
+      } while (temp_it.prev != other_it->current);
+
+      // circularise sublist
+      other_it->current->next = current;
+      end_of_new_list = other_it->current;
+
+      // sublist = whole list
+      if (prev == other_it->current) {
+        list->last = nullptr;
+        prev = current = next = nullptr;
+        other_it->prev = other_it->current = other_it->next = nullptr;
+      } else {
+        prev->next = other_it->next;
+        current = other_it->current = nullptr;
+        next = other_it->next;
+        other_it->prev = prev;
+      }
+      return end_of_new_list;
+    } // to other current
+
+  public:
+    ITERATOR() { // constructor
+      list = nullptr;
+    } // unassigned list
+    /***********************************************************************
+   *                          ELIST_ITERATOR::ELIST_ITERATOR
+   *
+   *  CONSTRUCTOR - set iterator to specified list;
+   **********************************************************************/
+    ITERATOR(ELIST *list_to_iterate) {
+      set_to_list(list_to_iterate);
     }
-    if (!current) {
-      NULL_DATA.error(""ELIST_ITERATOR::data"", ABORT);
+    /***********************************************************************
+   *                          ELIST_ITERATOR::set_to_list
+   *
+   *  (Re-)initialise the iterator to point to the start of the list_to_iterate
+   *  over.
+   **********************************************************************/
+    void set_to_list( // change list
+      ELIST *list_to_iterate) {
+#ifndef NDEBUG
+      if (!list_to_iterate) {
+        BAD_PARAMETER.error(""ELIST_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");
+      }
+#endif
+
+      list = list_to_iterate;
+      prev = list->last;
+      current = list->First();
+      next = current ? current->next : nullptr;
+      cycle_pt = nullptr; // await explicit set
+      started_cycling = false;
+      ex_current_was_last = false;
+      ex_current_was_cycle_pt = false;
     }
+    /***********************************************************************
+   *                          ELIST_ITERATOR::add_after_then_move
+   *
+   *  Add a new element to the list after the current element and move the
+   *  iterator to the new element.
+   **********************************************************************/
+    void add_after_then_move(  // add after current &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);
+      }
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST_ITERATOR::add_after_then_move"", ABORT, ""new_element is nullptr"");
+      }
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);
+      }
 #endif
-    return current;
-  }
 
-  ELIST_LINK *data_relative( // get data + or - ...
-      int8_t offset);        // offset from current
+      if (list->empty()) {
+        new_element->next = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+      } else {
+        new_element->next = next;
+
+        if (current) { // not extracted
+          current->next = new_element;
+          prev = current;
+          if (current == list->last) {
+            list->last = new_element;
+          }
+        } else { // current extracted
+          prev->next = new_element;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+          if (ex_current_was_cycle_pt) {
+            cycle_pt = new_element;
+          }
+        }
+      }
+      current = new_element;
+    } // move to new
+      /***********************************************************************
+     *                          ELIST_ITERATOR::add_after_stay_put
+     *
+     *  Add a new element to the list after the current element but do not move
+     *  the iterator to the new element.
+     **********************************************************************/
+    void add_after_stay_put(   // add after current &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);
+      }
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT, ""new_element is nullptr"");
+      }
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);
+      }
+#endif
 
-  ELIST_LINK *forward(); // move to next element
+      if (list->empty()) {
+        new_element->next = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+        ex_current_was_last = false;
+        current = nullptr;
+      } else {
+        new_element->next = next;
+
+        if (current) { // not extracted
+          current->next = new_element;
+          if (prev == current) {
+            prev = new_element;
+          }
+          if (current == list->last) {
+            list->last = new_element;
+          }
+        } else { // current extracted
+          prev->next = new_element;
+          if (ex_current_was_last) {
+            list->last = new_element;
+            ex_current_was_last = false;
+          }
+        }
+        next = new_element;
+      }
+    } // stay at current
+      /***********************************************************************
+     *                          ELIST_ITERATOR::add_before_then_move
+     *
+     *  Add a new element to the list before the current element and move the
+     *  iterator to the new element.
+     **********************************************************************/
+    void add_before_then_move( // add before current &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);
+      }
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST_ITERATOR::add_before_then_move"", ABORT, ""new_element is nullptr"");
+      }
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);
+      }
+#endif
 
-  ELIST_LINK *extract(); // remove from list
+      if (list->empty()) {
+        new_element->next = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+      } else {
+        prev->next = new_element;
+        if (current) { // not extracted
+          new_element->next = current;
+          next = current;
+        } else { // current extracted
+          new_element->next = next;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+          if (ex_current_was_cycle_pt) {
+            cycle_pt = new_element;
+          }
+        }
+      }
+      current = new_element;
+    } // move to new
+      /***********************************************************************
+     *                          ELIST_ITERATOR::add_before_stay_put
+     *
+     *  Add a new element to the list before the current element but don't move the
+     *  iterator to the new element.
+     **********************************************************************/
+    void add_before_stay_put(  // add before current &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);
+      }
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT, ""new_element is nullptr"");
+      }
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);
+      }
+#endif
 
-  ELIST_LINK *move_to_first(); // go to start of list
+      if (list->empty()) {
+        new_element->next = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+        ex_current_was_last = true;
+        current = nullptr;
+      } else {
+        prev->next = new_element;
+        if (current) { // not extracted
+          new_element->next = current;
+          if (next == current) {
+            next = new_element;
+          }
+        } else { // current extracted
+          new_element->next = next;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+        }
+        prev = new_element;
+      }
+    } // stay at current
+      /***********************************************************************
+     *                          ELIST_ITERATOR::add_list_after
+     *
+     *  Insert another list to this list after the current element but don't move
+     *the
+     *  iterator.
+     **********************************************************************/
+    void add_list_after(     // add a list &
+      ELIST *list_to_add) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::add_list_after"", ABORT);
+      }
+      if (!list_to_add) {
+        BAD_PARAMETER.error(""ELIST_ITERATOR::add_list_after"", ABORT, ""list_to_add is nullptr"");
+      }
+#endif
 
-  ELIST_LINK *move_to_last(); // go to end of list
+      if (!list_to_add->empty()) {
+        if (list->empty()) {
+          list->last = list_to_add->last;
+          prev = list->last;
+          next = list->First();
+          ex_current_was_last = true;
+          current = nullptr;
+        } else {
+          if (current) { // not extracted
+            current->next = list_to_add->First();
+            if (current == list->last) {
+              list->last = list_to_add->last;
+            }
+            list_to_add->last->next = next;
+            next = current->next;
+          } else { // current extracted
+            prev->next = list_to_add->First();
+            if (ex_current_was_last) {
+              list->last = list_to_add->last;
+              ex_current_was_last = false;
+            }
+            list_to_add->last->next = next;
+            next = prev->next;
+          }
+        }
+        list_to_add->last = nullptr;
+      }
+    } // stay at current
+      /***********************************************************************
+     *                          ELIST_ITERATOR::add_list_before
+     *
+     *  Insert another list to this list before the current element. Move the
+     *  iterator to the start of the inserted elements
+     *  iterator.
+     **********************************************************************/
+    void add_list_before(    // add a list &
+      ELIST *list_to_add) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::add_list_before"", ABORT);
+      }
+      if (!list_to_add) {
+        BAD_PARAMETER.error(""ELIST_ITERATOR::add_list_before"", ABORT, ""list_to_add is nullptr"");
+      }
+#endif
 
-  void mark_cycle_pt(); // remember current
+      if (!list_to_add->empty()) {
+        if (list->empty()) {
+          list->last = list_to_add->last;
+          prev = list->last;
+          current = list->First();
+          next = current->next;
+          ex_current_was_last = false;
+        } else {
+          prev->next = list_to_add->First();
+          if (current) { // not extracted
+            list_to_add->last->next = current;
+          } else { // current extracted
+            list_to_add->last->next = next;
+            if (ex_current_was_last) {
+              list->last = list_to_add->last;
+            }
+            if (ex_current_was_cycle_pt) {
+              cycle_pt = prev->next;
+            }
+          }
+          current = prev->next;
+          next = current->next;
+        }
+        list_to_add->last = nullptr;
+      }
+    } // move to it 1st item
 
-  bool empty() const { // is list empty?
+    CLASSNAME *data() { // get current data
 #ifndef NDEBUG
-    if (!list) {
-      NO_LIST.error(""ELIST_ITERATOR::empty"", ABORT);
-    }
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::data"", ABORT);
+      }
+      if (!current) {
+        NULL_DATA.error(""ELIST_ITERATOR::data"", ABORT);
+      }
 #endif
-    return list->empty();
-  }
-
-  bool current_extracted() const { // current extracted?
-    return !current;
-  }
+      return current;
+    }
+    /***********************************************************************
+   *              ELIST_ITERATOR::data_relative
+   *
+   *  Return the data pointer to the element ""offset"" elements from current.
+   *  ""offset"" must not be less than -1.
+   *  (This function can't be INLINEd because it contains a loop)
+   **********************************************************************/
+    CLASSNAME *data_relative( // get data + or - ...
+      int8_t offset) {                       // offset from current
+      CLASSNAME *ptr;
 
-  bool at_first() const; // Current is first?
+#ifndef NDEBUG
+      if (!list)
+        NO_LIST.error(""ELIST_ITERATOR::data_relative"", ABORT);
+      if (list->empty())
+        EMPTY_LIST.error(""ELIST_ITERATOR::data_relative"", ABORT);
+      if (offset < -1)
+        BAD_PARAMETER.error(""ELIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");
+#endif
 
-  bool at_last() const; // Current is last?
+      if (offset == -1) {
+        ptr = prev;
+      } else {
+        for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {
+          ;
+        }
+      }
 
-  bool cycled_list() const; // Completed a cycle?
+#ifndef NDEBUG
+      if (!ptr)
+        NULL_DATA.error(""ELIST_ITERATOR::data_relative"", ABORT);
+#endif
 
-  void add_to_end(           // add at end &
-      ELIST_LINK *new_link); // don't move
+      return ptr;
+    }        // offset from current
+      /***********************************************************************
+     *              ELIST_ITERATOR::forward
+     *
+     *  Move the iterator to the next element of the list.
+     *  REMEMBER: ALL LISTS ARE CIRCULAR.
+     **********************************************************************/
+    CLASSNAME *forward() {
+#ifndef NDEBUG
+      if (!list)
+        NO_LIST.error(""ELIST_ITERATOR::forward"", ABORT);
+#endif
+      if (list->empty()) {
+        return nullptr;
+      }
 
-  void exchange(                 // positions of 2 links
-      ELIST_ITERATOR *other_it); // other iterator
+      if (current) { // not removed so
+        // set previous
+        prev = current;
+        started_cycling = true;
+        // In case next is deleted by another iterator, get next from current.
+        current = current->next;
+      } else {
+        if (ex_current_was_cycle_pt) {
+          cycle_pt = next;
+        }
+        current = next;
+      }
+#ifndef NDEBUG
+      if (!current)
+        NULL_DATA.error(""ELIST_ITERATOR::forward"", ABORT);
+#endif
+      next = current->next;
 
-  //# elements in list
-  int32_t length() const {
-    return list->length();
-  }
+#ifndef NDEBUG
+      if (!next) {
+        NULL_NEXT.error(""ELIST_ITERATOR::forward"", ABORT,
+          ""This is: %p  Current is: %p"",
+          static_cast<void *>(this),
+          static_cast<void *>(current));
+      }
+#endif
+      return current;
+    } // move to next element
+
+      /***********************************************************************
+     *                          ELIST_ITERATOR::extract
+     *
+     *  Do extraction by removing current from the list, returning it to the
+     *  caller, but NOT updating the iterator.  (So that any calling loop can do
+     *  this.)   The iterator's current points to nullptr.  If the extracted element
+     *  is to be deleted, this is the callers responsibility.
+     **********************************************************************/
+    CLASSNAME *extract() {
+      CLASSNAME *extracted_link;
 
-  void sort(          // sort elements
-      int comparator( // comparison routine
-          const void *, const void *));
-};
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::extract"", ABORT);
+      }
+      if (!current) { // list empty or
+        // element extracted
+        NULL_CURRENT.error(""ELIST_ITERATOR::extract"", ABORT);
+      }
+#endif
 
-/***********************************************************************
- *                          ELIST_ITERATOR::set_to_list
- *
- *  (Re-)initialise the iterator to point to the start of the list_to_iterate
- *  over.
- **********************************************************************/
+      if (list->singleton()) {
+        // Special case where we do need to change the iterator.
+        prev = next = list->last = nullptr;
+      } else {
+        prev->next = next; // remove from list
 
-inline void ELIST_ITERATOR::set_to_list( // change list
-    ELIST *list_to_iterate) {
+        ex_current_was_last = (current == list->last);
+        if (ex_current_was_last) {
+          list->last = prev;
+        }
+      }
+      // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.
+      ex_current_was_cycle_pt = (current == cycle_pt);
+      extracted_link = current;
+      extracted_link->next = nullptr; // for safety
+      current = nullptr;
+      return extracted_link;
+    }  // remove from list
+      /***********************************************************************
+     *                          ELIST_ITERATOR::move_to_first()
+     *
+     *  Move current so that it is set to the start of the list.
+     *  Return data just in case anyone wants it.
+     **********************************************************************/
+    CLASSNAME *move_to_first() {
 #ifndef NDEBUG
-  if (!list_to_iterate) {
-    BAD_PARAMETER.error(""ELIST_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::move_to_first"", ABORT);
+      }
 #endif
 
-  list = list_to_iterate;
-  prev = list->last;
-  current = list->First();
-  next = current ? current->next : nullptr;
-  cycle_pt = nullptr; // await explicit set
-  started_cycling = false;
-  ex_current_was_last = false;
-  ex_current_was_cycle_pt = false;
-}
-
-/***********************************************************************
- *                          ELIST_ITERATOR::ELIST_ITERATOR
- *
- *  CONSTRUCTOR - set iterator to specified list;
- **********************************************************************/
-
-inline ELIST_ITERATOR::ELIST_ITERATOR(ELIST *list_to_iterate) {
-  set_to_list(list_to_iterate);
-}
+      current = list->First();
+      prev = list->last;
+      next = current ? current->next : nullptr;
+      return current;
+    } // go to start of list
+      /***********************************************************************
+     *              ELIST_ITERATOR::move_to_last()
+     *
+     *  Move current so that it is set to the end of the list.
+     *  Return data just in case anyone wants it.
+     *  (This function can't be INLINEd because it contains a loop)
+     **********************************************************************/
+    CLASSNAME *move_to_last() {
+#ifndef NDEBUG
+      if (!list)
+        NO_LIST.error(""ELIST_ITERATOR::move_to_last"", ABORT);
+#endif
 
-/***********************************************************************
- *                          ELIST_ITERATOR::add_after_then_move
- *
- *  Add a new element to the list after the current element and move the
- *  iterator to the new element.
- **********************************************************************/
+      while (current != list->last) {
+        forward();
+      }
 
-inline void ELIST_ITERATOR::add_after_then_move( // element to add
-    ELIST_LINK *new_element) {
+      return current;
+    } // go to end of list
+      /***********************************************************************
+     *                          ELIST_ITERATOR::mark_cycle_pt()
+     *
+     *  Remember the current location so that we can tell whether we've returned
+     *  to this point later.
+     *
+     *  If the current point is deleted either now, or in the future, the cycle
+     *  point will be set to the next item which is set to current.  This could be
+     *  by a forward, add_after_then_move or add_after_then_move.
+     **********************************************************************/
+    void mark_cycle_pt() {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST_ITERATOR::add_after_then_move"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::mark_cycle_pt"", ABORT);
+      }
 #endif
 
-  if (list->empty()) {
-    new_element->next = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-  } else {
-    new_element->next = next;
-
-    if (current) { // not extracted
-      current->next = new_element;
-      prev = current;
-      if (current == list->last) {
-        list->last = new_element;
+      if (current) {
+        cycle_pt = current;
+      } else {
+        ex_current_was_cycle_pt = true;
       }
-    } else { // current extracted
-      prev->next = new_element;
-      if (ex_current_was_last) {
-        list->last = new_element;
-      }
-      if (ex_current_was_cycle_pt) {
-        cycle_pt = new_element;
+      started_cycling = false;
+    } // remember current
+
+    bool empty() const { // is list empty?
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::empty"", ABORT);
       }
+#endif
+      return list->empty();
     }
-  }
-  current = new_element;
-}
-
-/***********************************************************************
- *                          ELIST_ITERATOR::add_after_stay_put
- *
- *  Add a new element to the list after the current element but do not move
- *  the iterator to the new element.
- **********************************************************************/
 
-inline void ELIST_ITERATOR::add_after_stay_put( // element to add
-    ELIST_LINK *new_element) {
+    bool current_extracted() const { // current extracted?
+      return !current;
+    }
+    /***********************************************************************
+   *                          ELIST_ITERATOR::at_first()
+   *
+   *  Are we at the start of the list?
+   *
+   **********************************************************************/
+    bool at_first() const {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::at_first"", ABORT);
+      }
 #endif
 
-  if (list->empty()) {
-    new_element->next = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-    ex_current_was_last = false;
-    current = nullptr;
-  } else {
-    new_element->next = next;
-
-    if (current) { // not extracted
-      current->next = new_element;
-      if (prev == current) {
-        prev = new_element;
-      }
-      if (current == list->last) {
-        list->last = new_element;
-      }
-    } else { // current extracted
-      prev->next = new_element;
-      if (ex_current_was_last) {
-        list->last = new_element;
-        ex_current_was_last = false;
+      // we're at a deleted
+      return ((list->empty()) || (current == list->First()) ||
+        ((current == nullptr) && (prev == list->last) && // NON-last pt between
+          !ex_current_was_last));                         // first and last
+    } // Current is first?
+      /***********************************************************************
+     *                          ELIST_ITERATOR::at_last()
+     *
+     *  Are we at the end of the list?
+     *
+     **********************************************************************/
+    bool at_last() const {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::at_last"", ABORT);
       }
-    }
-    next = new_element;
-  }
-}
-
-/***********************************************************************
- *                          ELIST_ITERATOR::add_before_then_move
- *
- *  Add a new element to the list before the current element and move the
- *  iterator to the new element.
- **********************************************************************/
+#endif
 
-inline void ELIST_ITERATOR::add_before_then_move( // element to add
-    ELIST_LINK *new_element) {
+      // we're at a deleted
+      return ((list->empty()) || (current == list->last) ||
+        ((current == nullptr) && (prev == list->last) && // last point between
+          ex_current_was_last));                          // first and last
+    } // Current is last?
+      /***********************************************************************
+     *                          ELIST_ITERATOR::cycled_list()
+     *
+     *  Have we returned to the cycle_pt since it was set?
+     *
+     **********************************************************************/
+    bool cycled_list() const {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST_ITERATOR::add_before_then_move"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::cycled_list"", ABORT);
+      }
 #endif
 
-  if (list->empty()) {
-    new_element->next = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-  } else {
-    prev->next = new_element;
-    if (current) { // not extracted
-      new_element->next = current;
-      next = current;
-    } else { // current extracted
-      new_element->next = next;
-      if (ex_current_was_last) {
-        list->last = new_element;
+      return ((list->empty()) || ((current == cycle_pt) && started_cycling));
+    } // Completed a cycle?
+      /***********************************************************************
+     *                          ELIST_ITERATOR::add_to_end
+     *
+     *  Add a new element to the end of the list without moving the iterator.
+     *  This is provided because a single linked list cannot move to the last as
+     *  the iterator couldn't set its prev pointer.  Adding to the end is
+     *  essential for implementing
+                  queues.
+    **********************************************************************/
+    void add_to_end(           // add at end &
+      CLASSNAME *new_element) {
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::add_to_end"", ABORT);
       }
-      if (ex_current_was_cycle_pt) {
-        cycle_pt = new_element;
+      if (!new_element) {
+        BAD_PARAMETER.error(""ELIST_ITERATOR::add_to_end"", ABORT, ""new_element is nullptr"");
       }
-    }
-  }
-  current = new_element;
-}
+      if (new_element->next) {
+        STILL_LINKED.error(""ELIST_ITERATOR::add_to_end"", ABORT);
+      }
+#endif
 
-/***********************************************************************
- *                          ELIST_ITERATOR::add_before_stay_put
- *
- *  Add a new element to the list before the current element but don't move the
- *  iterator to the new element.
- **********************************************************************/
+      if (this->at_last()) {
+        this->add_after_stay_put(new_element);
+      } else {
+        if (this->at_first()) {
+          this->add_before_stay_put(new_element);
+          list->last = new_element;
+        } else { // Iteratr is elsewhere
+          new_element->next = list->last->next;
+          list->last->next = new_element;
+          list->last = new_element;
+        }
+      }
+    } // don't move
+        /***********************************************************************
+     *              ELIST_ITERATOR::exchange()
+     *
+     *  Given another iterator, whose current element is a different element on
+     *  the same list list OR an element of another list, exchange the two current
+     *  elements.  On return, each iterator points to the element which was the
+     *  other iterators current on entry.
+     *  (This function hasn't been in-lined because its a bit big!)
+     **********************************************************************/
+    void exchange(                 // positions of 2 links
+      ITERATOR *other_it) { // other iterator
+      constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
+
+      CLASSNAME *old_current;
 
-inline void ELIST_ITERATOR::add_before_stay_put( // element to add
-    ELIST_LINK *new_element) {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);
-  }
+      if (!list)
+        NO_LIST.error(""ELIST_ITERATOR::exchange"", ABORT);
+      if (!other_it)
+        BAD_PARAMETER.error(""ELIST_ITERATOR::exchange"", ABORT, ""other_it nullptr"");
+      if (!(other_it->list))
+        NO_LIST.error(""ELIST_ITERATOR::exchange"", ABORT, ""other_it"");
 #endif
 
-  if (list->empty()) {
-    new_element->next = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-    ex_current_was_last = true;
-    current = nullptr;
-  } else {
-    prev->next = new_element;
-    if (current) { // not extracted
-      new_element->next = current;
-      if (next == current) {
-        next = new_element;
-      }
-    } else { // current extracted
-      new_element->next = next;
-      if (ex_current_was_last) {
-        list->last = new_element;
+      /* Do nothing if either list is empty or if both iterators reference the same
+    link */
+
+      if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {
+        return;
       }
-    }
-    prev = new_element;
-  }
-}
 
-/***********************************************************************
- *                          ELIST_ITERATOR::add_list_after
- *
- *  Insert another list to this list after the current element but don't move
- *the
- *  iterator.
- **********************************************************************/
+      /* Error if either current element is deleted */
 
-inline void ELIST_ITERATOR::add_list_after(ELIST *list_to_add) {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::add_list_after"", ABORT);
-  }
-  if (!list_to_add) {
-    BAD_PARAMETER.error(""ELIST_ITERATOR::add_list_after"", ABORT, ""list_to_add is nullptr"");
-  }
-#endif
+      if (!current || !other_it->current) {
+        DONT_EXCHANGE_DELETED.error(""ELIST_ITERATOR.exchange"", ABORT);
+      }
 
-  if (!list_to_add->empty()) {
-    if (list->empty()) {
-      list->last = list_to_add->last;
-      prev = list->last;
-      next = list->First();
-      ex_current_was_last = true;
-      current = nullptr;
-    } else {
-      if (current) { // not extracted
-        current->next = list_to_add->First();
-        if (current == list->last) {
-          list->last = list_to_add->last;
-        }
-        list_to_add->last->next = next;
-        next = current->next;
-      } else { // current extracted
-        prev->next = list_to_add->First();
-        if (ex_current_was_last) {
-          list->last = list_to_add->last;
-          ex_current_was_last = false;
+      /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements
+    (other before this); non-doubleton adjacent elements (this before other);
+    non-adjacent elements. */
+
+    // adjacent links
+      if ((next == other_it->current) || (other_it->next == current)) {
+        // doubleton list
+        if ((next == other_it->current) && (other_it->next == current)) {
+          prev = next = current;
+          other_it->prev = other_it->next = other_it->current;
+        } else { // non-doubleton with
+          // adjacent links
+          // other before this
+          if (other_it->next == current) {
+            other_it->prev->next = current;
+            other_it->current->next = next;
+            current->next = other_it->current;
+            other_it->next = other_it->current;
+            prev = current;
+          } else { // this before other
+            prev->next = other_it->current;
+            current->next = other_it->next;
+            other_it->current->next = current;
+            next = current;
+            other_it->prev = other_it->current;
+          }
         }
-        list_to_add->last->next = next;
-        next = prev->next;
+      } else { // no overlap
+        prev->next = other_it->current;
+        current->next = other_it->next;
+        other_it->prev->next = current;
+        other_it->current->next = next;
       }
-    }
-    list_to_add->last = nullptr;
-  }
-}
 
-/***********************************************************************
- *                          ELIST_ITERATOR::add_list_before
- *
- *  Insert another list to this list before the current element. Move the
- *  iterator to the start of the inserted elements
- *  iterator.
- **********************************************************************/
+      /* update end of list pointer when necessary (remember that the 2 iterators
+      may iterate over different lists!) */
 
-inline void ELIST_ITERATOR::add_list_before(ELIST *list_to_add) {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::add_list_before"", ABORT);
-  }
-  if (!list_to_add) {
-    BAD_PARAMETER.error(""ELIST_ITERATOR::add_list_before"", ABORT, ""list_to_add is nullptr"");
-  }
-#endif
+      if (list->last == current) {
+        list->last = other_it->current;
+      }
+      if (other_it->list->last == other_it->current) {
+        other_it->list->last = current;
+      }
 
-  if (!list_to_add->empty()) {
-    if (list->empty()) {
-      list->last = list_to_add->last;
-      prev = list->last;
-      current = list->First();
-      next = current->next;
-      ex_current_was_last = false;
-    } else {
-      prev->next = list_to_add->First();
-      if (current) { // not extracted
-        list_to_add->last->next = current;
-      } else { // current extracted
-        list_to_add->last->next = next;
-        if (ex_current_was_last) {
-          list->last = list_to_add->last;
-        }
-        if (ex_current_was_cycle_pt) {
-          cycle_pt = prev->next;
-        }
+      if (current == cycle_pt) {
+        cycle_pt = other_it->cycle_pt;
+      }
+      if (other_it->current == other_it->cycle_pt) {
+        other_it->cycle_pt = cycle_pt;
       }
-      current = prev->next;
-      next = current->next;
-    }
-    list_to_add->last = nullptr;
-  }
-}
 
-/***********************************************************************
- *                          ELIST_ITERATOR::extract
- *
- *  Do extraction by removing current from the list, returning it to the
- *  caller, but NOT updating the iterator.  (So that any calling loop can do
- *  this.)   The iterator's current points to nullptr.  If the extracted element
- *  is to be deleted, this is the callers responsibility.
- **********************************************************************/
+      /* The actual exchange - in all cases*/
 
-inline ELIST_LINK *ELIST_ITERATOR::extract() {
-  ELIST_LINK *extracted_link;
+      old_current = current;
+      current = other_it->current;
+      other_it->current = old_current;
+    } // other iterator
 
+      //# elements in list
+    int32_t length() const {
+      return list->length();
+    }
+    /***********************************************************************
+   *                          ELIST_ITERATOR::sort()
+   *
+   *  Sort the elements of the list, then reposition at the start.
+   *
+   **********************************************************************/
+    void sort(          // sort elements
+      int comparator( // comparison routine
+        const void *, const void *)) {
 #ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::extract"", ABORT);
-  }
-  if (!current) { // list empty or
-                  // element extracted
-    NULL_CURRENT.error(""ELIST_ITERATOR::extract"", ABORT);
-  }
+      if (!list) {
+        NO_LIST.error(""ELIST_ITERATOR::sort"", ABORT);
+      }
 #endif
 
-  if (list->singleton()) {
-    // Special case where we do need to change the iterator.
-    prev = next = list->last = nullptr;
-  } else {
-    prev->next = next; // remove from list
-
-    ex_current_was_last = (current == list->last);
-    if (ex_current_was_last) {
-      list->last = prev;
+      list->sort(comparator);
+      move_to_first();
     }
+  };
+
+
+private:
+  CLASSNAME *last = nullptr; // End of list
+  //(Points to head)
+  CLASSNAME *First() { // return first
+    return last ? last->next : nullptr;
   }
-  // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.
-  ex_current_was_cycle_pt = (current == cycle_pt);
-  extracted_link = current;
-  extracted_link->next = nullptr; // for safety
-  current = nullptr;
-  return extracted_link;
-}
-
-/***********************************************************************
- *                          ELIST_ITERATOR::move_to_first()
- *
- *  Move current so that it is set to the start of the list.
- *  Return data just in case anyone wants it.
- **********************************************************************/
 
-inline ELIST_LINK *ELIST_ITERATOR::move_to_first() {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::move_to_first"", ABORT);
+public:
+  ~ELIST() {
+    clear();
   }
-#endif
 
-  current = list->First();
-  prev = list->last;
-  next = current ? current->next : nullptr;
-  return current;
-}
+  /* delete elements */
+  void clear() {
+    internal_clear();
+  }
 
-/***********************************************************************
- *                          ELIST_ITERATOR::mark_cycle_pt()
- *
- *  Remember the current location so that we can tell whether we've returned
- *  to this point later.
- *
- *  If the current point is deleted either now, or in the future, the cycle
- *  point will be set to the next item which is set to current.  This could be
- *  by a forward, add_after_then_move or add_after_then_move.
- **********************************************************************/
+  /* Become a deep copy of src_list */
+  template <typename U>
+  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {
+    ITERATOR from_it(const_cast<U *>(src_list));
+    ITERATOR to_it(this);
 
-inline void ELIST_ITERATOR::mark_cycle_pt() {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::mark_cycle_pt"", ABORT);
+    for (from_it.mark_cycle_pt(); !from_it.cycled_list(); from_it.forward())
+      to_it.add_after_then_move((*copier)(from_it.data()));
   }
-#endif
 
-  if (current) {
-    cycle_pt = current;
-  } else {
-    ex_current_was_cycle_pt = true;
+  /***********************************************************************
+   *              ELIST::internal_clear
+   *
+   *  Used by the destructor and the ""clear"" member function of derived list
+   *  classes to destroy all the elements on the list.
+   *  The calling function passes a ""zapper"" function which can be called to
+   *  delete each element of the list, regardless of its derived type.  This
+   *  technique permits a generic clear function to destroy elements of
+   *  different derived types correctly, without requiring virtual functions and
+   *  the consequential memory overhead.
+   **********************************************************************/
+
+   // destroy all links
+  void internal_clear() {
+    CLASSNAME *ptr;
+    CLASSNAME *next;
+
+    if (!empty()) {
+      ptr = last->next;     // set to first
+      last->next = nullptr; // break circle
+      last = nullptr;       // set list empty
+      while (ptr) {
+        next = ptr->next;
+        delete ptr;
+        ptr = next;
+      }
+    }
   }
-  started_cycling = false;
-}
 
-/***********************************************************************
- *                          ELIST_ITERATOR::at_first()
- *
- *  Are we at the start of the list?
- *
- **********************************************************************/
+  bool empty() const {
+    return !last;
+  }
 
-inline bool ELIST_ITERATOR::at_first() const {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::at_first"", ABORT);
+  bool singleton() const {
+    return last ? (last == last->next) : false;
   }
-#endif
 
-  // we're at a deleted
-  return ((list->empty()) || (current == list->First()) ||
-          ((current == nullptr) && (prev == list->last) && // NON-last pt between
-           !ex_current_was_last));                         // first and last
-}
+  void shallow_copy(      // dangerous!!
+    ELIST *from_list) { // beware destructors!!
+    last = from_list->last;
+  }
 
-/***********************************************************************
- *                          ELIST_ITERATOR::at_last()
- *
- *  Are we at the end of the list?
+  /***********************************************************************
+ *              ELIST::assign_to_sublist
  *
+ *  The list is set to a sublist of another list.  ""This"" list must be empty
+ *  before this function is invoked.  The two iterators passed must refer to
+ *  the same list, different from ""this"" one.  The sublist removed is the
+ *  inclusive list from start_it's current position to end_it's current
+ *  position.  If this range passes over the end of the source list then the
+ *  source list has its end set to the previous element of start_it.  The
+ *  extracted sublist is unaffected by the end point of the source list, its
+ *  end point is always the end_it position.
  **********************************************************************/
+  void assign_to_sublist(       // to this list
+    ITERATOR *start_it, // from list start
+    ITERATOR *end_it) {  // from list end
+    constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");
 
-inline bool ELIST_ITERATOR::at_last() const {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::at_last"", ABORT);
-  }
-#endif
-
-  // we're at a deleted
-  return ((list->empty()) || (current == list->last) ||
-          ((current == nullptr) && (prev == list->last) && // last point between
-           ex_current_was_last));                          // first and last
-}
+    if (!empty()) {
+      LIST_NOT_EMPTY.error(""ELIST.assign_to_sublist"", ABORT);
+    }
 
-/***********************************************************************
- *                          ELIST_ITERATOR::cycled_list()
- *
- *  Have we returned to the cycle_pt since it was set?
- *
- **********************************************************************/
+    last = start_it->extract_sublist(end_it);
+  }  // from list end
 
-inline bool ELIST_ITERATOR::cycled_list() const {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::cycled_list"", ABORT);
+    // # elements in list
+  int32_t length() const {
+    int32_t count = 0;
+    if (last != nullptr) {
+      count = 1;
+      for (auto it = last->next; it != last; it = it->next) {
+        count++;
+      }
+    }
+    return count;
   }
-#endif
 
-  return ((list->empty()) || ((current == cycle_pt) && started_cycling));
-}
-
-/***********************************************************************
- *                          ELIST_ITERATOR::sort()
- *
- *  Sort the elements of the list, then reposition at the start.
+  /***********************************************************************
+ *              ELIST::sort
  *
+ *  Sort elements on list
+ *  NB If you don't like the const declarations in the comparator, coerce yours:
+ *   ( int (*)(const void *, const void *)
  **********************************************************************/
+  void sort(          // sort elements
+    int comparator( // comparison routine
+      const void *, const void *)) {
+    // Allocate an array of pointers, one per list element.
+    auto count = length();
 
-inline void ELIST_ITERATOR::sort( // sort elements
-    int comparator(               // comparison routine
-        const void *, const void *)) {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::sort"", ABORT);
-  }
-#endif
+    if (count > 0) {
+      // ptr array to sort
+      std::vector<CLASSNAME *> base;
+      base.reserve(count);
 
-  list->sort(comparator);
-  move_to_first();
-}
+      ITERATOR it(this);
 
-/***********************************************************************
- *                          ELIST_ITERATOR::add_to_end
- *
- *  Add a new element to the end of the list without moving the iterator.
- *  This is provided because a single linked list cannot move to the last as
- *  the iterator couldn't set its prev pointer.  Adding to the end is
- *  essential for implementing
-              queues.
-**********************************************************************/
+      // Extract all elements, putting the pointers in the array.
+      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
+        base.push_back(it.extract());
+      }
 
-inline void ELIST_ITERATOR::add_to_end( // element to add
-    ELIST_LINK *new_element) {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""ELIST_ITERATOR::add_to_end"", ABORT);
-  }
-  if (!new_element) {
-    BAD_PARAMETER.error(""ELIST_ITERATOR::add_to_end"", ABORT, ""new_element is nullptr"");
-  }
-  if (new_element->next) {
-    STILL_LINKED.error(""ELIST_ITERATOR::add_to_end"", ABORT);
+      // Sort the pointer array.
+      qsort(&base[0], count, sizeof(base[0]), comparator);
+
+      // Rebuild the list from the sorted pointers.
+      for (auto current : base) {
+        it.add_to_end(current);
+      }
+    }
   }
-#endif
 
-  if (this->at_last()) {
-    this->add_after_stay_put(new_element);
-  } else {
-    if (this->at_first()) {
-      this->add_before_stay_put(new_element);
-      list->last = new_element;
-    } else { // Iteratr is elsewhere
-      new_element->next = list->last->next;
-      list->last->next = new_element;
-      list->last = new_element;
+  // Assuming list has been sorted already, insert new_link to
+  // keep the list sorted according to the same comparison function.
+  // Comparison function is the same as used by sort, i.e. uses double
+  // indirection. Time is O(1) to add to beginning or end.
+  // Time is linear to add pre-sorted items to an empty list.
+  // If unique is set to true and comparator() returns 0 (an entry with the
+  // same information as the one contained in new_link is already in the
+  // list) - new_link is not added to the list and the function returns the
+  // pointer to the identical entry that already exists in the list
+  // (otherwise the function returns new_link).
+  CLASSNAME *add_sorted_and_find(int comparator(const void *, const void *), bool unique,
+    CLASSNAME *new_link) {
+    // Check for adding at the end.
+    if (last == nullptr || comparator(&last, &new_link) < 0) {
+      if (last == nullptr) {
+        new_link->next = new_link;
+      } else {
+        new_link->next = last->next;
+        last->next = new_link;
+      }
+      last = new_link;
+    } else {
+      // Need to use an iterator.
+      ITERATOR it(this);
+      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
+        auto *link = it.data();
+        int compare = comparator(&link, &new_link);
+        if (compare > 0) {
+          break;
+        } else if (unique && compare == 0) {
+          return link;
+        }
+      }
+      if (it.cycled_list()) {
+        it.add_to_end(new_link);
+      } else {
+        it.add_before_then_move(new_link);
+      }
     }
+    return new_link;
+  }
+
+  // Same as above, but returns true if the new entry was inserted, false
+  // if the identical entry already existed in the list.
+  bool add_sorted(int comparator(const void *, const void *), bool unique, CLASSNAME *new_link) {
+    return (add_sorted_and_find(comparator, unique, new_link) == new_link);
   }
-}
-
-#define ELISTIZEH(CLASSNAME)                                                 \
-  class CLASSNAME##_LIST : public X_LIST<ELIST, ELIST_ITERATOR, CLASSNAME> { \
-    using X_LIST<ELIST, ELIST_ITERATOR, CLASSNAME>::X_LIST;                  \
-  };                                                                         \
-  class CLASSNAME##_IT : public X_ITER<ELIST_ITERATOR, CLASSNAME> {          \
-    using X_ITER<ELIST_ITERATOR, CLASSNAME>::X_ITER;                         \
+};
+
+// add TESS_API?
+// move templated lists to public include dirs?
+#define ELISTIZEH(CLASSNAME)                                                  \
+  struct CLASSNAME##_LIST : ELIST<CLASSNAME> {                          \
+    using ELIST<CLASSNAME>::ELIST;                                            \
+  };                  \
+  struct CLASSNAME##_IT : ELIST<CLASSNAME>::ITERATOR {            \
+    using base = ELIST<CLASSNAME>::ITERATOR;          \
+    using base::base;                   \
   };
 
 } // namespace tesseract
","{'added': [(75, 'template <typename CLASSNAME>'), (76, 'class ELIST {'), (79, '  /**********************************************************************'), (80, '   *                          CLASS - ELIST_LINK'), (81, '   *'), (82, '   *                          Generic link class for singly linked lists with'), (83, '   *embedded links'), (84, '   *'), (85, '   *  Note:  No destructor - elements are assumed to be destroyed EITHER after'), (86, '   *  they have been extracted from a list OR by the ELIST destructor which'), (87, '   *  walks the list.'), (88, '   **********************************************************************/'), (89, ''), (90, '  class LINK {'), (91, '    friend class ITERATOR;'), (92, '    friend class ELIST;'), (93, ''), (94, '    CLASSNAME *next;'), (95, ''), (96, '  public:'), (97, '    LINK() {'), (98, '      next = nullptr;'), (100, '    // constructor'), (102, '    // The special copy constructor is used by lots of classes.'), (103, '    LINK(const LINK &) {'), (104, '      next = nullptr;'), (105, '    }'), (107, '    // The special assignment operator is used by lots of classes.'), (108, '    void operator=(const LINK &) {'), (109, '      next = nullptr;'), (110, '    }'), (111, '  };'), (114, '  /***********************************************************************'), (115, '   *                          CLASS - ELIST_ITERATOR'), (116, '   *'), (117, '   *                          Generic iterator class for singly linked lists with'), (118, '   *embedded links'), (119, '   **********************************************************************/'), (120, ''), (121, '  class ITERATOR {'), (122, '    friend void ELIST::assign_to_sublist(ITERATOR *, ITERATOR *);'), (123, ''), (124, '    ELIST *list;                  // List being iterated'), (125, '    CLASSNAME *prev;             // prev element'), (126, '    CLASSNAME *current;          // current element'), (127, '    CLASSNAME *next;             // next element'), (128, '    CLASSNAME *cycle_pt;         // point we are cycling the list to.'), (129, '    bool ex_current_was_last;     // current extracted was end of list'), (130, '    bool ex_current_was_cycle_pt; // current extracted was cycle point'), (131, '    bool started_cycling;         // Have we moved off the start?'), (132, '    /***********************************************************************'), (133, '   *              ITERATOR::extract_sublist()'), (134, '   *'), (135, '   *  This is a private member, used only by ELIST::assign_to_sublist.'), (136, '   *  Given another iterator for the same list, extract the links from THIS to'), (137, '   *  OTHER inclusive, link them into a new circular list, and return a'), (138, '   *  pointer to the last element.'), (139, ""   *  (Can't inline this function because it contains a loop)""), (140, '   **********************************************************************/'), (141, '    CLASSNAME *extract_sublist(   // from this current...'), (142, '      ITERATOR *other_it) {              // to other current'), (143, '#ifndef NDEBUG'), (144, '      constexpr ERRCODE BAD_EXTRACTION_PTS(""Can\'t extract sublist from points on different lists"");'), (145, '      constexpr ERRCODE DONT_EXTRACT_DELETED(""Can\'t extract a sublist marked by deleted points"");'), (146, '#endif'), (147, '      constexpr ERRCODE BAD_SUBLIST(""Can\'t find sublist end point in original list"");'), (149, '      ITERATOR temp_it = *this;'), (150, '      CLASSNAME *end_of_new_list;'), (152, '#ifndef NDEBUG'), (153, '      if (!other_it)'), (154, '        BAD_PARAMETER.error(""ELIST_ITERATOR::extract_sublist"", ABORT, ""other_it nullptr"");'), (155, '      if (!list)'), (156, '        NO_LIST.error(""ELIST_ITERATOR::extract_sublist"", ABORT);'), (157, '      if (list != other_it->list)'), (158, '        BAD_EXTRACTION_PTS.error(""ELIST_ITERATOR.extract_sublist"", ABORT);'), (159, '      if (list->empty())'), (160, '        EMPTY_LIST.error(""ELIST_ITERATOR::extract_sublist"", ABORT);'), (161, ''), (162, '      if (!current || !other_it->current)'), (163, '        DONT_EXTRACT_DELETED.error(""ELIST_ITERATOR.extract_sublist"", ABORT);'), (164, '#endif'), (166, '      ex_current_was_last = other_it->ex_current_was_last = false;'), (167, '      ex_current_was_cycle_pt = false;'), (168, '      other_it->ex_current_was_cycle_pt = false;'), (170, '      temp_it.mark_cycle_pt();'), (171, '      do {                         // walk sublist'), (172, ""        if (temp_it.cycled_list()) { // can't find end pt""), (173, '          BAD_SUBLIST.error(""ITERATOR.extract_sublist"", ABORT);'), (174, '        }'), (176, '        if (temp_it.at_last()) {'), (177, '          list->last = prev;'), (178, '          ex_current_was_last = other_it->ex_current_was_last = true;'), (179, '        }'), (181, '        if (temp_it.current == cycle_pt) {'), (182, '          ex_current_was_cycle_pt = true;'), (183, '        }'), (185, '        if (temp_it.current == other_it->cycle_pt) {'), (186, '          other_it->ex_current_was_cycle_pt = true;'), (187, '        }'), (189, '        temp_it.forward();'), (190, '      } while (temp_it.prev != other_it->current);'), (191, ''), (192, '      // circularise sublist'), (193, '      other_it->current->next = current;'), (194, '      end_of_new_list = other_it->current;'), (195, ''), (196, '      // sublist = whole list'), (197, '      if (prev == other_it->current) {'), (198, '        list->last = nullptr;'), (199, '        prev = current = next = nullptr;'), (200, '        other_it->prev = other_it->current = other_it->next = nullptr;'), (201, '      } else {'), (202, '        prev->next = other_it->next;'), (203, '        current = other_it->current = nullptr;'), (204, '        next = other_it->next;'), (205, '        other_it->prev = prev;'), (206, '      }'), (207, '      return end_of_new_list;'), (208, '    } // to other current'), (209, ''), (210, '  public:'), (211, '    ITERATOR() { // constructor'), (212, '      list = nullptr;'), (213, '    } // unassigned list'), (214, '    /***********************************************************************'), (215, '   *                          ELIST_ITERATOR::ELIST_ITERATOR'), (216, '   *'), (217, '   *  CONSTRUCTOR - set iterator to specified list;'), (218, '   **********************************************************************/'), (219, '    ITERATOR(ELIST *list_to_iterate) {'), (220, '      set_to_list(list_to_iterate);'), (222, '    /***********************************************************************'), (223, '   *                          ELIST_ITERATOR::set_to_list'), (224, '   *'), (225, '   *  (Re-)initialise the iterator to point to the start of the list_to_iterate'), (226, '   *  over.'), (227, '   **********************************************************************/'), (228, '    void set_to_list( // change list'), (229, '      ELIST *list_to_iterate) {'), (230, '#ifndef NDEBUG'), (231, '      if (!list_to_iterate) {'), (232, '        BAD_PARAMETER.error(""ELIST_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");'), (233, '      }'), (234, '#endif'), (235, ''), (236, '      list = list_to_iterate;'), (237, '      prev = list->last;'), (238, '      current = list->First();'), (239, '      next = current ? current->next : nullptr;'), (240, '      cycle_pt = nullptr; // await explicit set'), (241, '      started_cycling = false;'), (242, '      ex_current_was_last = false;'), (243, '      ex_current_was_cycle_pt = false;'), (245, '    /***********************************************************************'), (246, '   *                          ELIST_ITERATOR::add_after_then_move'), (247, '   *'), (248, '   *  Add a new element to the list after the current element and move the'), (249, '   *  iterator to the new element.'), (250, '   **********************************************************************/'), (251, '    void add_after_then_move(  // add after current &'), (252, '      CLASSNAME *new_element) {'), (253, '#ifndef NDEBUG'), (254, '      if (!list) {'), (255, '        NO_LIST.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);'), (256, '      }'), (257, '      if (!new_element) {'), (258, '        BAD_PARAMETER.error(""ELIST_ITERATOR::add_after_then_move"", ABORT, ""new_element is nullptr"");'), (259, '      }'), (260, '      if (new_element->next) {'), (261, '        STILL_LINKED.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);'), (262, '      }'), (265, '      if (list->empty()) {'), (266, '        new_element->next = new_element;'), (267, '        list->last = new_element;'), (268, '        prev = next = new_element;'), (269, '      } else {'), (270, '        new_element->next = next;'), (271, ''), (272, '        if (current) { // not extracted'), (273, '          current->next = new_element;'), (274, '          prev = current;'), (275, '          if (current == list->last) {'), (276, '            list->last = new_element;'), (277, '          }'), (278, '        } else { // current extracted'), (279, '          prev->next = new_element;'), (280, '          if (ex_current_was_last) {'), (281, '            list->last = new_element;'), (282, '          }'), (283, '          if (ex_current_was_cycle_pt) {'), (284, '            cycle_pt = new_element;'), (285, '          }'), (286, '        }'), (287, '      }'), (288, '      current = new_element;'), (289, '    } // move to new'), (290, '      /***********************************************************************'), (291, '     *                          ELIST_ITERATOR::add_after_stay_put'), (292, '     *'), (293, '     *  Add a new element to the list after the current element but do not move'), (294, '     *  the iterator to the new element.'), (295, '     **********************************************************************/'), (296, '    void add_after_stay_put(   // add after current &'), (297, '      CLASSNAME *new_element) {'), (298, '#ifndef NDEBUG'), (299, '      if (!list) {'), (300, '        NO_LIST.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);'), (301, '      }'), (302, '      if (!new_element) {'), (303, '        BAD_PARAMETER.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT, ""new_element is nullptr"");'), (304, '      }'), (305, '      if (new_element->next) {'), (306, '        STILL_LINKED.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);'), (307, '      }'), (308, '#endif'), (310, '      if (list->empty()) {'), (311, '        new_element->next = new_element;'), (312, '        list->last = new_element;'), (313, '        prev = next = new_element;'), (314, '        ex_current_was_last = false;'), (315, '        current = nullptr;'), (316, '      } else {'), (317, '        new_element->next = next;'), (318, ''), (319, '        if (current) { // not extracted'), (320, '          current->next = new_element;'), (321, '          if (prev == current) {'), (322, '            prev = new_element;'), (323, '          }'), (324, '          if (current == list->last) {'), (325, '            list->last = new_element;'), (326, '          }'), (327, '        } else { // current extracted'), (328, '          prev->next = new_element;'), (329, '          if (ex_current_was_last) {'), (330, '            list->last = new_element;'), (331, '            ex_current_was_last = false;'), (332, '          }'), (333, '        }'), (334, '        next = new_element;'), (335, '      }'), (336, '    } // stay at current'), (337, '      /***********************************************************************'), (338, '     *                          ELIST_ITERATOR::add_before_then_move'), (339, '     *'), (340, '     *  Add a new element to the list before the current element and move the'), (341, '     *  iterator to the new element.'), (342, '     **********************************************************************/'), (343, '    void add_before_then_move( // add before current &'), (344, '      CLASSNAME *new_element) {'), (345, '#ifndef NDEBUG'), (346, '      if (!list) {'), (347, '        NO_LIST.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);'), (348, '      }'), (349, '      if (!new_element) {'), (350, '        BAD_PARAMETER.error(""ELIST_ITERATOR::add_before_then_move"", ABORT, ""new_element is nullptr"");'), (351, '      }'), (352, '      if (new_element->next) {'), (353, '        STILL_LINKED.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);'), (354, '      }'), (355, '#endif'), (357, '      if (list->empty()) {'), (358, '        new_element->next = new_element;'), (359, '        list->last = new_element;'), (360, '        prev = next = new_element;'), (361, '      } else {'), (362, '        prev->next = new_element;'), (363, '        if (current) { // not extracted'), (364, '          new_element->next = current;'), (365, '          next = current;'), (366, '        } else { // current extracted'), (367, '          new_element->next = next;'), (368, '          if (ex_current_was_last) {'), (369, '            list->last = new_element;'), (370, '          }'), (371, '          if (ex_current_was_cycle_pt) {'), (372, '            cycle_pt = new_element;'), (373, '          }'), (374, '        }'), (375, '      }'), (376, '      current = new_element;'), (377, '    } // move to new'), (378, '      /***********************************************************************'), (379, '     *                          ELIST_ITERATOR::add_before_stay_put'), (380, '     *'), (381, ""     *  Add a new element to the list before the current element but don't move the""), (382, '     *  iterator to the new element.'), (383, '     **********************************************************************/'), (384, '    void add_before_stay_put(  // add before current &'), (385, '      CLASSNAME *new_element) {'), (386, '#ifndef NDEBUG'), (387, '      if (!list) {'), (388, '        NO_LIST.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);'), (389, '      }'), (390, '      if (!new_element) {'), (391, '        BAD_PARAMETER.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT, ""new_element is nullptr"");'), (392, '      }'), (393, '      if (new_element->next) {'), (394, '        STILL_LINKED.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);'), (395, '      }'), (396, '#endif'), (398, '      if (list->empty()) {'), (399, '        new_element->next = new_element;'), (400, '        list->last = new_element;'), (401, '        prev = next = new_element;'), (402, '        ex_current_was_last = true;'), (403, '        current = nullptr;'), (404, '      } else {'), (405, '        prev->next = new_element;'), (406, '        if (current) { // not extracted'), (407, '          new_element->next = current;'), (408, '          if (next == current) {'), (409, '            next = new_element;'), (410, '          }'), (411, '        } else { // current extracted'), (412, '          new_element->next = next;'), (413, '          if (ex_current_was_last) {'), (414, '            list->last = new_element;'), (415, '          }'), (416, '        }'), (417, '        prev = new_element;'), (418, '      }'), (419, '    } // stay at current'), (420, '      /***********************************************************************'), (421, '     *                          ELIST_ITERATOR::add_list_after'), (422, '     *'), (423, ""     *  Insert another list to this list after the current element but don't move""), (424, '     *the'), (425, '     *  iterator.'), (426, '     **********************************************************************/'), (427, '    void add_list_after(     // add a list &'), (428, '      ELIST *list_to_add) {'), (429, '#ifndef NDEBUG'), (430, '      if (!list) {'), (431, '        NO_LIST.error(""ELIST_ITERATOR::add_list_after"", ABORT);'), (432, '      }'), (433, '      if (!list_to_add) {'), (434, '        BAD_PARAMETER.error(""ELIST_ITERATOR::add_list_after"", ABORT, ""list_to_add is nullptr"");'), (435, '      }'), (436, '#endif'), (438, '      if (!list_to_add->empty()) {'), (439, '        if (list->empty()) {'), (440, '          list->last = list_to_add->last;'), (441, '          prev = list->last;'), (442, '          next = list->First();'), (443, '          ex_current_was_last = true;'), (444, '          current = nullptr;'), (445, '        } else {'), (446, '          if (current) { // not extracted'), (447, '            current->next = list_to_add->First();'), (448, '            if (current == list->last) {'), (449, '              list->last = list_to_add->last;'), (450, '            }'), (451, '            list_to_add->last->next = next;'), (452, '            next = current->next;'), (453, '          } else { // current extracted'), (454, '            prev->next = list_to_add->First();'), (455, '            if (ex_current_was_last) {'), (456, '              list->last = list_to_add->last;'), (457, '              ex_current_was_last = false;'), (458, '            }'), (459, '            list_to_add->last->next = next;'), (460, '            next = prev->next;'), (461, '          }'), (462, '        }'), (463, '        list_to_add->last = nullptr;'), (464, '      }'), (465, '    } // stay at current'), (466, '      /***********************************************************************'), (467, '     *                          ELIST_ITERATOR::add_list_before'), (468, '     *'), (469, '     *  Insert another list to this list before the current element. Move the'), (470, '     *  iterator to the start of the inserted elements'), (471, '     *  iterator.'), (472, '     **********************************************************************/'), (473, '    void add_list_before(    // add a list &'), (474, '      ELIST *list_to_add) {'), (475, '#ifndef NDEBUG'), (476, '      if (!list) {'), (477, '        NO_LIST.error(""ELIST_ITERATOR::add_list_before"", ABORT);'), (478, '      }'), (479, '      if (!list_to_add) {'), (480, '        BAD_PARAMETER.error(""ELIST_ITERATOR::add_list_before"", ABORT, ""list_to_add is nullptr"");'), (481, '      }'), (482, '#endif'), (484, '      if (!list_to_add->empty()) {'), (485, '        if (list->empty()) {'), (486, '          list->last = list_to_add->last;'), (487, '          prev = list->last;'), (488, '          current = list->First();'), (489, '          next = current->next;'), (490, '          ex_current_was_last = false;'), (491, '        } else {'), (492, '          prev->next = list_to_add->First();'), (493, '          if (current) { // not extracted'), (494, '            list_to_add->last->next = current;'), (495, '          } else { // current extracted'), (496, '            list_to_add->last->next = next;'), (497, '            if (ex_current_was_last) {'), (498, '              list->last = list_to_add->last;'), (499, '            }'), (500, '            if (ex_current_was_cycle_pt) {'), (501, '              cycle_pt = prev->next;'), (502, '            }'), (503, '          }'), (504, '          current = prev->next;'), (505, '          next = current->next;'), (506, '        }'), (507, '        list_to_add->last = nullptr;'), (508, '      }'), (509, '    } // move to it 1st item'), (511, '    CLASSNAME *data() { // get current data'), (513, '      if (!list) {'), (514, '        NO_LIST.error(""ELIST_ITERATOR::data"", ABORT);'), (515, '      }'), (516, '      if (!current) {'), (517, '        NULL_DATA.error(""ELIST_ITERATOR::data"", ABORT);'), (518, '      }'), (520, '      return current;'), (521, '    }'), (522, '    /***********************************************************************'), (523, '   *              ELIST_ITERATOR::data_relative'), (524, '   *'), (525, '   *  Return the data pointer to the element ""offset"" elements from current.'), (526, '   *  ""offset"" must not be less than -1.'), (527, ""   *  (This function can't be INLINEd because it contains a loop)""), (528, '   **********************************************************************/'), (529, '    CLASSNAME *data_relative( // get data + or - ...'), (530, '      int8_t offset) {                       // offset from current'), (531, '      CLASSNAME *ptr;'), (533, '#ifndef NDEBUG'), (534, '      if (!list)'), (535, '        NO_LIST.error(""ELIST_ITERATOR::data_relative"", ABORT);'), (536, '      if (list->empty())'), (537, '        EMPTY_LIST.error(""ELIST_ITERATOR::data_relative"", ABORT);'), (538, '      if (offset < -1)'), (539, '        BAD_PARAMETER.error(""ELIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");'), (540, '#endif'), (542, '      if (offset == -1) {'), (543, '        ptr = prev;'), (544, '      } else {'), (545, '        for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {'), (546, '          ;'), (547, '        }'), (548, '      }'), (550, '#ifndef NDEBUG'), (551, '      if (!ptr)'), (552, '        NULL_DATA.error(""ELIST_ITERATOR::data_relative"", ABORT);'), (553, '#endif'), (555, '      return ptr;'), (556, '    }        // offset from current'), (557, '      /***********************************************************************'), (558, '     *              ELIST_ITERATOR::forward'), (559, '     *'), (560, '     *  Move the iterator to the next element of the list.'), (561, '     *  REMEMBER: ALL LISTS ARE CIRCULAR.'), (562, '     **********************************************************************/'), (563, '    CLASSNAME *forward() {'), (564, '#ifndef NDEBUG'), (565, '      if (!list)'), (566, '        NO_LIST.error(""ELIST_ITERATOR::forward"", ABORT);'), (567, '#endif'), (568, '      if (list->empty()) {'), (569, '        return nullptr;'), (570, '      }'), (572, '      if (current) { // not removed so'), (573, '        // set previous'), (574, '        prev = current;'), (575, '        started_cycling = true;'), (576, '        // In case next is deleted by another iterator, get next from current.'), (577, '        current = current->next;'), (578, '      } else {'), (579, '        if (ex_current_was_cycle_pt) {'), (580, '          cycle_pt = next;'), (581, '        }'), (582, '        current = next;'), (583, '      }'), (584, '#ifndef NDEBUG'), (585, '      if (!current)'), (586, '        NULL_DATA.error(""ELIST_ITERATOR::forward"", ABORT);'), (587, '#endif'), (588, '      next = current->next;'), (590, '#ifndef NDEBUG'), (591, '      if (!next) {'), (592, '        NULL_NEXT.error(""ELIST_ITERATOR::forward"", ABORT,'), (593, '          ""This is: %p  Current is: %p"",'), (594, '          static_cast<void *>(this),'), (595, '          static_cast<void *>(current));'), (596, '      }'), (597, '#endif'), (598, '      return current;'), (599, '    } // move to next element'), (600, ''), (601, '      /***********************************************************************'), (602, '     *                          ELIST_ITERATOR::extract'), (603, '     *'), (604, '     *  Do extraction by removing current from the list, returning it to the'), (605, '     *  caller, but NOT updating the iterator.  (So that any calling loop can do'), (606, ""     *  this.)   The iterator's current points to nullptr.  If the extracted element""), (607, '     *  is to be deleted, this is the callers responsibility.'), (608, '     **********************************************************************/'), (609, '    CLASSNAME *extract() {'), (610, '      CLASSNAME *extracted_link;'), (612, '#ifndef NDEBUG'), (613, '      if (!list) {'), (614, '        NO_LIST.error(""ELIST_ITERATOR::extract"", ABORT);'), (615, '      }'), (616, '      if (!current) { // list empty or'), (617, '        // element extracted'), (618, '        NULL_CURRENT.error(""ELIST_ITERATOR::extract"", ABORT);'), (619, '      }'), (620, '#endif'), (622, '      if (list->singleton()) {'), (623, '        // Special case where we do need to change the iterator.'), (624, '        prev = next = list->last = nullptr;'), (625, '      } else {'), (626, '        prev->next = next; // remove from list'), (628, '        ex_current_was_last = (current == list->last);'), (629, '        if (ex_current_was_last) {'), (630, '          list->last = prev;'), (631, '        }'), (632, '      }'), (633, '      // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.'), (634, '      ex_current_was_cycle_pt = (current == cycle_pt);'), (635, '      extracted_link = current;'), (636, '      extracted_link->next = nullptr; // for safety'), (637, '      current = nullptr;'), (638, '      return extracted_link;'), (639, '    }  // remove from list'), (640, '      /***********************************************************************'), (641, '     *                          ELIST_ITERATOR::move_to_first()'), (642, '     *'), (643, '     *  Move current so that it is set to the start of the list.'), (644, '     *  Return data just in case anyone wants it.'), (645, '     **********************************************************************/'), (646, '    CLASSNAME *move_to_first() {'), (648, '      if (!list) {'), (649, '        NO_LIST.error(""ELIST_ITERATOR::move_to_first"", ABORT);'), (650, '      }'), (653, '      current = list->First();'), (654, '      prev = list->last;'), (655, '      next = current ? current->next : nullptr;'), (656, '      return current;'), (657, '    } // go to start of list'), (658, '      /***********************************************************************'), (659, '     *              ELIST_ITERATOR::move_to_last()'), (660, '     *'), (661, '     *  Move current so that it is set to the end of the list.'), (662, '     *  Return data just in case anyone wants it.'), (663, ""     *  (This function can't be INLINEd because it contains a loop)""), (664, '     **********************************************************************/'), (665, '    CLASSNAME *move_to_last() {'), (666, '#ifndef NDEBUG'), (667, '      if (!list)'), (668, '        NO_LIST.error(""ELIST_ITERATOR::move_to_last"", ABORT);'), (669, '#endif'), (671, '      while (current != list->last) {'), (672, '        forward();'), (673, '      }'), (675, '      return current;'), (676, '    } // go to end of list'), (677, '      /***********************************************************************'), (678, '     *                          ELIST_ITERATOR::mark_cycle_pt()'), (679, '     *'), (680, ""     *  Remember the current location so that we can tell whether we've returned""), (681, '     *  to this point later.'), (682, '     *'), (683, '     *  If the current point is deleted either now, or in the future, the cycle'), (684, '     *  point will be set to the next item which is set to current.  This could be'), (685, '     *  by a forward, add_after_then_move or add_after_then_move.'), (686, '     **********************************************************************/'), (687, '    void mark_cycle_pt() {'), (689, '      if (!list) {'), (690, '        NO_LIST.error(""ELIST_ITERATOR::mark_cycle_pt"", ABORT);'), (691, '      }'), (694, '      if (current) {'), (695, '        cycle_pt = current;'), (696, '      } else {'), (697, '        ex_current_was_cycle_pt = true;'), (699, '      started_cycling = false;'), (700, '    } // remember current'), (701, ''), (702, '    bool empty() const { // is list empty?'), (703, '#ifndef NDEBUG'), (704, '      if (!list) {'), (705, '        NO_LIST.error(""ELIST_ITERATOR::empty"", ABORT);'), (707, '#endif'), (708, '      return list->empty();'), (711, '    bool current_extracted() const { // current extracted?'), (712, '      return !current;'), (713, '    }'), (714, '    /***********************************************************************'), (715, '   *                          ELIST_ITERATOR::at_first()'), (716, '   *'), (717, '   *  Are we at the start of the list?'), (718, '   *'), (719, '   **********************************************************************/'), (720, '    bool at_first() const {'), (722, '      if (!list) {'), (723, '        NO_LIST.error(""ELIST_ITERATOR::at_first"", ABORT);'), (724, '      }'), (727, ""      // we're at a deleted""), (728, '      return ((list->empty()) || (current == list->First()) ||'), (729, '        ((current == nullptr) && (prev == list->last) && // NON-last pt between'), (730, '          !ex_current_was_last));                         // first and last'), (731, '    } // Current is first?'), (732, '      /***********************************************************************'), (733, '     *                          ELIST_ITERATOR::at_last()'), (734, '     *'), (735, '     *  Are we at the end of the list?'), (736, '     *'), (737, '     **********************************************************************/'), (738, '    bool at_last() const {'), (739, '#ifndef NDEBUG'), (740, '      if (!list) {'), (741, '        NO_LIST.error(""ELIST_ITERATOR::at_last"", ABORT);'), (743, '#endif'), (745, ""      // we're at a deleted""), (746, '      return ((list->empty()) || (current == list->last) ||'), (747, '        ((current == nullptr) && (prev == list->last) && // last point between'), (748, '          ex_current_was_last));                          // first and last'), (749, '    } // Current is last?'), (750, '      /***********************************************************************'), (751, '     *                          ELIST_ITERATOR::cycled_list()'), (752, '     *'), (753, '     *  Have we returned to the cycle_pt since it was set?'), (754, '     *'), (755, '     **********************************************************************/'), (756, '    bool cycled_list() const {'), (758, '      if (!list) {'), (759, '        NO_LIST.error(""ELIST_ITERATOR::cycled_list"", ABORT);'), (760, '      }'), (763, '      return ((list->empty()) || ((current == cycle_pt) && started_cycling));'), (764, '    } // Completed a cycle?'), (765, '      /***********************************************************************'), (766, '     *                          ELIST_ITERATOR::add_to_end'), (767, '     *'), (768, '     *  Add a new element to the end of the list without moving the iterator.'), (769, '     *  This is provided because a single linked list cannot move to the last as'), (770, ""     *  the iterator couldn't set its prev pointer.  Adding to the end is""), (771, '     *  essential for implementing'), (772, '                  queues.'), (773, '    **********************************************************************/'), (774, '    void add_to_end(           // add at end &'), (775, '      CLASSNAME *new_element) {'), (776, '#ifndef NDEBUG'), (777, '      if (!list) {'), (778, '        NO_LIST.error(""ELIST_ITERATOR::add_to_end"", ABORT);'), (780, '      if (!new_element) {'), (781, '        BAD_PARAMETER.error(""ELIST_ITERATOR::add_to_end"", ABORT, ""new_element is nullptr"");'), (783, '      if (new_element->next) {'), (784, '        STILL_LINKED.error(""ELIST_ITERATOR::add_to_end"", ABORT);'), (785, '      }'), (786, '#endif'), (788, '      if (this->at_last()) {'), (789, '        this->add_after_stay_put(new_element);'), (790, '      } else {'), (791, '        if (this->at_first()) {'), (792, '          this->add_before_stay_put(new_element);'), (793, '          list->last = new_element;'), (794, '        } else { // Iteratr is elsewhere'), (795, '          new_element->next = list->last->next;'), (796, '          list->last->next = new_element;'), (797, '          list->last = new_element;'), (798, '        }'), (799, '      }'), (800, ""    } // don't move""), (801, '        /***********************************************************************'), (802, '     *              ELIST_ITERATOR::exchange()'), (803, '     *'), (804, '     *  Given another iterator, whose current element is a different element on'), (805, '     *  the same list list OR an element of another list, exchange the two current'), (806, '     *  elements.  On return, each iterator points to the element which was the'), (807, '     *  other iterators current on entry.'), (808, ""     *  (This function hasn't been in-lined because its a bit big!)""), (809, '     **********************************************************************/'), (810, '    void exchange(                 // positions of 2 links'), (811, '      ITERATOR *other_it) { // other iterator'), (812, '      constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can\'t exchange deleted elements of lists"");'), (813, ''), (814, '      CLASSNAME *old_current;'), (817, '      if (!list)'), (818, '        NO_LIST.error(""ELIST_ITERATOR::exchange"", ABORT);'), (819, '      if (!other_it)'), (820, '        BAD_PARAMETER.error(""ELIST_ITERATOR::exchange"", ABORT, ""other_it nullptr"");'), (821, '      if (!(other_it->list))'), (822, '        NO_LIST.error(""ELIST_ITERATOR::exchange"", ABORT, ""other_it"");'), (825, '      /* Do nothing if either list is empty or if both iterators reference the same'), (826, '    link */'), (827, ''), (828, '      if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {'), (829, '        return;'), (832, '      /* Error if either current element is deleted */'), (834, '      if (!current || !other_it->current) {'), (835, '        DONT_EXCHANGE_DELETED.error(""ELIST_ITERATOR.exchange"", ABORT);'), (836, '      }'), (838, '      /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements'), (839, '    (other before this); non-doubleton adjacent elements (this before other);'), (840, '    non-adjacent elements. */'), (841, ''), (842, '    // adjacent links'), (843, '      if ((next == other_it->current) || (other_it->next == current)) {'), (844, '        // doubleton list'), (845, '        if ((next == other_it->current) && (other_it->next == current)) {'), (846, '          prev = next = current;'), (847, '          other_it->prev = other_it->next = other_it->current;'), (848, '        } else { // non-doubleton with'), (849, '          // adjacent links'), (850, '          // other before this'), (851, '          if (other_it->next == current) {'), (852, '            other_it->prev->next = current;'), (853, '            other_it->current->next = next;'), (854, '            current->next = other_it->current;'), (855, '            other_it->next = other_it->current;'), (856, '            prev = current;'), (857, '          } else { // this before other'), (858, '            prev->next = other_it->current;'), (859, '            current->next = other_it->next;'), (860, '            other_it->current->next = current;'), (861, '            next = current;'), (862, '            other_it->prev = other_it->current;'), (863, '          }'), (865, '      } else { // no overlap'), (866, '        prev->next = other_it->current;'), (867, '        current->next = other_it->next;'), (868, '        other_it->prev->next = current;'), (869, '        other_it->current->next = next;'), (872, '      /* update end of list pointer when necessary (remember that the 2 iterators'), (873, '      may iterate over different lists!) */'), (875, '      if (list->last == current) {'), (876, '        list->last = other_it->current;'), (877, '      }'), (878, '      if (other_it->list->last == other_it->current) {'), (879, '        other_it->list->last = current;'), (880, '      }'), (882, '      if (current == cycle_pt) {'), (883, '        cycle_pt = other_it->cycle_pt;'), (884, '      }'), (885, '      if (other_it->current == other_it->cycle_pt) {'), (886, '        other_it->cycle_pt = cycle_pt;'), (889, '      /* The actual exchange - in all cases*/'), (891, '      old_current = current;'), (892, '      current = other_it->current;'), (893, '      other_it->current = old_current;'), (894, '    } // other iterator'), (896, '      //# elements in list'), (897, '    int32_t length() const {'), (898, '      return list->length();'), (899, '    }'), (900, '    /***********************************************************************'), (901, '   *                          ELIST_ITERATOR::sort()'), (902, '   *'), (903, '   *  Sort the elements of the list, then reposition at the start.'), (904, '   *'), (905, '   **********************************************************************/'), (906, '    void sort(          // sort elements'), (907, '      int comparator( // comparison routine'), (908, '        const void *, const void *)) {'), (910, '      if (!list) {'), (911, '        NO_LIST.error(""ELIST_ITERATOR::sort"", ABORT);'), (912, '      }'), (915, '      list->sort(comparator);'), (916, '      move_to_first();'), (918, '  };'), (919, ''), (920, ''), (921, 'private:'), (922, '  CLASSNAME *last = nullptr; // End of list'), (923, '  //(Points to head)'), (924, '  CLASSNAME *First() { // return first'), (925, '    return last ? last->next : nullptr;'), (928, 'public:'), (929, '  ~ELIST() {'), (930, '    clear();'), (933, '  /* delete elements */'), (934, '  void clear() {'), (935, '    internal_clear();'), (936, '  }'), (938, '  /* Become a deep copy of src_list */'), (939, '  template <typename U>'), (940, '  void deep_copy(const U *src_list, CLASSNAME *(*copier)(const CLASSNAME *)) {'), (941, '    ITERATOR from_it(const_cast<U *>(src_list));'), (942, '    ITERATOR to_it(this);'), (944, '    for (from_it.mark_cycle_pt(); !from_it.cycled_list(); from_it.forward())'), (945, '      to_it.add_after_then_move((*copier)(from_it.data()));'), (948, '  /***********************************************************************'), (949, '   *              ELIST::internal_clear'), (950, '   *'), (951, '   *  Used by the destructor and the ""clear"" member function of derived list'), (952, '   *  classes to destroy all the elements on the list.'), (953, '   *  The calling function passes a ""zapper"" function which can be called to'), (954, '   *  delete each element of the list, regardless of its derived type.  This'), (955, '   *  technique permits a generic clear function to destroy elements of'), (956, '   *  different derived types correctly, without requiring virtual functions and'), (957, '   *  the consequential memory overhead.'), (958, '   **********************************************************************/'), (959, ''), (960, '   // destroy all links'), (961, '  void internal_clear() {'), (962, '    CLASSNAME *ptr;'), (963, '    CLASSNAME *next;'), (964, ''), (965, '    if (!empty()) {'), (966, '      ptr = last->next;     // set to first'), (967, '      last->next = nullptr; // break circle'), (968, '      last = nullptr;       // set list empty'), (969, '      while (ptr) {'), (970, '        next = ptr->next;'), (971, '        delete ptr;'), (972, '        ptr = next;'), (973, '      }'), (974, '    }'), (977, '  bool empty() const {'), (978, '    return !last;'), (979, '  }'), (981, '  bool singleton() const {'), (982, '    return last ? (last == last->next) : false;'), (985, '  void shallow_copy(      // dangerous!!'), (986, '    ELIST *from_list) { // beware destructors!!'), (987, '    last = from_list->last;'), (988, '  }'), (990, '  /***********************************************************************'), (991, ' *              ELIST::assign_to_sublist'), (993, ' *  The list is set to a sublist of another list.  ""This"" list must be empty'), (994, ' *  before this function is invoked.  The two iterators passed must refer to'), (995, ' *  the same list, different from ""this"" one.  The sublist removed is the'), (996, "" *  inclusive list from start_it's current position to end_it's current""), (997, ' *  position.  If this range passes over the end of the source list then the'), (998, ' *  source list has its end set to the previous element of start_it.  The'), (999, ' *  extracted sublist is unaffected by the end point of the source list, its'), (1000, ' *  end point is always the end_it position.'), (1002, '  void assign_to_sublist(       // to this list'), (1003, '    ITERATOR *start_it, // from list start'), (1004, '    ITERATOR *end_it) {  // from list end'), (1005, '    constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");'), (1007, '    if (!empty()) {'), (1008, '      LIST_NOT_EMPTY.error(""ELIST.assign_to_sublist"", ABORT);'), (1009, '    }'), (1011, '    last = start_it->extract_sublist(end_it);'), (1012, '  }  // from list end'), (1014, '    // # elements in list'), (1015, '  int32_t length() const {'), (1016, '    int32_t count = 0;'), (1017, '    if (last != nullptr) {'), (1018, '      count = 1;'), (1019, '      for (auto it = last->next; it != last; it = it->next) {'), (1020, '        count++;'), (1021, '      }'), (1022, '    }'), (1023, '    return count;'), (1026, '  /***********************************************************************'), (1027, ' *              ELIST::sort'), (1029, ' *  Sort elements on list'), (1030, "" *  NB If you don't like the const declarations in the comparator, coerce yours:""), (1031, ' *   ( int (*)(const void *, const void *)'), (1033, '  void sort(          // sort elements'), (1034, '    int comparator( // comparison routine'), (1035, '      const void *, const void *)) {'), (1036, '    // Allocate an array of pointers, one per list element.'), (1037, '    auto count = length();'), (1039, '    if (count > 0) {'), (1040, '      // ptr array to sort'), (1041, '      std::vector<CLASSNAME *> base;'), (1042, '      base.reserve(count);'), (1044, '      ITERATOR it(this);'), (1046, '      // Extract all elements, putting the pointers in the array.'), (1047, '      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (1048, '        base.push_back(it.extract());'), (1049, '      }'), (1051, '      // Sort the pointer array.'), (1052, '      qsort(&base[0], count, sizeof(base[0]), comparator);'), (1053, ''), (1054, '      // Rebuild the list from the sorted pointers.'), (1055, '      for (auto current : base) {'), (1056, '        it.add_to_end(current);'), (1057, '      }'), (1058, '    }'), (1061, '  // Assuming list has been sorted already, insert new_link to'), (1062, '  // keep the list sorted according to the same comparison function.'), (1063, '  // Comparison function is the same as used by sort, i.e. uses double'), (1064, '  // indirection. Time is O(1) to add to beginning or end.'), (1065, '  // Time is linear to add pre-sorted items to an empty list.'), (1066, '  // If unique is set to true and comparator() returns 0 (an entry with the'), (1067, '  // same information as the one contained in new_link is already in the'), (1068, '  // list) - new_link is not added to the list and the function returns the'), (1069, '  // pointer to the identical entry that already exists in the list'), (1070, '  // (otherwise the function returns new_link).'), (1071, '  CLASSNAME *add_sorted_and_find(int comparator(const void *, const void *), bool unique,'), (1072, '    CLASSNAME *new_link) {'), (1073, '    // Check for adding at the end.'), (1074, '    if (last == nullptr || comparator(&last, &new_link) < 0) {'), (1075, '      if (last == nullptr) {'), (1076, '        new_link->next = new_link;'), (1077, '      } else {'), (1078, '        new_link->next = last->next;'), (1079, '        last->next = new_link;'), (1080, '      }'), (1081, '      last = new_link;'), (1082, '    } else {'), (1083, '      // Need to use an iterator.'), (1084, '      ITERATOR it(this);'), (1085, '      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (1086, '        auto *link = it.data();'), (1087, '        int compare = comparator(&link, &new_link);'), (1088, '        if (compare > 0) {'), (1089, '          break;'), (1090, '        } else if (unique && compare == 0) {'), (1091, '          return link;'), (1092, '        }'), (1093, '      }'), (1094, '      if (it.cycled_list()) {'), (1095, '        it.add_to_end(new_link);'), (1096, '      } else {'), (1097, '        it.add_before_then_move(new_link);'), (1098, '      }'), (1100, '    return new_link;'), (1101, '  }'), (1102, ''), (1103, '  // Same as above, but returns true if the new entry was inserted, false'), (1104, '  // if the identical entry already existed in the list.'), (1105, '  bool add_sorted(int comparator(const void *, const void *), bool unique, CLASSNAME *new_link) {'), (1106, '    return (add_sorted_and_find(comparator, unique, new_link) == new_link);'), (1108, '};'), (1109, ''), (1110, '// add TESS_API?'), (1111, '// move templated lists to public include dirs?'), (1112, '#define ELISTIZEH(CLASSNAME)                                                  \\'), (1113, '  struct CLASSNAME##_LIST : ELIST<CLASSNAME> {                          \\'), (1114, '    using ELIST<CLASSNAME>::ELIST;                                            \\'), (1115, '  };                  \\'), (1116, '  struct CLASSNAME##_IT : ELIST<CLASSNAME>::ITERATOR {            \\'), (1117, '    using base = ELIST<CLASSNAME>::ITERATOR;          \\'), (1118, '    using base::base;                   \\')], 'deleted': [(30, 'class ELIST_ITERATOR;'), (31, ''), (71, '/**********************************************************************'), (72, ' *                          CLASS - ELIST_LINK'), (73, ' *'), (74, ' *                          Generic link class for singly linked lists with'), (75, ' *embedded links'), (76, ' *'), (77, ' *  Note:  No destructor - elements are assumed to be destroyed EITHER after'), (78, ' *  they have been extracted from a list OR by the ELIST destructor which'), (79, ' *  walks the list.'), (80, ' **********************************************************************/'), (81, ''), (82, 'class ELIST_LINK {'), (83, '  friend class ELIST_ITERATOR;'), (84, '  friend class ELIST;'), (85, ''), (86, '  ELIST_LINK *next;'), (87, ''), (88, 'public:'), (89, '  ELIST_LINK() {'), (90, '    next = nullptr;'), (91, '  }'), (92, '  // constructor'), (93, ''), (94, '  // The special copy constructor is used by lots of classes.'), (95, '  ELIST_LINK(const ELIST_LINK &) {'), (96, '    next = nullptr;'), (97, '  }'), (98, ''), (99, '  // The special assignment operator is used by lots of classes.'), (100, '  void operator=(const ELIST_LINK &) {'), (101, '    next = nullptr;'), (102, '  }'), (103, '};'), (104, ''), (111, 'class TESS_API ELIST {'), (112, '  friend class ELIST_ITERATOR;'), (113, ''), (114, '  ELIST_LINK *last = nullptr; // End of list'), (115, '  //(Points to head)'), (116, '  ELIST_LINK *First() { // return first'), (117, '    return last ? last->next : nullptr;'), (118, '  }'), (119, ''), (121, '  // destroy all links'), (122, '  void internal_clear(void (*zapper)(void *));'), (123, ''), (124, '  bool empty() const {'), (125, '    return !last;'), (126, '  }'), (128, '  bool singleton() const {'), (129, '    return last ? (last == last->next) : false;'), (130, '  }'), (131, ''), (132, '  void shallow_copy(      // dangerous!!'), (133, '      ELIST *from_list) { // beware destructors!!'), (134, '    last = from_list->last;'), (135, '  }'), (136, ''), (137, '  // ptr to copier functn'), (138, '  void internal_deep_copy(ELIST_LINK *(*copier)(ELIST_LINK *),'), (139, '                          const ELIST *list); // list being copied'), (140, ''), (141, '  void assign_to_sublist(       // to this list'), (142, '      ELIST_ITERATOR *start_it, // from list start'), (143, '      ELIST_ITERATOR *end_it);  // from list end'), (144, ''), (145, '  // # elements in list'), (146, '  int32_t length() const {'), (147, '    int32_t count = 0;'), (148, '    if (last != nullptr) {'), (149, '      count = 1;'), (150, '      for (auto it = last->next; it != last; it = it->next) {'), (151, '        count++;'), (152, '      }'), (154, '    return count;'), (155, '  }'), (156, ''), (157, '  void sort(          // sort elements'), (158, '      int comparator( // comparison routine'), (159, '          const void *, const void *));'), (161, '  // Assuming list has been sorted already, insert new_link to'), (162, '  // keep the list sorted according to the same comparison function.'), (163, '  // Comparison function is the same as used by sort, i.e. uses double'), (164, '  // indirection. Time is O(1) to add to beginning or end.'), (165, '  // Time is linear to add pre-sorted items to an empty list.'), (166, '  // If unique is set to true and comparator() returns 0 (an entry with the'), (167, '  // same information as the one contained in new_link is already in the'), (168, '  // list) - new_link is not added to the list and the function returns the'), (169, '  // pointer to the identical entry that already exists in the list'), (170, '  // (otherwise the function returns new_link).'), (171, '  ELIST_LINK *add_sorted_and_find(int comparator(const void *, const void *), bool unique,'), (172, '                                  ELIST_LINK *new_link);'), (173, ''), (174, '  // Same as above, but returns true if the new entry was inserted, false'), (175, '  // if the identical entry already existed in the list.'), (176, '  bool add_sorted(int comparator(const void *, const void *), bool unique, ELIST_LINK *new_link) {'), (177, '    return (add_sorted_and_find(comparator, unique, new_link) == new_link);'), (178, '  }'), (179, '};'), (180, ''), (181, '/***********************************************************************'), (182, ' *                          CLASS - ELIST_ITERATOR'), (183, ' *'), (184, ' *                          Generic iterator class for singly linked lists with'), (185, ' *embedded links'), (186, ' **********************************************************************/'), (187, ''), (188, 'class TESS_API ELIST_ITERATOR {'), (189, '  friend void ELIST::assign_to_sublist(ELIST_ITERATOR *, ELIST_ITERATOR *);'), (190, ''), (191, '  ELIST *list;                  // List being iterated'), (192, '  ELIST_LINK *prev;             // prev element'), (193, '  ELIST_LINK *current;          // current element'), (194, '  ELIST_LINK *next;             // next element'), (195, '  ELIST_LINK *cycle_pt;         // point we are cycling the list to.'), (196, '  bool ex_current_was_last;     // current extracted was end of list'), (197, '  bool ex_current_was_cycle_pt; // current extracted was cycle point'), (198, '  bool started_cycling;         // Have we moved off the start?'), (200, '  ELIST_LINK *extract_sublist(   // from this current...'), (201, '      ELIST_ITERATOR *other_it); // to other current'), (203, 'public:'), (204, '  ELIST_ITERATOR() { // constructor'), (205, '    list = nullptr;'), (206, '  } // unassigned list'), (208, '  explicit ELIST_ITERATOR(ELIST *list_to_iterate);'), (210, '  void set_to_list( // change list'), (211, '      ELIST *list_to_iterate);'), (213, '  void add_after_then_move(  // add after current &'), (214, '      ELIST_LINK *new_link); // move to new'), (216, '  void add_after_stay_put(   // add after current &'), (217, '      ELIST_LINK *new_link); // stay at current'), (219, '  void add_before_then_move( // add before current &'), (220, '      ELIST_LINK *new_link); // move to new'), (222, '  void add_before_stay_put(  // add before current &'), (223, '      ELIST_LINK *new_link); // stay at current'), (225, '  void add_list_after(     // add a list &'), (226, '      ELIST *list_to_add); // stay at current'), (228, '  void add_list_before(    // add a list &'), (229, '      ELIST *list_to_add); // move to it 1st item'), (231, '  ELIST_LINK *data() { // get current data'), (232, '#ifndef NDEBUG'), (233, '    if (!list) {'), (234, '      NO_LIST.error(""ELIST_ITERATOR::data"", ABORT);'), (236, '    if (!current) {'), (237, '      NULL_DATA.error(""ELIST_ITERATOR::data"", ABORT);'), (240, '    return current;'), (241, '  }'), (243, '  ELIST_LINK *data_relative( // get data + or - ...'), (244, '      int8_t offset);        // offset from current'), (246, '  ELIST_LINK *forward(); // move to next element'), (248, '  ELIST_LINK *extract(); // remove from list'), (250, '  ELIST_LINK *move_to_first(); // go to start of list'), (252, '  ELIST_LINK *move_to_last(); // go to end of list'), (254, '  void mark_cycle_pt(); // remember current'), (256, '  bool empty() const { // is list empty?'), (258, '    if (!list) {'), (259, '      NO_LIST.error(""ELIST_ITERATOR::empty"", ABORT);'), (260, '    }'), (262, '    return list->empty();'), (263, '  }'), (264, ''), (265, '  bool current_extracted() const { // current extracted?'), (266, '    return !current;'), (267, '  }'), (269, '  bool at_first() const; // Current is first?'), (271, '  bool at_last() const; // Current is last?'), (273, '  bool cycled_list() const; // Completed a cycle?'), (275, '  void add_to_end(           // add at end &'), (276, ""      ELIST_LINK *new_link); // don't move""), (278, '  void exchange(                 // positions of 2 links'), (279, '      ELIST_ITERATOR *other_it); // other iterator'), (281, '  //# elements in list'), (282, '  int32_t length() const {'), (283, '    return list->length();'), (284, '  }'), (286, '  void sort(          // sort elements'), (287, '      int comparator( // comparison routine'), (288, '          const void *, const void *));'), (289, '};'), (291, '/***********************************************************************'), (292, ' *                          ELIST_ITERATOR::set_to_list'), (293, ' *'), (294, ' *  (Re-)initialise the iterator to point to the start of the list_to_iterate'), (295, ' *  over.'), (296, ' **********************************************************************/'), (298, 'inline void ELIST_ITERATOR::set_to_list( // change list'), (299, '    ELIST *list_to_iterate) {'), (301, '  if (!list_to_iterate) {'), (302, '    BAD_PARAMETER.error(""ELIST_ITERATOR::set_to_list"", ABORT, ""list_to_iterate is nullptr"");'), (303, '  }'), (306, '  list = list_to_iterate;'), (307, '  prev = list->last;'), (308, '  current = list->First();'), (309, '  next = current ? current->next : nullptr;'), (310, '  cycle_pt = nullptr; // await explicit set'), (311, '  started_cycling = false;'), (312, '  ex_current_was_last = false;'), (313, '  ex_current_was_cycle_pt = false;'), (314, '}'), (315, ''), (316, '/***********************************************************************'), (317, ' *                          ELIST_ITERATOR::ELIST_ITERATOR'), (318, ' *'), (319, ' *  CONSTRUCTOR - set iterator to specified list;'), (320, ' **********************************************************************/'), (321, ''), (322, 'inline ELIST_ITERATOR::ELIST_ITERATOR(ELIST *list_to_iterate) {'), (323, '  set_to_list(list_to_iterate);'), (324, '}'), (326, '/***********************************************************************'), (327, ' *                          ELIST_ITERATOR::add_after_then_move'), (328, ' *'), (329, ' *  Add a new element to the list after the current element and move the'), (330, ' *  iterator to the new element.'), (331, ' **********************************************************************/'), (333, 'inline void ELIST_ITERATOR::add_after_then_move( // element to add'), (334, '    ELIST_LINK *new_element) {'), (336, '  if (!list) {'), (337, '    NO_LIST.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);'), (338, '  }'), (339, '  if (!new_element) {'), (340, '    BAD_PARAMETER.error(""ELIST_ITERATOR::add_after_then_move"", ABORT, ""new_element is nullptr"");'), (341, '  }'), (342, '  if (new_element->next) {'), (343, '    STILL_LINKED.error(""ELIST_ITERATOR::add_after_then_move"", ABORT);'), (344, '  }'), (347, '  if (list->empty()) {'), (348, '    new_element->next = new_element;'), (349, '    list->last = new_element;'), (350, '    prev = next = new_element;'), (351, '  } else {'), (352, '    new_element->next = next;'), (353, ''), (354, '    if (current) { // not extracted'), (355, '      current->next = new_element;'), (356, '      prev = current;'), (357, '      if (current == list->last) {'), (358, '        list->last = new_element;'), (360, '    } else { // current extracted'), (361, '      prev->next = new_element;'), (362, '      if (ex_current_was_last) {'), (363, '        list->last = new_element;'), (364, '      }'), (365, '      if (ex_current_was_cycle_pt) {'), (366, '        cycle_pt = new_element;'), (369, '  }'), (370, '  current = new_element;'), (371, '}'), (372, ''), (373, '/***********************************************************************'), (374, ' *                          ELIST_ITERATOR::add_after_stay_put'), (375, ' *'), (376, ' *  Add a new element to the list after the current element but do not move'), (377, ' *  the iterator to the new element.'), (378, ' **********************************************************************/'), (380, 'inline void ELIST_ITERATOR::add_after_stay_put( // element to add'), (381, '    ELIST_LINK *new_element) {'), (383, '  if (!list) {'), (384, '    NO_LIST.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);'), (385, '  }'), (386, '  if (!new_element) {'), (387, '    BAD_PARAMETER.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT, ""new_element is nullptr"");'), (388, '  }'), (389, '  if (new_element->next) {'), (390, '    STILL_LINKED.error(""ELIST_ITERATOR::add_after_stay_put"", ABORT);'), (391, '  }'), (394, '  if (list->empty()) {'), (395, '    new_element->next = new_element;'), (396, '    list->last = new_element;'), (397, '    prev = next = new_element;'), (398, '    ex_current_was_last = false;'), (399, '    current = nullptr;'), (400, '  } else {'), (401, '    new_element->next = next;'), (402, ''), (403, '    if (current) { // not extracted'), (404, '      current->next = new_element;'), (405, '      if (prev == current) {'), (406, '        prev = new_element;'), (407, '      }'), (408, '      if (current == list->last) {'), (409, '        list->last = new_element;'), (410, '      }'), (411, '    } else { // current extracted'), (412, '      prev->next = new_element;'), (413, '      if (ex_current_was_last) {'), (414, '        list->last = new_element;'), (415, '        ex_current_was_last = false;'), (417, '    }'), (418, '    next = new_element;'), (419, '  }'), (420, '}'), (421, ''), (422, '/***********************************************************************'), (423, ' *                          ELIST_ITERATOR::add_before_then_move'), (424, ' *'), (425, ' *  Add a new element to the list before the current element and move the'), (426, ' *  iterator to the new element.'), (427, ' **********************************************************************/'), (429, 'inline void ELIST_ITERATOR::add_before_then_move( // element to add'), (430, '    ELIST_LINK *new_element) {'), (432, '  if (!list) {'), (433, '    NO_LIST.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);'), (434, '  }'), (435, '  if (!new_element) {'), (436, '    BAD_PARAMETER.error(""ELIST_ITERATOR::add_before_then_move"", ABORT, ""new_element is nullptr"");'), (437, '  }'), (438, '  if (new_element->next) {'), (439, '    STILL_LINKED.error(""ELIST_ITERATOR::add_before_then_move"", ABORT);'), (440, '  }'), (443, '  if (list->empty()) {'), (444, '    new_element->next = new_element;'), (445, '    list->last = new_element;'), (446, '    prev = next = new_element;'), (447, '  } else {'), (448, '    prev->next = new_element;'), (449, '    if (current) { // not extracted'), (450, '      new_element->next = current;'), (451, '      next = current;'), (452, '    } else { // current extracted'), (453, '      new_element->next = next;'), (454, '      if (ex_current_was_last) {'), (455, '        list->last = new_element;'), (457, '      if (ex_current_was_cycle_pt) {'), (458, '        cycle_pt = new_element;'), (460, '    }'), (461, '  }'), (462, '  current = new_element;'), (463, '}'), (465, '/***********************************************************************'), (466, ' *                          ELIST_ITERATOR::add_before_stay_put'), (467, ' *'), (468, "" *  Add a new element to the list before the current element but don't move the""), (469, ' *  iterator to the new element.'), (470, ' **********************************************************************/'), (472, 'inline void ELIST_ITERATOR::add_before_stay_put( // element to add'), (473, '    ELIST_LINK *new_element) {'), (475, '  if (!list) {'), (476, '    NO_LIST.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);'), (477, '  }'), (478, '  if (!new_element) {'), (479, '    BAD_PARAMETER.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT, ""new_element is nullptr"");'), (480, '  }'), (481, '  if (new_element->next) {'), (482, '    STILL_LINKED.error(""ELIST_ITERATOR::add_before_stay_put"", ABORT);'), (483, '  }'), (486, '  if (list->empty()) {'), (487, '    new_element->next = new_element;'), (488, '    list->last = new_element;'), (489, '    prev = next = new_element;'), (490, '    ex_current_was_last = true;'), (491, '    current = nullptr;'), (492, '  } else {'), (493, '    prev->next = new_element;'), (494, '    if (current) { // not extracted'), (495, '      new_element->next = current;'), (496, '      if (next == current) {'), (497, '        next = new_element;'), (498, '      }'), (499, '    } else { // current extracted'), (500, '      new_element->next = next;'), (501, '      if (ex_current_was_last) {'), (502, '        list->last = new_element;'), (504, '    }'), (505, '    prev = new_element;'), (506, '  }'), (507, '}'), (509, '/***********************************************************************'), (510, ' *                          ELIST_ITERATOR::add_list_after'), (511, ' *'), (512, "" *  Insert another list to this list after the current element but don't move""), (513, ' *the'), (514, ' *  iterator.'), (515, ' **********************************************************************/'), (517, 'inline void ELIST_ITERATOR::add_list_after(ELIST *list_to_add) {'), (518, '#ifndef NDEBUG'), (519, '  if (!list) {'), (520, '    NO_LIST.error(""ELIST_ITERATOR::add_list_after"", ABORT);'), (521, '  }'), (522, '  if (!list_to_add) {'), (523, '    BAD_PARAMETER.error(""ELIST_ITERATOR::add_list_after"", ABORT, ""list_to_add is nullptr"");'), (524, '  }'), (525, '#endif'), (527, '  if (!list_to_add->empty()) {'), (528, '    if (list->empty()) {'), (529, '      list->last = list_to_add->last;'), (530, '      prev = list->last;'), (531, '      next = list->First();'), (532, '      ex_current_was_last = true;'), (533, '      current = nullptr;'), (534, '    } else {'), (535, '      if (current) { // not extracted'), (536, '        current->next = list_to_add->First();'), (537, '        if (current == list->last) {'), (538, '          list->last = list_to_add->last;'), (539, '        }'), (540, '        list_to_add->last->next = next;'), (541, '        next = current->next;'), (542, '      } else { // current extracted'), (543, '        prev->next = list_to_add->First();'), (544, '        if (ex_current_was_last) {'), (545, '          list->last = list_to_add->last;'), (546, '          ex_current_was_last = false;'), (548, '        list_to_add->last->next = next;'), (549, '        next = prev->next;'), (551, '    }'), (552, '    list_to_add->last = nullptr;'), (553, '  }'), (554, '}'), (556, '/***********************************************************************'), (557, ' *                          ELIST_ITERATOR::add_list_before'), (558, ' *'), (559, ' *  Insert another list to this list before the current element. Move the'), (560, ' *  iterator to the start of the inserted elements'), (561, ' *  iterator.'), (562, ' **********************************************************************/'), (564, 'inline void ELIST_ITERATOR::add_list_before(ELIST *list_to_add) {'), (565, '#ifndef NDEBUG'), (566, '  if (!list) {'), (567, '    NO_LIST.error(""ELIST_ITERATOR::add_list_before"", ABORT);'), (568, '  }'), (569, '  if (!list_to_add) {'), (570, '    BAD_PARAMETER.error(""ELIST_ITERATOR::add_list_before"", ABORT, ""list_to_add is nullptr"");'), (571, '  }'), (572, '#endif'), (574, '  if (!list_to_add->empty()) {'), (575, '    if (list->empty()) {'), (576, '      list->last = list_to_add->last;'), (577, '      prev = list->last;'), (578, '      current = list->First();'), (579, '      next = current->next;'), (580, '      ex_current_was_last = false;'), (581, '    } else {'), (582, '      prev->next = list_to_add->First();'), (583, '      if (current) { // not extracted'), (584, '        list_to_add->last->next = current;'), (585, '      } else { // current extracted'), (586, '        list_to_add->last->next = next;'), (587, '        if (ex_current_was_last) {'), (588, '          list->last = list_to_add->last;'), (589, '        }'), (590, '        if (ex_current_was_cycle_pt) {'), (591, '          cycle_pt = prev->next;'), (592, '        }'), (594, '      current = prev->next;'), (595, '      next = current->next;'), (596, '    }'), (597, '    list_to_add->last = nullptr;'), (598, '  }'), (599, '}'), (601, '/***********************************************************************'), (602, ' *                          ELIST_ITERATOR::extract'), (603, ' *'), (604, ' *  Do extraction by removing current from the list, returning it to the'), (605, ' *  caller, but NOT updating the iterator.  (So that any calling loop can do'), (606, "" *  this.)   The iterator's current points to nullptr.  If the extracted element""), (607, ' *  is to be deleted, this is the callers responsibility.'), (608, ' **********************************************************************/'), (610, 'inline ELIST_LINK *ELIST_ITERATOR::extract() {'), (611, '  ELIST_LINK *extracted_link;'), (614, '  if (!list) {'), (615, '    NO_LIST.error(""ELIST_ITERATOR::extract"", ABORT);'), (616, '  }'), (617, '  if (!current) { // list empty or'), (618, '                  // element extracted'), (619, '    NULL_CURRENT.error(""ELIST_ITERATOR::extract"", ABORT);'), (620, '  }'), (623, '  if (list->singleton()) {'), (624, '    // Special case where we do need to change the iterator.'), (625, '    prev = next = list->last = nullptr;'), (626, '  } else {'), (627, '    prev->next = next; // remove from list'), (628, ''), (629, '    ex_current_was_last = (current == list->last);'), (630, '    if (ex_current_was_last) {'), (631, '      list->last = prev;'), (634, '  // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.'), (635, '  ex_current_was_cycle_pt = (current == cycle_pt);'), (636, '  extracted_link = current;'), (637, '  extracted_link->next = nullptr; // for safety'), (638, '  current = nullptr;'), (639, '  return extracted_link;'), (640, '}'), (641, ''), (642, '/***********************************************************************'), (643, ' *                          ELIST_ITERATOR::move_to_first()'), (644, ' *'), (645, ' *  Move current so that it is set to the start of the list.'), (646, ' *  Return data just in case anyone wants it.'), (647, ' **********************************************************************/'), (649, 'inline ELIST_LINK *ELIST_ITERATOR::move_to_first() {'), (650, '#ifndef NDEBUG'), (651, '  if (!list) {'), (652, '    NO_LIST.error(""ELIST_ITERATOR::move_to_first"", ABORT);'), (654, '#endif'), (656, '  current = list->First();'), (657, '  prev = list->last;'), (658, '  next = current ? current->next : nullptr;'), (659, '  return current;'), (660, '}'), (662, '/***********************************************************************'), (663, ' *                          ELIST_ITERATOR::mark_cycle_pt()'), (664, ' *'), (665, "" *  Remember the current location so that we can tell whether we've returned""), (666, ' *  to this point later.'), (667, ' *'), (668, ' *  If the current point is deleted either now, or in the future, the cycle'), (669, ' *  point will be set to the next item which is set to current.  This could be'), (670, ' *  by a forward, add_after_then_move or add_after_then_move.'), (671, ' **********************************************************************/'), (673, 'inline void ELIST_ITERATOR::mark_cycle_pt() {'), (674, '#ifndef NDEBUG'), (675, '  if (!list) {'), (676, '    NO_LIST.error(""ELIST_ITERATOR::mark_cycle_pt"", ABORT);'), (678, '#endif'), (680, '  if (current) {'), (681, '    cycle_pt = current;'), (682, '  } else {'), (683, '    ex_current_was_cycle_pt = true;'), (685, '  started_cycling = false;'), (686, '}'), (688, '/***********************************************************************'), (689, ' *                          ELIST_ITERATOR::at_first()'), (690, ' *'), (691, ' *  Are we at the start of the list?'), (692, ' *'), (693, ' **********************************************************************/'), (695, 'inline bool ELIST_ITERATOR::at_first() const {'), (696, '#ifndef NDEBUG'), (697, '  if (!list) {'), (698, '    NO_LIST.error(""ELIST_ITERATOR::at_first"", ABORT);'), (700, '#endif'), (702, ""  // we're at a deleted""), (703, '  return ((list->empty()) || (current == list->First()) ||'), (704, '          ((current == nullptr) && (prev == list->last) && // NON-last pt between'), (705, '           !ex_current_was_last));                         // first and last'), (706, '}'), (708, '/***********************************************************************'), (709, ' *                          ELIST_ITERATOR::at_last()'), (710, ' *'), (711, ' *  Are we at the end of the list?'), (715, 'inline bool ELIST_ITERATOR::at_last() const {'), (716, '#ifndef NDEBUG'), (717, '  if (!list) {'), (718, '    NO_LIST.error(""ELIST_ITERATOR::at_last"", ABORT);'), (719, '  }'), (720, '#endif'), (721, ''), (722, ""  // we're at a deleted""), (723, '  return ((list->empty()) || (current == list->last) ||'), (724, '          ((current == nullptr) && (prev == list->last) && // last point between'), (725, '           ex_current_was_last));                          // first and last'), (726, '}'), (728, '/***********************************************************************'), (729, ' *                          ELIST_ITERATOR::cycled_list()'), (730, ' *'), (731, ' *  Have we returned to the cycle_pt since it was set?'), (732, ' *'), (733, ' **********************************************************************/'), (735, 'inline bool ELIST_ITERATOR::cycled_list() const {'), (736, '#ifndef NDEBUG'), (737, '  if (!list) {'), (738, '    NO_LIST.error(""ELIST_ITERATOR::cycled_list"", ABORT);'), (740, '#endif'), (742, '  return ((list->empty()) || ((current == cycle_pt) && started_cycling));'), (743, '}'), (744, ''), (745, '/***********************************************************************'), (746, ' *                          ELIST_ITERATOR::sort()'), (747, ' *'), (748, ' *  Sort the elements of the list, then reposition at the start.'), (752, 'inline void ELIST_ITERATOR::sort( // sort elements'), (753, '    int comparator(               // comparison routine'), (754, '        const void *, const void *)) {'), (755, '#ifndef NDEBUG'), (756, '  if (!list) {'), (757, '    NO_LIST.error(""ELIST_ITERATOR::sort"", ABORT);'), (758, '  }'), (759, '#endif'), (761, '  list->sort(comparator);'), (762, '  move_to_first();'), (763, '}'), (765, '/***********************************************************************'), (766, ' *                          ELIST_ITERATOR::add_to_end'), (767, ' *'), (768, ' *  Add a new element to the end of the list without moving the iterator.'), (769, ' *  This is provided because a single linked list cannot move to the last as'), (770, "" *  the iterator couldn't set its prev pointer.  Adding to the end is""), (771, ' *  essential for implementing'), (772, '              queues.'), (773, '**********************************************************************/'), (775, 'inline void ELIST_ITERATOR::add_to_end( // element to add'), (776, '    ELIST_LINK *new_element) {'), (777, '#ifndef NDEBUG'), (778, '  if (!list) {'), (779, '    NO_LIST.error(""ELIST_ITERATOR::add_to_end"", ABORT);'), (780, '  }'), (781, '  if (!new_element) {'), (782, '    BAD_PARAMETER.error(""ELIST_ITERATOR::add_to_end"", ABORT, ""new_element is nullptr"");'), (783, '  }'), (784, '  if (new_element->next) {'), (785, '    STILL_LINKED.error(""ELIST_ITERATOR::add_to_end"", ABORT);'), (787, '#endif'), (789, '  if (this->at_last()) {'), (790, '    this->add_after_stay_put(new_element);'), (791, '  } else {'), (792, '    if (this->at_first()) {'), (793, '      this->add_before_stay_put(new_element);'), (794, '      list->last = new_element;'), (795, '    } else { // Iteratr is elsewhere'), (796, '      new_element->next = list->last->next;'), (797, '      list->last->next = new_element;'), (798, '      list->last = new_element;'), (801, '}'), (802, ''), (803, '#define ELISTIZEH(CLASSNAME)                                                 \\'), (804, '  class CLASSNAME##_LIST : public X_LIST<ELIST, ELIST_ITERATOR, CLASSNAME> { \\'), (805, '    using X_LIST<ELIST, ELIST_ITERATOR, CLASSNAME>::X_LIST;                  \\'), (806, '  };                                                                         \\'), (807, '  class CLASSNAME##_IT : public X_ITER<ELIST_ITERATOR, CLASSNAME> {          \\'), (808, '    using X_ITER<ELIST_ITERATOR, CLASSNAME>::X_ITER;                         \\')]}",yes
src\classify\trainingsample.h,src\classify\trainingsample.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -51,7 +51,7 @@ static const int kSampleScaleSize = 3;
 static const int kSampleRandomSize = kSampleYShiftSize * kSampleScaleSize - 2;
 // ASSERT_IS_PRIME(kSampleRandomSize) !!
 
-class TESS_API TrainingSample : public ELIST_LINK {
+class TESS_API TrainingSample : public ELIST<TrainingSample>::LINK {
 public:
   TrainingSample()
       : class_id_(INVALID_UNICHAR_ID)
","{'added': [(54, 'class TESS_API TrainingSample : public ELIST<TrainingSample>::LINK {')], 'deleted': [(54, 'class TESS_API TrainingSample : public ELIST_LINK {')]}",yes
src\textord\blkocc.h,src\textord\blkocc.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -44,7 +44,7 @@ CLASS REGION_OCC
 
 ****************************************************************************/
 
-class REGION_OCC : public ELIST_LINK {
+class REGION_OCC : public ELIST<REGION_OCC>::LINK {
 public:
   float min_x;         // Lowest x in region
   float max_x;         // Highest x in region
","{'added': [(47, 'class REGION_OCC : public ELIST<REGION_OCC>::LINK {')], 'deleted': [(47, 'class REGION_OCC : public ELIST_LINK {')]}",yes
src\textord\colpartitionset.h,src\textord\colpartitionset.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -35,7 +35,7 @@ using PartSetVector = std::vector<ColPartitionSet *>;
 // Its main use is in holding a candidate partitioning of the width of the
 // image into columns, where each member ColPartition is a single column.
 // ColPartitionSets are used in building the column layout of a page.
-class ColPartitionSet : public ELIST_LINK {
+class ColPartitionSet : public ELIST<ColPartitionSet>::LINK {
 public:
   ColPartitionSet() = default;
   explicit ColPartitionSet(ColPartition_LIST *partitions);
","{'added': [(38, 'class ColPartitionSet : public ELIST<ColPartitionSet>::LINK {')], 'deleted': [(38, 'class ColPartitionSet : public ELIST_LINK {')]}",yes
src\textord\fpchop.h,src\textord\fpchop.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -24,7 +24,7 @@
 
 namespace tesseract {
 
-class C_OUTLINE_FRAG : public ELIST_LINK {
+class C_OUTLINE_FRAG : public ELIST<C_OUTLINE_FRAG>::LINK {
 public:
   C_OUTLINE_FRAG() { // empty constructor
     steps = nullptr;
","{'added': [(27, 'class C_OUTLINE_FRAG : public ELIST<C_OUTLINE_FRAG>::LINK {')], 'deleted': [(27, 'class C_OUTLINE_FRAG : public ELIST_LINK {')]}",yes
src\textord\pitsync1.h,src\textord\pitsync1.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -31,7 +31,7 @@ namespace tesseract {
 
 class FPSEGPT_LIST;
 
-class FPSEGPT : public ELIST_LINK {
+class FPSEGPT : public ELIST<FPSEGPT>::LINK {
 public:
   FPSEGPT() = default;
   FPSEGPT(                      // constructor
","{'added': [(34, 'class FPSEGPT : public ELIST<FPSEGPT>::LINK {')], 'deleted': [(34, 'class FPSEGPT : public ELIST_LINK {')]}",yes
src\textord\sortflts.h,src\textord\sortflts.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -23,7 +23,7 @@
 
 namespace tesseract {
 
-class SORTED_FLOAT : public ELIST_LINK {
+class SORTED_FLOAT : public ELIST<SORTED_FLOAT>::LINK {
   friend class SORTED_FLOATS;
 
 public:
","{'added': [(26, 'class SORTED_FLOAT : public ELIST<SORTED_FLOAT>::LINK {')], 'deleted': [(26, 'class SORTED_FLOAT : public ELIST_LINK {')]}",yes
src\textord\tablefind.cpp,src\textord\tablefind.cpp,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -2099,7 +2099,7 @@ void TableFinder::MakeTableBlocks(ColPartitionGrid *grid,
 //////// ColSegment code
 ////////
 ColSegment::ColSegment()
-    : ELIST_LINK(),
+    : ELIST<ColSegment>::LINK(),
       num_table_cells_(0),
       num_text_cells_(0),
       type_(COL_UNKNOWN) {}
","{'added': [(2102, '    : ELIST<ColSegment>::LINK(),')], 'deleted': [(2102, '    : ELIST_LINK(),')]}",yes
src\textord\tablefind.h,src\textord\tablefind.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -36,7 +36,7 @@ class ColSegment;
 ELISTIZEH(ColSegment)
 CLISTIZEH(ColSegment)
 
-class ColSegment : public ELIST_LINK {
+class ColSegment : public ELIST<ColSegment>::LINK {
 public:
   ColSegment();
   ~ColSegment() = default;
","{'added': [(39, 'class ColSegment : public ELIST<ColSegment>::LINK {')], 'deleted': [(39, 'class ColSegment : public ELIST_LINK {')]}",yes
src\textord\tabvector.h,src\textord\tabvector.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -64,7 +64,7 @@ ELISTIZEH(TabConstraint)
 // on a list of constraints. The list itself is cooperatively owned
 // by the TabVectors of the constraints on the list and managed
 // by implicit reference counting via the elements of the list.
-class TabConstraint : public ELIST_LINK {
+class TabConstraint : public ELIST<TabConstraint>::LINK {
 public:
   // This empty constructor is here only so that the class can be ELISTIZED.
   // TODO(rays) change deep_copy in elst.h line 955 to take a callback copier
","{'added': [(67, 'class TabConstraint : public ELIST<TabConstraint>::LINK {')], 'deleted': [(67, 'class TabConstraint : public ELIST_LINK {')]}",yes
src\textord\workingpartset.h,src\textord\workingpartset.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -29,7 +29,7 @@ namespace tesseract {
 // WorkingPartSet holds a working set of ColPartitions during transformation
 // from the grid-based storage to regions in logical reading order, and is
 // therefore only used during construction of the regions.
-class WorkingPartSet : public ELIST_LINK {
+class WorkingPartSet : public ELIST<WorkingPartSet>::LINK {
 public:
   explicit WorkingPartSet(ColPartition *column)
       : column_(column), latest_part_(nullptr), part_it_(&part_set_) {}
","{'added': [(32, 'class WorkingPartSet : public ELIST<WorkingPartSet>::LINK {')], 'deleted': [(32, 'class WorkingPartSet : public ELIST_LINK {')]}",yes
src\wordrec\lm_state.h,src\wordrec\lm_state.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -89,7 +89,7 @@ struct LanguageModelNgramInfo {
 
 /// Struct for storing the information about a path in the segmentation graph
 /// explored by Viterbi search.
-struct ViterbiStateEntry : public ELIST_LINK {
+struct ViterbiStateEntry : public ELIST<ViterbiStateEntry>::LINK {
   ViterbiStateEntry(ViterbiStateEntry *pe, BLOB_CHOICE *b, float c, float ol,
                     const LMConsistencyInfo &ci, const AssociateStats &as,
                     LanguageModelFlagsType tcf, LanguageModelDawgInfo *d, LanguageModelNgramInfo *n,
","{'added': [(92, 'struct ViterbiStateEntry : public ELIST<ViterbiStateEntry>::LINK {')], 'deleted': [(92, 'struct ViterbiStateEntry : public ELIST_LINK {')]}",yes
src\wordrec\wordrec.h,src\wordrec\wordrec.h,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -169,7 +169,7 @@ private:
 };
 
 /* ccmain/tstruct.cpp *********************************************************/
-class FRAGMENT : public ELIST_LINK {
+class FRAGMENT : public ELIST<FRAGMENT>::LINK {
 public:
   FRAGMENT() { // constructor
   }
","{'added': [(172, 'class FRAGMENT : public ELIST<FRAGMENT>::LINK {')], 'deleted': [(172, 'class FRAGMENT : public ELIST_LINK {')]}",yes
unittest\list_test.cc,unittest\list_test.cc,4991295a394ffa316c09da9fa745796a45ae3dbb,ffb33795a8babf11bfc81c64170af8d166e28783,Convert ELIST into template.,"@@ -31,7 +31,7 @@ public:
   unsigned value;
 };
 
-class Elst : public ELIST_LINK {
+class Elst : public ELIST<Elst>::LINK {
 public:
   Elst(unsigned n) : value(n) {}
   unsigned value;
@@ -82,7 +82,7 @@ TEST_F(ListTest, TestELIST) {
   Elst_LIST list;
   EXPECT_TRUE(list.empty());
   EXPECT_EQ(list.length(), 0);
-  auto it = ELIST_ITERATOR(&list);
+  auto it = ELIST<Elst>::ITERATOR(&list);
   for (unsigned i = 0; i < ListSize; i++) {
     auto *elst = new Elst(i);
     it.add_to_end(elst);
","{'added': [(34, 'class Elst : public ELIST<Elst>::LINK {'), (85, '  auto it = ELIST<Elst>::ITERATOR(&list);')], 'deleted': [(34, 'class Elst : public ELIST_LINK {'), (85, '  auto it = ELIST_ITERATOR(&list);')]}",yes
unittest\linlsq_test.cc,unittest\linlsq_test.cc,ffb33795a8babf11bfc81c64170af8d166e28783,1bc983a0dc9a955b47921d1204eedef14729eade,Fix warnings.,"@@ -103,15 +103,15 @@ TEST_F(LLSQTest, Vectors) {
 //   sqrt( sum (!nvec * (x_i - x_avg))^2 / n)
 TEST_F(LLSQTest, RmsOrthWorksAsIntended) {
   std::vector<FCOORD> pts;
-  pts.emplace_back(0.56, 0.95);
-  pts.emplace_back(0.09, 0.09);
-  pts.emplace_back(0.13, 0.77);
-  pts.emplace_back(0.16, 0.83);
-  pts.emplace_back(0.45, 0.79);
-  VerifyRmsOrth(pts, FCOORD(1, 0));
-  VerifyRmsOrth(pts, FCOORD(1, 1));
-  VerifyRmsOrth(pts, FCOORD(1, 2));
-  VerifyRmsOrth(pts, FCOORD(2, 1));
+  pts.emplace_back(0.56f, 0.95f);
+  pts.emplace_back(0.09f, 0.09f);
+  pts.emplace_back(0.13f, 0.77f);
+  pts.emplace_back(0.16f, 0.83f);
+  pts.emplace_back(0.45f, 0.79f);
+  VerifyRmsOrth(pts, FCOORD(1.f, 0.f));
+  VerifyRmsOrth(pts, FCOORD(1.f, 1.f));
+  VerifyRmsOrth(pts, FCOORD(1.f, 2.f));
+  VerifyRmsOrth(pts, FCOORD(2.f, 1.f));
 }
 
 } // namespace tesseract
","{'added': [(106, '  pts.emplace_back(0.56f, 0.95f);'), (107, '  pts.emplace_back(0.09f, 0.09f);'), (108, '  pts.emplace_back(0.13f, 0.77f);'), (109, '  pts.emplace_back(0.16f, 0.83f);'), (110, '  pts.emplace_back(0.45f, 0.79f);'), (111, '  VerifyRmsOrth(pts, FCOORD(1.f, 0.f));'), (112, '  VerifyRmsOrth(pts, FCOORD(1.f, 1.f));'), (113, '  VerifyRmsOrth(pts, FCOORD(1.f, 2.f));'), (114, '  VerifyRmsOrth(pts, FCOORD(2.f, 1.f));')], 'deleted': [(106, '  pts.emplace_back(0.56, 0.95);'), (107, '  pts.emplace_back(0.09, 0.09);'), (108, '  pts.emplace_back(0.13, 0.77);'), (109, '  pts.emplace_back(0.16, 0.83);'), (110, '  pts.emplace_back(0.45, 0.79);'), (111, '  VerifyRmsOrth(pts, FCOORD(1, 0));'), (112, '  VerifyRmsOrth(pts, FCOORD(1, 1));'), (113, '  VerifyRmsOrth(pts, FCOORD(1, 2));'), (114, '  VerifyRmsOrth(pts, FCOORD(2, 1));')]}",yes
src\classify\cluster.cpp,src\classify\cluster.cpp,1bc983a0dc9a955b47921d1204eedef14729eade,07d50ef4a3949f77f8d266650330e7ff576945a2,Fix msvc warning.,"@@ -3238,10 +3238,10 @@ static bool MultipleCharSamples(CLUSTERER *Clusterer, CLUSTER *Cluster, float Ma
   InitSampleSearch(SearchState, Cluster);
   while ((Sample = NextSample(&SearchState)) != nullptr) {
     CharID = Sample->CharID;
-    if (CharFlags[CharID] == false) {
+    if (CharFlags[CharID] == 0) {
       CharFlags[CharID] = true;
     } else {
-      if (CharFlags[CharID] == true) {
+      if (CharFlags[CharID] == 1) {
         NumIllegalInCluster++;
         CharFlags[CharID] = ILLEGAL_CHAR;
       }
","{'added': [(3241, '    if (CharFlags[CharID] == 0) {'), (3244, '      if (CharFlags[CharID] == 1) {')], 'deleted': [(3241, '    if (CharFlags[CharID] == false) {'), (3244, '      if (CharFlags[CharID] == true) {')]}",yes
sw.cpp,sw.cpp,07d50ef4a3949f77f8d266650330e7ff576945a2,45af23d9a67a49fcb4679f3f49087b2d9978816c,[sw] Fix build.,"@@ -334,8 +334,7 @@ void build(Solution &s)
 
         auto &tw = add_test(""tatweel"");
         tw += ""unittest/util/.*""_rr;
-        tw += ""unittest/third_party/.*""_rr;
-        tw -= ""unittest/third_party/googletest/.*""_rr;
+        tw += ""unittest/third_party/utf/.*""_rr;
     }
 }
 
","{'added': [(337, '        tw += ""unittest/third_party/utf/.*""_rr;')], 'deleted': [(337, '        tw += ""unittest/third_party/.*""_rr;'), (338, '        tw -= ""unittest/third_party/googletest/.*""_rr;')]}",yes
unittest\list_test.cc,unittest\list_test.cc,45af23d9a67a49fcb4679f3f49087b2d9978816c,bb774797ce1694761ea1526d20d847343d9d1a83,Update test.,"@@ -25,7 +25,7 @@ protected:
   const size_t ListSize = 5;
 };
 
-class Clst : public CLIST_LINK {
+class Clst {
 public:
   Clst(unsigned n) : value(n) {}
   unsigned value;
@@ -51,7 +51,7 @@ TEST_F(ListTest, TestCLIST) {
   Clst_CLIST list;
   EXPECT_TRUE(list.empty());
   EXPECT_EQ(list.length(), 0);
-  auto it = CLIST_ITERATOR(&list);
+  auto it = Clst_CLIST::ITERATOR(&list);
   for (unsigned i = 0; i < ListSize; i++) {
     auto *lst = new Clst(i);
     it.add_to_end(lst);
","{'added': [(28, 'class Clst {'), (54, '  auto it = Clst_CLIST::ITERATOR(&list);')], 'deleted': [(28, 'class Clst : public CLIST_LINK {'), (54, '  auto it = CLIST_ITERATOR(&list);')]}",yes
src\ccutil\clst.h,src\ccutil\clst.h,bb774797ce1694761ea1526d20d847343d9d1a83,dad0fefc11b6051d50d09695885630bdccbf0142,"Rename CLIST_ITERATOR to ITERATOR and CLIST_LINK to LINK, so they can be accessed as CLIST::ITERATOR etc.","@@ -35,13 +35,13 @@ namespace tesseract {
 
 template <typename CLASSNAME>
 class TESS_API CLIST {
-  friend class CLIST_LINK;
-  //friend class CLIST_ITERATOR;
+  friend class LINK;
+  //friend class ITERATOR;
 
 public:
 
   /**********************************************************************
-   *              CLASS - CLIST_LINK
+   *              CLASS - LINK
    *
    *              Generic link class for singly linked CONS cell lists
    *
@@ -49,33 +49,33 @@ public:
    *  they have been extracted from a list OR by the CLIST destructor which
    *  walks the list.
    **********************************************************************/
-  struct CLIST_LINK {
-    CLIST_LINK *next{};
+  struct LINK {
+    LINK *next{};
     CLASSNAME *data{};
 
-    CLIST_LINK() = default;
-    CLIST_LINK(const CLIST_LINK &) = delete;
-    void operator=(const CLIST_LINK &) = delete;
+    LINK() = default;
+    LINK(const LINK &) = delete;
+    void operator=(const LINK &) = delete;
   };
 
   /***********************************************************************
-   *              CLASS - CLIST_ITERATOR
+   *              CLASS - ITERATOR
    *
    *              Generic iterator class for singly linked lists with embedded
    *links
    **********************************************************************/
-  class TESS_API CLIST_ITERATOR {
+  class TESS_API ITERATOR {
     CLIST *list;                  // List being iterated
-    CLIST_LINK *prev;             // prev element
-    CLIST_LINK *current;          // current element
-    CLIST_LINK *next;             // next element
-    CLIST_LINK *cycle_pt;         // point we are cycling the list to.
+    LINK *prev;             // prev element
+    LINK *current;          // current element
+    LINK *next;             // next element
+    LINK *cycle_pt;         // point we are cycling the list to.
     bool ex_current_was_last;     // current extracted was end of list
     bool ex_current_was_cycle_pt; // current extracted was cycle point
     bool started_cycling;         // Have we moved off the start?
 
     /***********************************************************************
-     *              CLIST_ITERATOR::extract_sublist()
+     *              ITERATOR::extract_sublist()
      *
      *  This is a private member, used only by CLIST::assign_to_sublist.
      *  Given another iterator for the same list, extract the links from THIS to
@@ -83,9 +83,9 @@ public:
      *  pointer to the last element.
      *  (Can't inline this function because it contains a loop)
      **********************************************************************/
-    CLIST_LINK *extract_sublist(  // from this current
-      CLIST_ITERATOR *other_it) {              // to other current
-      CLIST_ITERATOR temp_it = *this;
+    LINK *extract_sublist(  // from this current
+      ITERATOR *other_it) {              // to other current
+      ITERATOR temp_it = *this;
 
       constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
 #ifndef NDEBUG
@@ -93,12 +93,12 @@ public:
       constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
 
       if (list != other_it->list)
-        BAD_EXTRACTION_PTS.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
+        BAD_EXTRACTION_PTS.error(""ITERATOR.extract_sublist"", ABORT);
       if (list->empty())
-        EMPTY_LIST.error(""CLIST_ITERATOR::extract_sublist"", ABORT);
+        EMPTY_LIST.error(""ITERATOR::extract_sublist"", ABORT);
 
       if (!current || !other_it->current)
-        DONT_EXTRACT_DELETED.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
+        DONT_EXTRACT_DELETED.error(""ITERATOR.extract_sublist"", ABORT);
 #endif
 
       ex_current_was_last = other_it->ex_current_was_last = false;
@@ -108,7 +108,7 @@ public:
       temp_it.mark_cycle_pt();
       do {                         // walk sublist
         if (temp_it.cycled_list()) { // can't find end pt
-          BAD_SUBLIST.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
+          BAD_SUBLIST.error(""ITERATOR.extract_sublist"", ABORT);
         }
 
         if (temp_it.at_last()) {
@@ -146,22 +146,22 @@ public:
     }
 
   public:
-    CLIST_ITERATOR() { // constructor
+    ITERATOR() { // constructor
       list = nullptr;
     } // unassigned list
 
   /***********************************************************************
-   *              CLIST_ITERATOR::CLIST_ITERATOR
+   *              ITERATOR::ITERATOR
    *
    *  CONSTRUCTOR - set iterator to specified list;
    **********************************************************************/
-    CLIST_ITERATOR( // constructor
+    ITERATOR( // constructor
       CLIST *list_to_iterate) {
       set_to_list(list_to_iterate);
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::set_to_list
+     *              ITERATOR::set_to_list
      *
      *  (Re-)initialise the iterator to point to the start of the list_to_iterate
      *  over.
@@ -179,7 +179,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::add_after_then_move
+     *              ITERATOR::add_after_then_move
      *
      *  Add a new element to the list after the current element and move the
      *  iterator to the new element.
@@ -188,11 +188,11 @@ public:
       CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
-        BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
-      auto new_element = new CLIST_LINK;
+      auto new_element = new LINK;
       new_element->data = new_data;
 
       if (list->empty()) {
@@ -222,7 +222,7 @@ public:
     }      // move to new
 
     /***********************************************************************
-     *              CLIST_ITERATOR::add_after_stay_put
+     *              ITERATOR::add_after_stay_put
      *
      *  Add a new element to the list after the current element but do not move
      *  the iterator to the new element.
@@ -231,11 +231,11 @@ public:
       CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
-        BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
-      auto new_element = new CLIST_LINK;
+      auto new_element = new LINK;
       new_element->data = new_data;
 
       if (list->empty()) {
@@ -267,7 +267,7 @@ public:
     }     // stay at current
 
     /***********************************************************************
-     *              CLIST_ITERATOR::add_before_then_move
+     *              ITERATOR::add_before_then_move
      *
      *  Add a new element to the list before the current element and move the
      *  iterator to the new element.
@@ -276,11 +276,11 @@ public:
       CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
-        BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
-      auto new_element = new CLIST_LINK;
+      auto new_element = new LINK;
       new_element->data = new_data;
 
       if (list->empty()) {
@@ -306,7 +306,7 @@ public:
     }       // move to new
 
     /***********************************************************************
-     *              CLIST_ITERATOR::add_before_stay_put
+     *              ITERATOR::add_before_stay_put
      *
      *  Add a new element to the list before the current element but don't move the
      *  iterator to the new element.
@@ -315,11 +315,11 @@ public:
       CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
-        BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
-      auto new_element = new CLIST_LINK;
+      auto new_element = new LINK;
       new_element->data = new_data;
 
       if (list->empty()) {
@@ -346,7 +346,7 @@ public:
     }      // stay at current
 
     /***********************************************************************
-     *              CLIST_ITERATOR::add_list_after
+     *              ITERATOR::add_list_after
      *
      *  Insert another list to this list after the current element but don't move
      *the
@@ -384,7 +384,7 @@ public:
     } // stay at current
 
     /***********************************************************************
-     *              CLIST_ITERATOR::add_list_before
+     *              ITERATOR::add_list_before
      *
      *  Insert another list to this list before the current element. Move the
      *  iterator to the start of the inserted elements
@@ -422,14 +422,14 @@ public:
     CLASSNAME *data() { // get current data
 #ifndef NDEBUG
       if (!list) {
-        NO_LIST.error(""CLIST_ITERATOR::data"", ABORT);
+        NO_LIST.error(""ITERATOR::data"", ABORT);
       }
 #endif
       return current->data;
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::data_relative
+     *              ITERATOR::data_relative
      *
      *  Return the data pointer to the element ""offset"" elements from current.
      *  ""offset"" must not be less than -1.
@@ -437,15 +437,15 @@ public:
      **********************************************************************/
     CLASSNAME *data_relative(  // get data + or - ...
       int8_t offset) {                 // offset from current
-      CLIST_LINK *ptr;
+      LINK *ptr;
 
 #ifndef NDEBUG
       if (!list)
-        NO_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);
+        NO_LIST.error(""ITERATOR::data_relative"", ABORT);
       if (list->empty())
-        EMPTY_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);
+        EMPTY_LIST.error(""ITERATOR::data_relative"", ABORT);
       if (offset < -1)
-        BAD_PARAMETER.error(""CLIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");
+        BAD_PARAMETER.error(""ITERATOR::data_relative"", ABORT, ""offset < -l"");
 #endif
 
       if (offset == -1) {
@@ -460,7 +460,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::forward
+     *              ITERATOR::forward
      *
      *  Move the iterator to the next element of the list.
      *  REMEMBER: ALL LISTS ARE CIRCULAR.
@@ -488,7 +488,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::extract
+     *              ITERATOR::extract
      *
      *  Do extraction by removing current from the list, deleting the cons cell
      *  and returning the data to the caller, but NOT updating the iterator.  (So
@@ -499,7 +499,7 @@ public:
 #ifndef NDEBUG
       if (!current) { // list empty or
         // element extracted
-        NULL_CURRENT.error(""CLIST_ITERATOR::extract"", ABORT);
+        NULL_CURRENT.error(""ITERATOR::extract"", ABORT);
       }
 #endif
 
@@ -525,7 +525,7 @@ public:
     } // remove from list
 
     /***********************************************************************
-     *              CLIST_ITERATOR::move_to_first()
+     *              ITERATOR::move_to_first()
      *
      *  Move current so that it is set to the start of the list.
      *  Return data just in case anyone wants it.
@@ -538,7 +538,7 @@ public:
     } // go to start of list
 
     /***********************************************************************
-     *              CLIST_ITERATOR::move_to_last()
+     *              ITERATOR::move_to_last()
      *
      *  Move current so that it is set to the end of the list.
      *  Return data just in case anyone wants it.
@@ -557,7 +557,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::mark_cycle_pt()
+     *              ITERATOR::mark_cycle_pt()
      *
      *  Remember the current location so that we can tell whether we've returned
      *  to this point later.
@@ -569,7 +569,7 @@ public:
     void mark_cycle_pt() {
 #ifndef NDEBUG
       if (!list) {
-        NO_LIST.error(""CLIST_ITERATOR::mark_cycle_pt"", ABORT);
+        NO_LIST.error(""ITERATOR::mark_cycle_pt"", ABORT);
       }
 #endif
 
@@ -590,7 +590,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::at_first()
+     *              ITERATOR::at_first()
      *
      *  Are we at the start of the list?
      *
@@ -603,7 +603,7 @@ public:
     } // Current is first?
 
     /***********************************************************************
-     *              CLIST_ITERATOR::at_last()
+     *              ITERATOR::at_last()
      *
      *  Are we at the end of the list?
      *
@@ -616,7 +616,7 @@ public:
     } // Current is last?
 
     /***********************************************************************
-     *              CLIST_ITERATOR::cycled_list()
+     *              ITERATOR::cycled_list()
      *
      *  Have we returned to the cycle_pt since it was set?
      *
@@ -626,7 +626,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::add_to_end
+     *              ITERATOR::add_to_end
      *
      *  Add a new element to the end of the list without moving the iterator.
      *  This is provided because a single linked list cannot move to the last as
@@ -638,10 +638,10 @@ public:
       CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!list) {
-        NO_LIST.error(""CLIST_ITERATOR::add_to_end"", ABORT);
+        NO_LIST.error(""ITERATOR::add_to_end"", ABORT);
       }
       if (!new_data) {
-        BAD_PARAMETER.error(""CLIST_ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");
+        BAD_PARAMETER.error(""ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");
       }
 #endif
 
@@ -652,7 +652,7 @@ public:
           this->add_before_stay_put(new_data);
           list->last = prev;
         } else { // Iteratr is elsewhere
-          auto new_element = new CLIST_LINK;
+          auto new_element = new LINK;
           new_element->data = new_data;
 
           new_element->next = list->last->next;
@@ -663,7 +663,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::exchange()
+     *              ITERATOR::exchange()
      *
      *  Given another iterator, whose current element is a different element on
      *  the same list list OR an element of another list, exchange the two current
@@ -672,7 +672,7 @@ public:
      *  (This function hasn't been in-lined because its a bit big!)
      **********************************************************************/
     void exchange(                 // positions of 2 links
-      CLIST_ITERATOR *other_it) { // other iterator
+      ITERATOR *other_it) { // other iterator
       constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
 
       /* Do nothing if either list is empty or if both iterators reference the same
@@ -685,7 +685,7 @@ public:
       /* Error if either current element is deleted */
 
       if (!current || !other_it->current) {
-        DONT_EXCHANGE_DELETED.error(""CLIST_ITERATOR.exchange"", ABORT);
+        DONT_EXCHANGE_DELETED.error(""ITERATOR.exchange"", ABORT);
       }
 
       /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements
@@ -747,7 +747,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::length()
+     *              ITERATOR::length()
      *
      *  Return the length of the list
      *
@@ -757,7 +757,7 @@ public:
     }
 
     /***********************************************************************
-     *              CLIST_ITERATOR::sort()
+     *              ITERATOR::sort()
      *
      *  Sort the elements of the list, then reposition at the start.
      *
@@ -771,14 +771,14 @@ public:
   };
 
 private:
-  CLIST_LINK *last = nullptr; // End of list
+  LINK *last = nullptr; // End of list
 
   //(Points to head)
-  CLIST_LINK *First() { // return first
+  LINK *First() { // return first
     return last != nullptr ? last->next : nullptr;
   }
 
-  const CLIST_LINK *First() const { // return first
+  const LINK *First() const { // return first
     return last != nullptr ? last->next : nullptr;
   }
 
@@ -862,8 +862,8 @@ public:
    *  end point is always the end_it position.
    **********************************************************************/
   void assign_to_sublist(  // to this list
-    CLIST_ITERATOR *start_it,  // from list start
-    CLIST_ITERATOR *end_it) {  // from list end
+    ITERATOR *start_it,  // from list start
+    ITERATOR *end_it) {  // from list end
     constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");
 
     if (!empty()) {
@@ -899,7 +899,7 @@ public:
       std::vector<CLASSNAME *> base;
       base.reserve(count);
 
-      CLIST_ITERATOR it(this);
+      ITERATOR it(this);
 
       // Extract all elements, putting the pointers in the array.
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
@@ -926,7 +926,7 @@ public:
   bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_data) {
     // Check for adding at the end.
     if (last == nullptr || comparator(last->data, new_data) < 0) {
-      auto *new_element = new CLIST_LINK;
+      auto *new_element = new LINK;
       new_element->data = new_data;
       if (last == nullptr) {
         new_element->next = new_element;
@@ -938,7 +938,7 @@ public:
       return true;
     } else if (!unique || last->data != new_data) {
       // Need to use an iterator.
-      CLIST_ITERATOR it(this);
+      ITERATOR it(this);
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
         auto data = it.data();
         if (data == new_data && unique) {
@@ -966,8 +966,8 @@ public:
   void set_subtract(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLIST *minuend,
     CLIST *subtrahend) {
     shallow_clear();
-    CLIST_ITERATOR m_it(minuend);
-    CLIST_ITERATOR s_it(subtrahend);
+    ITERATOR m_it(minuend);
+    ITERATOR s_it(subtrahend);
     // Since both lists are sorted, finding the subtras that are not
     // minus is a case of a parallel iteration.
     for (m_it.mark_cycle_pt(); !m_it.cycled_list(); m_it.forward()) {
@@ -991,9 +991,7 @@ public:
   class CLASSNAME##_CLIST : public CLIST<CLASSNAME> {           \
     using CLIST<CLASSNAME>::CLIST;                              \
   };                                                            \
-  struct CLASSNAME##_C_IT : X_ITER<CLIST<CLASSNAME>::CLIST_ITERATOR, CLASSNAME> { \
-    using X_ITER<CLIST<CLASSNAME>::CLIST_ITERATOR, CLASSNAME>::X_ITER;            \
-  };
+  using CLASSNAME##_C_IT = CLIST<CLASSNAME>::ITERATOR;
 
 } // namespace tesseract
 
","{'added': [(38, '  friend class LINK;'), (39, '  //friend class ITERATOR;'), (44, '   *              CLASS - LINK'), (52, '  struct LINK {'), (53, '    LINK *next{};'), (56, '    LINK() = default;'), (57, '    LINK(const LINK &) = delete;'), (58, '    void operator=(const LINK &) = delete;'), (62, '   *              CLASS - ITERATOR'), (67, '  class TESS_API ITERATOR {'), (69, '    LINK *prev;             // prev element'), (70, '    LINK *current;          // current element'), (71, '    LINK *next;             // next element'), (72, '    LINK *cycle_pt;         // point we are cycling the list to.'), (78, '     *              ITERATOR::extract_sublist()'), (86, '    LINK *extract_sublist(  // from this current'), (87, '      ITERATOR *other_it) {              // to other current'), (88, '      ITERATOR temp_it = *this;'), (96, '        BAD_EXTRACTION_PTS.error(""ITERATOR.extract_sublist"", ABORT);'), (98, '        EMPTY_LIST.error(""ITERATOR::extract_sublist"", ABORT);'), (101, '        DONT_EXTRACT_DELETED.error(""ITERATOR.extract_sublist"", ABORT);'), (111, '          BAD_SUBLIST.error(""ITERATOR.extract_sublist"", ABORT);'), (149, '    ITERATOR() { // constructor'), (154, '   *              ITERATOR::ITERATOR'), (158, '    ITERATOR( // constructor'), (164, '     *              ITERATOR::set_to_list'), (182, '     *              ITERATOR::add_after_then_move'), (191, '        BAD_PARAMETER.error(""ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");'), (195, '      auto new_element = new LINK;'), (225, '     *              ITERATOR::add_after_stay_put'), (234, '        BAD_PARAMETER.error(""ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");'), (238, '      auto new_element = new LINK;'), (270, '     *              ITERATOR::add_before_then_move'), (279, '        BAD_PARAMETER.error(""ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");'), (283, '      auto new_element = new LINK;'), (309, '     *              ITERATOR::add_before_stay_put'), (318, '        BAD_PARAMETER.error(""ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");'), (322, '      auto new_element = new LINK;'), (349, '     *              ITERATOR::add_list_after'), (387, '     *              ITERATOR::add_list_before'), (425, '        NO_LIST.error(""ITERATOR::data"", ABORT);'), (432, '     *              ITERATOR::data_relative'), (440, '      LINK *ptr;'), (444, '        NO_LIST.error(""ITERATOR::data_relative"", ABORT);'), (446, '        EMPTY_LIST.error(""ITERATOR::data_relative"", ABORT);'), (448, '        BAD_PARAMETER.error(""ITERATOR::data_relative"", ABORT, ""offset < -l"");'), (463, '     *              ITERATOR::forward'), (491, '     *              ITERATOR::extract'), (502, '        NULL_CURRENT.error(""ITERATOR::extract"", ABORT);'), (528, '     *              ITERATOR::move_to_first()'), (541, '     *              ITERATOR::move_to_last()'), (560, '     *              ITERATOR::mark_cycle_pt()'), (572, '        NO_LIST.error(""ITERATOR::mark_cycle_pt"", ABORT);'), (593, '     *              ITERATOR::at_first()'), (606, '     *              ITERATOR::at_last()'), (619, '     *              ITERATOR::cycled_list()'), (629, '     *              ITERATOR::add_to_end'), (641, '        NO_LIST.error(""ITERATOR::add_to_end"", ABORT);'), (644, '        BAD_PARAMETER.error(""ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");'), (655, '          auto new_element = new LINK;'), (666, '     *              ITERATOR::exchange()'), (675, '      ITERATOR *other_it) { // other iterator'), (688, '        DONT_EXCHANGE_DELETED.error(""ITERATOR.exchange"", ABORT);'), (750, '     *              ITERATOR::length()'), (760, '     *              ITERATOR::sort()'), (774, '  LINK *last = nullptr; // End of list'), (777, '  LINK *First() { // return first'), (781, '  const LINK *First() const { // return first'), (865, '    ITERATOR *start_it,  // from list start'), (866, '    ITERATOR *end_it) {  // from list end'), (902, '      ITERATOR it(this);'), (929, '      auto *new_element = new LINK;'), (941, '      ITERATOR it(this);'), (969, '    ITERATOR m_it(minuend);'), (970, '    ITERATOR s_it(subtrahend);'), (994, '  using CLASSNAME##_C_IT = CLIST<CLASSNAME>::ITERATOR;')], 'deleted': [(38, '  friend class CLIST_LINK;'), (39, '  //friend class CLIST_ITERATOR;'), (44, '   *              CLASS - CLIST_LINK'), (52, '  struct CLIST_LINK {'), (53, '    CLIST_LINK *next{};'), (56, '    CLIST_LINK() = default;'), (57, '    CLIST_LINK(const CLIST_LINK &) = delete;'), (58, '    void operator=(const CLIST_LINK &) = delete;'), (62, '   *              CLASS - CLIST_ITERATOR'), (67, '  class TESS_API CLIST_ITERATOR {'), (69, '    CLIST_LINK *prev;             // prev element'), (70, '    CLIST_LINK *current;          // current element'), (71, '    CLIST_LINK *next;             // next element'), (72, '    CLIST_LINK *cycle_pt;         // point we are cycling the list to.'), (78, '     *              CLIST_ITERATOR::extract_sublist()'), (86, '    CLIST_LINK *extract_sublist(  // from this current'), (87, '      CLIST_ITERATOR *other_it) {              // to other current'), (88, '      CLIST_ITERATOR temp_it = *this;'), (96, '        BAD_EXTRACTION_PTS.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (98, '        EMPTY_LIST.error(""CLIST_ITERATOR::extract_sublist"", ABORT);'), (101, '        DONT_EXTRACT_DELETED.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (111, '          BAD_SUBLIST.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (149, '    CLIST_ITERATOR() { // constructor'), (154, '   *              CLIST_ITERATOR::CLIST_ITERATOR'), (158, '    CLIST_ITERATOR( // constructor'), (164, '     *              CLIST_ITERATOR::set_to_list'), (182, '     *              CLIST_ITERATOR::add_after_then_move'), (191, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");'), (195, '      auto new_element = new CLIST_LINK;'), (225, '     *              CLIST_ITERATOR::add_after_stay_put'), (234, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");'), (238, '      auto new_element = new CLIST_LINK;'), (270, '     *              CLIST_ITERATOR::add_before_then_move'), (279, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");'), (283, '      auto new_element = new CLIST_LINK;'), (309, '     *              CLIST_ITERATOR::add_before_stay_put'), (318, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");'), (322, '      auto new_element = new CLIST_LINK;'), (349, '     *              CLIST_ITERATOR::add_list_after'), (387, '     *              CLIST_ITERATOR::add_list_before'), (425, '        NO_LIST.error(""CLIST_ITERATOR::data"", ABORT);'), (432, '     *              CLIST_ITERATOR::data_relative'), (440, '      CLIST_LINK *ptr;'), (444, '        NO_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);'), (446, '        EMPTY_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);'), (448, '        BAD_PARAMETER.error(""CLIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");'), (463, '     *              CLIST_ITERATOR::forward'), (491, '     *              CLIST_ITERATOR::extract'), (502, '        NULL_CURRENT.error(""CLIST_ITERATOR::extract"", ABORT);'), (528, '     *              CLIST_ITERATOR::move_to_first()'), (541, '     *              CLIST_ITERATOR::move_to_last()'), (560, '     *              CLIST_ITERATOR::mark_cycle_pt()'), (572, '        NO_LIST.error(""CLIST_ITERATOR::mark_cycle_pt"", ABORT);'), (593, '     *              CLIST_ITERATOR::at_first()'), (606, '     *              CLIST_ITERATOR::at_last()'), (619, '     *              CLIST_ITERATOR::cycled_list()'), (629, '     *              CLIST_ITERATOR::add_to_end'), (641, '        NO_LIST.error(""CLIST_ITERATOR::add_to_end"", ABORT);'), (644, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");'), (655, '          auto new_element = new CLIST_LINK;'), (666, '     *              CLIST_ITERATOR::exchange()'), (675, '      CLIST_ITERATOR *other_it) { // other iterator'), (688, '        DONT_EXCHANGE_DELETED.error(""CLIST_ITERATOR.exchange"", ABORT);'), (750, '     *              CLIST_ITERATOR::length()'), (760, '     *              CLIST_ITERATOR::sort()'), (774, '  CLIST_LINK *last = nullptr; // End of list'), (777, '  CLIST_LINK *First() { // return first'), (781, '  const CLIST_LINK *First() const { // return first'), (865, '    CLIST_ITERATOR *start_it,  // from list start'), (866, '    CLIST_ITERATOR *end_it) {  // from list end'), (902, '      CLIST_ITERATOR it(this);'), (929, '      auto *new_element = new CLIST_LINK;'), (941, '      CLIST_ITERATOR it(this);'), (969, '    CLIST_ITERATOR m_it(minuend);'), (970, '    CLIST_ITERATOR s_it(subtrahend);'), (994, '  struct CLASSNAME##_C_IT : X_ITER<CLIST<CLASSNAME>::CLIST_ITERATOR, CLASSNAME> { \\'), (995, '    using X_ITER<CLIST<CLASSNAME>::CLIST_ITERATOR, CLASSNAME>::X_ITER;            \\'), (996, '  };')]}",yes
src\ccutil\list.h,src\ccutil\list.h,dad0fefc11b6051d50d09695885630bdccbf0142,5adf0c8ab333e4fbc6996523f89e08b15474a72d,Make simple classes simpler.,"@@ -19,8 +19,7 @@
 namespace tesseract {
 
 template <typename ITERATOR, typename CLASSNAME>
-class X_ITER : public ITERATOR {
-public:
+struct X_ITER : ITERATOR {
   X_ITER() = default;
   template <typename U>
   X_ITER(U *list) : ITERATOR(list) {}
@@ -40,8 +39,7 @@ public:
 };
 
 template <typename CONTAINER, typename ITERATOR, typename CLASSNAME>
-class X_LIST : public CONTAINER {
-public:
+struct X_LIST : CONTAINER {
   X_LIST() = default;
   X_LIST(const X_LIST &) = delete;
   X_LIST &operator=(const X_LIST &) = delete;
","{'added': [(22, 'struct X_ITER : ITERATOR {'), (42, 'struct X_LIST : CONTAINER {')], 'deleted': [(22, 'class X_ITER : public ITERATOR {'), (23, 'public:'), (43, 'class X_LIST : public CONTAINER {'), (44, 'public:')]}",yes
src\ccutil\clst.h,src\ccutil\clst.h,5adf0c8ab333e4fbc6996523f89e08b15474a72d,3088d2eecc84a5bfb8a983cf702e1e1e964138cc,Use real CLASSNAME type for list. Update sorting callback signatures.,"@@ -50,14 +50,10 @@ public:
    *  walks the list.
    **********************************************************************/
   struct CLIST_LINK {
-    CLIST_LINK *next;
-    void *data;
-
-  public:
-    CLIST_LINK() { // constructor
-      data = next = nullptr;
-    }
+    CLIST_LINK *next{};
+    CLASSNAME *data{};
 
+    CLIST_LINK() = default;
     CLIST_LINK(const CLIST_LINK &) = delete;
     void operator=(const CLIST_LINK &) = delete;
   };
@@ -189,7 +185,7 @@ public:
      *  iterator to the new element.
      **********************************************************************/
     void add_after_then_move( // add after current &
-      void *new_data) {
+      CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
         BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");
@@ -232,7 +228,7 @@ public:
      *  the iterator to the new element.
      **********************************************************************/
     void add_after_stay_put( // add after current &
-      void *new_data) {
+      CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
         BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");
@@ -277,7 +273,7 @@ public:
      *  iterator to the new element.
      **********************************************************************/
     void add_before_then_move( // add before current &
-      void *new_data) {
+      CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
         BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");
@@ -316,7 +312,7 @@ public:
      *  iterator to the new element.
      **********************************************************************/
     void add_before_stay_put( // add before current &
-      void *new_data) {
+      CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!new_data) {
         BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");
@@ -423,7 +419,7 @@ public:
       }
     } // move to it 1st item
 
-    void *data() { // get current data
+    CLASSNAME *data() { // get current data
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""CLIST_ITERATOR::data"", ABORT);
@@ -439,7 +435,7 @@ public:
      *  ""offset"" must not be less than -1.
      *  (This function can't be INLINEd because it contains a loop)
      **********************************************************************/
-    void *data_relative(  // get data + or - ...
+    CLASSNAME *data_relative(  // get data + or - ...
       int8_t offset) {                 // offset from current
       CLIST_LINK *ptr;
 
@@ -469,7 +465,7 @@ public:
      *  Move the iterator to the next element of the list.
      *  REMEMBER: ALL LISTS ARE CIRCULAR.
      **********************************************************************/
-    void *forward() {
+    CLASSNAME *forward() {
       if (list->empty()) {
         return nullptr;
       }
@@ -499,7 +495,7 @@ public:
      *  that any calling loop can do this.)  The iterator's current points to
      *  nullptr.  If the data is to be deleted, this is the callers responsibility.
      **********************************************************************/
-    void *extract() {
+    CLASSNAME *extract() {
 #ifndef NDEBUG
       if (!current) { // list empty or
         // element extracted
@@ -534,7 +530,7 @@ public:
      *  Move current so that it is set to the start of the list.
      *  Return data just in case anyone wants it.
      **********************************************************************/
-    void *move_to_first() {
+    CLASSNAME *move_to_first() {
       current = list->First();
       prev = list->last;
       next = current != nullptr ? current->next : nullptr;
@@ -548,7 +544,7 @@ public:
      *  Return data just in case anyone wants it.
      *  (This function can't be INLINEd because it contains a loop)
      **********************************************************************/
-    void *move_to_last() {
+    CLASSNAME *move_to_last() {
       while (current != list->last) {
         forward();
       }
@@ -639,7 +635,7 @@ public:
                   queues.
     **********************************************************************/
     void add_to_end(  // element to add
-      void *new_data) {
+      CLASSNAME *new_data) {
 #ifndef NDEBUG
       if (!list) {
         NO_LIST.error(""CLIST_ITERATOR::add_to_end"", ABORT);
@@ -895,12 +891,12 @@ public:
    **********************************************************************/
   void sort(          // sort elements
     int comparator( // comparison routine
-      const void *, const void *)) {
+      const CLASSNAME *, const CLASSNAME *)) {
     // Allocate an array of pointers, one per list element.
     auto count = length();
     if (count > 0) {
       // ptr array to sort
-      std::vector<void *> base;
+      std::vector<CLASSNAME *> base;
       base.reserve(count);
 
       CLIST_ITERATOR it(this);
@@ -911,7 +907,7 @@ public:
       }
 
       // Sort the pointer array.
-      qsort(&base[0], count, sizeof(base[0]), comparator);
+      std::sort(base.begin(), base.end(), comparator);
 
       // Rebuild the list from the sorted pointers.
       for (auto current : base) {
@@ -927,9 +923,9 @@ public:
   // Time is linear to add pre-sorted items to an empty list.
   // If unique, then don't add duplicate entries.
   // Returns true if the element was added to the list.
-  bool add_sorted(int comparator(const void *, const void *), bool unique, void *new_data) {
+  bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_data) {
     // Check for adding at the end.
-    if (last == nullptr || comparator(&last->data, &new_data) < 0) {
+    if (last == nullptr || comparator(last->data, new_data) < 0) {
       auto *new_element = new CLIST_LINK;
       new_element->data = new_data;
       if (last == nullptr) {
@@ -944,11 +940,11 @@ public:
       // Need to use an iterator.
       CLIST_ITERATOR it(this);
       for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
-        void *data = it.data();
+        auto data = it.data();
         if (data == new_data && unique) {
           return false;
         }
-        if (comparator(&data, &new_data) > 0) {
+        if (comparator(data, new_data) > 0) {
           break;
         }
       }
@@ -967,7 +963,7 @@ public:
   // the set difference minuend - subtrahend to this, being the elements
   // of minuend that do not compare equal to anything in subtrahend.
   // If unique is true, any duplicates in minuend are also eliminated.
-  void set_subtract(int comparator(const void *, const void *), bool unique, CLIST *minuend,
+  void set_subtract(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLIST *minuend,
     CLIST *subtrahend) {
     shallow_clear();
     CLIST_ITERATOR m_it(minuend);
@@ -975,16 +971,16 @@ public:
     // Since both lists are sorted, finding the subtras that are not
     // minus is a case of a parallel iteration.
     for (m_it.mark_cycle_pt(); !m_it.cycled_list(); m_it.forward()) {
-      void *minu = m_it.data();
-      void *subtra = nullptr;
+      auto minu = m_it.data();
+      CLASSNAME *subtra = nullptr;
       if (!s_it.empty()) {
         subtra = s_it.data();
-        while (!s_it.at_last() && comparator(&subtra, &minu) < 0) {
+        while (!s_it.at_last() && comparator(subtra, minu) < 0) {
           s_it.forward();
           subtra = s_it.data();
         }
       }
-      if (subtra == nullptr || comparator(&subtra, &minu) != 0) {
+      if (subtra == nullptr || comparator(subtra, minu) != 0) {
         add_sorted(comparator, unique, minu);
       }
     }
","{'added': [(53, '    CLIST_LINK *next{};'), (54, '    CLASSNAME *data{};'), (56, '    CLIST_LINK() = default;'), (188, '      CLASSNAME *new_data) {'), (231, '      CLASSNAME *new_data) {'), (276, '      CLASSNAME *new_data) {'), (315, '      CLASSNAME *new_data) {'), (422, '    CLASSNAME *data() { // get current data'), (438, '    CLASSNAME *data_relative(  // get data + or - ...'), (468, '    CLASSNAME *forward() {'), (498, '    CLASSNAME *extract() {'), (533, '    CLASSNAME *move_to_first() {'), (547, '    CLASSNAME *move_to_last() {'), (638, '      CLASSNAME *new_data) {'), (894, '      const CLASSNAME *, const CLASSNAME *)) {'), (899, '      std::vector<CLASSNAME *> base;'), (910, '      std::sort(base.begin(), base.end(), comparator);'), (926, '  bool add_sorted(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLASSNAME *new_data) {'), (928, '    if (last == nullptr || comparator(last->data, new_data) < 0) {'), (943, '        auto data = it.data();'), (947, '        if (comparator(data, new_data) > 0) {'), (966, '  void set_subtract(int comparator(const CLASSNAME *, const CLASSNAME *), bool unique, CLIST *minuend,'), (974, '      auto minu = m_it.data();'), (975, '      CLASSNAME *subtra = nullptr;'), (978, '        while (!s_it.at_last() && comparator(subtra, minu) < 0) {'), (983, '      if (subtra == nullptr || comparator(subtra, minu) != 0) {')], 'deleted': [(53, '    CLIST_LINK *next;'), (54, '    void *data;'), (55, ''), (56, '  public:'), (57, '    CLIST_LINK() { // constructor'), (58, '      data = next = nullptr;'), (59, '    }'), (192, '      void *new_data) {'), (235, '      void *new_data) {'), (280, '      void *new_data) {'), (319, '      void *new_data) {'), (426, '    void *data() { // get current data'), (442, '    void *data_relative(  // get data + or - ...'), (472, '    void *forward() {'), (502, '    void *extract() {'), (537, '    void *move_to_first() {'), (551, '    void *move_to_last() {'), (642, '      void *new_data) {'), (898, '      const void *, const void *)) {'), (903, '      std::vector<void *> base;'), (914, '      qsort(&base[0], count, sizeof(base[0]), comparator);'), (930, '  bool add_sorted(int comparator(const void *, const void *), bool unique, void *new_data) {'), (932, '    if (last == nullptr || comparator(&last->data, &new_data) < 0) {'), (947, '        void *data = it.data();'), (951, '        if (comparator(&data, &new_data) > 0) {'), (970, '  void set_subtract(int comparator(const void *, const void *), bool unique, CLIST *minuend,'), (978, '      void *minu = m_it.data();'), (979, '      void *subtra = nullptr;'), (982, '        while (!s_it.at_last() && comparator(&subtra, &minu) < 0) {'), (987, '      if (subtra == nullptr || comparator(&subtra, &minu) != 0) {')]}",yes
src\textord\bbgrid.h,src\textord\bbgrid.h,5adf0c8ab333e4fbc6996523f89e08b15474a72d,3088d2eecc84a5bfb8a983cf702e1e1e964138cc,Use real CLASSNAME type for list. Update sorting callback signatures.,"@@ -364,10 +364,7 @@ private:
 
 // Sort function to sort a BBC by bounding_box().left().
 template <class BBC>
-int SortByBoxLeft(const void *void1, const void *void2) {
-  // The void*s are actually doubly indirected, so get rid of one level.
-  const BBC *p1 = *static_cast<const BBC *const *>(void1);
-  const BBC *p2 = *static_cast<const BBC *const *>(void2);
+int SortByBoxLeft(const BBC *p1, const BBC *p2) {
   int result = p1->bounding_box().left() - p2->bounding_box().left();
   if (result != 0) {
     return result;
@@ -384,10 +381,7 @@ int SortByBoxLeft(const void *void1, const void *void2) {
 }
 
 template <class BBC>
-bool StdSortByBoxLeft(const void *void1, const void *void2) {
-  // The void*s are actually doubly indirected, so get rid of one level.
-  const BBC *p1 = *static_cast<const BBC *const *>(void1);
-  const BBC *p2 = *static_cast<const BBC *const *>(void2);
+bool StdSortByBoxLeft(const BBC *p1, const BBC *p2) {
   int result = p1->bounding_box().left() - p2->bounding_box().left();
   if (result != 0) {
     return result < 0;
@@ -405,10 +399,7 @@ bool StdSortByBoxLeft(const void *void1, const void *void2) {
 
 // Sort function to sort a BBC by bounding_box().right() in right-to-left order.
 template <class BBC>
-int SortRightToLeft(const void *void1, const void *void2) {
-  // The void*s are actually doubly indirected, so get rid of one level.
-  const BBC *p1 = *static_cast<const BBC *const *>(void1);
-  const BBC *p2 = *static_cast<const BBC *const *>(void2);
+int SortRightToLeft(const BBC *p1, const BBC *p2) {
   int result = p2->bounding_box().right() - p1->bounding_box().right();
   if (result != 0) {
     return result;
@@ -425,10 +416,7 @@ int SortRightToLeft(const void *void1, const void *void2) {
 }
 
 template <class BBC>
-bool StdSortRightToLeft(const void *void1, const void *void2) {
-  // The void*s are actually doubly indirected, so get rid of one level.
-  const BBC *p1 = *static_cast<const BBC *const *>(void1);
-  const BBC *p2 = *static_cast<const BBC *const *>(void2);
+bool StdSortRightToLeft(const BBC *p1, const BBC *p2) {
   int result = p2->bounding_box().right() - p1->bounding_box().right();
   if (result != 0) {
     return result < 0;
@@ -446,10 +434,7 @@ bool StdSortRightToLeft(const void *void1, const void *void2) {
 
 // Sort function to sort a BBC by bounding_box().bottom().
 template <class BBC>
-int SortByBoxBottom(const void *void1, const void *void2) {
-  // The void*s are actually doubly indirected, so get rid of one level.
-  const BBC *p1 = *static_cast<const BBC *const *>(void1);
-  const BBC *p2 = *static_cast<const BBC *const *>(void2);
+int SortByBoxBottom(const BBC *p1, const BBC *p2) {
   int result = p1->bounding_box().bottom() - p2->bounding_box().bottom();
   if (result != 0) {
     return result;
","{'added': [(367, 'int SortByBoxLeft(const BBC *p1, const BBC *p2) {'), (384, 'bool StdSortByBoxLeft(const BBC *p1, const BBC *p2) {'), (402, 'int SortRightToLeft(const BBC *p1, const BBC *p2) {'), (419, 'bool StdSortRightToLeft(const BBC *p1, const BBC *p2) {'), (437, 'int SortByBoxBottom(const BBC *p1, const BBC *p2) {')], 'deleted': [(367, 'int SortByBoxLeft(const void *void1, const void *void2) {'), (368, '  // The void*s are actually doubly indirected, so get rid of one level.'), (369, '  const BBC *p1 = *static_cast<const BBC *const *>(void1);'), (370, '  const BBC *p2 = *static_cast<const BBC *const *>(void2);'), (387, 'bool StdSortByBoxLeft(const void *void1, const void *void2) {'), (388, '  // The void*s are actually doubly indirected, so get rid of one level.'), (389, '  const BBC *p1 = *static_cast<const BBC *const *>(void1);'), (390, '  const BBC *p2 = *static_cast<const BBC *const *>(void2);'), (408, 'int SortRightToLeft(const void *void1, const void *void2) {'), (409, '  // The void*s are actually doubly indirected, so get rid of one level.'), (410, '  const BBC *p1 = *static_cast<const BBC *const *>(void1);'), (411, '  const BBC *p2 = *static_cast<const BBC *const *>(void2);'), (428, 'bool StdSortRightToLeft(const void *void1, const void *void2) {'), (429, '  // The void*s are actually doubly indirected, so get rid of one level.'), (430, '  const BBC *p1 = *static_cast<const BBC *const *>(void1);'), (431, '  const BBC *p2 = *static_cast<const BBC *const *>(void2);'), (449, 'int SortByBoxBottom(const void *void1, const void *void2) {'), (450, '  // The void*s are actually doubly indirected, so get rid of one level.'), (451, '  const BBC *p1 = *static_cast<const BBC *const *>(void1);'), (452, '  const BBC *p2 = *static_cast<const BBC *const *>(void2);')]}",yes
src\ccutil\clst.cpp,,3088d2eecc84a5bfb8a983cf702e1e1e964138cc,32fee1944772ba98f2c181e0a90221c09def78a7,"Make CLIST templated. Move member methods inside the class. Move helper classes (CLIST_LINK and CLIST_ITERATOR inside the list class).

This allows us to use real C++ templates for different instantiations instead of void * emulation.","@@ -1,444 +0,0 @@
-/**********************************************************************
- * File:        clst.cpp  (Formerly clist.c)
- * Description: CONS cell list handling code which is not in the include file.
- * Author:      Phil Cheatle
- *
- * (C) Copyright 1991, Hewlett-Packard Ltd.
- ** Licensed under the Apache License, Version 2.0 (the ""License"");
- ** you may not use this file except in compliance with the License.
- ** You may obtain a copy of the License at
- ** http://www.apache.org/licenses/LICENSE-2.0
- ** Unless required by applicable law or agreed to in writing, software
- ** distributed under the License is distributed on an ""AS IS"" BASIS,
- ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- ** See the License for the specific language governing permissions and
- ** limitations under the License.
- *
- **********************************************************************/
-
-#include ""clst.h""
-#include <cstdlib>
-
-namespace tesseract {
-
-/***********************************************************************
- *              CLIST::internal_deep_clear
- *
- *  Used by the ""deep_clear"" member function of derived list
- *  classes to destroy all the elements on the list.
- *  The calling function passes a ""zapper"" function which can be called to
- *  delete each data element of the list, regardless of its class.  This
- *  technique permits a generic clear function to destroy elements of
- *  different derived types correctly, without requiring virtual functions and
- *  the consequential memory overhead.
- **********************************************************************/
-
-void CLIST::internal_deep_clear( // destroy all links
-    void (*zapper)(void *)) {    // ptr to zapper functn
-  if (!empty()) {
-    auto ptr = last->next;     // set to first
-    last->next = nullptr; // break circle
-    last = nullptr;       // set list empty
-    while (ptr) {
-      auto next = ptr->next;
-      zapper(ptr->data);
-      delete (ptr);
-      ptr = next;
-    }
-  }
-}
-
-/***********************************************************************
- *              CLIST::shallow_clear
- *
- *  Used by the destructor and the ""shallow_clear"" member function of derived
- *  list classes to destroy the list.
- *  The data elements are NOT destroyed.
- *
- **********************************************************************/
-
-void CLIST::shallow_clear() { // destroy all links
-  if (!empty()) {
-    auto ptr = last->next;     // set to first
-    last->next = nullptr; // break circle
-    last = nullptr;       // set list empty
-    while (ptr) {
-      auto next = ptr->next;
-      delete (ptr);
-      ptr = next;
-    }
-  }
-}
-
-/***********************************************************************
- *              CLIST::assign_to_sublist
- *
- *  The list is set to a sublist of another list.  ""This"" list must be empty
- *  before this function is invoked.  The two iterators passed must refer to
- *  the same list, different from ""this"" one.  The sublist removed is the
- *  inclusive list from start_it's current position to end_it's current
- *  position.  If this range passes over the end of the source list then the
- *  source list has its end set to the previous element of start_it.  The
- *  extracted sublist is unaffected by the end point of the source list, its
- *  end point is always the end_it position.
- **********************************************************************/
-
-void CLIST::assign_to_sublist( // to this list
-    CLIST_ITERATOR *start_it,  // from list start
-    CLIST_ITERATOR *end_it) {  // from list end
-  constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");
-
-  if (!empty()) {
-    LIST_NOT_EMPTY.error(""CLIST.assign_to_sublist"", ABORT);
-  }
-
-  last = start_it->extract_sublist(end_it);
-}
-
-/***********************************************************************
- *              CLIST::sort
- *
- *  Sort elements on list
- **********************************************************************/
-
-void CLIST::sort(   // sort elements
-    int comparator( // comparison routine
-        const void *, const void *)) {
-  // Allocate an array of pointers, one per list element.
-  auto count = length();
-  if (count > 0) {
-    // ptr array to sort
-    std::vector<void *> base;
-    base.reserve(count);
-
-    CLIST_ITERATOR it(this);
-
-    // Extract all elements, putting the pointers in the array.
-    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
-      base.push_back(it.extract());
-    }
-
-    // Sort the pointer array.
-    qsort(&base[0], count, sizeof(base[0]), comparator);
-
-    // Rebuild the list from the sorted pointers.
-    for (auto current : base) {
-      it.add_to_end(current);
-    }
-  }
-}
-
-// Assuming list has been sorted already, insert new_data to
-// keep the list sorted according to the same comparison function.
-// Comparison function is the same as used by sort, i.e. uses double
-// indirection. Time is O(1) to add to beginning or end.
-// Time is linear to add pre-sorted items to an empty list.
-// If unique, then don't add duplicate entries.
-// Returns true if the element was added to the list.
-bool CLIST::add_sorted(int comparator(const void *, const void *), bool unique, void *new_data) {
-  // Check for adding at the end.
-  if (last == nullptr || comparator(&last->data, &new_data) < 0) {
-    auto *new_element = new CLIST_LINK;
-    new_element->data = new_data;
-    if (last == nullptr) {
-      new_element->next = new_element;
-    } else {
-      new_element->next = last->next;
-      last->next = new_element;
-    }
-    last = new_element;
-    return true;
-  } else if (!unique || last->data != new_data) {
-    // Need to use an iterator.
-    CLIST_ITERATOR it(this);
-    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
-      void *data = it.data();
-      if (data == new_data && unique) {
-        return false;
-      }
-      if (comparator(&data, &new_data) > 0) {
-        break;
-      }
-    }
-    if (it.cycled_list()) {
-      it.add_to_end(new_data);
-    } else {
-      it.add_before_then_move(new_data);
-    }
-    return true;
-  }
-  return false;
-}
-
-// Assuming that the minuend and subtrahend are already sorted with
-// the same comparison function, shallow clears this and then copies
-// the set difference minuend - subtrahend to this, being the elements
-// of minuend that do not compare equal to anything in subtrahend.
-// If unique is true, any duplicates in minuend are also eliminated.
-void CLIST::set_subtract(int comparator(const void *, const void *), bool unique, CLIST *minuend,
-                         CLIST *subtrahend) {
-  shallow_clear();
-  CLIST_ITERATOR m_it(minuend);
-  CLIST_ITERATOR s_it(subtrahend);
-  // Since both lists are sorted, finding the subtras that are not
-  // minus is a case of a parallel iteration.
-  for (m_it.mark_cycle_pt(); !m_it.cycled_list(); m_it.forward()) {
-    void *minu = m_it.data();
-    void *subtra = nullptr;
-    if (!s_it.empty()) {
-      subtra = s_it.data();
-      while (!s_it.at_last() && comparator(&subtra, &minu) < 0) {
-        s_it.forward();
-        subtra = s_it.data();
-      }
-    }
-    if (subtra == nullptr || comparator(&subtra, &minu) != 0) {
-      add_sorted(comparator, unique, minu);
-    }
-  }
-}
-
-/***********************************************************************
- *  MEMBER FUNCTIONS OF CLASS: CLIST_ITERATOR
- *  =========================================
- **********************************************************************/
-
-/***********************************************************************
- *              CLIST_ITERATOR::forward
- *
- *  Move the iterator to the next element of the list.
- *  REMEMBER: ALL LISTS ARE CIRCULAR.
- **********************************************************************/
-
-void *CLIST_ITERATOR::forward() {
-  if (list->empty()) {
-    return nullptr;
-  }
-
-  if (current) { // not removed so
-                 // set previous
-    prev = current;
-    started_cycling = true;
-    // In case next is deleted by another iterator, get next from current.
-    current = current->next;
-  } else {
-    if (ex_current_was_cycle_pt) {
-      cycle_pt = next;
-    }
-    current = next;
-  }
-
-  next = current->next;
-  return current->data;
-}
-
-/***********************************************************************
- *              CLIST_ITERATOR::data_relative
- *
- *  Return the data pointer to the element ""offset"" elements from current.
- *  ""offset"" must not be less than -1.
- *  (This function can't be INLINEd because it contains a loop)
- **********************************************************************/
-
-void *CLIST_ITERATOR::data_relative( // get data + or - ...
-    int8_t offset) {                 // offset from current
-  CLIST_LINK *ptr;
-
-#ifndef NDEBUG
-  if (!list)
-    NO_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);
-  if (list->empty())
-    EMPTY_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);
-  if (offset < -1)
-    BAD_PARAMETER.error(""CLIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");
-#endif
-
-  if (offset == -1) {
-    ptr = prev;
-  } else {
-    for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {
-      ;
-    }
-  }
-
-  return ptr->data;
-}
-
-/***********************************************************************
- *              CLIST_ITERATOR::move_to_last()
- *
- *  Move current so that it is set to the end of the list.
- *  Return data just in case anyone wants it.
- *  (This function can't be INLINEd because it contains a loop)
- **********************************************************************/
-
-void *CLIST_ITERATOR::move_to_last() {
-  while (current != list->last) {
-    forward();
-  }
-
-  if (current == nullptr) {
-    return nullptr;
-  } else {
-    return current->data;
-  }
-}
-
-/***********************************************************************
- *              CLIST_ITERATOR::exchange()
- *
- *  Given another iterator, whose current element is a different element on
- *  the same list list OR an element of another list, exchange the two current
- *  elements.  On return, each iterator points to the element which was the
- *  other iterators current on entry.
- *  (This function hasn't been in-lined because its a bit big!)
- **********************************************************************/
-
-void CLIST_ITERATOR::exchange(  // positions of 2 links
-    CLIST_ITERATOR *other_it) { // other iterator
-  constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
-
-  /* Do nothing if either list is empty or if both iterators reference the same
-link */
-
-  if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {
-    return;
-  }
-
-  /* Error if either current element is deleted */
-
-  if (!current || !other_it->current) {
-    DONT_EXCHANGE_DELETED.error(""CLIST_ITERATOR.exchange"", ABORT);
-  }
-
-  /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements
-(other before this); non-doubleton adjacent elements (this before other);
-non-adjacent elements. */
-
-  // adjacent links
-  if ((next == other_it->current) || (other_it->next == current)) {
-    // doubleton list
-    if ((next == other_it->current) && (other_it->next == current)) {
-      prev = next = current;
-      other_it->prev = other_it->next = other_it->current;
-    } else { // non-doubleton with
-             // adjacent links
-             // other before this
-      if (other_it->next == current) {
-        other_it->prev->next = current;
-        other_it->current->next = next;
-        current->next = other_it->current;
-        other_it->next = other_it->current;
-        prev = current;
-      } else { // this before other
-        prev->next = other_it->current;
-        current->next = other_it->next;
-        other_it->current->next = current;
-        next = current;
-        other_it->prev = other_it->current;
-      }
-    }
-  } else { // no overlap
-    prev->next = other_it->current;
-    current->next = other_it->next;
-    other_it->prev->next = current;
-    other_it->current->next = next;
-  }
-
-  /* update end of list pointer when necessary (remember that the 2 iterators
-  may iterate over different lists!) */
-
-  if (list->last == current) {
-    list->last = other_it->current;
-  }
-  if (other_it->list->last == other_it->current) {
-    other_it->list->last = current;
-  }
-
-  if (current == cycle_pt) {
-    cycle_pt = other_it->cycle_pt;
-  }
-  if (other_it->current == other_it->cycle_pt) {
-    other_it->cycle_pt = cycle_pt;
-  }
-
-  /* The actual exchange - in all cases*/
-
-  auto old_current = current;
-  current = other_it->current;
-  other_it->current = old_current;
-}
-
-/***********************************************************************
- *              CLIST_ITERATOR::extract_sublist()
- *
- *  This is a private member, used only by CLIST::assign_to_sublist.
- *  Given another iterator for the same list, extract the links from THIS to
- *  OTHER inclusive, link them into a new circular list, and return a
- *  pointer to the last element.
- *  (Can't inline this function because it contains a loop)
- **********************************************************************/
-
-CLIST_LINK *CLIST_ITERATOR::extract_sublist( // from this current
-    CLIST_ITERATOR *other_it) {              // to other current
-  CLIST_ITERATOR temp_it = *this;
-
-  constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
-#ifndef NDEBUG
-  constexpr ERRCODE BAD_EXTRACTION_PTS(""Can't extract sublist from points on different lists"");
-  constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
-
-  if (list != other_it->list)
-    BAD_EXTRACTION_PTS.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
-  if (list->empty())
-    EMPTY_LIST.error(""CLIST_ITERATOR::extract_sublist"", ABORT);
-
-  if (!current || !other_it->current)
-    DONT_EXTRACT_DELETED.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
-#endif
-
-  ex_current_was_last = other_it->ex_current_was_last = false;
-  ex_current_was_cycle_pt = false;
-  other_it->ex_current_was_cycle_pt = false;
-
-  temp_it.mark_cycle_pt();
-  do {                         // walk sublist
-    if (temp_it.cycled_list()) { // can't find end pt
-      BAD_SUBLIST.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
-    }
-
-    if (temp_it.at_last()) {
-      list->last = prev;
-      ex_current_was_last = other_it->ex_current_was_last = true;
-    }
-
-    if (temp_it.current == cycle_pt) {
-      ex_current_was_cycle_pt = true;
-    }
-
-    if (temp_it.current == other_it->cycle_pt) {
-      other_it->ex_current_was_cycle_pt = true;
-    }
-
-    temp_it.forward();
-  } while (temp_it.prev != other_it->current);
-
-  // circularise sublist
-  other_it->current->next = current;
-  auto end_of_new_list = other_it->current;
-
-  // sublist = whole list
-  if (prev == other_it->current) {
-    list->last = nullptr;
-    prev = current = next = nullptr;
-    other_it->prev = other_it->current = other_it->next = nullptr;
-  } else {
-    prev->next = other_it->next;
-    current = other_it->current = nullptr;
-    next = other_it->next;
-    other_it->prev = prev;
-  }
-  return end_of_new_list;
-}
-
-} // namespace tesseract
","{'added': [], 'deleted': [(1, '/**********************************************************************'), (2, ' * File:        clst.cpp  (Formerly clist.c)'), (3, ' * Description: CONS cell list handling code which is not in the include file.'), (4, ' * Author:      Phil Cheatle'), (5, ' *'), (6, ' * (C) Copyright 1991, Hewlett-Packard Ltd.'), (7, ' ** Licensed under the Apache License, Version 2.0 (the ""License"");'), (8, ' ** you may not use this file except in compliance with the License.'), (9, ' ** You may obtain a copy of the License at'), (10, ' ** http://www.apache.org/licenses/LICENSE-2.0'), (11, ' ** Unless required by applicable law or agreed to in writing, software'), (12, ' ** distributed under the License is distributed on an ""AS IS"" BASIS,'), (13, ' ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (14, ' ** See the License for the specific language governing permissions and'), (15, ' ** limitations under the License.'), (16, ' *'), (17, ' **********************************************************************/'), (18, ''), (19, '#include ""clst.h""'), (20, '#include <cstdlib>'), (21, ''), (22, 'namespace tesseract {'), (23, ''), (24, '/***********************************************************************'), (25, ' *              CLIST::internal_deep_clear'), (26, ' *'), (27, ' *  Used by the ""deep_clear"" member function of derived list'), (28, ' *  classes to destroy all the elements on the list.'), (29, ' *  The calling function passes a ""zapper"" function which can be called to'), (30, ' *  delete each data element of the list, regardless of its class.  This'), (31, ' *  technique permits a generic clear function to destroy elements of'), (32, ' *  different derived types correctly, without requiring virtual functions and'), (33, ' *  the consequential memory overhead.'), (34, ' **********************************************************************/'), (35, ''), (36, 'void CLIST::internal_deep_clear( // destroy all links'), (37, '    void (*zapper)(void *)) {    // ptr to zapper functn'), (38, '  if (!empty()) {'), (39, '    auto ptr = last->next;     // set to first'), (40, '    last->next = nullptr; // break circle'), (41, '    last = nullptr;       // set list empty'), (42, '    while (ptr) {'), (43, '      auto next = ptr->next;'), (44, '      zapper(ptr->data);'), (45, '      delete (ptr);'), (46, '      ptr = next;'), (47, '    }'), (48, '  }'), (49, '}'), (50, ''), (51, '/***********************************************************************'), (52, ' *              CLIST::shallow_clear'), (53, ' *'), (54, ' *  Used by the destructor and the ""shallow_clear"" member function of derived'), (55, ' *  list classes to destroy the list.'), (56, ' *  The data elements are NOT destroyed.'), (57, ' *'), (58, ' **********************************************************************/'), (59, ''), (60, 'void CLIST::shallow_clear() { // destroy all links'), (61, '  if (!empty()) {'), (62, '    auto ptr = last->next;     // set to first'), (63, '    last->next = nullptr; // break circle'), (64, '    last = nullptr;       // set list empty'), (65, '    while (ptr) {'), (66, '      auto next = ptr->next;'), (67, '      delete (ptr);'), (68, '      ptr = next;'), (69, '    }'), (70, '  }'), (71, '}'), (72, ''), (73, '/***********************************************************************'), (74, ' *              CLIST::assign_to_sublist'), (75, ' *'), (76, ' *  The list is set to a sublist of another list.  ""This"" list must be empty'), (77, ' *  before this function is invoked.  The two iterators passed must refer to'), (78, ' *  the same list, different from ""this"" one.  The sublist removed is the'), (79, "" *  inclusive list from start_it's current position to end_it's current""), (80, ' *  position.  If this range passes over the end of the source list then the'), (81, ' *  source list has its end set to the previous element of start_it.  The'), (82, ' *  extracted sublist is unaffected by the end point of the source list, its'), (83, ' *  end point is always the end_it position.'), (84, ' **********************************************************************/'), (85, ''), (86, 'void CLIST::assign_to_sublist( // to this list'), (87, '    CLIST_ITERATOR *start_it,  // from list start'), (88, '    CLIST_ITERATOR *end_it) {  // from list end'), (89, '  constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");'), (90, ''), (91, '  if (!empty()) {'), (92, '    LIST_NOT_EMPTY.error(""CLIST.assign_to_sublist"", ABORT);'), (93, '  }'), (94, ''), (95, '  last = start_it->extract_sublist(end_it);'), (96, '}'), (97, ''), (98, '/***********************************************************************'), (99, ' *              CLIST::sort'), (100, ' *'), (101, ' *  Sort elements on list'), (102, ' **********************************************************************/'), (103, ''), (104, 'void CLIST::sort(   // sort elements'), (105, '    int comparator( // comparison routine'), (106, '        const void *, const void *)) {'), (107, '  // Allocate an array of pointers, one per list element.'), (108, '  auto count = length();'), (109, '  if (count > 0) {'), (110, '    // ptr array to sort'), (111, '    std::vector<void *> base;'), (112, '    base.reserve(count);'), (113, ''), (114, '    CLIST_ITERATOR it(this);'), (115, ''), (116, '    // Extract all elements, putting the pointers in the array.'), (117, '    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (118, '      base.push_back(it.extract());'), (119, '    }'), (120, ''), (121, '    // Sort the pointer array.'), (122, '    qsort(&base[0], count, sizeof(base[0]), comparator);'), (123, ''), (124, '    // Rebuild the list from the sorted pointers.'), (125, '    for (auto current : base) {'), (126, '      it.add_to_end(current);'), (127, '    }'), (128, '  }'), (129, '}'), (130, ''), (131, '// Assuming list has been sorted already, insert new_data to'), (132, '// keep the list sorted according to the same comparison function.'), (133, '// Comparison function is the same as used by sort, i.e. uses double'), (134, '// indirection. Time is O(1) to add to beginning or end.'), (135, '// Time is linear to add pre-sorted items to an empty list.'), (136, ""// If unique, then don't add duplicate entries.""), (137, '// Returns true if the element was added to the list.'), (138, 'bool CLIST::add_sorted(int comparator(const void *, const void *), bool unique, void *new_data) {'), (139, '  // Check for adding at the end.'), (140, '  if (last == nullptr || comparator(&last->data, &new_data) < 0) {'), (141, '    auto *new_element = new CLIST_LINK;'), (142, '    new_element->data = new_data;'), (143, '    if (last == nullptr) {'), (144, '      new_element->next = new_element;'), (145, '    } else {'), (146, '      new_element->next = last->next;'), (147, '      last->next = new_element;'), (148, '    }'), (149, '    last = new_element;'), (150, '    return true;'), (151, '  } else if (!unique || last->data != new_data) {'), (152, '    // Need to use an iterator.'), (153, '    CLIST_ITERATOR it(this);'), (154, '    for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (155, '      void *data = it.data();'), (156, '      if (data == new_data && unique) {'), (157, '        return false;'), (158, '      }'), (159, '      if (comparator(&data, &new_data) > 0) {'), (160, '        break;'), (161, '      }'), (162, '    }'), (163, '    if (it.cycled_list()) {'), (164, '      it.add_to_end(new_data);'), (165, '    } else {'), (166, '      it.add_before_then_move(new_data);'), (167, '    }'), (168, '    return true;'), (169, '  }'), (170, '  return false;'), (171, '}'), (172, ''), (173, '// Assuming that the minuend and subtrahend are already sorted with'), (174, '// the same comparison function, shallow clears this and then copies'), (175, '// the set difference minuend - subtrahend to this, being the elements'), (176, '// of minuend that do not compare equal to anything in subtrahend.'), (177, '// If unique is true, any duplicates in minuend are also eliminated.'), (178, 'void CLIST::set_subtract(int comparator(const void *, const void *), bool unique, CLIST *minuend,'), (179, '                         CLIST *subtrahend) {'), (180, '  shallow_clear();'), (181, '  CLIST_ITERATOR m_it(minuend);'), (182, '  CLIST_ITERATOR s_it(subtrahend);'), (183, '  // Since both lists are sorted, finding the subtras that are not'), (184, '  // minus is a case of a parallel iteration.'), (185, '  for (m_it.mark_cycle_pt(); !m_it.cycled_list(); m_it.forward()) {'), (186, '    void *minu = m_it.data();'), (187, '    void *subtra = nullptr;'), (188, '    if (!s_it.empty()) {'), (189, '      subtra = s_it.data();'), (190, '      while (!s_it.at_last() && comparator(&subtra, &minu) < 0) {'), (191, '        s_it.forward();'), (192, '        subtra = s_it.data();'), (193, '      }'), (194, '    }'), (195, '    if (subtra == nullptr || comparator(&subtra, &minu) != 0) {'), (196, '      add_sorted(comparator, unique, minu);'), (197, '    }'), (198, '  }'), (199, '}'), (200, ''), (201, '/***********************************************************************'), (202, ' *  MEMBER FUNCTIONS OF CLASS: CLIST_ITERATOR'), (203, ' *  ========================================='), (204, ' **********************************************************************/'), (205, ''), (206, '/***********************************************************************'), (207, ' *              CLIST_ITERATOR::forward'), (208, ' *'), (209, ' *  Move the iterator to the next element of the list.'), (210, ' *  REMEMBER: ALL LISTS ARE CIRCULAR.'), (211, ' **********************************************************************/'), (212, ''), (213, 'void *CLIST_ITERATOR::forward() {'), (214, '  if (list->empty()) {'), (215, '    return nullptr;'), (216, '  }'), (217, ''), (218, '  if (current) { // not removed so'), (219, '                 // set previous'), (220, '    prev = current;'), (221, '    started_cycling = true;'), (222, '    // In case next is deleted by another iterator, get next from current.'), (223, '    current = current->next;'), (224, '  } else {'), (225, '    if (ex_current_was_cycle_pt) {'), (226, '      cycle_pt = next;'), (227, '    }'), (228, '    current = next;'), (229, '  }'), (230, ''), (231, '  next = current->next;'), (232, '  return current->data;'), (233, '}'), (234, ''), (235, '/***********************************************************************'), (236, ' *              CLIST_ITERATOR::data_relative'), (237, ' *'), (238, ' *  Return the data pointer to the element ""offset"" elements from current.'), (239, ' *  ""offset"" must not be less than -1.'), (240, "" *  (This function can't be INLINEd because it contains a loop)""), (241, ' **********************************************************************/'), (242, ''), (243, 'void *CLIST_ITERATOR::data_relative( // get data + or - ...'), (244, '    int8_t offset) {                 // offset from current'), (245, '  CLIST_LINK *ptr;'), (246, ''), (247, '#ifndef NDEBUG'), (248, '  if (!list)'), (249, '    NO_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);'), (250, '  if (list->empty())'), (251, '    EMPTY_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);'), (252, '  if (offset < -1)'), (253, '    BAD_PARAMETER.error(""CLIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");'), (254, '#endif'), (255, ''), (256, '  if (offset == -1) {'), (257, '    ptr = prev;'), (258, '  } else {'), (259, '    for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {'), (260, '      ;'), (261, '    }'), (262, '  }'), (263, ''), (264, '  return ptr->data;'), (265, '}'), (266, ''), (267, '/***********************************************************************'), (268, ' *              CLIST_ITERATOR::move_to_last()'), (269, ' *'), (270, ' *  Move current so that it is set to the end of the list.'), (271, ' *  Return data just in case anyone wants it.'), (272, "" *  (This function can't be INLINEd because it contains a loop)""), (273, ' **********************************************************************/'), (274, ''), (275, 'void *CLIST_ITERATOR::move_to_last() {'), (276, '  while (current != list->last) {'), (277, '    forward();'), (278, '  }'), (279, ''), (280, '  if (current == nullptr) {'), (281, '    return nullptr;'), (282, '  } else {'), (283, '    return current->data;'), (284, '  }'), (285, '}'), (286, ''), (287, '/***********************************************************************'), (288, ' *              CLIST_ITERATOR::exchange()'), (289, ' *'), (290, ' *  Given another iterator, whose current element is a different element on'), (291, ' *  the same list list OR an element of another list, exchange the two current'), (292, ' *  elements.  On return, each iterator points to the element which was the'), (293, ' *  other iterators current on entry.'), (294, "" *  (This function hasn't been in-lined because its a bit big!)""), (295, ' **********************************************************************/'), (296, ''), (297, 'void CLIST_ITERATOR::exchange(  // positions of 2 links'), (298, '    CLIST_ITERATOR *other_it) { // other iterator'), (299, '  constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can\'t exchange deleted elements of lists"");'), (300, ''), (301, '  /* Do nothing if either list is empty or if both iterators reference the same'), (302, 'link */'), (303, ''), (304, '  if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {'), (305, '    return;'), (306, '  }'), (307, ''), (308, '  /* Error if either current element is deleted */'), (309, ''), (310, '  if (!current || !other_it->current) {'), (311, '    DONT_EXCHANGE_DELETED.error(""CLIST_ITERATOR.exchange"", ABORT);'), (312, '  }'), (313, ''), (314, '  /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements'), (315, '(other before this); non-doubleton adjacent elements (this before other);'), (316, 'non-adjacent elements. */'), (317, ''), (318, '  // adjacent links'), (319, '  if ((next == other_it->current) || (other_it->next == current)) {'), (320, '    // doubleton list'), (321, '    if ((next == other_it->current) && (other_it->next == current)) {'), (322, '      prev = next = current;'), (323, '      other_it->prev = other_it->next = other_it->current;'), (324, '    } else { // non-doubleton with'), (325, '             // adjacent links'), (326, '             // other before this'), (327, '      if (other_it->next == current) {'), (328, '        other_it->prev->next = current;'), (329, '        other_it->current->next = next;'), (330, '        current->next = other_it->current;'), (331, '        other_it->next = other_it->current;'), (332, '        prev = current;'), (333, '      } else { // this before other'), (334, '        prev->next = other_it->current;'), (335, '        current->next = other_it->next;'), (336, '        other_it->current->next = current;'), (337, '        next = current;'), (338, '        other_it->prev = other_it->current;'), (339, '      }'), (340, '    }'), (341, '  } else { // no overlap'), (342, '    prev->next = other_it->current;'), (343, '    current->next = other_it->next;'), (344, '    other_it->prev->next = current;'), (345, '    other_it->current->next = next;'), (346, '  }'), (347, ''), (348, '  /* update end of list pointer when necessary (remember that the 2 iterators'), (349, '  may iterate over different lists!) */'), (350, ''), (351, '  if (list->last == current) {'), (352, '    list->last = other_it->current;'), (353, '  }'), (354, '  if (other_it->list->last == other_it->current) {'), (355, '    other_it->list->last = current;'), (356, '  }'), (357, ''), (358, '  if (current == cycle_pt) {'), (359, '    cycle_pt = other_it->cycle_pt;'), (360, '  }'), (361, '  if (other_it->current == other_it->cycle_pt) {'), (362, '    other_it->cycle_pt = cycle_pt;'), (363, '  }'), (364, ''), (365, '  /* The actual exchange - in all cases*/'), (366, ''), (367, '  auto old_current = current;'), (368, '  current = other_it->current;'), (369, '  other_it->current = old_current;'), (370, '}'), (371, ''), (372, '/***********************************************************************'), (373, ' *              CLIST_ITERATOR::extract_sublist()'), (374, ' *'), (375, ' *  This is a private member, used only by CLIST::assign_to_sublist.'), (376, ' *  Given another iterator for the same list, extract the links from THIS to'), (377, ' *  OTHER inclusive, link them into a new circular list, and return a'), (378, ' *  pointer to the last element.'), (379, "" *  (Can't inline this function because it contains a loop)""), (380, ' **********************************************************************/'), (381, ''), (382, 'CLIST_LINK *CLIST_ITERATOR::extract_sublist( // from this current'), (383, '    CLIST_ITERATOR *other_it) {              // to other current'), (384, '  CLIST_ITERATOR temp_it = *this;'), (385, ''), (386, '  constexpr ERRCODE BAD_SUBLIST(""Can\'t find sublist end point in original list"");'), (387, '#ifndef NDEBUG'), (388, '  constexpr ERRCODE BAD_EXTRACTION_PTS(""Can\'t extract sublist from points on different lists"");'), (389, '  constexpr ERRCODE DONT_EXTRACT_DELETED(""Can\'t extract a sublist marked by deleted points"");'), (390, ''), (391, '  if (list != other_it->list)'), (392, '    BAD_EXTRACTION_PTS.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (393, '  if (list->empty())'), (394, '    EMPTY_LIST.error(""CLIST_ITERATOR::extract_sublist"", ABORT);'), (395, ''), (396, '  if (!current || !other_it->current)'), (397, '    DONT_EXTRACT_DELETED.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (398, '#endif'), (399, ''), (400, '  ex_current_was_last = other_it->ex_current_was_last = false;'), (401, '  ex_current_was_cycle_pt = false;'), (402, '  other_it->ex_current_was_cycle_pt = false;'), (403, ''), (404, '  temp_it.mark_cycle_pt();'), (405, '  do {                         // walk sublist'), (406, ""    if (temp_it.cycled_list()) { // can't find end pt""), (407, '      BAD_SUBLIST.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (408, '    }'), (409, ''), (410, '    if (temp_it.at_last()) {'), (411, '      list->last = prev;'), (412, '      ex_current_was_last = other_it->ex_current_was_last = true;'), (413, '    }'), (414, ''), (415, '    if (temp_it.current == cycle_pt) {'), (416, '      ex_current_was_cycle_pt = true;'), (417, '    }'), (418, ''), (419, '    if (temp_it.current == other_it->cycle_pt) {'), (420, '      other_it->ex_current_was_cycle_pt = true;'), (421, '    }'), (422, ''), (423, '    temp_it.forward();'), (424, '  } while (temp_it.prev != other_it->current);'), (425, ''), (426, '  // circularise sublist'), (427, '  other_it->current->next = current;'), (428, '  auto end_of_new_list = other_it->current;'), (429, ''), (430, '  // sublist = whole list'), (431, '  if (prev == other_it->current) {'), (432, '    list->last = nullptr;'), (433, '    prev = current = next = nullptr;'), (434, '    other_it->prev = other_it->current = other_it->next = nullptr;'), (435, '  } else {'), (436, '    prev->next = other_it->next;'), (437, '    current = other_it->current = nullptr;'), (438, '    next = other_it->next;'), (439, '    other_it->prev = prev;'), (440, '  }'), (441, '  return end_of_new_list;'), (442, '}'), (443, ''), (444, '} // namespace tesseract')]}",yes
src\ccutil\clst.h,src\ccutil\clst.h,3088d2eecc84a5bfb8a983cf702e1e1e964138cc,32fee1944772ba98f2c181e0a90221c09def78a7,"Make CLIST templated. Move member methods inside the class. Move helper classes (CLIST_LINK and CLIST_ITERATOR inside the list class).

This allows us to use real C++ templates for different instantiations instead of void * emulation.","@@ -27,687 +27,976 @@
 
 namespace tesseract {
 
-class CLIST_ITERATOR;
-
-/**********************************************************************
- *              CLASS - CLIST_LINK
- *
- *              Generic link class for singly linked CONS cell lists
- *
- *  Note:  No destructor - elements are assumed to be destroyed EITHER after
- *  they have been extracted from a list OR by the CLIST destructor which
- *  walks the list.
- **********************************************************************/
-
-class CLIST_LINK {
-  friend class CLIST_ITERATOR;
-  friend class CLIST;
-
-  CLIST_LINK *next;
-  void *data;
-
-public:
-  CLIST_LINK() { // constructor
-    data = next = nullptr;
-  }
-
-  CLIST_LINK(const CLIST_LINK &) = delete;
-  void operator=(const CLIST_LINK &) = delete;
-};
-
 /**********************************************************************
  * CLASS - CLIST
  *
  * Generic list class for singly linked CONS cell lists
  **********************************************************************/
 
+template <typename CLASSNAME>
 class TESS_API CLIST {
-  friend class CLIST_ITERATOR;
-
-  CLIST_LINK *last = nullptr; // End of list
-
-  //(Points to head)
-  CLIST_LINK *First() { // return first
-    return last != nullptr ? last->next : nullptr;
-  }
-
-  const CLIST_LINK *First() const { // return first
-    return last != nullptr ? last->next : nullptr;
-  }
+  friend class CLIST_LINK;
+  //friend class CLIST_ITERATOR;
 
 public:
-  ~CLIST() { // destructor
-    shallow_clear();
-  }
-
-  void internal_deep_clear(    // destroy all links
-      void (*zapper)(void *)); // ptr to zapper functn
-
-  void shallow_clear(); // clear list but don't
-  // delete data elements
-
-  bool empty() const { // is list empty?
-    return !last;
-  }
-
-  bool singleton() const {
-    return last != nullptr ? (last == last->next) : false;
-  }
 
-  void shallow_copy(      // dangerous!!
-      CLIST *from_list) { // beware destructors!!
-    last = from_list->last;
-  }
-
-  void assign_to_sublist(       // to this list
-      CLIST_ITERATOR *start_it, // from list start
-      CLIST_ITERATOR *end_it);  // from list end
-
-  int32_t length() const { //# elements in list
-    int32_t count = 0;
-    if (last != nullptr) {
-      count = 1;
-      for (auto it = last->next; it != last; it = it->next) {
-        count++;
-      }
+  /**********************************************************************
+   *              CLASS - CLIST_LINK
+   *
+   *              Generic link class for singly linked CONS cell lists
+   *
+   *  Note:  No destructor - elements are assumed to be destroyed EITHER after
+   *  they have been extracted from a list OR by the CLIST destructor which
+   *  walks the list.
+   **********************************************************************/
+  struct CLIST_LINK {
+    CLIST_LINK *next;
+    void *data;
+
+  public:
+    CLIST_LINK() { // constructor
+      data = next = nullptr;
     }
-    return count;
-  }
-
-  void sort(          // sort elements
-      int comparator( // comparison routine
-          const void *, const void *));
-
-  // Assuming list has been sorted already, insert new_data to
-  // keep the list sorted according to the same comparison function.
-  // Comparison function is the same as used by sort, i.e. uses double
-  // indirection. Time is O(1) to add to beginning or end.
-  // Time is linear to add pre-sorted items to an empty list.
-  // If unique, then don't add duplicate entries.
-  // Returns true if the element was added to the list.
-  bool add_sorted(int comparator(const void *, const void *), bool unique, void *new_data);
 
-  // Assuming that the minuend and subtrahend are already sorted with
-  // the same comparison function, shallow clears this and then copies
-  // the set difference minuend - subtrahend to this, being the elements
-  // of minuend that do not compare equal to anything in subtrahend.
-  // If unique is true, any duplicates in minuend are also eliminated.
-  void set_subtract(int comparator(const void *, const void *), bool unique, CLIST *minuend,
-                    CLIST *subtrahend);
-};
-
-/***********************************************************************
- *              CLASS - CLIST_ITERATOR
- *
- *              Generic iterator class for singly linked lists with embedded
- *links
- **********************************************************************/
-
-class TESS_API CLIST_ITERATOR {
-  friend void CLIST::assign_to_sublist(CLIST_ITERATOR *, CLIST_ITERATOR *);
+    CLIST_LINK(const CLIST_LINK &) = delete;
+    void operator=(const CLIST_LINK &) = delete;
+  };
 
-  CLIST *list;                  // List being iterated
-  CLIST_LINK *prev;             // prev element
-  CLIST_LINK *current;          // current element
-  CLIST_LINK *next;             // next element
-  CLIST_LINK *cycle_pt;         // point we are cycling the list to.
-  bool ex_current_was_last;     // current extracted was end of list
-  bool ex_current_was_cycle_pt; // current extracted was cycle point
-  bool started_cycling;         // Have we moved off the start?
+  /***********************************************************************
+   *              CLASS - CLIST_ITERATOR
+   *
+   *              Generic iterator class for singly linked lists with embedded
+   *links
+   **********************************************************************/
+  class TESS_API CLIST_ITERATOR {
+    CLIST *list;                  // List being iterated
+    CLIST_LINK *prev;             // prev element
+    CLIST_LINK *current;          // current element
+    CLIST_LINK *next;             // next element
+    CLIST_LINK *cycle_pt;         // point we are cycling the list to.
+    bool ex_current_was_last;     // current extracted was end of list
+    bool ex_current_was_cycle_pt; // current extracted was cycle point
+    bool started_cycling;         // Have we moved off the start?
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::extract_sublist()
+     *
+     *  This is a private member, used only by CLIST::assign_to_sublist.
+     *  Given another iterator for the same list, extract the links from THIS to
+     *  OTHER inclusive, link them into a new circular list, and return a
+     *  pointer to the last element.
+     *  (Can't inline this function because it contains a loop)
+     **********************************************************************/
+    CLIST_LINK *extract_sublist(  // from this current
+      CLIST_ITERATOR *other_it) {              // to other current
+      CLIST_ITERATOR temp_it = *this;
+
+      constexpr ERRCODE BAD_SUBLIST(""Can't find sublist end point in original list"");
+#ifndef NDEBUG
+      constexpr ERRCODE BAD_EXTRACTION_PTS(""Can't extract sublist from points on different lists"");
+      constexpr ERRCODE DONT_EXTRACT_DELETED(""Can't extract a sublist marked by deleted points"");
 
-  CLIST_LINK *extract_sublist(   // from this current...
-      CLIST_ITERATOR *other_it); // to other current
+      if (list != other_it->list)
+        BAD_EXTRACTION_PTS.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
+      if (list->empty())
+        EMPTY_LIST.error(""CLIST_ITERATOR::extract_sublist"", ABORT);
 
-public:
-  CLIST_ITERATOR() { // constructor
-    list = nullptr;
-  } // unassigned list
+      if (!current || !other_it->current)
+        DONT_EXTRACT_DELETED.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
+#endif
 
-  CLIST_ITERATOR( // constructor
-      CLIST *list_to_iterate);
+      ex_current_was_last = other_it->ex_current_was_last = false;
+      ex_current_was_cycle_pt = false;
+      other_it->ex_current_was_cycle_pt = false;
 
-  void set_to_list( // change list
-      CLIST *list_to_iterate);
+      temp_it.mark_cycle_pt();
+      do {                         // walk sublist
+        if (temp_it.cycled_list()) { // can't find end pt
+          BAD_SUBLIST.error(""CLIST_ITERATOR.extract_sublist"", ABORT);
+        }
 
-  void add_after_then_move( // add after current &
-      void *new_data);      // move to new
+        if (temp_it.at_last()) {
+          list->last = prev;
+          ex_current_was_last = other_it->ex_current_was_last = true;
+        }
 
-  void add_after_stay_put( // add after current &
-      void *new_data);     // stay at current
+        if (temp_it.current == cycle_pt) {
+          ex_current_was_cycle_pt = true;
+        }
 
-  void add_before_then_move( // add before current &
-      void *new_data);       // move to new
+        if (temp_it.current == other_it->cycle_pt) {
+          other_it->ex_current_was_cycle_pt = true;
+        }
 
-  void add_before_stay_put( // add before current &
-      void *new_data);      // stay at current
+        temp_it.forward();
+      } while (temp_it.prev != other_it->current);
+
+      // circularise sublist
+      other_it->current->next = current;
+      auto end_of_new_list = other_it->current;
+
+      // sublist = whole list
+      if (prev == other_it->current) {
+        list->last = nullptr;
+        prev = current = next = nullptr;
+        other_it->prev = other_it->current = other_it->next = nullptr;
+      } else {
+        prev->next = other_it->next;
+        current = other_it->current = nullptr;
+        next = other_it->next;
+        other_it->prev = prev;
+      }
+      return end_of_new_list;
+    }
 
-  void add_list_after(     // add a list &
-      CLIST *list_to_add); // stay at current
+  public:
+    CLIST_ITERATOR() { // constructor
+      list = nullptr;
+    } // unassigned list
+
+  /***********************************************************************
+   *              CLIST_ITERATOR::CLIST_ITERATOR
+   *
+   *  CONSTRUCTOR - set iterator to specified list;
+   **********************************************************************/
+    CLIST_ITERATOR( // constructor
+      CLIST *list_to_iterate) {
+      set_to_list(list_to_iterate);
+    }
 
-  void add_list_before(    // add a list &
-      CLIST *list_to_add); // move to it 1st item
+    /***********************************************************************
+     *              CLIST_ITERATOR::set_to_list
+     *
+     *  (Re-)initialise the iterator to point to the start of the list_to_iterate
+     *  over.
+     **********************************************************************/
+    void set_to_list( // change list
+      CLIST *list_to_iterate) {
+      list = list_to_iterate;
+      prev = list->last;
+      current = list->First();
+      next = current != nullptr ? current->next : nullptr;
+      cycle_pt = nullptr; // await explicit set
+      started_cycling = false;
+      ex_current_was_last = false;
+      ex_current_was_cycle_pt = false;
+    }
 
-  void *data() { // get current data
+    /***********************************************************************
+     *              CLIST_ITERATOR::add_after_then_move
+     *
+     *  Add a new element to the list after the current element and move the
+     *  iterator to the new element.
+     **********************************************************************/
+    void add_after_then_move( // add after current &
+      void *new_data) {
 #ifndef NDEBUG
-    if (!list) {
-      NO_LIST.error(""CLIST_ITERATOR::data"", ABORT);
-    }
+      if (!new_data) {
+        BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");
+      }
 #endif
-    return current->data;
-  }
-
-  void *data_relative( // get data + or - ...
-      int8_t offset);  // offset from current
-
-  void *forward(); // move to next element
 
-  void *extract(); // remove from list
-
-  void *move_to_first(); // go to start of list
+      auto new_element = new CLIST_LINK;
+      new_element->data = new_data;
 
-  void *move_to_last(); // go to end of list
+      if (list->empty()) {
+        new_element->next = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+      } else {
+        new_element->next = next;
+
+        if (current) { // not extracted
+          current->next = new_element;
+          prev = current;
+          if (current == list->last) {
+            list->last = new_element;
+          }
+        } else { // current extracted
+          prev->next = new_element;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+          if (ex_current_was_cycle_pt) {
+            cycle_pt = new_element;
+          }
+        }
+      }
+      current = new_element;
+    }      // move to new
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::add_after_stay_put
+     *
+     *  Add a new element to the list after the current element but do not move
+     *  the iterator to the new element.
+     **********************************************************************/
+    void add_after_stay_put( // add after current &
+      void *new_data) {
+#ifndef NDEBUG
+      if (!new_data) {
+        BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");
+      }
+#endif
 
-  void mark_cycle_pt(); // remember current
+      auto new_element = new CLIST_LINK;
+      new_element->data = new_data;
 
-  bool empty() const { // is list empty?
-    return list->empty();
-  }
+      if (list->empty()) {
+        new_element->next = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+        ex_current_was_last = false;
+        current = nullptr;
+      } else {
+        new_element->next = next;
+
+        if (current) { // not extracted
+          current->next = new_element;
+          if (prev == current) {
+            prev = new_element;
+          }
+          if (current == list->last) {
+            list->last = new_element;
+          }
+        } else { // current extracted
+          prev->next = new_element;
+          if (ex_current_was_last) {
+            list->last = new_element;
+            ex_current_was_last = false;
+          }
+        }
+        next = new_element;
+      }
+    }     // stay at current
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::add_before_then_move
+     *
+     *  Add a new element to the list before the current element and move the
+     *  iterator to the new element.
+     **********************************************************************/
+    void add_before_then_move( // add before current &
+      void *new_data) {
+#ifndef NDEBUG
+      if (!new_data) {
+        BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");
+      }
+#endif
 
-  bool current_extracted() const { // current extracted?
-    return !current;
-  }
+      auto new_element = new CLIST_LINK;
+      new_element->data = new_data;
 
-  bool at_first() const; // Current is first?
+      if (list->empty()) {
+        new_element->next = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+      } else {
+        prev->next = new_element;
+        if (current) { // not extracted
+          new_element->next = current;
+          next = current;
+        } else { // current extracted
+          new_element->next = next;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+          if (ex_current_was_cycle_pt) {
+            cycle_pt = new_element;
+          }
+        }
+      }
+      current = new_element;
+    }       // move to new
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::add_before_stay_put
+     *
+     *  Add a new element to the list before the current element but don't move the
+     *  iterator to the new element.
+     **********************************************************************/
+    void add_before_stay_put( // add before current &
+      void *new_data) {
+#ifndef NDEBUG
+      if (!new_data) {
+        BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");
+      }
+#endif
 
-  bool at_last() const; // Current is last?
+      auto new_element = new CLIST_LINK;
+      new_element->data = new_data;
 
-  bool cycled_list() const; // Completed a cycle?
+      if (list->empty()) {
+        new_element->next = new_element;
+        list->last = new_element;
+        prev = next = new_element;
+        ex_current_was_last = true;
+        current = nullptr;
+      } else {
+        prev->next = new_element;
+        if (current) { // not extracted
+          new_element->next = current;
+          if (next == current) {
+            next = new_element;
+          }
+        } else { // current extracted
+          new_element->next = next;
+          if (ex_current_was_last) {
+            list->last = new_element;
+          }
+        }
+        prev = new_element;
+      }
+    }      // stay at current
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::add_list_after
+     *
+     *  Insert another list to this list after the current element but don't move
+     *the
+     *  iterator.
+     **********************************************************************/
+    void add_list_after(     // add a list &
+      CLIST *list_to_add) {
+      if (!list_to_add->empty()) {
+        if (list->empty()) {
+          list->last = list_to_add->last;
+          prev = list->last;
+          next = list->First();
+          ex_current_was_last = true;
+          current = nullptr;
+        } else {
+          if (current) { // not extracted
+            current->next = list_to_add->First();
+            if (current == list->last) {
+              list->last = list_to_add->last;
+            }
+            list_to_add->last->next = next;
+            next = current->next;
+          } else { // current extracted
+            prev->next = list_to_add->First();
+            if (ex_current_was_last) {
+              list->last = list_to_add->last;
+              ex_current_was_last = false;
+            }
+            list_to_add->last->next = next;
+            next = prev->next;
+          }
+        }
+        list_to_add->last = nullptr;
+      }
+    } // stay at current
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::add_list_before
+     *
+     *  Insert another list to this list before the current element. Move the
+     *  iterator to the start of the inserted elements
+     *  iterator.
+     **********************************************************************/
+    void add_list_before(    // add a list &
+      CLIST *list_to_add) {
+      if (!list_to_add->empty()) {
+        if (list->empty()) {
+          list->last = list_to_add->last;
+          prev = list->last;
+          current = list->First();
+          next = current->next;
+          ex_current_was_last = false;
+        } else {
+          prev->next = list_to_add->First();
+          if (current) { // not extracted
+            list_to_add->last->next = current;
+          } else { // current extracted
+            list_to_add->last->next = next;
+            if (ex_current_was_last) {
+              list->last = list_to_add->last;
+            }
+            if (ex_current_was_cycle_pt) {
+              cycle_pt = prev->next;
+            }
+          }
+          current = prev->next;
+          next = current->next;
+        }
+        list_to_add->last = nullptr;
+      }
+    } // move to it 1st item
 
-  void add_to_end(     // add at end &
-      void *new_data); // don't move
+    void *data() { // get current data
+#ifndef NDEBUG
+      if (!list) {
+        NO_LIST.error(""CLIST_ITERATOR::data"", ABORT);
+      }
+#endif
+      return current->data;
+    }
 
-  void exchange(                 // positions of 2 links
-      CLIST_ITERATOR *other_it); // other iterator
+    /***********************************************************************
+     *              CLIST_ITERATOR::data_relative
+     *
+     *  Return the data pointer to the element ""offset"" elements from current.
+     *  ""offset"" must not be less than -1.
+     *  (This function can't be INLINEd because it contains a loop)
+     **********************************************************************/
+    void *data_relative(  // get data + or - ...
+      int8_t offset) {                 // offset from current
+      CLIST_LINK *ptr;
 
-  int32_t length() const; //# elements in list
+#ifndef NDEBUG
+      if (!list)
+        NO_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);
+      if (list->empty())
+        EMPTY_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);
+      if (offset < -1)
+        BAD_PARAMETER.error(""CLIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");
+#endif
 
-  void sort(          // sort elements
-      int comparator( // comparison routine
-          const void *, const void *));
-};
+      if (offset == -1) {
+        ptr = prev;
+      } else {
+        for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {
+          ;
+        }
+      }
 
-/***********************************************************************
- *              CLIST_ITERATOR::set_to_list
- *
- *  (Re-)initialise the iterator to point to the start of the list_to_iterate
- *  over.
- **********************************************************************/
+      return ptr->data;
+    }
 
-inline void CLIST_ITERATOR::set_to_list( // change list
-    CLIST *list_to_iterate) {
-  list = list_to_iterate;
-  prev = list->last;
-  current = list->First();
-  next = current != nullptr ? current->next : nullptr;
-  cycle_pt = nullptr; // await explicit set
-  started_cycling = false;
-  ex_current_was_last = false;
-  ex_current_was_cycle_pt = false;
-}
-
-/***********************************************************************
- *              CLIST_ITERATOR::CLIST_ITERATOR
- *
- *  CONSTRUCTOR - set iterator to specified list;
- **********************************************************************/
+    /***********************************************************************
+     *              CLIST_ITERATOR::forward
+     *
+     *  Move the iterator to the next element of the list.
+     *  REMEMBER: ALL LISTS ARE CIRCULAR.
+     **********************************************************************/
+    void *forward() {
+      if (list->empty()) {
+        return nullptr;
+      }
 
-inline CLIST_ITERATOR::CLIST_ITERATOR(CLIST *list_to_iterate) {
-  set_to_list(list_to_iterate);
-}
+      if (current) { // not removed so
+        // set previous
+        prev = current;
+        started_cycling = true;
+        // In case next is deleted by another iterator, get next from current.
+        current = current->next;
+      } else {
+        if (ex_current_was_cycle_pt) {
+          cycle_pt = next;
+        }
+        current = next;
+      }
 
-/***********************************************************************
- *              CLIST_ITERATOR::add_after_then_move
- *
- *  Add a new element to the list after the current element and move the
- *  iterator to the new element.
- **********************************************************************/
+      next = current->next;
+      return current->data;
+    }
 
-inline void CLIST_ITERATOR::add_after_then_move( // element to add
-    void *new_data) {
+    /***********************************************************************
+     *              CLIST_ITERATOR::extract
+     *
+     *  Do extraction by removing current from the list, deleting the cons cell
+     *  and returning the data to the caller, but NOT updating the iterator.  (So
+     *  that any calling loop can do this.)  The iterator's current points to
+     *  nullptr.  If the data is to be deleted, this is the callers responsibility.
+     **********************************************************************/
+    void *extract() {
 #ifndef NDEBUG
-  if (!new_data) {
-    BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");
-  }
+      if (!current) { // list empty or
+        // element extracted
+        NULL_CURRENT.error(""CLIST_ITERATOR::extract"", ABORT);
+      }
 #endif
 
-  auto new_element = new CLIST_LINK;
-  new_element->data = new_data;
-
-  if (list->empty()) {
-    new_element->next = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-  } else {
-    new_element->next = next;
+      if (list->singleton()) {
+        // Special case where we do need to change the iterator.
+        prev = next = list->last = nullptr;
+      } else {
+        prev->next = next; // remove from list
 
-    if (current) { // not extracted
-      current->next = new_element;
-      prev = current;
-      if (current == list->last) {
-        list->last = new_element;
+        if (current == list->last) {
+          list->last = prev;
+          ex_current_was_last = true;
+        } else {
+          ex_current_was_last = false;
+        }
       }
-    } else { // current extracted
-      prev->next = new_element;
-      if (ex_current_was_last) {
-        list->last = new_element;
+      // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.
+      ex_current_was_cycle_pt = (current == cycle_pt);
+      auto extracted_data = current->data;
+      delete (current); // destroy CONS cell
+      current = nullptr;
+      return extracted_data;
+    } // remove from list
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::move_to_first()
+     *
+     *  Move current so that it is set to the start of the list.
+     *  Return data just in case anyone wants it.
+     **********************************************************************/
+    void *move_to_first() {
+      current = list->First();
+      prev = list->last;
+      next = current != nullptr ? current->next : nullptr;
+      return current != nullptr ? current->data : nullptr;
+    } // go to start of list
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::move_to_last()
+     *
+     *  Move current so that it is set to the end of the list.
+     *  Return data just in case anyone wants it.
+     *  (This function can't be INLINEd because it contains a loop)
+     **********************************************************************/
+    void *move_to_last() {
+      while (current != list->last) {
+        forward();
       }
-      if (ex_current_was_cycle_pt) {
-        cycle_pt = new_element;
+
+      if (current == nullptr) {
+        return nullptr;
+      } else {
+        return current->data;
       }
     }
-  }
-  current = new_element;
-}
 
-/***********************************************************************
- *              CLIST_ITERATOR::add_after_stay_put
- *
- *  Add a new element to the list after the current element but do not move
- *  the iterator to the new element.
- **********************************************************************/
-
-inline void CLIST_ITERATOR::add_after_stay_put( // element to add
-    void *new_data) {
+    /***********************************************************************
+     *              CLIST_ITERATOR::mark_cycle_pt()
+     *
+     *  Remember the current location so that we can tell whether we've returned
+     *  to this point later.
+     *
+     *  If the current point is deleted either now, or in the future, the cycle
+     *  point will be set to the next item which is set to current.  This could be
+     *  by a forward, add_after_then_move or add_after_then_move.
+     **********************************************************************/
+    void mark_cycle_pt() {
 #ifndef NDEBUG
-  if (!new_data) {
-    BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");
-  }
+      if (!list) {
+        NO_LIST.error(""CLIST_ITERATOR::mark_cycle_pt"", ABORT);
+      }
 #endif
 
-  auto new_element = new CLIST_LINK;
-  new_element->data = new_data;
-
-  if (list->empty()) {
-    new_element->next = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-    ex_current_was_last = false;
-    current = nullptr;
-  } else {
-    new_element->next = next;
-
-    if (current) { // not extracted
-      current->next = new_element;
-      if (prev == current) {
-        prev = new_element;
-      }
-      if (current == list->last) {
-        list->last = new_element;
-      }
-    } else { // current extracted
-      prev->next = new_element;
-      if (ex_current_was_last) {
-        list->last = new_element;
-        ex_current_was_last = false;
+      if (current) {
+        cycle_pt = current;
+      } else {
+        ex_current_was_cycle_pt = true;
       }
+      started_cycling = false;
+    } // remember current
+
+    bool empty() const { // is list empty?
+      return list->empty();
     }
-    next = new_element;
-  }
-}
 
-/***********************************************************************
- *              CLIST_ITERATOR::add_before_then_move
- *
- *  Add a new element to the list before the current element and move the
- *  iterator to the new element.
- **********************************************************************/
+    bool current_extracted() const { // current extracted?
+      return !current;
+    }
 
-inline void CLIST_ITERATOR::add_before_then_move( // element to add
-    void *new_data) {
+    /***********************************************************************
+     *              CLIST_ITERATOR::at_first()
+     *
+     *  Are we at the start of the list?
+     *
+     **********************************************************************/
+    bool at_first() const {
+      // we're at a deleted
+      return ((list->empty()) || (current == list->First()) ||
+        ((current == nullptr) && (prev == list->last) && // NON-last pt between
+          !ex_current_was_last));                         // first and last
+    } // Current is first?
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::at_last()
+     *
+     *  Are we at the end of the list?
+     *
+     **********************************************************************/
+    bool at_last() const {
+      // we're at a deleted
+      return ((list->empty()) || (current == list->last) ||
+        ((current == nullptr) && (prev == list->last) && // last point between
+          ex_current_was_last));                          // first and last
+    } // Current is last?
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::cycled_list()
+     *
+     *  Have we returned to the cycle_pt since it was set?
+     *
+     **********************************************************************/
+    bool cycled_list() const { // Completed a cycle?
+      return ((list->empty()) || ((current == cycle_pt) && started_cycling));
+    }
+
+    /***********************************************************************
+     *              CLIST_ITERATOR::add_to_end
+     *
+     *  Add a new element to the end of the list without moving the iterator.
+     *  This is provided because a single linked list cannot move to the last as
+     *  the iterator couldn't set its prev pointer.  Adding to the end is
+     *  essential for implementing
+                  queues.
+    **********************************************************************/
+    void add_to_end(  // element to add
+      void *new_data) {
 #ifndef NDEBUG
-  if (!new_data) {
-    BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");
-  }
+      if (!list) {
+        NO_LIST.error(""CLIST_ITERATOR::add_to_end"", ABORT);
+      }
+      if (!new_data) {
+        BAD_PARAMETER.error(""CLIST_ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");
+      }
 #endif
 
-  auto new_element = new CLIST_LINK;
-  new_element->data = new_data;
-
-  if (list->empty()) {
-    new_element->next = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-  } else {
-    prev->next = new_element;
-    if (current) { // not extracted
-      new_element->next = current;
-      next = current;
-    } else { // current extracted
-      new_element->next = next;
-      if (ex_current_was_last) {
-        list->last = new_element;
-      }
-      if (ex_current_was_cycle_pt) {
-        cycle_pt = new_element;
+      if (this->at_last()) {
+        this->add_after_stay_put(new_data);
+      } else {
+        if (this->at_first()) {
+          this->add_before_stay_put(new_data);
+          list->last = prev;
+        } else { // Iteratr is elsewhere
+          auto new_element = new CLIST_LINK;
+          new_element->data = new_data;
+
+          new_element->next = list->last->next;
+          list->last->next = new_element;
+          list->last = new_element;
+        }
       }
     }
-  }
-  current = new_element;
-}
 
-/***********************************************************************
- *              CLIST_ITERATOR::add_before_stay_put
- *
- *  Add a new element to the list before the current element but don't move the
- *  iterator to the new element.
- **********************************************************************/
+    /***********************************************************************
+     *              CLIST_ITERATOR::exchange()
+     *
+     *  Given another iterator, whose current element is a different element on
+     *  the same list list OR an element of another list, exchange the two current
+     *  elements.  On return, each iterator points to the element which was the
+     *  other iterators current on entry.
+     *  (This function hasn't been in-lined because its a bit big!)
+     **********************************************************************/
+    void exchange(                 // positions of 2 links
+      CLIST_ITERATOR *other_it) { // other iterator
+      constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can't exchange deleted elements of lists"");
+
+      /* Do nothing if either list is empty or if both iterators reference the same
+    link */
+
+      if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {
+        return;
+      }
 
-inline void CLIST_ITERATOR::add_before_stay_put( // element to add
-    void *new_data) {
-#ifndef NDEBUG
-  if (!new_data) {
-    BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");
-  }
-#endif
+      /* Error if either current element is deleted */
 
-  auto new_element = new CLIST_LINK;
-  new_element->data = new_data;
-
-  if (list->empty()) {
-    new_element->next = new_element;
-    list->last = new_element;
-    prev = next = new_element;
-    ex_current_was_last = true;
-    current = nullptr;
-  } else {
-    prev->next = new_element;
-    if (current) { // not extracted
-      new_element->next = current;
-      if (next == current) {
-        next = new_element;
+      if (!current || !other_it->current) {
+        DONT_EXCHANGE_DELETED.error(""CLIST_ITERATOR.exchange"", ABORT);
       }
-    } else { // current extracted
-      new_element->next = next;
-      if (ex_current_was_last) {
-        list->last = new_element;
-      }
-    }
-    prev = new_element;
-  }
-}
-
-/***********************************************************************
- *              CLIST_ITERATOR::add_list_after
- *
- *  Insert another list to this list after the current element but don't move
- *the
- *  iterator.
- **********************************************************************/
 
-inline void CLIST_ITERATOR::add_list_after(CLIST *list_to_add) {
-  if (!list_to_add->empty()) {
-    if (list->empty()) {
-      list->last = list_to_add->last;
-      prev = list->last;
-      next = list->First();
-      ex_current_was_last = true;
-      current = nullptr;
-    } else {
-      if (current) { // not extracted
-        current->next = list_to_add->First();
-        if (current == list->last) {
-          list->last = list_to_add->last;
-        }
-        list_to_add->last->next = next;
-        next = current->next;
-      } else { // current extracted
-        prev->next = list_to_add->First();
-        if (ex_current_was_last) {
-          list->last = list_to_add->last;
-          ex_current_was_last = false;
+      /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements
+    (other before this); non-doubleton adjacent elements (this before other);
+    non-adjacent elements. */
+
+    // adjacent links
+      if ((next == other_it->current) || (other_it->next == current)) {
+        // doubleton list
+        if ((next == other_it->current) && (other_it->next == current)) {
+          prev = next = current;
+          other_it->prev = other_it->next = other_it->current;
+        } else { // non-doubleton with
+          // adjacent links
+          // other before this
+          if (other_it->next == current) {
+            other_it->prev->next = current;
+            other_it->current->next = next;
+            current->next = other_it->current;
+            other_it->next = other_it->current;
+            prev = current;
+          } else { // this before other
+            prev->next = other_it->current;
+            current->next = other_it->next;
+            other_it->current->next = current;
+            next = current;
+            other_it->prev = other_it->current;
+          }
         }
-        list_to_add->last->next = next;
-        next = prev->next;
+      } else { // no overlap
+        prev->next = other_it->current;
+        current->next = other_it->next;
+        other_it->prev->next = current;
+        other_it->current->next = next;
       }
-    }
-    list_to_add->last = nullptr;
-  }
-}
 
-/***********************************************************************
- *              CLIST_ITERATOR::add_list_before
- *
- *  Insert another list to this list before the current element. Move the
- *  iterator to the start of the inserted elements
- *  iterator.
- **********************************************************************/
+      /* update end of list pointer when necessary (remember that the 2 iterators
+      may iterate over different lists!) */
 
-inline void CLIST_ITERATOR::add_list_before(CLIST *list_to_add) {
-  if (!list_to_add->empty()) {
-    if (list->empty()) {
-      list->last = list_to_add->last;
-      prev = list->last;
-      current = list->First();
-      next = current->next;
-      ex_current_was_last = false;
-    } else {
-      prev->next = list_to_add->First();
-      if (current) { // not extracted
-        list_to_add->last->next = current;
-      } else { // current extracted
-        list_to_add->last->next = next;
-        if (ex_current_was_last) {
-          list->last = list_to_add->last;
-        }
-        if (ex_current_was_cycle_pt) {
-          cycle_pt = prev->next;
-        }
+      if (list->last == current) {
+        list->last = other_it->current;
+      }
+      if (other_it->list->last == other_it->current) {
+        other_it->list->last = current;
       }
-      current = prev->next;
-      next = current->next;
-    }
-    list_to_add->last = nullptr;
-  }
-}
 
-/***********************************************************************
- *              CLIST_ITERATOR::extract
- *
- *  Do extraction by removing current from the list, deleting the cons cell
- *  and returning the data to the caller, but NOT updating the iterator.  (So
- *  that any calling loop can do this.)  The iterator's current points to
- *  nullptr.  If the data is to be deleted, this is the callers responsibility.
- **********************************************************************/
+      if (current == cycle_pt) {
+        cycle_pt = other_it->cycle_pt;
+      }
+      if (other_it->current == other_it->cycle_pt) {
+        other_it->cycle_pt = cycle_pt;
+      }
 
-inline void *CLIST_ITERATOR::extract() {
-#ifndef NDEBUG
-  if (!current) { // list empty or
-                  // element extracted
-    NULL_CURRENT.error(""CLIST_ITERATOR::extract"", ABORT);
-  }
-#endif
+      /* The actual exchange - in all cases*/
 
-  if (list->singleton()) {
-    // Special case where we do need to change the iterator.
-    prev = next = list->last = nullptr;
-  } else {
-    prev->next = next; // remove from list
+      auto old_current = current;
+      current = other_it->current;
+      other_it->current = old_current;
+    }
 
-    if (current == list->last) {
-      list->last = prev;
-      ex_current_was_last = true;
-    } else {
-      ex_current_was_last = false;
+    /***********************************************************************
+     *              CLIST_ITERATOR::length()
+     *
+     *  Return the length of the list
+     *
+     **********************************************************************/
+    int32_t length() const {
+      return list->length();
     }
-  }
-  // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.
-  ex_current_was_cycle_pt = (current == cycle_pt);
-  auto extracted_data = current->data;
-  delete (current); // destroy CONS cell
-  current = nullptr;
-  return extracted_data;
-}
-
-/***********************************************************************
- *              CLIST_ITERATOR::move_to_first()
- *
- *  Move current so that it is set to the start of the list.
- *  Return data just in case anyone wants it.
- **********************************************************************/
 
-inline void *CLIST_ITERATOR::move_to_first() {
-  current = list->First();
-  prev = list->last;
-  next = current != nullptr ? current->next : nullptr;
-  return current != nullptr ? current->data : nullptr;
-}
+    /***********************************************************************
+     *              CLIST_ITERATOR::sort()
+     *
+     *  Sort the elements of the list, then reposition at the start.
+     *
+     **********************************************************************/
+    void sort(     // sort elements
+      int comparator(               // comparison routine
+        const void *, const void *)) {
+      list->sort(comparator);
+      move_to_first();
+    }
+  };
 
-/***********************************************************************
- *              CLIST_ITERATOR::mark_cycle_pt()
- *
- *  Remember the current location so that we can tell whether we've returned
- *  to this point later.
- *
- *  If the current point is deleted either now, or in the future, the cycle
- *  point will be set to the next item which is set to current.  This could be
- *  by a forward, add_after_then_move or add_after_then_move.
- **********************************************************************/
+private:
+  CLIST_LINK *last = nullptr; // End of list
 
-inline void CLIST_ITERATOR::mark_cycle_pt() {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""CLIST_ITERATOR::mark_cycle_pt"", ABORT);
+  //(Points to head)
+  CLIST_LINK *First() { // return first
+    return last != nullptr ? last->next : nullptr;
   }
-#endif
 
-  if (current) {
-    cycle_pt = current;
-  } else {
-    ex_current_was_cycle_pt = true;
+  const CLIST_LINK *First() const { // return first
+    return last != nullptr ? last->next : nullptr;
   }
-  started_cycling = false;
-}
 
-/***********************************************************************
- *              CLIST_ITERATOR::at_first()
- *
- *  Are we at the start of the list?
- *
- **********************************************************************/
+public:
+  ~CLIST() { // destructor
+    shallow_clear();
+  }
 
-inline bool CLIST_ITERATOR::at_first() const {
-  // we're at a deleted
-  return ((list->empty()) || (current == list->First()) ||
-          ((current == nullptr) && (prev == list->last) && // NON-last pt between
-           !ex_current_was_last));                         // first and last
-}
+  /***********************************************************************
+   *              CLIST::internal_deep_clear
+   *
+   *  Used by the ""deep_clear"" member function of derived list
+   *  classes to destroy all the elements on the list.
+   *  The calling function passes a ""zapper"" function which can be called to
+   *  delete each data element of the list, regardless of its class.  This
+   *  technique permits a generic clear function to destroy elements of
+   *  different derived types correctly, without requiring virtual functions and
+   *  the consequential memory overhead.
+   **********************************************************************/
+  void internal_deep_clear() {    // ptr to zapper functn
+    if (!empty()) {
+      auto ptr = last->next;     // set to first
+      last->next = nullptr; // break circle
+      last = nullptr;       // set list empty
+      while (ptr) {
+        auto next = ptr->next;
+        delete ptr->data;
+        delete (ptr);
+        ptr = next;
+      }
+    }
+  }
+  void deep_clear() {
+    internal_deep_clear();
+  }
 
-/***********************************************************************
- *              CLIST_ITERATOR::at_last()
- *
- *  Are we at the end of the list?
- *
- **********************************************************************/
+  /***********************************************************************
+   *              CLIST::shallow_clear
+   *
+   *  Used by the destructor and the ""shallow_clear"" member function of derived
+   *  list classes to destroy the list.
+   *  The data elements are NOT destroyed.
+   *
+   **********************************************************************/
+  void shallow_clear() { // destroy all links
+    if (!empty()) {
+      auto ptr = last->next;     // set to first
+      last->next = nullptr; // break circle
+      last = nullptr;       // set list empty
+      while (ptr) {
+        auto next = ptr->next;
+        delete (ptr);
+        ptr = next;
+      }
+    }
+  }
 
-inline bool CLIST_ITERATOR::at_last() const {
-  // we're at a deleted
-  return ((list->empty()) || (current == list->last) ||
-          ((current == nullptr) && (prev == list->last) && // last point between
-           ex_current_was_last));                          // first and last
-}
+  bool empty() const { // is list empty?
+    return !last;
+  }
 
-/***********************************************************************
- *              CLIST_ITERATOR::cycled_list()
- *
- *  Have we returned to the cycle_pt since it was set?
- *
- **********************************************************************/
+  bool singleton() const {
+    return last != nullptr ? (last == last->next) : false;
+  }
 
-inline bool CLIST_ITERATOR::cycled_list() const {
-  return ((list->empty()) || ((current == cycle_pt) && started_cycling));
-}
+  void shallow_copy(      // dangerous!!
+    CLIST *from_list) { // beware destructors!!
+    last = from_list->last;
+  }
 
-/***********************************************************************
- *              CLIST_ITERATOR::length()
- *
- *  Return the length of the list
- *
- **********************************************************************/
+  /***********************************************************************
+   *              CLIST::assign_to_sublist
+   *
+   *  The list is set to a sublist of another list.  ""This"" list must be empty
+   *  before this function is invoked.  The two iterators passed must refer to
+   *  the same list, different from ""this"" one.  The sublist removed is the
+   *  inclusive list from start_it's current position to end_it's current
+   *  position.  If this range passes over the end of the source list then the
+   *  source list has its end set to the previous element of start_it.  The
+   *  extracted sublist is unaffected by the end point of the source list, its
+   *  end point is always the end_it position.
+   **********************************************************************/
+  void assign_to_sublist(  // to this list
+    CLIST_ITERATOR *start_it,  // from list start
+    CLIST_ITERATOR *end_it) {  // from list end
+    constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");
+
+    if (!empty()) {
+      LIST_NOT_EMPTY.error(""CLIST.assign_to_sublist"", ABORT);
+    }
 
-inline int32_t CLIST_ITERATOR::length() const {
-  return list->length();
-}
+    last = start_it->extract_sublist(end_it);
+  }
 
-/***********************************************************************
- *              CLIST_ITERATOR::sort()
- *
- *  Sort the elements of the list, then reposition at the start.
- *
- **********************************************************************/
+  int32_t length() const { //# elements in list
+    int32_t count = 0;
+    if (last != nullptr) {
+      count = 1;
+      for (auto it = last->next; it != last; it = it->next) {
+        count++;
+      }
+    }
+    return count;
+  }
 
-inline void CLIST_ITERATOR::sort( // sort elements
-    int comparator(               // comparison routine
-        const void *, const void *)) {
-  list->sort(comparator);
-  move_to_first();
-}
+  /***********************************************************************
+   *              CLIST::sort
+   *
+   *  Sort elements on list
+   **********************************************************************/
+  void sort(          // sort elements
+    int comparator( // comparison routine
+      const void *, const void *)) {
+    // Allocate an array of pointers, one per list element.
+    auto count = length();
+    if (count > 0) {
+      // ptr array to sort
+      std::vector<void *> base;
+      base.reserve(count);
+
+      CLIST_ITERATOR it(this);
+
+      // Extract all elements, putting the pointers in the array.
+      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
+        base.push_back(it.extract());
+      }
 
-/***********************************************************************
- *              CLIST_ITERATOR::add_to_end
- *
- *  Add a new element to the end of the list without moving the iterator.
- *  This is provided because a single linked list cannot move to the last as
- *  the iterator couldn't set its prev pointer.  Adding to the end is
- *  essential for implementing
-              queues.
-**********************************************************************/
-
-inline void CLIST_ITERATOR::add_to_end( // element to add
-    void *new_data) {
-#ifndef NDEBUG
-  if (!list) {
-    NO_LIST.error(""CLIST_ITERATOR::add_to_end"", ABORT);
-  }
-  if (!new_data) {
-    BAD_PARAMETER.error(""CLIST_ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");
+      // Sort the pointer array.
+      qsort(&base[0], count, sizeof(base[0]), comparator);
+
+      // Rebuild the list from the sorted pointers.
+      for (auto current : base) {
+        it.add_to_end(current);
+      }
+    }
   }
-#endif
 
-  if (this->at_last()) {
-    this->add_after_stay_put(new_data);
-  } else {
-    if (this->at_first()) {
-      this->add_before_stay_put(new_data);
-      list->last = prev;
-    } else { // Iteratr is elsewhere
-      auto new_element = new CLIST_LINK;
+  // Assuming list has been sorted already, insert new_data to
+  // keep the list sorted according to the same comparison function.
+  // Comparison function is the same as used by sort, i.e. uses double
+  // indirection. Time is O(1) to add to beginning or end.
+  // Time is linear to add pre-sorted items to an empty list.
+  // If unique, then don't add duplicate entries.
+  // Returns true if the element was added to the list.
+  bool add_sorted(int comparator(const void *, const void *), bool unique, void *new_data) {
+    // Check for adding at the end.
+    if (last == nullptr || comparator(&last->data, &new_data) < 0) {
+      auto *new_element = new CLIST_LINK;
       new_element->data = new_data;
-
-      new_element->next = list->last->next;
-      list->last->next = new_element;
-      list->last = new_element;
+      if (last == nullptr) {
+        new_element->next = new_element;
+      } else {
+        new_element->next = last->next;
+        last->next = new_element;
+      }
+      last = new_element;
+      return true;
+    } else if (!unique || last->data != new_data) {
+      // Need to use an iterator.
+      CLIST_ITERATOR it(this);
+      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
+        void *data = it.data();
+        if (data == new_data && unique) {
+          return false;
+        }
+        if (comparator(&data, &new_data) > 0) {
+          break;
+        }
+      }
+      if (it.cycled_list()) {
+        it.add_to_end(new_data);
+      } else {
+        it.add_before_then_move(new_data);
+      }
+      return true;
     }
+    return false;
   }
-}
 
-template <typename CLASSNAME>
-class X_CLIST : public CLIST {
-public:
-  X_CLIST() = default;
-  X_CLIST(const X_CLIST &) = delete;
-  X_CLIST &operator=(const X_CLIST &) = delete;
-
-  void deep_clear() {
-    internal_deep_clear([](void *link) {delete static_cast<CLASSNAME *>(link);});
+  // Assuming that the minuend and subtrahend are already sorted with
+  // the same comparison function, shallow clears this and then copies
+  // the set difference minuend - subtrahend to this, being the elements
+  // of minuend that do not compare equal to anything in subtrahend.
+  // If unique is true, any duplicates in minuend are also eliminated.
+  void set_subtract(int comparator(const void *, const void *), bool unique, CLIST *minuend,
+    CLIST *subtrahend) {
+    shallow_clear();
+    CLIST_ITERATOR m_it(minuend);
+    CLIST_ITERATOR s_it(subtrahend);
+    // Since both lists are sorted, finding the subtras that are not
+    // minus is a case of a parallel iteration.
+    for (m_it.mark_cycle_pt(); !m_it.cycled_list(); m_it.forward()) {
+      void *minu = m_it.data();
+      void *subtra = nullptr;
+      if (!s_it.empty()) {
+        subtra = s_it.data();
+        while (!s_it.at_last() && comparator(&subtra, &minu) < 0) {
+          s_it.forward();
+          subtra = s_it.data();
+        }
+      }
+      if (subtra == nullptr || comparator(&subtra, &minu) != 0) {
+        add_sorted(comparator, unique, minu);
+      }
+    }
   }
 };
 
 #define CLISTIZEH(CLASSNAME)                                    \
-  class CLASSNAME##_CLIST : public X_CLIST<CLASSNAME> {         \
-    using X_CLIST<CLASSNAME>::X_CLIST;                          \
+  class CLASSNAME##_CLIST : public CLIST<CLASSNAME> {           \
+    using CLIST<CLASSNAME>::CLIST;                              \
   };                                                            \
-  struct CLASSNAME##_C_IT : X_ITER<CLIST_ITERATOR, CLASSNAME> { \
-    using X_ITER<CLIST_ITERATOR, CLASSNAME>::X_ITER;            \
+  struct CLASSNAME##_C_IT : X_ITER<CLIST<CLASSNAME>::CLIST_ITERATOR, CLASSNAME> { \
+    using X_ITER<CLIST<CLASSNAME>::CLIST_ITERATOR, CLASSNAME>::X_ITER;            \
   };
 
 } // namespace tesseract
","{'added': [(36, 'template <typename CLASSNAME>'), (38, '  friend class CLIST_LINK;'), (39, '  //friend class CLIST_ITERATOR;'), (43, '  /**********************************************************************'), (44, '   *              CLASS - CLIST_LINK'), (45, '   *'), (46, '   *              Generic link class for singly linked CONS cell lists'), (47, '   *'), (48, '   *  Note:  No destructor - elements are assumed to be destroyed EITHER after'), (49, '   *  they have been extracted from a list OR by the CLIST destructor which'), (50, '   *  walks the list.'), (51, '   **********************************************************************/'), (52, '  struct CLIST_LINK {'), (53, '    CLIST_LINK *next;'), (54, '    void *data;'), (55, ''), (56, '  public:'), (57, '    CLIST_LINK() { // constructor'), (58, '      data = next = nullptr;'), (61, '    CLIST_LINK(const CLIST_LINK &) = delete;'), (62, '    void operator=(const CLIST_LINK &) = delete;'), (63, '  };'), (65, '  /***********************************************************************'), (66, '   *              CLASS - CLIST_ITERATOR'), (67, '   *'), (68, '   *              Generic iterator class for singly linked lists with embedded'), (69, '   *links'), (70, '   **********************************************************************/'), (71, '  class TESS_API CLIST_ITERATOR {'), (72, '    CLIST *list;                  // List being iterated'), (73, '    CLIST_LINK *prev;             // prev element'), (74, '    CLIST_LINK *current;          // current element'), (75, '    CLIST_LINK *next;             // next element'), (76, '    CLIST_LINK *cycle_pt;         // point we are cycling the list to.'), (77, '    bool ex_current_was_last;     // current extracted was end of list'), (78, '    bool ex_current_was_cycle_pt; // current extracted was cycle point'), (79, '    bool started_cycling;         // Have we moved off the start?'), (80, ''), (81, '    /***********************************************************************'), (82, '     *              CLIST_ITERATOR::extract_sublist()'), (83, '     *'), (84, '     *  This is a private member, used only by CLIST::assign_to_sublist.'), (85, '     *  Given another iterator for the same list, extract the links from THIS to'), (86, '     *  OTHER inclusive, link them into a new circular list, and return a'), (87, '     *  pointer to the last element.'), (88, ""     *  (Can't inline this function because it contains a loop)""), (89, '     **********************************************************************/'), (90, '    CLIST_LINK *extract_sublist(  // from this current'), (91, '      CLIST_ITERATOR *other_it) {              // to other current'), (92, '      CLIST_ITERATOR temp_it = *this;'), (93, ''), (94, '      constexpr ERRCODE BAD_SUBLIST(""Can\'t find sublist end point in original list"");'), (95, '#ifndef NDEBUG'), (96, '      constexpr ERRCODE BAD_EXTRACTION_PTS(""Can\'t extract sublist from points on different lists"");'), (97, '      constexpr ERRCODE DONT_EXTRACT_DELETED(""Can\'t extract a sublist marked by deleted points"");'), (99, '      if (list != other_it->list)'), (100, '        BAD_EXTRACTION_PTS.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (101, '      if (list->empty())'), (102, '        EMPTY_LIST.error(""CLIST_ITERATOR::extract_sublist"", ABORT);'), (104, '      if (!current || !other_it->current)'), (105, '        DONT_EXTRACT_DELETED.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (106, '#endif'), (108, '      ex_current_was_last = other_it->ex_current_was_last = false;'), (109, '      ex_current_was_cycle_pt = false;'), (110, '      other_it->ex_current_was_cycle_pt = false;'), (112, '      temp_it.mark_cycle_pt();'), (113, '      do {                         // walk sublist'), (114, ""        if (temp_it.cycled_list()) { // can't find end pt""), (115, '          BAD_SUBLIST.error(""CLIST_ITERATOR.extract_sublist"", ABORT);'), (116, '        }'), (118, '        if (temp_it.at_last()) {'), (119, '          list->last = prev;'), (120, '          ex_current_was_last = other_it->ex_current_was_last = true;'), (121, '        }'), (123, '        if (temp_it.current == cycle_pt) {'), (124, '          ex_current_was_cycle_pt = true;'), (125, '        }'), (127, '        if (temp_it.current == other_it->cycle_pt) {'), (128, '          other_it->ex_current_was_cycle_pt = true;'), (129, '        }'), (131, '        temp_it.forward();'), (132, '      } while (temp_it.prev != other_it->current);'), (133, ''), (134, '      // circularise sublist'), (135, '      other_it->current->next = current;'), (136, '      auto end_of_new_list = other_it->current;'), (137, ''), (138, '      // sublist = whole list'), (139, '      if (prev == other_it->current) {'), (140, '        list->last = nullptr;'), (141, '        prev = current = next = nullptr;'), (142, '        other_it->prev = other_it->current = other_it->next = nullptr;'), (143, '      } else {'), (144, '        prev->next = other_it->next;'), (145, '        current = other_it->current = nullptr;'), (146, '        next = other_it->next;'), (147, '        other_it->prev = prev;'), (148, '      }'), (149, '      return end_of_new_list;'), (150, '    }'), (152, '  public:'), (153, '    CLIST_ITERATOR() { // constructor'), (154, '      list = nullptr;'), (155, '    } // unassigned list'), (156, ''), (157, '  /***********************************************************************'), (158, '   *              CLIST_ITERATOR::CLIST_ITERATOR'), (159, '   *'), (160, '   *  CONSTRUCTOR - set iterator to specified list;'), (161, '   **********************************************************************/'), (162, '    CLIST_ITERATOR( // constructor'), (163, '      CLIST *list_to_iterate) {'), (164, '      set_to_list(list_to_iterate);'), (165, '    }'), (167, '    /***********************************************************************'), (168, '     *              CLIST_ITERATOR::set_to_list'), (169, '     *'), (170, '     *  (Re-)initialise the iterator to point to the start of the list_to_iterate'), (171, '     *  over.'), (172, '     **********************************************************************/'), (173, '    void set_to_list( // change list'), (174, '      CLIST *list_to_iterate) {'), (175, '      list = list_to_iterate;'), (176, '      prev = list->last;'), (177, '      current = list->First();'), (178, '      next = current != nullptr ? current->next : nullptr;'), (179, '      cycle_pt = nullptr; // await explicit set'), (180, '      started_cycling = false;'), (181, '      ex_current_was_last = false;'), (182, '      ex_current_was_cycle_pt = false;'), (183, '    }'), (185, '    /***********************************************************************'), (186, '     *              CLIST_ITERATOR::add_after_then_move'), (187, '     *'), (188, '     *  Add a new element to the list after the current element and move the'), (189, '     *  iterator to the new element.'), (190, '     **********************************************************************/'), (191, '    void add_after_then_move( // add after current &'), (192, '      void *new_data) {'), (194, '      if (!new_data) {'), (195, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");'), (196, '      }'), (199, '      auto new_element = new CLIST_LINK;'), (200, '      new_element->data = new_data;'), (202, '      if (list->empty()) {'), (203, '        new_element->next = new_element;'), (204, '        list->last = new_element;'), (205, '        prev = next = new_element;'), (206, '      } else {'), (207, '        new_element->next = next;'), (208, ''), (209, '        if (current) { // not extracted'), (210, '          current->next = new_element;'), (211, '          prev = current;'), (212, '          if (current == list->last) {'), (213, '            list->last = new_element;'), (214, '          }'), (215, '        } else { // current extracted'), (216, '          prev->next = new_element;'), (217, '          if (ex_current_was_last) {'), (218, '            list->last = new_element;'), (219, '          }'), (220, '          if (ex_current_was_cycle_pt) {'), (221, '            cycle_pt = new_element;'), (222, '          }'), (223, '        }'), (224, '      }'), (225, '      current = new_element;'), (226, '    }      // move to new'), (227, ''), (228, '    /***********************************************************************'), (229, '     *              CLIST_ITERATOR::add_after_stay_put'), (230, '     *'), (231, '     *  Add a new element to the list after the current element but do not move'), (232, '     *  the iterator to the new element.'), (233, '     **********************************************************************/'), (234, '    void add_after_stay_put( // add after current &'), (235, '      void *new_data) {'), (236, '#ifndef NDEBUG'), (237, '      if (!new_data) {'), (238, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");'), (239, '      }'), (240, '#endif'), (242, '      auto new_element = new CLIST_LINK;'), (243, '      new_element->data = new_data;'), (245, '      if (list->empty()) {'), (246, '        new_element->next = new_element;'), (247, '        list->last = new_element;'), (248, '        prev = next = new_element;'), (249, '        ex_current_was_last = false;'), (250, '        current = nullptr;'), (251, '      } else {'), (252, '        new_element->next = next;'), (253, ''), (254, '        if (current) { // not extracted'), (255, '          current->next = new_element;'), (256, '          if (prev == current) {'), (257, '            prev = new_element;'), (258, '          }'), (259, '          if (current == list->last) {'), (260, '            list->last = new_element;'), (261, '          }'), (262, '        } else { // current extracted'), (263, '          prev->next = new_element;'), (264, '          if (ex_current_was_last) {'), (265, '            list->last = new_element;'), (266, '            ex_current_was_last = false;'), (267, '          }'), (268, '        }'), (269, '        next = new_element;'), (270, '      }'), (271, '    }     // stay at current'), (272, ''), (273, '    /***********************************************************************'), (274, '     *              CLIST_ITERATOR::add_before_then_move'), (275, '     *'), (276, '     *  Add a new element to the list before the current element and move the'), (277, '     *  iterator to the new element.'), (278, '     **********************************************************************/'), (279, '    void add_before_then_move( // add before current &'), (280, '      void *new_data) {'), (281, '#ifndef NDEBUG'), (282, '      if (!new_data) {'), (283, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");'), (284, '      }'), (285, '#endif'), (287, '      auto new_element = new CLIST_LINK;'), (288, '      new_element->data = new_data;'), (290, '      if (list->empty()) {'), (291, '        new_element->next = new_element;'), (292, '        list->last = new_element;'), (293, '        prev = next = new_element;'), (294, '      } else {'), (295, '        prev->next = new_element;'), (296, '        if (current) { // not extracted'), (297, '          new_element->next = current;'), (298, '          next = current;'), (299, '        } else { // current extracted'), (300, '          new_element->next = next;'), (301, '          if (ex_current_was_last) {'), (302, '            list->last = new_element;'), (303, '          }'), (304, '          if (ex_current_was_cycle_pt) {'), (305, '            cycle_pt = new_element;'), (306, '          }'), (307, '        }'), (308, '      }'), (309, '      current = new_element;'), (310, '    }       // move to new'), (311, ''), (312, '    /***********************************************************************'), (313, '     *              CLIST_ITERATOR::add_before_stay_put'), (314, '     *'), (315, ""     *  Add a new element to the list before the current element but don't move the""), (316, '     *  iterator to the new element.'), (317, '     **********************************************************************/'), (318, '    void add_before_stay_put( // add before current &'), (319, '      void *new_data) {'), (320, '#ifndef NDEBUG'), (321, '      if (!new_data) {'), (322, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");'), (323, '      }'), (324, '#endif'), (326, '      auto new_element = new CLIST_LINK;'), (327, '      new_element->data = new_data;'), (329, '      if (list->empty()) {'), (330, '        new_element->next = new_element;'), (331, '        list->last = new_element;'), (332, '        prev = next = new_element;'), (333, '        ex_current_was_last = true;'), (334, '        current = nullptr;'), (335, '      } else {'), (336, '        prev->next = new_element;'), (337, '        if (current) { // not extracted'), (338, '          new_element->next = current;'), (339, '          if (next == current) {'), (340, '            next = new_element;'), (341, '          }'), (342, '        } else { // current extracted'), (343, '          new_element->next = next;'), (344, '          if (ex_current_was_last) {'), (345, '            list->last = new_element;'), (346, '          }'), (347, '        }'), (348, '        prev = new_element;'), (349, '      }'), (350, '    }      // stay at current'), (351, ''), (352, '    /***********************************************************************'), (353, '     *              CLIST_ITERATOR::add_list_after'), (354, '     *'), (355, ""     *  Insert another list to this list after the current element but don't move""), (356, '     *the'), (357, '     *  iterator.'), (358, '     **********************************************************************/'), (359, '    void add_list_after(     // add a list &'), (360, '      CLIST *list_to_add) {'), (361, '      if (!list_to_add->empty()) {'), (362, '        if (list->empty()) {'), (363, '          list->last = list_to_add->last;'), (364, '          prev = list->last;'), (365, '          next = list->First();'), (366, '          ex_current_was_last = true;'), (367, '          current = nullptr;'), (368, '        } else {'), (369, '          if (current) { // not extracted'), (370, '            current->next = list_to_add->First();'), (371, '            if (current == list->last) {'), (372, '              list->last = list_to_add->last;'), (373, '            }'), (374, '            list_to_add->last->next = next;'), (375, '            next = current->next;'), (376, '          } else { // current extracted'), (377, '            prev->next = list_to_add->First();'), (378, '            if (ex_current_was_last) {'), (379, '              list->last = list_to_add->last;'), (380, '              ex_current_was_last = false;'), (381, '            }'), (382, '            list_to_add->last->next = next;'), (383, '            next = prev->next;'), (384, '          }'), (385, '        }'), (386, '        list_to_add->last = nullptr;'), (387, '      }'), (388, '    } // stay at current'), (389, ''), (390, '    /***********************************************************************'), (391, '     *              CLIST_ITERATOR::add_list_before'), (392, '     *'), (393, '     *  Insert another list to this list before the current element. Move the'), (394, '     *  iterator to the start of the inserted elements'), (395, '     *  iterator.'), (396, '     **********************************************************************/'), (397, '    void add_list_before(    // add a list &'), (398, '      CLIST *list_to_add) {'), (399, '      if (!list_to_add->empty()) {'), (400, '        if (list->empty()) {'), (401, '          list->last = list_to_add->last;'), (402, '          prev = list->last;'), (403, '          current = list->First();'), (404, '          next = current->next;'), (405, '          ex_current_was_last = false;'), (406, '        } else {'), (407, '          prev->next = list_to_add->First();'), (408, '          if (current) { // not extracted'), (409, '            list_to_add->last->next = current;'), (410, '          } else { // current extracted'), (411, '            list_to_add->last->next = next;'), (412, '            if (ex_current_was_last) {'), (413, '              list->last = list_to_add->last;'), (414, '            }'), (415, '            if (ex_current_was_cycle_pt) {'), (416, '              cycle_pt = prev->next;'), (417, '            }'), (418, '          }'), (419, '          current = prev->next;'), (420, '          next = current->next;'), (421, '        }'), (422, '        list_to_add->last = nullptr;'), (423, '      }'), (424, '    } // move to it 1st item'), (426, '    void *data() { // get current data'), (427, '#ifndef NDEBUG'), (428, '      if (!list) {'), (429, '        NO_LIST.error(""CLIST_ITERATOR::data"", ABORT);'), (430, '      }'), (431, '#endif'), (432, '      return current->data;'), (433, '    }'), (435, '    /***********************************************************************'), (436, '     *              CLIST_ITERATOR::data_relative'), (437, '     *'), (438, '     *  Return the data pointer to the element ""offset"" elements from current.'), (439, '     *  ""offset"" must not be less than -1.'), (440, ""     *  (This function can't be INLINEd because it contains a loop)""), (441, '     **********************************************************************/'), (442, '    void *data_relative(  // get data + or - ...'), (443, '      int8_t offset) {                 // offset from current'), (444, '      CLIST_LINK *ptr;'), (446, '#ifndef NDEBUG'), (447, '      if (!list)'), (448, '        NO_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);'), (449, '      if (list->empty())'), (450, '        EMPTY_LIST.error(""CLIST_ITERATOR::data_relative"", ABORT);'), (451, '      if (offset < -1)'), (452, '        BAD_PARAMETER.error(""CLIST_ITERATOR::data_relative"", ABORT, ""offset < -l"");'), (453, '#endif'), (455, '      if (offset == -1) {'), (456, '        ptr = prev;'), (457, '      } else {'), (458, '        for (ptr = current ? current : prev; offset-- > 0; ptr = ptr->next) {'), (459, '          ;'), (460, '        }'), (461, '      }'), (463, '      return ptr->data;'), (464, '    }'), (466, '    /***********************************************************************'), (467, '     *              CLIST_ITERATOR::forward'), (468, '     *'), (469, '     *  Move the iterator to the next element of the list.'), (470, '     *  REMEMBER: ALL LISTS ARE CIRCULAR.'), (471, '     **********************************************************************/'), (472, '    void *forward() {'), (473, '      if (list->empty()) {'), (474, '        return nullptr;'), (475, '      }'), (477, '      if (current) { // not removed so'), (478, '        // set previous'), (479, '        prev = current;'), (480, '        started_cycling = true;'), (481, '        // In case next is deleted by another iterator, get next from current.'), (482, '        current = current->next;'), (483, '      } else {'), (484, '        if (ex_current_was_cycle_pt) {'), (485, '          cycle_pt = next;'), (486, '        }'), (487, '        current = next;'), (488, '      }'), (490, '      next = current->next;'), (491, '      return current->data;'), (492, '    }'), (494, '    /***********************************************************************'), (495, '     *              CLIST_ITERATOR::extract'), (496, '     *'), (497, '     *  Do extraction by removing current from the list, deleting the cons cell'), (498, '     *  and returning the data to the caller, but NOT updating the iterator.  (So'), (499, ""     *  that any calling loop can do this.)  The iterator's current points to""), (500, '     *  nullptr.  If the data is to be deleted, this is the callers responsibility.'), (501, '     **********************************************************************/'), (502, '    void *extract() {'), (504, '      if (!current) { // list empty or'), (505, '        // element extracted'), (506, '        NULL_CURRENT.error(""CLIST_ITERATOR::extract"", ABORT);'), (507, '      }'), (510, '      if (list->singleton()) {'), (511, '        // Special case where we do need to change the iterator.'), (512, '        prev = next = list->last = nullptr;'), (513, '      } else {'), (514, '        prev->next = next; // remove from list'), (516, '        if (current == list->last) {'), (517, '          list->last = prev;'), (518, '          ex_current_was_last = true;'), (519, '        } else {'), (520, '          ex_current_was_last = false;'), (521, '        }'), (523, '      // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.'), (524, '      ex_current_was_cycle_pt = (current == cycle_pt);'), (525, '      auto extracted_data = current->data;'), (526, '      delete (current); // destroy CONS cell'), (527, '      current = nullptr;'), (528, '      return extracted_data;'), (529, '    } // remove from list'), (530, ''), (531, '    /***********************************************************************'), (532, '     *              CLIST_ITERATOR::move_to_first()'), (533, '     *'), (534, '     *  Move current so that it is set to the start of the list.'), (535, '     *  Return data just in case anyone wants it.'), (536, '     **********************************************************************/'), (537, '    void *move_to_first() {'), (538, '      current = list->First();'), (539, '      prev = list->last;'), (540, '      next = current != nullptr ? current->next : nullptr;'), (541, '      return current != nullptr ? current->data : nullptr;'), (542, '    } // go to start of list'), (543, ''), (544, '    /***********************************************************************'), (545, '     *              CLIST_ITERATOR::move_to_last()'), (546, '     *'), (547, '     *  Move current so that it is set to the end of the list.'), (548, '     *  Return data just in case anyone wants it.'), (549, ""     *  (This function can't be INLINEd because it contains a loop)""), (550, '     **********************************************************************/'), (551, '    void *move_to_last() {'), (552, '      while (current != list->last) {'), (553, '        forward();'), (555, ''), (556, '      if (current == nullptr) {'), (557, '        return nullptr;'), (558, '      } else {'), (559, '        return current->data;'), (563, '    /***********************************************************************'), (564, '     *              CLIST_ITERATOR::mark_cycle_pt()'), (565, '     *'), (566, ""     *  Remember the current location so that we can tell whether we've returned""), (567, '     *  to this point later.'), (568, '     *'), (569, '     *  If the current point is deleted either now, or in the future, the cycle'), (570, '     *  point will be set to the next item which is set to current.  This could be'), (571, '     *  by a forward, add_after_then_move or add_after_then_move.'), (572, '     **********************************************************************/'), (573, '    void mark_cycle_pt() {'), (575, '      if (!list) {'), (576, '        NO_LIST.error(""CLIST_ITERATOR::mark_cycle_pt"", ABORT);'), (577, '      }'), (580, '      if (current) {'), (581, '        cycle_pt = current;'), (582, '      } else {'), (583, '        ex_current_was_cycle_pt = true;'), (585, '      started_cycling = false;'), (586, '    } // remember current'), (587, ''), (588, '    bool empty() const { // is list empty?'), (589, '      return list->empty();'), (592, '    bool current_extracted() const { // current extracted?'), (593, '      return !current;'), (594, '    }'), (596, '    /***********************************************************************'), (597, '     *              CLIST_ITERATOR::at_first()'), (598, '     *'), (599, '     *  Are we at the start of the list?'), (600, '     *'), (601, '     **********************************************************************/'), (602, '    bool at_first() const {'), (603, ""      // we're at a deleted""), (604, '      return ((list->empty()) || (current == list->First()) ||'), (605, '        ((current == nullptr) && (prev == list->last) && // NON-last pt between'), (606, '          !ex_current_was_last));                         // first and last'), (607, '    } // Current is first?'), (608, ''), (609, '    /***********************************************************************'), (610, '     *              CLIST_ITERATOR::at_last()'), (611, '     *'), (612, '     *  Are we at the end of the list?'), (613, '     *'), (614, '     **********************************************************************/'), (615, '    bool at_last() const {'), (616, ""      // we're at a deleted""), (617, '      return ((list->empty()) || (current == list->last) ||'), (618, '        ((current == nullptr) && (prev == list->last) && // last point between'), (619, '          ex_current_was_last));                          // first and last'), (620, '    } // Current is last?'), (621, ''), (622, '    /***********************************************************************'), (623, '     *              CLIST_ITERATOR::cycled_list()'), (624, '     *'), (625, '     *  Have we returned to the cycle_pt since it was set?'), (626, '     *'), (627, '     **********************************************************************/'), (628, '    bool cycled_list() const { // Completed a cycle?'), (629, '      return ((list->empty()) || ((current == cycle_pt) && started_cycling));'), (630, '    }'), (631, ''), (632, '    /***********************************************************************'), (633, '     *              CLIST_ITERATOR::add_to_end'), (634, '     *'), (635, '     *  Add a new element to the end of the list without moving the iterator.'), (636, '     *  This is provided because a single linked list cannot move to the last as'), (637, ""     *  the iterator couldn't set its prev pointer.  Adding to the end is""), (638, '     *  essential for implementing'), (639, '                  queues.'), (640, '    **********************************************************************/'), (641, '    void add_to_end(  // element to add'), (642, '      void *new_data) {'), (644, '      if (!list) {'), (645, '        NO_LIST.error(""CLIST_ITERATOR::add_to_end"", ABORT);'), (646, '      }'), (647, '      if (!new_data) {'), (648, '        BAD_PARAMETER.error(""CLIST_ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");'), (649, '      }'), (652, '      if (this->at_last()) {'), (653, '        this->add_after_stay_put(new_data);'), (654, '      } else {'), (655, '        if (this->at_first()) {'), (656, '          this->add_before_stay_put(new_data);'), (657, '          list->last = prev;'), (658, '        } else { // Iteratr is elsewhere'), (659, '          auto new_element = new CLIST_LINK;'), (660, '          new_element->data = new_data;'), (661, ''), (662, '          new_element->next = list->last->next;'), (663, '          list->last->next = new_element;'), (664, '          list->last = new_element;'), (665, '        }'), (669, '    /***********************************************************************'), (670, '     *              CLIST_ITERATOR::exchange()'), (671, '     *'), (672, '     *  Given another iterator, whose current element is a different element on'), (673, '     *  the same list list OR an element of another list, exchange the two current'), (674, '     *  elements.  On return, each iterator points to the element which was the'), (675, '     *  other iterators current on entry.'), (676, ""     *  (This function hasn't been in-lined because its a bit big!)""), (677, '     **********************************************************************/'), (678, '    void exchange(                 // positions of 2 links'), (679, '      CLIST_ITERATOR *other_it) { // other iterator'), (680, '      constexpr ERRCODE DONT_EXCHANGE_DELETED(""Can\'t exchange deleted elements of lists"");'), (681, ''), (682, '      /* Do nothing if either list is empty or if both iterators reference the same'), (683, '    link */'), (684, ''), (685, '      if ((list->empty()) || (other_it->list->empty()) || (current == other_it->current)) {'), (686, '        return;'), (687, '      }'), (689, '      /* Error if either current element is deleted */'), (691, '      if (!current || !other_it->current) {'), (692, '        DONT_EXCHANGE_DELETED.error(""CLIST_ITERATOR.exchange"", ABORT);'), (695, '      /* Now handle the 4 cases: doubleton list; non-doubleton adjacent elements'), (696, '    (other before this); non-doubleton adjacent elements (this before other);'), (697, '    non-adjacent elements. */'), (698, ''), (699, '    // adjacent links'), (700, '      if ((next == other_it->current) || (other_it->next == current)) {'), (701, '        // doubleton list'), (702, '        if ((next == other_it->current) && (other_it->next == current)) {'), (703, '          prev = next = current;'), (704, '          other_it->prev = other_it->next = other_it->current;'), (705, '        } else { // non-doubleton with'), (706, '          // adjacent links'), (707, '          // other before this'), (708, '          if (other_it->next == current) {'), (709, '            other_it->prev->next = current;'), (710, '            other_it->current->next = next;'), (711, '            current->next = other_it->current;'), (712, '            other_it->next = other_it->current;'), (713, '            prev = current;'), (714, '          } else { // this before other'), (715, '            prev->next = other_it->current;'), (716, '            current->next = other_it->next;'), (717, '            other_it->current->next = current;'), (718, '            next = current;'), (719, '            other_it->prev = other_it->current;'), (720, '          }'), (722, '      } else { // no overlap'), (723, '        prev->next = other_it->current;'), (724, '        current->next = other_it->next;'), (725, '        other_it->prev->next = current;'), (726, '        other_it->current->next = next;'), (729, '      /* update end of list pointer when necessary (remember that the 2 iterators'), (730, '      may iterate over different lists!) */'), (732, '      if (list->last == current) {'), (733, '        list->last = other_it->current;'), (734, '      }'), (735, '      if (other_it->list->last == other_it->current) {'), (736, '        other_it->list->last = current;'), (739, '      if (current == cycle_pt) {'), (740, '        cycle_pt = other_it->cycle_pt;'), (741, '      }'), (742, '      if (other_it->current == other_it->cycle_pt) {'), (743, '        other_it->cycle_pt = cycle_pt;'), (744, '      }'), (746, '      /* The actual exchange - in all cases*/'), (748, '      auto old_current = current;'), (749, '      current = other_it->current;'), (750, '      other_it->current = old_current;'), (751, '    }'), (753, '    /***********************************************************************'), (754, '     *              CLIST_ITERATOR::length()'), (755, '     *'), (756, '     *  Return the length of the list'), (757, '     *'), (758, '     **********************************************************************/'), (759, '    int32_t length() const {'), (760, '      return list->length();'), (763, '    /***********************************************************************'), (764, '     *              CLIST_ITERATOR::sort()'), (765, '     *'), (766, '     *  Sort the elements of the list, then reposition at the start.'), (767, '     *'), (768, '     **********************************************************************/'), (769, '    void sort(     // sort elements'), (770, '      int comparator(               // comparison routine'), (771, '        const void *, const void *)) {'), (772, '      list->sort(comparator);'), (773, '      move_to_first();'), (774, '    }'), (775, '  };'), (777, 'private:'), (778, '  CLIST_LINK *last = nullptr; // End of list'), (780, '  //(Points to head)'), (781, '  CLIST_LINK *First() { // return first'), (782, '    return last != nullptr ? last->next : nullptr;'), (785, '  const CLIST_LINK *First() const { // return first'), (786, '    return last != nullptr ? last->next : nullptr;'), (789, 'public:'), (790, '  ~CLIST() { // destructor'), (791, '    shallow_clear();'), (792, '  }'), (794, '  /***********************************************************************'), (795, '   *              CLIST::internal_deep_clear'), (796, '   *'), (797, '   *  Used by the ""deep_clear"" member function of derived list'), (798, '   *  classes to destroy all the elements on the list.'), (799, '   *  The calling function passes a ""zapper"" function which can be called to'), (800, '   *  delete each data element of the list, regardless of its class.  This'), (801, '   *  technique permits a generic clear function to destroy elements of'), (802, '   *  different derived types correctly, without requiring virtual functions and'), (803, '   *  the consequential memory overhead.'), (804, '   **********************************************************************/'), (805, '  void internal_deep_clear() {    // ptr to zapper functn'), (806, '    if (!empty()) {'), (807, '      auto ptr = last->next;     // set to first'), (808, '      last->next = nullptr; // break circle'), (809, '      last = nullptr;       // set list empty'), (810, '      while (ptr) {'), (811, '        auto next = ptr->next;'), (812, '        delete ptr->data;'), (813, '        delete (ptr);'), (814, '        ptr = next;'), (815, '      }'), (816, '    }'), (817, '  }'), (818, '  void deep_clear() {'), (819, '    internal_deep_clear();'), (820, '  }'), (822, '  /***********************************************************************'), (823, '   *              CLIST::shallow_clear'), (824, '   *'), (825, '   *  Used by the destructor and the ""shallow_clear"" member function of derived'), (826, '   *  list classes to destroy the list.'), (827, '   *  The data elements are NOT destroyed.'), (828, '   *'), (829, '   **********************************************************************/'), (830, '  void shallow_clear() { // destroy all links'), (831, '    if (!empty()) {'), (832, '      auto ptr = last->next;     // set to first'), (833, '      last->next = nullptr; // break circle'), (834, '      last = nullptr;       // set list empty'), (835, '      while (ptr) {'), (836, '        auto next = ptr->next;'), (837, '        delete (ptr);'), (838, '        ptr = next;'), (839, '      }'), (840, '    }'), (841, '  }'), (843, '  bool empty() const { // is list empty?'), (844, '    return !last;'), (845, '  }'), (847, '  bool singleton() const {'), (848, '    return last != nullptr ? (last == last->next) : false;'), (849, '  }'), (851, '  void shallow_copy(      // dangerous!!'), (852, '    CLIST *from_list) { // beware destructors!!'), (853, '    last = from_list->last;'), (854, '  }'), (856, '  /***********************************************************************'), (857, '   *              CLIST::assign_to_sublist'), (858, '   *'), (859, '   *  The list is set to a sublist of another list.  ""This"" list must be empty'), (860, '   *  before this function is invoked.  The two iterators passed must refer to'), (861, '   *  the same list, different from ""this"" one.  The sublist removed is the'), (862, ""   *  inclusive list from start_it's current position to end_it's current""), (863, '   *  position.  If this range passes over the end of the source list then the'), (864, '   *  source list has its end set to the previous element of start_it.  The'), (865, '   *  extracted sublist is unaffected by the end point of the source list, its'), (866, '   *  end point is always the end_it position.'), (867, '   **********************************************************************/'), (868, '  void assign_to_sublist(  // to this list'), (869, '    CLIST_ITERATOR *start_it,  // from list start'), (870, '    CLIST_ITERATOR *end_it) {  // from list end'), (871, '    constexpr ERRCODE LIST_NOT_EMPTY(""Destination list must be empty before extracting a sublist"");'), (872, ''), (873, '    if (!empty()) {'), (874, '      LIST_NOT_EMPTY.error(""CLIST.assign_to_sublist"", ABORT);'), (875, '    }'), (877, '    last = start_it->extract_sublist(end_it);'), (878, '  }'), (880, '  int32_t length() const { //# elements in list'), (881, '    int32_t count = 0;'), (882, '    if (last != nullptr) {'), (883, '      count = 1;'), (884, '      for (auto it = last->next; it != last; it = it->next) {'), (885, '        count++;'), (886, '      }'), (887, '    }'), (888, '    return count;'), (889, '  }'), (891, '  /***********************************************************************'), (892, '   *              CLIST::sort'), (893, '   *'), (894, '   *  Sort elements on list'), (895, '   **********************************************************************/'), (896, '  void sort(          // sort elements'), (897, '    int comparator( // comparison routine'), (898, '      const void *, const void *)) {'), (899, '    // Allocate an array of pointers, one per list element.'), (900, '    auto count = length();'), (901, '    if (count > 0) {'), (902, '      // ptr array to sort'), (903, '      std::vector<void *> base;'), (904, '      base.reserve(count);'), (905, ''), (906, '      CLIST_ITERATOR it(this);'), (907, ''), (908, '      // Extract all elements, putting the pointers in the array.'), (909, '      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (910, '        base.push_back(it.extract());'), (911, '      }'), (913, '      // Sort the pointer array.'), (914, '      qsort(&base[0], count, sizeof(base[0]), comparator);'), (915, ''), (916, '      // Rebuild the list from the sorted pointers.'), (917, '      for (auto current : base) {'), (918, '        it.add_to_end(current);'), (919, '      }'), (920, '    }'), (923, '  // Assuming list has been sorted already, insert new_data to'), (924, '  // keep the list sorted according to the same comparison function.'), (925, '  // Comparison function is the same as used by sort, i.e. uses double'), (926, '  // indirection. Time is O(1) to add to beginning or end.'), (927, '  // Time is linear to add pre-sorted items to an empty list.'), (928, ""  // If unique, then don't add duplicate entries.""), (929, '  // Returns true if the element was added to the list.'), (930, '  bool add_sorted(int comparator(const void *, const void *), bool unique, void *new_data) {'), (931, '    // Check for adding at the end.'), (932, '    if (last == nullptr || comparator(&last->data, &new_data) < 0) {'), (933, '      auto *new_element = new CLIST_LINK;'), (935, '      if (last == nullptr) {'), (936, '        new_element->next = new_element;'), (937, '      } else {'), (938, '        new_element->next = last->next;'), (939, '        last->next = new_element;'), (940, '      }'), (941, '      last = new_element;'), (942, '      return true;'), (943, '    } else if (!unique || last->data != new_data) {'), (944, '      // Need to use an iterator.'), (945, '      CLIST_ITERATOR it(this);'), (946, '      for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {'), (947, '        void *data = it.data();'), (948, '        if (data == new_data && unique) {'), (949, '          return false;'), (950, '        }'), (951, '        if (comparator(&data, &new_data) > 0) {'), (952, '          break;'), (953, '        }'), (954, '      }'), (955, '      if (it.cycled_list()) {'), (956, '        it.add_to_end(new_data);'), (957, '      } else {'), (958, '        it.add_before_then_move(new_data);'), (959, '      }'), (960, '      return true;'), (962, '    return false;'), (965, '  // Assuming that the minuend and subtrahend are already sorted with'), (966, '  // the same comparison function, shallow clears this and then copies'), (967, '  // the set difference minuend - subtrahend to this, being the elements'), (968, '  // of minuend that do not compare equal to anything in subtrahend.'), (969, '  // If unique is true, any duplicates in minuend are also eliminated.'), (970, '  void set_subtract(int comparator(const void *, const void *), bool unique, CLIST *minuend,'), (971, '    CLIST *subtrahend) {'), (972, '    shallow_clear();'), (973, '    CLIST_ITERATOR m_it(minuend);'), (974, '    CLIST_ITERATOR s_it(subtrahend);'), (975, '    // Since both lists are sorted, finding the subtras that are not'), (976, '    // minus is a case of a parallel iteration.'), (977, '    for (m_it.mark_cycle_pt(); !m_it.cycled_list(); m_it.forward()) {'), (978, '      void *minu = m_it.data();'), (979, '      void *subtra = nullptr;'), (980, '      if (!s_it.empty()) {'), (981, '        subtra = s_it.data();'), (982, '        while (!s_it.at_last() && comparator(&subtra, &minu) < 0) {'), (983, '          s_it.forward();'), (984, '          subtra = s_it.data();'), (985, '        }'), (986, '      }'), (987, '      if (subtra == nullptr || comparator(&subtra, &minu) != 0) {'), (988, '        add_sorted(comparator, unique, minu);'), (989, '      }'), (990, '    }'), (995, '  class CLASSNAME##_CLIST : public CLIST<CLASSNAME> {           \\'), (996, '    using CLIST<CLASSNAME>::CLIST;                              \\'), (998, '  struct CLASSNAME##_C_IT : X_ITER<CLIST<CLASSNAME>::CLIST_ITERATOR, CLASSNAME> { \\'), (999, '    using X_ITER<CLIST<CLASSNAME>::CLIST_ITERATOR, CLASSNAME>::X_ITER;            \\')], 'deleted': [(30, 'class CLIST_ITERATOR;'), (31, ''), (32, '/**********************************************************************'), (33, ' *              CLASS - CLIST_LINK'), (34, ' *'), (35, ' *              Generic link class for singly linked CONS cell lists'), (36, ' *'), (37, ' *  Note:  No destructor - elements are assumed to be destroyed EITHER after'), (38, ' *  they have been extracted from a list OR by the CLIST destructor which'), (39, ' *  walks the list.'), (40, ' **********************************************************************/'), (41, ''), (42, 'class CLIST_LINK {'), (43, '  friend class CLIST_ITERATOR;'), (44, '  friend class CLIST;'), (45, ''), (46, '  CLIST_LINK *next;'), (47, '  void *data;'), (48, ''), (49, 'public:'), (50, '  CLIST_LINK() { // constructor'), (51, '    data = next = nullptr;'), (52, '  }'), (53, ''), (54, '  CLIST_LINK(const CLIST_LINK &) = delete;'), (55, '  void operator=(const CLIST_LINK &) = delete;'), (56, '};'), (57, ''), (65, '  friend class CLIST_ITERATOR;'), (66, ''), (67, '  CLIST_LINK *last = nullptr; // End of list'), (68, ''), (69, '  //(Points to head)'), (70, '  CLIST_LINK *First() { // return first'), (71, '    return last != nullptr ? last->next : nullptr;'), (72, '  }'), (73, ''), (74, '  const CLIST_LINK *First() const { // return first'), (75, '    return last != nullptr ? last->next : nullptr;'), (76, '  }'), (79, '  ~CLIST() { // destructor'), (80, '    shallow_clear();'), (81, '  }'), (82, ''), (83, '  void internal_deep_clear(    // destroy all links'), (84, '      void (*zapper)(void *)); // ptr to zapper functn'), (85, ''), (86, ""  void shallow_clear(); // clear list but don't""), (87, '  // delete data elements'), (88, ''), (89, '  bool empty() const { // is list empty?'), (90, '    return !last;'), (91, '  }'), (92, ''), (93, '  bool singleton() const {'), (94, '    return last != nullptr ? (last == last->next) : false;'), (95, '  }'), (97, '  void shallow_copy(      // dangerous!!'), (98, '      CLIST *from_list) { // beware destructors!!'), (99, '    last = from_list->last;'), (100, '  }'), (101, ''), (102, '  void assign_to_sublist(       // to this list'), (103, '      CLIST_ITERATOR *start_it, // from list start'), (104, '      CLIST_ITERATOR *end_it);  // from list end'), (105, ''), (106, '  int32_t length() const { //# elements in list'), (107, '    int32_t count = 0;'), (108, '    if (last != nullptr) {'), (109, '      count = 1;'), (110, '      for (auto it = last->next; it != last; it = it->next) {'), (111, '        count++;'), (112, '      }'), (114, '    return count;'), (115, '  }'), (116, ''), (117, '  void sort(          // sort elements'), (118, '      int comparator( // comparison routine'), (119, '          const void *, const void *));'), (120, ''), (121, '  // Assuming list has been sorted already, insert new_data to'), (122, '  // keep the list sorted according to the same comparison function.'), (123, '  // Comparison function is the same as used by sort, i.e. uses double'), (124, '  // indirection. Time is O(1) to add to beginning or end.'), (125, '  // Time is linear to add pre-sorted items to an empty list.'), (126, ""  // If unique, then don't add duplicate entries.""), (127, '  // Returns true if the element was added to the list.'), (128, '  bool add_sorted(int comparator(const void *, const void *), bool unique, void *new_data);'), (130, '  // Assuming that the minuend and subtrahend are already sorted with'), (131, '  // the same comparison function, shallow clears this and then copies'), (132, '  // the set difference minuend - subtrahend to this, being the elements'), (133, '  // of minuend that do not compare equal to anything in subtrahend.'), (134, '  // If unique is true, any duplicates in minuend are also eliminated.'), (135, '  void set_subtract(int comparator(const void *, const void *), bool unique, CLIST *minuend,'), (136, '                    CLIST *subtrahend);'), (137, '};'), (138, ''), (139, '/***********************************************************************'), (140, ' *              CLASS - CLIST_ITERATOR'), (141, ' *'), (142, ' *              Generic iterator class for singly linked lists with embedded'), (143, ' *links'), (144, ' **********************************************************************/'), (145, ''), (146, 'class TESS_API CLIST_ITERATOR {'), (147, '  friend void CLIST::assign_to_sublist(CLIST_ITERATOR *, CLIST_ITERATOR *);'), (149, '  CLIST *list;                  // List being iterated'), (150, '  CLIST_LINK *prev;             // prev element'), (151, '  CLIST_LINK *current;          // current element'), (152, '  CLIST_LINK *next;             // next element'), (153, '  CLIST_LINK *cycle_pt;         // point we are cycling the list to.'), (154, '  bool ex_current_was_last;     // current extracted was end of list'), (155, '  bool ex_current_was_cycle_pt; // current extracted was cycle point'), (156, '  bool started_cycling;         // Have we moved off the start?'), (158, '  CLIST_LINK *extract_sublist(   // from this current...'), (159, '      CLIST_ITERATOR *other_it); // to other current'), (161, 'public:'), (162, '  CLIST_ITERATOR() { // constructor'), (163, '    list = nullptr;'), (164, '  } // unassigned list'), (166, '  CLIST_ITERATOR( // constructor'), (167, '      CLIST *list_to_iterate);'), (169, '  void set_to_list( // change list'), (170, '      CLIST *list_to_iterate);'), (172, '  void add_after_then_move( // add after current &'), (173, '      void *new_data);      // move to new'), (175, '  void add_after_stay_put( // add after current &'), (176, '      void *new_data);     // stay at current'), (178, '  void add_before_then_move( // add before current &'), (179, '      void *new_data);       // move to new'), (181, '  void add_before_stay_put( // add before current &'), (182, '      void *new_data);      // stay at current'), (184, '  void add_list_after(     // add a list &'), (185, '      CLIST *list_to_add); // stay at current'), (187, '  void add_list_before(    // add a list &'), (188, '      CLIST *list_to_add); // move to it 1st item'), (190, '  void *data() { // get current data'), (192, '    if (!list) {'), (193, '      NO_LIST.error(""CLIST_ITERATOR::data"", ABORT);'), (194, '    }'), (196, '    return current->data;'), (197, '  }'), (198, ''), (199, '  void *data_relative( // get data + or - ...'), (200, '      int8_t offset);  // offset from current'), (201, ''), (202, '  void *forward(); // move to next element'), (204, '  void *extract(); // remove from list'), (205, ''), (206, '  void *move_to_first(); // go to start of list'), (208, '  void *move_to_last(); // go to end of list'), (210, '  void mark_cycle_pt(); // remember current'), (212, '  bool empty() const { // is list empty?'), (213, '    return list->empty();'), (214, '  }'), (216, '  bool current_extracted() const { // current extracted?'), (217, '    return !current;'), (218, '  }'), (220, '  bool at_first() const; // Current is first?'), (222, '  bool at_last() const; // Current is last?'), (224, '  bool cycled_list() const; // Completed a cycle?'), (226, '  void add_to_end(     // add at end &'), (227, ""      void *new_data); // don't move""), (229, '  void exchange(                 // positions of 2 links'), (230, '      CLIST_ITERATOR *other_it); // other iterator'), (232, '  int32_t length() const; //# elements in list'), (234, '  void sort(          // sort elements'), (235, '      int comparator( // comparison routine'), (236, '          const void *, const void *));'), (237, '};'), (239, '/***********************************************************************'), (240, ' *              CLIST_ITERATOR::set_to_list'), (241, ' *'), (242, ' *  (Re-)initialise the iterator to point to the start of the list_to_iterate'), (243, ' *  over.'), (244, ' **********************************************************************/'), (246, 'inline void CLIST_ITERATOR::set_to_list( // change list'), (247, '    CLIST *list_to_iterate) {'), (248, '  list = list_to_iterate;'), (249, '  prev = list->last;'), (250, '  current = list->First();'), (251, '  next = current != nullptr ? current->next : nullptr;'), (252, '  cycle_pt = nullptr; // await explicit set'), (253, '  started_cycling = false;'), (254, '  ex_current_was_last = false;'), (255, '  ex_current_was_cycle_pt = false;'), (256, '}'), (257, ''), (258, '/***********************************************************************'), (259, ' *              CLIST_ITERATOR::CLIST_ITERATOR'), (260, ' *'), (261, ' *  CONSTRUCTOR - set iterator to specified list;'), (262, ' **********************************************************************/'), (264, 'inline CLIST_ITERATOR::CLIST_ITERATOR(CLIST *list_to_iterate) {'), (265, '  set_to_list(list_to_iterate);'), (266, '}'), (268, '/***********************************************************************'), (269, ' *              CLIST_ITERATOR::add_after_then_move'), (270, ' *'), (271, ' *  Add a new element to the list after the current element and move the'), (272, ' *  iterator to the new element.'), (273, ' **********************************************************************/'), (275, 'inline void CLIST_ITERATOR::add_after_then_move( // element to add'), (276, '    void *new_data) {'), (278, '  if (!new_data) {'), (279, '    BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_then_move"", ABORT, ""new_data is nullptr"");'), (280, '  }'), (283, '  auto new_element = new CLIST_LINK;'), (284, '  new_element->data = new_data;'), (285, ''), (286, '  if (list->empty()) {'), (287, '    new_element->next = new_element;'), (288, '    list->last = new_element;'), (289, '    prev = next = new_element;'), (290, '  } else {'), (291, '    new_element->next = next;'), (293, '    if (current) { // not extracted'), (294, '      current->next = new_element;'), (295, '      prev = current;'), (296, '      if (current == list->last) {'), (297, '        list->last = new_element;'), (299, '    } else { // current extracted'), (300, '      prev->next = new_element;'), (301, '      if (ex_current_was_last) {'), (302, '        list->last = new_element;'), (304, '      if (ex_current_was_cycle_pt) {'), (305, '        cycle_pt = new_element;'), (308, '  }'), (309, '  current = new_element;'), (310, '}'), (312, '/***********************************************************************'), (313, ' *              CLIST_ITERATOR::add_after_stay_put'), (314, ' *'), (315, ' *  Add a new element to the list after the current element but do not move'), (316, ' *  the iterator to the new element.'), (317, ' **********************************************************************/'), (318, ''), (319, 'inline void CLIST_ITERATOR::add_after_stay_put( // element to add'), (320, '    void *new_data) {'), (322, '  if (!new_data) {'), (323, '    BAD_PARAMETER.error(""CLIST_ITERATOR::add_after_stay_put"", ABORT, ""new_data is nullptr"");'), (324, '  }'), (327, '  auto new_element = new CLIST_LINK;'), (328, '  new_element->data = new_data;'), (329, ''), (330, '  if (list->empty()) {'), (331, '    new_element->next = new_element;'), (332, '    list->last = new_element;'), (333, '    prev = next = new_element;'), (334, '    ex_current_was_last = false;'), (335, '    current = nullptr;'), (336, '  } else {'), (337, '    new_element->next = next;'), (338, ''), (339, '    if (current) { // not extracted'), (340, '      current->next = new_element;'), (341, '      if (prev == current) {'), (342, '        prev = new_element;'), (343, '      }'), (344, '      if (current == list->last) {'), (345, '        list->last = new_element;'), (346, '      }'), (347, '    } else { // current extracted'), (348, '      prev->next = new_element;'), (349, '      if (ex_current_was_last) {'), (350, '        list->last = new_element;'), (351, '        ex_current_was_last = false;'), (354, '    next = new_element;'), (355, '  }'), (356, '}'), (358, '/***********************************************************************'), (359, ' *              CLIST_ITERATOR::add_before_then_move'), (360, ' *'), (361, ' *  Add a new element to the list before the current element and move the'), (362, ' *  iterator to the new element.'), (363, ' **********************************************************************/'), (365, 'inline void CLIST_ITERATOR::add_before_then_move( // element to add'), (366, '    void *new_data) {'), (368, '  if (!new_data) {'), (369, '    BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_then_move"", ABORT, ""new_data is nullptr"");'), (370, '  }'), (373, '  auto new_element = new CLIST_LINK;'), (374, '  new_element->data = new_data;'), (375, ''), (376, '  if (list->empty()) {'), (377, '    new_element->next = new_element;'), (378, '    list->last = new_element;'), (379, '    prev = next = new_element;'), (380, '  } else {'), (381, '    prev->next = new_element;'), (382, '    if (current) { // not extracted'), (383, '      new_element->next = current;'), (384, '      next = current;'), (385, '    } else { // current extracted'), (386, '      new_element->next = next;'), (387, '      if (ex_current_was_last) {'), (388, '        list->last = new_element;'), (389, '      }'), (390, '      if (ex_current_was_cycle_pt) {'), (391, '        cycle_pt = new_element;'), (394, '  }'), (395, '  current = new_element;'), (396, '}'), (398, '/***********************************************************************'), (399, ' *              CLIST_ITERATOR::add_before_stay_put'), (400, ' *'), (401, "" *  Add a new element to the list before the current element but don't move the""), (402, ' *  iterator to the new element.'), (403, ' **********************************************************************/'), (405, 'inline void CLIST_ITERATOR::add_before_stay_put( // element to add'), (406, '    void *new_data) {'), (407, '#ifndef NDEBUG'), (408, '  if (!new_data) {'), (409, '    BAD_PARAMETER.error(""CLIST_ITERATOR::add_before_stay_put"", ABORT, ""new_data is nullptr"");'), (410, '  }'), (411, '#endif'), (413, '  auto new_element = new CLIST_LINK;'), (414, '  new_element->data = new_data;'), (415, ''), (416, '  if (list->empty()) {'), (417, '    new_element->next = new_element;'), (418, '    list->last = new_element;'), (419, '    prev = next = new_element;'), (420, '    ex_current_was_last = true;'), (421, '    current = nullptr;'), (422, '  } else {'), (423, '    prev->next = new_element;'), (424, '    if (current) { // not extracted'), (425, '      new_element->next = current;'), (426, '      if (next == current) {'), (427, '        next = new_element;'), (429, '    } else { // current extracted'), (430, '      new_element->next = next;'), (431, '      if (ex_current_was_last) {'), (432, '        list->last = new_element;'), (433, '      }'), (434, '    }'), (435, '    prev = new_element;'), (436, '  }'), (437, '}'), (438, ''), (439, '/***********************************************************************'), (440, ' *              CLIST_ITERATOR::add_list_after'), (441, ' *'), (442, "" *  Insert another list to this list after the current element but don't move""), (443, ' *the'), (444, ' *  iterator.'), (445, ' **********************************************************************/'), (447, 'inline void CLIST_ITERATOR::add_list_after(CLIST *list_to_add) {'), (448, '  if (!list_to_add->empty()) {'), (449, '    if (list->empty()) {'), (450, '      list->last = list_to_add->last;'), (451, '      prev = list->last;'), (452, '      next = list->First();'), (453, '      ex_current_was_last = true;'), (454, '      current = nullptr;'), (455, '    } else {'), (456, '      if (current) { // not extracted'), (457, '        current->next = list_to_add->First();'), (458, '        if (current == list->last) {'), (459, '          list->last = list_to_add->last;'), (460, '        }'), (461, '        list_to_add->last->next = next;'), (462, '        next = current->next;'), (463, '      } else { // current extracted'), (464, '        prev->next = list_to_add->First();'), (465, '        if (ex_current_was_last) {'), (466, '          list->last = list_to_add->last;'), (467, '          ex_current_was_last = false;'), (469, '        list_to_add->last->next = next;'), (470, '        next = prev->next;'), (472, '    }'), (473, '    list_to_add->last = nullptr;'), (474, '  }'), (475, '}'), (477, '/***********************************************************************'), (478, ' *              CLIST_ITERATOR::add_list_before'), (479, ' *'), (480, ' *  Insert another list to this list before the current element. Move the'), (481, ' *  iterator to the start of the inserted elements'), (482, ' *  iterator.'), (483, ' **********************************************************************/'), (485, 'inline void CLIST_ITERATOR::add_list_before(CLIST *list_to_add) {'), (486, '  if (!list_to_add->empty()) {'), (487, '    if (list->empty()) {'), (488, '      list->last = list_to_add->last;'), (489, '      prev = list->last;'), (490, '      current = list->First();'), (491, '      next = current->next;'), (492, '      ex_current_was_last = false;'), (493, '    } else {'), (494, '      prev->next = list_to_add->First();'), (495, '      if (current) { // not extracted'), (496, '        list_to_add->last->next = current;'), (497, '      } else { // current extracted'), (498, '        list_to_add->last->next = next;'), (499, '        if (ex_current_was_last) {'), (500, '          list->last = list_to_add->last;'), (501, '        }'), (502, '        if (ex_current_was_cycle_pt) {'), (503, '          cycle_pt = prev->next;'), (504, '        }'), (506, '      current = prev->next;'), (507, '      next = current->next;'), (508, '    }'), (509, '    list_to_add->last = nullptr;'), (510, '  }'), (511, '}'), (513, '/***********************************************************************'), (514, ' *              CLIST_ITERATOR::extract'), (515, ' *'), (516, ' *  Do extraction by removing current from the list, deleting the cons cell'), (517, ' *  and returning the data to the caller, but NOT updating the iterator.  (So'), (518, "" *  that any calling loop can do this.)  The iterator's current points to""), (519, ' *  nullptr.  If the data is to be deleted, this is the callers responsibility.'), (520, ' **********************************************************************/'), (522, 'inline void *CLIST_ITERATOR::extract() {'), (523, '#ifndef NDEBUG'), (524, '  if (!current) { // list empty or'), (525, '                  // element extracted'), (526, '    NULL_CURRENT.error(""CLIST_ITERATOR::extract"", ABORT);'), (527, '  }'), (528, '#endif'), (530, '  if (list->singleton()) {'), (531, '    // Special case where we do need to change the iterator.'), (532, '    prev = next = list->last = nullptr;'), (533, '  } else {'), (534, '    prev->next = next; // remove from list'), (536, '    if (current == list->last) {'), (537, '      list->last = prev;'), (538, '      ex_current_was_last = true;'), (539, '    } else {'), (540, '      ex_current_was_last = false;'), (542, '  }'), (543, '  // Always set ex_current_was_cycle_pt so an add/forward will work in a loop.'), (544, '  ex_current_was_cycle_pt = (current == cycle_pt);'), (545, '  auto extracted_data = current->data;'), (546, '  delete (current); // destroy CONS cell'), (547, '  current = nullptr;'), (548, '  return extracted_data;'), (549, '}'), (550, ''), (551, '/***********************************************************************'), (552, ' *              CLIST_ITERATOR::move_to_first()'), (553, ' *'), (554, ' *  Move current so that it is set to the start of the list.'), (555, ' *  Return data just in case anyone wants it.'), (556, ' **********************************************************************/'), (558, 'inline void *CLIST_ITERATOR::move_to_first() {'), (559, '  current = list->First();'), (560, '  prev = list->last;'), (561, '  next = current != nullptr ? current->next : nullptr;'), (562, '  return current != nullptr ? current->data : nullptr;'), (563, '}'), (565, '/***********************************************************************'), (566, ' *              CLIST_ITERATOR::mark_cycle_pt()'), (567, ' *'), (568, "" *  Remember the current location so that we can tell whether we've returned""), (569, ' *  to this point later.'), (570, ' *'), (571, ' *  If the current point is deleted either now, or in the future, the cycle'), (572, ' *  point will be set to the next item which is set to current.  This could be'), (573, ' *  by a forward, add_after_then_move or add_after_then_move.'), (574, ' **********************************************************************/'), (576, 'inline void CLIST_ITERATOR::mark_cycle_pt() {'), (577, '#ifndef NDEBUG'), (578, '  if (!list) {'), (579, '    NO_LIST.error(""CLIST_ITERATOR::mark_cycle_pt"", ABORT);'), (581, '#endif'), (583, '  if (current) {'), (584, '    cycle_pt = current;'), (585, '  } else {'), (586, '    ex_current_was_cycle_pt = true;'), (588, '  started_cycling = false;'), (589, '}'), (591, '/***********************************************************************'), (592, ' *              CLIST_ITERATOR::at_first()'), (593, ' *'), (594, ' *  Are we at the start of the list?'), (595, ' *'), (596, ' **********************************************************************/'), (598, 'inline bool CLIST_ITERATOR::at_first() const {'), (599, ""  // we're at a deleted""), (600, '  return ((list->empty()) || (current == list->First()) ||'), (601, '          ((current == nullptr) && (prev == list->last) && // NON-last pt between'), (602, '           !ex_current_was_last));                         // first and last'), (603, '}'), (605, '/***********************************************************************'), (606, ' *              CLIST_ITERATOR::at_last()'), (607, ' *'), (608, ' *  Are we at the end of the list?'), (609, ' *'), (610, ' **********************************************************************/'), (612, 'inline bool CLIST_ITERATOR::at_last() const {'), (613, ""  // we're at a deleted""), (614, '  return ((list->empty()) || (current == list->last) ||'), (615, '          ((current == nullptr) && (prev == list->last) && // last point between'), (616, '           ex_current_was_last));                          // first and last'), (617, '}'), (619, '/***********************************************************************'), (620, ' *              CLIST_ITERATOR::cycled_list()'), (621, ' *'), (622, ' *  Have we returned to the cycle_pt since it was set?'), (623, ' *'), (624, ' **********************************************************************/'), (626, 'inline bool CLIST_ITERATOR::cycled_list() const {'), (627, '  return ((list->empty()) || ((current == cycle_pt) && started_cycling));'), (628, '}'), (630, '/***********************************************************************'), (631, ' *              CLIST_ITERATOR::length()'), (632, ' *'), (633, ' *  Return the length of the list'), (634, ' *'), (635, ' **********************************************************************/'), (637, 'inline int32_t CLIST_ITERATOR::length() const {'), (638, '  return list->length();'), (639, '}'), (641, '/***********************************************************************'), (642, ' *              CLIST_ITERATOR::sort()'), (643, ' *'), (644, ' *  Sort the elements of the list, then reposition at the start.'), (645, ' *'), (646, ' **********************************************************************/'), (648, 'inline void CLIST_ITERATOR::sort( // sort elements'), (649, '    int comparator(               // comparison routine'), (650, '        const void *, const void *)) {'), (651, '  list->sort(comparator);'), (652, '  move_to_first();'), (653, '}'), (655, '/***********************************************************************'), (656, ' *              CLIST_ITERATOR::add_to_end'), (657, ' *'), (658, ' *  Add a new element to the end of the list without moving the iterator.'), (659, ' *  This is provided because a single linked list cannot move to the last as'), (660, "" *  the iterator couldn't set its prev pointer.  Adding to the end is""), (661, ' *  essential for implementing'), (662, '              queues.'), (663, '**********************************************************************/'), (664, ''), (665, 'inline void CLIST_ITERATOR::add_to_end( // element to add'), (666, '    void *new_data) {'), (667, '#ifndef NDEBUG'), (668, '  if (!list) {'), (669, '    NO_LIST.error(""CLIST_ITERATOR::add_to_end"", ABORT);'), (670, '  }'), (671, '  if (!new_data) {'), (672, '    BAD_PARAMETER.error(""CLIST_ITERATOR::add_to_end"", ABORT, ""new_data is nullptr"");'), (674, '#endif'), (676, '  if (this->at_last()) {'), (677, '    this->add_after_stay_put(new_data);'), (678, '  } else {'), (679, '    if (this->at_first()) {'), (680, '      this->add_before_stay_put(new_data);'), (681, '      list->last = prev;'), (682, '    } else { // Iteratr is elsewhere'), (683, '      auto new_element = new CLIST_LINK;'), (685, ''), (686, '      new_element->next = list->last->next;'), (687, '      list->last->next = new_element;'), (688, '      list->last = new_element;'), (691, '}'), (693, 'template <typename CLASSNAME>'), (694, 'class X_CLIST : public CLIST {'), (695, 'public:'), (696, '  X_CLIST() = default;'), (697, '  X_CLIST(const X_CLIST &) = delete;'), (698, '  X_CLIST &operator=(const X_CLIST &) = delete;'), (699, ''), (700, '  void deep_clear() {'), (701, '    internal_deep_clear([](void *link) {delete static_cast<CLASSNAME *>(link);});'), (706, '  class CLASSNAME##_CLIST : public X_CLIST<CLASSNAME> {         \\'), (707, '    using X_CLIST<CLASSNAME>::X_CLIST;                          \\'), (709, '  struct CLASSNAME##_C_IT : X_ITER<CLIST_ITERATOR, CLASSNAME> { \\'), (710, '    using X_ITER<CLIST_ITERATOR, CLASSNAME>::X_ITER;            \\')]}",yes
src\ccutil\helpers.h,src\ccutil\helpers.h,32fee1944772ba98f2c181e0a90221c09def78a7,5c78037bd3d79dbb71bdccf6333a8d94b530fd19,"Fix linear congruential random number generator

Fixes: #4146, #4148, #4270
Fixes: 2252936fc801 (""Use linear congruential random number generator [...]"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -68,7 +68,9 @@ inline const std::vector<std::string> split(const std::string &s, char c) {
   return v;
 }
 
-// A simple linear congruential random number generator.
+// A simple linear congruential random number generator,
+// using Knuth's constants from:
+// http://en.wikipedia.org/wiki/Linear_congruential_generator.
 class TRand {
 public:
   // Sets the seed to the given value.
@@ -95,7 +97,10 @@ public:
   }
 
 private:
-  std::minstd_rand e;
+  std::linear_congruential_engine<std::uint_fast32_t,
+                                  6364136223846793005ULL,
+                                  1442695040888963407ULL,
+                                  UINT64_MAX> e;
 };
 
 // Remove newline (if any) at the end of the string.
","{'added': [(71, '// A simple linear congruential random number generator,'), (72, ""// using Knuth's constants from:""), (73, '// http://en.wikipedia.org/wiki/Linear_congruential_generator.'), (100, '  std::linear_congruential_engine<std::uint_fast32_t,'), (101, '                                  6364136223846793005ULL,'), (102, '                                  1442695040888963407ULL,'), (103, '                                  UINT64_MAX> e;')], 'deleted': [(71, '// A simple linear congruential random number generator.'), (98, '  std::minstd_rand e;')]}",yes
Makefile.am,Makefile.am,5c78037bd3d79dbb71bdccf6333a8d94b530fd19,43b8d743fce4e83cbbe6198b6a917ab5c672a82b,"Add missing library for pango_font_info_test

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1429,7 +1429,7 @@ pagesegmode_test_LDADD = $(TRAINING_LIBS) $(LEPTONICA_LIBS)
 pango_font_info_test_SOURCES = unittest/pango_font_info_test.cc
 pango_font_info_test_CPPFLAGS = $(unittest_CPPFLAGS)
 pango_font_info_test_LDADD = $(TRAINING_LIBS) $(LEPTONICA_LIBS)
-pango_font_info_test_LDADD += $(ICU_I18N_LIBS)
+pango_font_info_test_LDADD += $(ICU_I18N_LIBS) $(ICU_UC_LIBS)
 pango_font_info_test_LDADD += $(pangocairo_LIBS)
 pango_font_info_test_LDADD += $(pangoft2_LIBS)
 
","{'added': [(1432, 'pango_font_info_test_LDADD += $(ICU_I18N_LIBS) $(ICU_UC_LIBS)')], 'deleted': [(1432, 'pango_font_info_test_LDADD += $(ICU_I18N_LIBS)')]}",yes
sw.cpp,sw.cpp,43b8d743fce4e83cbbe6198b6a917ab5c672a82b,64eab6c457b2337dd690746a5fde5c222b40d5f8,[sw] Update build.,"@@ -16,7 +16,6 @@ void build(Solution &s)
         libtesseract += ""TESS_API""_api;
         libtesseract += ""include/.*""_rr;
         libtesseract += ""src/.+/.*""_rr;
-        libtesseract -= ""src/lstm/.*\\.cc""_rr;
         libtesseract -= ""src/training/.*""_rr;
 
         libtesseract.Public += ""include""_idir;
","{'added': [], 'deleted': [(19, '        libtesseract -= ""src/lstm/.*\\\\.cc""_rr;')]}",yes
ChangeLog,ChangeLog,64eab6c457b2337dd690746a5fde5c222b40d5f8,d30f45fbfd71de0cd86fa467c4658ffeb85b96df,"Create new release 5.5.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,21 @@
+2024-11-10 - V5.5.0
+* Set hOCR capabilities ocrp_dir and ocrp_lang unconditionally.
+* Calculate row bounding box in single-word mode per (issue #4304).
+* Reduce clock syscalls (#4303).
+* Several small performance and other code fixes.
+* Modernized code.
+* Print time for tessedit_timing_debug in milliseconds.
+* Print time for ErrorCounter::ComputeErrorRate in milliseconds.
+* cmake: Correctly set the soversion based on SemVer properties.
+* Do not export PDBs for static libraries (issue #4279).
+* Several other small fixes and improvements for builds and CI.
+* Modernize code for renderers and remove filename conversion for Windows (#4330).
+* Add build rule for Windows installer.
+* Support symbolic values for --oem and --psm options.
+* Remove Tensorflow support.
+* Add RISC-V V support (#4346).
+* Remove broken GitHub action msys2-4.1.1.
+
 2024-06-11 - V5.4.1
 * Avoid FP overflow in NormEvidenceOf (fixes issue #4257) (#4259)
 * Small build fixes and code improvements (#4262, #4263, #4266, #4267)
","{'added': [(1, '2024-11-10 - V5.5.0'), (2, '* Set hOCR capabilities ocrp_dir and ocrp_lang unconditionally.'), (3, '* Calculate row bounding box in single-word mode per (issue #4304).'), (4, '* Reduce clock syscalls (#4303).'), (5, '* Several small performance and other code fixes.'), (6, '* Modernized code.'), (7, '* Print time for tessedit_timing_debug in milliseconds.'), (8, '* Print time for ErrorCounter::ComputeErrorRate in milliseconds.'), (9, '* cmake: Correctly set the soversion based on SemVer properties.'), (10, '* Do not export PDBs for static libraries (issue #4279).'), (11, '* Several other small fixes and improvements for builds and CI.'), (12, '* Modernize code for renderers and remove filename conversion for Windows (#4330).'), (13, '* Add build rule for Windows installer.'), (14, '* Support symbolic values for --oem and --psm options.'), (15, '* Remove Tensorflow support.'), (16, '* Add RISC-V V support (#4346).'), (17, '* Remove broken GitHub action msys2-4.1.1.'), (18, '')], 'deleted': []}",yes
VERSION,VERSION,64eab6c457b2337dd690746a5fde5c222b40d5f8,d30f45fbfd71de0cd86fa467c4658ffeb85b96df,"Create new release 5.5.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.4.1
+5.5.0
","{'added': [(1, '5.5.0')], 'deleted': [(1, '5.4.1')]}",yes
configure.ac,configure.ac,64eab6c457b2337dd690746a5fde5c222b40d5f8,d30f45fbfd71de0cd86fa467c4658ffeb85b96df,"Create new release 5.5.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2024
-PACKAGE_DATE=""06/11""
+PACKAGE_DATE=""11/10""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""11/10""')], 'deleted': [(32, 'PACKAGE_DATE=""06/11""')]}",yes
.github\workflows\msys2-4.1.1.yml,,d30f45fbfd71de0cd86fa467c4658ffeb85b96df,1e8640a02ef6db6dbcb008df804e34243ba45a15,"Remove broken GitHub action msys2-4.1.1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,31 +0,0 @@
-name: msys2-4.1.1
-on:
-  #push:
-  schedule:
-    - cron: 0 18 1 * *
-jobs:
-  windows:
-    runs-on: ${{ matrix.os }}
-    strategy:
-      fail-fast: false
-      matrix:
-        include:
-          - os: windows-2019
-            msystem: MINGW32
-            mingw_package_prefix: mingw-w64-i686
-          - os: windows-2019
-            msystem: MINGW64
-            mingw_package_prefix: mingw-w64-x86_64
-    defaults:
-      run:
-        shell: msys2 {0}
-    steps:
-    - uses: msys2/setup-msys2@v2
-      with:
-        msystem: ${{ matrix.msystem }}
-    - run: pacman --noconfirm -S ${{ matrix.mingw_package_prefix }}-tesseract-ocr
-    - name: Display version
-      run: |
-           tesseract -v
-           text2image -v
-           lstmtraining -v
","{'added': [], 'deleted': [(1, 'name: msys2-4.1.1'), (2, 'on:'), (3, '  #push:'), (4, '  schedule:'), (5, '    - cron: 0 18 1 * *'), (6, 'jobs:'), (7, '  windows:'), (8, '    runs-on: ${{ matrix.os }}'), (9, '    strategy:'), (10, '      fail-fast: false'), (11, '      matrix:'), (12, '        include:'), (13, '          - os: windows-2019'), (14, '            msystem: MINGW32'), (15, '            mingw_package_prefix: mingw-w64-i686'), (16, '          - os: windows-2019'), (17, '            msystem: MINGW64'), (18, '            mingw_package_prefix: mingw-w64-x86_64'), (19, '    defaults:'), (20, '      run:'), (21, '        shell: msys2 {0}'), (22, '    steps:'), (23, '    - uses: msys2/setup-msys2@v2'), (24, '      with:'), (25, '        msystem: ${{ matrix.msystem }}'), (26, '    - run: pacman --noconfirm -S ${{ matrix.mingw_package_prefix }}-tesseract-ocr'), (27, '    - name: Display version'), (28, '      run: |'), (29, '           tesseract -v'), (30, '           text2image -v'), (31, '           lstmtraining -v')]}",yes
src\ccutil\unicity_table.h,src\ccutil\unicity_table.h,1e8640a02ef6db6dbcb008df804e34243ba45a15,3fedc6cdfc6702b8c5cf3714601105b55bbdd1ea,"Fix CID 1534938 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -80,7 +80,7 @@ public:
   int push_back(T object)  {
     auto idx = get_index(object);
     if (idx == -1) {
-      idx = table_.push_back(object);
+      idx = table_.push_back(std::move(object));
     }
     return idx;
   }
","{'added': [(83, '      idx = table_.push_back(std::move(object));')], 'deleted': [(83, '      idx = table_.push_back(object);')]}",yes
src\ccstruct\blamer.cpp,src\ccstruct\blamer.cpp,3fedc6cdfc6702b8c5cf3714601105b55bbdd1ea,02409f578a5ce8a99a5c4ff0b714454f85899427,"Fix CID 1534939 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -92,7 +92,7 @@ void BlamerBundle::SetSymbolTruth(const UNICHARSET &unicharset, const char *char
   if (id != INVALID_UNICHAR_ID) {
     std::string normed_uch(unicharset.get_normed_unichar(id));
     if (normed_uch.length() > 0) {
-      symbol_str = normed_uch;
+      symbol_str = std::move(normed_uch);
     }
   }
   int length = truth_word_.length();
","{'added': [(95, '      symbol_str = std::move(normed_uch);')], 'deleted': [(95, '      symbol_str = normed_uch;')]}",yes
src\classify\intproto.cpp,src\classify\intproto.cpp,02409f578a5ce8a99a5c4ff0b714454f85899427,e83f78020e37f6d291b9967f43c5ecf5ff092952,"Fix CID 1534945 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -511,7 +511,7 @@ INT_TEMPLATES_STRUCT *Classify::CreateIntTemplates(CLASSES FloatProtos,
     for (unsigned i = 0; i < fs_size; ++i) {
       fs.push_back(FClass->font_set[i]);
     }
-    IClass->font_set_id = this->fontset_table_.push_back(fs);
+    IClass->font_set_id = this->fontset_table_.push_back(std::move(fs));
     AddIntClass(IntTemplates, ClassId, IClass);
 
     for (ProtoId = 0; ProtoId < FClass->NumProtos; ProtoId++) {
","{'added': [(514, '    IClass->font_set_id = this->fontset_table_.push_back(std::move(fs));')], 'deleted': [(514, '    IClass->font_set_id = this->fontset_table_.push_back(fs);')]}",yes
src\tesseract.cpp,src\tesseract.cpp,e83f78020e37f6d291b9967f43c5ecf5ff092952,49cbe2b47d7cafe64a8c051d9aa7d9918d4e8c73,"Fix stringToOEM and stringToPSM

Remove debug output and fix an out-of-bounds read for unsupported arguments.

Fixes: e8a9a56f9fdb (""Support symbolic values for --oem and --psm options"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -351,8 +351,7 @@ static int stringToOEM(const std::string arg) {
     {""default"", 3},
   };
   auto it = oem_map.find(arg);
-  printf(""it: %d, %d\n"", it == oem_map.end(), it->second);
-  return it->second;
+  return it == oem_map.end() ? -1 : it->second;
 }
 
 static int stringToPSM(const std::string arg) {
@@ -387,7 +386,7 @@ static int stringToPSM(const std::string arg) {
     {""raw_line"", 13},
   };
   auto it = psm_map.find(arg);
-  return it->second;
+  return it == psm_map.end() ? -1 : it->second;
 }
 
 // NOTE: arg_i is used here to avoid ugly *i so many times in this function
","{'added': [(354, '  return it == oem_map.end() ? -1 : it->second;'), (389, '  return it == psm_map.end() ? -1 : it->second;')], 'deleted': [(354, '  printf(""it: %d, %d\\n"", it == oem_map.end(), it->second);'), (355, '  return it->second;'), (390, '  return it->second;')]}",yes
src\viewer\svutil.cpp,src\viewer\svutil.cpp,49cbe2b47d7cafe64a8c051d9aa7d9918d4e8c73,cdb7ff90e43f2fbf8bb1f4aad72b7f56d13b24ea,"Fix compiler warning for argument of getaddrinfo

Fix this clang warning:

    src/viewer/svutil.cpp:277:51:
      warning: missing field 'ai_protocol' initializer [-Wmissing-field-initializers]

Replace also PF_INET by AF_INET which is the recommended value.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -273,8 +273,6 @@ SVNetwork::SVNetwork(const char *hostname, int port) {
 
   buffer_ptr_ = nullptr;
 
-  struct addrinfo *addr_info = nullptr;
-  struct addrinfo hints = {0, PF_INET, SOCK_STREAM};
   auto port_string = std::to_string(port);
 #  ifdef _WIN32
   // Initialize Winsock
@@ -285,6 +283,10 @@ SVNetwork::SVNetwork(const char *hostname, int port) {
   }
 #  endif // _WIN32
 
+  struct addrinfo *addr_info = nullptr;
+  struct addrinfo hints = {};
+  hints.ai_family = AF_INET;
+  hints.ai_socktype = SOCK_STREAM;
   if (getaddrinfo(hostname, port_string.c_str(), &hints, &addr_info) != 0) {
     std::cerr << ""Error resolving name for ScrollView host ""
               << std::string(hostname) << "":"" << port << std::endl;
","{'added': [(286, '  struct addrinfo *addr_info = nullptr;'), (287, '  struct addrinfo hints = {};'), (288, '  hints.ai_family = AF_INET;'), (289, '  hints.ai_socktype = SOCK_STREAM;')], 'deleted': [(276, '  struct addrinfo *addr_info = nullptr;'), (277, '  struct addrinfo hints = {0, PF_INET, SOCK_STREAM};')]}",yes
unittest\third_party\googletest,unittest\third_party\googletest,cdb7ff90e43f2fbf8bb1f4aad72b7f56d13b24ea,2a1ce80a42ad5eb1ddb1b770e98b13c1864911d2,"Update submodule googletest to release v1.15.2

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-Subproject commit e2239ee6043f73722e7aa812a459f54a28552929
+Subproject commit b514bdc898e2951020cbdca1304b75f5950d1f59
","{'added': [(1, 'Subproject commit b514bdc898e2951020cbdca1304b75f5950d1f59')], 'deleted': [(1, 'Subproject commit e2239ee6043f73722e7aa812a459f54a28552929')]}",yes
unittest\third_party\utf\rune.c,unittest\third_party\utf\rune.c,2a1ce80a42ad5eb1ddb1b770e98b13c1864911d2,16fc9d90a4f87ab5b8483c1fb1a080b24e2a1553,"Fix compilation of unittest/third_party/utf/rune.c

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -12,9 +12,9 @@
  * OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.
  */
 #include <stdarg.h>
+#include <stdint.h>
 #include <string.h>
 #include ""third_party/utf/utf.h""
-#include ""third_party/utf/utfdef.h""
 
 enum {
   Bit1 = 7,
@@ -74,7 +74,7 @@ int charntorune(Rune *rune, const char *str, int length) {
    * one character sequence (7-bit value)
    *	00000-0007F => T1
    */
-  c = *(uchar *)str;
+  c = *(uint8_t *)str;
   if (c < Tx) {
     *rune = c;
     return 1;
@@ -89,7 +89,7 @@ int charntorune(Rune *rune, const char *str, int length) {
    * two character sequence (11-bit value)
    *	0080-07FF => T2 Tx
    */
-  c1 = *(uchar *)(str + 1) ^ Tx;
+  c1 = *(uint8_t *)(str + 1) ^ Tx;
   if (c1 & Testx)
     goto bad;
   if (c < T3) {
@@ -111,7 +111,7 @@ int charntorune(Rune *rune, const char *str, int length) {
    * three character sequence (16-bit value)
    *	0800-FFFF => T3 Tx Tx
    */
-  c2 = *(uchar *)(str + 2) ^ Tx;
+  c2 = *(uint8_t *)(str + 2) ^ Tx;
   if (c2 & Testx)
     goto bad;
   if (c < T4) {
@@ -129,7 +129,7 @@ int charntorune(Rune *rune, const char *str, int length) {
    * four character sequence (21-bit value)
    *	10000-1FFFFF => T4 Tx Tx Tx
    */
-  c3 = *(uchar *)(str + 3) ^ Tx;
+  c3 = *(uint8_t *)(str + 3) ^ Tx;
   if (c3 & Testx)
     goto bad;
   if (c < T5) {
@@ -168,7 +168,7 @@ int chartorune(Rune *rune, const char *str) {
    * one character sequence
    *	00000-0007F => T1
    */
-  c = *(uchar *)str;
+  c = *(uint8_t *)str;
   if (c < Tx) {
     *rune = c;
     return 1;
@@ -178,7 +178,7 @@ int chartorune(Rune *rune, const char *str) {
    * two character sequence
    *	0080-07FF => T2 Tx
    */
-  c1 = *(uchar *)(str + 1) ^ Tx;
+  c1 = *(uint8_t *)(str + 1) ^ Tx;
   if (c1 & Testx)
     goto bad;
   if (c < T3) {
@@ -195,7 +195,7 @@ int chartorune(Rune *rune, const char *str) {
    * three character sequence
    *	0800-FFFF => T3 Tx Tx
    */
-  c2 = *(uchar *)(str + 2) ^ Tx;
+  c2 = *(uint8_t *)(str + 2) ^ Tx;
   if (c2 & Testx)
     goto bad;
   if (c < T4) {
@@ -210,7 +210,7 @@ int chartorune(Rune *rune, const char *str) {
    * four character sequence (21-bit value)
    *	10000-1FFFFF => T4 Tx Tx Tx
    */
-  c3 = *(uchar *)(str + 3) ^ Tx;
+  c3 = *(uint8_t *)(str + 3) ^ Tx;
   if (c3 & Testx)
     goto bad;
   if (c < T5) {
@@ -304,7 +304,7 @@ int runelen(Rune rune) {
 
 int runenlen(const Rune *r, int nrune) {
   int nb;
-  ulong c; /* Rune is signed, so use unsigned for range check. */
+  unsigned long c; /* Rune is signed, so use unsigned for range check. */
 
   nb = 0;
   while (nrune--) {
@@ -325,7 +325,7 @@ int runenlen(const Rune *r, int nrune) {
 
 int fullrune(const char *str, int n) {
   if (n > 0) {
-    int c = *(uchar *)str;
+    int c = *(uint8_t *)str;
     if (c < Tx)
       return 1;
     if (n > 1) {
","{'added': [(15, '#include <stdint.h>'), (77, '  c = *(uint8_t *)str;'), (92, '  c1 = *(uint8_t *)(str + 1) ^ Tx;'), (114, '  c2 = *(uint8_t *)(str + 2) ^ Tx;'), (132, '  c3 = *(uint8_t *)(str + 3) ^ Tx;'), (171, '  c = *(uint8_t *)str;'), (181, '  c1 = *(uint8_t *)(str + 1) ^ Tx;'), (198, '  c2 = *(uint8_t *)(str + 2) ^ Tx;'), (213, '  c3 = *(uint8_t *)(str + 3) ^ Tx;'), (307, '  unsigned long c; /* Rune is signed, so use unsigned for range check. */'), (328, '    int c = *(uint8_t *)str;')], 'deleted': [(17, '#include ""third_party/utf/utfdef.h""'), (77, '  c = *(uchar *)str;'), (92, '  c1 = *(uchar *)(str + 1) ^ Tx;'), (114, '  c2 = *(uchar *)(str + 2) ^ Tx;'), (132, '  c3 = *(uchar *)(str + 3) ^ Tx;'), (171, '  c = *(uchar *)str;'), (181, '  c1 = *(uchar *)(str + 1) ^ Tx;'), (198, '  c2 = *(uchar *)(str + 2) ^ Tx;'), (213, '  c3 = *(uchar *)(str + 3) ^ Tx;'), (307, '  ulong c; /* Rune is signed, so use unsigned for range check. */'), (328, '    int c = *(uchar *)str;')]}",yes
Makefile.am,Makefile.am,16fc9d90a4f87ab5b8483c1fb1a080b24e2a1553,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,"Add RISC-V V support (#4346)

Convert riscv-v-spec-1.0.pdf into 111 PNG images,
then perform OCR on each one in sequence,
and measure the testing time on banana_f3:

old:        31m16.267s
new:        16m51.155s

Co-authored-by: sunyuechi <sunyuechi@iscas.ac.cn>
Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -199,6 +199,15 @@ libtesseract_la_LIBADD += libtesseract_neon.la
 noinst_LTLIBRARIES += libtesseract_neon.la
 endif
 
+if HAVE_RVV
+libtesseract_rvv_la_CXXFLAGS = $(RVV_CXXFLAGS)
+libtesseract_rvv_la_CXXFLAGS += -O3
+libtesseract_rvv_la_CXXFLAGS += -I$(top_srcdir)/src/ccutil
+libtesseract_rvv_la_SOURCES = src/arch/intsimdmatrixrvv.cpp
+libtesseract_la_LIBADD += libtesseract_rvv.la
+noinst_LTLIBRARIES += libtesseract_rvv.la
+endif
+
 libtesseract_la_SOURCES += src/arch/intsimdmatrix.cpp
 libtesseract_la_SOURCES += src/arch/simddetect.cpp
 
","{'added': [(202, 'if HAVE_RVV'), (203, 'libtesseract_rvv_la_CXXFLAGS = $(RVV_CXXFLAGS)'), (204, 'libtesseract_rvv_la_CXXFLAGS += -O3'), (205, 'libtesseract_rvv_la_CXXFLAGS += -I$(top_srcdir)/src/ccutil'), (206, 'libtesseract_rvv_la_SOURCES = src/arch/intsimdmatrixrvv.cpp'), (207, 'libtesseract_la_LIBADD += libtesseract_rvv.la'), (208, 'noinst_LTLIBRARIES += libtesseract_rvv.la'), (209, 'endif'), (210, '')], 'deleted': []}",yes
configure.ac,configure.ac,16fc9d90a4f87ab5b8483c1fb1a080b24e2a1553,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,"Add RISC-V V support (#4346)

Convert riscv-v-spec-1.0.pdf into 111 PNG images,
then perform OCR on each one in sequence,
and measure the testing time on banana_f3:

old:        31m16.267s
new:        16m51.155s

Co-authored-by: sunyuechi <sunyuechi@iscas.ac.cn>
Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -131,6 +131,7 @@ AM_CONDITIONAL([HAVE_AVX512F], false)
 AM_CONDITIONAL([HAVE_FMA], false)
 AM_CONDITIONAL([HAVE_SSE4_1], false)
 AM_CONDITIONAL([HAVE_NEON], false)
+AM_CONDITIONAL([HAVE_RVV], false)
 
 case ""${host_cpu}"" in
 
@@ -188,6 +189,16 @@ case ""${host_cpu}"" in
 
     ;;
 
+  riscv*)
+
+    AX_CHECK_COMPILE_FLAG([-march=rv64gcv], [rvv=true], [rvv=false], [$WERROR])
+    AM_CONDITIONAL([HAVE_RVV], [$rvv])
+    if $rvv; then
+      AC_DEFINE([HAVE_RVV], [1], [Enable RVV instructions])
+      check_for_rvv=1
+    fi
+    ;;
+
   *)
 
     AC_MSG_WARN([No compiler options for $host_cpu])
@@ -207,6 +218,16 @@ if test x$check_for_neon = x1; then
   fi
 fi
 
+# additional checks for RVV targets
+if test x$check_for_rvv = x1; then
+  AC_MSG_NOTICE([checking how to detect RVV availability])
+  AC_CHECK_FUNCS([getauxval])
+
+  if test $ac_cv_func_getauxval = no; then
+      AC_MSG_WARN([RVV is available, but we don't know how to check for it.  Will not be able to use RVV.])
+  fi
+fi
+
 AX_CHECK_COMPILE_FLAG([-fopenmp-simd], [openmp_simd=true], [openmp_simd=false], [$WERROR])
 AM_CONDITIONAL([OPENMP_SIMD], $openmp_simd)
 
","{'added': [(134, 'AM_CONDITIONAL([HAVE_RVV], false)'), (192, '  riscv*)'), (193, ''), (194, '    AX_CHECK_COMPILE_FLAG([-march=rv64gcv], [rvv=true], [rvv=false], [$WERROR])'), (195, '    AM_CONDITIONAL([HAVE_RVV], [$rvv])'), (196, '    if $rvv; then'), (197, '      AC_DEFINE([HAVE_RVV], [1], [Enable RVV instructions])'), (198, '      check_for_rvv=1'), (199, '    fi'), (200, '    ;;'), (201, ''), (221, '# additional checks for RVV targets'), (222, 'if test x$check_for_rvv = x1; then'), (223, '  AC_MSG_NOTICE([checking how to detect RVV availability])'), (224, '  AC_CHECK_FUNCS([getauxval])'), (225, ''), (226, '  if test $ac_cv_func_getauxval = no; then'), (227, ""      AC_MSG_WARN([RVV is available, but we don't know how to check for it.  Will not be able to use RVV.])""), (228, '  fi'), (229, 'fi'), (230, '')], 'deleted': []}",yes
src\arch\intsimdmatrix.h,src\arch\intsimdmatrix.h,16fc9d90a4f87ab5b8483c1fb1a080b24e2a1553,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,"Add RISC-V V support (#4346)

Convert riscv-v-spec-1.0.pdf into 111 PNG images,
then perform OCR on each one in sequence,
and measure the testing time on banana_f3:

old:        31m16.267s
new:        16m51.155s

Co-authored-by: sunyuechi <sunyuechi@iscas.ac.cn>
Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -115,6 +115,8 @@ struct TESS_API IntSimdMatrix {
   static const IntSimdMatrix *intSimdMatrix;
   // Only available with NEON.
   static const IntSimdMatrix intSimdMatrixNEON;
+  // Only available with RVV.
+  static const IntSimdMatrix intSimdMatrixRVV;
   // Only available with AVX2 / AVX / FMA / SSE.
   static const IntSimdMatrix intSimdMatrixAVX2;
   static const IntSimdMatrix intSimdMatrixSSE;
","{'added': [(118, '  // Only available with RVV.'), (119, '  static const IntSimdMatrix intSimdMatrixRVV;')], 'deleted': []}",yes
,src\arch\intsimdmatrixrvv.cpp,16fc9d90a4f87ab5b8483c1fb1a080b24e2a1553,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,"Add RISC-V V support (#4346)

Convert riscv-v-spec-1.0.pdf into 111 PNG images,
then perform OCR on each one in sequence,
and measure the testing time on banana_f3:

old:        31m16.267s
new:        16m51.155s

Co-authored-by: sunyuechi <sunyuechi@iscas.ac.cn>
Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,88 @@
+///////////////////////////////////////////////////////////////////////
+// File:        intsimdmatrixrvv.cpp
+// Description: matrix-vector product for 8-bit data on rvv.
+// Author:      sunyuechi
+//
+// Copyright (c) 2024 Institute of Software Chinese Academy of Sciences (ISCAS).
+// Licensed under the Apache License, Version 2.0 (the ""License"");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an ""AS IS"" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+///////////////////////////////////////////////////////////////////////
+
+#ifdef HAVE_CONFIG_H
+#  include ""config_auto.h"" // for HAVE_RVV, ...
+#endif
+
+#if HAVE_RVV
+#  include ""intsimdmatrix.h""
+#  include ""tesstypes.h""
+
+namespace tesseract {
+
+static int DotProduct(const int8_t *u, const int8_t *v, int num) {
+  int total = 0;
+
+  asm __volatile__ (
+    ""  .option       arch, +v                   \n\t""
+    ""  vsetvli t0,zero,e32,m8,ta,ma             \n\t""
+    ""  vmv.v.i v0,0                             \n\t""
+    ""1:                                         \n\t""
+    ""  vsetvli t0,%[num],e8,m2,ta,ma            \n\t""
+    ""  vle8.v v16,0(%[u])                       \n\t""
+    ""  vle8.v v24,0(%[v])                       \n\t""
+    ""  sub %[num],%[num],t0                     \n\t""
+    ""  vwmul.vv v8,v24,v16                      \n\t""
+    ""  add %[u],%[u],t0                         \n\t""
+    ""  add %[v],%[v],t0                         \n\t""
+    ""  vsetvli zero,zero,e16,m4,tu,ma           \n\t""
+    ""  vwadd.wv v0,v0,v8                        \n\t""
+    ""  bnez %[num],1b                           \n\t""
+    ""  vsetvli t0,zero,e32,m8,ta,ma             \n\t""
+    ""  vmv.s.x v8,zero                          \n\t""
+    ""  vredsum.vs v0,v0,v8                      \n\t""
+    ""  vmv.x.s %[total],v0                      \n\t""
+    :  [u] ""+r"" (u),
+       [v] ""+r"" (v),
+       [num] ""+r"" (num),
+       [total] ""+r"" (total)
+    :
+    :  ""cc"", ""memory""
+  );
+
+  return total;
+}
+
+static void matrixDotVector(int dim1, int dim2, const int8_t *wi, const TFloat *scales,
+                            const int8_t *u, TFloat *v) {
+  int num_out = dim1;
+  int num_in = dim2 - 1;
+  for (int i = 0; i < num_out; ++i) {
+    const int8_t *wi_start = wi + i * dim2;
+    int total = DotProduct(wi_start, u, num_in);
+    // Add in the bias and apply scaling.
+    v[i] = (total + wi_start[num_in] * INT8_MAX) * scales[i];
+  }
+}
+
+const IntSimdMatrix IntSimdMatrix::intSimdMatrixRVV = {
+    // Function.
+    matrixDotVector,
+    // Number of 32 bit outputs held in each register.
+    1,
+    // Maximum number of registers that we will use to hold outputs.
+    1,
+    // Number of 8 bit inputs in the inputs register.
+    1,
+    // Number of inputs in each weight group.
+    1
+};
+
+} // namespace tesseract.
+
+#endif /* HAVE_RVV */
","{'added': [(1, '///////////////////////////////////////////////////////////////////////'), (2, '// File:        intsimdmatrixrvv.cpp'), (3, '// Description: matrix-vector product for 8-bit data on rvv.'), (4, '// Author:      sunyuechi'), (5, '//'), (6, '// Copyright (c) 2024 Institute of Software Chinese Academy of Sciences (ISCAS).'), (7, '// Licensed under the Apache License, Version 2.0 (the ""License"");'), (8, '// you may not use this file except in compliance with the License.'), (9, '// You may obtain a copy of the License at'), (10, '// http://www.apache.org/licenses/LICENSE-2.0'), (11, '// Unless required by applicable law or agreed to in writing, software'), (12, '// distributed under the License is distributed on an ""AS IS"" BASIS,'), (13, '// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (14, '// See the License for the specific language governing permissions and'), (15, '// limitations under the License.'), (16, '///////////////////////////////////////////////////////////////////////'), (17, ''), (18, '#ifdef HAVE_CONFIG_H'), (19, '#  include ""config_auto.h"" // for HAVE_RVV, ...'), (20, '#endif'), (21, ''), (22, '#if HAVE_RVV'), (23, '#  include ""intsimdmatrix.h""'), (24, '#  include ""tesstypes.h""'), (25, ''), (26, 'namespace tesseract {'), (27, ''), (28, 'static int DotProduct(const int8_t *u, const int8_t *v, int num) {'), (29, '  int total = 0;'), (30, ''), (31, '  asm __volatile__ ('), (32, '    ""  .option       arch, +v                   \\n\\t""'), (33, '    ""  vsetvli t0,zero,e32,m8,ta,ma             \\n\\t""'), (34, '    ""  vmv.v.i v0,0                             \\n\\t""'), (35, '    ""1:                                         \\n\\t""'), (36, '    ""  vsetvli t0,%[num],e8,m2,ta,ma            \\n\\t""'), (37, '    ""  vle8.v v16,0(%[u])                       \\n\\t""'), (38, '    ""  vle8.v v24,0(%[v])                       \\n\\t""'), (39, '    ""  sub %[num],%[num],t0                     \\n\\t""'), (40, '    ""  vwmul.vv v8,v24,v16                      \\n\\t""'), (41, '    ""  add %[u],%[u],t0                         \\n\\t""'), (42, '    ""  add %[v],%[v],t0                         \\n\\t""'), (43, '    ""  vsetvli zero,zero,e16,m4,tu,ma           \\n\\t""'), (44, '    ""  vwadd.wv v0,v0,v8                        \\n\\t""'), (45, '    ""  bnez %[num],1b                           \\n\\t""'), (46, '    ""  vsetvli t0,zero,e32,m8,ta,ma             \\n\\t""'), (47, '    ""  vmv.s.x v8,zero                          \\n\\t""'), (48, '    ""  vredsum.vs v0,v0,v8                      \\n\\t""'), (49, '    ""  vmv.x.s %[total],v0                      \\n\\t""'), (50, '    :  [u] ""+r"" (u),'), (51, '       [v] ""+r"" (v),'), (52, '       [num] ""+r"" (num),'), (53, '       [total] ""+r"" (total)'), (54, '    :'), (55, '    :  ""cc"", ""memory""'), (56, '  );'), (57, ''), (58, '  return total;'), (59, '}'), (60, ''), (61, 'static void matrixDotVector(int dim1, int dim2, const int8_t *wi, const TFloat *scales,'), (62, '                            const int8_t *u, TFloat *v) {'), (63, '  int num_out = dim1;'), (64, '  int num_in = dim2 - 1;'), (65, '  for (int i = 0; i < num_out; ++i) {'), (66, '    const int8_t *wi_start = wi + i * dim2;'), (67, '    int total = DotProduct(wi_start, u, num_in);'), (68, '    // Add in the bias and apply scaling.'), (69, '    v[i] = (total + wi_start[num_in] * INT8_MAX) * scales[i];'), (70, '  }'), (71, '}'), (72, ''), (73, 'const IntSimdMatrix IntSimdMatrix::intSimdMatrixRVV = {'), (74, '    // Function.'), (75, '    matrixDotVector,'), (76, '    // Number of 32 bit outputs held in each register.'), (77, '    1,'), (78, '    // Maximum number of registers that we will use to hold outputs.'), (79, '    1,'), (80, '    // Number of 8 bit inputs in the inputs register.'), (81, '    1,'), (82, '    // Number of inputs in each weight group.'), (83, '    1'), (84, '};'), (85, ''), (86, '} // namespace tesseract.'), (87, ''), (88, '#endif /* HAVE_RVV */')], 'deleted': []}",yes
src\arch\simddetect.cpp,src\arch\simddetect.cpp,16fc9d90a4f87ab5b8483c1fb1a080b24e2a1553,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,"Add RISC-V V support (#4346)

Convert riscv-v-spec-1.0.pdf into 111 PNG images,
then perform OCR on each one in sequence,
and measure the testing time on banana_f3:

old:        31m16.267s
new:        16m51.155s

Co-authored-by: sunyuechi <sunyuechi@iscas.ac.cn>
Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -65,6 +65,13 @@
 #  endif
 #endif
 
+#if defined(HAVE_RVV)
+#  if defined(HAVE_GETAUXVAL)
+#    include <sys/auxv.h>
+#    define HWCAP_RV(letter) (1ul << ((letter) - 'A'))
+#  endif
+#endif
+
 namespace tesseract {
 
 // Computes and returns the dot product of the two n-vectors u and v.
@@ -89,6 +96,8 @@ bool SIMDDetect::neon_available_ = true;
 #elif defined(HAVE_NEON)
 // If true, then Neon has been detected.
 bool SIMDDetect::neon_available_;
+#elif defined(HAVE_RVV)
+bool SIMDDetect::rvv_available_;
 #else
 // If true, then AVX has been detected.
 bool SIMDDetect::avx_available_;
@@ -229,6 +238,13 @@ SIMDDetect::SIMDDetect() {
   elf_aux_info(AT_HWCAP, &hwcap, sizeof hwcap);
   neon_available_ = hwcap & HWCAP_NEON;
 #  endif
+#endif
+
+#if defined(HAVE_RVV)
+#  if defined(HAVE_GETAUXVAL)
+  const unsigned long hwcap = getauxval(AT_HWCAP);
+  rvv_available_ = hwcap & HWCAP_RV('V');
+#  endif
 #endif
 
   // Select code for calculation of dot product based on autodetection.
@@ -258,6 +274,10 @@ SIMDDetect::SIMDDetect() {
   } else if (neon_available_) {
     // NEON detected.
     SetDotProduct(DotProductNEON, &IntSimdMatrix::intSimdMatrixNEON);
+#endif
+#if defined(HAVE_RVV)
+  } else if (rvv_available_) {
+    SetDotProduct(DotProductGeneric, &IntSimdMatrix::intSimdMatrixRVV);
 #endif
   }
 
","{'added': [(68, '#if defined(HAVE_RVV)'), (69, '#  if defined(HAVE_GETAUXVAL)'), (70, '#    include <sys/auxv.h>'), (71, ""#    define HWCAP_RV(letter) (1ul << ((letter) - 'A'))""), (72, '#  endif'), (73, '#endif'), (74, ''), (99, '#elif defined(HAVE_RVV)'), (100, 'bool SIMDDetect::rvv_available_;'), (241, '#endif'), (242, ''), (243, '#if defined(HAVE_RVV)'), (244, '#  if defined(HAVE_GETAUXVAL)'), (245, '  const unsigned long hwcap = getauxval(AT_HWCAP);'), (246, ""  rvv_available_ = hwcap & HWCAP_RV('V');""), (247, '#  endif'), (277, '#endif'), (278, '#if defined(HAVE_RVV)'), (279, '  } else if (rvv_available_) {'), (280, '    SetDotProduct(DotProductGeneric, &IntSimdMatrix::intSimdMatrixRVV);')], 'deleted': []}",yes
src\arch\simddetect.h,src\arch\simddetect.h,16fc9d90a4f87ab5b8483c1fb1a080b24e2a1553,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,"Add RISC-V V support (#4346)

Convert riscv-v-spec-1.0.pdf into 111 PNG images,
then perform OCR on each one in sequence,
and measure the testing time on banana_f3:

old:        31m16.267s
new:        16m51.155s

Co-authored-by: sunyuechi <sunyuechi@iscas.ac.cn>
Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -63,6 +63,10 @@ public:
   static inline bool IsNEONAvailable() {
     return detector.neon_available_;
   }
+  // Returns true if RVV is available on this system.
+  static inline bool IsRVVAvailable() {
+    return detector.rvv_available_;
+  }
 
   // Update settings after config variable was set.
   static TESS_API void Update();
@@ -86,6 +90,8 @@ private:
   static TESS_API bool sse_available_;
   // If true, then NEON has been detected.
   static TESS_API bool neon_available_;
+  // If true, then RVV has been detected.
+  static TESS_API bool rvv_available_;
 };
 
 } // namespace tesseract
","{'added': [(66, '  // Returns true if RVV is available on this system.'), (67, '  static inline bool IsRVVAvailable() {'), (68, '    return detector.rvv_available_;'), (69, '  }'), (93, '  // If true, then RVV has been detected.'), (94, '  static TESS_API bool rvv_available_;')], 'deleted': []}",yes
src\tesseract.cpp,src\tesseract.cpp,16fc9d90a4f87ab5b8483c1fb1a080b24e2a1553,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,"Add RISC-V V support (#4346)

Convert riscv-v-spec-1.0.pdf into 111 PNG images,
then perform OCR on each one in sequence,
and measure the testing time on banana_f3:

old:        31m16.267s
new:        16m51.155s

Co-authored-by: sunyuechi <sunyuechi@iscas.ac.cn>
Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -112,6 +112,9 @@ static void PrintVersionInfo() {
 #if defined(HAVE_NEON) || defined(__aarch64__)
   if (tesseract::SIMDDetect::IsNEONAvailable())
     printf("" Found NEON\n"");
+#elif defined(HAVE_RVV)
+  if (tesseract::SIMDDetect::IsRVVAvailable())
+    printf("" Found RVV\n"");
 #else
   if (tesseract::SIMDDetect::IsAVX512BWAvailable()) {
     printf("" Found AVX512BW\n"");
","{'added': [(115, '#elif defined(HAVE_RVV)'), (116, '  if (tesseract::SIMDDetect::IsRVVAvailable())'), (117, '    printf("" Found RVV\\n"");')], 'deleted': []}",yes
Makefile.am,Makefile.am,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -110,7 +110,6 @@ lib_LTLIBRARIES = libtesseract.la
 libtesseract_la_LDFLAGS = $(LEPTONICA_LIBS)
 libtesseract_la_LDFLAGS += $(libarchive_LIBS)
 libtesseract_la_LDFLAGS += $(libcurl_LIBS)
-libtesseract_la_LDFLAGS += $(TENSORFLOW_LIBS)
 if T_WIN
 libtesseract_la_LDFLAGS += -no-undefined -lws2_32
 else
@@ -509,10 +508,6 @@ libtesseract_lstm_la_CPPFLAGS += -I$(top_srcdir)/src/cutil
 libtesseract_lstm_la_CPPFLAGS += -I$(top_srcdir)/src/dict
 libtesseract_lstm_la_CPPFLAGS += -I$(top_srcdir)/src/lstm
 libtesseract_lstm_la_CPPFLAGS += -I$(top_srcdir)/src/viewer
-if TENSORFLOW
-libtesseract_lstm_la_CPPFLAGS += -DINCLUDE_TENSORFLOW
-libtesseract_lstm_la_CPPFLAGS += -I/usr/include/tensorflow
-endif
 if !NO_TESSDATA_PREFIX
 libtesseract_lstm_la_CPPFLAGS += -DTESSDATA_PREFIX='""@datadir@""'
 endif
@@ -535,7 +530,6 @@ noinst_HEADERS += src/lstm/reversed.h
 noinst_HEADERS += src/lstm/series.h
 noinst_HEADERS += src/lstm/static_shape.h
 noinst_HEADERS += src/lstm/stridemap.h
-noinst_HEADERS += src/lstm/tfnetwork.h
 noinst_HEADERS += src/lstm/weightmatrix.h
 
 noinst_LTLIBRARIES += libtesseract_lstm.la
@@ -556,10 +550,6 @@ libtesseract_lstm_la_SOURCES += src/lstm/reconfig.cpp
 libtesseract_lstm_la_SOURCES += src/lstm/reversed.cpp
 libtesseract_lstm_la_SOURCES += src/lstm/series.cpp
 libtesseract_lstm_la_SOURCES += src/lstm/stridemap.cpp
-if TENSORFLOW
-libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.cpp
-libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.pb.cc
-endif
 libtesseract_lstm_la_SOURCES += src/lstm/weightmatrix.cpp
 
 # Rules for src/textord.
@@ -730,7 +720,6 @@ tesseract_LDFLAGS = $(OPENMP_CXXFLAGS)
 
 tesseract_LDADD = libtesseract.la
 tesseract_LDADD += $(LEPTONICA_LIBS)
-tesseract_LDADD += $(TENSORFLOW_LIBS)
 tesseract_LDADD += $(libarchive_LIBS)
 tesseract_LDADD += $(libcurl_LIBS)
 
@@ -900,7 +889,6 @@ EXTRA_PROGRAMS += $(trainingtools)
 extralib = libtesseract.la
 extralib += $(libarchive_LIBS)
 extralib += $(LEPTONICA_LIBS)
-extralib += $(TENSORFLOW_LIBS)
 if T_WIN
 extralib += -lws2_32
 endif
@@ -1008,7 +996,6 @@ fuzzer-api: unittest/fuzzers/fuzzer-api.cpp
           $< \
           $(builddir)/.libs/libtesseract.a \
           $(LEPTONICA_LIBS) \
-          $(TENSORFLOW_LIBS) \
           $(libarchive_LIBS) \
           $(libcurl_LIBS) \
           -o $@
@@ -1028,7 +1015,6 @@ fuzzer-api-512x256: unittest/fuzzers/fuzzer-api.cpp
           $< \
           $(builddir)/.libs/libtesseract.a \
           $(LEPTONICA_LIBS) \
-          $(TENSORFLOW_LIBS) \
           $(libarchive_LIBS) \
           $(libcurl_LIBS) \
           -o $@
@@ -1141,10 +1127,6 @@ endif # ENABLE_TRAINING
 unittest_CPPFLAGS += -I$(top_srcdir)/src/viewer
 unittest_CPPFLAGS += -I$(top_srcdir)/src/wordrec
 unittest_CPPFLAGS += -I$(top_srcdir)/unittest
-if TENSORFLOW
-unittest_CPPFLAGS += -DINCLUDE_TENSORFLOW
-unittest_CPPFLAGS += -I/usr/include/tensorflow
-endif # TENSORFLOW
 
 # Build googletest:
 check_LTLIBRARIES = libgtest.la libgtest_main.la libgmock.la libgmock_main.la
@@ -1172,7 +1154,6 @@ GTEST_LIBS =  libgtest.la libgtest_main.la -lpthread
 GMOCK_LIBS =  libgmock.la libgmock_main.la
 TESS_LIBS = $(GTEST_LIBS)
 TESS_LIBS += libtesseract.la $(libarchive_LIBS)
-TESS_LIBS += $(TENSORFLOW_LIBS)
 TRAINING_LIBS = libtesseract_training.la
 TRAINING_LIBS += $(TESS_LIBS)
 unittest_CPPFLAGS += -isystem $(top_srcdir)/unittest/third_party/googletest/googletest/include
@@ -1419,10 +1400,6 @@ networkio_test_CPPFLAGS = $(unittest_CPPFLAGS)
 networkio_test_LDADD = $(TESS_LIBS)
 
 normstrngs_test_SOURCES = unittest/normstrngs_test.cc
-if TENSORFLOW
-normstrngs_test_SOURCES += unittest/third_party/utf/rune.c
-normstrngs_test_SOURCES += unittest/util/utf8/unilib.cc
-endif # TENSORFLOW
 normstrngs_test_CPPFLAGS = $(unittest_CPPFLAGS)
 normstrngs_test_LDADD = $(TRAINING_LIBS) $(ICU_I18N_LIBS) $(ICU_UC_LIBS)
 
@@ -1441,11 +1418,6 @@ pagesegmode_test_CPPFLAGS = $(unittest_CPPFLAGS)
 pagesegmode_test_LDADD = $(TRAINING_LIBS) $(LEPTONICA_LIBS)
 
 pango_font_info_test_SOURCES = unittest/pango_font_info_test.cc
-if TENSORFLOW
-pango_font_info_test_SOURCES += unittest/third_party/utf/rune.c
-pango_font_info_test_SOURCES += unittest/util/utf8/unicodetext.cc
-pango_font_info_test_SOURCES += unittest/util/utf8/unilib.cc
-endif # TENSORFLOW
 pango_font_info_test_CPPFLAGS = $(unittest_CPPFLAGS)
 pango_font_info_test_LDADD = $(TRAINING_LIBS) $(LEPTONICA_LIBS)
 pango_font_info_test_LDADD += $(ICU_I18N_LIBS)
","{'added': [], 'deleted': [(113, 'libtesseract_la_LDFLAGS += $(TENSORFLOW_LIBS)'), (512, 'if TENSORFLOW'), (513, 'libtesseract_lstm_la_CPPFLAGS += -DINCLUDE_TENSORFLOW'), (514, 'libtesseract_lstm_la_CPPFLAGS += -I/usr/include/tensorflow'), (515, 'endif'), (538, 'noinst_HEADERS += src/lstm/tfnetwork.h'), (559, 'if TENSORFLOW'), (560, 'libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.cpp'), (561, 'libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.pb.cc'), (562, 'endif'), (733, 'tesseract_LDADD += $(TENSORFLOW_LIBS)'), (903, 'extralib += $(TENSORFLOW_LIBS)'), (1011, '          $(TENSORFLOW_LIBS) \\'), (1031, '          $(TENSORFLOW_LIBS) \\'), (1144, 'if TENSORFLOW'), (1145, 'unittest_CPPFLAGS += -DINCLUDE_TENSORFLOW'), (1146, 'unittest_CPPFLAGS += -I/usr/include/tensorflow'), (1147, 'endif # TENSORFLOW'), (1175, 'TESS_LIBS += $(TENSORFLOW_LIBS)'), (1422, 'if TENSORFLOW'), (1423, 'normstrngs_test_SOURCES += unittest/third_party/utf/rune.c'), (1424, 'normstrngs_test_SOURCES += unittest/util/utf8/unilib.cc'), (1425, 'endif # TENSORFLOW'), (1444, 'if TENSORFLOW'), (1445, 'pango_font_info_test_SOURCES += unittest/third_party/utf/rune.c'), (1446, 'pango_font_info_test_SOURCES += unittest/util/utf8/unicodetext.cc'), (1447, 'pango_font_info_test_SOURCES += unittest/util/utf8/unilib.cc'), (1448, 'endif # TENSORFLOW')]}",yes
configure.ac,configure.ac,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -270,25 +270,6 @@ AC_ARG_WITH([curl],
             AS_HELP_STRING([--with-curl],
                            [Build with libcurl which supports processing an image URL @<:@default=check@:>@]),
             [], [with_curl=check])
-AC_ARG_WITH([tensorflow],
-  AS_HELP_STRING([--with-tensorflow],
-                 [support TensorFlow @<:@default=check@:>@]),
-  [], [with_tensorflow=check])
-
-# Check whether to build with support for TensorFlow.
-AM_CONDITIONAL([TENSORFLOW], false)
-TENSORFLOW_LIBS=
-AS_IF([test ""x$with_tensorflow"" != xno],
-  [AC_CHECK_HEADERS([tensorflow/core/framework/graph.pb.h],
-    [AC_SUBST([TENSORFLOW_LIBS], [""-lprotobuf -ltensorflow_cc""])
-      AM_CONDITIONAL([TENSORFLOW], true)
-    ],
-    [if test ""x$with_tensorflow"" != xcheck; then
-      AC_MSG_FAILURE(
-        [--with-tensorflow was given, but test for libtensorflow-dev failed])
-     fi
-    ])
-  ])
 
 # https://lists.apple.com/archives/unix-porting/2009/Jan/msg00026.html
 m4_define([MY_CHECK_FRAMEWORK],
","{'added': [], 'deleted': [(273, 'AC_ARG_WITH([tensorflow],'), (274, '  AS_HELP_STRING([--with-tensorflow],'), (275, '                 [support TensorFlow @<:@default=check@:>@]),'), (276, '  [], [with_tensorflow=check])'), (277, ''), (278, '# Check whether to build with support for TensorFlow.'), (279, 'AM_CONDITIONAL([TENSORFLOW], false)'), (280, 'TENSORFLOW_LIBS='), (281, 'AS_IF([test ""x$with_tensorflow"" != xno],'), (282, '  [AC_CHECK_HEADERS([tensorflow/core/framework/graph.pb.h],'), (283, '    [AC_SUBST([TENSORFLOW_LIBS], [""-lprotobuf -ltensorflow_cc""])'), (284, '      AM_CONDITIONAL([TENSORFLOW], true)'), (285, '    ],'), (286, '    [if test ""x$with_tensorflow"" != xcheck; then'), (287, '      AC_MSG_FAILURE('), (288, '        [--with-tensorflow was given, but test for libtensorflow-dev failed])'), (289, '     fi'), (290, '    ])'), (291, '  ])')]}",yes
src\lstm\network.cpp,src\lstm\network.cpp,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -38,9 +38,6 @@
 #include ""scrollview.h""
 #include ""series.h""
 #include ""statistc.h""
-#ifdef INCLUDE_TENSORFLOW
-#  include ""tfnetwork.h""
-#endif
 #include ""tprintf.h""
 
 namespace tesseract {
@@ -287,11 +284,7 @@ Network *Network::CreateFromFile(TFile *fp) {
       network = new Series(name);
       break;
     case NT_TENSORFLOW:
-#ifdef INCLUDE_TENSORFLOW
-      network = new TFNetwork(name);
-#else
-      tprintf(""TensorFlow not compiled in! -DINCLUDE_TENSORFLOW\n"");
-#endif
+      tprintf(""Unsupported TensorFlow model\n"");
       break;
     // All variants of FullyConnected.
     case NT_SOFTMAX:
","{'added': [(287, '      tprintf(""Unsupported TensorFlow model\\n"");')], 'deleted': [(41, '#ifdef INCLUDE_TENSORFLOW'), (42, '#  include ""tfnetwork.h""'), (43, '#endif'), (290, '#ifdef INCLUDE_TENSORFLOW'), (291, '      network = new TFNetwork(name);'), (292, '#else'), (293, '      tprintf(""TensorFlow not compiled in! -DINCLUDE_TENSORFLOW\\n"");'), (294, '#endif')]}",yes
src\lstm\tfnetwork.cpp,,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,143 +0,0 @@
-///////////////////////////////////////////////////////////////////////
-// File:        tfnetwork.cpp
-// Description: Encapsulation of an entire tensorflow graph as a
-//              Tesseract Network.
-// Author:      Ray Smith
-//
-// (C) Copyright 2016, Google Inc.
-// Licensed under the Apache License, Version 2.0 (the ""License"");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-// http://www.apache.org/licenses/LICENSE-2.0
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an ""AS IS"" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-///////////////////////////////////////////////////////////////////////
-#ifdef INCLUDE_TENSORFLOW
-
-#  include ""tfnetwork.h""
-
-#  include <allheaders.h>
-#  include ""input.h""
-#  include ""networkscratch.h""
-
-using tensorflow::Status;
-using tensorflow::Tensor;
-using tensorflow::TensorShape;
-
-namespace tesseract {
-
-TFNetwork::TFNetwork(const std::string &name) : Network(NT_TENSORFLOW, name, 0, 0) {}
-
-int TFNetwork::InitFromProtoStr(const std::string &proto_str) {
-  if (!model_proto_.ParseFromString(proto_str))
-    return 0;
-  return InitFromProto();
-}
-
-// Writes to the given file. Returns false in case of error.
-// Should be overridden by subclasses, but called by their Serialize.
-bool TFNetwork::Serialize(TFile *fp) const {
-  if (!Network::Serialize(fp))
-    return false;
-  std::string proto_str;
-  model_proto_.SerializeToString(&proto_str);
-  // TODO: optimize and avoid copy from proto_str to data.
-  std::vector<char> data(proto_str.size());
-  memcpy(&data[0], proto_str.data(), proto_str.size());
-  return fp->Serialize(data);
-}
-
-// Reads from the given file. Returns false in case of error.
-// Should be overridden by subclasses, but NOT called by their DeSerialize.
-bool TFNetwork::DeSerialize(TFile *fp) {
-  std::vector<char> data;
-  if (!fp->DeSerialize(data))
-    return false;
-  if (!model_proto_.ParseFromArray(&data[0], data.size())) {
-    return false;
-  }
-  return InitFromProto();
-}
-
-// Runs forward propagation of activations on the input line.
-// See Network for a detailed discussion of the arguments.
-void TFNetwork::Forward(bool debug, const NetworkIO &input, const TransposedArray *input_transpose,
-                        NetworkScratch *scratch, NetworkIO *output) {
-  std::vector<std::pair<std::string, Tensor>> tf_inputs;
-  int depth = input_shape_.depth();
-  ASSERT_HOST(depth == input.NumFeatures());
-  // TODO(rays) Allow batching. For now batch_size = 1.
-  const StrideMap &stride_map = input.stride_map();
-  // TF requires a tensor of shape float[batch, height, width, depth].
-  TensorShape shape{1, stride_map.Size(FD_HEIGHT), stride_map.Size(FD_WIDTH), depth};
-  Tensor input_tensor(tensorflow::DT_FLOAT, shape);
-  // The flat() member gives a 1d array, with a data() member to get the data.
-  auto eigen_tensor = input_tensor.flat<float>();
-  memcpy(eigen_tensor.data(), input.f(0), input.Width() * depth * sizeof(input.f(0)[0]));
-  // Add the tensor to the vector of inputs.
-  tf_inputs.emplace_back(model_proto_.image_input(), input_tensor);
-
-  // Provide tensors giving the width and/or height of the image if they are
-  // required. Some tf ops require a separate tensor with knowledge of the
-  // size of the input as they cannot obtain it from the input tensor. This is
-  // usually true in the case of ops that process a batch of variable-sized
-  // objects.
-  if (!model_proto_.image_widths().empty()) {
-    TensorShape size_shape{1};
-    Tensor width_tensor(tensorflow::DT_INT64, size_shape);
-    auto eigen_wtensor = width_tensor.flat<tensorflow::int64>();
-    *eigen_wtensor.data() = stride_map.Size(FD_WIDTH);
-    tf_inputs.emplace_back(model_proto_.image_widths(), width_tensor);
-  }
-  if (!model_proto_.image_heights().empty()) {
-    TensorShape size_shape{1};
-    Tensor height_tensor(tensorflow::DT_INT64, size_shape);
-    auto eigen_htensor = height_tensor.flat<tensorflow::int64>();
-    *eigen_htensor.data() = stride_map.Size(FD_HEIGHT);
-    tf_inputs.emplace_back(model_proto_.image_heights(), height_tensor);
-  }
-  std::vector<std::string> target_layers = {model_proto_.output_layer()};
-  std::vector<Tensor> outputs;
-  Status s = session_->Run(tf_inputs, target_layers, {}, &outputs);
-  if (!s.ok())
-    tprintf(""session->Run failed:%s\n"", s.error_message().c_str());
-  ASSERT_HOST(s.ok());
-  ASSERT_HOST(outputs.size() == 1);
-  const Tensor &output_tensor = outputs[0];
-  // Check the dimensions of the output.
-  ASSERT_HOST(output_tensor.shape().dims() == 3);
-  int output_batch = output_tensor.shape().dim_size(0);
-  int output_steps = output_tensor.shape().dim_size(1);
-  int output_depth = output_tensor.shape().dim_size(2);
-  ASSERT_HOST(output_batch == 1);
-  ASSERT_HOST(output_depth == output_shape_.depth());
-  output->Resize2d(false, output_steps, output_depth);
-  auto eigen_output = output_tensor.flat<float>();
-  memcpy(output->f(0), eigen_output.data(), output_steps * output_depth * sizeof(output->f(0)[0]));
-}
-
-int TFNetwork::InitFromProto() {
-  spec_ = model_proto_.spec();
-  input_shape_.SetShape(model_proto_.batch_size(), std::max(0, model_proto_.y_size()),
-                        std::max(0, model_proto_.x_size()), model_proto_.depth());
-  output_shape_.SetShape(model_proto_.batch_size(), 1, 0, model_proto_.num_classes());
-  output_shape_.set_loss_type(model_proto_.using_ctc() ? LT_CTC : LT_SOFTMAX);
-  ni_ = input_shape_.height();
-  no_ = output_shape_.depth();
-  // Initialize the session_ with the graph. Since we can't get the graph
-  // back from the session_, we have to keep the proto as well
-  tensorflow::SessionOptions options;
-  session_.reset(NewSession(options));
-  Status s = session_->Create(model_proto_.graph());
-  if (s.ok())
-    return model_proto_.global_step();
-  tprintf(""Session_->Create returned '%s'\n"", s.error_message().c_str());
-  return 0;
-}
-
-} // namespace tesseract
-
-#endif // ifdef INCLUDE_TENSORFLOW
","{'added': [], 'deleted': [(1, '///////////////////////////////////////////////////////////////////////'), (2, '// File:        tfnetwork.cpp'), (3, '// Description: Encapsulation of an entire tensorflow graph as a'), (4, '//              Tesseract Network.'), (5, '// Author:      Ray Smith'), (6, '//'), (7, '// (C) Copyright 2016, Google Inc.'), (8, '// Licensed under the Apache License, Version 2.0 (the ""License"");'), (9, '// you may not use this file except in compliance with the License.'), (10, '// You may obtain a copy of the License at'), (11, '// http://www.apache.org/licenses/LICENSE-2.0'), (12, '// Unless required by applicable law or agreed to in writing, software'), (13, '// distributed under the License is distributed on an ""AS IS"" BASIS,'), (14, '// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (15, '// See the License for the specific language governing permissions and'), (16, '// limitations under the License.'), (17, '///////////////////////////////////////////////////////////////////////'), (18, '#ifdef INCLUDE_TENSORFLOW'), (19, ''), (20, '#  include ""tfnetwork.h""'), (21, ''), (22, '#  include <allheaders.h>'), (23, '#  include ""input.h""'), (24, '#  include ""networkscratch.h""'), (25, ''), (26, 'using tensorflow::Status;'), (27, 'using tensorflow::Tensor;'), (28, 'using tensorflow::TensorShape;'), (29, ''), (30, 'namespace tesseract {'), (31, ''), (32, 'TFNetwork::TFNetwork(const std::string &name) : Network(NT_TENSORFLOW, name, 0, 0) {}'), (33, ''), (34, 'int TFNetwork::InitFromProtoStr(const std::string &proto_str) {'), (35, '  if (!model_proto_.ParseFromString(proto_str))'), (36, '    return 0;'), (37, '  return InitFromProto();'), (38, '}'), (39, ''), (40, '// Writes to the given file. Returns false in case of error.'), (41, '// Should be overridden by subclasses, but called by their Serialize.'), (42, 'bool TFNetwork::Serialize(TFile *fp) const {'), (43, '  if (!Network::Serialize(fp))'), (44, '    return false;'), (45, '  std::string proto_str;'), (46, '  model_proto_.SerializeToString(&proto_str);'), (47, '  // TODO: optimize and avoid copy from proto_str to data.'), (48, '  std::vector<char> data(proto_str.size());'), (49, '  memcpy(&data[0], proto_str.data(), proto_str.size());'), (50, '  return fp->Serialize(data);'), (51, '}'), (52, ''), (53, '// Reads from the given file. Returns false in case of error.'), (54, '// Should be overridden by subclasses, but NOT called by their DeSerialize.'), (55, 'bool TFNetwork::DeSerialize(TFile *fp) {'), (56, '  std::vector<char> data;'), (57, '  if (!fp->DeSerialize(data))'), (58, '    return false;'), (59, '  if (!model_proto_.ParseFromArray(&data[0], data.size())) {'), (60, '    return false;'), (61, '  }'), (62, '  return InitFromProto();'), (63, '}'), (64, ''), (65, '// Runs forward propagation of activations on the input line.'), (66, '// See Network for a detailed discussion of the arguments.'), (67, 'void TFNetwork::Forward(bool debug, const NetworkIO &input, const TransposedArray *input_transpose,'), (68, '                        NetworkScratch *scratch, NetworkIO *output) {'), (69, '  std::vector<std::pair<std::string, Tensor>> tf_inputs;'), (70, '  int depth = input_shape_.depth();'), (71, '  ASSERT_HOST(depth == input.NumFeatures());'), (72, '  // TODO(rays) Allow batching. For now batch_size = 1.'), (73, '  const StrideMap &stride_map = input.stride_map();'), (74, '  // TF requires a tensor of shape float[batch, height, width, depth].'), (75, '  TensorShape shape{1, stride_map.Size(FD_HEIGHT), stride_map.Size(FD_WIDTH), depth};'), (76, '  Tensor input_tensor(tensorflow::DT_FLOAT, shape);'), (77, '  // The flat() member gives a 1d array, with a data() member to get the data.'), (78, '  auto eigen_tensor = input_tensor.flat<float>();'), (79, '  memcpy(eigen_tensor.data(), input.f(0), input.Width() * depth * sizeof(input.f(0)[0]));'), (80, '  // Add the tensor to the vector of inputs.'), (81, '  tf_inputs.emplace_back(model_proto_.image_input(), input_tensor);'), (82, ''), (83, '  // Provide tensors giving the width and/or height of the image if they are'), (84, '  // required. Some tf ops require a separate tensor with knowledge of the'), (85, '  // size of the input as they cannot obtain it from the input tensor. This is'), (86, '  // usually true in the case of ops that process a batch of variable-sized'), (87, '  // objects.'), (88, '  if (!model_proto_.image_widths().empty()) {'), (89, '    TensorShape size_shape{1};'), (90, '    Tensor width_tensor(tensorflow::DT_INT64, size_shape);'), (91, '    auto eigen_wtensor = width_tensor.flat<tensorflow::int64>();'), (92, '    *eigen_wtensor.data() = stride_map.Size(FD_WIDTH);'), (93, '    tf_inputs.emplace_back(model_proto_.image_widths(), width_tensor);'), (94, '  }'), (95, '  if (!model_proto_.image_heights().empty()) {'), (96, '    TensorShape size_shape{1};'), (97, '    Tensor height_tensor(tensorflow::DT_INT64, size_shape);'), (98, '    auto eigen_htensor = height_tensor.flat<tensorflow::int64>();'), (99, '    *eigen_htensor.data() = stride_map.Size(FD_HEIGHT);'), (100, '    tf_inputs.emplace_back(model_proto_.image_heights(), height_tensor);'), (101, '  }'), (102, '  std::vector<std::string> target_layers = {model_proto_.output_layer()};'), (103, '  std::vector<Tensor> outputs;'), (104, '  Status s = session_->Run(tf_inputs, target_layers, {}, &outputs);'), (105, '  if (!s.ok())'), (106, '    tprintf(""session->Run failed:%s\\n"", s.error_message().c_str());'), (107, '  ASSERT_HOST(s.ok());'), (108, '  ASSERT_HOST(outputs.size() == 1);'), (109, '  const Tensor &output_tensor = outputs[0];'), (110, '  // Check the dimensions of the output.'), (111, '  ASSERT_HOST(output_tensor.shape().dims() == 3);'), (112, '  int output_batch = output_tensor.shape().dim_size(0);'), (113, '  int output_steps = output_tensor.shape().dim_size(1);'), (114, '  int output_depth = output_tensor.shape().dim_size(2);'), (115, '  ASSERT_HOST(output_batch == 1);'), (116, '  ASSERT_HOST(output_depth == output_shape_.depth());'), (117, '  output->Resize2d(false, output_steps, output_depth);'), (118, '  auto eigen_output = output_tensor.flat<float>();'), (119, '  memcpy(output->f(0), eigen_output.data(), output_steps * output_depth * sizeof(output->f(0)[0]));'), (120, '}'), (121, ''), (122, 'int TFNetwork::InitFromProto() {'), (123, '  spec_ = model_proto_.spec();'), (124, '  input_shape_.SetShape(model_proto_.batch_size(), std::max(0, model_proto_.y_size()),'), (125, '                        std::max(0, model_proto_.x_size()), model_proto_.depth());'), (126, '  output_shape_.SetShape(model_proto_.batch_size(), 1, 0, model_proto_.num_classes());'), (127, '  output_shape_.set_loss_type(model_proto_.using_ctc() ? LT_CTC : LT_SOFTMAX);'), (128, '  ni_ = input_shape_.height();'), (129, '  no_ = output_shape_.depth();'), (130, ""  // Initialize the session_ with the graph. Since we can't get the graph""), (131, '  // back from the session_, we have to keep the proto as well'), (132, '  tensorflow::SessionOptions options;'), (133, '  session_.reset(NewSession(options));'), (134, '  Status s = session_->Create(model_proto_.graph());'), (135, '  if (s.ok())'), (136, '    return model_proto_.global_step();'), (137, '  tprintf(""Session_->Create returned \'%s\'\\n"", s.error_message().c_str());'), (138, '  return 0;'), (139, '}'), (140, ''), (141, '} // namespace tesseract'), (142, ''), (143, '#endif // ifdef INCLUDE_TENSORFLOW')]}",yes
src\lstm\tfnetwork.h,,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,106 +0,0 @@
-///////////////////////////////////////////////////////////////////////
-// File:        tfnetwork.h
-// Description: Encapsulation of an entire tensorflow graph as a
-//              Tesseract Network.
-// Author:      Ray Smith
-//
-// (C) Copyright 2016, Google Inc.
-// Licensed under the Apache License, Version 2.0 (the ""License"");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-// http://www.apache.org/licenses/LICENSE-2.0
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an ""AS IS"" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-///////////////////////////////////////////////////////////////////////
-
-#ifndef TESSERACT_LSTM_TFNETWORK_H_
-#define TESSERACT_LSTM_TFNETWORK_H_
-
-#ifdef INCLUDE_TENSORFLOW
-
-#  include <memory>
-#  include <string>
-
-#  include ""network.h""
-#  include ""static_shape.h""
-#  include ""tensorflow/core/framework/graph.pb.h""
-#  include ""tensorflow/core/public/session.h""
-#  include ""tfnetwork.pb.h""
-
-namespace tesseract {
-
-class TFNetwork : public Network {
-public:
-  explicit TFNetwork(const std::string &name);
-  virtual ~TFNetwork() = default;
-
-  // Returns the required shape input to the network.
-  StaticShape InputShape() const override {
-    return input_shape_;
-  }
-  // Returns the shape output from the network given an input shape (which may
-  // be partially unknown ie zero).
-  StaticShape OutputShape(const StaticShape &input_shape) const override {
-    return output_shape_;
-  }
-
-  std::string spec() const override {
-    return spec_;
-  }
-
-  // Deserializes *this from a serialized TFNetwork proto. Returns 0 if failed,
-  // otherwise the global step of the serialized graph.
-  int InitFromProtoStr(const std::string &proto_str);
-  // The number of classes in this network should be equal to those in the
-  // recoder_ in LSTMRecognizer.
-  int num_classes() const {
-    return output_shape_.depth();
-  }
-
-  // Writes to the given file. Returns false in case of error.
-  // Should be overridden by subclasses, but called by their Serialize.
-  bool Serialize(TFile *fp) const override;
-  // Reads from the given file. Returns false in case of error.
-  // Should be overridden by subclasses, but NOT called by their DeSerialize.
-  bool DeSerialize(TFile *fp) override;
-
-  // Runs forward propagation of activations on the input line.
-  // See Network for a detailed discussion of the arguments.
-  void Forward(bool debug, const NetworkIO &input, const TransposedArray *input_transpose,
-               NetworkScratch *scratch, NetworkIO *output) override;
-
-private:
-  // Runs backward propagation of errors on the deltas line.
-  // See Network for a detailed discussion of the arguments.
-  bool Backward(bool debug, const NetworkIO &fwd_deltas, NetworkScratch *scratch,
-                NetworkIO *back_deltas) override {
-    tprintf(""Must override Network::Backward for type %d\n"", type_);
-    return false;
-  }
-
-  void DebugWeights() override {
-    tprintf(""Must override Network::DebugWeights for type %d\n"", type_);
-  }
-
-  int InitFromProto();
-
-  // The original network definition for reference.
-  std::string spec_;
-  // Input tensor parameters.
-  StaticShape input_shape_;
-  // Output tensor parameters.
-  StaticShape output_shape_;
-  // The tensor flow graph is contained in here.
-  std::unique_ptr<tensorflow::Session> session_;
-  // The serialized graph is also contained in here.
-  TFNetworkModel model_proto_;
-};
-
-} // namespace tesseract.
-
-#endif // ifdef INCLUDE_TENSORFLOW
-
-#endif // TESSERACT_TENSORFLOW_TFNETWORK_H_
","{'added': [], 'deleted': [(1, '///////////////////////////////////////////////////////////////////////'), (2, '// File:        tfnetwork.h'), (3, '// Description: Encapsulation of an entire tensorflow graph as a'), (4, '//              Tesseract Network.'), (5, '// Author:      Ray Smith'), (6, '//'), (7, '// (C) Copyright 2016, Google Inc.'), (8, '// Licensed under the Apache License, Version 2.0 (the ""License"");'), (9, '// you may not use this file except in compliance with the License.'), (10, '// You may obtain a copy of the License at'), (11, '// http://www.apache.org/licenses/LICENSE-2.0'), (12, '// Unless required by applicable law or agreed to in writing, software'), (13, '// distributed under the License is distributed on an ""AS IS"" BASIS,'), (14, '// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (15, '// See the License for the specific language governing permissions and'), (16, '// limitations under the License.'), (17, '///////////////////////////////////////////////////////////////////////'), (18, ''), (19, '#ifndef TESSERACT_LSTM_TFNETWORK_H_'), (20, '#define TESSERACT_LSTM_TFNETWORK_H_'), (21, ''), (22, '#ifdef INCLUDE_TENSORFLOW'), (23, ''), (24, '#  include <memory>'), (25, '#  include <string>'), (26, ''), (27, '#  include ""network.h""'), (28, '#  include ""static_shape.h""'), (29, '#  include ""tensorflow/core/framework/graph.pb.h""'), (30, '#  include ""tensorflow/core/public/session.h""'), (31, '#  include ""tfnetwork.pb.h""'), (32, ''), (33, 'namespace tesseract {'), (34, ''), (35, 'class TFNetwork : public Network {'), (36, 'public:'), (37, '  explicit TFNetwork(const std::string &name);'), (38, '  virtual ~TFNetwork() = default;'), (39, ''), (40, '  // Returns the required shape input to the network.'), (41, '  StaticShape InputShape() const override {'), (42, '    return input_shape_;'), (43, '  }'), (44, '  // Returns the shape output from the network given an input shape (which may'), (45, '  // be partially unknown ie zero).'), (46, '  StaticShape OutputShape(const StaticShape &input_shape) const override {'), (47, '    return output_shape_;'), (48, '  }'), (49, ''), (50, '  std::string spec() const override {'), (51, '    return spec_;'), (52, '  }'), (53, ''), (54, '  // Deserializes *this from a serialized TFNetwork proto. Returns 0 if failed,'), (55, '  // otherwise the global step of the serialized graph.'), (56, '  int InitFromProtoStr(const std::string &proto_str);'), (57, '  // The number of classes in this network should be equal to those in the'), (58, '  // recoder_ in LSTMRecognizer.'), (59, '  int num_classes() const {'), (60, '    return output_shape_.depth();'), (61, '  }'), (62, ''), (63, '  // Writes to the given file. Returns false in case of error.'), (64, '  // Should be overridden by subclasses, but called by their Serialize.'), (65, '  bool Serialize(TFile *fp) const override;'), (66, '  // Reads from the given file. Returns false in case of error.'), (67, '  // Should be overridden by subclasses, but NOT called by their DeSerialize.'), (68, '  bool DeSerialize(TFile *fp) override;'), (69, ''), (70, '  // Runs forward propagation of activations on the input line.'), (71, '  // See Network for a detailed discussion of the arguments.'), (72, '  void Forward(bool debug, const NetworkIO &input, const TransposedArray *input_transpose,'), (73, '               NetworkScratch *scratch, NetworkIO *output) override;'), (74, ''), (75, 'private:'), (76, '  // Runs backward propagation of errors on the deltas line.'), (77, '  // See Network for a detailed discussion of the arguments.'), (78, '  bool Backward(bool debug, const NetworkIO &fwd_deltas, NetworkScratch *scratch,'), (79, '                NetworkIO *back_deltas) override {'), (80, '    tprintf(""Must override Network::Backward for type %d\\n"", type_);'), (81, '    return false;'), (82, '  }'), (83, ''), (84, '  void DebugWeights() override {'), (85, '    tprintf(""Must override Network::DebugWeights for type %d\\n"", type_);'), (86, '  }'), (87, ''), (88, '  int InitFromProto();'), (89, ''), (90, '  // The original network definition for reference.'), (91, '  std::string spec_;'), (92, '  // Input tensor parameters.'), (93, '  StaticShape input_shape_;'), (94, '  // Output tensor parameters.'), (95, '  StaticShape output_shape_;'), (96, '  // The tensor flow graph is contained in here.'), (97, '  std::unique_ptr<tensorflow::Session> session_;'), (98, '  // The serialized graph is also contained in here.'), (99, '  TFNetworkModel model_proto_;'), (100, '};'), (101, ''), (102, '} // namespace tesseract.'), (103, ''), (104, '#endif // ifdef INCLUDE_TENSORFLOW'), (105, ''), (106, '#endif // TESSERACT_TENSORFLOW_TFNETWORK_H_')]}",yes
src\lstm\tfnetwork.pb.cc,,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,929 +0,0 @@
-// Generated by the protocol buffer compiler.  DO NOT EDIT!
-// source: tfnetwork.proto
-
-#include ""tfnetwork.pb.h""
-
-#include <algorithm>
-
-#include <google/protobuf/descriptor.h>
-#include <google/protobuf/generated_message_reflection.h>
-#include <google/protobuf/io/coded_stream.h>
-#include <google/protobuf/reflection_ops.h>
-#include <google/protobuf/stubs/common.h>
-#include <google/protobuf/stubs/port.h>
-#include <google/protobuf/wire_format.h>
-#include <google/protobuf/wire_format_lite_inl.h>
-// This is a temporary google only hack
-#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
-#  include ""third_party/protobuf/version.h""
-#endif
-// @@protoc_insertion_point(includes)
-
-namespace protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto {
-extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto ::google::
-    protobuf::internal::SCCInfo<3>
-        scc_info_GraphDef;
-} // namespace protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto
-namespace tesseract {
-class TFNetworkModelDefaultTypeInternal {
-public:
-  ::google::protobuf::internal::ExplicitlyConstructed<TFNetworkModel> _instance;
-} _TFNetworkModel_default_instance_;
-} // namespace tesseract
-namespace protobuf_tfnetwork_2eproto {
-static void InitDefaultsTFNetworkModel() {
-  GOOGLE_PROTOBUF_VERIFY_VERSION;
-
-  {
-    void *ptr = &::tesseract::_TFNetworkModel_default_instance_;
-    new (ptr)::tesseract::TFNetworkModel();
-    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
-  }
-  ::tesseract::TFNetworkModel::InitAsDefaultInstance();
-}
-
-::google::protobuf::internal::SCCInfo<1> scc_info_TFNetworkModel = {
-    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1,
-     InitDefaultsTFNetworkModel},
-    {
-        &protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::scc_info_GraphDef.base,
-    }};
-
-void InitDefaults() {
-  ::google::protobuf::internal::InitSCC(&scc_info_TFNetworkModel.base);
-}
-
-::google::protobuf::Metadata file_level_metadata[1];
-
-const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
-    protodesc_cold) = {
-    ~0u, // no _has_bits_
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel,
-                                                   _internal_metadata_),
-    ~0u, // no _extensions_
-    ~0u, // no _oneof_case_
-    ~0u, // no _weak_field_map_
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, graph_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, global_step_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, spec_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, depth_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, x_size_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, y_size_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, batch_size_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, num_classes_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, using_ctc_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, image_input_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, image_widths_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, image_heights_),
-    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, output_layer_),
-};
-static const ::google::protobuf::internal::MigrationSchema
-    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
-        {0, -1, sizeof(::tesseract::TFNetworkModel)},
-};
-
-static ::google::protobuf::Message const *const file_default_instances[] = {
-    reinterpret_cast<const ::google::protobuf::Message *>(
-        &::tesseract::_TFNetworkModel_default_instance_),
-};
-
-void protobuf_AssignDescriptors() {
-  AddDescriptors();
-  AssignDescriptors(""tfnetwork.proto"", schemas, file_default_instances, TableStruct::offsets,
-                    file_level_metadata, NULL, NULL);
-}
-
-void protobuf_AssignDescriptorsOnce() {
-  static ::google::protobuf::internal::once_flag once;
-  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
-}
-
-void protobuf_RegisterTypes(const ::std::string &) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
-void protobuf_RegisterTypes(const ::std::string &) {
-  protobuf_AssignDescriptorsOnce();
-  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
-}
-
-void AddDescriptorsImpl() {
-  InitDefaults();
-  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
-      ""\n\017tfnetwork.proto\022\ttesseract\032%tensorflow""
-      ""/core/framework/graph.proto\""\233\002\n\016TFNetwor""
-      ""kModel\022#\n\005graph\030\001 \001(\0132\024.tensorflow.Graph""
-      ""Def\022\023\n\013global_step\030\002 \001(\003\022\014\n\004spec\030\003 \001(\t\022\r""
-      ""\n\005depth\030\004 \001(\005\022\016\n\006x_size\030\005 \001(\005\022\016\n\006y_size\030""
-      ""\006 \001(\005\022\022\n\nbatch_size\030\010 \001(\005\022\023\n\013num_classes""
-      ""\030\t \001(\005\022\021\n\tusing_ctc\030\n \001(\010\022\023\n\013image_input""
-      ""\030\013 \001(\t\022\024\n\014image_widths\030\014 \001(\t\022\025\n\rimage_he""
-      ""ights\030\r \001(\t\022\024\n\014output_layer\030\016 \001(\tb\006proto""
-      ""3""};
-  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 361);
-  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(""tfnetwork.proto"",
-                                                                    &protobuf_RegisterTypes);
-  ::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::AddDescriptors();
-}
-
-void AddDescriptors() {
-  static ::google::protobuf::internal::once_flag once;
-  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
-}
-// Force AddDescriptors() to be called at dynamic initialization time.
-struct StaticDescriptorInitializer {
-  StaticDescriptorInitializer() {
-    AddDescriptors();
-  }
-} static_descriptor_initializer;
-} // namespace protobuf_tfnetwork_2eproto
-namespace tesseract {
-
-// ===================================================================
-
-void TFNetworkModel::InitAsDefaultInstance() {
-  ::tesseract::_TFNetworkModel_default_instance_._instance.get_mutable()->graph_ =
-      const_cast<::tensorflow::GraphDef *>(::tensorflow::GraphDef::internal_default_instance());
-}
-void TFNetworkModel::clear_graph() {
-  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {
-    delete graph_;
-  }
-  graph_ = NULL;
-}
-#if !defined(_MSC_VER) || _MSC_VER >= 1900
-const int TFNetworkModel::kGraphFieldNumber;
-const int TFNetworkModel::kGlobalStepFieldNumber;
-const int TFNetworkModel::kSpecFieldNumber;
-const int TFNetworkModel::kDepthFieldNumber;
-const int TFNetworkModel::kXSizeFieldNumber;
-const int TFNetworkModel::kYSizeFieldNumber;
-const int TFNetworkModel::kBatchSizeFieldNumber;
-const int TFNetworkModel::kNumClassesFieldNumber;
-const int TFNetworkModel::kUsingCtcFieldNumber;
-const int TFNetworkModel::kImageInputFieldNumber;
-const int TFNetworkModel::kImageWidthsFieldNumber;
-const int TFNetworkModel::kImageHeightsFieldNumber;
-const int TFNetworkModel::kOutputLayerFieldNumber;
-#endif // !defined(_MSC_VER) || _MSC_VER >= 1900
-
-TFNetworkModel::TFNetworkModel() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
-  ::google::protobuf::internal::InitSCC(&protobuf_tfnetwork_2eproto::scc_info_TFNetworkModel.base);
-  SharedCtor();
-  // @@protoc_insertion_point(constructor:tesseract.TFNetworkModel)
-}
-TFNetworkModel::TFNetworkModel(const TFNetworkModel &from)
-    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
-  _internal_metadata_.MergeFrom(from._internal_metadata_);
-  spec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  if (from.spec().size() > 0) {
-    spec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                            from.spec_);
-  }
-  image_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  if (from.image_input().size() > 0) {
-    image_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                   from.image_input_);
-  }
-  image_widths_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  if (from.image_widths().size() > 0) {
-    image_widths_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                    from.image_widths_);
-  }
-  image_heights_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  if (from.image_heights().size() > 0) {
-    image_heights_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                     from.image_heights_);
-  }
-  output_layer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  if (from.output_layer().size() > 0) {
-    output_layer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                    from.output_layer_);
-  }
-  if (from.has_graph()) {
-    graph_ = new ::tensorflow::GraphDef(*from.graph_);
-  } else {
-    graph_ = NULL;
-  }
-  ::memcpy(&global_step_, &from.global_step_,
-           static_cast<size_t>(reinterpret_cast<char *>(&using_ctc_) -
-                               reinterpret_cast<char *>(&global_step_)) +
-               sizeof(using_ctc_));
-  // @@protoc_insertion_point(copy_constructor:tesseract.TFNetworkModel)
-}
-
-void TFNetworkModel::SharedCtor() {
-  spec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_widths_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_heights_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  output_layer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  ::memset(&graph_, 0,
-           static_cast<size_t>(reinterpret_cast<char *>(&using_ctc_) -
-                               reinterpret_cast<char *>(&graph_)) +
-               sizeof(using_ctc_));
-}
-
-TFNetworkModel::~TFNetworkModel() {
-  // @@protoc_insertion_point(destructor:tesseract.TFNetworkModel)
-  SharedDtor();
-}
-
-void TFNetworkModel::SharedDtor() {
-  spec_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_widths_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_heights_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  output_layer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  if (this != internal_default_instance())
-    delete graph_;
-}
-
-void TFNetworkModel::SetCachedSize(int size) const {
-  _cached_size_.Set(size);
-}
-const ::google::protobuf::Descriptor *TFNetworkModel::descriptor() {
-  ::protobuf_tfnetwork_2eproto::protobuf_AssignDescriptorsOnce();
-  return ::protobuf_tfnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
-}
-
-const TFNetworkModel &TFNetworkModel::default_instance() {
-  ::google::protobuf::internal::InitSCC(&protobuf_tfnetwork_2eproto::scc_info_TFNetworkModel.base);
-  return *internal_default_instance();
-}
-
-void TFNetworkModel::Clear() {
-  // @@protoc_insertion_point(message_clear_start:tesseract.TFNetworkModel)
-  ::google::protobuf::uint32 cached_has_bits = 0;
-  // Prevent compiler warnings about cached_has_bits being unused
-  (void)cached_has_bits;
-
-  spec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_widths_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  image_heights_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  output_layer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {
-    delete graph_;
-  }
-  graph_ = NULL;
-  ::memset(&global_step_, 0,
-           static_cast<size_t>(reinterpret_cast<char *>(&using_ctc_) -
-                               reinterpret_cast<char *>(&global_step_)) +
-               sizeof(using_ctc_));
-  _internal_metadata_.Clear();
-}
-
-bool TFNetworkModel::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream *input) {
-#define DO_(EXPRESSION)                 \
-  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \
-  goto failure
-  ::google::protobuf::uint32 tag;
-  // @@protoc_insertion_point(parse_start:tesseract.TFNetworkModel)
-  for (;;) {
-    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
-    tag = p.first;
-    if (!p.second)
-      goto handle_unusual;
-    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
-      // .tensorflow.GraphDef graph = 1;
-      case 1: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
-          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, mutable_graph()));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // int64 global_step = 2;
-      case 2: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
-          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
-               ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
-              input, &global_step_)));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // string spec = 3;
-      case 3: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
-          DO_(::google::protobuf::internal::WireFormatLite::ReadString(input,
-                                                                       this->mutable_spec()));
-          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-              this->spec().data(), static_cast<int>(this->spec().length()),
-              ::google::protobuf::internal::WireFormatLite::PARSE,
-              ""tesseract.TFNetworkModel.spec""));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // int32 depth = 4;
-      case 4: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
-          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
-               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
-              input, &depth_)));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // int32 x_size = 5;
-      case 5: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
-          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
-               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
-              input, &x_size_)));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // int32 y_size = 6;
-      case 6: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
-          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
-               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
-              input, &y_size_)));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // int32 batch_size = 8;
-      case 8: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
-          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
-               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
-              input, &batch_size_)));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // int32 num_classes = 9;
-      case 9: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
-          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
-               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
-              input, &num_classes_)));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // bool using_ctc = 10;
-      case 10: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
-          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
-               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(input, &using_ctc_)));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // string image_input = 11;
-      case 11: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
-          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
-              input, this->mutable_image_input()));
-          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-              this->image_input().data(), static_cast<int>(this->image_input().length()),
-              ::google::protobuf::internal::WireFormatLite::PARSE,
-              ""tesseract.TFNetworkModel.image_input""));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // string image_widths = 12;
-      case 12: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
-          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
-              input, this->mutable_image_widths()));
-          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-              this->image_widths().data(), static_cast<int>(this->image_widths().length()),
-              ::google::protobuf::internal::WireFormatLite::PARSE,
-              ""tesseract.TFNetworkModel.image_widths""));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // string image_heights = 13;
-      case 13: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
-          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
-              input, this->mutable_image_heights()));
-          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-              this->image_heights().data(), static_cast<int>(this->image_heights().length()),
-              ::google::protobuf::internal::WireFormatLite::PARSE,
-              ""tesseract.TFNetworkModel.image_heights""));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      // string output_layer = 14;
-      case 14: {
-        if (static_cast<::google::protobuf::uint8>(tag) ==
-            static_cast<::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
-          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
-              input, this->mutable_output_layer()));
-          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-              this->output_layer().data(), static_cast<int>(this->output_layer().length()),
-              ::google::protobuf::internal::WireFormatLite::PARSE,
-              ""tesseract.TFNetworkModel.output_layer""));
-        } else {
-          goto handle_unusual;
-        }
-        break;
-      }
-
-      default: {
-      handle_unusual:
-        if (tag == 0) {
-          goto success;
-        }
-        DO_(::google::protobuf::internal::WireFormat::SkipField(
-            input, tag, _internal_metadata_.mutable_unknown_fields()));
-        break;
-      }
-    }
-  }
-success:
-  // @@protoc_insertion_point(parse_success:tesseract.TFNetworkModel)
-  return true;
-failure:
-  // @@protoc_insertion_point(parse_failure:tesseract.TFNetworkModel)
-  return false;
-#undef DO_
-}
-
-void TFNetworkModel::SerializeWithCachedSizes(
-    ::google::protobuf::io::CodedOutputStream *output) const {
-  // @@protoc_insertion_point(serialize_start:tesseract.TFNetworkModel)
-  ::google::protobuf::uint32 cached_has_bits = 0;
-  (void)cached_has_bits;
-
-  // .tensorflow.GraphDef graph = 1;
-  if (this->has_graph()) {
-    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
-        1, this->_internal_graph(), output);
-  }
-
-  // int64 global_step = 2;
-  if (this->global_step() != 0) {
-    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->global_step(), output);
-  }
-
-  // string spec = 3;
-  if (this->spec().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->spec().data(), static_cast<int>(this->spec().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE, ""tesseract.TFNetworkModel.spec"");
-    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, this->spec(), output);
-  }
-
-  // int32 depth = 4;
-  if (this->depth() != 0) {
-    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->depth(), output);
-  }
-
-  // int32 x_size = 5;
-  if (this->x_size() != 0) {
-    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->x_size(), output);
-  }
-
-  // int32 y_size = 6;
-  if (this->y_size() != 0) {
-    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->y_size(), output);
-  }
-
-  // int32 batch_size = 8;
-  if (this->batch_size() != 0) {
-    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->batch_size(), output);
-  }
-
-  // int32 num_classes = 9;
-  if (this->num_classes() != 0) {
-    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_classes(), output);
-  }
-
-  // bool using_ctc = 10;
-  if (this->using_ctc() != 0) {
-    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->using_ctc(), output);
-  }
-
-  // string image_input = 11;
-  if (this->image_input().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->image_input().data(), static_cast<int>(this->image_input().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
-        ""tesseract.TFNetworkModel.image_input"");
-    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(11, this->image_input(),
-                                                                          output);
-  }
-
-  // string image_widths = 12;
-  if (this->image_widths().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->image_widths().data(), static_cast<int>(this->image_widths().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
-        ""tesseract.TFNetworkModel.image_widths"");
-    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(12, this->image_widths(),
-                                                                          output);
-  }
-
-  // string image_heights = 13;
-  if (this->image_heights().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->image_heights().data(), static_cast<int>(this->image_heights().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
-        ""tesseract.TFNetworkModel.image_heights"");
-    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(13, this->image_heights(),
-                                                                          output);
-  }
-
-  // string output_layer = 14;
-  if (this->output_layer().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->output_layer().data(), static_cast<int>(this->output_layer().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
-        ""tesseract.TFNetworkModel.output_layer"");
-    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(14, this->output_layer(),
-                                                                          output);
-  }
-
-  if ((_internal_metadata_.have_unknown_fields() &&
-       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
-    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
-        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
-             ? _internal_metadata_.unknown_fields()
-             : _internal_metadata_.default_instance()),
-        output);
-  }
-  // @@protoc_insertion_point(serialize_end:tesseract.TFNetworkModel)
-}
-
-::google::protobuf::uint8 *TFNetworkModel::InternalSerializeWithCachedSizesToArray(
-    bool deterministic, ::google::protobuf::uint8 *target) const {
-  (void)deterministic; // Unused
-  // @@protoc_insertion_point(serialize_to_array_start:tesseract.TFNetworkModel)
-  ::google::protobuf::uint32 cached_has_bits = 0;
-  (void)cached_has_bits;
-
-  // .tensorflow.GraphDef graph = 1;
-  if (this->has_graph()) {
-    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray(
-        1, this->_internal_graph(), deterministic, target);
-  }
-
-  // int64 global_step = 2;
-  if (this->global_step() != 0) {
-    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->global_step(),
-                                                                             target);
-  }
-
-  // string spec = 3;
-  if (this->spec().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->spec().data(), static_cast<int>(this->spec().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE, ""tesseract.TFNetworkModel.spec"");
-    target =
-        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(3, this->spec(), target);
-  }
-
-  // int32 depth = 4;
-  if (this->depth() != 0) {
-    target =
-        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->depth(), target);
-  }
-
-  // int32 x_size = 5;
-  if (this->x_size() != 0) {
-    target =
-        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->x_size(), target);
-  }
-
-  // int32 y_size = 6;
-  if (this->y_size() != 0) {
-    target =
-        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->y_size(), target);
-  }
-
-  // int32 batch_size = 8;
-  if (this->batch_size() != 0) {
-    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->batch_size(),
-                                                                             target);
-  }
-
-  // int32 num_classes = 9;
-  if (this->num_classes() != 0) {
-    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->num_classes(),
-                                                                             target);
-  }
-
-  // bool using_ctc = 10;
-  if (this->using_ctc() != 0) {
-    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->using_ctc(),
-                                                                            target);
-  }
-
-  // string image_input = 11;
-  if (this->image_input().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->image_input().data(), static_cast<int>(this->image_input().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
-        ""tesseract.TFNetworkModel.image_input"");
-    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
-        11, this->image_input(), target);
-  }
-
-  // string image_widths = 12;
-  if (this->image_widths().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->image_widths().data(), static_cast<int>(this->image_widths().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
-        ""tesseract.TFNetworkModel.image_widths"");
-    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
-        12, this->image_widths(), target);
-  }
-
-  // string image_heights = 13;
-  if (this->image_heights().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->image_heights().data(), static_cast<int>(this->image_heights().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
-        ""tesseract.TFNetworkModel.image_heights"");
-    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
-        13, this->image_heights(), target);
-  }
-
-  // string output_layer = 14;
-  if (this->output_layer().size() > 0) {
-    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
-        this->output_layer().data(), static_cast<int>(this->output_layer().length()),
-        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
-        ""tesseract.TFNetworkModel.output_layer"");
-    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
-        14, this->output_layer(), target);
-  }
-
-  if ((_internal_metadata_.have_unknown_fields() &&
-       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
-    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
-        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
-             ? _internal_metadata_.unknown_fields()
-             : _internal_metadata_.default_instance()),
-        target);
-  }
-  // @@protoc_insertion_point(serialize_to_array_end:tesseract.TFNetworkModel)
-  return target;
-}
-
-size_t TFNetworkModel::ByteSizeLong() const {
-  // @@protoc_insertion_point(message_byte_size_start:tesseract.TFNetworkModel)
-  size_t total_size = 0;
-
-  if ((_internal_metadata_.have_unknown_fields() &&
-       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
-    total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
-        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
-             ? _internal_metadata_.unknown_fields()
-             : _internal_metadata_.default_instance()));
-  }
-  // string spec = 3;
-  if (this->spec().size() > 0) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->spec());
-  }
-
-  // string image_input = 11;
-  if (this->image_input().size() > 0) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->image_input());
-  }
-
-  // string image_widths = 12;
-  if (this->image_widths().size() > 0) {
-    total_size +=
-        1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->image_widths());
-  }
-
-  // string image_heights = 13;
-  if (this->image_heights().size() > 0) {
-    total_size +=
-        1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->image_heights());
-  }
-
-  // string output_layer = 14;
-  if (this->output_layer().size() > 0) {
-    total_size +=
-        1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->output_layer());
-  }
-
-  // .tensorflow.GraphDef graph = 1;
-  if (this->has_graph()) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*graph_);
-  }
-
-  // int64 global_step = 2;
-  if (this->global_step() != 0) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->global_step());
-  }
-
-  // int32 depth = 4;
-  if (this->depth() != 0) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->depth());
-  }
-
-  // int32 x_size = 5;
-  if (this->x_size() != 0) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->x_size());
-  }
-
-  // int32 y_size = 6;
-  if (this->y_size() != 0) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->y_size());
-  }
-
-  // int32 batch_size = 8;
-  if (this->batch_size() != 0) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->batch_size());
-  }
-
-  // int32 num_classes = 9;
-  if (this->num_classes() != 0) {
-    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_classes());
-  }
-
-  // bool using_ctc = 10;
-  if (this->using_ctc() != 0) {
-    total_size += 1 + 1;
-  }
-
-  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
-  SetCachedSize(cached_size);
-  return total_size;
-}
-
-void TFNetworkModel::MergeFrom(const ::google::protobuf::Message &from) {
-  // @@protoc_insertion_point(generalized_merge_from_start:tesseract.TFNetworkModel)
-  GOOGLE_DCHECK_NE(&from, this);
-  const TFNetworkModel *source =
-      ::google::protobuf::internal::DynamicCastToGenerated<const TFNetworkModel>(&from);
-  if (source == NULL) {
-    // @@protoc_insertion_point(generalized_merge_from_cast_fail:tesseract.TFNetworkModel)
-    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
-  } else {
-    // @@protoc_insertion_point(generalized_merge_from_cast_success:tesseract.TFNetworkModel)
-    MergeFrom(*source);
-  }
-}
-
-void TFNetworkModel::MergeFrom(const TFNetworkModel &from) {
-  // @@protoc_insertion_point(class_specific_merge_from_start:tesseract.TFNetworkModel)
-  GOOGLE_DCHECK_NE(&from, this);
-  _internal_metadata_.MergeFrom(from._internal_metadata_);
-  ::google::protobuf::uint32 cached_has_bits = 0;
-  (void)cached_has_bits;
-
-  if (from.spec().size() > 0) {
-    spec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                            from.spec_);
-  }
-  if (from.image_input().size() > 0) {
-    image_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                   from.image_input_);
-  }
-  if (from.image_widths().size() > 0) {
-    image_widths_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                    from.image_widths_);
-  }
-  if (from.image_heights().size() > 0) {
-    image_heights_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                     from.image_heights_);
-  }
-  if (from.output_layer().size() > 0) {
-    output_layer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                    from.output_layer_);
-  }
-  if (from.has_graph()) {
-    mutable_graph()->::tensorflow::GraphDef::MergeFrom(from.graph());
-  }
-  if (from.global_step() != 0) {
-    set_global_step(from.global_step());
-  }
-  if (from.depth() != 0) {
-    set_depth(from.depth());
-  }
-  if (from.x_size() != 0) {
-    set_x_size(from.x_size());
-  }
-  if (from.y_size() != 0) {
-    set_y_size(from.y_size());
-  }
-  if (from.batch_size() != 0) {
-    set_batch_size(from.batch_size());
-  }
-  if (from.num_classes() != 0) {
-    set_num_classes(from.num_classes());
-  }
-  if (from.using_ctc() != 0) {
-    set_using_ctc(from.using_ctc());
-  }
-}
-
-void TFNetworkModel::CopyFrom(const ::google::protobuf::Message &from) {
-  // @@protoc_insertion_point(generalized_copy_from_start:tesseract.TFNetworkModel)
-  if (&from == this)
-    return;
-  Clear();
-  MergeFrom(from);
-}
-
-void TFNetworkModel::CopyFrom(const TFNetworkModel &from) {
-  // @@protoc_insertion_point(class_specific_copy_from_start:tesseract.TFNetworkModel)
-  if (&from == this)
-    return;
-  Clear();
-  MergeFrom(from);
-}
-
-bool TFNetworkModel::IsInitialized() const {
-  return true;
-}
-
-void TFNetworkModel::Swap(TFNetworkModel *other) {
-  if (other == this)
-    return;
-  InternalSwap(other);
-}
-void TFNetworkModel::InternalSwap(TFNetworkModel *other) {
-  using std::swap;
-  spec_.Swap(&other->spec_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-             GetArenaNoVirtual());
-  image_input_.Swap(&other->image_input_,
-                    &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                    GetArenaNoVirtual());
-  image_widths_.Swap(&other->image_widths_,
-                     &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                     GetArenaNoVirtual());
-  image_heights_.Swap(&other->image_heights_,
-                      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                      GetArenaNoVirtual());
-  output_layer_.Swap(&other->output_layer_,
-                     &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                     GetArenaNoVirtual());
-  swap(graph_, other->graph_);
-  swap(global_step_, other->global_step_);
-  swap(depth_, other->depth_);
-  swap(x_size_, other->x_size_);
-  swap(y_size_, other->y_size_);
-  swap(batch_size_, other->batch_size_);
-  swap(num_classes_, other->num_classes_);
-  swap(using_ctc_, other->using_ctc_);
-  _internal_metadata_.Swap(&other->_internal_metadata_);
-}
-
-::google::protobuf::Metadata TFNetworkModel::GetMetadata() const {
-  protobuf_tfnetwork_2eproto::protobuf_AssignDescriptorsOnce();
-  return ::protobuf_tfnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
-}
-
-// @@protoc_insertion_point(namespace_scope)
-} // namespace tesseract
-namespace google {
-namespace protobuf {
-template <>
-GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tesseract::TFNetworkModel *
-Arena::CreateMaybeMessage<::tesseract::TFNetworkModel>(Arena *arena) {
-  return Arena::CreateInternal<::tesseract::TFNetworkModel>(arena);
-}
-} // namespace protobuf
-} // namespace google
-
-// @@protoc_insertion_point(global_scope)
","{'added': [], 'deleted': [(1, '// Generated by the protocol buffer compiler.  DO NOT EDIT!'), (2, '// source: tfnetwork.proto'), (3, ''), (4, '#include ""tfnetwork.pb.h""'), (5, ''), (6, '#include <algorithm>'), (7, ''), (8, '#include <google/protobuf/descriptor.h>'), (9, '#include <google/protobuf/generated_message_reflection.h>'), (10, '#include <google/protobuf/io/coded_stream.h>'), (11, '#include <google/protobuf/reflection_ops.h>'), (12, '#include <google/protobuf/stubs/common.h>'), (13, '#include <google/protobuf/stubs/port.h>'), (14, '#include <google/protobuf/wire_format.h>'), (15, '#include <google/protobuf/wire_format_lite_inl.h>'), (16, '// This is a temporary google only hack'), (17, '#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS'), (18, '#  include ""third_party/protobuf/version.h""'), (19, '#endif'), (20, '// @@protoc_insertion_point(includes)'), (21, ''), (22, 'namespace protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto {'), (23, 'extern PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto ::google::'), (24, '    protobuf::internal::SCCInfo<3>'), (25, '        scc_info_GraphDef;'), (26, '} // namespace protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto'), (27, 'namespace tesseract {'), (28, 'class TFNetworkModelDefaultTypeInternal {'), (29, 'public:'), (30, '  ::google::protobuf::internal::ExplicitlyConstructed<TFNetworkModel> _instance;'), (31, '} _TFNetworkModel_default_instance_;'), (32, '} // namespace tesseract'), (33, 'namespace protobuf_tfnetwork_2eproto {'), (34, 'static void InitDefaultsTFNetworkModel() {'), (35, '  GOOGLE_PROTOBUF_VERIFY_VERSION;'), (36, ''), (37, '  {'), (38, '    void *ptr = &::tesseract::_TFNetworkModel_default_instance_;'), (39, '    new (ptr)::tesseract::TFNetworkModel();'), (40, '    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);'), (41, '  }'), (42, '  ::tesseract::TFNetworkModel::InitAsDefaultInstance();'), (43, '}'), (44, ''), (45, '::google::protobuf::internal::SCCInfo<1> scc_info_TFNetworkModel = {'), (46, '    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1,'), (47, '     InitDefaultsTFNetworkModel},'), (48, '    {'), (49, '        &protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::scc_info_GraphDef.base,'), (50, '    }};'), (51, ''), (52, 'void InitDefaults() {'), (53, '  ::google::protobuf::internal::InitSCC(&scc_info_TFNetworkModel.base);'), (54, '}'), (55, ''), (56, '::google::protobuf::Metadata file_level_metadata[1];'), (57, ''), (58, 'const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE('), (59, '    protodesc_cold) = {'), (60, '    ~0u, // no _has_bits_'), (61, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel,'), (62, '                                                   _internal_metadata_),'), (63, '    ~0u, // no _extensions_'), (64, '    ~0u, // no _oneof_case_'), (65, '    ~0u, // no _weak_field_map_'), (66, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, graph_),'), (67, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, global_step_),'), (68, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, spec_),'), (69, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, depth_),'), (70, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, x_size_),'), (71, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, y_size_),'), (72, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, batch_size_),'), (73, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, num_classes_),'), (74, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, using_ctc_),'), (75, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, image_input_),'), (76, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, image_widths_),'), (77, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, image_heights_),'), (78, '    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tesseract::TFNetworkModel, output_layer_),'), (79, '};'), (80, 'static const ::google::protobuf::internal::MigrationSchema'), (81, '    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {'), (82, '        {0, -1, sizeof(::tesseract::TFNetworkModel)},'), (83, '};'), (84, ''), (85, 'static ::google::protobuf::Message const *const file_default_instances[] = {'), (86, '    reinterpret_cast<const ::google::protobuf::Message *>('), (87, '        &::tesseract::_TFNetworkModel_default_instance_),'), (88, '};'), (89, ''), (90, 'void protobuf_AssignDescriptors() {'), (91, '  AddDescriptors();'), (92, '  AssignDescriptors(""tfnetwork.proto"", schemas, file_default_instances, TableStruct::offsets,'), (93, '                    file_level_metadata, NULL, NULL);'), (94, '}'), (95, ''), (96, 'void protobuf_AssignDescriptorsOnce() {'), (97, '  static ::google::protobuf::internal::once_flag once;'), (98, '  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);'), (99, '}'), (100, ''), (101, 'void protobuf_RegisterTypes(const ::std::string &) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;'), (102, 'void protobuf_RegisterTypes(const ::std::string &) {'), (103, '  protobuf_AssignDescriptorsOnce();'), (104, '  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);'), (105, '}'), (106, ''), (107, 'void AddDescriptorsImpl() {'), (108, '  InitDefaults();'), (109, '  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {'), (110, '      ""\\n\\017tfnetwork.proto\\022\\ttesseract\\032%tensorflow""'), (111, '      ""/core/framework/graph.proto\\""\\233\\002\\n\\016TFNetwor""'), (112, '      ""kModel\\022#\\n\\005graph\\030\\001 \\001(\\0132\\024.tensorflow.Graph""'), (113, '      ""Def\\022\\023\\n\\013global_step\\030\\002 \\001(\\003\\022\\014\\n\\004spec\\030\\003 \\001(\\t\\022\\r""'), (114, '      ""\\n\\005depth\\030\\004 \\001(\\005\\022\\016\\n\\006x_size\\030\\005 \\001(\\005\\022\\016\\n\\006y_size\\030""'), (115, '      ""\\006 \\001(\\005\\022\\022\\n\\nbatch_size\\030\\010 \\001(\\005\\022\\023\\n\\013num_classes""'), (116, '      ""\\030\\t \\001(\\005\\022\\021\\n\\tusing_ctc\\030\\n \\001(\\010\\022\\023\\n\\013image_input""'), (117, '      ""\\030\\013 \\001(\\t\\022\\024\\n\\014image_widths\\030\\014 \\001(\\t\\022\\025\\n\\rimage_he""'), (118, '      ""ights\\030\\r \\001(\\t\\022\\024\\n\\014output_layer\\030\\016 \\001(\\tb\\006proto""'), (119, '      ""3""};'), (120, '  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 361);'), (121, '  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(""tfnetwork.proto"",'), (122, '                                                                    &protobuf_RegisterTypes);'), (123, '  ::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::AddDescriptors();'), (124, '}'), (125, ''), (126, 'void AddDescriptors() {'), (127, '  static ::google::protobuf::internal::once_flag once;'), (128, '  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);'), (129, '}'), (130, '// Force AddDescriptors() to be called at dynamic initialization time.'), (131, 'struct StaticDescriptorInitializer {'), (132, '  StaticDescriptorInitializer() {'), (133, '    AddDescriptors();'), (134, '  }'), (135, '} static_descriptor_initializer;'), (136, '} // namespace protobuf_tfnetwork_2eproto'), (137, 'namespace tesseract {'), (138, ''), (139, '// ==================================================================='), (140, ''), (141, 'void TFNetworkModel::InitAsDefaultInstance() {'), (142, '  ::tesseract::_TFNetworkModel_default_instance_._instance.get_mutable()->graph_ ='), (143, '      const_cast<::tensorflow::GraphDef *>(::tensorflow::GraphDef::internal_default_instance());'), (144, '}'), (145, 'void TFNetworkModel::clear_graph() {'), (146, '  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {'), (147, '    delete graph_;'), (148, '  }'), (149, '  graph_ = NULL;'), (150, '}'), (151, '#if !defined(_MSC_VER) || _MSC_VER >= 1900'), (152, 'const int TFNetworkModel::kGraphFieldNumber;'), (153, 'const int TFNetworkModel::kGlobalStepFieldNumber;'), (154, 'const int TFNetworkModel::kSpecFieldNumber;'), (155, 'const int TFNetworkModel::kDepthFieldNumber;'), (156, 'const int TFNetworkModel::kXSizeFieldNumber;'), (157, 'const int TFNetworkModel::kYSizeFieldNumber;'), (158, 'const int TFNetworkModel::kBatchSizeFieldNumber;'), (159, 'const int TFNetworkModel::kNumClassesFieldNumber;'), (160, 'const int TFNetworkModel::kUsingCtcFieldNumber;'), (161, 'const int TFNetworkModel::kImageInputFieldNumber;'), (162, 'const int TFNetworkModel::kImageWidthsFieldNumber;'), (163, 'const int TFNetworkModel::kImageHeightsFieldNumber;'), (164, 'const int TFNetworkModel::kOutputLayerFieldNumber;'), (165, '#endif // !defined(_MSC_VER) || _MSC_VER >= 1900'), (166, ''), (167, 'TFNetworkModel::TFNetworkModel() : ::google::protobuf::Message(), _internal_metadata_(NULL) {'), (168, '  ::google::protobuf::internal::InitSCC(&protobuf_tfnetwork_2eproto::scc_info_TFNetworkModel.base);'), (169, '  SharedCtor();'), (170, '  // @@protoc_insertion_point(constructor:tesseract.TFNetworkModel)'), (171, '}'), (172, 'TFNetworkModel::TFNetworkModel(const TFNetworkModel &from)'), (173, '    : ::google::protobuf::Message(), _internal_metadata_(NULL) {'), (174, '  _internal_metadata_.MergeFrom(from._internal_metadata_);'), (175, '  spec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (176, '  if (from.spec().size() > 0) {'), (177, '    spec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (178, '                            from.spec_);'), (179, '  }'), (180, '  image_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (181, '  if (from.image_input().size() > 0) {'), (182, '    image_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (183, '                                   from.image_input_);'), (184, '  }'), (185, '  image_widths_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (186, '  if (from.image_widths().size() > 0) {'), (187, '    image_widths_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (188, '                                    from.image_widths_);'), (189, '  }'), (190, '  image_heights_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (191, '  if (from.image_heights().size() > 0) {'), (192, '    image_heights_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (193, '                                     from.image_heights_);'), (194, '  }'), (195, '  output_layer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (196, '  if (from.output_layer().size() > 0) {'), (197, '    output_layer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (198, '                                    from.output_layer_);'), (199, '  }'), (200, '  if (from.has_graph()) {'), (201, '    graph_ = new ::tensorflow::GraphDef(*from.graph_);'), (202, '  } else {'), (203, '    graph_ = NULL;'), (204, '  }'), (205, '  ::memcpy(&global_step_, &from.global_step_,'), (206, '           static_cast<size_t>(reinterpret_cast<char *>(&using_ctc_) -'), (207, '                               reinterpret_cast<char *>(&global_step_)) +'), (208, '               sizeof(using_ctc_));'), (209, '  // @@protoc_insertion_point(copy_constructor:tesseract.TFNetworkModel)'), (210, '}'), (211, ''), (212, 'void TFNetworkModel::SharedCtor() {'), (213, '  spec_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (214, '  image_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (215, '  image_widths_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (216, '  image_heights_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (217, '  output_layer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (218, '  ::memset(&graph_, 0,'), (219, '           static_cast<size_t>(reinterpret_cast<char *>(&using_ctc_) -'), (220, '                               reinterpret_cast<char *>(&graph_)) +'), (221, '               sizeof(using_ctc_));'), (222, '}'), (223, ''), (224, 'TFNetworkModel::~TFNetworkModel() {'), (225, '  // @@protoc_insertion_point(destructor:tesseract.TFNetworkModel)'), (226, '  SharedDtor();'), (227, '}'), (228, ''), (229, 'void TFNetworkModel::SharedDtor() {'), (230, '  spec_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (231, '  image_input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (232, '  image_widths_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (233, '  image_heights_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (234, '  output_layer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (235, '  if (this != internal_default_instance())'), (236, '    delete graph_;'), (237, '}'), (238, ''), (239, 'void TFNetworkModel::SetCachedSize(int size) const {'), (240, '  _cached_size_.Set(size);'), (241, '}'), (242, 'const ::google::protobuf::Descriptor *TFNetworkModel::descriptor() {'), (243, '  ::protobuf_tfnetwork_2eproto::protobuf_AssignDescriptorsOnce();'), (244, '  return ::protobuf_tfnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;'), (245, '}'), (246, ''), (247, 'const TFNetworkModel &TFNetworkModel::default_instance() {'), (248, '  ::google::protobuf::internal::InitSCC(&protobuf_tfnetwork_2eproto::scc_info_TFNetworkModel.base);'), (249, '  return *internal_default_instance();'), (250, '}'), (251, ''), (252, 'void TFNetworkModel::Clear() {'), (253, '  // @@protoc_insertion_point(message_clear_start:tesseract.TFNetworkModel)'), (254, '  ::google::protobuf::uint32 cached_has_bits = 0;'), (255, '  // Prevent compiler warnings about cached_has_bits being unused'), (256, '  (void)cached_has_bits;'), (257, ''), (258, '  spec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (259, '  image_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (260, '  image_widths_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (261, '  image_heights_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (262, '  output_layer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (263, '  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {'), (264, '    delete graph_;'), (265, '  }'), (266, '  graph_ = NULL;'), (267, '  ::memset(&global_step_, 0,'), (268, '           static_cast<size_t>(reinterpret_cast<char *>(&using_ctc_) -'), (269, '                               reinterpret_cast<char *>(&global_step_)) +'), (270, '               sizeof(using_ctc_));'), (271, '  _internal_metadata_.Clear();'), (272, '}'), (273, ''), (274, 'bool TFNetworkModel::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream *input) {'), (275, '#define DO_(EXPRESSION)                 \\'), (276, '  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) \\'), (277, '  goto failure'), (278, '  ::google::protobuf::uint32 tag;'), (279, '  // @@protoc_insertion_point(parse_start:tesseract.TFNetworkModel)'), (280, '  for (;;) {'), (281, '    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);'), (282, '    tag = p.first;'), (283, '    if (!p.second)'), (284, '      goto handle_unusual;'), (285, '    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {'), (286, '      // .tensorflow.GraphDef graph = 1;'), (287, '      case 1: {'), (288, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (289, '            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {'), (290, '          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, mutable_graph()));'), (291, '        } else {'), (292, '          goto handle_unusual;'), (293, '        }'), (294, '        break;'), (295, '      }'), (296, ''), (297, '      // int64 global_step = 2;'), (298, '      case 2: {'), (299, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (300, '            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {'), (301, '          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<'), (302, '               ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>('), (303, '              input, &global_step_)));'), (304, '        } else {'), (305, '          goto handle_unusual;'), (306, '        }'), (307, '        break;'), (308, '      }'), (309, ''), (310, '      // string spec = 3;'), (311, '      case 3: {'), (312, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (313, '            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {'), (314, '          DO_(::google::protobuf::internal::WireFormatLite::ReadString(input,'), (315, '                                                                       this->mutable_spec()));'), (316, '          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (317, '              this->spec().data(), static_cast<int>(this->spec().length()),'), (318, '              ::google::protobuf::internal::WireFormatLite::PARSE,'), (319, '              ""tesseract.TFNetworkModel.spec""));'), (320, '        } else {'), (321, '          goto handle_unusual;'), (322, '        }'), (323, '        break;'), (324, '      }'), (325, ''), (326, '      // int32 depth = 4;'), (327, '      case 4: {'), (328, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (329, '            static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {'), (330, '          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<'), (331, '               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>('), (332, '              input, &depth_)));'), (333, '        } else {'), (334, '          goto handle_unusual;'), (335, '        }'), (336, '        break;'), (337, '      }'), (338, ''), (339, '      // int32 x_size = 5;'), (340, '      case 5: {'), (341, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (342, '            static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {'), (343, '          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<'), (344, '               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>('), (345, '              input, &x_size_)));'), (346, '        } else {'), (347, '          goto handle_unusual;'), (348, '        }'), (349, '        break;'), (350, '      }'), (351, ''), (352, '      // int32 y_size = 6;'), (353, '      case 6: {'), (354, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (355, '            static_cast<::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {'), (356, '          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<'), (357, '               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>('), (358, '              input, &y_size_)));'), (359, '        } else {'), (360, '          goto handle_unusual;'), (361, '        }'), (362, '        break;'), (363, '      }'), (364, ''), (365, '      // int32 batch_size = 8;'), (366, '      case 8: {'), (367, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (368, '            static_cast<::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {'), (369, '          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<'), (370, '               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>('), (371, '              input, &batch_size_)));'), (372, '        } else {'), (373, '          goto handle_unusual;'), (374, '        }'), (375, '        break;'), (376, '      }'), (377, ''), (378, '      // int32 num_classes = 9;'), (379, '      case 9: {'), (380, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (381, '            static_cast<::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {'), (382, '          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<'), (383, '               ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>('), (384, '              input, &num_classes_)));'), (385, '        } else {'), (386, '          goto handle_unusual;'), (387, '        }'), (388, '        break;'), (389, '      }'), (390, ''), (391, '      // bool using_ctc = 10;'), (392, '      case 10: {'), (393, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (394, '            static_cast<::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {'), (395, '          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<'), (396, '               bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(input, &using_ctc_)));'), (397, '        } else {'), (398, '          goto handle_unusual;'), (399, '        }'), (400, '        break;'), (401, '      }'), (402, ''), (403, '      // string image_input = 11;'), (404, '      case 11: {'), (405, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (406, '            static_cast<::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {'), (407, '          DO_(::google::protobuf::internal::WireFormatLite::ReadString('), (408, '              input, this->mutable_image_input()));'), (409, '          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (410, '              this->image_input().data(), static_cast<int>(this->image_input().length()),'), (411, '              ::google::protobuf::internal::WireFormatLite::PARSE,'), (412, '              ""tesseract.TFNetworkModel.image_input""));'), (413, '        } else {'), (414, '          goto handle_unusual;'), (415, '        }'), (416, '        break;'), (417, '      }'), (418, ''), (419, '      // string image_widths = 12;'), (420, '      case 12: {'), (421, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (422, '            static_cast<::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {'), (423, '          DO_(::google::protobuf::internal::WireFormatLite::ReadString('), (424, '              input, this->mutable_image_widths()));'), (425, '          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (426, '              this->image_widths().data(), static_cast<int>(this->image_widths().length()),'), (427, '              ::google::protobuf::internal::WireFormatLite::PARSE,'), (428, '              ""tesseract.TFNetworkModel.image_widths""));'), (429, '        } else {'), (430, '          goto handle_unusual;'), (431, '        }'), (432, '        break;'), (433, '      }'), (434, ''), (435, '      // string image_heights = 13;'), (436, '      case 13: {'), (437, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (438, '            static_cast<::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {'), (439, '          DO_(::google::protobuf::internal::WireFormatLite::ReadString('), (440, '              input, this->mutable_image_heights()));'), (441, '          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (442, '              this->image_heights().data(), static_cast<int>(this->image_heights().length()),'), (443, '              ::google::protobuf::internal::WireFormatLite::PARSE,'), (444, '              ""tesseract.TFNetworkModel.image_heights""));'), (445, '        } else {'), (446, '          goto handle_unusual;'), (447, '        }'), (448, '        break;'), (449, '      }'), (450, ''), (451, '      // string output_layer = 14;'), (452, '      case 14: {'), (453, '        if (static_cast<::google::protobuf::uint8>(tag) =='), (454, '            static_cast<::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {'), (455, '          DO_(::google::protobuf::internal::WireFormatLite::ReadString('), (456, '              input, this->mutable_output_layer()));'), (457, '          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (458, '              this->output_layer().data(), static_cast<int>(this->output_layer().length()),'), (459, '              ::google::protobuf::internal::WireFormatLite::PARSE,'), (460, '              ""tesseract.TFNetworkModel.output_layer""));'), (461, '        } else {'), (462, '          goto handle_unusual;'), (463, '        }'), (464, '        break;'), (465, '      }'), (466, ''), (467, '      default: {'), (468, '      handle_unusual:'), (469, '        if (tag == 0) {'), (470, '          goto success;'), (471, '        }'), (472, '        DO_(::google::protobuf::internal::WireFormat::SkipField('), (473, '            input, tag, _internal_metadata_.mutable_unknown_fields()));'), (474, '        break;'), (475, '      }'), (476, '    }'), (477, '  }'), (478, 'success:'), (479, '  // @@protoc_insertion_point(parse_success:tesseract.TFNetworkModel)'), (480, '  return true;'), (481, 'failure:'), (482, '  // @@protoc_insertion_point(parse_failure:tesseract.TFNetworkModel)'), (483, '  return false;'), (484, '#undef DO_'), (485, '}'), (486, ''), (487, 'void TFNetworkModel::SerializeWithCachedSizes('), (488, '    ::google::protobuf::io::CodedOutputStream *output) const {'), (489, '  // @@protoc_insertion_point(serialize_start:tesseract.TFNetworkModel)'), (490, '  ::google::protobuf::uint32 cached_has_bits = 0;'), (491, '  (void)cached_has_bits;'), (492, ''), (493, '  // .tensorflow.GraphDef graph = 1;'), (494, '  if (this->has_graph()) {'), (495, '    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray('), (496, '        1, this->_internal_graph(), output);'), (497, '  }'), (498, ''), (499, '  // int64 global_step = 2;'), (500, '  if (this->global_step() != 0) {'), (501, '    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->global_step(), output);'), (502, '  }'), (503, ''), (504, '  // string spec = 3;'), (505, '  if (this->spec().size() > 0) {'), (506, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (507, '        this->spec().data(), static_cast<int>(this->spec().length()),'), (508, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE, ""tesseract.TFNetworkModel.spec"");'), (509, '    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, this->spec(), output);'), (510, '  }'), (511, ''), (512, '  // int32 depth = 4;'), (513, '  if (this->depth() != 0) {'), (514, '    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->depth(), output);'), (515, '  }'), (516, ''), (517, '  // int32 x_size = 5;'), (518, '  if (this->x_size() != 0) {'), (519, '    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->x_size(), output);'), (520, '  }'), (521, ''), (522, '  // int32 y_size = 6;'), (523, '  if (this->y_size() != 0) {'), (524, '    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->y_size(), output);'), (525, '  }'), (526, ''), (527, '  // int32 batch_size = 8;'), (528, '  if (this->batch_size() != 0) {'), (529, '    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->batch_size(), output);'), (530, '  }'), (531, ''), (532, '  // int32 num_classes = 9;'), (533, '  if (this->num_classes() != 0) {'), (534, '    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_classes(), output);'), (535, '  }'), (536, ''), (537, '  // bool using_ctc = 10;'), (538, '  if (this->using_ctc() != 0) {'), (539, '    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->using_ctc(), output);'), (540, '  }'), (541, ''), (542, '  // string image_input = 11;'), (543, '  if (this->image_input().size() > 0) {'), (544, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (545, '        this->image_input().data(), static_cast<int>(this->image_input().length()),'), (546, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE,'), (547, '        ""tesseract.TFNetworkModel.image_input"");'), (548, '    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(11, this->image_input(),'), (549, '                                                                          output);'), (550, '  }'), (551, ''), (552, '  // string image_widths = 12;'), (553, '  if (this->image_widths().size() > 0) {'), (554, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (555, '        this->image_widths().data(), static_cast<int>(this->image_widths().length()),'), (556, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE,'), (557, '        ""tesseract.TFNetworkModel.image_widths"");'), (558, '    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(12, this->image_widths(),'), (559, '                                                                          output);'), (560, '  }'), (561, ''), (562, '  // string image_heights = 13;'), (563, '  if (this->image_heights().size() > 0) {'), (564, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (565, '        this->image_heights().data(), static_cast<int>(this->image_heights().length()),'), (566, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE,'), (567, '        ""tesseract.TFNetworkModel.image_heights"");'), (568, '    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(13, this->image_heights(),'), (569, '                                                                          output);'), (570, '  }'), (571, ''), (572, '  // string output_layer = 14;'), (573, '  if (this->output_layer().size() > 0) {'), (574, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (575, '        this->output_layer().data(), static_cast<int>(this->output_layer().length()),'), (576, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE,'), (577, '        ""tesseract.TFNetworkModel.output_layer"");'), (578, '    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(14, this->output_layer(),'), (579, '                                                                          output);'), (580, '  }'), (581, ''), (582, '  if ((_internal_metadata_.have_unknown_fields() &&'), (583, '       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {'), (584, '    ::google::protobuf::internal::WireFormat::SerializeUnknownFields('), (585, '        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()'), (586, '             ? _internal_metadata_.unknown_fields()'), (587, '             : _internal_metadata_.default_instance()),'), (588, '        output);'), (589, '  }'), (590, '  // @@protoc_insertion_point(serialize_end:tesseract.TFNetworkModel)'), (591, '}'), (592, ''), (593, '::google::protobuf::uint8 *TFNetworkModel::InternalSerializeWithCachedSizesToArray('), (594, '    bool deterministic, ::google::protobuf::uint8 *target) const {'), (595, '  (void)deterministic; // Unused'), (596, '  // @@protoc_insertion_point(serialize_to_array_start:tesseract.TFNetworkModel)'), (597, '  ::google::protobuf::uint32 cached_has_bits = 0;'), (598, '  (void)cached_has_bits;'), (599, ''), (600, '  // .tensorflow.GraphDef graph = 1;'), (601, '  if (this->has_graph()) {'), (602, '    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageToArray('), (603, '        1, this->_internal_graph(), deterministic, target);'), (604, '  }'), (605, ''), (606, '  // int64 global_step = 2;'), (607, '  if (this->global_step() != 0) {'), (608, '    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->global_step(),'), (609, '                                                                             target);'), (610, '  }'), (611, ''), (612, '  // string spec = 3;'), (613, '  if (this->spec().size() > 0) {'), (614, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (615, '        this->spec().data(), static_cast<int>(this->spec().length()),'), (616, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE, ""tesseract.TFNetworkModel.spec"");'), (617, '    target ='), (618, '        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(3, this->spec(), target);'), (619, '  }'), (620, ''), (621, '  // int32 depth = 4;'), (622, '  if (this->depth() != 0) {'), (623, '    target ='), (624, '        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->depth(), target);'), (625, '  }'), (626, ''), (627, '  // int32 x_size = 5;'), (628, '  if (this->x_size() != 0) {'), (629, '    target ='), (630, '        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->x_size(), target);'), (631, '  }'), (632, ''), (633, '  // int32 y_size = 6;'), (634, '  if (this->y_size() != 0) {'), (635, '    target ='), (636, '        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->y_size(), target);'), (637, '  }'), (638, ''), (639, '  // int32 batch_size = 8;'), (640, '  if (this->batch_size() != 0) {'), (641, '    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->batch_size(),'), (642, '                                                                             target);'), (643, '  }'), (644, ''), (645, '  // int32 num_classes = 9;'), (646, '  if (this->num_classes() != 0) {'), (647, '    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->num_classes(),'), (648, '                                                                             target);'), (649, '  }'), (650, ''), (651, '  // bool using_ctc = 10;'), (652, '  if (this->using_ctc() != 0) {'), (653, '    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->using_ctc(),'), (654, '                                                                            target);'), (655, '  }'), (656, ''), (657, '  // string image_input = 11;'), (658, '  if (this->image_input().size() > 0) {'), (659, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (660, '        this->image_input().data(), static_cast<int>(this->image_input().length()),'), (661, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE,'), (662, '        ""tesseract.TFNetworkModel.image_input"");'), (663, '    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray('), (664, '        11, this->image_input(), target);'), (665, '  }'), (666, ''), (667, '  // string image_widths = 12;'), (668, '  if (this->image_widths().size() > 0) {'), (669, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (670, '        this->image_widths().data(), static_cast<int>(this->image_widths().length()),'), (671, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE,'), (672, '        ""tesseract.TFNetworkModel.image_widths"");'), (673, '    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray('), (674, '        12, this->image_widths(), target);'), (675, '  }'), (676, ''), (677, '  // string image_heights = 13;'), (678, '  if (this->image_heights().size() > 0) {'), (679, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (680, '        this->image_heights().data(), static_cast<int>(this->image_heights().length()),'), (681, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE,'), (682, '        ""tesseract.TFNetworkModel.image_heights"");'), (683, '    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray('), (684, '        13, this->image_heights(), target);'), (685, '  }'), (686, ''), (687, '  // string output_layer = 14;'), (688, '  if (this->output_layer().size() > 0) {'), (689, '    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String('), (690, '        this->output_layer().data(), static_cast<int>(this->output_layer().length()),'), (691, '        ::google::protobuf::internal::WireFormatLite::SERIALIZE,'), (692, '        ""tesseract.TFNetworkModel.output_layer"");'), (693, '    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray('), (694, '        14, this->output_layer(), target);'), (695, '  }'), (696, ''), (697, '  if ((_internal_metadata_.have_unknown_fields() &&'), (698, '       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {'), (699, '    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray('), (700, '        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()'), (701, '             ? _internal_metadata_.unknown_fields()'), (702, '             : _internal_metadata_.default_instance()),'), (703, '        target);'), (704, '  }'), (705, '  // @@protoc_insertion_point(serialize_to_array_end:tesseract.TFNetworkModel)'), (706, '  return target;'), (707, '}'), (708, ''), (709, 'size_t TFNetworkModel::ByteSizeLong() const {'), (710, '  // @@protoc_insertion_point(message_byte_size_start:tesseract.TFNetworkModel)'), (711, '  size_t total_size = 0;'), (712, ''), (713, '  if ((_internal_metadata_.have_unknown_fields() &&'), (714, '       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {'), (715, '    total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize('), (716, '        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()'), (717, '             ? _internal_metadata_.unknown_fields()'), (718, '             : _internal_metadata_.default_instance()));'), (719, '  }'), (720, '  // string spec = 3;'), (721, '  if (this->spec().size() > 0) {'), (722, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->spec());'), (723, '  }'), (724, ''), (725, '  // string image_input = 11;'), (726, '  if (this->image_input().size() > 0) {'), (727, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->image_input());'), (728, '  }'), (729, ''), (730, '  // string image_widths = 12;'), (731, '  if (this->image_widths().size() > 0) {'), (732, '    total_size +='), (733, '        1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->image_widths());'), (734, '  }'), (735, ''), (736, '  // string image_heights = 13;'), (737, '  if (this->image_heights().size() > 0) {'), (738, '    total_size +='), (739, '        1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->image_heights());'), (740, '  }'), (741, ''), (742, '  // string output_layer = 14;'), (743, '  if (this->output_layer().size() > 0) {'), (744, '    total_size +='), (745, '        1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->output_layer());'), (746, '  }'), (747, ''), (748, '  // .tensorflow.GraphDef graph = 1;'), (749, '  if (this->has_graph()) {'), (750, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*graph_);'), (751, '  }'), (752, ''), (753, '  // int64 global_step = 2;'), (754, '  if (this->global_step() != 0) {'), (755, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int64Size(this->global_step());'), (756, '  }'), (757, ''), (758, '  // int32 depth = 4;'), (759, '  if (this->depth() != 0) {'), (760, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->depth());'), (761, '  }'), (762, ''), (763, '  // int32 x_size = 5;'), (764, '  if (this->x_size() != 0) {'), (765, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->x_size());'), (766, '  }'), (767, ''), (768, '  // int32 y_size = 6;'), (769, '  if (this->y_size() != 0) {'), (770, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->y_size());'), (771, '  }'), (772, ''), (773, '  // int32 batch_size = 8;'), (774, '  if (this->batch_size() != 0) {'), (775, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->batch_size());'), (776, '  }'), (777, ''), (778, '  // int32 num_classes = 9;'), (779, '  if (this->num_classes() != 0) {'), (780, '    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->num_classes());'), (781, '  }'), (782, ''), (783, '  // bool using_ctc = 10;'), (784, '  if (this->using_ctc() != 0) {'), (785, '    total_size += 1 + 1;'), (786, '  }'), (787, ''), (788, '  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);'), (789, '  SetCachedSize(cached_size);'), (790, '  return total_size;'), (791, '}'), (792, ''), (793, 'void TFNetworkModel::MergeFrom(const ::google::protobuf::Message &from) {'), (794, '  // @@protoc_insertion_point(generalized_merge_from_start:tesseract.TFNetworkModel)'), (795, '  GOOGLE_DCHECK_NE(&from, this);'), (796, '  const TFNetworkModel *source ='), (797, '      ::google::protobuf::internal::DynamicCastToGenerated<const TFNetworkModel>(&from);'), (798, '  if (source == NULL) {'), (799, '    // @@protoc_insertion_point(generalized_merge_from_cast_fail:tesseract.TFNetworkModel)'), (800, '    ::google::protobuf::internal::ReflectionOps::Merge(from, this);'), (801, '  } else {'), (802, '    // @@protoc_insertion_point(generalized_merge_from_cast_success:tesseract.TFNetworkModel)'), (803, '    MergeFrom(*source);'), (804, '  }'), (805, '}'), (806, ''), (807, 'void TFNetworkModel::MergeFrom(const TFNetworkModel &from) {'), (808, '  // @@protoc_insertion_point(class_specific_merge_from_start:tesseract.TFNetworkModel)'), (809, '  GOOGLE_DCHECK_NE(&from, this);'), (810, '  _internal_metadata_.MergeFrom(from._internal_metadata_);'), (811, '  ::google::protobuf::uint32 cached_has_bits = 0;'), (812, '  (void)cached_has_bits;'), (813, ''), (814, '  if (from.spec().size() > 0) {'), (815, '    spec_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (816, '                            from.spec_);'), (817, '  }'), (818, '  if (from.image_input().size() > 0) {'), (819, '    image_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (820, '                                   from.image_input_);'), (821, '  }'), (822, '  if (from.image_widths().size() > 0) {'), (823, '    image_widths_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (824, '                                    from.image_widths_);'), (825, '  }'), (826, '  if (from.image_heights().size() > 0) {'), (827, '    image_heights_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (828, '                                     from.image_heights_);'), (829, '  }'), (830, '  if (from.output_layer().size() > 0) {'), (831, '    output_layer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (832, '                                    from.output_layer_);'), (833, '  }'), (834, '  if (from.has_graph()) {'), (835, '    mutable_graph()->::tensorflow::GraphDef::MergeFrom(from.graph());'), (836, '  }'), (837, '  if (from.global_step() != 0) {'), (838, '    set_global_step(from.global_step());'), (839, '  }'), (840, '  if (from.depth() != 0) {'), (841, '    set_depth(from.depth());'), (842, '  }'), (843, '  if (from.x_size() != 0) {'), (844, '    set_x_size(from.x_size());'), (845, '  }'), (846, '  if (from.y_size() != 0) {'), (847, '    set_y_size(from.y_size());'), (848, '  }'), (849, '  if (from.batch_size() != 0) {'), (850, '    set_batch_size(from.batch_size());'), (851, '  }'), (852, '  if (from.num_classes() != 0) {'), (853, '    set_num_classes(from.num_classes());'), (854, '  }'), (855, '  if (from.using_ctc() != 0) {'), (856, '    set_using_ctc(from.using_ctc());'), (857, '  }'), (858, '}'), (859, ''), (860, 'void TFNetworkModel::CopyFrom(const ::google::protobuf::Message &from) {'), (861, '  // @@protoc_insertion_point(generalized_copy_from_start:tesseract.TFNetworkModel)'), (862, '  if (&from == this)'), (863, '    return;'), (864, '  Clear();'), (865, '  MergeFrom(from);'), (866, '}'), (867, ''), (868, 'void TFNetworkModel::CopyFrom(const TFNetworkModel &from) {'), (869, '  // @@protoc_insertion_point(class_specific_copy_from_start:tesseract.TFNetworkModel)'), (870, '  if (&from == this)'), (871, '    return;'), (872, '  Clear();'), (873, '  MergeFrom(from);'), (874, '}'), (875, ''), (876, 'bool TFNetworkModel::IsInitialized() const {'), (877, '  return true;'), (878, '}'), (879, ''), (880, 'void TFNetworkModel::Swap(TFNetworkModel *other) {'), (881, '  if (other == this)'), (882, '    return;'), (883, '  InternalSwap(other);'), (884, '}'), (885, 'void TFNetworkModel::InternalSwap(TFNetworkModel *other) {'), (886, '  using std::swap;'), (887, '  spec_.Swap(&other->spec_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (888, '             GetArenaNoVirtual());'), (889, '  image_input_.Swap(&other->image_input_,'), (890, '                    &::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (891, '                    GetArenaNoVirtual());'), (892, '  image_widths_.Swap(&other->image_widths_,'), (893, '                     &::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (894, '                     GetArenaNoVirtual());'), (895, '  image_heights_.Swap(&other->image_heights_,'), (896, '                      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (897, '                      GetArenaNoVirtual());'), (898, '  output_layer_.Swap(&other->output_layer_,'), (899, '                     &::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (900, '                     GetArenaNoVirtual());'), (901, '  swap(graph_, other->graph_);'), (902, '  swap(global_step_, other->global_step_);'), (903, '  swap(depth_, other->depth_);'), (904, '  swap(x_size_, other->x_size_);'), (905, '  swap(y_size_, other->y_size_);'), (906, '  swap(batch_size_, other->batch_size_);'), (907, '  swap(num_classes_, other->num_classes_);'), (908, '  swap(using_ctc_, other->using_ctc_);'), (909, '  _internal_metadata_.Swap(&other->_internal_metadata_);'), (910, '}'), (911, ''), (912, '::google::protobuf::Metadata TFNetworkModel::GetMetadata() const {'), (913, '  protobuf_tfnetwork_2eproto::protobuf_AssignDescriptorsOnce();'), (914, '  return ::protobuf_tfnetwork_2eproto::file_level_metadata[kIndexInFileMessages];'), (915, '}'), (916, ''), (917, '// @@protoc_insertion_point(namespace_scope)'), (918, '} // namespace tesseract'), (919, 'namespace google {'), (920, 'namespace protobuf {'), (921, 'template <>'), (922, 'GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tesseract::TFNetworkModel *'), (923, 'Arena::CreateMaybeMessage<::tesseract::TFNetworkModel>(Arena *arena) {'), (924, '  return Arena::CreateInternal<::tesseract::TFNetworkModel>(arena);'), (925, '}'), (926, '} // namespace protobuf'), (927, '} // namespace google'), (928, ''), (929, '// @@protoc_insertion_point(global_scope)')]}",yes
src\lstm\tfnetwork.pb.h,,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,703 +0,0 @@
-// Generated by the protocol buffer compiler.  DO NOT EDIT!
-// source: tfnetwork.proto
-
-#ifndef PROTOBUF_INCLUDED_tfnetwork_2eproto
-#define PROTOBUF_INCLUDED_tfnetwork_2eproto
-
-#include <string>
-
-#include <google/protobuf/stubs/common.h>
-
-#if GOOGLE_PROTOBUF_VERSION < 3006001
-#  error This file was generated by a newer version of protoc which is
-#  error incompatible with your Protocol Buffer headers.  Please update
-#  error your headers.
-#endif
-#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
-#  error This file was generated by an older version of protoc which is
-#  error incompatible with your Protocol Buffer headers.  Please
-#  error regenerate this file with a newer version of protoc.
-#endif
-
-#include <google/protobuf/arena.h>
-#include <google/protobuf/arenastring.h>
-#include <google/protobuf/extension_set.h> // IWYU pragma: export
-#include <google/protobuf/generated_message_table_driven.h>
-#include <google/protobuf/generated_message_util.h>
-#include <google/protobuf/inlined_string_field.h>
-#include <google/protobuf/io/coded_stream.h>
-#include <google/protobuf/message.h>
-#include <google/protobuf/metadata.h>
-#include <google/protobuf/repeated_field.h> // IWYU pragma: export
-#include <google/protobuf/unknown_field_set.h>
-#include ""tensorflow/core/framework/graph.pb.h""
-// @@protoc_insertion_point(includes)
-#define PROTOBUF_INTERNAL_EXPORT_protobuf_tfnetwork_2eproto
-
-namespace protobuf_tfnetwork_2eproto {
-// Internal implementation detail -- do not use these members.
-struct TableStruct {
-  static const ::google::protobuf::internal::ParseTableField entries[];
-  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
-  static const ::google::protobuf::internal::ParseTable schema[1];
-  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
-  static const ::google::protobuf::internal::SerializationTable serialization_table[];
-  static const ::google::protobuf::uint32 offsets[];
-};
-void AddDescriptors();
-} // namespace protobuf_tfnetwork_2eproto
-namespace tesseract {
-class TFNetworkModel;
-class TFNetworkModelDefaultTypeInternal;
-extern TFNetworkModelDefaultTypeInternal _TFNetworkModel_default_instance_;
-} // namespace tesseract
-namespace google {
-namespace protobuf {
-template <>
-::tesseract::TFNetworkModel *Arena::CreateMaybeMessage<::tesseract::TFNetworkModel>(Arena *);
-} // namespace protobuf
-} // namespace google
-namespace tesseract {
-
-// ===================================================================
-
-class TFNetworkModel
-    : public ::google::protobuf::
-          Message /* @@protoc_insertion_point(class_definition:tesseract.TFNetworkModel)
-                   */
-{
-public:
-  TFNetworkModel();
-  virtual ~TFNetworkModel();
-
-  TFNetworkModel(const TFNetworkModel &from);
-
-  inline TFNetworkModel &operator=(const TFNetworkModel &from) {
-    CopyFrom(from);
-    return *this;
-  }
-#if LANG_CXX11
-  TFNetworkModel(TFNetworkModel &&from) noexcept : TFNetworkModel() {
-    *this = ::std::move(from);
-  }
-
-  inline TFNetworkModel &operator=(TFNetworkModel &&from) noexcept {
-    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
-      if (this != &from)
-        InternalSwap(&from);
-    } else {
-      CopyFrom(from);
-    }
-    return *this;
-  }
-#endif
-  static const ::google::protobuf::Descriptor *descriptor();
-  static const TFNetworkModel &default_instance();
-
-  static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
-  static inline const TFNetworkModel *internal_default_instance() {
-    return reinterpret_cast<const TFNetworkModel *>(&_TFNetworkModel_default_instance_);
-  }
-  static constexpr int kIndexInFileMessages = 0;
-
-  void Swap(TFNetworkModel *other);
-  friend void swap(TFNetworkModel &a, TFNetworkModel &b) {
-    a.Swap(&b);
-  }
-
-  // implements Message ----------------------------------------------
-
-  inline TFNetworkModel *New() const final {
-    return CreateMaybeMessage<TFNetworkModel>(NULL);
-  }
-
-  TFNetworkModel *New(::google::protobuf::Arena *arena) const final {
-    return CreateMaybeMessage<TFNetworkModel>(arena);
-  }
-  void CopyFrom(const ::google::protobuf::Message &from) final;
-  void MergeFrom(const ::google::protobuf::Message &from) final;
-  void CopyFrom(const TFNetworkModel &from);
-  void MergeFrom(const TFNetworkModel &from);
-  void Clear() final;
-  bool IsInitialized() const final;
-
-  size_t ByteSizeLong() const final;
-  bool MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream *input) final;
-  void SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream *output) const final;
-  ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
-      bool deterministic, ::google::protobuf::uint8 *target) const final;
-  int GetCachedSize() const final {
-    return _cached_size_.Get();
-  }
-
-private:
-  void SharedCtor();
-  void SharedDtor();
-  void SetCachedSize(int size) const final;
-  void InternalSwap(TFNetworkModel *other);
-
-private:
-  inline ::google::protobuf::Arena *GetArenaNoVirtual() const {
-    return NULL;
-  }
-  inline void *MaybeArenaPtr() const {
-    return NULL;
-  }
-
-public:
-  ::google::protobuf::Metadata GetMetadata() const final;
-
-  // nested types ----------------------------------------------------
-
-  // accessors -------------------------------------------------------
-
-  // string spec = 3;
-  void clear_spec();
-  static const int kSpecFieldNumber = 3;
-  const ::std::string &spec() const;
-  void set_spec(const ::std::string &value);
-#if LANG_CXX11
-  void set_spec(::std::string &&value);
-#endif
-  void set_spec(const char *value);
-  void set_spec(const char *value, size_t size);
-  ::std::string *mutable_spec();
-  ::std::string *release_spec();
-  void set_allocated_spec(::std::string *spec);
-
-  // string image_input = 11;
-  void clear_image_input();
-  static const int kImageInputFieldNumber = 11;
-  const ::std::string &image_input() const;
-  void set_image_input(const ::std::string &value);
-#if LANG_CXX11
-  void set_image_input(::std::string &&value);
-#endif
-  void set_image_input(const char *value);
-  void set_image_input(const char *value, size_t size);
-  ::std::string *mutable_image_input();
-  ::std::string *release_image_input();
-  void set_allocated_image_input(::std::string *image_input);
-
-  // string image_widths = 12;
-  void clear_image_widths();
-  static const int kImageWidthsFieldNumber = 12;
-  const ::std::string &image_widths() const;
-  void set_image_widths(const ::std::string &value);
-#if LANG_CXX11
-  void set_image_widths(::std::string &&value);
-#endif
-  void set_image_widths(const char *value);
-  void set_image_widths(const char *value, size_t size);
-  ::std::string *mutable_image_widths();
-  ::std::string *release_image_widths();
-  void set_allocated_image_widths(::std::string *image_widths);
-
-  // string image_heights = 13;
-  void clear_image_heights();
-  static const int kImageHeightsFieldNumber = 13;
-  const ::std::string &image_heights() const;
-  void set_image_heights(const ::std::string &value);
-#if LANG_CXX11
-  void set_image_heights(::std::string &&value);
-#endif
-  void set_image_heights(const char *value);
-  void set_image_heights(const char *value, size_t size);
-  ::std::string *mutable_image_heights();
-  ::std::string *release_image_heights();
-  void set_allocated_image_heights(::std::string *image_heights);
-
-  // string output_layer = 14;
-  void clear_output_layer();
-  static const int kOutputLayerFieldNumber = 14;
-  const ::std::string &output_layer() const;
-  void set_output_layer(const ::std::string &value);
-#if LANG_CXX11
-  void set_output_layer(::std::string &&value);
-#endif
-  void set_output_layer(const char *value);
-  void set_output_layer(const char *value, size_t size);
-  ::std::string *mutable_output_layer();
-  ::std::string *release_output_layer();
-  void set_allocated_output_layer(::std::string *output_layer);
-
-  // .tensorflow.GraphDef graph = 1;
-  bool has_graph() const;
-  void clear_graph();
-  static const int kGraphFieldNumber = 1;
-
-private:
-  const ::tensorflow::GraphDef &_internal_graph() const;
-
-public:
-  const ::tensorflow::GraphDef &graph() const;
-  ::tensorflow::GraphDef *release_graph();
-  ::tensorflow::GraphDef *mutable_graph();
-  void set_allocated_graph(::tensorflow::GraphDef *graph);
-
-  // int64 global_step = 2;
-  void clear_global_step();
-  static const int kGlobalStepFieldNumber = 2;
-  ::google::protobuf::int64 global_step() const;
-  void set_global_step(::google::protobuf::int64 value);
-
-  // int32 depth = 4;
-  void clear_depth();
-  static const int kDepthFieldNumber = 4;
-  ::google::protobuf::int32 depth() const;
-  void set_depth(::google::protobuf::int32 value);
-
-  // int32 x_size = 5;
-  void clear_x_size();
-  static const int kXSizeFieldNumber = 5;
-  ::google::protobuf::int32 x_size() const;
-  void set_x_size(::google::protobuf::int32 value);
-
-  // int32 y_size = 6;
-  void clear_y_size();
-  static const int kYSizeFieldNumber = 6;
-  ::google::protobuf::int32 y_size() const;
-  void set_y_size(::google::protobuf::int32 value);
-
-  // int32 batch_size = 8;
-  void clear_batch_size();
-  static const int kBatchSizeFieldNumber = 8;
-  ::google::protobuf::int32 batch_size() const;
-  void set_batch_size(::google::protobuf::int32 value);
-
-  // int32 num_classes = 9;
-  void clear_num_classes();
-  static const int kNumClassesFieldNumber = 9;
-  ::google::protobuf::int32 num_classes() const;
-  void set_num_classes(::google::protobuf::int32 value);
-
-  // bool using_ctc = 10;
-  void clear_using_ctc();
-  static const int kUsingCtcFieldNumber = 10;
-  bool using_ctc() const;
-  void set_using_ctc(bool value);
-
-  // @@protoc_insertion_point(class_scope:tesseract.TFNetworkModel)
-private:
-  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
-  ::google::protobuf::internal::ArenaStringPtr spec_;
-  ::google::protobuf::internal::ArenaStringPtr image_input_;
-  ::google::protobuf::internal::ArenaStringPtr image_widths_;
-  ::google::protobuf::internal::ArenaStringPtr image_heights_;
-  ::google::protobuf::internal::ArenaStringPtr output_layer_;
-  ::tensorflow::GraphDef *graph_;
-  ::google::protobuf::int64 global_step_;
-  ::google::protobuf::int32 depth_;
-  ::google::protobuf::int32 x_size_;
-  ::google::protobuf::int32 y_size_;
-  ::google::protobuf::int32 batch_size_;
-  ::google::protobuf::int32 num_classes_;
-  bool using_ctc_;
-  mutable ::google::protobuf::internal::CachedSize _cached_size_;
-  friend struct ::protobuf_tfnetwork_2eproto::TableStruct;
-};
-// ===================================================================
-
-// ===================================================================
-
-#ifdef __GNUC__
-#  pragma GCC diagnostic push
-#  pragma GCC diagnostic ignored ""-Wstrict-aliasing""
-#endif // __GNUC__
-// TFNetworkModel
-
-// .tensorflow.GraphDef graph = 1;
-inline bool TFNetworkModel::has_graph() const {
-  return this != internal_default_instance() && graph_ != NULL;
-}
-inline const ::tensorflow::GraphDef &TFNetworkModel::_internal_graph() const {
-  return *graph_;
-}
-inline const ::tensorflow::GraphDef &TFNetworkModel::graph() const {
-  const ::tensorflow::GraphDef *p = graph_;
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.graph)
-  return p != NULL ? *p
-                   : *reinterpret_cast<const ::tensorflow::GraphDef *>(
-                         &::tensorflow::_GraphDef_default_instance_);
-}
-inline ::tensorflow::GraphDef *TFNetworkModel::release_graph() {
-  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.graph)
-
-  ::tensorflow::GraphDef *temp = graph_;
-  graph_ = NULL;
-  return temp;
-}
-inline ::tensorflow::GraphDef *TFNetworkModel::mutable_graph() {
-  if (graph_ == NULL) {
-    auto *p = CreateMaybeMessage<::tensorflow::GraphDef>(GetArenaNoVirtual());
-    graph_ = p;
-  }
-  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.graph)
-  return graph_;
-}
-inline void TFNetworkModel::set_allocated_graph(::tensorflow::GraphDef *graph) {
-  ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
-  if (message_arena == NULL) {
-    delete reinterpret_cast<::google::protobuf::MessageLite *>(graph_);
-  }
-  if (graph) {
-    ::google::protobuf::Arena *submessage_arena =
-        reinterpret_cast<::google::protobuf::MessageLite *>(graph)->GetArena();
-    if (message_arena != submessage_arena) {
-      graph = ::google::protobuf::internal::GetOwnedMessage(message_arena, graph, submessage_arena);
-    }
-
-  } else {
-  }
-  graph_ = graph;
-  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.graph)
-}
-
-// int64 global_step = 2;
-inline void TFNetworkModel::clear_global_step() {
-  global_step_ = GOOGLE_LONGLONG(0);
-}
-inline ::google::protobuf::int64 TFNetworkModel::global_step() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.global_step)
-  return global_step_;
-}
-inline void TFNetworkModel::set_global_step(::google::protobuf::int64 value) {
-  global_step_ = value;
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.global_step)
-}
-
-// string spec = 3;
-inline void TFNetworkModel::clear_spec() {
-  spec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline const ::std::string &TFNetworkModel::spec() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.spec)
-  return spec_.GetNoArena();
-}
-inline void TFNetworkModel::set_spec(const ::std::string &value) {
-  spec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.spec)
-}
-#if LANG_CXX11
-inline void TFNetworkModel::set_spec(::std::string &&value) {
-  spec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                   ::std::move(value));
-  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.spec)
-}
-#endif
-inline void TFNetworkModel::set_spec(const char *value) {
-  GOOGLE_DCHECK(value != NULL);
-
-  spec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                   ::std::string(value));
-  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.spec)
-}
-inline void TFNetworkModel::set_spec(const char *value, size_t size) {
-  spec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                   ::std::string(reinterpret_cast<const char *>(value), size));
-  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.spec)
-}
-inline ::std::string *TFNetworkModel::mutable_spec() {
-  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.spec)
-  return spec_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline ::std::string *TFNetworkModel::release_spec() {
-  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.spec)
-
-  return spec_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline void TFNetworkModel::set_allocated_spec(::std::string *spec) {
-  if (spec != NULL) {
-  } else {
-  }
-  spec_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spec);
-  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.spec)
-}
-
-// int32 depth = 4;
-inline void TFNetworkModel::clear_depth() {
-  depth_ = 0;
-}
-inline ::google::protobuf::int32 TFNetworkModel::depth() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.depth)
-  return depth_;
-}
-inline void TFNetworkModel::set_depth(::google::protobuf::int32 value) {
-  depth_ = value;
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.depth)
-}
-
-// int32 x_size = 5;
-inline void TFNetworkModel::clear_x_size() {
-  x_size_ = 0;
-}
-inline ::google::protobuf::int32 TFNetworkModel::x_size() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.x_size)
-  return x_size_;
-}
-inline void TFNetworkModel::set_x_size(::google::protobuf::int32 value) {
-  x_size_ = value;
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.x_size)
-}
-
-// int32 y_size = 6;
-inline void TFNetworkModel::clear_y_size() {
-  y_size_ = 0;
-}
-inline ::google::protobuf::int32 TFNetworkModel::y_size() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.y_size)
-  return y_size_;
-}
-inline void TFNetworkModel::set_y_size(::google::protobuf::int32 value) {
-  y_size_ = value;
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.y_size)
-}
-
-// int32 batch_size = 8;
-inline void TFNetworkModel::clear_batch_size() {
-  batch_size_ = 0;
-}
-inline ::google::protobuf::int32 TFNetworkModel::batch_size() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.batch_size)
-  return batch_size_;
-}
-inline void TFNetworkModel::set_batch_size(::google::protobuf::int32 value) {
-  batch_size_ = value;
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.batch_size)
-}
-
-// int32 num_classes = 9;
-inline void TFNetworkModel::clear_num_classes() {
-  num_classes_ = 0;
-}
-inline ::google::protobuf::int32 TFNetworkModel::num_classes() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.num_classes)
-  return num_classes_;
-}
-inline void TFNetworkModel::set_num_classes(::google::protobuf::int32 value) {
-  num_classes_ = value;
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.num_classes)
-}
-
-// bool using_ctc = 10;
-inline void TFNetworkModel::clear_using_ctc() {
-  using_ctc_ = false;
-}
-inline bool TFNetworkModel::using_ctc() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.using_ctc)
-  return using_ctc_;
-}
-inline void TFNetworkModel::set_using_ctc(bool value) {
-  using_ctc_ = value;
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.using_ctc)
-}
-
-// string image_input = 11;
-inline void TFNetworkModel::clear_image_input() {
-  image_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline const ::std::string &TFNetworkModel::image_input() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.image_input)
-  return image_input_.GetNoArena();
-}
-inline void TFNetworkModel::set_image_input(const ::std::string &value) {
-  image_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.image_input)
-}
-#if LANG_CXX11
-inline void TFNetworkModel::set_image_input(::std::string &&value) {
-  image_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                          ::std::move(value));
-  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.image_input)
-}
-#endif
-inline void TFNetworkModel::set_image_input(const char *value) {
-  GOOGLE_DCHECK(value != NULL);
-
-  image_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                          ::std::string(value));
-  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.image_input)
-}
-inline void TFNetworkModel::set_image_input(const char *value, size_t size) {
-  image_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                          ::std::string(reinterpret_cast<const char *>(value), size));
-  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.image_input)
-}
-inline ::std::string *TFNetworkModel::mutable_image_input() {
-  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.image_input)
-  return image_input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline ::std::string *TFNetworkModel::release_image_input() {
-  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.image_input)
-
-  return image_input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline void TFNetworkModel::set_allocated_image_input(::std::string *image_input) {
-  if (image_input != NULL) {
-  } else {
-  }
-  image_input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                   image_input);
-  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.image_input)
-}
-
-// string image_widths = 12;
-inline void TFNetworkModel::clear_image_widths() {
-  image_widths_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline const ::std::string &TFNetworkModel::image_widths() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.image_widths)
-  return image_widths_.GetNoArena();
-}
-inline void TFNetworkModel::set_image_widths(const ::std::string &value) {
-  image_widths_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.image_widths)
-}
-#if LANG_CXX11
-inline void TFNetworkModel::set_image_widths(::std::string &&value) {
-  image_widths_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                           ::std::move(value));
-  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.image_widths)
-}
-#endif
-inline void TFNetworkModel::set_image_widths(const char *value) {
-  GOOGLE_DCHECK(value != NULL);
-
-  image_widths_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                           ::std::string(value));
-  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.image_widths)
-}
-inline void TFNetworkModel::set_image_widths(const char *value, size_t size) {
-  image_widths_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                           ::std::string(reinterpret_cast<const char *>(value), size));
-  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.image_widths)
-}
-inline ::std::string *TFNetworkModel::mutable_image_widths() {
-  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.image_widths)
-  return image_widths_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline ::std::string *TFNetworkModel::release_image_widths() {
-  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.image_widths)
-
-  return image_widths_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline void TFNetworkModel::set_allocated_image_widths(::std::string *image_widths) {
-  if (image_widths != NULL) {
-  } else {
-  }
-  image_widths_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                    image_widths);
-  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.image_widths)
-}
-
-// string image_heights = 13;
-inline void TFNetworkModel::clear_image_heights() {
-  image_heights_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline const ::std::string &TFNetworkModel::image_heights() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.image_heights)
-  return image_heights_.GetNoArena();
-}
-inline void TFNetworkModel::set_image_heights(const ::std::string &value) {
-  image_heights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.image_heights)
-}
-#if LANG_CXX11
-inline void TFNetworkModel::set_image_heights(::std::string &&value) {
-  image_heights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                            ::std::move(value));
-  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.image_heights)
-}
-#endif
-inline void TFNetworkModel::set_image_heights(const char *value) {
-  GOOGLE_DCHECK(value != NULL);
-
-  image_heights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                            ::std::string(value));
-  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.image_heights)
-}
-inline void TFNetworkModel::set_image_heights(const char *value, size_t size) {
-  image_heights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                            ::std::string(reinterpret_cast<const char *>(value), size));
-  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.image_heights)
-}
-inline ::std::string *TFNetworkModel::mutable_image_heights() {
-  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.image_heights)
-  return image_heights_.MutableNoArena(
-      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline ::std::string *TFNetworkModel::release_image_heights() {
-  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.image_heights)
-
-  return image_heights_.ReleaseNoArena(
-      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline void TFNetworkModel::set_allocated_image_heights(::std::string *image_heights) {
-  if (image_heights != NULL) {
-  } else {
-  }
-  image_heights_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                     image_heights);
-  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.image_heights)
-}
-
-// string output_layer = 14;
-inline void TFNetworkModel::clear_output_layer() {
-  output_layer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline const ::std::string &TFNetworkModel::output_layer() const {
-  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.output_layer)
-  return output_layer_.GetNoArena();
-}
-inline void TFNetworkModel::set_output_layer(const ::std::string &value) {
-  output_layer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
-  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.output_layer)
-}
-#if LANG_CXX11
-inline void TFNetworkModel::set_output_layer(::std::string &&value) {
-  output_layer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                           ::std::move(value));
-  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.output_layer)
-}
-#endif
-inline void TFNetworkModel::set_output_layer(const char *value) {
-  GOOGLE_DCHECK(value != NULL);
-
-  output_layer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                           ::std::string(value));
-  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.output_layer)
-}
-inline void TFNetworkModel::set_output_layer(const char *value, size_t size) {
-  output_layer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                           ::std::string(reinterpret_cast<const char *>(value), size));
-  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.output_layer)
-}
-inline ::std::string *TFNetworkModel::mutable_output_layer() {
-  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.output_layer)
-  return output_layer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline ::std::string *TFNetworkModel::release_output_layer() {
-  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.output_layer)
-
-  return output_layer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
-}
-inline void TFNetworkModel::set_allocated_output_layer(::std::string *output_layer) {
-  if (output_layer != NULL) {
-  } else {
-  }
-  output_layer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
-                                    output_layer);
-  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.output_layer)
-}
-
-#ifdef __GNUC__
-#  pragma GCC diagnostic pop
-#endif // __GNUC__
-
-// @@protoc_insertion_point(namespace_scope)
-
-} // namespace tesseract
-
-// @@protoc_insertion_point(global_scope)
-
-#endif // PROTOBUF_INCLUDED_tfnetwork_2eproto
","{'added': [], 'deleted': [(1, '// Generated by the protocol buffer compiler.  DO NOT EDIT!'), (2, '// source: tfnetwork.proto'), (3, ''), (4, '#ifndef PROTOBUF_INCLUDED_tfnetwork_2eproto'), (5, '#define PROTOBUF_INCLUDED_tfnetwork_2eproto'), (6, ''), (7, '#include <string>'), (8, ''), (9, '#include <google/protobuf/stubs/common.h>'), (10, ''), (11, '#if GOOGLE_PROTOBUF_VERSION < 3006001'), (12, '#  error This file was generated by a newer version of protoc which is'), (13, '#  error incompatible with your Protocol Buffer headers.  Please update'), (14, '#  error your headers.'), (15, '#endif'), (16, '#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION'), (17, '#  error This file was generated by an older version of protoc which is'), (18, '#  error incompatible with your Protocol Buffer headers.  Please'), (19, '#  error regenerate this file with a newer version of protoc.'), (20, '#endif'), (21, ''), (22, '#include <google/protobuf/arena.h>'), (23, '#include <google/protobuf/arenastring.h>'), (24, '#include <google/protobuf/extension_set.h> // IWYU pragma: export'), (25, '#include <google/protobuf/generated_message_table_driven.h>'), (26, '#include <google/protobuf/generated_message_util.h>'), (27, '#include <google/protobuf/inlined_string_field.h>'), (28, '#include <google/protobuf/io/coded_stream.h>'), (29, '#include <google/protobuf/message.h>'), (30, '#include <google/protobuf/metadata.h>'), (31, '#include <google/protobuf/repeated_field.h> // IWYU pragma: export'), (32, '#include <google/protobuf/unknown_field_set.h>'), (33, '#include ""tensorflow/core/framework/graph.pb.h""'), (34, '// @@protoc_insertion_point(includes)'), (35, '#define PROTOBUF_INTERNAL_EXPORT_protobuf_tfnetwork_2eproto'), (36, ''), (37, 'namespace protobuf_tfnetwork_2eproto {'), (38, '// Internal implementation detail -- do not use these members.'), (39, 'struct TableStruct {'), (40, '  static const ::google::protobuf::internal::ParseTableField entries[];'), (41, '  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];'), (42, '  static const ::google::protobuf::internal::ParseTable schema[1];'), (43, '  static const ::google::protobuf::internal::FieldMetadata field_metadata[];'), (44, '  static const ::google::protobuf::internal::SerializationTable serialization_table[];'), (45, '  static const ::google::protobuf::uint32 offsets[];'), (46, '};'), (47, 'void AddDescriptors();'), (48, '} // namespace protobuf_tfnetwork_2eproto'), (49, 'namespace tesseract {'), (50, 'class TFNetworkModel;'), (51, 'class TFNetworkModelDefaultTypeInternal;'), (52, 'extern TFNetworkModelDefaultTypeInternal _TFNetworkModel_default_instance_;'), (53, '} // namespace tesseract'), (54, 'namespace google {'), (55, 'namespace protobuf {'), (56, 'template <>'), (57, '::tesseract::TFNetworkModel *Arena::CreateMaybeMessage<::tesseract::TFNetworkModel>(Arena *);'), (58, '} // namespace protobuf'), (59, '} // namespace google'), (60, 'namespace tesseract {'), (61, ''), (62, '// ==================================================================='), (63, ''), (64, 'class TFNetworkModel'), (65, '    : public ::google::protobuf::'), (66, '          Message /* @@protoc_insertion_point(class_definition:tesseract.TFNetworkModel)'), (67, '                   */'), (68, '{'), (69, 'public:'), (70, '  TFNetworkModel();'), (71, '  virtual ~TFNetworkModel();'), (72, ''), (73, '  TFNetworkModel(const TFNetworkModel &from);'), (74, ''), (75, '  inline TFNetworkModel &operator=(const TFNetworkModel &from) {'), (76, '    CopyFrom(from);'), (77, '    return *this;'), (78, '  }'), (79, '#if LANG_CXX11'), (80, '  TFNetworkModel(TFNetworkModel &&from) noexcept : TFNetworkModel() {'), (81, '    *this = ::std::move(from);'), (82, '  }'), (83, ''), (84, '  inline TFNetworkModel &operator=(TFNetworkModel &&from) noexcept {'), (85, '    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {'), (86, '      if (this != &from)'), (87, '        InternalSwap(&from);'), (88, '    } else {'), (89, '      CopyFrom(from);'), (90, '    }'), (91, '    return *this;'), (92, '  }'), (93, '#endif'), (94, '  static const ::google::protobuf::Descriptor *descriptor();'), (95, '  static const TFNetworkModel &default_instance();'), (96, ''), (97, '  static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY'), (98, '  static inline const TFNetworkModel *internal_default_instance() {'), (99, '    return reinterpret_cast<const TFNetworkModel *>(&_TFNetworkModel_default_instance_);'), (100, '  }'), (101, '  static constexpr int kIndexInFileMessages = 0;'), (102, ''), (103, '  void Swap(TFNetworkModel *other);'), (104, '  friend void swap(TFNetworkModel &a, TFNetworkModel &b) {'), (105, '    a.Swap(&b);'), (106, '  }'), (107, ''), (108, '  // implements Message ----------------------------------------------'), (109, ''), (110, '  inline TFNetworkModel *New() const final {'), (111, '    return CreateMaybeMessage<TFNetworkModel>(NULL);'), (112, '  }'), (113, ''), (114, '  TFNetworkModel *New(::google::protobuf::Arena *arena) const final {'), (115, '    return CreateMaybeMessage<TFNetworkModel>(arena);'), (116, '  }'), (117, '  void CopyFrom(const ::google::protobuf::Message &from) final;'), (118, '  void MergeFrom(const ::google::protobuf::Message &from) final;'), (119, '  void CopyFrom(const TFNetworkModel &from);'), (120, '  void MergeFrom(const TFNetworkModel &from);'), (121, '  void Clear() final;'), (122, '  bool IsInitialized() const final;'), (123, ''), (124, '  size_t ByteSizeLong() const final;'), (125, '  bool MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream *input) final;'), (126, '  void SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream *output) const final;'), (127, '  ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray('), (128, '      bool deterministic, ::google::protobuf::uint8 *target) const final;'), (129, '  int GetCachedSize() const final {'), (130, '    return _cached_size_.Get();'), (131, '  }'), (132, ''), (133, 'private:'), (134, '  void SharedCtor();'), (135, '  void SharedDtor();'), (136, '  void SetCachedSize(int size) const final;'), (137, '  void InternalSwap(TFNetworkModel *other);'), (138, ''), (139, 'private:'), (140, '  inline ::google::protobuf::Arena *GetArenaNoVirtual() const {'), (141, '    return NULL;'), (142, '  }'), (143, '  inline void *MaybeArenaPtr() const {'), (144, '    return NULL;'), (145, '  }'), (146, ''), (147, 'public:'), (148, '  ::google::protobuf::Metadata GetMetadata() const final;'), (149, ''), (150, '  // nested types ----------------------------------------------------'), (151, ''), (152, '  // accessors -------------------------------------------------------'), (153, ''), (154, '  // string spec = 3;'), (155, '  void clear_spec();'), (156, '  static const int kSpecFieldNumber = 3;'), (157, '  const ::std::string &spec() const;'), (158, '  void set_spec(const ::std::string &value);'), (159, '#if LANG_CXX11'), (160, '  void set_spec(::std::string &&value);'), (161, '#endif'), (162, '  void set_spec(const char *value);'), (163, '  void set_spec(const char *value, size_t size);'), (164, '  ::std::string *mutable_spec();'), (165, '  ::std::string *release_spec();'), (166, '  void set_allocated_spec(::std::string *spec);'), (167, ''), (168, '  // string image_input = 11;'), (169, '  void clear_image_input();'), (170, '  static const int kImageInputFieldNumber = 11;'), (171, '  const ::std::string &image_input() const;'), (172, '  void set_image_input(const ::std::string &value);'), (173, '#if LANG_CXX11'), (174, '  void set_image_input(::std::string &&value);'), (175, '#endif'), (176, '  void set_image_input(const char *value);'), (177, '  void set_image_input(const char *value, size_t size);'), (178, '  ::std::string *mutable_image_input();'), (179, '  ::std::string *release_image_input();'), (180, '  void set_allocated_image_input(::std::string *image_input);'), (181, ''), (182, '  // string image_widths = 12;'), (183, '  void clear_image_widths();'), (184, '  static const int kImageWidthsFieldNumber = 12;'), (185, '  const ::std::string &image_widths() const;'), (186, '  void set_image_widths(const ::std::string &value);'), (187, '#if LANG_CXX11'), (188, '  void set_image_widths(::std::string &&value);'), (189, '#endif'), (190, '  void set_image_widths(const char *value);'), (191, '  void set_image_widths(const char *value, size_t size);'), (192, '  ::std::string *mutable_image_widths();'), (193, '  ::std::string *release_image_widths();'), (194, '  void set_allocated_image_widths(::std::string *image_widths);'), (195, ''), (196, '  // string image_heights = 13;'), (197, '  void clear_image_heights();'), (198, '  static const int kImageHeightsFieldNumber = 13;'), (199, '  const ::std::string &image_heights() const;'), (200, '  void set_image_heights(const ::std::string &value);'), (201, '#if LANG_CXX11'), (202, '  void set_image_heights(::std::string &&value);'), (203, '#endif'), (204, '  void set_image_heights(const char *value);'), (205, '  void set_image_heights(const char *value, size_t size);'), (206, '  ::std::string *mutable_image_heights();'), (207, '  ::std::string *release_image_heights();'), (208, '  void set_allocated_image_heights(::std::string *image_heights);'), (209, ''), (210, '  // string output_layer = 14;'), (211, '  void clear_output_layer();'), (212, '  static const int kOutputLayerFieldNumber = 14;'), (213, '  const ::std::string &output_layer() const;'), (214, '  void set_output_layer(const ::std::string &value);'), (215, '#if LANG_CXX11'), (216, '  void set_output_layer(::std::string &&value);'), (217, '#endif'), (218, '  void set_output_layer(const char *value);'), (219, '  void set_output_layer(const char *value, size_t size);'), (220, '  ::std::string *mutable_output_layer();'), (221, '  ::std::string *release_output_layer();'), (222, '  void set_allocated_output_layer(::std::string *output_layer);'), (223, ''), (224, '  // .tensorflow.GraphDef graph = 1;'), (225, '  bool has_graph() const;'), (226, '  void clear_graph();'), (227, '  static const int kGraphFieldNumber = 1;'), (228, ''), (229, 'private:'), (230, '  const ::tensorflow::GraphDef &_internal_graph() const;'), (231, ''), (232, 'public:'), (233, '  const ::tensorflow::GraphDef &graph() const;'), (234, '  ::tensorflow::GraphDef *release_graph();'), (235, '  ::tensorflow::GraphDef *mutable_graph();'), (236, '  void set_allocated_graph(::tensorflow::GraphDef *graph);'), (237, ''), (238, '  // int64 global_step = 2;'), (239, '  void clear_global_step();'), (240, '  static const int kGlobalStepFieldNumber = 2;'), (241, '  ::google::protobuf::int64 global_step() const;'), (242, '  void set_global_step(::google::protobuf::int64 value);'), (243, ''), (244, '  // int32 depth = 4;'), (245, '  void clear_depth();'), (246, '  static const int kDepthFieldNumber = 4;'), (247, '  ::google::protobuf::int32 depth() const;'), (248, '  void set_depth(::google::protobuf::int32 value);'), (249, ''), (250, '  // int32 x_size = 5;'), (251, '  void clear_x_size();'), (252, '  static const int kXSizeFieldNumber = 5;'), (253, '  ::google::protobuf::int32 x_size() const;'), (254, '  void set_x_size(::google::protobuf::int32 value);'), (255, ''), (256, '  // int32 y_size = 6;'), (257, '  void clear_y_size();'), (258, '  static const int kYSizeFieldNumber = 6;'), (259, '  ::google::protobuf::int32 y_size() const;'), (260, '  void set_y_size(::google::protobuf::int32 value);'), (261, ''), (262, '  // int32 batch_size = 8;'), (263, '  void clear_batch_size();'), (264, '  static const int kBatchSizeFieldNumber = 8;'), (265, '  ::google::protobuf::int32 batch_size() const;'), (266, '  void set_batch_size(::google::protobuf::int32 value);'), (267, ''), (268, '  // int32 num_classes = 9;'), (269, '  void clear_num_classes();'), (270, '  static const int kNumClassesFieldNumber = 9;'), (271, '  ::google::protobuf::int32 num_classes() const;'), (272, '  void set_num_classes(::google::protobuf::int32 value);'), (273, ''), (274, '  // bool using_ctc = 10;'), (275, '  void clear_using_ctc();'), (276, '  static const int kUsingCtcFieldNumber = 10;'), (277, '  bool using_ctc() const;'), (278, '  void set_using_ctc(bool value);'), (279, ''), (280, '  // @@protoc_insertion_point(class_scope:tesseract.TFNetworkModel)'), (281, 'private:'), (282, '  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;'), (283, '  ::google::protobuf::internal::ArenaStringPtr spec_;'), (284, '  ::google::protobuf::internal::ArenaStringPtr image_input_;'), (285, '  ::google::protobuf::internal::ArenaStringPtr image_widths_;'), (286, '  ::google::protobuf::internal::ArenaStringPtr image_heights_;'), (287, '  ::google::protobuf::internal::ArenaStringPtr output_layer_;'), (288, '  ::tensorflow::GraphDef *graph_;'), (289, '  ::google::protobuf::int64 global_step_;'), (290, '  ::google::protobuf::int32 depth_;'), (291, '  ::google::protobuf::int32 x_size_;'), (292, '  ::google::protobuf::int32 y_size_;'), (293, '  ::google::protobuf::int32 batch_size_;'), (294, '  ::google::protobuf::int32 num_classes_;'), (295, '  bool using_ctc_;'), (296, '  mutable ::google::protobuf::internal::CachedSize _cached_size_;'), (297, '  friend struct ::protobuf_tfnetwork_2eproto::TableStruct;'), (298, '};'), (299, '// ==================================================================='), (300, ''), (301, '// ==================================================================='), (302, ''), (303, '#ifdef __GNUC__'), (304, '#  pragma GCC diagnostic push'), (305, '#  pragma GCC diagnostic ignored ""-Wstrict-aliasing""'), (306, '#endif // __GNUC__'), (307, '// TFNetworkModel'), (308, ''), (309, '// .tensorflow.GraphDef graph = 1;'), (310, 'inline bool TFNetworkModel::has_graph() const {'), (311, '  return this != internal_default_instance() && graph_ != NULL;'), (312, '}'), (313, 'inline const ::tensorflow::GraphDef &TFNetworkModel::_internal_graph() const {'), (314, '  return *graph_;'), (315, '}'), (316, 'inline const ::tensorflow::GraphDef &TFNetworkModel::graph() const {'), (317, '  const ::tensorflow::GraphDef *p = graph_;'), (318, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.graph)'), (319, '  return p != NULL ? *p'), (320, '                   : *reinterpret_cast<const ::tensorflow::GraphDef *>('), (321, '                         &::tensorflow::_GraphDef_default_instance_);'), (322, '}'), (323, 'inline ::tensorflow::GraphDef *TFNetworkModel::release_graph() {'), (324, '  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.graph)'), (325, ''), (326, '  ::tensorflow::GraphDef *temp = graph_;'), (327, '  graph_ = NULL;'), (328, '  return temp;'), (329, '}'), (330, 'inline ::tensorflow::GraphDef *TFNetworkModel::mutable_graph() {'), (331, '  if (graph_ == NULL) {'), (332, '    auto *p = CreateMaybeMessage<::tensorflow::GraphDef>(GetArenaNoVirtual());'), (333, '    graph_ = p;'), (334, '  }'), (335, '  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.graph)'), (336, '  return graph_;'), (337, '}'), (338, 'inline void TFNetworkModel::set_allocated_graph(::tensorflow::GraphDef *graph) {'), (339, '  ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();'), (340, '  if (message_arena == NULL) {'), (341, '    delete reinterpret_cast<::google::protobuf::MessageLite *>(graph_);'), (342, '  }'), (343, '  if (graph) {'), (344, '    ::google::protobuf::Arena *submessage_arena ='), (345, '        reinterpret_cast<::google::protobuf::MessageLite *>(graph)->GetArena();'), (346, '    if (message_arena != submessage_arena) {'), (347, '      graph = ::google::protobuf::internal::GetOwnedMessage(message_arena, graph, submessage_arena);'), (348, '    }'), (349, ''), (350, '  } else {'), (351, '  }'), (352, '  graph_ = graph;'), (353, '  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.graph)'), (354, '}'), (355, ''), (356, '// int64 global_step = 2;'), (357, 'inline void TFNetworkModel::clear_global_step() {'), (358, '  global_step_ = GOOGLE_LONGLONG(0);'), (359, '}'), (360, 'inline ::google::protobuf::int64 TFNetworkModel::global_step() const {'), (361, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.global_step)'), (362, '  return global_step_;'), (363, '}'), (364, 'inline void TFNetworkModel::set_global_step(::google::protobuf::int64 value) {'), (365, '  global_step_ = value;'), (366, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.global_step)'), (367, '}'), (368, ''), (369, '// string spec = 3;'), (370, 'inline void TFNetworkModel::clear_spec() {'), (371, '  spec_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (372, '}'), (373, 'inline const ::std::string &TFNetworkModel::spec() const {'), (374, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.spec)'), (375, '  return spec_.GetNoArena();'), (376, '}'), (377, 'inline void TFNetworkModel::set_spec(const ::std::string &value) {'), (378, '  spec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);'), (379, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.spec)'), (380, '}'), (381, '#if LANG_CXX11'), (382, 'inline void TFNetworkModel::set_spec(::std::string &&value) {'), (383, '  spec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (384, '                   ::std::move(value));'), (385, '  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.spec)'), (386, '}'), (387, '#endif'), (388, 'inline void TFNetworkModel::set_spec(const char *value) {'), (389, '  GOOGLE_DCHECK(value != NULL);'), (390, ''), (391, '  spec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (392, '                   ::std::string(value));'), (393, '  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.spec)'), (394, '}'), (395, 'inline void TFNetworkModel::set_spec(const char *value, size_t size) {'), (396, '  spec_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (397, '                   ::std::string(reinterpret_cast<const char *>(value), size));'), (398, '  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.spec)'), (399, '}'), (400, 'inline ::std::string *TFNetworkModel::mutable_spec() {'), (401, '  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.spec)'), (402, '  return spec_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (403, '}'), (404, 'inline ::std::string *TFNetworkModel::release_spec() {'), (405, '  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.spec)'), (406, ''), (407, '  return spec_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (408, '}'), (409, 'inline void TFNetworkModel::set_allocated_spec(::std::string *spec) {'), (410, '  if (spec != NULL) {'), (411, '  } else {'), (412, '  }'), (413, '  spec_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spec);'), (414, '  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.spec)'), (415, '}'), (416, ''), (417, '// int32 depth = 4;'), (418, 'inline void TFNetworkModel::clear_depth() {'), (419, '  depth_ = 0;'), (420, '}'), (421, 'inline ::google::protobuf::int32 TFNetworkModel::depth() const {'), (422, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.depth)'), (423, '  return depth_;'), (424, '}'), (425, 'inline void TFNetworkModel::set_depth(::google::protobuf::int32 value) {'), (426, '  depth_ = value;'), (427, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.depth)'), (428, '}'), (429, ''), (430, '// int32 x_size = 5;'), (431, 'inline void TFNetworkModel::clear_x_size() {'), (432, '  x_size_ = 0;'), (433, '}'), (434, 'inline ::google::protobuf::int32 TFNetworkModel::x_size() const {'), (435, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.x_size)'), (436, '  return x_size_;'), (437, '}'), (438, 'inline void TFNetworkModel::set_x_size(::google::protobuf::int32 value) {'), (439, '  x_size_ = value;'), (440, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.x_size)'), (441, '}'), (442, ''), (443, '// int32 y_size = 6;'), (444, 'inline void TFNetworkModel::clear_y_size() {'), (445, '  y_size_ = 0;'), (446, '}'), (447, 'inline ::google::protobuf::int32 TFNetworkModel::y_size() const {'), (448, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.y_size)'), (449, '  return y_size_;'), (450, '}'), (451, 'inline void TFNetworkModel::set_y_size(::google::protobuf::int32 value) {'), (452, '  y_size_ = value;'), (453, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.y_size)'), (454, '}'), (455, ''), (456, '// int32 batch_size = 8;'), (457, 'inline void TFNetworkModel::clear_batch_size() {'), (458, '  batch_size_ = 0;'), (459, '}'), (460, 'inline ::google::protobuf::int32 TFNetworkModel::batch_size() const {'), (461, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.batch_size)'), (462, '  return batch_size_;'), (463, '}'), (464, 'inline void TFNetworkModel::set_batch_size(::google::protobuf::int32 value) {'), (465, '  batch_size_ = value;'), (466, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.batch_size)'), (467, '}'), (468, ''), (469, '// int32 num_classes = 9;'), (470, 'inline void TFNetworkModel::clear_num_classes() {'), (471, '  num_classes_ = 0;'), (472, '}'), (473, 'inline ::google::protobuf::int32 TFNetworkModel::num_classes() const {'), (474, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.num_classes)'), (475, '  return num_classes_;'), (476, '}'), (477, 'inline void TFNetworkModel::set_num_classes(::google::protobuf::int32 value) {'), (478, '  num_classes_ = value;'), (479, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.num_classes)'), (480, '}'), (481, ''), (482, '// bool using_ctc = 10;'), (483, 'inline void TFNetworkModel::clear_using_ctc() {'), (484, '  using_ctc_ = false;'), (485, '}'), (486, 'inline bool TFNetworkModel::using_ctc() const {'), (487, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.using_ctc)'), (488, '  return using_ctc_;'), (489, '}'), (490, 'inline void TFNetworkModel::set_using_ctc(bool value) {'), (491, '  using_ctc_ = value;'), (492, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.using_ctc)'), (493, '}'), (494, ''), (495, '// string image_input = 11;'), (496, 'inline void TFNetworkModel::clear_image_input() {'), (497, '  image_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (498, '}'), (499, 'inline const ::std::string &TFNetworkModel::image_input() const {'), (500, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.image_input)'), (501, '  return image_input_.GetNoArena();'), (502, '}'), (503, 'inline void TFNetworkModel::set_image_input(const ::std::string &value) {'), (504, '  image_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);'), (505, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.image_input)'), (506, '}'), (507, '#if LANG_CXX11'), (508, 'inline void TFNetworkModel::set_image_input(::std::string &&value) {'), (509, '  image_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (510, '                          ::std::move(value));'), (511, '  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.image_input)'), (512, '}'), (513, '#endif'), (514, 'inline void TFNetworkModel::set_image_input(const char *value) {'), (515, '  GOOGLE_DCHECK(value != NULL);'), (516, ''), (517, '  image_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (518, '                          ::std::string(value));'), (519, '  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.image_input)'), (520, '}'), (521, 'inline void TFNetworkModel::set_image_input(const char *value, size_t size) {'), (522, '  image_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (523, '                          ::std::string(reinterpret_cast<const char *>(value), size));'), (524, '  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.image_input)'), (525, '}'), (526, 'inline ::std::string *TFNetworkModel::mutable_image_input() {'), (527, '  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.image_input)'), (528, '  return image_input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (529, '}'), (530, 'inline ::std::string *TFNetworkModel::release_image_input() {'), (531, '  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.image_input)'), (532, ''), (533, '  return image_input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (534, '}'), (535, 'inline void TFNetworkModel::set_allocated_image_input(::std::string *image_input) {'), (536, '  if (image_input != NULL) {'), (537, '  } else {'), (538, '  }'), (539, '  image_input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (540, '                                   image_input);'), (541, '  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.image_input)'), (542, '}'), (543, ''), (544, '// string image_widths = 12;'), (545, 'inline void TFNetworkModel::clear_image_widths() {'), (546, '  image_widths_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (547, '}'), (548, 'inline const ::std::string &TFNetworkModel::image_widths() const {'), (549, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.image_widths)'), (550, '  return image_widths_.GetNoArena();'), (551, '}'), (552, 'inline void TFNetworkModel::set_image_widths(const ::std::string &value) {'), (553, '  image_widths_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);'), (554, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.image_widths)'), (555, '}'), (556, '#if LANG_CXX11'), (557, 'inline void TFNetworkModel::set_image_widths(::std::string &&value) {'), (558, '  image_widths_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (559, '                           ::std::move(value));'), (560, '  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.image_widths)'), (561, '}'), (562, '#endif'), (563, 'inline void TFNetworkModel::set_image_widths(const char *value) {'), (564, '  GOOGLE_DCHECK(value != NULL);'), (565, ''), (566, '  image_widths_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (567, '                           ::std::string(value));'), (568, '  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.image_widths)'), (569, '}'), (570, 'inline void TFNetworkModel::set_image_widths(const char *value, size_t size) {'), (571, '  image_widths_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (572, '                           ::std::string(reinterpret_cast<const char *>(value), size));'), (573, '  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.image_widths)'), (574, '}'), (575, 'inline ::std::string *TFNetworkModel::mutable_image_widths() {'), (576, '  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.image_widths)'), (577, '  return image_widths_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (578, '}'), (579, 'inline ::std::string *TFNetworkModel::release_image_widths() {'), (580, '  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.image_widths)'), (581, ''), (582, '  return image_widths_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (583, '}'), (584, 'inline void TFNetworkModel::set_allocated_image_widths(::std::string *image_widths) {'), (585, '  if (image_widths != NULL) {'), (586, '  } else {'), (587, '  }'), (588, '  image_widths_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (589, '                                    image_widths);'), (590, '  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.image_widths)'), (591, '}'), (592, ''), (593, '// string image_heights = 13;'), (594, 'inline void TFNetworkModel::clear_image_heights() {'), (595, '  image_heights_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (596, '}'), (597, 'inline const ::std::string &TFNetworkModel::image_heights() const {'), (598, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.image_heights)'), (599, '  return image_heights_.GetNoArena();'), (600, '}'), (601, 'inline void TFNetworkModel::set_image_heights(const ::std::string &value) {'), (602, '  image_heights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);'), (603, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.image_heights)'), (604, '}'), (605, '#if LANG_CXX11'), (606, 'inline void TFNetworkModel::set_image_heights(::std::string &&value) {'), (607, '  image_heights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (608, '                            ::std::move(value));'), (609, '  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.image_heights)'), (610, '}'), (611, '#endif'), (612, 'inline void TFNetworkModel::set_image_heights(const char *value) {'), (613, '  GOOGLE_DCHECK(value != NULL);'), (614, ''), (615, '  image_heights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (616, '                            ::std::string(value));'), (617, '  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.image_heights)'), (618, '}'), (619, 'inline void TFNetworkModel::set_image_heights(const char *value, size_t size) {'), (620, '  image_heights_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (621, '                            ::std::string(reinterpret_cast<const char *>(value), size));'), (622, '  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.image_heights)'), (623, '}'), (624, 'inline ::std::string *TFNetworkModel::mutable_image_heights() {'), (625, '  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.image_heights)'), (626, '  return image_heights_.MutableNoArena('), (627, '      &::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (628, '}'), (629, 'inline ::std::string *TFNetworkModel::release_image_heights() {'), (630, '  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.image_heights)'), (631, ''), (632, '  return image_heights_.ReleaseNoArena('), (633, '      &::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (634, '}'), (635, 'inline void TFNetworkModel::set_allocated_image_heights(::std::string *image_heights) {'), (636, '  if (image_heights != NULL) {'), (637, '  } else {'), (638, '  }'), (639, '  image_heights_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (640, '                                     image_heights);'), (641, '  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.image_heights)'), (642, '}'), (643, ''), (644, '// string output_layer = 14;'), (645, 'inline void TFNetworkModel::clear_output_layer() {'), (646, '  output_layer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (647, '}'), (648, 'inline const ::std::string &TFNetworkModel::output_layer() const {'), (649, '  // @@protoc_insertion_point(field_get:tesseract.TFNetworkModel.output_layer)'), (650, '  return output_layer_.GetNoArena();'), (651, '}'), (652, 'inline void TFNetworkModel::set_output_layer(const ::std::string &value) {'), (653, '  output_layer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);'), (654, '  // @@protoc_insertion_point(field_set:tesseract.TFNetworkModel.output_layer)'), (655, '}'), (656, '#if LANG_CXX11'), (657, 'inline void TFNetworkModel::set_output_layer(::std::string &&value) {'), (658, '  output_layer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (659, '                           ::std::move(value));'), (660, '  // @@protoc_insertion_point(field_set_rvalue:tesseract.TFNetworkModel.output_layer)'), (661, '}'), (662, '#endif'), (663, 'inline void TFNetworkModel::set_output_layer(const char *value) {'), (664, '  GOOGLE_DCHECK(value != NULL);'), (665, ''), (666, '  output_layer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (667, '                           ::std::string(value));'), (668, '  // @@protoc_insertion_point(field_set_char:tesseract.TFNetworkModel.output_layer)'), (669, '}'), (670, 'inline void TFNetworkModel::set_output_layer(const char *value, size_t size) {'), (671, '  output_layer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (672, '                           ::std::string(reinterpret_cast<const char *>(value), size));'), (673, '  // @@protoc_insertion_point(field_set_pointer:tesseract.TFNetworkModel.output_layer)'), (674, '}'), (675, 'inline ::std::string *TFNetworkModel::mutable_output_layer() {'), (676, '  // @@protoc_insertion_point(field_mutable:tesseract.TFNetworkModel.output_layer)'), (677, '  return output_layer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (678, '}'), (679, 'inline ::std::string *TFNetworkModel::release_output_layer() {'), (680, '  // @@protoc_insertion_point(field_release:tesseract.TFNetworkModel.output_layer)'), (681, ''), (682, '  return output_layer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());'), (683, '}'), (684, 'inline void TFNetworkModel::set_allocated_output_layer(::std::string *output_layer) {'), (685, '  if (output_layer != NULL) {'), (686, '  } else {'), (687, '  }'), (688, '  output_layer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),'), (689, '                                    output_layer);'), (690, '  // @@protoc_insertion_point(field_set_allocated:tesseract.TFNetworkModel.output_layer)'), (691, '}'), (692, ''), (693, '#ifdef __GNUC__'), (694, '#  pragma GCC diagnostic pop'), (695, '#endif // __GNUC__'), (696, ''), (697, '// @@protoc_insertion_point(namespace_scope)'), (698, ''), (699, '} // namespace tesseract'), (700, ''), (701, '// @@protoc_insertion_point(global_scope)'), (702, ''), (703, '#endif // PROTOBUF_INCLUDED_tfnetwork_2eproto')]}",yes
src\lstm\tfnetwork.proto,,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,74 +0,0 @@
-// Protocol description for Tesseract
-
-// Compile this file with the Protocol Compiler protoc to generate
-// the files tfnetwork.pb.cc and tfnetwork.pb.h.
-
-// This requires the protocol descriptions for TensorFlow
-// (included in the TensorFlow sources).
-
-// With TensorFlow sources installed in /usr/src/tensorflow/tensorflow-1.10.1,
-// this command was used on Debian to generate the files:
-
-// protoc --cpp_out=$PWD --proto_path=/usr/src/tensorflow/tensorflow-1.10.1 \
-//                       --proto_path=$PWD src/lstm/tfnetwork.proto
-
-syntax = ""proto3"";
-
-package tesseract;
-
-import ""tensorflow/core/framework/graph.proto"";
-
-// This proto is the interface between a python TF graph builder/trainer and
-// the C++ world. The writer of this proto must provide fields as documented
-// by the comments below.
-// The graph must have a placeholder for NetworkIO, Widths and Heights. The
-// following python code creates the appropriate placeholders:
-//
-//   input_layer = tf.placeholder(tf.float32,
-//                                shape=[batch_size, xsize, ysize, depth_dim],
-//                                name='NetworkIO')
-//   widths = tf.placeholder(tf.int32, shape=[batch_size], name='Widths')
-//   heights = tf.placeholder(tf.int32, shape=[batch_size], name='Heights')
-//   # Flip x and y to the TF convention.
-//   input_layer = tf.transpose(input_layer, [0, 2, 1, 3])
-//
-// The widths and heights will be set to indicate the post-scaling size of the
-// input image(s).
-// For now batch_size is ignored and set to 1.
-// The graph should return a 2-dimensional float32 tensor called 'softmax' of
-// shape [sequence_length, num_classes], where sequence_length is allowed to
-// be variable, given by the tensor itself.
-// TODO(rays) determine whether it is worth providing for batch_size >1 and if
-// so, how.
-message TFNetworkModel {
-  // The TF graph definition. Required.
-  tensorflow.GraphDef graph = 1;
-  // The training index. Required to be > 0.
-  int64 global_step = 2;
-  // The original network definition for reference. Optional
-  string spec = 3;
-  // Input tensor parameters.
-  // Values per pixel. Required to be 1 or 3. Inputs assumed to be float32.
-  int32 depth = 4;
-  // Image size. Required. Zero implies flexible sizes, fixed if non-zero.
-  // If x_size > 0, images will be cropped/padded to the given size, after
-  //                any scaling required by the y_size.
-  // If y_size > 0, images will be scaled isotropically to the given height.
-  int32 x_size = 5;
-  int32 y_size = 6;
-  // Number of images in a batch. Optional.
-  int32 batch_size = 8;
-  // Output tensor parameters.
-  // Number of output classes. Required to match the depth of the softmax.
-  int32 num_classes = 9;
-  // True if this network needs CTC-like decoding, dropping duplicated labels.
-  // The decoder always drops the null character.
-  bool using_ctc = 10;
-  // Name of input image tensor.
-  string image_input = 11;
-  // Name of image height and width tensors.
-  string image_widths = 12;
-  string image_heights = 13;
-  // Name of output (softmax) tensor.
-  string output_layer = 14;
-}
","{'added': [], 'deleted': [(1, '// Protocol description for Tesseract'), (2, ''), (3, '// Compile this file with the Protocol Compiler protoc to generate'), (4, '// the files tfnetwork.pb.cc and tfnetwork.pb.h.'), (5, ''), (6, '// This requires the protocol descriptions for TensorFlow'), (7, '// (included in the TensorFlow sources).'), (8, ''), (9, '// With TensorFlow sources installed in /usr/src/tensorflow/tensorflow-1.10.1,'), (10, '// this command was used on Debian to generate the files:'), (11, ''), (12, '// protoc --cpp_out=$PWD --proto_path=/usr/src/tensorflow/tensorflow-1.10.1 \\'), (13, '//                       --proto_path=$PWD src/lstm/tfnetwork.proto'), (14, ''), (15, 'syntax = ""proto3"";'), (16, ''), (17, 'package tesseract;'), (18, ''), (19, 'import ""tensorflow/core/framework/graph.proto"";'), (20, ''), (21, '// This proto is the interface between a python TF graph builder/trainer and'), (22, '// the C++ world. The writer of this proto must provide fields as documented'), (23, '// by the comments below.'), (24, '// The graph must have a placeholder for NetworkIO, Widths and Heights. The'), (25, '// following python code creates the appropriate placeholders:'), (26, '//'), (27, '//   input_layer = tf.placeholder(tf.float32,'), (28, '//                                shape=[batch_size, xsize, ysize, depth_dim],'), (29, ""//                                name='NetworkIO')""), (30, ""//   widths = tf.placeholder(tf.int32, shape=[batch_size], name='Widths')""), (31, ""//   heights = tf.placeholder(tf.int32, shape=[batch_size], name='Heights')""), (32, '//   # Flip x and y to the TF convention.'), (33, '//   input_layer = tf.transpose(input_layer, [0, 2, 1, 3])'), (34, '//'), (35, '// The widths and heights will be set to indicate the post-scaling size of the'), (36, '// input image(s).'), (37, '// For now batch_size is ignored and set to 1.'), (38, ""// The graph should return a 2-dimensional float32 tensor called 'softmax' of""), (39, '// shape [sequence_length, num_classes], where sequence_length is allowed to'), (40, '// be variable, given by the tensor itself.'), (41, '// TODO(rays) determine whether it is worth providing for batch_size >1 and if'), (42, '// so, how.'), (43, 'message TFNetworkModel {'), (44, '  // The TF graph definition. Required.'), (45, '  tensorflow.GraphDef graph = 1;'), (46, '  // The training index. Required to be > 0.'), (47, '  int64 global_step = 2;'), (48, '  // The original network definition for reference. Optional'), (49, '  string spec = 3;'), (50, '  // Input tensor parameters.'), (51, '  // Values per pixel. Required to be 1 or 3. Inputs assumed to be float32.'), (52, '  int32 depth = 4;'), (53, '  // Image size. Required. Zero implies flexible sizes, fixed if non-zero.'), (54, '  // If x_size > 0, images will be cropped/padded to the given size, after'), (55, '  //                any scaling required by the y_size.'), (56, '  // If y_size > 0, images will be scaled isotropically to the given height.'), (57, '  int32 x_size = 5;'), (58, '  int32 y_size = 6;'), (59, '  // Number of images in a batch. Optional.'), (60, '  int32 batch_size = 8;'), (61, '  // Output tensor parameters.'), (62, '  // Number of output classes. Required to match the depth of the softmax.'), (63, '  int32 num_classes = 9;'), (64, '  // True if this network needs CTC-like decoding, dropping duplicated labels.'), (65, '  // The decoder always drops the null character.'), (66, '  bool using_ctc = 10;'), (67, '  // Name of input image tensor.'), (68, '  string image_input = 11;'), (69, '  // Name of image height and width tensors.'), (70, '  string image_widths = 12;'), (71, '  string image_heights = 13;'), (72, '  // Name of output (softmax) tensor.'), (73, '  string output_layer = 14;'), (74, '}')]}",yes
src\training\unicharset\lstmtrainer.cpp,src\training\unicharset\lstmtrainer.cpp,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -36,9 +36,6 @@
 #include ""networkbuilder.h""
 #include ""ratngs.h""
 #include ""recodebeam.h""
-#ifdef INCLUDE_TENSORFLOW
-#  include ""tfnetwork.h""
-#endif
 #include ""tprintf.h""
 
 namespace tesseract {
@@ -186,23 +183,6 @@ bool LSTMTrainer::InitNetwork(const char *network_spec, int append_index,
   return true;
 }
 
-// Initializes a trainer from a serialized TFNetworkModel proto.
-// Returns the global step of TensorFlow graph or 0 if failed.
-#ifdef INCLUDE_TENSORFLOW
-int LSTMTrainer::InitTensorFlowNetwork(const std::string &tf_proto) {
-  delete network_;
-  TFNetwork *tf_net = new TFNetwork(""TensorFlow"");
-  training_iteration_ = tf_net->InitFromProtoStr(tf_proto);
-  if (training_iteration_ == 0) {
-    tprintf(""InitFromProtoStr failed!!\n"");
-    return 0;
-  }
-  network_ = tf_net;
-  ASSERT_HOST(recoder_.code_range() == tf_net->num_classes());
-  return training_iteration_;
-}
-#endif
-
 // Resets all the iteration counters for fine tuning or traininng a head,
 // where we want the error reporting to reset.
 void LSTMTrainer::InitIterations() {
","{'added': [], 'deleted': [(39, '#ifdef INCLUDE_TENSORFLOW'), (40, '#  include ""tfnetwork.h""'), (41, '#endif'), (189, '// Initializes a trainer from a serialized TFNetworkModel proto.'), (190, '// Returns the global step of TensorFlow graph or 0 if failed.'), (191, '#ifdef INCLUDE_TENSORFLOW'), (192, 'int LSTMTrainer::InitTensorFlowNetwork(const std::string &tf_proto) {'), (193, '  delete network_;'), (194, '  TFNetwork *tf_net = new TFNetwork(""TensorFlow"");'), (195, '  training_iteration_ = tf_net->InitFromProtoStr(tf_proto);'), (196, '  if (training_iteration_ == 0) {'), (197, '    tprintf(""InitFromProtoStr failed!!\\n"");'), (198, '    return 0;'), (199, '  }'), (200, '  network_ = tf_net;'), (201, '  ASSERT_HOST(recoder_.code_range() == tf_net->num_classes());'), (202, '  return training_iteration_;'), (203, '}'), (204, '#endif'), (205, '')]}",yes
src\training\unicharset\lstmtrainer.h,src\training\unicharset\lstmtrainer.h,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -119,10 +119,6 @@ public:
   bool InitNetwork(const char *network_spec, int append_index, int net_flags,
                    float weight_range, float learning_rate, float momentum,
                    float adam_beta);
-  // Initializes a trainer from a serialized TFNetworkModel proto.
-  // Returns the global step of TensorFlow graph or 0 if failed.
-  // Building a compatible TF graph: See tfnetwork.proto.
-  int InitTensorFlowNetwork(const std::string &tf_proto);
   // Resets all the iteration counters for fine tuning or training a head,
   // where we want the error reporting to reset.
   void InitIterations();
","{'added': [], 'deleted': [(122, '  // Initializes a trainer from a serialized TFNetworkModel proto.'), (123, '  // Returns the global step of TensorFlow graph or 0 if failed.'), (124, '  // Building a compatible TF graph: See tfnetwork.proto.'), (125, '  int InitTensorFlowNetwork(const std::string &tf_proto);')]}",yes
tesseract.pc.cmake,tesseract.pc.cmake,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -8,6 +8,6 @@ Description: An OCR Engine that was developed at HP Labs (1985-1995) and Google
 URL: https://github.com/tesseract-ocr/tesseract
 Version: @tesseract_VERSION@
 Requires.private: lept
-Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
+Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@
 Libs.private:
 Cflags: -I${includedir}
","{'added': [(11, 'Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@')], 'deleted': [(11, 'Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@')]}",yes
tesseract.pc.in,tesseract.pc.in,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -11,6 +11,6 @@ Description: An OCR Engine that was developed at HP Labs (1985-1995) and Google
 URL: https://github.com/tesseract-ocr/tesseract
 Version: @VERSION@
 Requires.private: lept
-Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
+Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@
 Libs.private: -lpthread
 Cflags: -I${includedir}
","{'added': [(14, 'Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@')], 'deleted': [(14, 'Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@')]}",yes
unittest\third_party\utf\utfdef.h,,d7c0a05ffa526bf794c4fd14095b10bef69c04d3,daaa902a5e78e9ff8f64262a4849d44d02539119,"Remove Tensorflow support

Tensorflow was never used because of missing models.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,14 +0,0 @@
-#define uchar _utfuchar
-#define ushort _utfushort
-#define uint _utfuint
-#define ulong _utfulong
-#define vlong _utfvlong
-#define uvlong _utfuvlong
-
-typedef unsigned char uchar;
-typedef unsigned short ushort;
-typedef unsigned int uint;
-typedef unsigned long ulong;
-
-#define nelem(x) (sizeof(x) / sizeof((x)[0]))
-#define nil ((void *)0)
","{'added': [], 'deleted': [(1, '#define uchar _utfuchar'), (2, '#define ushort _utfushort'), (3, '#define uint _utfuint'), (4, '#define ulong _utfulong'), (5, '#define vlong _utfvlong'), (6, '#define uvlong _utfuvlong'), (7, ''), (8, 'typedef unsigned char uchar;'), (9, 'typedef unsigned short ushort;'), (10, 'typedef unsigned int uint;'), (11, 'typedef unsigned long ulong;'), (12, ''), (13, '#define nelem(x) (sizeof(x) / sizeof((x)[0]))'), (14, '#define nil ((void *)0)')]}",yes
doc\tesseract.1.asc,doc\tesseract.1.asc,daaa902a5e78e9ff8f64262a4849d44d02539119,d1b89204ecd553f4d01fa4a5ae8339e57cb9b2cd,"Update documentation on history of development

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -15,7 +15,7 @@ DESCRIPTION
 tesseract(1) is a commercial quality OCR engine originally developed at HP
 between 1985 and 1995. In 1995, this engine was among the top 3 evaluated by
 UNLV. It was open-sourced by HP and UNLV in 2005, and has been developed
-at Google since then.
+at Google until 2018.
 
 
 IN/OUT ARGUMENTS
","{'added': [(18, 'at Google until 2018.')], 'deleted': [(18, 'at Google since then.')]}",yes
tesseract.pc.cmake,tesseract.pc.cmake,daaa902a5e78e9ff8f64262a4849d44d02539119,d1b89204ecd553f4d01fa4a5ae8339e57cb9b2cd,"Update documentation on history of development

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -4,7 +4,7 @@ libdir=@CMAKE_INSTALL_FULL_LIBDIR@
 includedir=@CMAKE_INSTALL_FULL_INCLUDEDIR@
 
 Name: @tesseract_NAME@
-Description: An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.
+Description: An OCR Engine that was developed at HP Labs (1985-1995) and Google (2006-2018).
 URL: https://github.com/tesseract-ocr/tesseract
 Version: @tesseract_VERSION@
 Requires.private: lept
","{'added': [(7, 'Description: An OCR Engine that was developed at HP Labs (1985-1995) and Google (2006-2018).')], 'deleted': [(7, 'Description: An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.')]}",yes
tesseract.pc.in,tesseract.pc.in,daaa902a5e78e9ff8f64262a4849d44d02539119,d1b89204ecd553f4d01fa4a5ae8339e57cb9b2cd,"Update documentation on history of development

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -7,7 +7,7 @@ libdir=@libdir@
 includedir=@includedir@
 
 Name: @PACKAGE_NAME@
-Description: An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.
+Description: An OCR Engine that was developed at HP Labs (1985-1995) and Google (2006-2018).
 URL: https://github.com/tesseract-ocr/tesseract
 Version: @VERSION@
 Requires.private: lept
","{'added': [(10, 'Description: An OCR Engine that was developed at HP Labs (1985-1995) and Google (2006-2018).')], 'deleted': [(10, 'Description: An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.')]}",yes
README.md,README.md,d1b89204ecd553f4d01fa4a5ae8339e57cb9b2cd,e3ac3fce2dea35b4e1b54424f01f0e0f177b4212,Update README.md: Remove CI badges,"@@ -1,7 +1,5 @@
 # Tesseract OCR
 
-[![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
-[![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
 [![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/security/code-scanning)
 [![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://issues.oss-fuzz.com/issues?q=is:open%20title:tesseract-ocr)
","{'added': [], 'deleted': [(3, '[![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)'), (4, '[![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\\')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,e3ac3fce2dea35b4e1b54424f01f0e0f177b4212,d2f311bf7c349e6f4a998e7bfa8c1f47e48cc599,"Run GitHub action sw less often

It is no longer run on push or pull requests.
The scheduled runs are reduced from daily to every 3rd day.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,23 +1,9 @@
 name: sw
 
 on:
-  push:
-    paths:
-      - '**.cpp'
-      - '**.h'
-      - '**/sw.yml'
-      - 'unittest/**.c'
-      - 'unittest/**.cc'
-  pull_request:
-    paths:
-      - '**.cpp'
-      - '**.h'
-      - '**/sw.yml'
-      - 'unittest/**.c'
-      - 'unittest/**.cc'
   schedule:
-    # every day
-    - cron: 0 0 * * *
+    # every 3rd day
+    - cron: 0 0 */3 * *
 
 jobs:
   build:
","{'added': [(5, '    # every 3rd day'), (6, '    - cron: 0 0 */3 * *')], 'deleted': [(4, '  push:'), (5, '    paths:'), (6, ""      - '**.cpp'""), (7, ""      - '**.h'""), (8, ""      - '**/sw.yml'""), (9, ""      - 'unittest/**.c'""), (10, ""      - 'unittest/**.cc'""), (11, '  pull_request:'), (12, '    paths:'), (13, ""      - '**.cpp'""), (14, ""      - '**.h'""), (15, ""      - '**/sw.yml'""), (16, ""      - 'unittest/**.c'""), (17, ""      - 'unittest/**.cc'""), (19, '    # every day'), (20, '    - cron: 0 0 * * *')]}",yes
nsis\build.sh,nsis\build.sh,d2f311bf7c349e6f4a998e7bfa8c1f47e48cc599,4bd94c6147da2e8661f283f53147ae80e4d96ce0,"Get the right compiler DLL files for the Windows installer

libstdc++-6.dll and libgcc_s_seh-1.dll must be taken from the compiler
directory, not from the pacman DLLs.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -103,6 +103,8 @@ source venv/bin/activate
 pip install pefile
 mkdir -p dll
 ln -sv $(""$ROOTDIR/nsis/find_deps.py"" ""$MINGW_INSTALL""/bin/*.exe ""$MINGW_INSTALL""/bin/*.dll) dll/
+ln -svf /usr/lib/gcc/x86_64-w64-mingw32/*-win32/libstdc++-6.dll dll/
+ln -svf /usr/lib/gcc/x86_64-w64-mingw32/*-win32/libgcc_s_seh-1.dll dll/
 make winsetup prefix=""$MINGW_INSTALL""
 
 # Copy result for upload.
","{'added': [(106, 'ln -svf /usr/lib/gcc/x86_64-w64-mingw32/*-win32/libstdc++-6.dll dll/'), (107, 'ln -svf /usr/lib/gcc/x86_64-w64-mingw32/*-win32/libgcc_s_seh-1.dll dll/')], 'deleted': []}",yes
nsis\build.sh,nsis\build.sh,4bd94c6147da2e8661f283f53147ae80e4d96ce0,708621a2ab3e6ca867d5b75c87d66f54291fa23e,"Make sure that required packages are installed for build of Windows installer

The build process needs the packages curl, python3-venv and unzip
which are missing in the Docker image for Ubuntu.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -28,10 +28,10 @@ PKG_ARCH=mingw-w64-${ARCH/_/-}
 # Install packages.
 sudo apt-get update --quiet
 sudo apt-get install --assume-yes --no-install-recommends --quiet \
-  asciidoc xsltproc docbook-xml docbook-xsl \
+  asciidoc curl xsltproc docbook-xml docbook-xsl \
   automake dpkg-dev libtool pkg-config default-jdk-headless \
   mingw-w64-tools nsis g++-""$PKG_ARCH"" \
-  makepkg pacman-package-manager
+  makepkg pacman-package-manager python3-venv unzip
 
 # Configure pacman.
 
","{'added': [(31, '  asciidoc curl xsltproc docbook-xml docbook-xsl \\'), (34, '  makepkg pacman-package-manager python3-venv unzip')], 'deleted': [(31, '  asciidoc xsltproc docbook-xml docbook-xsl \\'), (34, '  makepkg pacman-package-manager')]}",yes
.github\workflows\pkg-config-crosswrapper,,708621a2ab3e6ca867d5b75c87d66f54291fa23e,3ec34f1755313a22483bf3f5958852f002ceadd0,"Remove unneeded pkg-config-crosswrapper

The Debian package mingw-w64-tools already contains the required
/usr/bin/x86_64-w64-mingw32-pkg-config.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,54 +0,0 @@
-#! /bin/sh
-# pkg-config wrapper for cross-building
-# Sets pkg-config search path to search multiarch and historical cross-compiling paths.
-
-# If the user has already set PKG_CONFIG_LIBDIR, believe it (even if empty):
-# it's documented to be an override
-if [ x""${PKG_CONFIG_LIBDIR+set}"" = x ]; then
-  # GNU triplet for the compiler, e.g. i486-linux-gnu for Debian i386,
-  # i686-linux-gnu for Ubuntu i386
-  basename=""$(basename ""$0"")""
-  triplet=""${basename%-pkg-config}""
-  # Normalized multiarch path if any, e.g. i386-linux-gnu for i386
-  dpkg-architecture >/dev/null 2>&1
-  if [ ""$?"" != 0 ]; then
-      # dpkg-architecture is missing.
-      echo ""Please install dpkg-dev to use pkg-config when cross-building"" >&2
-      exit 1
-  fi
-  multiarch=""$(dpkg-architecture -t""${triplet}"" -qDEB_HOST_MULTIARCH 2>/dev/null)""
-  # Native multiarch path
-  native_multiarch=""$(cat /usr/lib/pkg-config.multiarch)""
-
-  # This can be used for native builds as well, in that case, just exec pkg-config ""$@"" directly.
-  if [ ""$native_multiarch"" = ""$multiarch"" ]; then
-     exec pkg-config ""$@""
-  fi
-
-  PKG_CONFIG_LIBDIR=""/usr/local/${triplet}/lib/pkgconfig""
-  # For a native build we would also want to append /usr/local/lib/pkgconfig
-  # at this point; but this is a cross-building script, so don't
-  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/local/share/pkgconfig""
-
-  if [ -n ""$multiarch"" ]; then
-    PKG_CONFIG_LIBDIR=""/usr/local/lib/${multiarch}/pkgconfig:$PKG_CONFIG_LIBDIR""
-    PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/${multiarch}/pkgconfig""
-  fi
-
-  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/${triplet}/lib/pkgconfig""
-  # For a native build we would also want to append /usr/lib/pkgconfig
-  # at this point; but this is a cross-building script, so don't
-  # If you want to allow use of un-multiarched -dev packages for crossing
-  # (at the risk of finding build-arch stuff you didn't want, if not in a clean chroot)
-  # Uncomment the next line:
-  # PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/pkgconfig""
-  # ... but on Ubuntu we rely cross-building with non-multiarch libraries:
-  if dpkg-vendor --derives-from Ubuntu; then
-      PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/pkgconfig""
-  fi
-  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/share/pkgconfig""
-
-  export PKG_CONFIG_LIBDIR
-fi
-
-exec pkg-config ""$@""
","{'added': [], 'deleted': [(1, '#! /bin/sh'), (2, '# pkg-config wrapper for cross-building'), (3, '# Sets pkg-config search path to search multiarch and historical cross-compiling paths.'), (4, ''), (5, '# If the user has already set PKG_CONFIG_LIBDIR, believe it (even if empty):'), (6, ""# it's documented to be an override""), (7, 'if [ x""${PKG_CONFIG_LIBDIR+set}"" = x ]; then'), (8, '  # GNU triplet for the compiler, e.g. i486-linux-gnu for Debian i386,'), (9, '  # i686-linux-gnu for Ubuntu i386'), (10, '  basename=""$(basename ""$0"")""'), (11, '  triplet=""${basename%-pkg-config}""'), (12, '  # Normalized multiarch path if any, e.g. i386-linux-gnu for i386'), (13, '  dpkg-architecture >/dev/null 2>&1'), (14, '  if [ ""$?"" != 0 ]; then'), (15, '      # dpkg-architecture is missing.'), (16, '      echo ""Please install dpkg-dev to use pkg-config when cross-building"" >&2'), (17, '      exit 1'), (18, '  fi'), (19, '  multiarch=""$(dpkg-architecture -t""${triplet}"" -qDEB_HOST_MULTIARCH 2>/dev/null)""'), (20, '  # Native multiarch path'), (21, '  native_multiarch=""$(cat /usr/lib/pkg-config.multiarch)""'), (22, ''), (23, '  # This can be used for native builds as well, in that case, just exec pkg-config ""$@"" directly.'), (24, '  if [ ""$native_multiarch"" = ""$multiarch"" ]; then'), (25, '     exec pkg-config ""$@""'), (26, '  fi'), (27, ''), (28, '  PKG_CONFIG_LIBDIR=""/usr/local/${triplet}/lib/pkgconfig""'), (29, '  # For a native build we would also want to append /usr/local/lib/pkgconfig'), (30, ""  # at this point; but this is a cross-building script, so don't""), (31, '  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/local/share/pkgconfig""'), (32, ''), (33, '  if [ -n ""$multiarch"" ]; then'), (34, '    PKG_CONFIG_LIBDIR=""/usr/local/lib/${multiarch}/pkgconfig:$PKG_CONFIG_LIBDIR""'), (35, '    PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/${multiarch}/pkgconfig""'), (36, '  fi'), (37, ''), (38, '  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/${triplet}/lib/pkgconfig""'), (39, '  # For a native build we would also want to append /usr/lib/pkgconfig'), (40, ""  # at this point; but this is a cross-building script, so don't""), (41, '  # If you want to allow use of un-multiarched -dev packages for crossing'), (42, ""  # (at the risk of finding build-arch stuff you didn't want, if not in a clean chroot)""), (43, '  # Uncomment the next line:'), (44, '  # PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/pkgconfig""'), (45, '  # ... but on Ubuntu we rely cross-building with non-multiarch libraries:'), (46, '  if dpkg-vendor --derives-from Ubuntu; then'), (47, '      PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/pkgconfig""'), (48, '  fi'), (49, '  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/share/pkgconfig""'), (50, ''), (51, '  export PKG_CONFIG_LIBDIR'), (52, 'fi'), (53, ''), (54, 'exec pkg-config ""$@""')]}",yes
nsis\build.sh,nsis\build.sh,708621a2ab3e6ca867d5b75c87d66f54291fa23e,3ec34f1755313a22483bf3f5958852f002ceadd0,"Remove unneeded pkg-config-crosswrapper

The Debian package mingw-w64-tools already contains the required
/usr/bin/x86_64-w64-mingw32-pkg-config.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -76,8 +76,6 @@ sudo pacman -S --noconfirm \
  mingw-w64-x86_64-libtiff \
  mingw-w64-x86_64-libwebp
 
-sudo ln -sf ""$PWD/.github/workflows/pkg-config-crosswrapper"" ""/usr/bin/$HOST-pkg-config""
-
 git config --global user.email ""sw@weilnetz.de""
 git config --global user.name ""Stefan Weil""
 git tag -a ""v$TAG"" -m ""Tesseract $TAG""
","{'added': [], 'deleted': [(79, 'sudo ln -sf ""$PWD/.github/workflows/pkg-config-crosswrapper"" ""/usr/bin/$HOST-pkg-config""'), (80, '')]}",yes
nsis\tesseract.nsi,nsis\tesseract.nsi,3ec34f1755313a22483bf3f5958852f002ceadd0,914a9589aae5b9292afbb194fb8372f22bf227eb,"Don't install tesseract.exe twice in Tesseract installer for Windows

The pattern for the training tools *.exe also includes tesseract.exe,
so it must be excluded explicitly.

Add also a macro BINDIR which simplifies the NSIS rules.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -75,7 +75,7 @@ OutFile ${OUTFILE}
 !ifndef PREFIX
 !define PREFIX ""../mingw64""
 !endif
-!define TRAININGDIR ""${PREFIX}/bin""
+!define BINDIR ""${PREFIX}/bin""
 
 # General Definitions
 Name ""${PRODUCT_NAME}""
@@ -202,8 +202,8 @@ Section -Main SEC0000
   SectionIn RO
   SetOutPath ""$INSTDIR""
   # files included in distribution
-  File ${PREFIX}/bin/tesseract.exe
-  File ${PREFIX}/bin/libtesseract-*.dll
+  File ${BINDIR}/tesseract.exe
+  File ${BINDIR}/libtesseract-*.dll
 !ifdef CROSSBUILD
   File ../dll/*.dll
 !endif
@@ -236,7 +236,7 @@ SectionEnd
 Section ""Training Tools"" SecTr
   SectionIn 1
   SetOutPath ""$INSTDIR""
-  File ${TRAININGDIR}\*.exe
+  File /x tesseract.exe ${BINDIR}/*.exe
 SectionEnd
 
 !define UNINST_EXE ""$INSTDIR\tesseract-uninstall.exe""
","{'added': [(78, '!define BINDIR ""${PREFIX}/bin""'), (205, '  File ${BINDIR}/tesseract.exe'), (206, '  File ${BINDIR}/libtesseract-*.dll'), (239, '  File /x tesseract.exe ${BINDIR}/*.exe')], 'deleted': [(78, '!define TRAININGDIR ""${PREFIX}/bin""'), (205, '  File ${PREFIX}/bin/tesseract.exe'), (206, '  File ${PREFIX}/bin/libtesseract-*.dll'), (239, '  File ${TRAININGDIR}\\*.exe')]}",yes
nsis\build.sh,nsis\build.sh,914a9589aae5b9292afbb194fb8372f22bf227eb,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,"Reduce size of Tesseract installer for Windows

Strip all installed executables and libraries.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -99,7 +99,7 @@ export PKG_CONFIG_PATH
 
 make all training
 MINGW_INSTALL=${PWD}${MINGW}
-make install-jars install training-install html prefix=""$MINGW_INSTALL""
+make install-jars install training-install html prefix=""$MINGW_INSTALL"" INSTALL_STRIP_FLAG=-s
 test -d venv || python3 -m venv venv
 source venv/bin/activate
 pip install pefile
","{'added': [(102, 'make install-jars install training-install html prefix=""$MINGW_INSTALL"" INSTALL_STRIP_FLAG=-s')], 'deleted': [(102, 'make install-jars install training-install html prefix=""$MINGW_INSTALL""')]}",yes
src\ccmain\applybox.cpp,src\ccmain\applybox.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -26,6 +26,7 @@
 #include <tesseract/unichar.h>
 #include ""pageres.h""
 #include ""tesseractclass.h""
+#include ""tesserrstream.h""  // for tesserr
 #include ""unicharset.h""
 
 #ifndef DISABLED_LEGACY_ENGINE
@@ -652,9 +653,10 @@ void Tesseract::SearchForText(const std::vector<BLOB_CHOICE_LIST *> *choices, in
     if (choices_pos + length == choices_length && text_index + 1 == target_text.size()) {
       // This is a complete match. If the rating is good record a new best.
       if (applybox_debug > 2) {
-        tprintf(""Complete match, rating = %g, best=%g, seglength=%zu, best=%zu\n"",
-                rating + choice_rating, *best_rating, segmentation->size(),
-                best_segmentation->size());
+        tesserr << ""Complete match, rating = "" << rating + choice_rating
+                << "", best="" << *best_rating
+                << "", seglength="" << segmentation->size()
+                << "", best="" << best_segmentation->size() << '\n';
       }
       if (best_segmentation->empty() || rating + choice_rating < *best_rating) {
         *best_segmentation = *segmentation;
","{'added': [(29, '#include ""tesserrstream.h""  // for tesserr'), (656, '        tesserr << ""Complete match, rating = "" << rating + choice_rating'), (657, '                << "", best="" << *best_rating'), (658, '                << "", seglength="" << segmentation->size()'), (659, '                << "", best="" << best_segmentation->size() << \'\\n\';')], 'deleted': [(655, '        tprintf(""Complete match, rating = %g, best=%g, seglength=%zu, best=%zu\\n"",'), (656, '                rating + choice_rating, *best_rating, segmentation->size(),'), (657, '                best_segmentation->size());')]}",yes
src\ccmain\paragraphs.cpp,src\ccmain\paragraphs.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -31,6 +31,7 @@
 #include ""ratngs.h""              // for WERD_CHOICE
 #include ""rect.h""                // for TBOX
 #include ""statistc.h""            // for STATS
+#include ""tesserrstream.h""       // for tesserr
 #include ""tprintf.h""             // for tprintf
 #include ""unicharset.h""          // for UNICHARSET
 #include ""werd.h""                // for WERD, W_REP_CHAR
@@ -74,8 +75,8 @@ static bool AcceptableRowArgs(int debug_level, int min_num_rows, const char *fun
                               const std::vector<RowScratchRegisters> *rows, int row_start,
                               int row_end) {
   if (row_start < 0 || static_cast<size_t>(row_end) > rows->size() || row_start > row_end) {
-    tprintf(""Invalid arguments rows[%d, %d) while rows is of size %zu.\n"", row_start, row_end,
-            rows->size());
+    tesserr << ""Invalid arguments rows["" << row_start << "", "" << row_end
+            << "") while rows is of size "" << rows->size() << "".\n"";
     return false;
   }
   if (row_end - row_start < min_num_rows) {
@@ -915,10 +916,9 @@ struct GeometricClassifierState {
     tolerance = InterwordSpace(*r, r_start, r_end);
     CalculateTabStops(r, r_start, r_end, tolerance, &left_tabs, &right_tabs);
     if (debug_level >= 3) {
-      tprintf(
-          ""Geometry: TabStop cluster tolerance = %d; ""
-          ""%zu left tabs; %zu right tabs\n"",
-          tolerance, left_tabs.size(), right_tabs.size());
+      tesserr << ""Geometry: TabStop cluster tolerance = "" << tolerance << ""; ""
+              << left_tabs.size() << "" left tabs; ""
+              << right_tabs.size() << "" right tabs\n"";
     }
     ltr = (*r)[r_start].ri_->ltr;
   }
","{'added': [(34, '#include ""tesserrstream.h""       // for tesserr'), (78, '    tesserr << ""Invalid arguments rows["" << row_start << "", "" << row_end'), (79, '            << "") while rows is of size "" << rows->size() << "".\\n"";'), (919, '      tesserr << ""Geometry: TabStop cluster tolerance = "" << tolerance << ""; ""'), (920, '              << left_tabs.size() << "" left tabs; ""'), (921, '              << right_tabs.size() << "" right tabs\\n"";')], 'deleted': [(77, '    tprintf(""Invalid arguments rows[%d, %d) while rows is of size %zu.\\n"", row_start, row_end,'), (78, '            rows->size());'), (918, '      tprintf('), (919, '          ""Geometry: TabStop cluster tolerance = %d; ""'), (920, '          ""%zu left tabs; %zu right tabs\\n"",'), (921, '          tolerance, left_tabs.size(), right_tabs.size());')]}",yes
src\ccstruct\detlinefit.cpp,src\ccstruct\detlinefit.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,9 +17,9 @@
 ///////////////////////////////////////////////////////////////////////
 
 #include ""detlinefit.h""
-#include ""helpers.h""    // for IntCastRounded
+#include ""helpers.h""        // for IntCastRounded
 #include ""statistc.h""
-#include ""tprintf.h""
+#include ""tesserrstream.h""  // for tesserr
 
 #include <algorithm>
 #include <cfloat> // for FLT_MAX
@@ -143,13 +143,17 @@ double DetLineFit::ConstrainedFit(const FCOORD &direction, double min_dist, doub
   std::nth_element(distances_.begin(), distances_.begin() + median_index, distances_.end());
   *line_pt = distances_[median_index].data();
   if (debug) {
-    tprintf(""Constrained fit to dir %g, %g = %d, %d :%zu distances:\n"", direction.x(), direction.y(),
-            line_pt->x(), line_pt->y(), distances_.size());
+    tesserr << ""Constrained fit to dir "" << direction.x() << "", ""
+            << direction.y() << "" = ""
+            << line_pt->x() << "", "" << line_pt->y()
+            << "" :"" << distances_.size() << "" distances:\n"";
     for (unsigned i = 0; i < distances_.size(); ++i) {
-      tprintf(""%d: %d, %d -> %g\n"", i, distances_[i].data().x(), distances_[i].data().y(),
-              distances_[i].key());
+      tesserr << i << "": ""
+              << distances_[i].data().x() << "", ""
+              << distances_[i].data().y() << "" -> ""
+              << distances_[i].key() << '\n';
     }
-    tprintf(""Result = %zu\n"", median_index);
+    tesserr << ""Result = "" << median_index << '\n';
   }
   // Center distances on the fitted point.
   double dist_origin = direction * *line_pt;
","{'added': [(20, '#include ""helpers.h""        // for IntCastRounded'), (22, '#include ""tesserrstream.h""  // for tesserr'), (146, '    tesserr << ""Constrained fit to dir "" << direction.x() << "", ""'), (147, '            << direction.y() << "" = ""'), (148, '            << line_pt->x() << "", "" << line_pt->y()'), (149, '            << "" :"" << distances_.size() << "" distances:\\n"";'), (151, '      tesserr << i << "": ""'), (152, '              << distances_[i].data().x() << "", ""'), (153, '              << distances_[i].data().y() << "" -> ""'), (154, ""              << distances_[i].key() << '\\n';""), (156, '    tesserr << ""Result = "" << median_index << \'\\n\';')], 'deleted': [(20, '#include ""helpers.h""    // for IntCastRounded'), (22, '#include ""tprintf.h""'), (146, '    tprintf(""Constrained fit to dir %g, %g = %d, %d :%zu distances:\\n"", direction.x(), direction.y(),'), (147, '            line_pt->x(), line_pt->y(), distances_.size());'), (149, '      tprintf(""%d: %d, %d -> %g\\n"", i, distances_[i].data().x(), distances_[i].data().y(),'), (150, '              distances_[i].key());'), (152, '    tprintf(""Result = %zu\\n"", median_index);')]}",yes
src\ccstruct\imagedata.cpp,src\ccstruct\imagedata.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -27,6 +27,7 @@
 #include ""rect.h""       // for TBOX
 #include ""scrollview.h"" // for ScrollView, ScrollView::CYAN, ScrollView::NONE
 #include ""tprintf.h""    // for tprintf
+#include ""tesserrstream.h"" // for tesserr
 
 #include ""helpers.h""  // for IntCastRounded, TRand, ClipToRange, Modulo
 #include ""serialis.h"" // for TFile
@@ -618,9 +619,10 @@ bool DocumentData::ReCachePages() {
     pages_.clear();
   } else if (loaded_pages > 1) {
     // Avoid lots of messages for training with single line images.
-    tprintf(""Loaded %zu/%d lines (%d-%zu) of document %s\n"", pages_.size(),
-            loaded_pages, pages_offset_ + 1, pages_offset_ + pages_.size(),
-            document_name_.c_str());
+    tesserr << ""Loaded "" << pages_.size() << '/' << loaded_pages << "" lines (""
+            << pages_offset_ + 1 << '-'
+            << pages_offset_ + pages_.size() << "") of document ""
+            << document_name_ << '\n';
   }
   set_total_pages(loaded_pages);
   return !pages_.empty();
","{'added': [(30, '#include ""tesserrstream.h"" // for tesserr'), (622, '    tesserr << ""Loaded "" << pages_.size() << \'/\' << loaded_pages << "" lines (""'), (623, ""            << pages_offset_ + 1 << '-'""), (624, '            << pages_offset_ + pages_.size() << "") of document ""'), (625, ""            << document_name_ << '\\n';"")], 'deleted': [(621, '    tprintf(""Loaded %zu/%d lines (%d-%zu) of document %s\\n"", pages_.size(),'), (622, '            loaded_pages, pages_offset_ + 1, pages_offset_ + pages_.size(),'), (623, '            document_name_.c_str());')]}",yes
src\classify\shapetable.h,src\classify\shapetable.h,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -26,6 +26,7 @@
 #include ""fontinfo.h""
 #include ""genericheap.h""
 #include ""intmatcher.h""
+#include ""tesserrstream.h""  // for tesserr
 
 namespace tesseract {
 
@@ -41,10 +42,10 @@ struct UnicharRating {
 
   // Print debug info.
   void Print() const {
-    tprintf(
-        ""Unichar-id=%d, rating=%g, adapted=%d, config=%d, misses=%u,""
-        "" %zu fonts\n"",
-        unichar_id, static_cast<double>(rating), adapted, config, feature_misses, fonts.size());
+    tesserr << ""Unichar-id="" << unichar_id << "", rating="" << rating
+            << "", adapted="" << adapted << "", config="" << config
+            << "", misses="" << feature_misses << "", ""
+            << fonts.size() << "" fonts\n"";
   }
 
   // Helper function to get the index of the first result with the required
","{'added': [(29, '#include ""tesserrstream.h""  // for tesserr'), (45, '    tesserr << ""Unichar-id="" << unichar_id << "", rating="" << rating'), (46, '            << "", adapted="" << adapted << "", config="" << config'), (47, '            << "", misses="" << feature_misses << "", ""'), (48, '            << fonts.size() << "" fonts\\n"";')], 'deleted': [(44, '    tprintf('), (45, '        ""Unichar-id=%d, rating=%g, adapted=%d, config=%d, misses=%u,""'), (46, '        "" %zu fonts\\n"",'), (47, '        unichar_id, static_cast<double>(rating), adapted, config, feature_misses, fonts.size());')]}",yes
src\dict\dict.cpp,src\dict\dict.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -18,6 +18,7 @@
 
 #include ""dict.h""
 
+#include ""tesserrstream.h""  // for tesserr
 #include ""tprintf.h""
 
 #include <cstdio>
@@ -410,10 +411,10 @@ int Dict::def_letter_is_okay(void *void_dawg_args, const UNICHARSET &unicharset,
   ASSERT_HOST(unicharset.contains_unichar_id(unichar_id));
 
   if (dawg_debug_level >= 3) {
-    tprintf(
-        ""def_letter_is_okay: current unichar=%s word_end=%d""
-        "" num active dawgs=%zu\n"",
-        getUnicharset().debug_str(unichar_id).c_str(), word_end, dawg_args->active_dawgs->size());
+    tesserr << ""def_letter_is_okay: current unichar=""
+            << getUnicharset().debug_str(unichar_id)
+            << "" word_end="" << word_end
+            << "" num active dawgs="" << dawg_args->active_dawgs->size() << '\n';
   }
 
   // Do not accept words that contain kPatternUnicharID.
","{'added': [(21, '#include ""tesserrstream.h""  // for tesserr'), (414, '    tesserr << ""def_letter_is_okay: current unichar=""'), (415, '            << getUnicharset().debug_str(unichar_id)'), (416, '            << "" word_end="" << word_end'), (417, '            << "" num active dawgs="" << dawg_args->active_dawgs->size() << \'\\n\';')], 'deleted': [(413, '    tprintf('), (414, '        ""def_letter_is_okay: current unichar=%s word_end=%d""'), (415, '        "" num active dawgs=%zu\\n"",'), (416, '        getUnicharset().debug_str(unichar_id).c_str(), word_end, dawg_args->active_dawgs->size());')]}",yes
src\lstm\series.cpp,src\lstm\series.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -20,6 +20,7 @@
 #include ""fullyconnected.h""
 #include ""networkscratch.h""
 #include ""scrollview.h""
+#include ""tesserrstream.h""  // for tesserr
 #include ""tprintf.h""
 
 namespace tesseract {
@@ -164,7 +165,8 @@ void Series::SplitAt(unsigned last_start, Series **start, Series **end) {
   *start = nullptr;
   *end = nullptr;
   if (last_start >= stack_.size()) {
-    tprintf(""Invalid split index %u must be in range [0,%zu]!\n"", last_start, stack_.size() - 1);
+    tesserr << ""Invalid split index "" << last_start
+            << "" must be in range [0,"" << stack_.size() - 1 << ""]!\n"";
     return;
   }
   auto *master_series = new Series(""MasterSeries"");
","{'added': [(23, '#include ""tesserrstream.h""  // for tesserr'), (168, '    tesserr << ""Invalid split index "" << last_start'), (169, '            << "" must be in range [0,"" << stack_.size() - 1 << ""]!\\n"";')], 'deleted': [(167, '    tprintf(""Invalid split index %u must be in range [0,%zu]!\\n"", last_start, stack_.size() - 1);')]}",yes
src\textord\baselinedetect.cpp,src\textord\baselinedetect.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -34,6 +34,7 @@
 #include ""helpers.h""
 #include ""linlsq.h""
 #include ""makerow.h""
+#include ""tesserrstream.h""  // for tesserr
 #include ""textord.h""
 #include ""tprintf.h""
 #include ""underlin.h""
@@ -671,9 +672,10 @@ bool BaselineBlock::ComputeLineSpacing() {
     }
   }
   if (debug_level_ > 0) {
-    tprintf(""Spacing %g, in %zu rows, %d gaps fitted out of %d non-trivial\n"",
-            line_spacing_, row_positions.size(), fitting_gaps,
-            non_trivial_gaps);
+    tesserr << ""Spacing "" << line_spacing_ << "", in ""
+            << row_positions.size() << "" rows, ""
+            << fitting_gaps << "" gaps fitted out of ""
+            << non_trivial_gaps << "" non-trivial\n"";
   }
   return fitting_gaps > non_trivial_gaps * kMinFittingLinespacings;
 }
","{'added': [(37, '#include ""tesserrstream.h""  // for tesserr'), (675, '    tesserr << ""Spacing "" << line_spacing_ << "", in ""'), (676, '            << row_positions.size() << "" rows, ""'), (677, '            << fitting_gaps << "" gaps fitted out of ""'), (678, '            << non_trivial_gaps << "" non-trivial\\n"";')], 'deleted': [(674, '    tprintf(""Spacing %g, in %zu rows, %d gaps fitted out of %d non-trivial\\n"",'), (675, '            line_spacing_, row_positions.size(), fitting_gaps,'), (676, '            non_trivial_gaps);')]}",yes
src\training\combine_lang_model.cpp,src\training\combine_lang_model.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -19,6 +19,7 @@
 #include ""commandlineflags.h""
 #include ""commontraining.h"" // CheckSharedLibraryVersion
 #include ""lang_model_helpers.h""
+#include ""tesserrstream.h""  // for tesserr
 #include ""tprintf.h""
 #include ""unicharset_training_utils.h""
 
@@ -60,8 +61,8 @@ int main(int argc, char **argv) {
     tprintf(""Failed to load unicharset from %s\n"", FLAGS_input_unicharset.c_str());
     return EXIT_FAILURE;
   }
-  tprintf(""Loaded unicharset of size %zu from file %s\n"", unicharset.size(),
-          FLAGS_input_unicharset.c_str());
+  tesserr << ""Loaded unicharset of size "" << unicharset.size()
+          << "" from file "" << FLAGS_input_unicharset.c_str() << '\n';
 
   // Set unichar properties
   tprintf(""Setting unichar properties\n"");
","{'added': [(22, '#include ""tesserrstream.h""  // for tesserr'), (64, '  tesserr << ""Loaded unicharset of size "" << unicharset.size()'), (65, '          << "" from file "" << FLAGS_input_unicharset.c_str() << \'\\n\';')], 'deleted': [(63, '  tprintf(""Loaded unicharset of size %zu from file %s\\n"", unicharset.size(),'), (64, '          FLAGS_input_unicharset.c_str());')]}",yes
src\training\common\trainingsampleset.cpp,src\training\common\trainingsampleset.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -28,6 +28,7 @@
 #include ""intfeaturemap.h""
 #include ""intfeaturespace.h""
 #include ""shapetable.h""
+#include ""tesserrstream.h""  // for tesserr
 #include ""trainingsample.h""
 #include ""trainingsampleset.h""
 #include ""unicity_table.h""
@@ -566,8 +567,9 @@ void TrainingSampleSet::OrganizeByFontAndClass() {
     int font_id = samples_[s]->font_id();
     int class_id = samples_[s]->class_id();
     if (font_id < 0 || font_id >= font_id_map_.SparseSize()) {
-      tprintf(""Font id = %d/%d, class id = %d/%d on sample %zu\n"", font_id,
-              font_id_map_.SparseSize(), class_id, unicharset_size_, s);
+      tesserr << ""Font id = "" << font_id << '/' << font_id_map_.SparseSize()
+              << "", class id = "" << class_id << '/' << unicharset_size_
+              << "" on sample "" << s << '\n';
     }
     ASSERT_HOST(font_id >= 0 && font_id < font_id_map_.SparseSize());
     ASSERT_HOST(class_id >= 0 && class_id < unicharset_size_);
","{'added': [(31, '#include ""tesserrstream.h""  // for tesserr'), (570, '      tesserr << ""Font id = "" << font_id << \'/\' << font_id_map_.SparseSize()'), (571, '              << "", class id = "" << class_id << \'/\' << unicharset_size_'), (572, '              << "" on sample "" << s << \'\\n\';')], 'deleted': [(569, '      tprintf(""Font id = %d/%d, class id = %d/%d on sample %zu\\n"", font_id,'), (570, '              font_id_map_.SparseSize(), class_id, unicharset_size_, s);')]}",yes
src\training\pango\boxchar.cpp,src\training\pango\boxchar.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -23,6 +23,7 @@
 
 #include ""fileio.h""
 #include ""normstrngs.h""
+#include ""tesserrstream.h""  // for tesserr
 #include ""tprintf.h""
 #include ""unicharset.h""
 #include ""unicode/uchar.h"" // from libicu
@@ -100,7 +101,7 @@ void BoxChar::PrepareToWrite(std::vector<BoxChar *> *boxes) {
   InsertSpaces(rtl_rules, vertical_rules, boxes);
   for (size_t i = 0; i < boxes->size(); ++i) {
     if ((*boxes)[i]->box_ == nullptr) {
-      tprintf(""Null box at index %zu\n"", i);
+      tesserr << ""Null box at index "" << i << '\n';
     }
   }
   if (rtl_rules) {
","{'added': [(26, '#include ""tesserrstream.h""  // for tesserr'), (104, '      tesserr << ""Null box at index "" << i << \'\\n\';')], 'deleted': [(103, '      tprintf(""Null box at index %zu\\n"", i);')]}",yes
src\training\unicharset\unicharset_training_utils.cpp,src\training\unicharset\unicharset_training_utils.cpp,eed339b3ba11a6f4372eba32c00da01ffe8d6ccc,60ed29955015728635fd50598ebb958284232c8a,"Replace some tprintf by tesserr stream (fixes Windows compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -2,7 +2,6 @@
 // File:        unicharset_training_utils.cpp
 // Description: Training utilities for UNICHARSET.
 // Author:      Ray Smith
-// Created:     Fri Oct 17 17:09:01 PDT 2014
 //
 // (C) Copyright 2014, Google Inc.
 // Licensed under the Apache License, Version 2.0 (the ""License"");
@@ -29,6 +28,7 @@
 #include ""icuerrorcode.h""
 #include ""normstrngs.h""
 #include ""statistc.h""
+#include ""tesserrstream.h""   // for tesserr
 #include ""unicharset.h""
 #include ""unicode/uchar.h""   // from libicu
 #include ""unicode/uscript.h"" // from libicu
@@ -189,8 +189,8 @@ void SetPropertiesForInputFile(const std::string &script_dir,
 
   // Load the input unicharset
   unicharset.load_from_file(input_unicharset_file.c_str());
-  tprintf(""Loaded unicharset of size %zu from file %s\n"", unicharset.size(),
-          input_unicharset_file.c_str());
+  tesserr << ""Loaded unicharset of size "" << unicharset.size()
+          << "" from file "" << input_unicharset_file << '\n';
 
   // Set unichar properties
   tprintf(""Setting unichar properties\n"");
","{'added': [(31, '#include ""tesserrstream.h""   // for tesserr'), (192, '  tesserr << ""Loaded unicharset of size "" << unicharset.size()'), (193, '          << "" from file "" << input_unicharset_file << \'\\n\';')], 'deleted': [(5, '// Created:     Fri Oct 17 17:09:01 PDT 2014'), (192, '  tprintf(""Loaded unicharset of size %zu from file %s\\n"", unicharset.size(),'), (193, '          input_unicharset_file.c_str());')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,60ed29955015728635fd50598ebb958284232c8a,b7c7540bd7e1883fdecdf0ebb37b5ca1189d4296,"Make downloads with curl silent in build process

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -125,7 +125,7 @@ jobs:
 
     - name: Install Macports
       run: |
-        curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci; source ./macports-ci install
+        curl -sSLO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci; source ./macports-ci install
         # --remove-brew does not remove the Homebrew entries in bin,
         # so remove them now.
         rm -v $(brew --prefix)/bin/*
","{'added': [(128, '        curl -sSLO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci; source ./macports-ci install')], 'deleted': [(128, '        curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci; source ./macports-ci install')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,60ed29955015728635fd50598ebb958284232c8a,b7c7540bd7e1883fdecdf0ebb37b5ca1189d4296,"Make downloads with curl silent in build process

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -117,8 +117,8 @@ jobs:
       - name: Display Tesseract Version and Test Command Line Usage
         shell: cmd
         run: |
-          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output ${{env.ILOC}}/share/tessdata/eng.traineddata
-          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata
+          curl -sSL https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output ${{env.ILOC}}/share/tessdata/eng.traineddata
+          curl -sSL https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata
           echo ""Setting TESSDATA_PREFIX...""
           set TESSDATA_PREFIX=${{env.ILOC}}/share/tessdata
           echo ""Setting PATH...""
","{'added': [(120, '          curl -sSL https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output ${{env.ILOC}}/share/tessdata/eng.traineddata'), (121, '          curl -sSL https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata')], 'deleted': [(120, '          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output ${{env.ILOC}}/share/tessdata/eng.traineddata'), (121, '          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata')]}",yes
nsis\Makefile.am,nsis\Makefile.am,60ed29955015728635fd50598ebb958284232c8a,b7c7540bd7e1883fdecdf0ebb37b5ca1189d4296,"Make downloads with curl silent in build process

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -9,7 +9,7 @@ gitrev=""$(shell git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdi
 .PHONY: winsetup
 
 Plugins/x86-unicode/INetC.dll:
-	curl -O https://nsis.sourceforge.io/mediawiki/images/c/c9/Inetc.zip
+	curl -OsS https://nsis.sourceforge.io/mediawiki/images/c/c9/Inetc.zip
 	unzip Inetc.zip $@
 
 winpath.exe: winpath.cpp
","{'added': [(12, '\tcurl -OsS https://nsis.sourceforge.io/mediawiki/images/c/c9/Inetc.zip')], 'deleted': [(12, '\tcurl -O https://nsis.sourceforge.io/mediawiki/images/c/c9/Inetc.zip')]}",yes
nsis\build.sh,nsis\build.sh,60ed29955015728635fd50598ebb958284232c8a,b7c7540bd7e1883fdecdf0ebb37b5ca1189d4296,"Make downloads with curl silent in build process

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -33,13 +33,6 @@ sudo apt-get install --assume-yes --no-install-recommends --quiet \
   mingw-w64-tools nsis g++-""$PKG_ARCH"" \
   makepkg pacman-package-manager
 
-# Install pacman-package-manager and its dependencies (from Ubuntu 22.10).
-# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/pacman-package-manager_6.0.1-4_amd64.deb
-# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/libalpm13_6.0.1-4_amd64.deb
-# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/makepkg_6.0.1-4_amd64.deb
-# sudo dpkg -i *.deb || true
-# sudo apt-get install --fix-broken --assume-yes --no-install-recommends --quiet
-
 # Configure pacman.
 
 # Enable mirrorlist.
@@ -47,9 +40,9 @@ sudo sed -Ei 's/^#.*(Include.*mirrorlist)/\1/' /etc/pacman.conf
 (
 # Add msys key for pacman.
 cd /usr/share/keyrings
-sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2.gpg
-sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-revoked
-sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-trusted
+sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2.gpg
+sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-revoked
+sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-trusted
 )
 (
 # Add active environments for pacman.
@@ -60,8 +53,8 @@ cat <<eod | sudo tee mirrorlist >/dev/null
 [mingw64]
 Include = /etc/pacman.d/mirrorlist.mingw
 eod
-sudo curl -O https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.mingw
-# sudo curl -O https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.msys
+sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.mingw
+# sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.msys
 )
 
 sudo pacman-key --init
","{'added': [(43, 'sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2.gpg'), (44, 'sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-revoked'), (45, 'sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-trusted'), (56, 'sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.mingw'), (57, '# sudo curl -OsS https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.msys')], 'deleted': [(36, '# Install pacman-package-manager and its dependencies (from Ubuntu 22.10).'), (37, '# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/pacman-package-manager_6.0.1-4_amd64.deb'), (38, '# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/libalpm13_6.0.1-4_amd64.deb'), (39, '# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/makepkg_6.0.1-4_amd64.deb'), (40, '# sudo dpkg -i *.deb || true'), (41, '# sudo apt-get install --fix-broken --assume-yes --no-install-recommends --quiet'), (42, ''), (50, 'sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2.gpg'), (51, 'sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-revoked'), (52, 'sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-trusted'), (63, 'sudo curl -O https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.mingw'), (64, '# sudo curl -O https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.msys')]}",yes
unittest\fuzzers\oss-fuzz-build.sh,unittest\fuzzers\oss-fuzz-build.sh,60ed29955015728635fd50598ebb958284232c8a,b7c7540bd7e1883fdecdf0ebb37b5ca1189d4296,"Make downloads with curl silent in build process

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -32,7 +32,7 @@ mkdir -p ""$OUT""/tessdata
 (
 cd ""$OUT""/tessdata
 test -f eng.traineddata || \
-  curl -L -O https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata
+  curl -sSL -O https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata
 )
 
 # OSS-Fuzz requires static linking for the project specific libraries,
","{'added': [(35, '  curl -sSL -O https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata')], 'deleted': [(35, '  curl -L -O https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata')]}",yes
java\Makefile.am,java\Makefile.am,b7c7540bd7e1883fdecdf0ebb37b5ca1189d4296,e8a9a56f9fdb7cd7028af3d9021f7e8b56226b28,"Fix download of jar files for scrollview

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -51,9 +51,9 @@ $(SCROLLVIEW_CLASSES) : $(SCROLLVIEW_FILES) $(SCROLLVIEW_LIBS)
 
 .PHONY: fetch-jars
 fetch-jars $(SCROLLVIEW_LIBS):
-	curl -s -S -L -O https://search.maven.org/remotecontent?filepath=org/piccolo2d/piccolo2d-core/3.0.1/piccolo2d-core-3.0.1.jar
-	curl -s -S -L -O https://search.maven.org/remotecontent?filepath=org/piccolo2d/piccolo2d-extras/3.0.1/piccolo2d-extras-3.0.1.jar
-	curl -s -S -L -O https://search.maven.org/remotecontent?filepath=javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar
+	curl -sSLO https://repo1.maven.org/maven2/org/piccolo2d/piccolo2d-core/3.0.1/piccolo2d-core-3.0.1.jar
+	curl -sSLO https://repo1.maven.org/maven2/org/piccolo2d/piccolo2d-extras/3.0.1/piccolo2d-extras-3.0.1.jar
+	curl -sSLO https://repo1.maven.org/maven2/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar
 
 .PHONY: install-jars
 install-jars : ScrollView.jar
","{'added': [(54, '\tcurl -sSLO https://repo1.maven.org/maven2/org/piccolo2d/piccolo2d-core/3.0.1/piccolo2d-core-3.0.1.jar'), (55, '\tcurl -sSLO https://repo1.maven.org/maven2/org/piccolo2d/piccolo2d-extras/3.0.1/piccolo2d-extras-3.0.1.jar'), (56, '\tcurl -sSLO https://repo1.maven.org/maven2/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar')], 'deleted': [(54, '\tcurl -s -S -L -O https://search.maven.org/remotecontent?filepath=org/piccolo2d/piccolo2d-core/3.0.1/piccolo2d-core-3.0.1.jar'), (55, '\tcurl -s -S -L -O https://search.maven.org/remotecontent?filepath=org/piccolo2d/piccolo2d-extras/3.0.1/piccolo2d-extras-3.0.1.jar'), (56, '\tcurl -s -S -L -O https://search.maven.org/remotecontent?filepath=javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar')]}",yes
src\tesseract.cpp,src\tesseract.cpp,e8a9a56f9fdb7cd7028af3d9021f7e8b56226b28,827a4e7c7f435feb74fa30f60e9acbe8e28a55c7,"Support symbolic values for --oem and --psm options

This fixes issue #4332.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -151,44 +151,41 @@ static void PrintVersionInfo() {
 }
 
 static void PrintHelpForPSM() {
-  const char *msg =
-      ""Page segmentation modes:\n""
-      ""  0    Orientation and script detection (OSD) only.\n""
-      ""  1    Automatic page segmentation with OSD.\n""
-      ""  2    Automatic page segmentation, but no OSD, or OCR. (not ""
+  printf(
+      ""Page segmentation modes (PSM):\n""
+      ""  0|osd_only                Orientation and script detection (OSD) only.\n""
+      ""  1|auto_osd                Automatic page segmentation with OSD.\n""
+      ""  2|auto_only               Automatic page segmentation, but no OSD, or OCR. (not ""
       ""implemented)\n""
-      ""  3    Fully automatic page segmentation, but no OSD. (Default)\n""
-      ""  4    Assume a single column of text of variable sizes.\n""
-      ""  5    Assume a single uniform block of vertically aligned text.\n""
-      ""  6    Assume a single uniform block of text.\n""
-      ""  7    Treat the image as a single text line.\n""
-      ""  8    Treat the image as a single word.\n""
-      ""  9    Treat the image as a single word in a circle.\n""
-      "" 10    Treat the image as a single character.\n""
-      "" 11    Sparse text. Find as much text as possible in no""
+      ""  3|auto                    Fully automatic page segmentation, but no OSD. (Default)\n""
+      ""  4|single_column           Assume a single column of text of variable sizes.\n""
+      ""  5|single_block_vert_text  Assume a single uniform block of vertically aligned text.\n""
+      ""  6|single_block            Assume a single uniform block of text.\n""
+      ""  7|single_line             Treat the image as a single text line.\n""
+      ""  8|single_word             Treat the image as a single word.\n""
+      ""  9|circle_word             Treat the image as a single word in a circle.\n""
+      "" 10|single_char             Treat the image as a single character.\n""
+      "" 11|sparse_text             Sparse text. Find as much text as possible in no""
       "" particular order.\n""
-      "" 12    Sparse text with OSD.\n""
-      "" 13    Raw line. Treat the image as a single text line,\n""
-      ""       bypassing hacks that are Tesseract-specific.\n"";
+      "" 12|sparse_text_osd         Sparse text with OSD.\n""
+      "" 13|raw_line                Raw line. Treat the image as a single text line,\n""
+      ""                            bypassing hacks that are Tesseract-specific.\n""
+  );
 
 #ifdef DISABLED_LEGACY_ENGINE
-  const char *disabled_osd_msg = ""\nNOTE: The OSD modes are currently disabled.\n"";
-  printf(""%s%s"", msg, disabled_osd_msg);
-#else
-  printf(""%s"", msg);
+  printf(""\nNOTE: The OSD modes are currently disabled.\n"");
 #endif
 }
 
 #ifndef DISABLED_LEGACY_ENGINE
 static void PrintHelpForOEM() {
-  const char *msg =
-      ""OCR Engine modes:\n""
-      ""  0    Legacy engine only.\n""
-      ""  1    Neural nets LSTM engine only.\n""
-      ""  2    Legacy + LSTM engines.\n""
-      ""  3    Default, based on what is available.\n"";
-
-  printf(""%s"", msg);
+  printf(
+      ""OCR Engine modes (OEM):\n""
+      ""  0|tesseract_only          Legacy engine only.\n""
+      ""  1|lstm_only               Neural nets LSTM engine only.\n""
+      ""  2|tesseract_lstm_combined Legacy + LSTM engines.\n""
+      ""  3|default                 Default, based on what is available.\n""
+  );
 }
 #endif // ndef DISABLED_LEGACY_ENGINE
 
@@ -218,9 +215,9 @@ static void PrintHelpExtra(const char *program) {
       ""  -l LANG[+LANG]        Specify language(s) used for OCR.\n""
       ""  -c VAR=VALUE          Set value for config variables.\n""
       ""                        Multiple -c arguments are allowed.\n""
-      ""  --psm NUM             Specify page segmentation mode.\n""
+      ""  --psm PSM|NUM         Specify page segmentation mode.\n""
 #ifndef DISABLED_LEGACY_ENGINE
-      ""  --oem NUM             Specify OCR Engine mode.\n""
+      ""  --oem OEM|NUM         Specify OCR Engine mode.\n""
 #endif
       ""NOTE: These options must occur before any configfile.\n""
       ""\n"",
@@ -332,12 +329,64 @@ static void FixPageSegMode(tesseract::TessBaseAPI &api, tesseract::PageSegMode p
 
 static bool checkArgValues(int arg, const char *mode, int count) {
   if (arg >= count || arg < 0) {
-    printf(""Invalid %s value, please enter a number between 0-%d\n"", mode, count - 1);
+    printf(""Invalid %s value, please enter a symbolic %s value or a number between 0-%d\n"", mode, mode, count - 1);
     return false;
   }
   return true;
 }
 
+// Convert a symbolic or numeric string to an OEM value.
+static int stringToOEM(const std::string arg) {
+  std::map<std::string, int> oem_map = {
+    {""0"", 0},
+    {""1"", 1},
+    {""2"", 2},
+    {""3"", 3},
+    {""tesseract_only"", 0},
+    {""lstm_only"", 1},
+    {""tesseract_lstm_combined"", 2},
+    {""default"", 3},
+  };
+  auto it = oem_map.find(arg);
+  printf(""it: %d, %d\n"", it == oem_map.end(), it->second);
+  return it->second;
+}
+
+static int stringToPSM(const std::string arg) {
+  std::map<std::string, int> psm_map = {
+    {""0"", 0},
+    {""1"", 1},
+    {""2"", 2},
+    {""3"", 3},
+    {""4"", 4},
+    {""5"", 5},
+    {""6"", 6},
+    {""7"", 7},
+    {""8"", 8},
+    {""9"", 9},
+    {""10"", 10},
+    {""11"", 11},
+    {""12"", 12},
+    {""13"", 13},
+    {""osd_only"", 0},
+    {""auto_osd"", 1},
+    {""auto_only"", 2},
+    {""auto"", 3},
+    {""single_column"", 4},
+    {""single_block_vert_text"", 5},
+    {""single_block"", 6},
+    {""single_line"", 7},
+    {""single_word"", 8},
+    {""circle_word"", 9},
+    {""single_char"", 10},
+    {""sparse_text"", 11},
+    {""sparse_text_osd"", 12},
+    {""raw_line"", 13},
+  };
+  auto it = psm_map.find(arg);
+  return it->second;
+}
+
 // NOTE: arg_i is used here to avoid ugly *i so many times in this function
 static bool ParseArgs(int argc, char **argv, const char **lang, const char **image,
                       const char **outputbase, const char **datapath, l_int32 *dpi,
@@ -410,14 +459,15 @@ static bool ParseArgs(int argc, char **argv, const char **lang, const char **ima
       noocr = true;
       *list_langs = true;
     } else if (strcmp(argv[i], ""--psm"") == 0 && i + 1 < argc) {
-      if (!checkArgValues(atoi(argv[i + 1]), ""PSM"", tesseract::PSM_COUNT)) {
+      int psm = stringToPSM(argv[i + 1]);
+      if (!checkArgValues(psm, ""PSM"", tesseract::PSM_COUNT)) {
         return false;
       }
-      *pagesegmode = static_cast<tesseract::PageSegMode>(atoi(argv[i + 1]));
+      *pagesegmode = static_cast<tesseract::PageSegMode>(psm);
       ++i;
     } else if (strcmp(argv[i], ""--oem"") == 0 && i + 1 < argc) {
 #ifndef DISABLED_LEGACY_ENGINE
-      int oem = atoi(argv[i + 1]);
+      int oem = stringToOEM(argv[i + 1]);
       if (!checkArgValues(oem, ""OEM"", tesseract::OEM_COUNT)) {
         return false;
       }
","{'added': [(154, '  printf('), (155, '      ""Page segmentation modes (PSM):\\n""'), (156, '      ""  0|osd_only                Orientation and script detection (OSD) only.\\n""'), (157, '      ""  1|auto_osd                Automatic page segmentation with OSD.\\n""'), (158, '      ""  2|auto_only               Automatic page segmentation, but no OSD, or OCR. (not ""'), (160, '      ""  3|auto                    Fully automatic page segmentation, but no OSD. (Default)\\n""'), (161, '      ""  4|single_column           Assume a single column of text of variable sizes.\\n""'), (162, '      ""  5|single_block_vert_text  Assume a single uniform block of vertically aligned text.\\n""'), (163, '      ""  6|single_block            Assume a single uniform block of text.\\n""'), (164, '      ""  7|single_line             Treat the image as a single text line.\\n""'), (165, '      ""  8|single_word             Treat the image as a single word.\\n""'), (166, '      ""  9|circle_word             Treat the image as a single word in a circle.\\n""'), (167, '      "" 10|single_char             Treat the image as a single character.\\n""'), (168, '      "" 11|sparse_text             Sparse text. Find as much text as possible in no""'), (170, '      "" 12|sparse_text_osd         Sparse text with OSD.\\n""'), (171, '      "" 13|raw_line                Raw line. Treat the image as a single text line,\\n""'), (172, '      ""                            bypassing hacks that are Tesseract-specific.\\n""'), (173, '  );'), (176, '  printf(""\\nNOTE: The OSD modes are currently disabled.\\n"");'), (182, '  printf('), (183, '      ""OCR Engine modes (OEM):\\n""'), (184, '      ""  0|tesseract_only          Legacy engine only.\\n""'), (185, '      ""  1|lstm_only               Neural nets LSTM engine only.\\n""'), (186, '      ""  2|tesseract_lstm_combined Legacy + LSTM engines.\\n""'), (187, '      ""  3|default                 Default, based on what is available.\\n""'), (188, '  );'), (218, '      ""  --psm PSM|NUM         Specify page segmentation mode.\\n""'), (220, '      ""  --oem OEM|NUM         Specify OCR Engine mode.\\n""'), (332, '    printf(""Invalid %s value, please enter a symbolic %s value or a number between 0-%d\\n"", mode, mode, count - 1);'), (338, '// Convert a symbolic or numeric string to an OEM value.'), (339, 'static int stringToOEM(const std::string arg) {'), (340, '  std::map<std::string, int> oem_map = {'), (341, '    {""0"", 0},'), (342, '    {""1"", 1},'), (343, '    {""2"", 2},'), (344, '    {""3"", 3},'), (345, '    {""tesseract_only"", 0},'), (346, '    {""lstm_only"", 1},'), (347, '    {""tesseract_lstm_combined"", 2},'), (348, '    {""default"", 3},'), (349, '  };'), (350, '  auto it = oem_map.find(arg);'), (351, '  printf(""it: %d, %d\\n"", it == oem_map.end(), it->second);'), (352, '  return it->second;'), (353, '}'), (354, ''), (355, 'static int stringToPSM(const std::string arg) {'), (356, '  std::map<std::string, int> psm_map = {'), (357, '    {""0"", 0},'), (358, '    {""1"", 1},'), (359, '    {""2"", 2},'), (360, '    {""3"", 3},'), (361, '    {""4"", 4},'), (362, '    {""5"", 5},'), (363, '    {""6"", 6},'), (364, '    {""7"", 7},'), (365, '    {""8"", 8},'), (366, '    {""9"", 9},'), (367, '    {""10"", 10},'), (368, '    {""11"", 11},'), (369, '    {""12"", 12},'), (370, '    {""13"", 13},'), (371, '    {""osd_only"", 0},'), (372, '    {""auto_osd"", 1},'), (373, '    {""auto_only"", 2},'), (374, '    {""auto"", 3},'), (375, '    {""single_column"", 4},'), (376, '    {""single_block_vert_text"", 5},'), (377, '    {""single_block"", 6},'), (378, '    {""single_line"", 7},'), (379, '    {""single_word"", 8},'), (380, '    {""circle_word"", 9},'), (381, '    {""single_char"", 10},'), (382, '    {""sparse_text"", 11},'), (383, '    {""sparse_text_osd"", 12},'), (384, '    {""raw_line"", 13},'), (385, '  };'), (386, '  auto it = psm_map.find(arg);'), (387, '  return it->second;'), (388, '}'), (389, ''), (462, '      int psm = stringToPSM(argv[i + 1]);'), (463, '      if (!checkArgValues(psm, ""PSM"", tesseract::PSM_COUNT)) {'), (466, '      *pagesegmode = static_cast<tesseract::PageSegMode>(psm);'), (470, '      int oem = stringToOEM(argv[i + 1]);')], 'deleted': [(154, '  const char *msg ='), (155, '      ""Page segmentation modes:\\n""'), (156, '      ""  0    Orientation and script detection (OSD) only.\\n""'), (157, '      ""  1    Automatic page segmentation with OSD.\\n""'), (158, '      ""  2    Automatic page segmentation, but no OSD, or OCR. (not ""'), (160, '      ""  3    Fully automatic page segmentation, but no OSD. (Default)\\n""'), (161, '      ""  4    Assume a single column of text of variable sizes.\\n""'), (162, '      ""  5    Assume a single uniform block of vertically aligned text.\\n""'), (163, '      ""  6    Assume a single uniform block of text.\\n""'), (164, '      ""  7    Treat the image as a single text line.\\n""'), (165, '      ""  8    Treat the image as a single word.\\n""'), (166, '      ""  9    Treat the image as a single word in a circle.\\n""'), (167, '      "" 10    Treat the image as a single character.\\n""'), (168, '      "" 11    Sparse text. Find as much text as possible in no""'), (170, '      "" 12    Sparse text with OSD.\\n""'), (171, '      "" 13    Raw line. Treat the image as a single text line,\\n""'), (172, '      ""       bypassing hacks that are Tesseract-specific.\\n"";'), (175, '  const char *disabled_osd_msg = ""\\nNOTE: The OSD modes are currently disabled.\\n"";'), (176, '  printf(""%s%s"", msg, disabled_osd_msg);'), (177, '#else'), (178, '  printf(""%s"", msg);'), (184, '  const char *msg ='), (185, '      ""OCR Engine modes:\\n""'), (186, '      ""  0    Legacy engine only.\\n""'), (187, '      ""  1    Neural nets LSTM engine only.\\n""'), (188, '      ""  2    Legacy + LSTM engines.\\n""'), (189, '      ""  3    Default, based on what is available.\\n"";'), (190, ''), (191, '  printf(""%s"", msg);'), (221, '      ""  --psm NUM             Specify page segmentation mode.\\n""'), (223, '      ""  --oem NUM             Specify OCR Engine mode.\\n""'), (335, '    printf(""Invalid %s value, please enter a number between 0-%d\\n"", mode, count - 1);'), (413, '      if (!checkArgValues(atoi(argv[i + 1]), ""PSM"", tesseract::PSM_COUNT)) {'), (416, '      *pagesegmode = static_cast<tesseract::PageSegMode>(atoi(argv[i + 1]));'), (420, '      int oem = atoi(argv[i + 1]);')]}",yes
nsis\build.sh,nsis\build.sh,827a4e7c7f435feb74fa30f60e9acbe8e28a55c7,d0d43dfbcee20ea43088c8c93d694207009bc2b5,"Add Python script which finds Windows dependencies

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -107,8 +107,11 @@ export PKG_CONFIG_PATH
 make all training
 MINGW_INSTALL=${PWD}${MINGW}
 make install-jars install training-install html prefix=""$MINGW_INSTALL""
+test -d venv || python3 -m venv venv
+source venv/bin/activate
+pip install pefile
 mkdir -p dll
-ln -sv $($ROOTDIR/nsis/find_deps.py $MINGW_INSTALL/bin/*.exe $MINGW_INSTALL/bin/*.dll | sort | uniq) dll/
+ln -sv $(""$ROOTDIR/nsis/find_deps.py"" ""$MINGW_INSTALL""/bin/*.exe ""$MINGW_INSTALL""/bin/*.dll) dll/
 make winsetup prefix=""$MINGW_INSTALL""
 
 # Copy result for upload.
","{'added': [(110, 'test -d venv || python3 -m venv venv'), (111, 'source venv/bin/activate'), (112, 'pip install pefile'), (114, 'ln -sv $(""$ROOTDIR/nsis/find_deps.py"" ""$MINGW_INSTALL""/bin/*.exe ""$MINGW_INSTALL""/bin/*.dll) dll/')], 'deleted': [(111, 'ln -sv $($ROOTDIR/nsis/find_deps.py $MINGW_INSTALL/bin/*.exe $MINGW_INSTALL/bin/*.dll | sort | uniq) dll/')]}",yes
,nsis\find_deps.py,827a4e7c7f435feb74fa30f60e9acbe8e28a55c7,d0d43dfbcee20ea43088c8c93d694207009bc2b5,"Add Python script which finds Windows dependencies

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,64 @@
+#!/usr/bin/env python3
+#
+# Copyright (C) 2024 Stefan Weil
+#
+# SPDX-License-Identifier: MIT
+#
+# Find the DLL files which are required for a given set of
+# Windows executables and libraries.
+
+import argparse
+import os
+import pefile
+
+VERBOSE = False
+
+def find_dependencies(binary, search_path, analyzed_deps):
+    pe = pefile.PE(binary)
+    pe.parse_data_directories()
+    if VERBOSE:
+        print(f'{binary}:')
+    # print(pe.dump_info())
+
+    for entry in pe.DIRECTORY_ENTRY_IMPORT:
+        name = entry.dll.decode('utf-8')
+        if name in analyzed_deps:
+            if VERBOSE:
+                print(f'skip {name} (already analyzed)')
+            continue
+        analyzed_deps.add(name)
+        fullpath = os.path.join(search_path, name)
+        if not os.path.exists(fullpath):
+            # Not found, maybe system DLL. Skip it.
+            if VERBOSE:
+                print(f'skip {name} (not found, maybe system DLL)')
+            continue
+        print(fullpath)
+        analyzed_deps = find_dependencies(fullpath, search_path, analyzed_deps)
+
+    return analyzed_deps
+
+def main():
+    """"""
+    Command-line interface for universal dependency scanner.
+    """"""
+
+    parser = argparse.ArgumentParser(description='Find and copy DLL dependencies')
+    parser.add_argument('files', nargs='+', help='Paths to executable or library files')
+    parser.add_argument('--dlldir', dest='dlldir', default='/mingw64/bin/',
+                        help='path to dll files')
+
+    args = parser.parse_args()
+
+    # try:
+    # Find dependencies
+    analyzed_deps = set()
+    for binary in args.files:
+        if True:
+            analyzed_deps = find_dependencies(binary, args.dlldir, analyzed_deps)
+        # except:
+        #    print(f'error: failed to find dependencies for {binary}')
+
+
+if __name__ == '__main__':
+    main()
","{'added': [(1, '#!/usr/bin/env python3'), (2, '#'), (3, '# Copyright (C) 2024 Stefan Weil'), (4, '#'), (5, '# SPDX-License-Identifier: MIT'), (6, '#'), (7, '# Find the DLL files which are required for a given set of'), (8, '# Windows executables and libraries.'), (9, ''), (10, 'import argparse'), (11, 'import os'), (12, 'import pefile'), (13, ''), (14, 'VERBOSE = False'), (15, ''), (16, 'def find_dependencies(binary, search_path, analyzed_deps):'), (17, '    pe = pefile.PE(binary)'), (18, '    pe.parse_data_directories()'), (19, '    if VERBOSE:'), (20, ""        print(f'{binary}:')""), (21, '    # print(pe.dump_info())'), (22, ''), (23, '    for entry in pe.DIRECTORY_ENTRY_IMPORT:'), (24, ""        name = entry.dll.decode('utf-8')""), (25, '        if name in analyzed_deps:'), (26, '            if VERBOSE:'), (27, ""                print(f'skip {name} (already analyzed)')""), (28, '            continue'), (29, '        analyzed_deps.add(name)'), (30, '        fullpath = os.path.join(search_path, name)'), (31, '        if not os.path.exists(fullpath):'), (32, '            # Not found, maybe system DLL. Skip it.'), (33, '            if VERBOSE:'), (34, ""                print(f'skip {name} (not found, maybe system DLL)')""), (35, '            continue'), (36, '        print(fullpath)'), (37, '        analyzed_deps = find_dependencies(fullpath, search_path, analyzed_deps)'), (38, ''), (39, '    return analyzed_deps'), (40, ''), (41, 'def main():'), (42, '    """"""'), (43, '    Command-line interface for universal dependency scanner.'), (44, '    """"""'), (45, ''), (46, ""    parser = argparse.ArgumentParser(description='Find and copy DLL dependencies')""), (47, ""    parser.add_argument('files', nargs='+', help='Paths to executable or library files')""), (48, ""    parser.add_argument('--dlldir', dest='dlldir', default='/mingw64/bin/',""), (49, ""                        help='path to dll files')""), (50, ''), (51, '    args = parser.parse_args()'), (52, ''), (53, '    # try:'), (54, '    # Find dependencies'), (55, '    analyzed_deps = set()'), (56, '    for binary in args.files:'), (57, '        if True:'), (58, '            analyzed_deps = find_dependencies(binary, args.dlldir, analyzed_deps)'), (59, '        # except:'), (60, ""        #    print(f'error: failed to find dependencies for {binary}')""), (61, ''), (62, ''), (63, ""if __name__ == '__main__':""), (64, '    main()')], 'deleted': []}",yes
,.github\workflows\installer-for-windows.yml,d0d43dfbcee20ea43088c8c93d694207009bc2b5,b7c599624849cdfb5f7c6289fe998f8c70e651ce,"Update NSIS installer

- Add manual pages in HTML format and helper for Tesseract command line
- Don't remove the installation directory recursively
- Add GitHub action for Tesseract installer for Windows
- Add docbook-xml to required packages (needed for doc)
- Use unicode for NSIS installer
- Optionally sign executables
- Add more file properties to installer
- Update configuration for use with pacman
- Build Windows installer only for 64 bit Windows

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,27 @@
+# GitHub actions - Create Tesseract installer for Windows
+
+name: Cross build for Windows
+
+on:
+  # Trigger workflow in GitHub web frontend or from API.
+  workflow_dispatch:
+    inputs:
+      targets:
+        description: 'Target operating system'
+        required: true
+        default: 'Windows (64 bit)'
+        type: choice
+        options:
+          - 'Windows (64 bit)'
+
+jobs:
+  build64:
+    runs-on: [ubuntu-24.04]
+    steps:
+    - uses: actions/checkout@v4
+    - name: Build Tesseract installer (64 bit)
+      run: nsis/build.sh x86_64
+    - uses: actions/upload-artifact@v4
+      with:
+        name: Tesseract Installer for Windows (64 bit)
+        path: dist
","{'added': [(1, '# GitHub actions - Create Tesseract installer for Windows'), (2, ''), (3, 'name: Cross build for Windows'), (4, ''), (5, 'on:'), (6, '  # Trigger workflow in GitHub web frontend or from API.'), (7, '  workflow_dispatch:'), (8, '    inputs:'), (9, '      targets:'), (10, ""        description: 'Target operating system'""), (11, '        required: true'), (12, ""        default: 'Windows (64 bit)'""), (13, '        type: choice'), (14, '        options:'), (15, ""          - 'Windows (64 bit)'""), (16, ''), (17, 'jobs:'), (18, '  build64:'), (19, '    runs-on: [ubuntu-24.04]'), (20, '    steps:'), (21, '    - uses: actions/checkout@v4'), (22, '    - name: Build Tesseract installer (64 bit)'), (23, '      run: nsis/build.sh x86_64'), (24, '    - uses: actions/upload-artifact@v4'), (25, '      with:'), (26, '        name: Tesseract Installer for Windows (64 bit)'), (27, '        path: dist')], 'deleted': []}",yes
,.github\workflows\pkg-config-crosswrapper,d0d43dfbcee20ea43088c8c93d694207009bc2b5,b7c599624849cdfb5f7c6289fe998f8c70e651ce,"Update NSIS installer

- Add manual pages in HTML format and helper for Tesseract command line
- Don't remove the installation directory recursively
- Add GitHub action for Tesseract installer for Windows
- Add docbook-xml to required packages (needed for doc)
- Use unicode for NSIS installer
- Optionally sign executables
- Add more file properties to installer
- Update configuration for use with pacman
- Build Windows installer only for 64 bit Windows

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,54 @@
+#! /bin/sh
+# pkg-config wrapper for cross-building
+# Sets pkg-config search path to search multiarch and historical cross-compiling paths.
+
+# If the user has already set PKG_CONFIG_LIBDIR, believe it (even if empty):
+# it's documented to be an override
+if [ x""${PKG_CONFIG_LIBDIR+set}"" = x ]; then
+  # GNU triplet for the compiler, e.g. i486-linux-gnu for Debian i386,
+  # i686-linux-gnu for Ubuntu i386
+  basename=""$(basename ""$0"")""
+  triplet=""${basename%-pkg-config}""
+  # Normalized multiarch path if any, e.g. i386-linux-gnu for i386
+  dpkg-architecture >/dev/null 2>&1
+  if [ ""$?"" != 0 ]; then
+      # dpkg-architecture is missing.
+      echo ""Please install dpkg-dev to use pkg-config when cross-building"" >&2
+      exit 1
+  fi
+  multiarch=""$(dpkg-architecture -t""${triplet}"" -qDEB_HOST_MULTIARCH 2>/dev/null)""
+  # Native multiarch path
+  native_multiarch=""$(cat /usr/lib/pkg-config.multiarch)""
+
+  # This can be used for native builds as well, in that case, just exec pkg-config ""$@"" directly.
+  if [ ""$native_multiarch"" = ""$multiarch"" ]; then
+     exec pkg-config ""$@""
+  fi
+
+  PKG_CONFIG_LIBDIR=""/usr/local/${triplet}/lib/pkgconfig""
+  # For a native build we would also want to append /usr/local/lib/pkgconfig
+  # at this point; but this is a cross-building script, so don't
+  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/local/share/pkgconfig""
+
+  if [ -n ""$multiarch"" ]; then
+    PKG_CONFIG_LIBDIR=""/usr/local/lib/${multiarch}/pkgconfig:$PKG_CONFIG_LIBDIR""
+    PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/${multiarch}/pkgconfig""
+  fi
+
+  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/${triplet}/lib/pkgconfig""
+  # For a native build we would also want to append /usr/lib/pkgconfig
+  # at this point; but this is a cross-building script, so don't
+  # If you want to allow use of un-multiarched -dev packages for crossing
+  # (at the risk of finding build-arch stuff you didn't want, if not in a clean chroot)
+  # Uncomment the next line:
+  # PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/pkgconfig""
+  # ... but on Ubuntu we rely cross-building with non-multiarch libraries:
+  if dpkg-vendor --derives-from Ubuntu; then
+      PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/pkgconfig""
+  fi
+  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/share/pkgconfig""
+
+  export PKG_CONFIG_LIBDIR
+fi
+
+exec pkg-config ""$@""
","{'added': [(1, '#! /bin/sh'), (2, '# pkg-config wrapper for cross-building'), (3, '# Sets pkg-config search path to search multiarch and historical cross-compiling paths.'), (4, ''), (5, '# If the user has already set PKG_CONFIG_LIBDIR, believe it (even if empty):'), (6, ""# it's documented to be an override""), (7, 'if [ x""${PKG_CONFIG_LIBDIR+set}"" = x ]; then'), (8, '  # GNU triplet for the compiler, e.g. i486-linux-gnu for Debian i386,'), (9, '  # i686-linux-gnu for Ubuntu i386'), (10, '  basename=""$(basename ""$0"")""'), (11, '  triplet=""${basename%-pkg-config}""'), (12, '  # Normalized multiarch path if any, e.g. i386-linux-gnu for i386'), (13, '  dpkg-architecture >/dev/null 2>&1'), (14, '  if [ ""$?"" != 0 ]; then'), (15, '      # dpkg-architecture is missing.'), (16, '      echo ""Please install dpkg-dev to use pkg-config when cross-building"" >&2'), (17, '      exit 1'), (18, '  fi'), (19, '  multiarch=""$(dpkg-architecture -t""${triplet}"" -qDEB_HOST_MULTIARCH 2>/dev/null)""'), (20, '  # Native multiarch path'), (21, '  native_multiarch=""$(cat /usr/lib/pkg-config.multiarch)""'), (22, ''), (23, '  # This can be used for native builds as well, in that case, just exec pkg-config ""$@"" directly.'), (24, '  if [ ""$native_multiarch"" = ""$multiarch"" ]; then'), (25, '     exec pkg-config ""$@""'), (26, '  fi'), (27, ''), (28, '  PKG_CONFIG_LIBDIR=""/usr/local/${triplet}/lib/pkgconfig""'), (29, '  # For a native build we would also want to append /usr/local/lib/pkgconfig'), (30, ""  # at this point; but this is a cross-building script, so don't""), (31, '  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/local/share/pkgconfig""'), (32, ''), (33, '  if [ -n ""$multiarch"" ]; then'), (34, '    PKG_CONFIG_LIBDIR=""/usr/local/lib/${multiarch}/pkgconfig:$PKG_CONFIG_LIBDIR""'), (35, '    PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/${multiarch}/pkgconfig""'), (36, '  fi'), (37, ''), (38, '  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/${triplet}/lib/pkgconfig""'), (39, '  # For a native build we would also want to append /usr/lib/pkgconfig'), (40, ""  # at this point; but this is a cross-building script, so don't""), (41, '  # If you want to allow use of un-multiarched -dev packages for crossing'), (42, ""  # (at the risk of finding build-arch stuff you didn't want, if not in a clean chroot)""), (43, '  # Uncomment the next line:'), (44, '  # PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/pkgconfig""'), (45, '  # ... but on Ubuntu we rely cross-building with non-multiarch libraries:'), (46, '  if dpkg-vendor --derives-from Ubuntu; then'), (47, '      PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/lib/pkgconfig""'), (48, '  fi'), (49, '  PKG_CONFIG_LIBDIR=""$PKG_CONFIG_LIBDIR:/usr/share/pkgconfig""'), (50, ''), (51, '  export PKG_CONFIG_LIBDIR'), (52, 'fi'), (53, ''), (54, 'exec pkg-config ""$@""')], 'deleted': []}",yes
nsis\Makefile.am,nsis\Makefile.am,d0d43dfbcee20ea43088c8c93d694207009bc2b5,b7c599624849cdfb5f7c6289fe998f8c70e651ce,"Update NSIS installer

- Add manual pages in HTML format and helper for Tesseract command line
- Don't remove the installation directory recursively
- Add GitHub action for Tesseract installer for Windows
- Add docbook-xml to required packages (needed for doc)
- Use unicode for NSIS installer
- Optionally sign executables
- Add more file properties to installer
- Update configuration for use with pacman
- Build Windows installer only for 64 bit Windows

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -4,7 +4,7 @@ all:
 
 if MINGW
 
-gitrev=""$(shell git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags)""
+gitrev=""$(shell git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags | sed s/^v//)""
 
 .PHONY: winsetup
 
@@ -17,6 +17,6 @@ winpath.exe: winpath.cpp
 	x86_64-w64-mingw32-strip --strip-unneeded $@
 
 winsetup: Plugins/x86-unicode/INetC.dll winpath.exe
-	makensis -DCROSSBUILD -DSHARED -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi
+	makensis -DCROSSBUILD -DSHARED -DSIGNCODE=$(SIGNCODE) -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi
 
 endif
","{'added': [(7, 'gitrev=""$(shell git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags | sed s/^v//)""'), (20, '\tmakensis -DCROSSBUILD -DSHARED -DSIGNCODE=$(SIGNCODE) -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi')], 'deleted': [(7, 'gitrev=""$(shell git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags)""'), (20, '\tmakensis -DCROSSBUILD -DSHARED -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi')]}",yes
,nsis\build.sh,d0d43dfbcee20ea43088c8c93d694207009bc2b5,b7c599624849cdfb5f7c6289fe998f8c70e651ce,"Update NSIS installer

- Add manual pages in HTML format and helper for Tesseract command line
- Don't remove the installation directory recursively
- Add GitHub action for Tesseract installer for Windows
- Add docbook-xml to required packages (needed for doc)
- Use unicode for NSIS installer
- Optionally sign executables
- Add more file properties to installer
- Update configuration for use with pacman
- Build Windows installer only for 64 bit Windows

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,115 @@
+#!/bin/bash
+
+# GitHub actions - Create Tesseract installer for Windows
+
+# Author: Stefan Weil (2010-2024)
+
+set -e
+set -x
+
+LANG=C.UTF-8
+
+ARCH=$1
+
+if [ ""$ARCH"" = ""i686"" ]; then
+  MINGW=/mingw32
+else
+  ARCH=x86_64
+  MINGW=/mingw64
+fi
+
+ROOTDIR=$PWD
+DISTDIR=$ROOTDIR/dist
+HOST=$ARCH-w64-mingw32
+TAG=$(cat VERSION).$(date +%Y%m%d)
+BUILDDIR=bin/ndebug/$HOST-$TAG
+PKG_ARCH=mingw-w64-${ARCH/_/-}
+
+# Install packages.
+sudo apt-get update --quiet
+sudo apt-get install --assume-yes --no-install-recommends --quiet \
+  asciidoc xsltproc docbook-xml docbook-xsl \
+  automake dpkg-dev libtool pkg-config default-jdk-headless \
+  mingw-w64-tools nsis g++-""$PKG_ARCH"" \
+  makepkg pacman-package-manager
+
+# Install pacman-package-manager and its dependencies (from Ubuntu 22.10).
+# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/pacman-package-manager_6.0.1-4_amd64.deb
+# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/libalpm13_6.0.1-4_amd64.deb
+# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/makepkg_6.0.1-4_amd64.deb
+# sudo dpkg -i *.deb || true
+# sudo apt-get install --fix-broken --assume-yes --no-install-recommends --quiet
+
+# Configure pacman.
+
+# Enable mirrorlist.
+sudo sed -Ei 's/^#.*(Include.*mirrorlist)/\1/' /etc/pacman.conf
+(
+# Add msys key for pacman.
+cd /usr/share/keyrings
+sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2.gpg
+sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-revoked
+sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-trusted
+)
+(
+# Add active environments for pacman.
+# See https://www.msys2.org/docs/repos-mirrors/.
+sudo mkdir -p /etc/pacman.d
+cd /etc/pacman.d
+cat <<eod | sudo tee mirrorlist >/dev/null
+[mingw64]
+Include = /etc/pacman.d/mirrorlist.mingw
+eod
+sudo curl -O https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.mingw
+# sudo curl -O https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.msys
+)
+
+sudo pacman-key --init
+sudo pacman-key --populate msys2
+sudo pacman -Syu --noconfirm
+
+# Install required pacman packages.
+sudo pacman -S --noconfirm \
+ mingw-w64-x86_64-curl-winssl \
+ mingw-w64-x86_64-giflib \
+ mingw-w64-x86_64-icu \
+ mingw-w64-x86_64-leptonica \
+ mingw-w64-x86_64-libarchive \
+ mingw-w64-x86_64-libidn2 \
+ mingw-w64-x86_64-openjpeg2 \
+ mingw-w64-x86_64-openssl \
+ mingw-w64-x86_64-pango \
+ mingw-w64-x86_64-libpng \
+ mingw-w64-x86_64-libtiff \
+ mingw-w64-x86_64-libwebp
+
+sudo ln -sf ""$PWD/.github/workflows/pkg-config-crosswrapper"" ""/usr/bin/$HOST-pkg-config""
+
+git config --global user.email ""sw@weilnetz.de""
+git config --global user.name ""Stefan Weil""
+git tag -a ""v$TAG"" -m ""Tesseract $TAG""
+
+# Run autogen.
+./autogen.sh
+
+# Build Tesseract installer.
+mkdir -p ""$BUILDDIR"" && cd ""$BUILDDIR""
+
+# Run configure.
+PKG_CONFIG_PATH=$MINGW/lib/pkgconfig
+export PKG_CONFIG_PATH
+# Disable OpenMP (see https://github.com/tesseract-ocr/tesseract/issues/1662).
+../../../configure --disable-openmp --host=""$HOST"" --prefix=""/usr/$HOST"" \
+  CXX=""$HOST-g++-posix"" \
+  CXXFLAGS=""-fno-math-errno -Wall -Wextra -Wpedantic -g -O2 -isystem $MINGW/include"" \
+  LDFLAGS=""-L$MINGW/lib""
+
+make all training
+MINGW_INSTALL=${PWD}${MINGW}
+make install-jars install training-install html prefix=""$MINGW_INSTALL""
+mkdir -p dll
+ln -sv $($ROOTDIR/nsis/find_deps.py $MINGW_INSTALL/bin/*.exe $MINGW_INSTALL/bin/*.dll | sort | uniq) dll/
+make winsetup prefix=""$MINGW_INSTALL""
+
+# Copy result for upload.
+mkdir -p ""$DISTDIR"" && cp nsis/tesseract-ocr-w*-setup-*.exe ""$DISTDIR""
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, '# GitHub actions - Create Tesseract installer for Windows'), (4, ''), (5, '# Author: Stefan Weil (2010-2024)'), (6, ''), (7, 'set -e'), (8, 'set -x'), (9, ''), (10, 'LANG=C.UTF-8'), (11, ''), (12, 'ARCH=$1'), (13, ''), (14, 'if [ ""$ARCH"" = ""i686"" ]; then'), (15, '  MINGW=/mingw32'), (16, 'else'), (17, '  ARCH=x86_64'), (18, '  MINGW=/mingw64'), (19, 'fi'), (20, ''), (21, 'ROOTDIR=$PWD'), (22, 'DISTDIR=$ROOTDIR/dist'), (23, 'HOST=$ARCH-w64-mingw32'), (24, 'TAG=$(cat VERSION).$(date +%Y%m%d)'), (25, 'BUILDDIR=bin/ndebug/$HOST-$TAG'), (26, 'PKG_ARCH=mingw-w64-${ARCH/_/-}'), (27, ''), (28, '# Install packages.'), (29, 'sudo apt-get update --quiet'), (30, 'sudo apt-get install --assume-yes --no-install-recommends --quiet \\'), (31, '  asciidoc xsltproc docbook-xml docbook-xsl \\'), (32, '  automake dpkg-dev libtool pkg-config default-jdk-headless \\'), (33, '  mingw-w64-tools nsis g++-""$PKG_ARCH"" \\'), (34, '  makepkg pacman-package-manager'), (35, ''), (36, '# Install pacman-package-manager and its dependencies (from Ubuntu 22.10).'), (37, '# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/pacman-package-manager_6.0.1-4_amd64.deb'), (38, '# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/libalpm13_6.0.1-4_amd64.deb'), (39, '# sudo curl -Os http://de.archive.ubuntu.com/ubuntu/pool/universe/p/pacman-package-manager/makepkg_6.0.1-4_amd64.deb'), (40, '# sudo dpkg -i *.deb || true'), (41, '# sudo apt-get install --fix-broken --assume-yes --no-install-recommends --quiet'), (42, ''), (43, '# Configure pacman.'), (44, ''), (45, '# Enable mirrorlist.'), (46, ""sudo sed -Ei 's/^#.*(Include.*mirrorlist)/\\1/' /etc/pacman.conf""), (47, '('), (48, '# Add msys key for pacman.'), (49, 'cd /usr/share/keyrings'), (50, 'sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2.gpg'), (51, 'sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-revoked'), (52, 'sudo curl -Os https://raw.githubusercontent.com/msys2/MSYS2-keyring/master/msys2-trusted'), (53, ')'), (54, '('), (55, '# Add active environments for pacman.'), (56, '# See https://www.msys2.org/docs/repos-mirrors/.'), (57, 'sudo mkdir -p /etc/pacman.d'), (58, 'cd /etc/pacman.d'), (59, 'cat <<eod | sudo tee mirrorlist >/dev/null'), (60, '[mingw64]'), (61, 'Include = /etc/pacman.d/mirrorlist.mingw'), (62, 'eod'), (63, 'sudo curl -O https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.mingw'), (64, '# sudo curl -O https://raw.githubusercontent.com/msys2/MSYS2-packages/master/pacman-mirrors/mirrorlist.msys'), (65, ')'), (66, ''), (67, 'sudo pacman-key --init'), (68, 'sudo pacman-key --populate msys2'), (69, 'sudo pacman -Syu --noconfirm'), (70, ''), (71, '# Install required pacman packages.'), (72, 'sudo pacman -S --noconfirm \\'), (73, ' mingw-w64-x86_64-curl-winssl \\'), (74, ' mingw-w64-x86_64-giflib \\'), (75, ' mingw-w64-x86_64-icu \\'), (76, ' mingw-w64-x86_64-leptonica \\'), (77, ' mingw-w64-x86_64-libarchive \\'), (78, ' mingw-w64-x86_64-libidn2 \\'), (79, ' mingw-w64-x86_64-openjpeg2 \\'), (80, ' mingw-w64-x86_64-openssl \\'), (81, ' mingw-w64-x86_64-pango \\'), (82, ' mingw-w64-x86_64-libpng \\'), (83, ' mingw-w64-x86_64-libtiff \\'), (84, ' mingw-w64-x86_64-libwebp'), (85, ''), (86, 'sudo ln -sf ""$PWD/.github/workflows/pkg-config-crosswrapper"" ""/usr/bin/$HOST-pkg-config""'), (87, ''), (88, 'git config --global user.email ""sw@weilnetz.de""'), (89, 'git config --global user.name ""Stefan Weil""'), (90, 'git tag -a ""v$TAG"" -m ""Tesseract $TAG""'), (91, ''), (92, '# Run autogen.'), (93, './autogen.sh'), (94, ''), (95, '# Build Tesseract installer.'), (96, 'mkdir -p ""$BUILDDIR"" && cd ""$BUILDDIR""'), (97, ''), (98, '# Run configure.'), (99, 'PKG_CONFIG_PATH=$MINGW/lib/pkgconfig'), (100, 'export PKG_CONFIG_PATH'), (101, '# Disable OpenMP (see https://github.com/tesseract-ocr/tesseract/issues/1662).'), (102, '../../../configure --disable-openmp --host=""$HOST"" --prefix=""/usr/$HOST"" \\'), (103, '  CXX=""$HOST-g++-posix"" \\'), (104, '  CXXFLAGS=""-fno-math-errno -Wall -Wextra -Wpedantic -g -O2 -isystem $MINGW/include"" \\'), (105, '  LDFLAGS=""-L$MINGW/lib""'), (106, ''), (107, 'make all training'), (108, 'MINGW_INSTALL=${PWD}${MINGW}'), (109, 'make install-jars install training-install html prefix=""$MINGW_INSTALL""'), (110, 'mkdir -p dll'), (111, 'ln -sv $($ROOTDIR/nsis/find_deps.py $MINGW_INSTALL/bin/*.exe $MINGW_INSTALL/bin/*.dll | sort | uniq) dll/'), (112, 'make winsetup prefix=""$MINGW_INSTALL""'), (113, ''), (114, '# Copy result for upload.'), (115, 'mkdir -p ""$DISTDIR"" && cp nsis/tesseract-ocr-w*-setup-*.exe ""$DISTDIR""')], 'deleted': []}",yes
nsis\tesseract.nsi,nsis\tesseract.nsi,d0d43dfbcee20ea43088c8c93d694207009bc2b5,b7c599624849cdfb5f7c6289fe998f8c70e651ce,"Update NSIS installer

- Add manual pages in HTML format and helper for Tesseract command line
- Don't remove the installation directory recursively
- Add GitHub action for Tesseract installer for Windows
- Add docbook-xml to required packages (needed for doc)
- Use unicode for NSIS installer
- Optionally sign executables
- Add more file properties to installer
- Update configuration for use with pacman
- Build Windows installer only for 64 bit Windows

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -22,10 +22,18 @@
 SetCompressor /FINAL /SOLID lzma
 SetCompressorDictSize 32
 
+Unicode true
+
 ; Settings which normally should be passed as command line arguments.
 ;define CROSSBUILD
 ;define SHARED
 ;define W64
+!ifndef COMMENTS
+!define COMMENTS ""GitHub CI build""
+!endif
+!ifndef COMPANYNAME
+!define COMPANYNAME ""Open Source Community""
+!endif
 !ifndef SRCDIR
 !define SRCDIR .
 !endif
@@ -40,7 +48,7 @@ SetCompressorDictSize 32
 !define PRODUCT_WEB_SITE ""https://github.com/tesseract-ocr/tesseract""
 !endif
 !define GITHUB_RAW_FILE_URL \
-  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata_fast/master""
+  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata_fast/main""
 
 !ifdef CROSSBUILD
 !addincludedir ${SRCDIR}\nsis\include
@@ -56,13 +64,17 @@ SetCompressorDictSize 32
 !endif
 
 # Name of program and file
-!ifdef VERSION
-OutFile ${SETUP}-${VERSION}.exe
-!else
-OutFile ${SETUP}.exe
+!define OUTFILE ""${SETUP}-${VERSION}.exe""
+OutFile ${OUTFILE}
+
+!ifdef SIGNCODE
+!finalize ""${SIGNCODE} %1""
+!uninstfinalize ""${SIGNCODE} %1""
 !endif
 
-!define PREFIX ""../usr/${ARCH}-w64-mingw32""
+!ifndef PREFIX
+!define PREFIX ""../mingw64""
+!endif
 !define TRAININGDIR ""${PREFIX}/bin""
 
 # General Definitions
@@ -72,6 +84,21 @@ Caption ""${PRODUCT_NAME} ${VERSION}""
 BrandingText /TRIMCENTER ""(c) 2010-2019 ${PRODUCT_NAME}""
 !endif
 
+; File properties.
+!define /date DATEVERSION ""%Y%m%d%H%M%S""
+VIProductVersion ""${VERSION}""
+VIAddVersionKey ""ProductName"" ""${PRODUCT_NAME}""
+VIAddVersionKey ""Comments"" ""${COMMENTS}""
+VIAddVersionKey ""CompanyName"" ""${COMPANYNAME}""
+VIAddVersionKey ""FileDescription"" ""Tesseract OCR""
+!define /date DATETIME ""%Y-%m-%d-%H-%M-%S""
+VIAddVersionKey ""FileVersion"" ""${DATETIME}""
+VIAddVersionKey ""InternalName"" ""Tesseract""
+VIAddVersionKey ""LegalCopyright"" ""Apache-2.0""
+#VIAddVersionKey ""LegalTrademarks"" """"
+VIAddVersionKey ""OriginalFilename"" ""${OUTFILE}""
+VIAddVersionKey ""ProductVersion"" ""${VERSION}""
+
 !define REGKEY ""SOFTWARE\${PRODUCT_NAME}""
 ; HKLM (all users) vs HKCU (current user) defines
 !define env_hklm 'HKLM ""SYSTEM\CurrentControlSet\Control\Session Manager\Environment""'
@@ -100,10 +127,12 @@ BrandingText /TRIMCENTER ""(c) 2010-2019 ${PRODUCT_NAME}""
 !define MUI_FINISHPAGE_LINK ""View Tesseract on GitHub""
 !define MUI_FINISHPAGE_LINK_LOCATION ""https://github.com/tesseract-ocr/tesseract""
 !define MUI_FINISHPAGE_NOAUTOCLOSE
+!ifdef SHOW_README
 ; Showing the README does not work.
-;!define MUI_FINISHPAGE_SHOWREADME ""$INSTDIR\doc\README.md""
-;!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme
-;!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""
+!define MUI_FINISHPAGE_SHOWREADME ""$INSTDIR\doc\README.md""
+!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme
+!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""
+!endif
 !define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM
 !define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}
 !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup
@@ -128,9 +157,7 @@ Var OLD_KEY
 !insertmacro MUI_PAGE_WELCOME
 !insertmacro MUI_PAGE_LICENSE ""${SRCDIR}\LICENSE""
 !insertmacro MULTIUSER_PAGE_INSTALLMODE
-!ifdef VERSION
   Page custom PageReinstall PageLeaveReinstall
-!endif
 !insertmacro MUI_PAGE_COMPONENTS
 !insertmacro MUI_PAGE_DIRECTORY
 !insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup
@@ -178,8 +205,10 @@ Section -Main SEC0000
   File ${PREFIX}/bin/tesseract.exe
   File ${PREFIX}/bin/libtesseract-*.dll
 !ifdef CROSSBUILD
-  File ${SRCDIR}\dll\${ARCH}-w64-mingw32\*.dll
+  File ../dll/*.dll
 !endif
+  File winpath.exe
+  File ../doc/*.html
   CreateDirectory ""$INSTDIR\tessdata""
   SetOutPath ""$INSTDIR\tessdata""
   File ${PREFIX}/share/tessdata/pdf.ttf
@@ -245,7 +274,8 @@ SectionEnd
 Section ""Shortcuts creation"" SecCS
   SetOutPath $INSTDIR
   CreateDirectory ""$SMPROGRAMS\${PRODUCT_NAME}""
-  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Console.lnk"" $WINDIR\system32\CMD.EXE
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Console.lnk"" ""$INSTDIR\winpath.exe"" ""cmd""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Dokumentation.lnk"" ""$INSTDIR\tesseract.1.html""
   CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Homepage.lnk"" ""${PRODUCT_WEB_SITE}""
   CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\ReadMe.lnk"" ""${PRODUCT_WEB_SITE}/wiki/ReadMe""
   CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\FAQ.lnk"" ""${PRODUCT_WEB_SITE}/wiki/FAQ""
@@ -258,14 +288,12 @@ SectionEnd
 SectionGroup ""Language data"" SecGrp_LD
     Section ""English"" SecLang_eng
     SectionIn RO
-      SetOutPath ""$INSTDIR\tessdata""
-      File ${SRCDIR}\tessdata\eng.*
+      !insertmacro Download_Lang_Data eng
     SectionEnd
 
     Section ""Orientation and script detection"" SecLang_osd
     SectionIn 1
-      SetOutPath ""$INSTDIR\tessdata""
-      File ${SRCDIR}\tessdata\osd.*
+      !insertmacro Download_Lang_Data osd
     SectionEnd
 SectionGroupEnd
 
@@ -466,7 +494,7 @@ SectionGroup ""Additional language data (download)"" SecGrp_ALD
   SectionEnd
 
   ; The language names are documented here:
-  ; https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages
+  ; https://github.com/tesseract-ocr/tesseract/blob/main/doc/tesseract.1.asc#languages
 
   Section /o ""Afrikaans"" SecLang_afr
     AddSize 2530
@@ -588,6 +616,11 @@ SectionGroup ""Additional language data (download)"" SecGrp_ALD
     !insertmacro Download_Lang_Data deu
   SectionEnd
 
+ Section /o ""German Fraktur"" SecLang_deu_latf
+    AddSize 6130
+    !insertmacro Download_Lang_Data deu_latf
+  SectionEnd
+
   Section /o ""Divehi"" SecLang_div
     AddSize 1690
     !insertmacro Download_Lang_Data div
@@ -648,11 +681,6 @@ SectionGroup ""Additional language data (download)"" SecGrp_ALD
     !insertmacro Download_Lang_Data fra
   SectionEnd
 
- Section /o ""German Fraktur"" SecLang_frk
-    AddSize 6130
-    !insertmacro Download_Lang_Data frk
-  SectionEnd
-
  Section /o ""French - Middle (ca. 1400-1600)"" SecLang_frm
     AddSize 1930
     !insertmacro Download_Lang_Data frm
@@ -1130,7 +1158,7 @@ Section -un.Main UNSEC0000
   RMDir  ""$SMPROGRAMS\${PRODUCT_NAME}""
   DetailPrint ""Removing registry info""
   DeleteRegKey HKLM ""Software\Tesseract-OCR""
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=1000
 
   # remove the Add/Remove information
   DeleteRegKey HKLM ""${UNINST_KEY}""
@@ -1138,7 +1166,15 @@ Section -un.Main UNSEC0000
   DeleteRegValue HKLM ""${REGKEY}"" Path
   DeleteRegKey /IfEmpty HKLM ""${REGKEY}\Components""
   DeleteRegKey /IfEmpty HKLM ""${REGKEY}""
-  RMDir /r ""$INSTDIR""
+  Delete ""$INSTDIR\*.dll""
+  Delete ""$INSTDIR\*.exe""
+  Delete ""$INSTDIR\*.html""
+  Delete ""$INSTDIR\doc\AUTHORS""
+  Delete ""$INSTDIR\doc\LICENSE""
+  Delete ""$INSTDIR\doc\README.md""
+  RMDir ""$INSTDIR\doc""
+  RMDir /r ""$INSTDIR\tessdata""
+  RMDir ""$INSTDIR""
 SectionEnd
 
 Function PageReinstall
@@ -1389,10 +1425,12 @@ Function .onInstFailed
   MessageBox MB_OK ""Installation failed.""
 FunctionEnd
 
+!ifdef SHOW_README
 Function ShowReadme
   Exec '""wordpad"" ""doc\README.md""'
   ;BringToFront
 FunctionEnd
+!endif
 
 ; Prevent running multiple instances of the installer
 Function PreventMultipleInstances
","{'added': [(25, 'Unicode true'), (26, ''), (31, '!ifndef COMMENTS'), (32, '!define COMMENTS ""GitHub CI build""'), (33, '!endif'), (34, '!ifndef COMPANYNAME'), (35, '!define COMPANYNAME ""Open Source Community""'), (36, '!endif'), (51, '  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata_fast/main""'), (67, '!define OUTFILE ""${SETUP}-${VERSION}.exe""'), (68, 'OutFile ${OUTFILE}'), (69, ''), (70, '!ifdef SIGNCODE'), (71, '!finalize ""${SIGNCODE} %1""'), (72, '!uninstfinalize ""${SIGNCODE} %1""'), (75, '!ifndef PREFIX'), (76, '!define PREFIX ""../mingw64""'), (77, '!endif'), (87, '; File properties.'), (88, '!define /date DATEVERSION ""%Y%m%d%H%M%S""'), (89, 'VIProductVersion ""${VERSION}""'), (90, 'VIAddVersionKey ""ProductName"" ""${PRODUCT_NAME}""'), (91, 'VIAddVersionKey ""Comments"" ""${COMMENTS}""'), (92, 'VIAddVersionKey ""CompanyName"" ""${COMPANYNAME}""'), (93, 'VIAddVersionKey ""FileDescription"" ""Tesseract OCR""'), (94, '!define /date DATETIME ""%Y-%m-%d-%H-%M-%S""'), (95, 'VIAddVersionKey ""FileVersion"" ""${DATETIME}""'), (96, 'VIAddVersionKey ""InternalName"" ""Tesseract""'), (97, 'VIAddVersionKey ""LegalCopyright"" ""Apache-2.0""'), (98, '#VIAddVersionKey ""LegalTrademarks"" """"'), (99, 'VIAddVersionKey ""OriginalFilename"" ""${OUTFILE}""'), (100, 'VIAddVersionKey ""ProductVersion"" ""${VERSION}""'), (101, ''), (130, '!ifdef SHOW_README'), (132, '!define MUI_FINISHPAGE_SHOWREADME ""$INSTDIR\\doc\\README.md""'), (133, '!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme'), (134, '!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""'), (135, '!endif'), (208, '  File ../dll/*.dll'), (210, '  File winpath.exe'), (211, '  File ../doc/*.html'), (277, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Console.lnk"" ""$INSTDIR\\winpath.exe"" ""cmd""'), (278, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Dokumentation.lnk"" ""$INSTDIR\\tesseract.1.html""'), (291, '      !insertmacro Download_Lang_Data eng'), (296, '      !insertmacro Download_Lang_Data osd'), (497, '  ; https://github.com/tesseract-ocr/tesseract/blob/main/doc/tesseract.1.asc#languages'), (619, ' Section /o ""German Fraktur"" SecLang_deu_latf'), (620, '    AddSize 6130'), (621, '    !insertmacro Download_Lang_Data deu_latf'), (622, '  SectionEnd'), (623, ''), (1161, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=1000'), (1169, '  Delete ""$INSTDIR\\*.dll""'), (1170, '  Delete ""$INSTDIR\\*.exe""'), (1171, '  Delete ""$INSTDIR\\*.html""'), (1172, '  Delete ""$INSTDIR\\doc\\AUTHORS""'), (1173, '  Delete ""$INSTDIR\\doc\\LICENSE""'), (1174, '  Delete ""$INSTDIR\\doc\\README.md""'), (1175, '  RMDir ""$INSTDIR\\doc""'), (1176, '  RMDir /r ""$INSTDIR\\tessdata""'), (1177, '  RMDir ""$INSTDIR""'), (1428, '!ifdef SHOW_README'), (1433, '!endif')], 'deleted': [(43, '  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata_fast/master""'), (59, '!ifdef VERSION'), (60, 'OutFile ${SETUP}-${VERSION}.exe'), (61, '!else'), (62, 'OutFile ${SETUP}.exe'), (65, '!define PREFIX ""../usr/${ARCH}-w64-mingw32""'), (104, ';!define MUI_FINISHPAGE_SHOWREADME ""$INSTDIR\\doc\\README.md""'), (105, ';!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme'), (106, ';!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""'), (131, '!ifdef VERSION'), (133, '!endif'), (181, '  File ${SRCDIR}\\dll\\${ARCH}-w64-mingw32\\*.dll'), (248, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Console.lnk"" $WINDIR\\system32\\CMD.EXE'), (261, '      SetOutPath ""$INSTDIR\\tessdata""'), (262, '      File ${SRCDIR}\\tessdata\\eng.*'), (267, '      SetOutPath ""$INSTDIR\\tessdata""'), (268, '      File ${SRCDIR}\\tessdata\\osd.*'), (469, '  ; https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages'), (651, ' Section /o ""German Fraktur"" SecLang_frk'), (652, '    AddSize 6130'), (653, '    !insertmacro Download_Lang_Data frk'), (654, '  SectionEnd'), (655, ''), (1133, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (1141, '  RMDir /r ""$INSTDIR""')]}",yes
,nsis\winpath.cpp,d0d43dfbcee20ea43088c8c93d694207009bc2b5,b7c599624849cdfb5f7c6289fe998f8c70e651ce,"Update NSIS installer

- Add manual pages in HTML format and helper for Tesseract command line
- Don't remove the installation directory recursively
- Add GitHub action for Tesseract installer for Windows
- Add docbook-xml to required packages (needed for doc)
- Use unicode for NSIS installer
- Optionally sign executables
- Add more file properties to installer
- Update configuration for use with pacman
- Build Windows installer only for 64 bit Windows

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,39 @@
+// Copyright (C) 2024 Stefan Weil
+//
+// SPDX-License-Identifier: Apache-2.0
+//
+// winpath - run a Windows program with extended PATH
+//
+// Usage:
+//
+//     winpath [CMD [ARGUMENT ...]]
+//
+// Example:
+//
+//     winpath cmd
+//
+// This will start a Windows command line with PATH extended by
+// the location of the winpath executable.
+
+#include <process.h>    // _spawnvp
+#include <stdlib.h>     // _putenv_s
+#include <string.h>     // strcpy, strcat
+
+static char path[4096];
+
+int main(int argc, char *argv[]) {
+  if (argc > 1) {
+    char *dir = argv[0];
+    char *last = strrchr(dir, '\\');
+    if (last != nullptr) {
+      *last = '\0';
+    }
+    strcpy(path, dir);
+    strcat(path, "";"");
+    strcat(path, getenv(""PATH""));
+    _putenv_s(""PATH"", path);
+    _spawnvp(_P_WAIT, argv[1], argv + 1);
+    //~ _spawnvp(_P_OVERLAY, argv[1], argv + 1);
+  }
+  return 0;
+}
","{'added': [(1, '// Copyright (C) 2024 Stefan Weil'), (2, '//'), (3, '// SPDX-License-Identifier: Apache-2.0'), (4, '//'), (5, '// winpath - run a Windows program with extended PATH'), (6, '//'), (7, '// Usage:'), (8, '//'), (9, '//     winpath [CMD [ARGUMENT ...]]'), (10, '//'), (11, '// Example:'), (12, '//'), (13, '//     winpath cmd'), (14, '//'), (15, '// This will start a Windows command line with PATH extended by'), (16, '// the location of the winpath executable.'), (17, ''), (18, '#include <process.h>    // _spawnvp'), (19, '#include <stdlib.h>     // _putenv_s'), (20, '#include <string.h>     // strcpy, strcat'), (21, ''), (22, 'static char path[4096];'), (23, ''), (24, 'int main(int argc, char *argv[]) {'), (25, '  if (argc > 1) {'), (26, '    char *dir = argv[0];'), (27, ""    char *last = strrchr(dir, '\\\\');""), (28, '    if (last != nullptr) {'), (29, ""      *last = '\\0';""), (30, '    }'), (31, '    strcpy(path, dir);'), (32, '    strcat(path, "";"");'), (33, '    strcat(path, getenv(""PATH""));'), (34, '    _putenv_s(""PATH"", path);'), (35, '    _spawnvp(_P_WAIT, argv[1], argv + 1);'), (36, '    //~ _spawnvp(_P_OVERLAY, argv[1], argv + 1);'), (37, '  }'), (38, '  return 0;'), (39, '}')], 'deleted': []}",yes
nsis\Makefile.am,nsis\Makefile.am,b7c599624849cdfb5f7c6289fe998f8c70e651ce,c886e3b63968eba9f2ae32c3713a5ccee4bb5a37,"Update installer for Windows

- Added a couple of languages that are available for the Linux version
- Add new section for script data
- Get data from tessdata_fast
  The data files are now in the ""script"" subdirectory.
- Update list of scripts and languages
- Update path for script trained data
- Add data for Han Simplified vertical script
- Fix names of tessdata (jpn_vert, kmr)
- Fix some path names for 64 bit version
- Remove testing files from installation
  Those files were moved from tesseract.git to test.git.
- Don't enforce admin mode, but use highest available
- Don't use a checkbox for the license
- Remove unused code for registry settings (PATH, TESSDATA)
- Don't show README.md (did not work)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -4,7 +4,7 @@ all:
 
 if MINGW
 
-gitrev=""`git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags`""
+gitrev=""$(shell git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags)""
 
 .PHONY: winsetup
 
@@ -17,6 +17,6 @@ winpath.exe: winpath.cpp
 	x86_64-w64-mingw32-strip --strip-unneeded $@
 
 winsetup: Plugins/x86-unicode/INetC.dll winpath.exe
-	makensis -DCROSSBUILD -DSHARED -DSIGNCODE=$(SIGNCODE) -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi
+	makensis -DCROSSBUILD -DSHARED -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi
 
 endif
","{'added': [(7, 'gitrev=""$(shell git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags)""'), (20, '\tmakensis -DCROSSBUILD -DSHARED -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi')], 'deleted': [(7, 'gitrev=""`git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags`""'), (20, '\tmakensis -DCROSSBUILD -DSHARED -DSIGNCODE=$(SIGNCODE) -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi')]}",yes
nsis\tesseract.nsi,nsis\tesseract.nsi,b7c599624849cdfb5f7c6289fe998f8c70e651ce,c886e3b63968eba9f2ae32c3713a5ccee4bb5a37,"Update installer for Windows

- Added a couple of languages that are available for the Linux version
- Add new section for script data
- Get data from tessdata_fast
  The data files are now in the ""script"" subdirectory.
- Update list of scripts and languages
- Update path for script trained data
- Add data for Han Simplified vertical script
- Fix names of tessdata (jpn_vert, kmr)
- Fix some path names for 64 bit version
- Remove testing files from installation
  Those files were moved from tesseract.git to test.git.
- Don't enforce admin mode, but use highest available
- Don't use a checkbox for the license
- Remove unused code for registry settings (PATH, TESSDATA)
- Don't show README.md (did not work)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -12,10 +12,12 @@
 ; See the License for the specific language governing permissions and
 ; limitations under the License.
 
+; Links to NSIS documentation:
+; https://nsis.sourceforge.io/Docs/Modern%20UI%202/Readme.html
+
 ; TODO:
 ; * Fix PreventMultipleInstances.
 ; * Add Tesseract icon and images for installer.
-; * Add support for 64 bit Tesseract.
 
 SetCompressor /FINAL /SOLID lzma
 SetCompressorDictSize 32
@@ -28,7 +30,7 @@ SetCompressorDictSize 32
 !define SRCDIR .
 !endif
 !ifndef VERSION
-!define VERSION 4.00-dev
+!define VERSION undefined
 !endif
 
 !define PRODUCT_NAME ""Tesseract-OCR""
@@ -38,21 +40,36 @@ SetCompressorDictSize 32
 !define PRODUCT_WEB_SITE ""https://github.com/tesseract-ocr/tesseract""
 !endif
 !define GITHUB_RAW_FILE_URL \
-  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata/master""
+  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata_fast/master""
 
 !ifdef CROSSBUILD
 !addincludedir ${SRCDIR}\nsis\include
 !addplugindir Plugins/x86-unicode
 !endif
 
-!define PREFIX ""../usr/i686-w64-mingw32""
+!ifdef W64
+!define ARCH ""x86_64""
+!define SETUP ""tesseract-ocr-w64-setup""
+!else
+!define ARCH ""i686""
+!define SETUP ""tesseract-ocr-w32-setup""
+!endif
+
+# Name of program and file
+!ifdef VERSION
+OutFile ${SETUP}-${VERSION}.exe
+!else
+OutFile ${SETUP}.exe
+!endif
+
+!define PREFIX ""../usr/${ARCH}-w64-mingw32""
 !define TRAININGDIR ""${PREFIX}/bin""
 
 # General Definitions
 Name ""${PRODUCT_NAME}""
 Caption ""${PRODUCT_NAME} ${VERSION}""
 !ifndef CROSSBUILD
-BrandingText /TRIMCENTER ""(c) 2010-2015 ${PRODUCT_NAME}""
+BrandingText /TRIMCENTER ""(c) 2010-2019 ${PRODUCT_NAME}""
 !endif
 
 !define REGKEY ""SOFTWARE\${PRODUCT_NAME}""
@@ -61,7 +78,8 @@ BrandingText /TRIMCENTER ""(c) 2010-2015 ${PRODUCT_NAME}""
 !define env_hkcu 'HKCU ""Environment""'
 
 # MultiUser Symbol Definitions
-!define MULTIUSER_EXECUTIONLEVEL Admin
+# https://nsis.sourceforge.io/Docs/MultiUser/Readme.html
+!define MULTIUSER_EXECUTIONLEVEL Highest
 !define MULTIUSER_MUI
 !define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_KEY ""${REGKEY}""
 !define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_VALUENAME MultiUserInstallMode
@@ -69,6 +87,9 @@ BrandingText /TRIMCENTER ""(c) 2010-2015 ${PRODUCT_NAME}""
 !define MULTIUSER_INSTALLMODE_INSTDIR ${PRODUCT_NAME}
 !define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY ""${REGKEY}""
 !define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUE ""Path""
+!ifdef W64
+!define MULTIUSER_USE_PROGRAMFILES64
+!endif
 
 # MUI Symbol Definitions
 !define MUI_ABORTWARNING
@@ -79,10 +100,10 @@ BrandingText /TRIMCENTER ""(c) 2010-2015 ${PRODUCT_NAME}""
 !define MUI_FINISHPAGE_LINK ""View Tesseract on GitHub""
 !define MUI_FINISHPAGE_LINK_LOCATION ""https://github.com/tesseract-ocr/tesseract""
 !define MUI_FINISHPAGE_NOAUTOCLOSE
-!define MUI_FINISHPAGE_SHOWREADME ""iexplore $INSTDIR\doc\README""
-!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme
-!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""
-!define MUI_LICENSEPAGE_CHECKBOX
+; Showing the README does not work.
+;!define MUI_FINISHPAGE_SHOWREADME ""$INSTDIR\doc\README.md""
+;!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme
+;!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""
 !define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM
 !define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}
 !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup
@@ -95,23 +116,17 @@ BrandingText /TRIMCENTER ""(c) 2010-2015 ${PRODUCT_NAME}""
 !include MultiUser.nsh
 !include Sections.nsh
 !include MUI2.nsh
-!ifdef REGISTRY_SETTINGS
-!include EnvVarUpdate.nsh
-!endif ; REGISTRY_SETTINGS
 !include LogicLib.nsh
 !include winmessages.nsh # include for some of the windows messages defines
 
 # Variables
 Var StartMenuGroup
-!ifdef REGISTRY_SETTINGS
-Var PathKey
-!endif ; REGISTRY_SETTINGS
 ; Define user variables
 Var OLD_KEY
 
 # Installer pages
 !insertmacro MUI_PAGE_WELCOME
-!insertmacro MUI_PAGE_LICENSE ""${SRCDIR}\COPYING""
+!insertmacro MUI_PAGE_LICENSE ""${SRCDIR}\LICENSE""
 !insertmacro MULTIUSER_PAGE_INSTALLMODE
 !ifdef VERSION
   Page custom PageReinstall PageLeaveReinstall
@@ -142,57 +157,6 @@ SpaceTexts
 CRCCheck on
 InstProgressFlags smooth colored
 CRCCheck On  # Do a CRC check before installing
-!ifdef W64
-InstallDir ""$PROGRAMFILES64\Tesseract-OCR""
-!else
-InstallDir ""$PROGRAMFILES\Tesseract-OCR""
-!endif
-# Name of program and file
-!ifdef VERSION
-OutFile tesseract-ocr-setup-${VERSION}.exe
-!else
-OutFile tesseract-ocr-setup.exe
-!endif
-
-!ifdef REGISTRY_SETTINGS
-!macro AddToPath
-  # TODO(zdenop): Check if $INSTDIR is in path. If yes, do not append it.
-  # append bin path to user PATH environment variable
-  StrCpy $PathKey ""HKLM""
-  StrCmp $MultiUser.InstallMode ""AllUsers"" +2
-    StrCpy $PathKey ""HKCU""
-  DetailPrint ""Setting PATH to $INSTDIR at $PathKey""
-  ${EnvVarUpdate} $0 ""PATH"" ""A"" ""$PathKey"" ""$INSTDIR""
-  ; make sure windows knows about the change
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-!macroend
-
-!macro RemoveTessdataPrefix
-  ReadRegStr $R2 ${env_hklm} 'TESSDATA_PREFIX'
-  StrCmp $R2 """" Next1 0
-    DetailPrint ""Removing $R2 from HKLM Environment...""
-    DeleteRegValue ${env_hklm} ""TESSDATA_PREFIX""
-  Next1:
-  ReadRegStr $R2 ${env_hkcu} 'TESSDATA_PREFIX'
-  StrCmp $R2 """" Next2 0
-    DetailPrint ""Removing $R2 from HKCU Environment...""
-    DeleteRegValue ${env_hkcu} ""TESSDATA_PREFIX""
-  Next2:
-  # make sure windows knows about the change
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-!macroend
-
-!macro SetTESSDATA
-  !insertmacro RemoveTessdataPrefix
-  StrCpy $PathKey ""HKLM""
-  StrCmp $MultiUser.InstallMode ""AllUsers"" +2
-    StrCpy $PathKey ""HKCU""
-  DetailPrint ""Setting TESSDATA_PREFIX at $PathKey""
-  ${EnvVarUpdate} $0 ""TESSDATA_PREFIX"" ""A"" ""$PathKey"" ""$INSTDIR\""
-  # make sure windows knows about the change
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-!macroend
-!endif ; REGISTRY_SETTINGS
 
 !macro Download_Lang_Data Lang
   ; Download traineddata file.
@@ -214,7 +178,7 @@ Section -Main SEC0000
   File ${PREFIX}/bin/tesseract.exe
   File ${PREFIX}/bin/libtesseract-*.dll
 !ifdef CROSSBUILD
-  File ${SRCDIR}\dll\i686-w64-mingw32\*.dll
+  File ${SRCDIR}\dll\${ARCH}-w64-mingw32\*.dll
 !endif
   CreateDirectory ""$INSTDIR\tessdata""
   SetOutPath ""$INSTDIR\tessdata""
@@ -222,26 +186,22 @@ Section -Main SEC0000
   CreateDirectory ""$INSTDIR\tessdata\configs""
   SetOutPath ""$INSTDIR\tessdata\configs""
   File ${PREFIX}/share/tessdata/configs/*
+  CreateDirectory ""$INSTDIR\tessdata\script""
   CreateDirectory ""$INSTDIR\tessdata\tessconfigs""
   SetOutPath ""$INSTDIR\tessdata\tessconfigs""
   File ${PREFIX}/share/tessdata/tessconfigs/*
   CreateDirectory ""$INSTDIR\doc""
   SetOutPath ""$INSTDIR\doc""
   File ${SRCDIR}\AUTHORS
-  File ${SRCDIR}\COPYING
-  File ${SRCDIR}\testing\eurotext.tif
-  File ${SRCDIR}\testing\phototest.tif
-  File ${SRCDIR}\testing\README
+  File ${SRCDIR}\LICENSE
+  File ${SRCDIR}\README.md
 ##  File ${SRCDIR}\ReleaseNotes
 SectionEnd
 
 Section ""ScrollView"" SecScrollView
   SectionIn 1
-  CreateDirectory ""$INSTDIR\java""
-  SetOutPath ""$INSTDIR\java""
-  File ..\java\ScrollView.jar
-  File ..\java\piccolo2d-core-3.0.jar
-  File ..\java\piccolo2d-extras-3.0.jar
+  SetOutPath ""$INSTDIR\tessdata""
+  File ${PREFIX}/share/tessdata/*.jar
 SectionEnd
 
 Section ""Training Tools"" SecTr
@@ -254,12 +214,16 @@ SectionEnd
 !define UNINST_KEY ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}""
 
 Section -post SEC0001
+!ifdef W64
+  SetRegView 64
+!endif
   ;Store installation folder - we always use HKLM!
   WriteRegStr HKLM ""${REGKEY}"" ""Path"" ""$INSTDIR""
   WriteRegStr HKLM ""${REGKEY}"" ""Mode"" $MultiUser.InstallMode
   WriteRegStr HKLM ""${REGKEY}"" ""InstallDir"" ""$INSTDIR""
   WriteRegStr HKLM ""${REGKEY}"" ""CurrentVersion"" ""${VERSION}""
   WriteRegStr HKLM ""${REGKEY}"" ""Uninstaller"" ""${UNINST_EXE}""
+  ;WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\App Paths\tesseract.exe"" ""$INSTDIR\tesseract.exe""
   ;WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Run"" ""Tesseract-OCR"" ""$INSTDIR\tesseract.exe""
   ; Register to Add/Remove program in control panel
   WriteRegStr HKLM ""${UNINST_KEY}"" ""DisplayName"" ""${PRODUCT_NAME} - open source OCR engine""
@@ -290,17 +254,6 @@ Section ""Shortcuts creation"" SecCS
   ;CreateShortCut ""$QUICKLAUNCH\.lnk"" ""$INSTDIR\tesseract.exe"" """" ""$INSTDIR\tesseract.exe"" 0
 SectionEnd
 
-!ifdef REGISTRY_SETTINGS ; disabled because of bad behaviour with long PATH
-SectionGroup ""Registry settings"" SecRS
-    Section /o ""Add to Path"" SecRS_path
-        !insertmacro AddToPath
-    SectionEnd
-    Section /o ""Set TESSDATA_PREFIX variable"" SecRS_tessdata
-        !insertmacro SetTESSDATA
-    SectionEnd
-SectionGroupEnd
-!endif ; REGISTRY_SETTINGS
-
 ; Language files
 SectionGroup ""Language data"" SecGrp_LD
     Section ""English"" SecLang_eng
@@ -316,6 +269,195 @@ SectionGroup ""Language data"" SecGrp_LD
     SectionEnd
 SectionGroupEnd
 
+; Download script files
+SectionGroup ""Additional script data (download)"" SecGrp_ASD
+  Section /o ""Arabic script"" SecLang_Arabic
+    AddSize 8880
+    !insertmacro Download_Lang_Data script/Arabic
+  SectionEnd
+
+  Section /o ""Armenian script"" SecLang_Armenian
+    AddSize 7510
+    !insertmacro Download_Lang_Data script/Armenian
+  SectionEnd
+
+  Section /o ""Bengali script"" SecLang_Bengali
+    AddSize 5450
+    !insertmacro Download_Lang_Data script/Bengali
+  SectionEnd
+
+  Section /o ""Canadian Aboriginal script"" SecLang_Canadian_Aboriginal
+    AddSize 6850
+    !insertmacro Download_Lang_Data script/Canadian_Aboriginal
+  SectionEnd
+
+  Section /o ""Cherokee script"" SecLang_Cherokee
+    AddSize 4040
+    !insertmacro Download_Lang_Data script/Cherokee
+  SectionEnd
+
+  Section /o ""Cyrillic script"" SecLang_Cyrillic
+    AddSize 27900
+    !insertmacro Download_Lang_Data script/Cyrillic
+  SectionEnd
+
+  Section /o ""Devanagari script"" SecLang_Devanagari
+    AddSize 17100
+    !insertmacro Download_Lang_Data script/Devanagari
+  SectionEnd
+
+  Section /o ""Ethiopic script"" SecLang_Ethiopic
+    AddSize 8650
+    !insertmacro Download_Lang_Data script/Ethiopic
+  SectionEnd
+
+  Section /o ""Fraktur script"" SecLang_Fraktur
+    AddSize 10400
+    !insertmacro Download_Lang_Data script/Fraktur
+  SectionEnd
+
+  Section /o ""Georgian script"" SecLang_Georgian
+    AddSize 6630
+    !insertmacro Download_Lang_Data script/Georgian
+  SectionEnd
+
+  Section /o ""Greek script"" SecLang_Greek
+    AddSize 2900
+    !insertmacro Download_Lang_Data script/Greek
+  SectionEnd
+
+  Section /o ""Gujarati script"" SecLang_Gujarati
+    AddSize 4780
+    !insertmacro Download_Lang_Data script/Gujarati
+  SectionEnd
+
+  Section /o ""Gurmukhi script"" SecLang_Gurmukhi
+    AddSize 4020
+    !insertmacro Download_Lang_Data script/Gurmukhi
+  SectionEnd
+
+  Section /o ""Han Simplified script"" SecLang_HanS
+    AddSize 5700
+    !insertmacro Download_Lang_Data script/HanS
+  SectionEnd
+
+  Section /o ""Han Simplified vertical script"" SecLang_HanS_vert
+    AddSize 5304
+    !insertmacro Download_Lang_Data script/HanS_vert
+  SectionEnd
+
+  Section /o ""Han Traditional script"" SecLang_HanT
+    AddSize 5200
+    !insertmacro Download_Lang_Data script/HanT
+  SectionEnd
+
+  Section /o ""Han Traditional vertical script"" SecLang_HanT_vert
+    AddSize 5200
+    !insertmacro Download_Lang_Data script/HanT_vert
+  SectionEnd
+
+  Section /o ""Hangul script"" SecLang_Hangul
+    AddSize 4620
+    !insertmacro Download_Lang_Data script/Hangul
+  SectionEnd
+
+  Section /o ""Hangul vertical script"" SecLang_Hangul_vert
+    AddSize 4510
+    !insertmacro Download_Lang_Data script/Hangul_vert
+  SectionEnd
+
+  Section /o ""Hebrew script"" SecLang_Hebrew
+    AddSize 4640
+    !insertmacro Download_Lang_Data script/Hebrew
+  SectionEnd
+
+  Section /o ""Japanese script"" SecLang_Japanese
+    AddSize 5610
+    !insertmacro Download_Lang_Data script/Japanese
+  SectionEnd
+
+  Section /o ""Japanese vertical script"" SecLang_Japanese_vert
+    AddSize 6150
+    !insertmacro Download_Lang_Data script/Japanese_vert
+  SectionEnd
+
+  Section /o ""Kannada script"" SecLang_Kannada
+    AddSize 6460
+    !insertmacro Download_Lang_Data script/Kannada
+  SectionEnd
+
+  Section /o ""Khmer script"" SecLang_Khmer
+    AddSize 4270
+    !insertmacro Download_Lang_Data script/Khmer
+  SectionEnd
+
+  Section /o ""Lao script"" SecLang_Script_Lao
+    AddSize 9640
+    !insertmacro Download_Lang_Data script/Lao
+  SectionEnd
+
+  Section /o ""Latin script"" SecLang_Latin
+    AddSize 85200
+    !insertmacro Download_Lang_Data script/Latin
+  SectionEnd
+
+  Section /o ""Malayalam script"" SecLang_Malayalam
+    AddSize 8590
+    !insertmacro Download_Lang_Data script/Malayalam
+  SectionEnd
+
+  Section /o ""Myanmar script"" SecLang_Myanmar
+    AddSize 7480
+    !insertmacro Download_Lang_Data script/Myanmar
+  SectionEnd
+
+  Section /o ""Oriya script"" SecLang_Oriya
+    AddSize 5480
+    !insertmacro Download_Lang_Data script/Oriya
+  SectionEnd
+
+  Section /o ""Sinhala script"" SecLang_Sinhala
+    AddSize 4560
+    !insertmacro Download_Lang_Data script/Sinhala
+  SectionEnd
+
+  Section /o ""Syriac script"" SecLang_Syriac
+    AddSize 5530
+    !insertmacro Download_Lang_Data script/Syriac
+  SectionEnd
+
+  Section /o ""Tamil script"" SecLang_Tamil
+    AddSize 6760
+    !insertmacro Download_Lang_Data script/Tamil
+  SectionEnd
+
+  Section /o ""Telugu script"" SecLang_Telugu
+    AddSize 6180
+    !insertmacro Download_Lang_Data script/Telugu
+  SectionEnd
+
+  Section /o ""Thaana script"" SecLang_Thaana
+    AddSize 5770
+    !insertmacro Download_Lang_Data script/Thaana
+  SectionEnd
+
+  Section /o ""Thai script"" SecLang_Thai
+    AddSize 4050
+    !insertmacro Download_Lang_Data script/Thai
+  SectionEnd
+
+  Section /o ""Tibetan script"" SecLang_Tibetan
+    AddSize 5440
+    !insertmacro Download_Lang_Data script/Tibetan
+  SectionEnd
+
+  Section /o ""Vietnamese script"" SecLang_Vietnamese
+    AddSize 1590
+    !insertmacro Download_Lang_Data script/Vietnamese
+  SectionEnd
+
+SectionGroupEnd
+
 ; Download language files
 SectionGroup ""Additional language data (download)"" SecGrp_ALD
   Section /o ""Math / equation detection module"" SecLang_equ
@@ -327,531 +469,610 @@ SectionGroup ""Additional language data (download)"" SecGrp_ALD
   ; https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages
 
   Section /o ""Afrikaans"" SecLang_afr
-    AddSize 5080
+    AddSize 2530
     !insertmacro Download_Lang_Data afr
   SectionEnd
 
-  Section /o ""Albanian"" SecLang_sqi
-    AddSize 6436
-    !insertmacro Download_Lang_Data sqi
-  SectionEnd
-
   Section /o ""Amharic"" SecLang_amh
-    AddSize 2888
+    AddSize 5220
     !insertmacro Download_Lang_Data amh
   SectionEnd
 
   Section /o ""Arabic"" SecLang_ara
-    AddSize 27888
+    AddSize 1370
     !insertmacro Download_Lang_Data ara
   SectionEnd
 
   Section /o ""Assamese"" SecLang_asm
-    AddSize 15460
+    AddSize 1950
     !insertmacro Download_Lang_Data asm
   SectionEnd
 
   Section /o ""Azerbaijani"" SecLang_aze
-    AddSize 6464
+    AddSize 3360
     !insertmacro Download_Lang_Data aze
   SectionEnd
 
-  Section /o ""Azerbaijani (Cyrilic)"" SecLang_aze_cyrl
-    AddSize 2720
+  Section /o ""Azerbaijani (Cyrillic)"" SecLang_aze_cyrl
+    AddSize 1850
     !insertmacro Download_Lang_Data aze_cyrl
   SectionEnd
 
-  Section /o ""Basque"" SecLang_eus
-    AddSize 4856
-    !insertmacro Download_Lang_Data eus
-  SectionEnd
-
   Section /o ""Belarusian"" SecLang_bel
-    AddSize 6664
+    AddSize 3520
     !insertmacro Download_Lang_Data bel
   SectionEnd
 
   Section /o ""Bengali"" SecLang_ben
-    AddSize 15192
+    AddSize 836
     !insertmacro Download_Lang_Data ben
   SectionEnd
 
   Section /o ""Tibetan"" SecLang_bod
-    AddSize 24648
+    AddSize 1880
     !insertmacro Download_Lang_Data bod
   SectionEnd
 
   Section /o ""Bosnian"" SecLang_bos
-    AddSize 5308
+    AddSize 2380
     !insertmacro Download_Lang_Data bos
   SectionEnd
 
+  Section /o ""Breton"" SecLang_bre
+    AddSize 6188
+    !insertmacro Download_Lang_Data bre
+  SectionEnd
+
   Section /o ""Bulgarian"" SecLang_bul
-    AddSize 5888
+    AddSize 1600
     !insertmacro Download_Lang_Data bul
   SectionEnd
 
   Section /o ""Catalan"" SecLang_cat
-    AddSize 5232
+    AddSize 1090
     !insertmacro Download_Lang_Data cat
   SectionEnd
 
   Section /o ""Cebuano"" SecLang_ceb
-    AddSize 1648
+    AddSize 699
     !insertmacro Download_Lang_Data ceb
   SectionEnd
 
-  Section /o ""Cherokee"" SecLang_chr
-    AddSize 1060
-    !insertmacro Download_Lang_Data chr
+  Section /o ""Czech"" SecLang_ces
+    AddSize 3620
+    !insertmacro Download_Lang_Data ces
+  SectionEnd
+
+  Section /o ""Chinese (Simplified)"" SecLang_chi_sim
+    AddSize 2350
+    !insertmacro Download_Lang_Data chi_sim
+  SectionEnd
+
+  Section /o ""Chinese (Simplified vertical)"" SecLang_chi_sim_vert
+    AddSize 1840
+    !insertmacro Download_Lang_Data chi_sim_vert
   SectionEnd
 
   Section /o ""Chinese (Traditional)"" SecLang_chi_tra
-    AddSize 55368
+    AddSize 2260
     !insertmacro Download_Lang_Data chi_tra
   SectionEnd
 
-  Section /o ""Chinese (Simplified)"" SecLang_chi_sim
-    AddSize 41108
-    !insertmacro Download_Lang_Data chi_sim
+  Section /o ""Chinese (Traditional vertical)"" SecLang_chi_tra_vert
+    AddSize 1740
+    !insertmacro Download_Lang_Data chi_tra_vert
   SectionEnd
 
-  Section /o ""Croatian"" SecLang_hrv
-    AddSize 8924
-    !insertmacro Download_Lang_Data hrv
+  Section /o ""Cherokee"" SecLang_chr
+    AddSize 366
+    !insertmacro Download_Lang_Data chr
   SectionEnd
 
-  Section /o ""Czech"" SecLang_ces
-    AddSize 11620
-    !insertmacro Download_Lang_Data ces
+  Section /o ""Corsican"" SecLang_cos
+    AddSize 2190
+    !insertmacro Download_Lang_Data cos
   SectionEnd
 
   Section /o ""Welsh"" SecLang_cym
-    AddSize 3704
+    AddSize 2110
     !insertmacro Download_Lang_Data cym
   SectionEnd
 
   Section /o ""Danish"" SecLang_dan
-    AddSize 7172
+    AddSize 2460
     !insertmacro Download_Lang_Data dan
   SectionEnd
 
-  Section /o ""Danish (Fraktur)"" SecLang_dan_frak
-    AddSize 1588
-    !insertmacro Download_Lang_Data dan_frak
+  Section /o ""German"" SecLang_deu
+    AddSize 1450
+    !insertmacro Download_Lang_Data deu
   SectionEnd
 
-  Section /o ""Dutch"" SecLang_nld
-    AddSize 16704
-    !insertmacro Download_Lang_Data nld
+  Section /o ""Divehi"" SecLang_div
+    AddSize 1690
+    !insertmacro Download_Lang_Data div
+  SectionEnd
+
+  Section /o ""Dzongkha"" SecLang_dzo
+    AddSize 439
+    !insertmacro Download_Lang_Data dzo
+  SectionEnd
+
+  Section /o ""Greek"" SecLang_ell
+    AddSize 1350
+    !insertmacro Download_Lang_Data ell
   SectionEnd
 
   Section /o ""English - Middle (1100-1500)"" SecLang_enm
-    AddSize 2060
+    AddSize 2960
     !insertmacro Download_Lang_Data enm
   SectionEnd
 
   Section /o ""Esperanto"" SecLang_epo
-    AddSize 6448
+    AddSize 4510
     !insertmacro Download_Lang_Data epo
   SectionEnd
 
   Section /o ""Estonian"" SecLang_est
-    AddSize 9424
+    AddSize 4250
     !insertmacro Download_Lang_Data est
   SectionEnd
 
-  Section /o ""German"" SecLang_deu
-    AddSize 13060
-    !insertmacro Download_Lang_Data deu
+  Section /o ""Basque"" SecLang_eus
+    AddSize 4940
+    !insertmacro Download_Lang_Data eus
   SectionEnd
 
-  Section /o ""German (Fraktur)"" SecLang_deu_frak
-    AddSize 1936
-    !insertmacro Download_Lang_Data deu_frak
+  Section /o ""Faroese"" SecLang_fao
+    AddSize 3280
+    !insertmacro Download_Lang_Data fao
   SectionEnd
 
-  Section /o ""Dzongkha"" SecLang_dzo
-    AddSize 3236
-    !insertmacro Download_Lang_Data dzo
+  Section /o ""Persian"" SecLang_fas
+    AddSize 421
+    !insertmacro Download_Lang_Data fas
   SectionEnd
 
-  Section /o ""Greek"" SecLang_ell
-    AddSize 5296
-    !insertmacro Download_Lang_Data ell
+  Section /o ""Filipino"" SecLang_fil
+    AddSize 1760
+    !insertmacro Download_Lang_Data fil
   SectionEnd
 
-  Section /o ""Greek - Ancient"" SecLang_grc
-    AddSize 5064
-    !insertmacro Download_Lang_Data grc
+ Section /o ""Finnish"" SecLang_fin
+    AddSize 7500
+    !insertmacro Download_Lang_Data fin
   SectionEnd
 
-  Section /o ""Persian"" SecLang_fas
-    AddSize 4692
-    !insertmacro Download_Lang_Data fas
+  Section /o ""French"" SecLang_fra
+    AddSize 1080
+    !insertmacro Download_Lang_Data fra
   SectionEnd
 
-  Section /o ""Finnish"" SecLang_fin
-    AddSize 12964
-    !insertmacro Download_Lang_Data fin
+ Section /o ""German Fraktur"" SecLang_frk
+    AddSize 6130
+    !insertmacro Download_Lang_Data frk
   SectionEnd
 
-  Section /o ""Frankish"" SecLang_frk
-    AddSize 16072
-    !insertmacro Download_Lang_Data frk
+ Section /o ""French - Middle (ca. 1400-1600)"" SecLang_frm
+    AddSize 1930
+    !insertmacro Download_Lang_Data frm
   SectionEnd
 
-  Section /o ""French"" SecLang_fra
-    AddSize 36504
-    !insertmacro Download_Lang_Data fra
+  Section /o ""Frisian (Western)"" SecLang_fry
+    AddSize 1820
+    !insertmacro Download_Lang_Data fry
   SectionEnd
 
-  Section /o ""French - Middle (ca. 1400-1600)"" SecLang_frm
-    AddSize 15468
-    !insertmacro Download_Lang_Data frm
+  Section /o ""Gaelic (Scots)"" SecLang_gla
+    AddSize 2930
+    !insertmacro Download_Lang_Data gla
   SectionEnd
 
   Section /o ""Irish"" SecLang_gle
-    AddSize 3404
+    AddSize 1130
     !insertmacro Download_Lang_Data gle
   SectionEnd
 
   Section /o ""Galician"" SecLang_glg
-    AddSize 5392
+    AddSize 2440
     !insertmacro Download_Lang_Data glg
   SectionEnd
 
+  Section /o ""Greek, Ancient (-1453)"" SecLang_grc
+    AddSize 2140
+    !insertmacro Download_Lang_Data grc
+  SectionEnd
+
   Section /o ""Gujarati"" SecLang_guj
-    AddSize 10380
+    AddSize 1350
     !insertmacro Download_Lang_Data guj
   SectionEnd
 
   Section /o ""Haitian"" SecLang_hat
-    AddSize 1320
+    AddSize 1890
     !insertmacro Download_Lang_Data hat
   SectionEnd
 
   Section /o ""Hebrew"" SecLang_heb
-    AddSize 4240
+    AddSize 939
     !insertmacro Download_Lang_Data heb
   SectionEnd
 
   Section /o ""Hindi"" SecLang_hin
-    AddSize 22212
+    AddSize 1070
     !insertmacro Download_Lang_Data hin
   SectionEnd
 
+  Section /o ""Croatian"" SecLang_hrv
+    AddSize 3910
+    !insertmacro Download_Lang_Data hrv
+  SectionEnd
+
   Section /o ""Hungarian"" SecLang_hun
-    AddSize 11932
+    AddSize 5050
     !insertmacro Download_Lang_Data hun
   SectionEnd
 
-  Section /o ""Inuktitut"" SecLang_iku
-    AddSize 972
-    !insertmacro Download_Lang_Data iku
+  Section /o ""Armenian"" SecLang_hye
+    AddSize 3300
+    !insertmacro Download_Lang_Data hye
   SectionEnd
 
-  Section /o ""Icelandic"" SecLang_isl
-    AddSize 5956
-    !insertmacro Download_Lang_Data isl
+  Section /o ""Inuktitut"" SecLang_iku
+    AddSize 2670
+    !insertmacro Download_Lang_Data iku
   SectionEnd
 
   Section /o ""Indonesian"" SecLang_ind
-    AddSize 6352
+    AddSize 1070
     !insertmacro Download_Lang_Data ind
   SectionEnd
 
+  Section /o ""Icelandic"" SecLang_isl
+    AddSize 2170
+    !insertmacro Download_Lang_Data isl
+  SectionEnd
+
   Section /o ""Italian"" SecLang_ita
-    AddSize 31980
+    AddSize 2580
     !insertmacro Download_Lang_Data ita
   SectionEnd
 
   Section /o ""Italian (Old)"" SecLang_ita_old
-    AddSize 13732
+    AddSize 3130
     !insertmacro Download_Lang_Data ita_old
   SectionEnd
 
   Section /o ""Javanese"" SecLang_jav
-    AddSize 4304
+    AddSize 2840
     !insertmacro Download_Lang_Data jav
   SectionEnd
 
   Section /o ""Japanese"" SecLang_jpn
-    AddSize 32304
+    AddSize 2360
     !insertmacro Download_Lang_Data jpn
   SectionEnd
 
+  Section /o ""Japanese (vertical)"" SecLang_jpn_vert
+    AddSize 2900
+    !insertmacro Download_Lang_Data jpn_vert
+  SectionEnd
+
   Section /o ""Kannada"" SecLang_kan
-    AddSize 34828
+    AddSize 3440
     !insertmacro Download_Lang_Data kan
   SectionEnd
 
   Section /o ""Georgian"" SecLang_kat
-    AddSize 6076
+    AddSize 2410
     !insertmacro Download_Lang_Data kat
   SectionEnd
 
   Section /o ""Georgian (Old)"" SecLang_kat_old
-    AddSize 644
+    AddSize 413
     !insertmacro Download_Lang_Data kat_old
   SectionEnd
 
   Section /o ""Kazakh"" SecLang_kaz
-    AddSize 4424
+    AddSize 4520
     !insertmacro Download_Lang_Data kaz
   SectionEnd
 
   Section /o ""Central Khmer"" SecLang_khm
-    AddSize 47712
+    AddSize 1380
     !insertmacro Download_Lang_Data khm
   SectionEnd
 
   Section /o ""Kirghiz"" SecLang_kir
-    AddSize 5376
+    AddSize 9470
     !insertmacro Download_Lang_Data kir
   SectionEnd
 
   Section /o ""Korean"" SecLang_kor
-    AddSize 13004
+    AddSize 1600
     !insertmacro Download_Lang_Data kor
   SectionEnd
 
-  Section /o ""Kurdish"" SecLang_kur
-    AddSize 1976
-    !insertmacro Download_Lang_Data kur
+  Section /o ""Kurdish (Kurmanji)"" SecLang_kmr
+    AddSize 3400
+    !insertmacro Download_Lang_Data kmr
   SectionEnd
 
   Section /o ""Lao"" SecLang_lao
-    AddSize 20628
+    AddSize 6090
     !insertmacro Download_Lang_Data lao
   SectionEnd
 
   Section /o ""Latin"" SecLang_lat
-    AddSize 5888
+    AddSize 3040
     !insertmacro Download_Lang_Data lat
   SectionEnd
 
   Section /o ""Latvian"" SecLang_lav
-    AddSize 7620
+    AddSize 2590
     !insertmacro Download_Lang_Data lav
   SectionEnd
 
   Section /o ""Lithuanian"" SecLang_lit
-    AddSize 8708
+    AddSize 3010
     !insertmacro Download_Lang_Data lit
   SectionEnd
 
-  Section /o ""Macedonian"" SecLang_mkd
-    AddSize 3748
-    !insertmacro Download_Lang_Data mkd
-  SectionEnd
-
-  Section /o ""Malay"" SecLang_msa
-    AddSize 6344
-    !insertmacro Download_Lang_Data msa
+  Section /o ""Luxembourgish"" SecLang_ltz
+    AddSize 2490
+    !insertmacro Download_Lang_Data ltz
   SectionEnd
 
   Section /o ""Malayalam"" SecLang_mal
-    AddSize 8584
+    AddSize 5030
     !insertmacro Download_Lang_Data mal
   SectionEnd
 
+  Section /o ""Marathi"" SecLang_mar
+    AddSize 2020
+    !insertmacro Download_Lang_Data mar
+  SectionEnd
+
+  Section /o ""Macedonian"" SecLang_mkd
+    AddSize 1530
+    !insertmacro Download_Lang_Data mkd
+  SectionEnd
+
   Section /o ""Maltese"" SecLang_mlt
-    AddSize 5000
+    AddSize 2200
     !insertmacro Download_Lang_Data mlt
   SectionEnd
 
-  Section /o ""Marathi"" SecLang_mar
-    AddSize 13908
-    !insertmacro Download_Lang_Data mar
+  Section /o ""Mongolian"" SecLang_mon
+    AddSize 2040
+    !insertmacro Download_Lang_Data mon
+  SectionEnd
+
+  Section /o ""Maori"" SecLang_mri
+    AddSize 843
+    !insertmacro Download_Lang_Data mri
+  SectionEnd
+
+  Section /o ""Malay"" SecLang_msa
+    AddSize 1670
+    !insertmacro Download_Lang_Data msa
   SectionEnd
 
   Section /o ""Burmese"" SecLang_mya
-    AddSize 68140
+    AddSize 4430
     !insertmacro Download_Lang_Data mya
   SectionEnd
 
   Section /o ""Nepali"" SecLang_nep
-    AddSize 15496
+    AddSize 979
     !insertmacro Download_Lang_Data nep
   SectionEnd
 
+  Section /o ""Dutch; Flemish"" SecLang_nld
+    AddSize 5770
+    !insertmacro Download_Lang_Data nld
+  SectionEnd
+
   Section /o ""Norwegian"" SecLang_nor
-    AddSize 8072
+    AddSize 3440
     !insertmacro Download_Lang_Data nor
   SectionEnd
 
+  Section /o ""Occitan (post 1500)"" SecLang_oci
+    AddSize 6030
+    !insertmacro Download_Lang_Data oci
+  SectionEnd
+
   Section /o ""Oriya"" SecLang_ori
-    AddSize 7716
+    AddSize 1410
     !insertmacro Download_Lang_Data ori
   SectionEnd
 
   Section /o ""Panjabi / Punjabi"" SecLang_pan
-    AddSize 9976
+    AddSize 4860
     !insertmacro Download_Lang_Data pan
   SectionEnd
 
   Section /o ""Polish"" SecLang_pol
-    AddSize 13592
+    AddSize 4540
     !insertmacro Download_Lang_Data pol
   SectionEnd
 
   Section /o ""Portuguese"" SecLang_por
-    AddSize 12612
+    AddSize 1890
     !insertmacro Download_Lang_Data por
   SectionEnd
 
   Section /o ""Pushto / Pashto"" SecLang_pus
-    AddSize 2436
+    AddSize 1690
     !insertmacro Download_Lang_Data pus
   SectionEnd
 
+  Section /o ""Quechua"" SecLang_que
+    AddSize 4790
+    !insertmacro Download_Lang_Data que
+  SectionEnd
+
   Section /o ""Romanian"" SecLang_ron
-    AddSize 7772
+    AddSize 2270
     !insertmacro Download_Lang_Data ron
   SectionEnd
 
   Section /o ""Russian"" SecLang_rus
-    AddSize 38472
+    AddSize 3680
     !insertmacro Download_Lang_Data rus
   SectionEnd
 
   Section /o ""Sanskrit"" SecLang_san
-    AddSize 22220
+    AddSize 1180
     !insertmacro Download_Lang_Data san
   SectionEnd
 
   Section /o ""Sinhala / Sinhalese"" SecLang_sin
-    AddSize 6636
+    AddSize 1650
     !insertmacro Download_Lang_Data sin
   SectionEnd
 
   Section /o ""Slovak"" SecLang_slk
-    AddSize 8916
+    AddSize 4220
     !insertmacro Download_Lang_Data slk
   SectionEnd
 
-  Section /o ""Slovak (Fraktur)"" SecLang_slk_frak
-    AddSize 828
-    !insertmacro Download_Lang_Data slk_frak
-  SectionEnd
-
   Section /o ""Slovenian"" SecLang_slv
-    AddSize 6668
+    AddSize 2860
     !insertmacro Download_Lang_Data slv
   SectionEnd
 
+  Section /o ""Sindhi"" SecLang_snd
+    AddSize 1620
+    !insertmacro Download_Lang_Data snd
+  SectionEnd
+
   Section /o ""Spanish"" SecLang_spa
-    AddSize 38276
+    AddSize 2190
     !insertmacro Download_Lang_Data spa
   SectionEnd
 
   Section /o ""Spanish (Old)"" SecLang_spa_old
-    AddSize 16348
+    AddSize 2760
     !insertmacro Download_Lang_Data spa_old
   SectionEnd
 
+  Section /o ""Albanian"" SecLang_sqi
+    AddSize 1790
+    !insertmacro Download_Lang_Data sqi
+  SectionEnd
+
   Section /o ""Serbian"" SecLang_srp
-    AddSize 4504
+    AddSize 2050
     !insertmacro Download_Lang_Data srp
   SectionEnd
 
   Section /o ""Serbian (Latin)"" SecLang_srp_latn
-    AddSize 5952
+    AddSize 3130
     !insertmacro Download_Lang_Data srp_latn
   SectionEnd
 
+  Section /o ""Sundanese"" SecLang_sun
+    AddSize 1310
+    !insertmacro Download_Lang_Data sun
+  SectionEnd
+
   Section /o ""Swahili"" SecLang_swa
-    AddSize 3772
+    AddSize 2070
     !insertmacro Download_Lang_Data swa
   SectionEnd
 
   Section /o ""Swedish"" SecLang_swe
-    AddSize 9240
+    AddSize 3970
     !insertmacro Download_Lang_Data swe
   SectionEnd
 
-!ifdef OLD
-  Section /o ""Swedish (Fraktur)"" SecLang_swe_frak
-    AddSize 999
-    !insertmacro Download_Lang_Data swe-frak
-  SectionEnd
-!endif ; OLD
-
   Section /o ""Syriac"" SecLang_syr
-    AddSize 2672
+    AddSize 2100
     !insertmacro Download_Lang_Data syr
   SectionEnd
 
-  Section /o ""Tagalog"" SecLang_tgl
-    AddSize 4020
-    !insertmacro Download_Lang_Data tgl
-  SectionEnd
-
-  Section /o ""Tajik"" SecLang_tgk
-    AddSize 1096
-    !insertmacro Download_Lang_Data tgk
+ Section /o ""Tamil"" SecLang_tam
+    AddSize 3090
+    !insertmacro Download_Lang_Data tam
   SectionEnd
 
-  Section /o ""Tamil"" SecLang_tam
-    AddSize 5000
-    !insertmacro Download_Lang_Data tam
+  Section /o ""Tatar"" SecLang_tat
+    AddSize 1020
+    !insertmacro Download_Lang_Data tat
   SectionEnd
 
   Section /o ""Telugu"" SecLang_tel
-    AddSize 38404
+    AddSize 2640
     !insertmacro Download_Lang_Data tel
   SectionEnd
 
+  Section /o ""Tajik"" SecLang_tgk
+    AddSize 2480
+    !insertmacro Download_Lang_Data tgk
+  SectionEnd
+
   Section /o ""Thai"" SecLang_tha
-    AddSize 13248
+    AddSize 1020
     !insertmacro Download_Lang_Data tha
   SectionEnd
 
   Section /o ""Tigrinya"" SecLang_tir
-    AddSize 1764
+    AddSize 370
     !insertmacro Download_Lang_Data tir
   SectionEnd
 
+ Section /o ""Tonga"" SecLang_ton
+    AddSize 925
+    !insertmacro Download_Lang_Data ton
+  SectionEnd
+
   Section /o ""Turkish"" SecLang_tur
-    AddSize 13744
+    AddSize 4240
     !insertmacro Download_Lang_Data tur
   SectionEnd
 
   Section /o ""Uighur"" SecLang_uig
-    AddSize 1972
+    AddSize 2660
     !insertmacro Download_Lang_Data uig
   SectionEnd
 
   Section /o ""Ukrainian"" SecLang_ukr
-    AddSize 7856
+    AddSize 3650
     !insertmacro Download_Lang_Data ukr
   SectionEnd
 
   Section /o ""Urdu"" SecLang_urd
-    AddSize 4716
+    AddSize 1330
     !insertmacro Download_Lang_Data urd
   SectionEnd
 
   Section /o ""Uzbek"" SecLang_uzb
-    AddSize 4188
+    AddSize 6170
     !insertmacro Download_Lang_Data uzb
   SectionEnd
 
-  Section /o ""Uzbek (Cyrilic)"" SecLang_uzb_cyrl
-    AddSize 3264
+  Section /o ""Uzbek (Cyrillic)"" SecLang_uzb_cyrl
+    AddSize 1490
     !insertmacro Download_Lang_Data uzb_cyrl
   SectionEnd
 
   Section /o ""Vietnamese"" SecLang_vie
-    AddSize 5956
+    AddSize 519
     !insertmacro Download_Lang_Data vie
   SectionEnd
 
   Section /o ""Yiddish"" SecLang_yid
-    AddSize 4140
+    AddSize 533
     !insertmacro Download_Lang_Data yid
   SectionEnd
+
+  Section /o ""Yoruba"" SecLang_yor
+    AddSize 941
+    !insertmacro Download_Lang_Data yor
+  SectionEnd
+
 SectionGroupEnd
 
 ;--------------------------------
@@ -901,17 +1122,15 @@ SectionGroupEnd
 
 ;Section /o -un.Main UNSEC0000
 Section -un.Main UNSEC0000
+!ifdef W64
+  SetRegView 64
+!endif
   DetailPrint ""Removing everything""
   Delete ""$SMPROGRAMS\${PRODUCT_NAME}\*.*""
   RMDir  ""$SMPROGRAMS\${PRODUCT_NAME}""
   DetailPrint ""Removing registry info""
   DeleteRegKey HKLM ""Software\Tesseract-OCR""
   SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-!ifdef REGISTRY_SETTINGS
-  ${un.EnvVarUpdate} $0 ""PATH"" ""R"" HKLM $INSTDIR
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-  !insertmacro RemoveTessdataPrefix
-!endif ; REGISTRY_SETTINGS
 
   # remove the Add/Remove information
   DeleteRegKey HKLM ""${UNINST_KEY}""
@@ -939,6 +1158,9 @@ FunctionEnd
 !macroend
 
 Function .onInit
+!ifdef W64
+  SetRegView 64
+!endif
   Call PreventMultipleInstances
   !insertmacro MUI_LANGDLL_DISPLAY
   ;RequestExecutionLevel admin
@@ -1071,14 +1293,12 @@ Function .onInit
     Czech: !insertmacro SelectSection ${SecLang_ces}
             Goto lang_end
     Danish: !insertmacro SelectSection ${SecLang_dan}
-            !insertmacro SelectSection ${SecLang_dan_frak}
             Goto lang_end
     Dutch: !insertmacro SelectSection ${SecLang_nld}
             Goto lang_end
     Estonian: !insertmacro SelectSection ${SecLang_hrv}
             Goto lang_end
     German: !insertmacro SelectSection ${SecLang_deu}
-            !insertmacro SelectSection ${SecLang_deu_frak}
             Goto lang_end
     Greek: !insertmacro SelectSection ${SecLang_ell}
             !insertmacro SelectSection ${SecLang_grc}
@@ -1131,7 +1351,6 @@ Function .onInit
     Russian: !insertmacro SelectSection ${SecLang_rus}
             Goto lang_end
     Slovak: !insertmacro SelectSection ${SecLang_slk}
-            !insertmacro SelectSection ${SecLang_slk_frak}
             Goto lang_end
     Slovenian: !insertmacro SelectSection ${SecLang_slv}
             Goto lang_end
@@ -1143,9 +1362,6 @@ Function .onInit
     Swahili: !insertmacro SelectSection ${SecLang_swa}
             Goto lang_end
     Swedish: !insertmacro SelectSection ${SecLang_swe}
-!ifdef OLD
-            !insertmacro SelectSection ${SecLang_swe_frak}
-!endif
             Goto lang_end
     Tamil: !insertmacro SelectSection ${SecLang_tam}
             Goto lang_end
@@ -1174,7 +1390,7 @@ Function .onInstFailed
 FunctionEnd
 
 Function ShowReadme
-  Exec ""iexplore.exe $INSTDIR\doc\README""
+  Exec '""wordpad"" ""doc\README.md""'
   ;BringToFront
 FunctionEnd
 
","{'added': [(15, '; Links to NSIS documentation:'), (16, '; https://nsis.sourceforge.io/Docs/Modern%20UI%202/Readme.html'), (17, ''), (33, '!define VERSION undefined'), (43, '  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata_fast/master""'), (50, '!ifdef W64'), (51, '!define ARCH ""x86_64""'), (52, '!define SETUP ""tesseract-ocr-w64-setup""'), (53, '!else'), (54, '!define ARCH ""i686""'), (55, '!define SETUP ""tesseract-ocr-w32-setup""'), (56, '!endif'), (57, ''), (58, '# Name of program and file'), (59, '!ifdef VERSION'), (60, 'OutFile ${SETUP}-${VERSION}.exe'), (61, '!else'), (62, 'OutFile ${SETUP}.exe'), (63, '!endif'), (64, ''), (65, '!define PREFIX ""../usr/${ARCH}-w64-mingw32""'), (72, 'BrandingText /TRIMCENTER ""(c) 2010-2019 ${PRODUCT_NAME}""'), (81, '# https://nsis.sourceforge.io/Docs/MultiUser/Readme.html'), (82, '!define MULTIUSER_EXECUTIONLEVEL Highest'), (90, '!ifdef W64'), (91, '!define MULTIUSER_USE_PROGRAMFILES64'), (92, '!endif'), (103, '; Showing the README does not work.'), (104, ';!define MUI_FINISHPAGE_SHOWREADME ""$INSTDIR\\doc\\README.md""'), (105, ';!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme'), (106, ';!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""'), (129, '!insertmacro MUI_PAGE_LICENSE ""${SRCDIR}\\LICENSE""'), (181, '  File ${SRCDIR}\\dll\\${ARCH}-w64-mingw32\\*.dll'), (189, '  CreateDirectory ""$INSTDIR\\tessdata\\script""'), (196, '  File ${SRCDIR}\\LICENSE'), (197, '  File ${SRCDIR}\\README.md'), (203, '  SetOutPath ""$INSTDIR\\tessdata""'), (204, '  File ${PREFIX}/share/tessdata/*.jar'), (217, '!ifdef W64'), (218, '  SetRegView 64'), (219, '!endif'), (226, '  ;WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\tesseract.exe"" ""$INSTDIR\\tesseract.exe""'), (272, '; Download script files'), (273, 'SectionGroup ""Additional script data (download)"" SecGrp_ASD'), (274, '  Section /o ""Arabic script"" SecLang_Arabic'), (275, '    AddSize 8880'), (276, '    !insertmacro Download_Lang_Data script/Arabic'), (277, '  SectionEnd'), (278, ''), (279, '  Section /o ""Armenian script"" SecLang_Armenian'), (280, '    AddSize 7510'), (281, '    !insertmacro Download_Lang_Data script/Armenian'), (282, '  SectionEnd'), (283, ''), (284, '  Section /o ""Bengali script"" SecLang_Bengali'), (285, '    AddSize 5450'), (286, '    !insertmacro Download_Lang_Data script/Bengali'), (287, '  SectionEnd'), (288, ''), (289, '  Section /o ""Canadian Aboriginal script"" SecLang_Canadian_Aboriginal'), (290, '    AddSize 6850'), (291, '    !insertmacro Download_Lang_Data script/Canadian_Aboriginal'), (292, '  SectionEnd'), (293, ''), (294, '  Section /o ""Cherokee script"" SecLang_Cherokee'), (295, '    AddSize 4040'), (296, '    !insertmacro Download_Lang_Data script/Cherokee'), (297, '  SectionEnd'), (298, ''), (299, '  Section /o ""Cyrillic script"" SecLang_Cyrillic'), (300, '    AddSize 27900'), (301, '    !insertmacro Download_Lang_Data script/Cyrillic'), (302, '  SectionEnd'), (303, ''), (304, '  Section /o ""Devanagari script"" SecLang_Devanagari'), (305, '    AddSize 17100'), (306, '    !insertmacro Download_Lang_Data script/Devanagari'), (307, '  SectionEnd'), (308, ''), (309, '  Section /o ""Ethiopic script"" SecLang_Ethiopic'), (310, '    AddSize 8650'), (311, '    !insertmacro Download_Lang_Data script/Ethiopic'), (312, '  SectionEnd'), (313, ''), (314, '  Section /o ""Fraktur script"" SecLang_Fraktur'), (315, '    AddSize 10400'), (316, '    !insertmacro Download_Lang_Data script/Fraktur'), (317, '  SectionEnd'), (318, ''), (319, '  Section /o ""Georgian script"" SecLang_Georgian'), (320, '    AddSize 6630'), (321, '    !insertmacro Download_Lang_Data script/Georgian'), (322, '  SectionEnd'), (323, ''), (324, '  Section /o ""Greek script"" SecLang_Greek'), (325, '    AddSize 2900'), (326, '    !insertmacro Download_Lang_Data script/Greek'), (327, '  SectionEnd'), (328, ''), (329, '  Section /o ""Gujarati script"" SecLang_Gujarati'), (330, '    AddSize 4780'), (331, '    !insertmacro Download_Lang_Data script/Gujarati'), (332, '  SectionEnd'), (333, ''), (334, '  Section /o ""Gurmukhi script"" SecLang_Gurmukhi'), (335, '    AddSize 4020'), (336, '    !insertmacro Download_Lang_Data script/Gurmukhi'), (337, '  SectionEnd'), (338, ''), (339, '  Section /o ""Han Simplified script"" SecLang_HanS'), (340, '    AddSize 5700'), (341, '    !insertmacro Download_Lang_Data script/HanS'), (342, '  SectionEnd'), (343, ''), (344, '  Section /o ""Han Simplified vertical script"" SecLang_HanS_vert'), (345, '    AddSize 5304'), (346, '    !insertmacro Download_Lang_Data script/HanS_vert'), (347, '  SectionEnd'), (348, ''), (349, '  Section /o ""Han Traditional script"" SecLang_HanT'), (350, '    AddSize 5200'), (351, '    !insertmacro Download_Lang_Data script/HanT'), (352, '  SectionEnd'), (353, ''), (354, '  Section /o ""Han Traditional vertical script"" SecLang_HanT_vert'), (355, '    AddSize 5200'), (356, '    !insertmacro Download_Lang_Data script/HanT_vert'), (357, '  SectionEnd'), (358, ''), (359, '  Section /o ""Hangul script"" SecLang_Hangul'), (360, '    AddSize 4620'), (361, '    !insertmacro Download_Lang_Data script/Hangul'), (362, '  SectionEnd'), (363, ''), (364, '  Section /o ""Hangul vertical script"" SecLang_Hangul_vert'), (365, '    AddSize 4510'), (366, '    !insertmacro Download_Lang_Data script/Hangul_vert'), (367, '  SectionEnd'), (368, ''), (369, '  Section /o ""Hebrew script"" SecLang_Hebrew'), (370, '    AddSize 4640'), (371, '    !insertmacro Download_Lang_Data script/Hebrew'), (372, '  SectionEnd'), (373, ''), (374, '  Section /o ""Japanese script"" SecLang_Japanese'), (375, '    AddSize 5610'), (376, '    !insertmacro Download_Lang_Data script/Japanese'), (377, '  SectionEnd'), (378, ''), (379, '  Section /o ""Japanese vertical script"" SecLang_Japanese_vert'), (380, '    AddSize 6150'), (381, '    !insertmacro Download_Lang_Data script/Japanese_vert'), (382, '  SectionEnd'), (383, ''), (384, '  Section /o ""Kannada script"" SecLang_Kannada'), (385, '    AddSize 6460'), (386, '    !insertmacro Download_Lang_Data script/Kannada'), (387, '  SectionEnd'), (388, ''), (389, '  Section /o ""Khmer script"" SecLang_Khmer'), (390, '    AddSize 4270'), (391, '    !insertmacro Download_Lang_Data script/Khmer'), (392, '  SectionEnd'), (393, ''), (394, '  Section /o ""Lao script"" SecLang_Script_Lao'), (395, '    AddSize 9640'), (396, '    !insertmacro Download_Lang_Data script/Lao'), (397, '  SectionEnd'), (398, ''), (399, '  Section /o ""Latin script"" SecLang_Latin'), (400, '    AddSize 85200'), (401, '    !insertmacro Download_Lang_Data script/Latin'), (402, '  SectionEnd'), (403, ''), (404, '  Section /o ""Malayalam script"" SecLang_Malayalam'), (405, '    AddSize 8590'), (406, '    !insertmacro Download_Lang_Data script/Malayalam'), (407, '  SectionEnd'), (408, ''), (409, '  Section /o ""Myanmar script"" SecLang_Myanmar'), (410, '    AddSize 7480'), (411, '    !insertmacro Download_Lang_Data script/Myanmar'), (412, '  SectionEnd'), (413, ''), (414, '  Section /o ""Oriya script"" SecLang_Oriya'), (415, '    AddSize 5480'), (416, '    !insertmacro Download_Lang_Data script/Oriya'), (417, '  SectionEnd'), (418, ''), (419, '  Section /o ""Sinhala script"" SecLang_Sinhala'), (420, '    AddSize 4560'), (421, '    !insertmacro Download_Lang_Data script/Sinhala'), (422, '  SectionEnd'), (423, ''), (424, '  Section /o ""Syriac script"" SecLang_Syriac'), (425, '    AddSize 5530'), (426, '    !insertmacro Download_Lang_Data script/Syriac'), (427, '  SectionEnd'), (428, ''), (429, '  Section /o ""Tamil script"" SecLang_Tamil'), (430, '    AddSize 6760'), (431, '    !insertmacro Download_Lang_Data script/Tamil'), (432, '  SectionEnd'), (433, ''), (434, '  Section /o ""Telugu script"" SecLang_Telugu'), (435, '    AddSize 6180'), (436, '    !insertmacro Download_Lang_Data script/Telugu'), (437, '  SectionEnd'), (438, ''), (439, '  Section /o ""Thaana script"" SecLang_Thaana'), (440, '    AddSize 5770'), (441, '    !insertmacro Download_Lang_Data script/Thaana'), (442, '  SectionEnd'), (443, ''), (444, '  Section /o ""Thai script"" SecLang_Thai'), (445, '    AddSize 4050'), (446, '    !insertmacro Download_Lang_Data script/Thai'), (447, '  SectionEnd'), (448, ''), (449, '  Section /o ""Tibetan script"" SecLang_Tibetan'), (450, '    AddSize 5440'), (451, '    !insertmacro Download_Lang_Data script/Tibetan'), (452, '  SectionEnd'), (453, ''), (454, '  Section /o ""Vietnamese script"" SecLang_Vietnamese'), (455, '    AddSize 1590'), (456, '    !insertmacro Download_Lang_Data script/Vietnamese'), (457, '  SectionEnd'), (458, ''), (459, 'SectionGroupEnd'), (460, ''), (472, '    AddSize 2530'), (477, '    AddSize 5220'), (482, '    AddSize 1370'), (487, '    AddSize 1950'), (492, '    AddSize 3360'), (496, '  Section /o ""Azerbaijani (Cyrillic)"" SecLang_aze_cyrl'), (497, '    AddSize 1850'), (502, '    AddSize 3520'), (507, '    AddSize 836'), (512, '    AddSize 1880'), (517, '    AddSize 2380'), (521, '  Section /o ""Breton"" SecLang_bre'), (522, '    AddSize 6188'), (523, '    !insertmacro Download_Lang_Data bre'), (524, '  SectionEnd'), (525, ''), (527, '    AddSize 1600'), (532, '    AddSize 1090'), (537, '    AddSize 699'), (541, '  Section /o ""Czech"" SecLang_ces'), (542, '    AddSize 3620'), (543, '    !insertmacro Download_Lang_Data ces'), (544, '  SectionEnd'), (545, ''), (546, '  Section /o ""Chinese (Simplified)"" SecLang_chi_sim'), (547, '    AddSize 2350'), (548, '    !insertmacro Download_Lang_Data chi_sim'), (549, '  SectionEnd'), (550, ''), (551, '  Section /o ""Chinese (Simplified vertical)"" SecLang_chi_sim_vert'), (552, '    AddSize 1840'), (553, '    !insertmacro Download_Lang_Data chi_sim_vert'), (557, '    AddSize 2260'), (561, '  Section /o ""Chinese (Traditional vertical)"" SecLang_chi_tra_vert'), (562, '    AddSize 1740'), (563, '    !insertmacro Download_Lang_Data chi_tra_vert'), (566, '  Section /o ""Cherokee"" SecLang_chr'), (567, '    AddSize 366'), (568, '    !insertmacro Download_Lang_Data chr'), (571, '  Section /o ""Corsican"" SecLang_cos'), (572, '    AddSize 2190'), (573, '    !insertmacro Download_Lang_Data cos'), (577, '    AddSize 2110'), (582, '    AddSize 2460'), (586, '  Section /o ""German"" SecLang_deu'), (587, '    AddSize 1450'), (588, '    !insertmacro Download_Lang_Data deu'), (591, '  Section /o ""Divehi"" SecLang_div'), (592, '    AddSize 1690'), (593, '    !insertmacro Download_Lang_Data div'), (594, '  SectionEnd'), (595, ''), (596, '  Section /o ""Dzongkha"" SecLang_dzo'), (597, '    AddSize 439'), (598, '    !insertmacro Download_Lang_Data dzo'), (599, '  SectionEnd'), (600, ''), (601, '  Section /o ""Greek"" SecLang_ell'), (602, '    AddSize 1350'), (603, '    !insertmacro Download_Lang_Data ell'), (607, '    AddSize 2960'), (612, '    AddSize 4510'), (617, '    AddSize 4250'), (621, '  Section /o ""Basque"" SecLang_eus'), (622, '    AddSize 4940'), (623, '    !insertmacro Download_Lang_Data eus'), (626, '  Section /o ""Faroese"" SecLang_fao'), (627, '    AddSize 3280'), (628, '    !insertmacro Download_Lang_Data fao'), (631, '  Section /o ""Persian"" SecLang_fas'), (632, '    AddSize 421'), (633, '    !insertmacro Download_Lang_Data fas'), (636, '  Section /o ""Filipino"" SecLang_fil'), (637, '    AddSize 1760'), (638, '    !insertmacro Download_Lang_Data fil'), (641, ' Section /o ""Finnish"" SecLang_fin'), (642, '    AddSize 7500'), (643, '    !insertmacro Download_Lang_Data fin'), (646, '  Section /o ""French"" SecLang_fra'), (647, '    AddSize 1080'), (648, '    !insertmacro Download_Lang_Data fra'), (651, ' Section /o ""German Fraktur"" SecLang_frk'), (652, '    AddSize 6130'), (653, '    !insertmacro Download_Lang_Data frk'), (656, ' Section /o ""French - Middle (ca. 1400-1600)"" SecLang_frm'), (657, '    AddSize 1930'), (658, '    !insertmacro Download_Lang_Data frm'), (661, '  Section /o ""Frisian (Western)"" SecLang_fry'), (662, '    AddSize 1820'), (663, '    !insertmacro Download_Lang_Data fry'), (666, '  Section /o ""Gaelic (Scots)"" SecLang_gla'), (667, '    AddSize 2930'), (668, '    !insertmacro Download_Lang_Data gla'), (672, '    AddSize 1130'), (677, '    AddSize 2440'), (681, '  Section /o ""Greek, Ancient (-1453)"" SecLang_grc'), (682, '    AddSize 2140'), (683, '    !insertmacro Download_Lang_Data grc'), (684, '  SectionEnd'), (685, ''), (687, '    AddSize 1350'), (692, '    AddSize 1890'), (697, '    AddSize 939'), (702, '    AddSize 1070'), (706, '  Section /o ""Croatian"" SecLang_hrv'), (707, '    AddSize 3910'), (708, '    !insertmacro Download_Lang_Data hrv'), (709, '  SectionEnd'), (710, ''), (712, '    AddSize 5050'), (716, '  Section /o ""Armenian"" SecLang_hye'), (717, '    AddSize 3300'), (718, '    !insertmacro Download_Lang_Data hye'), (721, '  Section /o ""Inuktitut"" SecLang_iku'), (722, '    AddSize 2670'), (723, '    !insertmacro Download_Lang_Data iku'), (727, '    AddSize 1070'), (731, '  Section /o ""Icelandic"" SecLang_isl'), (732, '    AddSize 2170'), (733, '    !insertmacro Download_Lang_Data isl'), (734, '  SectionEnd'), (735, ''), (737, '    AddSize 2580'), (742, '    AddSize 3130'), (747, '    AddSize 2840'), (752, '    AddSize 2360'), (756, '  Section /o ""Japanese (vertical)"" SecLang_jpn_vert'), (757, '    AddSize 2900'), (758, '    !insertmacro Download_Lang_Data jpn_vert'), (759, '  SectionEnd'), (760, ''), (762, '    AddSize 3440'), (767, '    AddSize 2410'), (772, '    AddSize 413'), (777, '    AddSize 4520'), (782, '    AddSize 1380'), (787, '    AddSize 9470'), (792, '    AddSize 1600'), (796, '  Section /o ""Kurdish (Kurmanji)"" SecLang_kmr'), (797, '    AddSize 3400'), (798, '    !insertmacro Download_Lang_Data kmr'), (802, '    AddSize 6090'), (807, '    AddSize 3040'), (812, '    AddSize 2590'), (817, '    AddSize 3010'), (821, '  Section /o ""Luxembourgish"" SecLang_ltz'), (822, '    AddSize 2490'), (823, '    !insertmacro Download_Lang_Data ltz'), (827, '    AddSize 5030'), (831, '  Section /o ""Marathi"" SecLang_mar'), (832, '    AddSize 2020'), (833, '    !insertmacro Download_Lang_Data mar'), (834, '  SectionEnd'), (835, ''), (836, '  Section /o ""Macedonian"" SecLang_mkd'), (837, '    AddSize 1530'), (838, '    !insertmacro Download_Lang_Data mkd'), (839, '  SectionEnd'), (840, ''), (842, '    AddSize 2200'), (846, '  Section /o ""Mongolian"" SecLang_mon'), (847, '    AddSize 2040'), (848, '    !insertmacro Download_Lang_Data mon'), (849, '  SectionEnd'), (850, ''), (851, '  Section /o ""Maori"" SecLang_mri'), (852, '    AddSize 843'), (853, '    !insertmacro Download_Lang_Data mri'), (854, '  SectionEnd'), (855, ''), (856, '  Section /o ""Malay"" SecLang_msa'), (857, '    AddSize 1670'), (858, '    !insertmacro Download_Lang_Data msa'), (862, '    AddSize 4430'), (867, '    AddSize 979'), (871, '  Section /o ""Dutch; Flemish"" SecLang_nld'), (872, '    AddSize 5770'), (873, '    !insertmacro Download_Lang_Data nld'), (874, '  SectionEnd'), (875, ''), (877, '    AddSize 3440'), (881, '  Section /o ""Occitan (post 1500)"" SecLang_oci'), (882, '    AddSize 6030'), (883, '    !insertmacro Download_Lang_Data oci'), (884, '  SectionEnd'), (885, ''), (887, '    AddSize 1410'), (892, '    AddSize 4860'), (897, '    AddSize 4540'), (902, '    AddSize 1890'), (907, '    AddSize 1690'), (911, '  Section /o ""Quechua"" SecLang_que'), (912, '    AddSize 4790'), (913, '    !insertmacro Download_Lang_Data que'), (914, '  SectionEnd'), (915, ''), (917, '    AddSize 2270'), (922, '    AddSize 3680'), (927, '    AddSize 1180'), (932, '    AddSize 1650'), (937, '    AddSize 4220'), (942, '    AddSize 2860'), (946, '  Section /o ""Sindhi"" SecLang_snd'), (947, '    AddSize 1620'), (948, '    !insertmacro Download_Lang_Data snd'), (949, '  SectionEnd'), (950, ''), (952, '    AddSize 2190'), (957, '    AddSize 2760'), (961, '  Section /o ""Albanian"" SecLang_sqi'), (962, '    AddSize 1790'), (963, '    !insertmacro Download_Lang_Data sqi'), (964, '  SectionEnd'), (965, ''), (967, '    AddSize 2050'), (972, '    AddSize 3130'), (976, '  Section /o ""Sundanese"" SecLang_sun'), (977, '    AddSize 1310'), (978, '    !insertmacro Download_Lang_Data sun'), (979, '  SectionEnd'), (980, ''), (982, '    AddSize 2070'), (987, '    AddSize 3970'), (992, '    AddSize 2100'), (996, ' Section /o ""Tamil"" SecLang_tam'), (997, '    AddSize 3090'), (998, '    !insertmacro Download_Lang_Data tam'), (1001, '  Section /o ""Tatar"" SecLang_tat'), (1002, '    AddSize 1020'), (1003, '    !insertmacro Download_Lang_Data tat'), (1007, '    AddSize 2640'), (1011, '  Section /o ""Tajik"" SecLang_tgk'), (1012, '    AddSize 2480'), (1013, '    !insertmacro Download_Lang_Data tgk'), (1014, '  SectionEnd'), (1015, ''), (1017, '    AddSize 1020'), (1022, '    AddSize 370'), (1026, ' Section /o ""Tonga"" SecLang_ton'), (1027, '    AddSize 925'), (1028, '    !insertmacro Download_Lang_Data ton'), (1029, '  SectionEnd'), (1030, ''), (1032, '    AddSize 4240'), (1037, '    AddSize 2660'), (1042, '    AddSize 3650'), (1047, '    AddSize 1330'), (1052, '    AddSize 6170'), (1056, '  Section /o ""Uzbek (Cyrillic)"" SecLang_uzb_cyrl'), (1057, '    AddSize 1490'), (1062, '    AddSize 519'), (1067, '    AddSize 533'), (1070, ''), (1071, '  Section /o ""Yoruba"" SecLang_yor'), (1072, '    AddSize 941'), (1073, '    !insertmacro Download_Lang_Data yor'), (1074, '  SectionEnd'), (1075, ''), (1125, '!ifdef W64'), (1126, '  SetRegView 64'), (1127, '!endif'), (1161, '!ifdef W64'), (1162, '  SetRegView 64'), (1163, '!endif'), (1393, '  Exec \'""wordpad"" ""doc\\README.md""\'')], 'deleted': [(18, '; * Add support for 64 bit Tesseract.'), (31, '!define VERSION 4.00-dev'), (41, '  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata/master""'), (48, '!define PREFIX ""../usr/i686-w64-mingw32""'), (55, 'BrandingText /TRIMCENTER ""(c) 2010-2015 ${PRODUCT_NAME}""'), (64, '!define MULTIUSER_EXECUTIONLEVEL Admin'), (82, '!define MUI_FINISHPAGE_SHOWREADME ""iexplore $INSTDIR\\doc\\README""'), (83, '!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme'), (84, '!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""'), (85, '!define MUI_LICENSEPAGE_CHECKBOX'), (98, '!ifdef REGISTRY_SETTINGS'), (99, '!include EnvVarUpdate.nsh'), (100, '!endif ; REGISTRY_SETTINGS'), (106, '!ifdef REGISTRY_SETTINGS'), (107, 'Var PathKey'), (108, '!endif ; REGISTRY_SETTINGS'), (114, '!insertmacro MUI_PAGE_LICENSE ""${SRCDIR}\\COPYING""'), (145, '!ifdef W64'), (146, 'InstallDir ""$PROGRAMFILES64\\Tesseract-OCR""'), (147, '!else'), (148, 'InstallDir ""$PROGRAMFILES\\Tesseract-OCR""'), (149, '!endif'), (150, '# Name of program and file'), (151, '!ifdef VERSION'), (152, 'OutFile tesseract-ocr-setup-${VERSION}.exe'), (153, '!else'), (154, 'OutFile tesseract-ocr-setup.exe'), (155, '!endif'), (156, ''), (157, '!ifdef REGISTRY_SETTINGS'), (158, '!macro AddToPath'), (159, '  # TODO(zdenop): Check if $INSTDIR is in path. If yes, do not append it.'), (160, '  # append bin path to user PATH environment variable'), (161, '  StrCpy $PathKey ""HKLM""'), (162, '  StrCmp $MultiUser.InstallMode ""AllUsers"" +2'), (163, '    StrCpy $PathKey ""HKCU""'), (164, '  DetailPrint ""Setting PATH to $INSTDIR at $PathKey""'), (165, '  ${EnvVarUpdate} $0 ""PATH"" ""A"" ""$PathKey"" ""$INSTDIR""'), (166, '  ; make sure windows knows about the change'), (167, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (168, '!macroend'), (169, ''), (170, '!macro RemoveTessdataPrefix'), (171, ""  ReadRegStr $R2 ${env_hklm} 'TESSDATA_PREFIX'""), (172, '  StrCmp $R2 """" Next1 0'), (173, '    DetailPrint ""Removing $R2 from HKLM Environment...""'), (174, '    DeleteRegValue ${env_hklm} ""TESSDATA_PREFIX""'), (175, '  Next1:'), (176, ""  ReadRegStr $R2 ${env_hkcu} 'TESSDATA_PREFIX'""), (177, '  StrCmp $R2 """" Next2 0'), (178, '    DetailPrint ""Removing $R2 from HKCU Environment...""'), (179, '    DeleteRegValue ${env_hkcu} ""TESSDATA_PREFIX""'), (180, '  Next2:'), (181, '  # make sure windows knows about the change'), (182, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (183, '!macroend'), (184, ''), (185, '!macro SetTESSDATA'), (186, '  !insertmacro RemoveTessdataPrefix'), (187, '  StrCpy $PathKey ""HKLM""'), (188, '  StrCmp $MultiUser.InstallMode ""AllUsers"" +2'), (189, '    StrCpy $PathKey ""HKCU""'), (190, '  DetailPrint ""Setting TESSDATA_PREFIX at $PathKey""'), (191, '  ${EnvVarUpdate} $0 ""TESSDATA_PREFIX"" ""A"" ""$PathKey"" ""$INSTDIR\\""'), (192, '  # make sure windows knows about the change'), (193, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (194, '!macroend'), (195, '!endif ; REGISTRY_SETTINGS'), (217, '  File ${SRCDIR}\\dll\\i686-w64-mingw32\\*.dll'), (231, '  File ${SRCDIR}\\COPYING'), (232, '  File ${SRCDIR}\\testing\\eurotext.tif'), (233, '  File ${SRCDIR}\\testing\\phototest.tif'), (234, '  File ${SRCDIR}\\testing\\README'), (240, '  CreateDirectory ""$INSTDIR\\java""'), (241, '  SetOutPath ""$INSTDIR\\java""'), (242, '  File ..\\java\\ScrollView.jar'), (243, '  File ..\\java\\piccolo2d-core-3.0.jar'), (244, '  File ..\\java\\piccolo2d-extras-3.0.jar'), (293, '!ifdef REGISTRY_SETTINGS ; disabled because of bad behaviour with long PATH'), (294, 'SectionGroup ""Registry settings"" SecRS'), (295, '    Section /o ""Add to Path"" SecRS_path'), (296, '        !insertmacro AddToPath'), (297, '    SectionEnd'), (298, '    Section /o ""Set TESSDATA_PREFIX variable"" SecRS_tessdata'), (299, '        !insertmacro SetTESSDATA'), (300, '    SectionEnd'), (301, 'SectionGroupEnd'), (302, '!endif ; REGISTRY_SETTINGS'), (303, ''), (330, '    AddSize 5080'), (334, '  Section /o ""Albanian"" SecLang_sqi'), (335, '    AddSize 6436'), (336, '    !insertmacro Download_Lang_Data sqi'), (337, '  SectionEnd'), (338, ''), (340, '    AddSize 2888'), (345, '    AddSize 27888'), (350, '    AddSize 15460'), (355, '    AddSize 6464'), (359, '  Section /o ""Azerbaijani (Cyrilic)"" SecLang_aze_cyrl'), (360, '    AddSize 2720'), (364, '  Section /o ""Basque"" SecLang_eus'), (365, '    AddSize 4856'), (366, '    !insertmacro Download_Lang_Data eus'), (367, '  SectionEnd'), (368, ''), (370, '    AddSize 6664'), (375, '    AddSize 15192'), (380, '    AddSize 24648'), (385, '    AddSize 5308'), (390, '    AddSize 5888'), (395, '    AddSize 5232'), (400, '    AddSize 1648'), (404, '  Section /o ""Cherokee"" SecLang_chr'), (405, '    AddSize 1060'), (406, '    !insertmacro Download_Lang_Data chr'), (410, '    AddSize 55368'), (414, '  Section /o ""Chinese (Simplified)"" SecLang_chi_sim'), (415, '    AddSize 41108'), (416, '    !insertmacro Download_Lang_Data chi_sim'), (419, '  Section /o ""Croatian"" SecLang_hrv'), (420, '    AddSize 8924'), (421, '    !insertmacro Download_Lang_Data hrv'), (424, '  Section /o ""Czech"" SecLang_ces'), (425, '    AddSize 11620'), (426, '    !insertmacro Download_Lang_Data ces'), (430, '    AddSize 3704'), (435, '    AddSize 7172'), (439, '  Section /o ""Danish (Fraktur)"" SecLang_dan_frak'), (440, '    AddSize 1588'), (441, '    !insertmacro Download_Lang_Data dan_frak'), (444, '  Section /o ""Dutch"" SecLang_nld'), (445, '    AddSize 16704'), (446, '    !insertmacro Download_Lang_Data nld'), (450, '    AddSize 2060'), (455, '    AddSize 6448'), (460, '    AddSize 9424'), (464, '  Section /o ""German"" SecLang_deu'), (465, '    AddSize 13060'), (466, '    !insertmacro Download_Lang_Data deu'), (469, '  Section /o ""German (Fraktur)"" SecLang_deu_frak'), (470, '    AddSize 1936'), (471, '    !insertmacro Download_Lang_Data deu_frak'), (474, '  Section /o ""Dzongkha"" SecLang_dzo'), (475, '    AddSize 3236'), (476, '    !insertmacro Download_Lang_Data dzo'), (479, '  Section /o ""Greek"" SecLang_ell'), (480, '    AddSize 5296'), (481, '    !insertmacro Download_Lang_Data ell'), (484, '  Section /o ""Greek - Ancient"" SecLang_grc'), (485, '    AddSize 5064'), (486, '    !insertmacro Download_Lang_Data grc'), (489, '  Section /o ""Persian"" SecLang_fas'), (490, '    AddSize 4692'), (491, '    !insertmacro Download_Lang_Data fas'), (494, '  Section /o ""Finnish"" SecLang_fin'), (495, '    AddSize 12964'), (496, '    !insertmacro Download_Lang_Data fin'), (499, '  Section /o ""Frankish"" SecLang_frk'), (500, '    AddSize 16072'), (501, '    !insertmacro Download_Lang_Data frk'), (504, '  Section /o ""French"" SecLang_fra'), (505, '    AddSize 36504'), (506, '    !insertmacro Download_Lang_Data fra'), (509, '  Section /o ""French - Middle (ca. 1400-1600)"" SecLang_frm'), (510, '    AddSize 15468'), (511, '    !insertmacro Download_Lang_Data frm'), (515, '    AddSize 3404'), (520, '    AddSize 5392'), (525, '    AddSize 10380'), (530, '    AddSize 1320'), (535, '    AddSize 4240'), (540, '    AddSize 22212'), (545, '    AddSize 11932'), (549, '  Section /o ""Inuktitut"" SecLang_iku'), (550, '    AddSize 972'), (551, '    !insertmacro Download_Lang_Data iku'), (554, '  Section /o ""Icelandic"" SecLang_isl'), (555, '    AddSize 5956'), (556, '    !insertmacro Download_Lang_Data isl'), (560, '    AddSize 6352'), (565, '    AddSize 31980'), (570, '    AddSize 13732'), (575, '    AddSize 4304'), (580, '    AddSize 32304'), (585, '    AddSize 34828'), (590, '    AddSize 6076'), (595, '    AddSize 644'), (600, '    AddSize 4424'), (605, '    AddSize 47712'), (610, '    AddSize 5376'), (615, '    AddSize 13004'), (619, '  Section /o ""Kurdish"" SecLang_kur'), (620, '    AddSize 1976'), (621, '    !insertmacro Download_Lang_Data kur'), (625, '    AddSize 20628'), (630, '    AddSize 5888'), (635, '    AddSize 7620'), (640, '    AddSize 8708'), (644, '  Section /o ""Macedonian"" SecLang_mkd'), (645, '    AddSize 3748'), (646, '    !insertmacro Download_Lang_Data mkd'), (647, '  SectionEnd'), (648, ''), (649, '  Section /o ""Malay"" SecLang_msa'), (650, '    AddSize 6344'), (651, '    !insertmacro Download_Lang_Data msa'), (655, '    AddSize 8584'), (660, '    AddSize 5000'), (664, '  Section /o ""Marathi"" SecLang_mar'), (665, '    AddSize 13908'), (666, '    !insertmacro Download_Lang_Data mar'), (670, '    AddSize 68140'), (675, '    AddSize 15496'), (680, '    AddSize 8072'), (685, '    AddSize 7716'), (690, '    AddSize 9976'), (695, '    AddSize 13592'), (700, '    AddSize 12612'), (705, '    AddSize 2436'), (710, '    AddSize 7772'), (715, '    AddSize 38472'), (720, '    AddSize 22220'), (725, '    AddSize 6636'), (730, '    AddSize 8916'), (734, '  Section /o ""Slovak (Fraktur)"" SecLang_slk_frak'), (735, '    AddSize 828'), (736, '    !insertmacro Download_Lang_Data slk_frak'), (737, '  SectionEnd'), (738, ''), (740, '    AddSize 6668'), (745, '    AddSize 38276'), (750, '    AddSize 16348'), (755, '    AddSize 4504'), (760, '    AddSize 5952'), (765, '    AddSize 3772'), (770, '    AddSize 9240'), (774, '!ifdef OLD'), (775, '  Section /o ""Swedish (Fraktur)"" SecLang_swe_frak'), (776, '    AddSize 999'), (777, '    !insertmacro Download_Lang_Data swe-frak'), (778, '  SectionEnd'), (779, '!endif ; OLD'), (780, ''), (782, '    AddSize 2672'), (786, '  Section /o ""Tagalog"" SecLang_tgl'), (787, '    AddSize 4020'), (788, '    !insertmacro Download_Lang_Data tgl'), (789, '  SectionEnd'), (790, ''), (791, '  Section /o ""Tajik"" SecLang_tgk'), (792, '    AddSize 1096'), (793, '    !insertmacro Download_Lang_Data tgk'), (796, '  Section /o ""Tamil"" SecLang_tam'), (797, '    AddSize 5000'), (798, '    !insertmacro Download_Lang_Data tam'), (802, '    AddSize 38404'), (807, '    AddSize 13248'), (812, '    AddSize 1764'), (817, '    AddSize 13744'), (822, '    AddSize 1972'), (827, '    AddSize 7856'), (832, '    AddSize 4716'), (837, '    AddSize 4188'), (841, '  Section /o ""Uzbek (Cyrilic)"" SecLang_uzb_cyrl'), (842, '    AddSize 3264'), (847, '    AddSize 5956'), (852, '    AddSize 4140'), (910, '!ifdef REGISTRY_SETTINGS'), (911, '  ${un.EnvVarUpdate} $0 ""PATH"" ""R"" HKLM $INSTDIR'), (912, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (913, '  !insertmacro RemoveTessdataPrefix'), (914, '!endif ; REGISTRY_SETTINGS'), (1074, '            !insertmacro SelectSection ${SecLang_dan_frak}'), (1081, '            !insertmacro SelectSection ${SecLang_deu_frak}'), (1134, '            !insertmacro SelectSection ${SecLang_slk_frak}'), (1146, '!ifdef OLD'), (1147, '            !insertmacro SelectSection ${SecLang_swe_frak}'), (1148, '!endif'), (1177, '  Exec ""iexplore.exe $INSTDIR\\doc\\README""')]}",yes
Makefile.am,Makefile.am,c886e3b63968eba9f2ae32c3713a5ccee4bb5a37,678e427d8b5f0155caeb62ac7986cb1d43fdb037,"Update NSIS configuration

- Move NSIS installer file to new location
- Support cross builds with NSIS
- Clean nsis configuration
- Fix typos in nsis configuration
- Add jar files needed for ScrollView.jar
- Move ScrollView.jar to a new section
- Add missing configurations to tessdata
- Registry settings are now disabled (problems with long PATH)
- Add menu sections for all languages
- Simplify language downloads
- Tune and improve nsis configuration
- Add sizes for language data
- Add missing translations to nsis configuration
- Don't show details in installer by default
- Initial code for 64 bit Tesseract installer
- Fix uninstall for TESSDATA_PREFIX registry key
- Remove cube code
- nsis: Add all training executables
- nsis: Disable registry settings

Trying to add to PATH fails if the old PATH is very long and
will result in an empty PATH.

Remove these settings as they were already disabled by default,
and both are not needed.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -6,6 +6,9 @@ ACLOCAL_AMFLAGS = -I m4
 CLEANFILES =
 
 SUBDIRS = . tessdata
+if MINGW
+SUBDIRS += nsis
+endif
 
 EXTRA_DIST = README.md LICENSE
 EXTRA_DIST += aclocal.m4 config configure.ac autogen.sh
@@ -50,6 +53,11 @@ doc-pack: doc
 doc-clean:
 	rm -rf $(top_builddir)/doc/html/*
 
+if MINGW
+winsetup: training ScrollView.jar
+	@cd ""$(top_builddir)/nsis"" && $(MAKE) winsetup
+endif
+
 pkgconfigdir = $(libdir)/pkgconfig
 pkgconfig_DATA = tesseract.pc
 
","{'added': [(9, 'if MINGW'), (10, 'SUBDIRS += nsis'), (11, 'endif'), (56, 'if MINGW'), (57, 'winsetup: training ScrollView.jar'), (58, '\t@cd ""$(top_builddir)/nsis"" && $(MAKE) winsetup'), (59, 'endif'), (60, '')], 'deleted': []}",yes
configure.ac,configure.ac,c886e3b63968eba9f2ae32c3713a5ccee4bb5a37,678e427d8b5f0155caeb62ac7986cb1d43fdb037,"Update NSIS configuration

- Move NSIS installer file to new location
- Support cross builds with NSIS
- Clean nsis configuration
- Fix typos in nsis configuration
- Add jar files needed for ScrollView.jar
- Move ScrollView.jar to a new section
- Add missing configurations to tessdata
- Registry settings are now disabled (problems with long PATH)
- Add menu sections for all languages
- Simplify language downloads
- Tune and improve nsis configuration
- Add sizes for language data
- Add missing translations to nsis configuration
- Don't show details in installer by default
- Initial code for 64 bit Tesseract installer
- Fix uninstall for TESSDATA_PREFIX registry key
- Remove cube code
- nsis: Add all training executables
- nsis: Disable registry settings

Trying to add to PATH fails if the old PATH is very long and
will result in an empty PATH.

Remove these settings as they were already disabled by default,
and both are not needed.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -72,6 +72,7 @@ AC_CONFIG_HEADERS([include/config_auto.h:config/config.h.in])
 
 # default conditional
 AM_CONDITIONAL([T_WIN], false)
+AM_CONDITIONAL([MINGW], false)
 AM_CONDITIONAL([GRAPHICS_DISABLED], false)
 AC_SUBST([AM_CPPFLAGS])
 
@@ -87,7 +88,9 @@ AM_SILENT_RULES([yes])
 AC_CANONICAL_HOST
 case ""${host_os}"" in
     mingw*)
+        AC_DEFINE_UNQUOTED([MINGW], 1, [This is a MinGW system])
         AM_CONDITIONAL([T_WIN], true)
+        AM_CONDITIONAL([MINGW], true)
         AM_CONDITIONAL([ADD_RT], false)
         AC_SUBST([AM_LDFLAGS], ['-no-undefined'])
         ;;
@@ -559,6 +562,7 @@ AC_CONFIG_FILES([java/com/google/Makefile])
 AC_CONFIG_FILES([java/com/google/scrollview/Makefile])
 AC_CONFIG_FILES([java/com/google/scrollview/events/Makefile])
 AC_CONFIG_FILES([java/com/google/scrollview/ui/Makefile])
+AC_CONFIG_FILES([nsis/Makefile])
 AC_OUTPUT
 
 # Final message
","{'added': [(75, 'AM_CONDITIONAL([MINGW], false)'), (91, '        AC_DEFINE_UNQUOTED([MINGW], 1, [This is a MinGW system])'), (93, '        AM_CONDITIONAL([MINGW], true)'), (565, 'AC_CONFIG_FILES([nsis/Makefile])')], 'deleted': []}",yes
,nsis\Makefile.am,c886e3b63968eba9f2ae32c3713a5ccee4bb5a37,678e427d8b5f0155caeb62ac7986cb1d43fdb037,"Update NSIS configuration

- Move NSIS installer file to new location
- Support cross builds with NSIS
- Clean nsis configuration
- Fix typos in nsis configuration
- Add jar files needed for ScrollView.jar
- Move ScrollView.jar to a new section
- Add missing configurations to tessdata
- Registry settings are now disabled (problems with long PATH)
- Add menu sections for all languages
- Simplify language downloads
- Tune and improve nsis configuration
- Add sizes for language data
- Add missing translations to nsis configuration
- Don't show details in installer by default
- Initial code for 64 bit Tesseract installer
- Fix uninstall for TESSDATA_PREFIX registry key
- Remove cube code
- nsis: Add all training executables
- nsis: Disable registry settings

Trying to add to PATH fails if the old PATH is very long and
will result in an empty PATH.

Remove these settings as they were already disabled by default,
and both are not needed.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,22 @@
+AUTOMAKE_OPTIONS = subdir-objects
+
+all:
+
+if MINGW
+
+gitrev=""`git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags`""
+
+.PHONY: winsetup
+
+Plugins/x86-unicode/INetC.dll:
+	curl -O https://nsis.sourceforge.io/mediawiki/images/c/c9/Inetc.zip
+	unzip Inetc.zip $@
+
+winpath.exe: winpath.cpp
+	x86_64-w64-mingw32-g++ -Os -o $@ $<
+	x86_64-w64-mingw32-strip --strip-unneeded $@
+
+winsetup: Plugins/x86-unicode/INetC.dll winpath.exe
+	makensis -DCROSSBUILD -DSHARED -DSIGNCODE=$(SIGNCODE) -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi
+
+endif
","{'added': [(1, 'AUTOMAKE_OPTIONS = subdir-objects'), (2, ''), (3, 'all:'), (4, ''), (5, 'if MINGW'), (6, ''), (7, 'gitrev=""`git --git-dir=${abs_top_srcdir}/.git --work-tree=${abs_top_srcdir} describe --always --tags`""'), (8, ''), (9, '.PHONY: winsetup'), (10, ''), (11, 'Plugins/x86-unicode/INetC.dll:'), (12, '\tcurl -O https://nsis.sourceforge.io/mediawiki/images/c/c9/Inetc.zip'), (13, '\tunzip Inetc.zip $@'), (14, ''), (15, 'winpath.exe: winpath.cpp'), (16, '\tx86_64-w64-mingw32-g++ -Os -o $@ $<'), (17, '\tx86_64-w64-mingw32-strip --strip-unneeded $@'), (18, ''), (19, 'winsetup: Plugins/x86-unicode/INetC.dll winpath.exe'), (20, '\tmakensis -DCROSSBUILD -DSHARED -DSIGNCODE=$(SIGNCODE) -DSRCDIR=$(top_srcdir) -DVERSION=${gitrev} $(shell test ""$(host_cpu)"" = x86_64 && echo ""-DW64"") -NOCD $(top_srcdir)/nsis/tesseract.nsi'), (21, ''), (22, 'endif')], 'deleted': []}",yes
,nsis\include\EnvVarUpdate.nsh,c886e3b63968eba9f2ae32c3713a5ccee4bb5a37,678e427d8b5f0155caeb62ac7986cb1d43fdb037,"Update NSIS configuration

- Move NSIS installer file to new location
- Support cross builds with NSIS
- Clean nsis configuration
- Fix typos in nsis configuration
- Add jar files needed for ScrollView.jar
- Move ScrollView.jar to a new section
- Add missing configurations to tessdata
- Registry settings are now disabled (problems with long PATH)
- Add menu sections for all languages
- Simplify language downloads
- Tune and improve nsis configuration
- Add sizes for language data
- Add missing translations to nsis configuration
- Don't show details in installer by default
- Initial code for 64 bit Tesseract installer
- Fix uninstall for TESSDATA_PREFIX registry key
- Remove cube code
- nsis: Add all training executables
- nsis: Disable registry settings

Trying to add to PATH fails if the old PATH is very long and
will result in an empty PATH.

Remove these settings as they were already disabled by default,
and both are not needed.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,327 @@
+/**
+ *  EnvVarUpdate.nsh
+ *    : Environmental Variables: append, prepend, and remove entries
+ *
+ *     WARNING: If you use StrFunc.nsh header then include it before this file
+ *              with all required definitions. This is to avoid conflicts
+ *
+ *  Usage:
+ *    ${EnvVarUpdate} ""ResultVar"" ""EnvVarName"" ""Action"" ""RegLoc"" ""PathString""
+ *
+ *  Credits:
+ *  Version 1.0
+ *  * Cal Turney (turnec2)
+ *  * Amir Szekely (KiCHiK) and e-circ for developing the forerunners of this
+ *    function: AddToPath, un.RemoveFromPath, AddToEnvVar, un.RemoveFromEnvVar,
+ *    WriteEnvStr, and un.DeleteEnvStr
+ *  * Diego Pedroso (deguix) for StrTok
+ *  * Kevin English (kenglish_hi) for StrContains
+ *  * Hendri Adriaens (Smile2Me), Diego Pedroso (deguix), and Dan Fuhry
+ *    (dandaman32) for StrReplace
+ *
+ *  Version 1.1 (compatibility with StrFunc.nsh)
+ *  * techtonik
+ *
+ *  http://nsis.sourceforge.net/Environmental_Variables:_append%2C_prepend%2C_and_remove_entries
+ *
+ */
+
+
+!ifndef ENVVARUPDATE_FUNCTION
+!define ENVVARUPDATE_FUNCTION
+!verbose push
+!verbose 3
+!include ""LogicLib.nsh""
+!include ""WinMessages.NSH""
+!include ""StrFunc.nsh""
+
+; ---- Fix for conflict if StrFunc.nsh is already includes in main file -----------------------
+!macro _IncludeStrFunction StrFuncName
+  !ifndef ${StrFuncName}_INCLUDED
+    ${${StrFuncName}}
+  !endif
+  !ifndef Un${StrFuncName}_INCLUDED
+    ${Un${StrFuncName}}
+  !endif
+  !define un.${StrFuncName} ""${Un${StrFuncName}}""
+!macroend
+
+!insertmacro _IncludeStrFunction StrTok
+!insertmacro _IncludeStrFunction StrStr
+!insertmacro _IncludeStrFunction StrRep
+
+; ---------------------------------- Macro Definitions ----------------------------------------
+!macro _EnvVarUpdateConstructor ResultVar EnvVarName Action Regloc PathString
+  Push ""${EnvVarName}""
+  Push ""${Action}""
+  Push ""${RegLoc}""
+  Push ""${PathString}""
+    Call EnvVarUpdate
+  Pop ""${ResultVar}""
+!macroend
+!define EnvVarUpdate '!insertmacro ""_EnvVarUpdateConstructor""'
+
+!macro _unEnvVarUpdateConstructor ResultVar EnvVarName Action Regloc PathString
+  Push ""${EnvVarName}""
+  Push ""${Action}""
+  Push ""${RegLoc}""
+  Push ""${PathString}""
+    Call un.EnvVarUpdate
+  Pop ""${ResultVar}""
+!macroend
+!define un.EnvVarUpdate '!insertmacro ""_unEnvVarUpdateConstructor""'
+; ---------------------------------- Macro Definitions end-------------------------------------
+
+;----------------------------------- EnvVarUpdate start----------------------------------------
+!define hklm_all_users     'HKLM ""SYSTEM\CurrentControlSet\Control\Session Manager\Environment""'
+!define hkcu_current_user  'HKCU ""Environment""'
+
+!macro EnvVarUpdate UN
+
+Function ${UN}EnvVarUpdate
+
+  Push $0
+  Exch 4
+  Exch $1
+  Exch 3
+  Exch $2
+  Exch 2
+  Exch $3
+  Exch
+  Exch $4
+  Push $5
+  Push $6
+  Push $7
+  Push $8
+  Push $9
+  Push $R0
+
+  /* After this point:
+  -------------------------
+     $0 = ResultVar     (returned)
+     $1 = EnvVarName    (input)
+     $2 = Action        (input)
+     $3 = RegLoc        (input)
+     $4 = PathString    (input)
+     $5 = Orig EnvVar   (read from registry)
+     $6 = Len of $0     (temp)
+     $7 = tempstr1      (temp)
+     $8 = Entry counter (temp)
+     $9 = tempstr2      (temp)
+     $R0 = tempChar     (temp)  */
+
+  ; Step 1:  Read contents of EnvVarName from RegLoc
+  ;
+  ; Check for empty EnvVarName
+  ${If} $1 == """"
+    SetErrors
+    DetailPrint ""ERROR: EnvVarName is blank""
+    Goto EnvVarUpdate_Restore_Vars
+  ${EndIf}
+
+  ; Check for valid Action
+  ${If}    $2 != ""A""
+  ${AndIf} $2 != ""P""
+  ${AndIf} $2 != ""R""
+    SetErrors
+    DetailPrint ""ERROR: Invalid Action - must be A, P, or R""
+    Goto EnvVarUpdate_Restore_Vars
+  ${EndIf}
+
+  ${If} $3 == HKLM
+    ReadRegStr $5 ${hklm_all_users} $1     ; Get EnvVarName from all users into $5
+  ${ElseIf} $3 == HKCU
+    ReadRegStr $5 ${hkcu_current_user} $1  ; Read EnvVarName from current user into $5
+  ${Else}
+    SetErrors
+    DetailPrint 'ERROR: Action is [$3] but must be ""HKLM"" or HKCU""'
+    Goto EnvVarUpdate_Restore_Vars
+  ${EndIf}
+
+  ; Check for empty PathString
+  ${If} $4 == """"
+    SetErrors
+    DetailPrint ""ERROR: PathString is blank""
+    Goto EnvVarUpdate_Restore_Vars
+  ${EndIf}
+
+  ; Make sure we've got some work to do
+  ${If} $5 == """"
+  ${AndIf} $2 == ""R""
+    SetErrors
+    DetailPrint ""$1 is empty - Nothing to remove""
+    Goto EnvVarUpdate_Restore_Vars
+  ${EndIf}
+
+  ; Step 2: Scrub EnvVar
+  ;
+  StrCpy $0 $5                             ; Copy the contents to $0
+  ; Remove spaces around semicolons (NOTE: spaces before the 1st entry or
+  ; after the last one are not removed here but instead in Step 3)
+  ${If} $0 != """"                           ; If EnvVar is not empty ...
+    ${Do}
+      ${${UN}StrStr} $7 $0 "" ;""
+      ${If} $7 == """"
+        ${ExitDo}
+      ${EndIf}
+      ${${UN}StrRep} $0  $0 "" ;"" "";""         ; Remove '<space>;'
+    ${Loop}
+    ${Do}
+      ${${UN}StrStr} $7 $0 ""; ""
+      ${If} $7 == """"
+        ${ExitDo}
+      ${EndIf}
+      ${${UN}StrRep} $0  $0 ""; "" "";""         ; Remove ';<space>'
+    ${Loop}
+    ${Do}
+      ${${UN}StrStr} $7 $0 "";;""
+      ${If} $7 == """"
+        ${ExitDo}
+      ${EndIf}
+      ${${UN}StrRep} $0  $0 "";;"" "";""
+    ${Loop}
+
+    ; Remove a leading or trailing semicolon from EnvVar
+    StrCpy  $7  $0 1 0
+    ${If} $7 == "";""
+      StrCpy $0  $0 """" 1                   ; Change ';<EnvVar>' to '<EnvVar>'
+    ${EndIf}
+    StrLen $6 $0
+    IntOp $6 $6 - 1
+    StrCpy $7  $0 1 $6
+    ${If} $7 == "";""
+     StrCpy $0  $0 $6                      ; Change ';<EnvVar>' to '<EnvVar>'
+    ${EndIf}
+    ; DetailPrint ""Scrubbed $1: [$0]""      ; Uncomment to debug
+  ${EndIf}
+
+  /* Step 3. Remove all instances of the target path/string (even if ""A"" or ""P"")
+     $6 = bool flag (1 = found and removed PathString)
+     $7 = a string (e.g. path) delimited by semicolon(s)
+     $8 = entry counter starting at 0
+     $9 = copy of $0
+     $R0 = tempChar      */
+
+  ${If} $5 != """"                           ; If EnvVar is not empty ...
+    StrCpy $9 $0
+    StrCpy $0 """"
+    StrCpy $8 0
+    StrCpy $6 0
+
+    ${Do}
+      ${${UN}StrTok} $7 $9 "";"" $8 ""0""      ; $7 = next entry, $8 = entry counter
+
+      ${If} $7 == """"                       ; If we've run out of entries,
+        ${ExitDo}                          ;    were done
+      ${EndIf}                             ;
+
+      ; Remove leading and trailing spaces from this entry (critical step for Action=Remove)
+      ${Do}
+        StrCpy $R0  $7 1
+        ${If} $R0 != "" ""
+          ${ExitDo}
+        ${EndIf}
+        StrCpy $7   $7 """" 1                ;  Remove leading space
+      ${Loop}
+      ${Do}
+        StrCpy $R0  $7 1 -1
+        ${If} $R0 != "" ""
+          ${ExitDo}
+        ${EndIf}
+        StrCpy $7   $7 -1                  ;  Remove trailing space
+      ${Loop}
+      ${If} $7 == $4                       ; If string matches, remove it by not appending it
+        StrCpy $6 1                        ; Set 'found' flag
+      ${ElseIf} $7 != $4                   ; If string does NOT match
+      ${AndIf}  $0 == """"                   ;    and the 1st string being added to $0,
+        StrCpy $0 $7                       ;    copy it to $0 without a prepended semicolon
+      ${ElseIf} $7 != $4                   ; If string does NOT match
+      ${AndIf}  $0 != """"                   ;    and this is NOT the 1st string to be added to $0,
+        StrCpy $0 $0;$7                    ;    append path to $0 with a prepended semicolon
+      ${EndIf}                             ;
+
+      IntOp $8 $8 + 1                      ; Bump counter
+    ${Loop}                                ; Check for duplicates until we run out of paths
+  ${EndIf}
+
+  ; Step 4:  Perform the requested Action
+  ;
+  ${If} $2 != ""R""                          ; If Append or Prepend
+    ${If} $6 == 1                          ; And if we found the target
+      DetailPrint ""Target is already present in $1. It will be removed and""
+    ${EndIf}
+    ${If} $0 == """"                         ; If EnvVar is (now) empty
+      StrCpy $0 $4                         ;   just copy PathString to EnvVar
+      ${If} $6 == 0                        ; If found flag is either 0
+      ${OrIf} $6 == """"                     ; or blank (if EnvVarName is empty)
+        DetailPrint ""$1 was empty and has been updated with the target""
+      ${EndIf}
+    ${ElseIf} $2 == ""A""                    ;  If Append (and EnvVar is not empty),
+      StrCpy $0 $0;$4                      ;     append PathString
+      ${If} $6 == 1
+        DetailPrint ""appended to $1""
+      ${Else}
+        DetailPrint ""Target was appended to $1""
+      ${EndIf}
+    ${Else}                                ;  If Prepend (and EnvVar is not empty),
+      StrCpy $0 $4;$0                      ;     prepend PathString
+      ${If} $6 == 1
+        DetailPrint ""prepended to $1""
+      ${Else}
+        DetailPrint ""Target was prepended to $1""
+      ${EndIf}
+    ${EndIf}
+  ${Else}                                  ; If Action = Remove
+    ${If} $6 == 1                          ;   and we found the target
+      DetailPrint ""Target was found and removed from $1""
+    ${Else}
+      DetailPrint ""Target was NOT found in $1 (nothing to remove)""
+    ${EndIf}
+    ${If} $0 == """"
+      DetailPrint ""$1 is now empty""
+    ${EndIf}
+  ${EndIf}
+
+  ; Step 5:  Update the registry at RegLoc with the updated EnvVar and announce the change
+  ;
+  ClearErrors
+  ${If} $3  == HKLM
+    WriteRegExpandStr ${hklm_all_users} $1 $0     ; Write it in all users section
+  ${ElseIf} $3 == HKCU
+    WriteRegExpandStr ${hkcu_current_user} $1 $0  ; Write it to current user section
+  ${EndIf}
+
+  IfErrors 0 +4
+    MessageBox MB_OK|MB_ICONEXCLAMATION ""Could not write updated $1 to $3""
+    DetailPrint ""Could not write updated $1 to $3""
+    Goto EnvVarUpdate_Restore_Vars
+
+  ; ""Export"" our change
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+
+  EnvVarUpdate_Restore_Vars:
+  ;
+  ; Restore the user's variables and return ResultVar
+  Pop $R0
+  Pop $9
+  Pop $8
+  Pop $7
+  Pop $6
+  Pop $5
+  Pop $4
+  Pop $3
+  Pop $2
+  Pop $1
+  Push $0  ; Push my $0 (ResultVar)
+  Exch
+  Pop $0   ; Restore his $0
+
+FunctionEnd
+
+!macroend   ; EnvVarUpdate UN
+!insertmacro EnvVarUpdate """"
+!insertmacro EnvVarUpdate ""un.""
+;----------------------------------- EnvVarUpdate end----------------------------------------
+
+!verbose pop
+!endif
","{'added': [(1, '/**'), (2, ' *  EnvVarUpdate.nsh'), (3, ' *    : Environmental Variables: append, prepend, and remove entries'), (4, ' *'), (5, ' *     WARNING: If you use StrFunc.nsh header then include it before this file'), (6, ' *              with all required definitions. This is to avoid conflicts'), (7, ' *'), (8, ' *  Usage:'), (9, ' *    ${EnvVarUpdate} ""ResultVar"" ""EnvVarName"" ""Action"" ""RegLoc"" ""PathString""'), (10, ' *'), (11, ' *  Credits:'), (12, ' *  Version 1.0'), (13, ' *  * Cal Turney (turnec2)'), (14, ' *  * Amir Szekely (KiCHiK) and e-circ for developing the forerunners of this'), (15, ' *    function: AddToPath, un.RemoveFromPath, AddToEnvVar, un.RemoveFromEnvVar,'), (16, ' *    WriteEnvStr, and un.DeleteEnvStr'), (17, ' *  * Diego Pedroso (deguix) for StrTok'), (18, ' *  * Kevin English (kenglish_hi) for StrContains'), (19, ' *  * Hendri Adriaens (Smile2Me), Diego Pedroso (deguix), and Dan Fuhry'), (20, ' *    (dandaman32) for StrReplace'), (21, ' *'), (22, ' *  Version 1.1 (compatibility with StrFunc.nsh)'), (23, ' *  * techtonik'), (24, ' *'), (25, ' *  http://nsis.sourceforge.net/Environmental_Variables:_append%2C_prepend%2C_and_remove_entries'), (26, ' *'), (27, ' */'), (28, ''), (29, ''), (30, '!ifndef ENVVARUPDATE_FUNCTION'), (31, '!define ENVVARUPDATE_FUNCTION'), (32, '!verbose push'), (33, '!verbose 3'), (34, '!include ""LogicLib.nsh""'), (35, '!include ""WinMessages.NSH""'), (36, '!include ""StrFunc.nsh""'), (37, ''), (38, '; ---- Fix for conflict if StrFunc.nsh is already includes in main file -----------------------'), (39, '!macro _IncludeStrFunction StrFuncName'), (40, '  !ifndef ${StrFuncName}_INCLUDED'), (41, '    ${${StrFuncName}}'), (42, '  !endif'), (43, '  !ifndef Un${StrFuncName}_INCLUDED'), (44, '    ${Un${StrFuncName}}'), (45, '  !endif'), (46, '  !define un.${StrFuncName} ""${Un${StrFuncName}}""'), (47, '!macroend'), (48, ''), (49, '!insertmacro _IncludeStrFunction StrTok'), (50, '!insertmacro _IncludeStrFunction StrStr'), (51, '!insertmacro _IncludeStrFunction StrRep'), (52, ''), (53, '; ---------------------------------- Macro Definitions ----------------------------------------'), (54, '!macro _EnvVarUpdateConstructor ResultVar EnvVarName Action Regloc PathString'), (55, '  Push ""${EnvVarName}""'), (56, '  Push ""${Action}""'), (57, '  Push ""${RegLoc}""'), (58, '  Push ""${PathString}""'), (59, '    Call EnvVarUpdate'), (60, '  Pop ""${ResultVar}""'), (61, '!macroend'), (62, '!define EnvVarUpdate \'!insertmacro ""_EnvVarUpdateConstructor""\''), (63, ''), (64, '!macro _unEnvVarUpdateConstructor ResultVar EnvVarName Action Regloc PathString'), (65, '  Push ""${EnvVarName}""'), (66, '  Push ""${Action}""'), (67, '  Push ""${RegLoc}""'), (68, '  Push ""${PathString}""'), (69, '    Call un.EnvVarUpdate'), (70, '  Pop ""${ResultVar}""'), (71, '!macroend'), (72, '!define un.EnvVarUpdate \'!insertmacro ""_unEnvVarUpdateConstructor""\''), (73, '; ---------------------------------- Macro Definitions end-------------------------------------'), (74, ''), (75, ';----------------------------------- EnvVarUpdate start----------------------------------------'), (76, '!define hklm_all_users     \'HKLM ""SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment""\''), (77, '!define hkcu_current_user  \'HKCU ""Environment""\''), (78, ''), (79, '!macro EnvVarUpdate UN'), (80, ''), (81, 'Function ${UN}EnvVarUpdate'), (82, ''), (83, '  Push $0'), (84, '  Exch 4'), (85, '  Exch $1'), (86, '  Exch 3'), (87, '  Exch $2'), (88, '  Exch 2'), (89, '  Exch $3'), (90, '  Exch'), (91, '  Exch $4'), (92, '  Push $5'), (93, '  Push $6'), (94, '  Push $7'), (95, '  Push $8'), (96, '  Push $9'), (97, '  Push $R0'), (98, ''), (99, '  /* After this point:'), (100, '  -------------------------'), (101, '     $0 = ResultVar     (returned)'), (102, '     $1 = EnvVarName    (input)'), (103, '     $2 = Action        (input)'), (104, '     $3 = RegLoc        (input)'), (105, '     $4 = PathString    (input)'), (106, '     $5 = Orig EnvVar   (read from registry)'), (107, '     $6 = Len of $0     (temp)'), (108, '     $7 = tempstr1      (temp)'), (109, '     $8 = Entry counter (temp)'), (110, '     $9 = tempstr2      (temp)'), (111, '     $R0 = tempChar     (temp)  */'), (112, ''), (113, '  ; Step 1:  Read contents of EnvVarName from RegLoc'), (114, '  ;'), (115, '  ; Check for empty EnvVarName'), (116, '  ${If} $1 == """"'), (117, '    SetErrors'), (118, '    DetailPrint ""ERROR: EnvVarName is blank""'), (119, '    Goto EnvVarUpdate_Restore_Vars'), (120, '  ${EndIf}'), (121, ''), (122, '  ; Check for valid Action'), (123, '  ${If}    $2 != ""A""'), (124, '  ${AndIf} $2 != ""P""'), (125, '  ${AndIf} $2 != ""R""'), (126, '    SetErrors'), (127, '    DetailPrint ""ERROR: Invalid Action - must be A, P, or R""'), (128, '    Goto EnvVarUpdate_Restore_Vars'), (129, '  ${EndIf}'), (130, ''), (131, '  ${If} $3 == HKLM'), (132, '    ReadRegStr $5 ${hklm_all_users} $1     ; Get EnvVarName from all users into $5'), (133, '  ${ElseIf} $3 == HKCU'), (134, '    ReadRegStr $5 ${hkcu_current_user} $1  ; Read EnvVarName from current user into $5'), (135, '  ${Else}'), (136, '    SetErrors'), (137, '    DetailPrint \'ERROR: Action is [$3] but must be ""HKLM"" or HKCU""\''), (138, '    Goto EnvVarUpdate_Restore_Vars'), (139, '  ${EndIf}'), (140, ''), (141, '  ; Check for empty PathString'), (142, '  ${If} $4 == """"'), (143, '    SetErrors'), (144, '    DetailPrint ""ERROR: PathString is blank""'), (145, '    Goto EnvVarUpdate_Restore_Vars'), (146, '  ${EndIf}'), (147, ''), (148, ""  ; Make sure we've got some work to do""), (149, '  ${If} $5 == """"'), (150, '  ${AndIf} $2 == ""R""'), (151, '    SetErrors'), (152, '    DetailPrint ""$1 is empty - Nothing to remove""'), (153, '    Goto EnvVarUpdate_Restore_Vars'), (154, '  ${EndIf}'), (155, ''), (156, '  ; Step 2: Scrub EnvVar'), (157, '  ;'), (158, '  StrCpy $0 $5                             ; Copy the contents to $0'), (159, '  ; Remove spaces around semicolons (NOTE: spaces before the 1st entry or'), (160, '  ; after the last one are not removed here but instead in Step 3)'), (161, '  ${If} $0 != """"                           ; If EnvVar is not empty ...'), (162, '    ${Do}'), (163, '      ${${UN}StrStr} $7 $0 "" ;""'), (164, '      ${If} $7 == """"'), (165, '        ${ExitDo}'), (166, '      ${EndIf}'), (167, '      ${${UN}StrRep} $0  $0 "" ;"" "";""         ; Remove \'<space>;\''), (168, '    ${Loop}'), (169, '    ${Do}'), (170, '      ${${UN}StrStr} $7 $0 ""; ""'), (171, '      ${If} $7 == """"'), (172, '        ${ExitDo}'), (173, '      ${EndIf}'), (174, '      ${${UN}StrRep} $0  $0 ""; "" "";""         ; Remove \';<space>\''), (175, '    ${Loop}'), (176, '    ${Do}'), (177, '      ${${UN}StrStr} $7 $0 "";;""'), (178, '      ${If} $7 == """"'), (179, '        ${ExitDo}'), (180, '      ${EndIf}'), (181, '      ${${UN}StrRep} $0  $0 "";;"" "";""'), (182, '    ${Loop}'), (183, ''), (184, '    ; Remove a leading or trailing semicolon from EnvVar'), (185, '    StrCpy  $7  $0 1 0'), (186, '    ${If} $7 == "";""'), (187, '      StrCpy $0  $0 """" 1                   ; Change \';<EnvVar>\' to \'<EnvVar>\''), (188, '    ${EndIf}'), (189, '    StrLen $6 $0'), (190, '    IntOp $6 $6 - 1'), (191, '    StrCpy $7  $0 1 $6'), (192, '    ${If} $7 == "";""'), (193, ""     StrCpy $0  $0 $6                      ; Change ';<EnvVar>' to '<EnvVar>'""), (194, '    ${EndIf}'), (195, '    ; DetailPrint ""Scrubbed $1: [$0]""      ; Uncomment to debug'), (196, '  ${EndIf}'), (197, ''), (198, '  /* Step 3. Remove all instances of the target path/string (even if ""A"" or ""P"")'), (199, '     $6 = bool flag (1 = found and removed PathString)'), (200, '     $7 = a string (e.g. path) delimited by semicolon(s)'), (201, '     $8 = entry counter starting at 0'), (202, '     $9 = copy of $0'), (203, '     $R0 = tempChar      */'), (204, ''), (205, '  ${If} $5 != """"                           ; If EnvVar is not empty ...'), (206, '    StrCpy $9 $0'), (207, '    StrCpy $0 """"'), (208, '    StrCpy $8 0'), (209, '    StrCpy $6 0'), (210, ''), (211, '    ${Do}'), (212, '      ${${UN}StrTok} $7 $9 "";"" $8 ""0""      ; $7 = next entry, $8 = entry counter'), (213, ''), (214, '      ${If} $7 == """"                       ; If we\'ve run out of entries,'), (215, '        ${ExitDo}                          ;    were done'), (216, '      ${EndIf}                             ;'), (217, ''), (218, '      ; Remove leading and trailing spaces from this entry (critical step for Action=Remove)'), (219, '      ${Do}'), (220, '        StrCpy $R0  $7 1'), (221, '        ${If} $R0 != "" ""'), (222, '          ${ExitDo}'), (223, '        ${EndIf}'), (224, '        StrCpy $7   $7 """" 1                ;  Remove leading space'), (225, '      ${Loop}'), (226, '      ${Do}'), (227, '        StrCpy $R0  $7 1 -1'), (228, '        ${If} $R0 != "" ""'), (229, '          ${ExitDo}'), (230, '        ${EndIf}'), (231, '        StrCpy $7   $7 -1                  ;  Remove trailing space'), (232, '      ${Loop}'), (233, '      ${If} $7 == $4                       ; If string matches, remove it by not appending it'), (234, ""        StrCpy $6 1                        ; Set 'found' flag""), (235, '      ${ElseIf} $7 != $4                   ; If string does NOT match'), (236, '      ${AndIf}  $0 == """"                   ;    and the 1st string being added to $0,'), (237, '        StrCpy $0 $7                       ;    copy it to $0 without a prepended semicolon'), (238, '      ${ElseIf} $7 != $4                   ; If string does NOT match'), (239, '      ${AndIf}  $0 != """"                   ;    and this is NOT the 1st string to be added to $0,'), (240, '        StrCpy $0 $0;$7                    ;    append path to $0 with a prepended semicolon'), (241, '      ${EndIf}                             ;'), (242, ''), (243, '      IntOp $8 $8 + 1                      ; Bump counter'), (244, '    ${Loop}                                ; Check for duplicates until we run out of paths'), (245, '  ${EndIf}'), (246, ''), (247, '  ; Step 4:  Perform the requested Action'), (248, '  ;'), (249, '  ${If} $2 != ""R""                          ; If Append or Prepend'), (250, '    ${If} $6 == 1                          ; And if we found the target'), (251, '      DetailPrint ""Target is already present in $1. It will be removed and""'), (252, '    ${EndIf}'), (253, '    ${If} $0 == """"                         ; If EnvVar is (now) empty'), (254, '      StrCpy $0 $4                         ;   just copy PathString to EnvVar'), (255, '      ${If} $6 == 0                        ; If found flag is either 0'), (256, '      ${OrIf} $6 == """"                     ; or blank (if EnvVarName is empty)'), (257, '        DetailPrint ""$1 was empty and has been updated with the target""'), (258, '      ${EndIf}'), (259, '    ${ElseIf} $2 == ""A""                    ;  If Append (and EnvVar is not empty),'), (260, '      StrCpy $0 $0;$4                      ;     append PathString'), (261, '      ${If} $6 == 1'), (262, '        DetailPrint ""appended to $1""'), (263, '      ${Else}'), (264, '        DetailPrint ""Target was appended to $1""'), (265, '      ${EndIf}'), (266, '    ${Else}                                ;  If Prepend (and EnvVar is not empty),'), (267, '      StrCpy $0 $4;$0                      ;     prepend PathString'), (268, '      ${If} $6 == 1'), (269, '        DetailPrint ""prepended to $1""'), (270, '      ${Else}'), (271, '        DetailPrint ""Target was prepended to $1""'), (272, '      ${EndIf}'), (273, '    ${EndIf}'), (274, '  ${Else}                                  ; If Action = Remove'), (275, '    ${If} $6 == 1                          ;   and we found the target'), (276, '      DetailPrint ""Target was found and removed from $1""'), (277, '    ${Else}'), (278, '      DetailPrint ""Target was NOT found in $1 (nothing to remove)""'), (279, '    ${EndIf}'), (280, '    ${If} $0 == """"'), (281, '      DetailPrint ""$1 is now empty""'), (282, '    ${EndIf}'), (283, '  ${EndIf}'), (284, ''), (285, '  ; Step 5:  Update the registry at RegLoc with the updated EnvVar and announce the change'), (286, '  ;'), (287, '  ClearErrors'), (288, '  ${If} $3  == HKLM'), (289, '    WriteRegExpandStr ${hklm_all_users} $1 $0     ; Write it in all users section'), (290, '  ${ElseIf} $3 == HKCU'), (291, '    WriteRegExpandStr ${hkcu_current_user} $1 $0  ; Write it to current user section'), (292, '  ${EndIf}'), (293, ''), (294, '  IfErrors 0 +4'), (295, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""Could not write updated $1 to $3""'), (296, '    DetailPrint ""Could not write updated $1 to $3""'), (297, '    Goto EnvVarUpdate_Restore_Vars'), (298, ''), (299, '  ; ""Export"" our change'), (300, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (301, ''), (302, '  EnvVarUpdate_Restore_Vars:'), (303, '  ;'), (304, ""  ; Restore the user's variables and return ResultVar""), (305, '  Pop $R0'), (306, '  Pop $9'), (307, '  Pop $8'), (308, '  Pop $7'), (309, '  Pop $6'), (310, '  Pop $5'), (311, '  Pop $4'), (312, '  Pop $3'), (313, '  Pop $2'), (314, '  Pop $1'), (315, '  Push $0  ; Push my $0 (ResultVar)'), (316, '  Exch'), (317, '  Pop $0   ; Restore his $0'), (318, ''), (319, 'FunctionEnd'), (320, ''), (321, '!macroend   ; EnvVarUpdate UN'), (322, '!insertmacro EnvVarUpdate """"'), (323, '!insertmacro EnvVarUpdate ""un.""'), (324, ';----------------------------------- EnvVarUpdate end----------------------------------------'), (325, ''), (326, '!verbose pop'), (327, '!endif')], 'deleted': []}",yes
,nsis\tesseract.nsi,c886e3b63968eba9f2ae32c3713a5ccee4bb5a37,678e427d8b5f0155caeb62ac7986cb1d43fdb037,"Update NSIS configuration

- Move NSIS installer file to new location
- Support cross builds with NSIS
- Clean nsis configuration
- Fix typos in nsis configuration
- Add jar files needed for ScrollView.jar
- Move ScrollView.jar to a new section
- Add missing configurations to tessdata
- Registry settings are now disabled (problems with long PATH)
- Add menu sections for all languages
- Simplify language downloads
- Tune and improve nsis configuration
- Add sizes for language data
- Add missing translations to nsis configuration
- Don't show details in installer by default
- Initial code for 64 bit Tesseract installer
- Fix uninstall for TESSDATA_PREFIX registry key
- Remove cube code
- nsis: Add all training executables
- nsis: Disable registry settings

Trying to add to PATH fails if the old PATH is very long and
will result in an empty PATH.

Remove these settings as they were already disabled by default,
and both are not needed.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,1191 @@
+; (C) Copyright 2010, Sergey Bronnikov
+; (C) Copyright 2010-2012, Zdenko Podobný
+; (C) Copyright 2015-2024 Stefan Weil
+;
+; Licensed under the Apache License, Version 2.0 (the ""License"");
+; you may not use this file except in compliance with the License.
+; You may obtain a copy of the License at
+; http://www.apache.org/licenses/LICENSE-2.0
+; Unless required by applicable law or agreed to in writing, software
+; distributed under the License is distributed on an ""AS IS"" BASIS,
+; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+; See the License for the specific language governing permissions and
+; limitations under the License.
+
+; TODO:
+; * Fix PreventMultipleInstances.
+; * Add Tesseract icon and images for installer.
+; * Add support for 64 bit Tesseract.
+
+SetCompressor /FINAL /SOLID lzma
+SetCompressorDictSize 32
+
+; Settings which normally should be passed as command line arguments.
+;define CROSSBUILD
+;define SHARED
+;define W64
+!ifndef SRCDIR
+!define SRCDIR .
+!endif
+!ifndef VERSION
+!define VERSION 4.00-dev
+!endif
+
+!define PRODUCT_NAME ""Tesseract-OCR""
+!define PRODUCT_VERSION ""${VERSION}""
+!define PRODUCT_PUBLISHER ""Tesseract-OCR community""
+!ifndef PRODUCT_WEB_SITE
+!define PRODUCT_WEB_SITE ""https://github.com/tesseract-ocr/tesseract""
+!endif
+!define GITHUB_RAW_FILE_URL \
+  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata/master""
+
+!ifdef CROSSBUILD
+!addincludedir ${SRCDIR}\nsis\include
+!addplugindir Plugins/x86-unicode
+!endif
+
+!define PREFIX ""../usr/i686-w64-mingw32""
+!define TRAININGDIR ""${PREFIX}/bin""
+
+# General Definitions
+Name ""${PRODUCT_NAME}""
+Caption ""${PRODUCT_NAME} ${VERSION}""
+!ifndef CROSSBUILD
+BrandingText /TRIMCENTER ""(c) 2010-2015 ${PRODUCT_NAME}""
+!endif
+
+!define REGKEY ""SOFTWARE\${PRODUCT_NAME}""
+; HKLM (all users) vs HKCU (current user) defines
+!define env_hklm 'HKLM ""SYSTEM\CurrentControlSet\Control\Session Manager\Environment""'
+!define env_hkcu 'HKCU ""Environment""'
+
+# MultiUser Symbol Definitions
+!define MULTIUSER_EXECUTIONLEVEL Admin
+!define MULTIUSER_MUI
+!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_KEY ""${REGKEY}""
+!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_VALUENAME MultiUserInstallMode
+!define MULTIUSER_INSTALLMODE_COMMANDLINE
+!define MULTIUSER_INSTALLMODE_INSTDIR ${PRODUCT_NAME}
+!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY ""${REGKEY}""
+!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUE ""Path""
+
+# MUI Symbol Definitions
+!define MUI_ABORTWARNING
+!define MUI_COMPONENTSPAGE_SMALLDESC
+!define MUI_HEADERIMAGE
+!define MUI_HEADERIMAGE_BITMAP_NOSTRETCH
+!define MUI_ICON ""${NSISDIR}\Contrib\Graphics\Icons\modern-install-blue-full.ico""
+!define MUI_FINISHPAGE_LINK ""View Tesseract on GitHub""
+!define MUI_FINISHPAGE_LINK_LOCATION ""https://github.com/tesseract-ocr/tesseract""
+!define MUI_FINISHPAGE_NOAUTOCLOSE
+!define MUI_FINISHPAGE_SHOWREADME ""iexplore $INSTDIR\doc\README""
+!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme
+!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""
+!define MUI_LICENSEPAGE_CHECKBOX
+!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM
+!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}
+!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup
+!define MUI_STARTMENUPAGE_DEFAULTFOLDER ${PRODUCT_NAME}
+!define MUI_UNICON ""${NSISDIR}\Contrib\Graphics\Icons\orange-uninstall.ico""
+!define MUI_UNFINISHPAGE_NOAUTOCLOSE
+!define MUI_WELCOMEPAGE_TITLE_3LINES
+
+# Included files
+!include MultiUser.nsh
+!include Sections.nsh
+!include MUI2.nsh
+!ifdef REGISTRY_SETTINGS
+!include EnvVarUpdate.nsh
+!endif ; REGISTRY_SETTINGS
+!include LogicLib.nsh
+!include winmessages.nsh # include for some of the windows messages defines
+
+# Variables
+Var StartMenuGroup
+!ifdef REGISTRY_SETTINGS
+Var PathKey
+!endif ; REGISTRY_SETTINGS
+; Define user variables
+Var OLD_KEY
+
+# Installer pages
+!insertmacro MUI_PAGE_WELCOME
+!insertmacro MUI_PAGE_LICENSE ""${SRCDIR}\COPYING""
+!insertmacro MULTIUSER_PAGE_INSTALLMODE
+!ifdef VERSION
+  Page custom PageReinstall PageLeaveReinstall
+!endif
+!insertmacro MUI_PAGE_COMPONENTS
+!insertmacro MUI_PAGE_DIRECTORY
+!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup
+!insertmacro MUI_PAGE_INSTFILES
+!insertmacro MUI_PAGE_FINISH
+!insertmacro MUI_UNPAGE_CONFIRM
+!insertmacro MUI_UNPAGE_INSTFILES
+
+# Languages
+!insertmacro MUI_LANGUAGE ""English""
+!insertmacro MUI_LANGUAGE ""French""
+!insertmacro MUI_LANGUAGE ""German""
+!insertmacro MUI_LANGUAGE ""Italian""
+!insertmacro MUI_LANGUAGE ""Russian""
+!insertmacro MUI_LANGUAGE ""Slovak""
+!insertmacro MUI_LANGUAGE ""Spanish""
+!insertmacro MUI_LANGUAGE ""SpanishInternational""
+
+# Installer attributes
+ShowInstDetails hide
+InstProgressFlags smooth colored
+XPStyle on
+SpaceTexts
+CRCCheck on
+InstProgressFlags smooth colored
+CRCCheck On  # Do a CRC check before installing
+!ifdef W64
+InstallDir ""$PROGRAMFILES64\Tesseract-OCR""
+!else
+InstallDir ""$PROGRAMFILES\Tesseract-OCR""
+!endif
+# Name of program and file
+!ifdef VERSION
+OutFile tesseract-ocr-setup-${VERSION}.exe
+!else
+OutFile tesseract-ocr-setup.exe
+!endif
+
+!ifdef REGISTRY_SETTINGS
+!macro AddToPath
+  # TODO(zdenop): Check if $INSTDIR is in path. If yes, do not append it.
+  # append bin path to user PATH environment variable
+  StrCpy $PathKey ""HKLM""
+  StrCmp $MultiUser.InstallMode ""AllUsers"" +2
+    StrCpy $PathKey ""HKCU""
+  DetailPrint ""Setting PATH to $INSTDIR at $PathKey""
+  ${EnvVarUpdate} $0 ""PATH"" ""A"" ""$PathKey"" ""$INSTDIR""
+  ; make sure windows knows about the change
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+!macroend
+
+!macro RemoveTessdataPrefix
+  ReadRegStr $R2 ${env_hklm} 'TESSDATA_PREFIX'
+  StrCmp $R2 """" Next1 0
+    DetailPrint ""Removing $R2 from HKLM Environment...""
+    DeleteRegValue ${env_hklm} ""TESSDATA_PREFIX""
+  Next1:
+  ReadRegStr $R2 ${env_hkcu} 'TESSDATA_PREFIX'
+  StrCmp $R2 """" Next2 0
+    DetailPrint ""Removing $R2 from HKCU Environment...""
+    DeleteRegValue ${env_hkcu} ""TESSDATA_PREFIX""
+  Next2:
+  # make sure windows knows about the change
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+!macroend
+
+!macro SetTESSDATA
+  !insertmacro RemoveTessdataPrefix
+  StrCpy $PathKey ""HKLM""
+  StrCmp $MultiUser.InstallMode ""AllUsers"" +2
+    StrCpy $PathKey ""HKCU""
+  DetailPrint ""Setting TESSDATA_PREFIX at $PathKey""
+  ${EnvVarUpdate} $0 ""TESSDATA_PREFIX"" ""A"" ""$PathKey"" ""$INSTDIR\""
+  # make sure windows knows about the change
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+!macroend
+!endif ; REGISTRY_SETTINGS
+
+!macro Download_Lang_Data Lang
+  ; Download traineddata file.
+  DetailPrint ""Download: ${Lang} language file""
+  inetc::get /caption ""Downloading ${Lang} language file"" \
+      ""${GITHUB_RAW_FILE_URL}/${Lang}.traineddata"" $INSTDIR/tessdata/${Lang}.traineddata \
+      /END
+    Pop $0 # return value = exit code, ""OK"" if OK
+    StrCmp $0 ""OK"" +2
+    MessageBox MB_OK|MB_ICONEXCLAMATION \
+      ""Download error. Status of ${Lang}: $0. Click OK to continue."" /SD IDOK
+!macroend
+
+Section -Main SEC0000
+  ; mark as read only component
+  SectionIn RO
+  SetOutPath ""$INSTDIR""
+  # files included in distribution
+  File ${PREFIX}/bin/tesseract.exe
+  File ${PREFIX}/bin/libtesseract-*.dll
+!ifdef CROSSBUILD
+  File ${SRCDIR}\dll\i686-w64-mingw32\*.dll
+!endif
+  CreateDirectory ""$INSTDIR\tessdata""
+  SetOutPath ""$INSTDIR\tessdata""
+  File ${PREFIX}/share/tessdata/pdf.ttf
+  CreateDirectory ""$INSTDIR\tessdata\configs""
+  SetOutPath ""$INSTDIR\tessdata\configs""
+  File ${PREFIX}/share/tessdata/configs/*
+  CreateDirectory ""$INSTDIR\tessdata\tessconfigs""
+  SetOutPath ""$INSTDIR\tessdata\tessconfigs""
+  File ${PREFIX}/share/tessdata/tessconfigs/*
+  CreateDirectory ""$INSTDIR\doc""
+  SetOutPath ""$INSTDIR\doc""
+  File ${SRCDIR}\AUTHORS
+  File ${SRCDIR}\COPYING
+  File ${SRCDIR}\testing\eurotext.tif
+  File ${SRCDIR}\testing\phototest.tif
+  File ${SRCDIR}\testing\README
+##  File ${SRCDIR}\ReleaseNotes
+SectionEnd
+
+Section ""ScrollView"" SecScrollView
+  SectionIn 1
+  CreateDirectory ""$INSTDIR\java""
+  SetOutPath ""$INSTDIR\java""
+  File ..\java\ScrollView.jar
+  File ..\java\piccolo2d-core-3.0.jar
+  File ..\java\piccolo2d-extras-3.0.jar
+SectionEnd
+
+Section ""Training Tools"" SecTr
+  SectionIn 1
+  SetOutPath ""$INSTDIR""
+  File ${TRAININGDIR}\*.exe
+SectionEnd
+
+!define UNINST_EXE ""$INSTDIR\tesseract-uninstall.exe""
+!define UNINST_KEY ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}""
+
+Section -post SEC0001
+  ;Store installation folder - we always use HKLM!
+  WriteRegStr HKLM ""${REGKEY}"" ""Path"" ""$INSTDIR""
+  WriteRegStr HKLM ""${REGKEY}"" ""Mode"" $MultiUser.InstallMode
+  WriteRegStr HKLM ""${REGKEY}"" ""InstallDir"" ""$INSTDIR""
+  WriteRegStr HKLM ""${REGKEY}"" ""CurrentVersion"" ""${VERSION}""
+  WriteRegStr HKLM ""${REGKEY}"" ""Uninstaller"" ""${UNINST_EXE}""
+  ;WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Run"" ""Tesseract-OCR"" ""$INSTDIR\tesseract.exe""
+  ; Register to Add/Remove program in control panel
+  WriteRegStr HKLM ""${UNINST_KEY}"" ""DisplayName"" ""${PRODUCT_NAME} - open source OCR engine""
+  WriteRegStr HKLM ""${UNINST_KEY}"" ""DisplayVersion"" ""${VERSION}""
+  WriteRegStr HKLM ""${UNINST_KEY}"" ""Publisher"" ""${PRODUCT_PUBLISHER}""
+  WriteRegStr HKLM ""${UNINST_KEY}"" ""URLInfoAbout"" ""${PRODUCT_WEB_SITE}""
+  WriteRegStr HKLM ""${UNINST_KEY}"" ""DisplayIcon"" ""${UNINST_EXE}""
+  WriteRegStr HKLM ""${UNINST_KEY}"" ""UninstallString"" ""${UNINST_EXE}""
+  WriteRegStr HKLM ""${UNINST_KEY}"" ""QuietUninstallString"" '""${UNINST_EXE}"" /S'
+  WriteRegDWORD HKLM ""${UNINST_KEY}"" ""NoModify"" 1
+  WriteRegDWORD HKLM ""${UNINST_KEY}"" ""NoRepair"" 1
+  ;Create uninstaller
+  WriteUninstaller ""${UNINST_EXE}""
+  ;ExecShell ""open"" ""https://github.com/tesseract-ocr/tesseract""
+  ;ExecShell ""open"" '""$INSTDIR""'
+  ;BringToFront
+SectionEnd
+
+Section ""Shortcuts creation"" SecCS
+  SetOutPath $INSTDIR
+  CreateDirectory ""$SMPROGRAMS\${PRODUCT_NAME}""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Console.lnk"" $WINDIR\system32\CMD.EXE
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Homepage.lnk"" ""${PRODUCT_WEB_SITE}""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\ReadMe.lnk"" ""${PRODUCT_WEB_SITE}/wiki/ReadMe""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\FAQ.lnk"" ""${PRODUCT_WEB_SITE}/wiki/FAQ""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"" ""${UNINST_EXE}"" """" ""${UNINST_EXE}"" 0
+  ;CreateShortCut ""$DESKTOP\Tesseract-OCR.lnk"" ""$INSTDIR\tesseract.exe"" """" ""$INSTDIR\tesseract.exe"" 0
+  ;CreateShortCut ""$QUICKLAUNCH\.lnk"" ""$INSTDIR\tesseract.exe"" """" ""$INSTDIR\tesseract.exe"" 0
+SectionEnd
+
+!ifdef REGISTRY_SETTINGS ; disabled because of bad behaviour with long PATH
+SectionGroup ""Registry settings"" SecRS
+    Section /o ""Add to Path"" SecRS_path
+        !insertmacro AddToPath
+    SectionEnd
+    Section /o ""Set TESSDATA_PREFIX variable"" SecRS_tessdata
+        !insertmacro SetTESSDATA
+    SectionEnd
+SectionGroupEnd
+!endif ; REGISTRY_SETTINGS
+
+; Language files
+SectionGroup ""Language data"" SecGrp_LD
+    Section ""English"" SecLang_eng
+    SectionIn RO
+      SetOutPath ""$INSTDIR\tessdata""
+      File ${SRCDIR}\tessdata\eng.*
+    SectionEnd
+
+    Section ""Orientation and script detection"" SecLang_osd
+    SectionIn 1
+      SetOutPath ""$INSTDIR\tessdata""
+      File ${SRCDIR}\tessdata\osd.*
+    SectionEnd
+SectionGroupEnd
+
+; Download language files
+SectionGroup ""Additional language data (download)"" SecGrp_ALD
+  Section /o ""Math / equation detection module"" SecLang_equ
+    AddSize 2200
+    !insertmacro Download_Lang_Data equ
+  SectionEnd
+
+  ; The language names are documented here:
+  ; https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages
+
+  Section /o ""Afrikaans"" SecLang_afr
+    AddSize 5080
+    !insertmacro Download_Lang_Data afr
+  SectionEnd
+
+  Section /o ""Albanian"" SecLang_sqi
+    AddSize 6436
+    !insertmacro Download_Lang_Data sqi
+  SectionEnd
+
+  Section /o ""Amharic"" SecLang_amh
+    AddSize 2888
+    !insertmacro Download_Lang_Data amh
+  SectionEnd
+
+  Section /o ""Arabic"" SecLang_ara
+    AddSize 27888
+    !insertmacro Download_Lang_Data ara
+  SectionEnd
+
+  Section /o ""Assamese"" SecLang_asm
+    AddSize 15460
+    !insertmacro Download_Lang_Data asm
+  SectionEnd
+
+  Section /o ""Azerbaijani"" SecLang_aze
+    AddSize 6464
+    !insertmacro Download_Lang_Data aze
+  SectionEnd
+
+  Section /o ""Azerbaijani (Cyrilic)"" SecLang_aze_cyrl
+    AddSize 2720
+    !insertmacro Download_Lang_Data aze_cyrl
+  SectionEnd
+
+  Section /o ""Basque"" SecLang_eus
+    AddSize 4856
+    !insertmacro Download_Lang_Data eus
+  SectionEnd
+
+  Section /o ""Belarusian"" SecLang_bel
+    AddSize 6664
+    !insertmacro Download_Lang_Data bel
+  SectionEnd
+
+  Section /o ""Bengali"" SecLang_ben
+    AddSize 15192
+    !insertmacro Download_Lang_Data ben
+  SectionEnd
+
+  Section /o ""Tibetan"" SecLang_bod
+    AddSize 24648
+    !insertmacro Download_Lang_Data bod
+  SectionEnd
+
+  Section /o ""Bosnian"" SecLang_bos
+    AddSize 5308
+    !insertmacro Download_Lang_Data bos
+  SectionEnd
+
+  Section /o ""Bulgarian"" SecLang_bul
+    AddSize 5888
+    !insertmacro Download_Lang_Data bul
+  SectionEnd
+
+  Section /o ""Catalan"" SecLang_cat
+    AddSize 5232
+    !insertmacro Download_Lang_Data cat
+  SectionEnd
+
+  Section /o ""Cebuano"" SecLang_ceb
+    AddSize 1648
+    !insertmacro Download_Lang_Data ceb
+  SectionEnd
+
+  Section /o ""Cherokee"" SecLang_chr
+    AddSize 1060
+    !insertmacro Download_Lang_Data chr
+  SectionEnd
+
+  Section /o ""Chinese (Traditional)"" SecLang_chi_tra
+    AddSize 55368
+    !insertmacro Download_Lang_Data chi_tra
+  SectionEnd
+
+  Section /o ""Chinese (Simplified)"" SecLang_chi_sim
+    AddSize 41108
+    !insertmacro Download_Lang_Data chi_sim
+  SectionEnd
+
+  Section /o ""Croatian"" SecLang_hrv
+    AddSize 8924
+    !insertmacro Download_Lang_Data hrv
+  SectionEnd
+
+  Section /o ""Czech"" SecLang_ces
+    AddSize 11620
+    !insertmacro Download_Lang_Data ces
+  SectionEnd
+
+  Section /o ""Welsh"" SecLang_cym
+    AddSize 3704
+    !insertmacro Download_Lang_Data cym
+  SectionEnd
+
+  Section /o ""Danish"" SecLang_dan
+    AddSize 7172
+    !insertmacro Download_Lang_Data dan
+  SectionEnd
+
+  Section /o ""Danish (Fraktur)"" SecLang_dan_frak
+    AddSize 1588
+    !insertmacro Download_Lang_Data dan_frak
+  SectionEnd
+
+  Section /o ""Dutch"" SecLang_nld
+    AddSize 16704
+    !insertmacro Download_Lang_Data nld
+  SectionEnd
+
+  Section /o ""English - Middle (1100-1500)"" SecLang_enm
+    AddSize 2060
+    !insertmacro Download_Lang_Data enm
+  SectionEnd
+
+  Section /o ""Esperanto"" SecLang_epo
+    AddSize 6448
+    !insertmacro Download_Lang_Data epo
+  SectionEnd
+
+  Section /o ""Estonian"" SecLang_est
+    AddSize 9424
+    !insertmacro Download_Lang_Data est
+  SectionEnd
+
+  Section /o ""German"" SecLang_deu
+    AddSize 13060
+    !insertmacro Download_Lang_Data deu
+  SectionEnd
+
+  Section /o ""German (Fraktur)"" SecLang_deu_frak
+    AddSize 1936
+    !insertmacro Download_Lang_Data deu_frak
+  SectionEnd
+
+  Section /o ""Dzongkha"" SecLang_dzo
+    AddSize 3236
+    !insertmacro Download_Lang_Data dzo
+  SectionEnd
+
+  Section /o ""Greek"" SecLang_ell
+    AddSize 5296
+    !insertmacro Download_Lang_Data ell
+  SectionEnd
+
+  Section /o ""Greek - Ancient"" SecLang_grc
+    AddSize 5064
+    !insertmacro Download_Lang_Data grc
+  SectionEnd
+
+  Section /o ""Persian"" SecLang_fas
+    AddSize 4692
+    !insertmacro Download_Lang_Data fas
+  SectionEnd
+
+  Section /o ""Finnish"" SecLang_fin
+    AddSize 12964
+    !insertmacro Download_Lang_Data fin
+  SectionEnd
+
+  Section /o ""Frankish"" SecLang_frk
+    AddSize 16072
+    !insertmacro Download_Lang_Data frk
+  SectionEnd
+
+  Section /o ""French"" SecLang_fra
+    AddSize 36504
+    !insertmacro Download_Lang_Data fra
+  SectionEnd
+
+  Section /o ""French - Middle (ca. 1400-1600)"" SecLang_frm
+    AddSize 15468
+    !insertmacro Download_Lang_Data frm
+  SectionEnd
+
+  Section /o ""Irish"" SecLang_gle
+    AddSize 3404
+    !insertmacro Download_Lang_Data gle
+  SectionEnd
+
+  Section /o ""Galician"" SecLang_glg
+    AddSize 5392
+    !insertmacro Download_Lang_Data glg
+  SectionEnd
+
+  Section /o ""Gujarati"" SecLang_guj
+    AddSize 10380
+    !insertmacro Download_Lang_Data guj
+  SectionEnd
+
+  Section /o ""Haitian"" SecLang_hat
+    AddSize 1320
+    !insertmacro Download_Lang_Data hat
+  SectionEnd
+
+  Section /o ""Hebrew"" SecLang_heb
+    AddSize 4240
+    !insertmacro Download_Lang_Data heb
+  SectionEnd
+
+  Section /o ""Hindi"" SecLang_hin
+    AddSize 22212
+    !insertmacro Download_Lang_Data hin
+  SectionEnd
+
+  Section /o ""Hungarian"" SecLang_hun
+    AddSize 11932
+    !insertmacro Download_Lang_Data hun
+  SectionEnd
+
+  Section /o ""Inuktitut"" SecLang_iku
+    AddSize 972
+    !insertmacro Download_Lang_Data iku
+  SectionEnd
+
+  Section /o ""Icelandic"" SecLang_isl
+    AddSize 5956
+    !insertmacro Download_Lang_Data isl
+  SectionEnd
+
+  Section /o ""Indonesian"" SecLang_ind
+    AddSize 6352
+    !insertmacro Download_Lang_Data ind
+  SectionEnd
+
+  Section /o ""Italian"" SecLang_ita
+    AddSize 31980
+    !insertmacro Download_Lang_Data ita
+  SectionEnd
+
+  Section /o ""Italian (Old)"" SecLang_ita_old
+    AddSize 13732
+    !insertmacro Download_Lang_Data ita_old
+  SectionEnd
+
+  Section /o ""Javanese"" SecLang_jav
+    AddSize 4304
+    !insertmacro Download_Lang_Data jav
+  SectionEnd
+
+  Section /o ""Japanese"" SecLang_jpn
+    AddSize 32304
+    !insertmacro Download_Lang_Data jpn
+  SectionEnd
+
+  Section /o ""Kannada"" SecLang_kan
+    AddSize 34828
+    !insertmacro Download_Lang_Data kan
+  SectionEnd
+
+  Section /o ""Georgian"" SecLang_kat
+    AddSize 6076
+    !insertmacro Download_Lang_Data kat
+  SectionEnd
+
+  Section /o ""Georgian (Old)"" SecLang_kat_old
+    AddSize 644
+    !insertmacro Download_Lang_Data kat_old
+  SectionEnd
+
+  Section /o ""Kazakh"" SecLang_kaz
+    AddSize 4424
+    !insertmacro Download_Lang_Data kaz
+  SectionEnd
+
+  Section /o ""Central Khmer"" SecLang_khm
+    AddSize 47712
+    !insertmacro Download_Lang_Data khm
+  SectionEnd
+
+  Section /o ""Kirghiz"" SecLang_kir
+    AddSize 5376
+    !insertmacro Download_Lang_Data kir
+  SectionEnd
+
+  Section /o ""Korean"" SecLang_kor
+    AddSize 13004
+    !insertmacro Download_Lang_Data kor
+  SectionEnd
+
+  Section /o ""Kurdish"" SecLang_kur
+    AddSize 1976
+    !insertmacro Download_Lang_Data kur
+  SectionEnd
+
+  Section /o ""Lao"" SecLang_lao
+    AddSize 20628
+    !insertmacro Download_Lang_Data lao
+  SectionEnd
+
+  Section /o ""Latin"" SecLang_lat
+    AddSize 5888
+    !insertmacro Download_Lang_Data lat
+  SectionEnd
+
+  Section /o ""Latvian"" SecLang_lav
+    AddSize 7620
+    !insertmacro Download_Lang_Data lav
+  SectionEnd
+
+  Section /o ""Lithuanian"" SecLang_lit
+    AddSize 8708
+    !insertmacro Download_Lang_Data lit
+  SectionEnd
+
+  Section /o ""Macedonian"" SecLang_mkd
+    AddSize 3748
+    !insertmacro Download_Lang_Data mkd
+  SectionEnd
+
+  Section /o ""Malay"" SecLang_msa
+    AddSize 6344
+    !insertmacro Download_Lang_Data msa
+  SectionEnd
+
+  Section /o ""Malayalam"" SecLang_mal
+    AddSize 8584
+    !insertmacro Download_Lang_Data mal
+  SectionEnd
+
+  Section /o ""Maltese"" SecLang_mlt
+    AddSize 5000
+    !insertmacro Download_Lang_Data mlt
+  SectionEnd
+
+  Section /o ""Marathi"" SecLang_mar
+    AddSize 13908
+    !insertmacro Download_Lang_Data mar
+  SectionEnd
+
+  Section /o ""Burmese"" SecLang_mya
+    AddSize 68140
+    !insertmacro Download_Lang_Data mya
+  SectionEnd
+
+  Section /o ""Nepali"" SecLang_nep
+    AddSize 15496
+    !insertmacro Download_Lang_Data nep
+  SectionEnd
+
+  Section /o ""Norwegian"" SecLang_nor
+    AddSize 8072
+    !insertmacro Download_Lang_Data nor
+  SectionEnd
+
+  Section /o ""Oriya"" SecLang_ori
+    AddSize 7716
+    !insertmacro Download_Lang_Data ori
+  SectionEnd
+
+  Section /o ""Panjabi / Punjabi"" SecLang_pan
+    AddSize 9976
+    !insertmacro Download_Lang_Data pan
+  SectionEnd
+
+  Section /o ""Polish"" SecLang_pol
+    AddSize 13592
+    !insertmacro Download_Lang_Data pol
+  SectionEnd
+
+  Section /o ""Portuguese"" SecLang_por
+    AddSize 12612
+    !insertmacro Download_Lang_Data por
+  SectionEnd
+
+  Section /o ""Pushto / Pashto"" SecLang_pus
+    AddSize 2436
+    !insertmacro Download_Lang_Data pus
+  SectionEnd
+
+  Section /o ""Romanian"" SecLang_ron
+    AddSize 7772
+    !insertmacro Download_Lang_Data ron
+  SectionEnd
+
+  Section /o ""Russian"" SecLang_rus
+    AddSize 38472
+    !insertmacro Download_Lang_Data rus
+  SectionEnd
+
+  Section /o ""Sanskrit"" SecLang_san
+    AddSize 22220
+    !insertmacro Download_Lang_Data san
+  SectionEnd
+
+  Section /o ""Sinhala / Sinhalese"" SecLang_sin
+    AddSize 6636
+    !insertmacro Download_Lang_Data sin
+  SectionEnd
+
+  Section /o ""Slovak"" SecLang_slk
+    AddSize 8916
+    !insertmacro Download_Lang_Data slk
+  SectionEnd
+
+  Section /o ""Slovak (Fraktur)"" SecLang_slk_frak
+    AddSize 828
+    !insertmacro Download_Lang_Data slk_frak
+  SectionEnd
+
+  Section /o ""Slovenian"" SecLang_slv
+    AddSize 6668
+    !insertmacro Download_Lang_Data slv
+  SectionEnd
+
+  Section /o ""Spanish"" SecLang_spa
+    AddSize 38276
+    !insertmacro Download_Lang_Data spa
+  SectionEnd
+
+  Section /o ""Spanish (Old)"" SecLang_spa_old
+    AddSize 16348
+    !insertmacro Download_Lang_Data spa_old
+  SectionEnd
+
+  Section /o ""Serbian"" SecLang_srp
+    AddSize 4504
+    !insertmacro Download_Lang_Data srp
+  SectionEnd
+
+  Section /o ""Serbian (Latin)"" SecLang_srp_latn
+    AddSize 5952
+    !insertmacro Download_Lang_Data srp_latn
+  SectionEnd
+
+  Section /o ""Swahili"" SecLang_swa
+    AddSize 3772
+    !insertmacro Download_Lang_Data swa
+  SectionEnd
+
+  Section /o ""Swedish"" SecLang_swe
+    AddSize 9240
+    !insertmacro Download_Lang_Data swe
+  SectionEnd
+
+!ifdef OLD
+  Section /o ""Swedish (Fraktur)"" SecLang_swe_frak
+    AddSize 999
+    !insertmacro Download_Lang_Data swe-frak
+  SectionEnd
+!endif ; OLD
+
+  Section /o ""Syriac"" SecLang_syr
+    AddSize 2672
+    !insertmacro Download_Lang_Data syr
+  SectionEnd
+
+  Section /o ""Tagalog"" SecLang_tgl
+    AddSize 4020
+    !insertmacro Download_Lang_Data tgl
+  SectionEnd
+
+  Section /o ""Tajik"" SecLang_tgk
+    AddSize 1096
+    !insertmacro Download_Lang_Data tgk
+  SectionEnd
+
+  Section /o ""Tamil"" SecLang_tam
+    AddSize 5000
+    !insertmacro Download_Lang_Data tam
+  SectionEnd
+
+  Section /o ""Telugu"" SecLang_tel
+    AddSize 38404
+    !insertmacro Download_Lang_Data tel
+  SectionEnd
+
+  Section /o ""Thai"" SecLang_tha
+    AddSize 13248
+    !insertmacro Download_Lang_Data tha
+  SectionEnd
+
+  Section /o ""Tigrinya"" SecLang_tir
+    AddSize 1764
+    !insertmacro Download_Lang_Data tir
+  SectionEnd
+
+  Section /o ""Turkish"" SecLang_tur
+    AddSize 13744
+    !insertmacro Download_Lang_Data tur
+  SectionEnd
+
+  Section /o ""Uighur"" SecLang_uig
+    AddSize 1972
+    !insertmacro Download_Lang_Data uig
+  SectionEnd
+
+  Section /o ""Ukrainian"" SecLang_ukr
+    AddSize 7856
+    !insertmacro Download_Lang_Data ukr
+  SectionEnd
+
+  Section /o ""Urdu"" SecLang_urd
+    AddSize 4716
+    !insertmacro Download_Lang_Data urd
+  SectionEnd
+
+  Section /o ""Uzbek"" SecLang_uzb
+    AddSize 4188
+    !insertmacro Download_Lang_Data uzb
+  SectionEnd
+
+  Section /o ""Uzbek (Cyrilic)"" SecLang_uzb_cyrl
+    AddSize 3264
+    !insertmacro Download_Lang_Data uzb_cyrl
+  SectionEnd
+
+  Section /o ""Vietnamese"" SecLang_vie
+    AddSize 5956
+    !insertmacro Download_Lang_Data vie
+  SectionEnd
+
+  Section /o ""Yiddish"" SecLang_yid
+    AddSize 4140
+    !insertmacro Download_Lang_Data yid
+  SectionEnd
+SectionGroupEnd
+
+;--------------------------------
+;Descriptions
+  ; At first we need to localize installer for languages which supports well in tesseract: Eng, Spa, Ger, Ita, Dutch + Russian (it is authors native language)
+  ;Language strings
+  LangString DESC_SEC0001 ${LANG_RUSSIAN} ""Установочные файлы.""
+  ;LangString DESC_SecHelp ${LANG_RUSSIAN} ""Справочная информация.""
+  LangString DESC_SecCS    ${LANG_RUSSIAN} ""Добавить ярлыки в меню Пуск""
+
+  LangString DESC_SEC0001 ${LANG_ENGLISH} ""Installation files.""
+  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Help information.""
+  LangString DESC_SecCS    ${LANG_ENGLISH} ""Add shortcuts to Start menu.""
+
+  LangString DESC_SEC0001 ${LANG_FRENCH} ""Fichier d'installation.""
+  ;LangString DESC_SecHelp ${LANG_FRENCH} ""Aide.""
+  LangString DESC_SecCS   ${LANG_FRENCH} ""Ajouter des raccourcis vers le menu démarrer.""
+
+  LangString DESC_SEC0001 ${LANG_GERMAN} ""Dateien für die Installation.""
+ ;LangString DESC_SecHelp ${LANG_GERMAN} ""Hilfe.""
+  LangString DESC_SecCS   ${LANG_GERMAN} ""Einträge im Startmenü hinzufügen.""
+
+  LangString DESC_SEC0001 ${LANG_ITALIAN} ""File di installazione.""
+  ;LangString DESC_SecHelp ${LANG_ITALIAN} ""Guida di informazioni.""
+  LangString DESC_SecCS    ${LANG_ITALIAN} ""Aggiungere collegamenti al menu Start.""
+
+  LangString DESC_SEC0001 ${LANG_SLOVAK} ""Súbory inštalácie.""
+  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Pomocné informácie.""
+  LangString DESC_SecCS    ${LANG_SLOVAK} ""Pridať odkaz do Start menu.""
+
+  LangString DESC_SEC0001 ${LANG_SPANISH} ""Los archivos de instalación.""
+  ;LangString DESC_SecHelp ${LANG_SPANISH} ""Información de ayuda.""
+  LangString DESC_SecCS    ${LANG_SPANISH} ""Ańadir accesos directos al menú Inicio.""
+
+  LangString DESC_SEC0001 ${LANG_SPANISHINTERNATIONAL} ""Los archivos de instalación.""
+  ;LangString DESC_SecHelp ${LANG_SPANISHINTERNATIONAL} ""Información de ayuda.""
+  LangString DESC_SecCS    ${LANG_SPANISHINTERNATIONAL} ""Ańadir accesos directos al menú Inicio.""
+
+  ;Assign language strings to sections
+  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
+    !insertmacro MUI_DESCRIPTION_TEXT ${SEC0001} $(DESC_SEC0001)
+    !insertmacro MUI_DESCRIPTION_TEXT ${SecCS} $(DESC_SecCS)
+  !insertmacro MUI_FUNCTION_DESCRIPTION_END
+
+;--------------------------------
+;Uninstaller Section
+
+;Section /o -un.Main UNSEC0000
+Section -un.Main UNSEC0000
+  DetailPrint ""Removing everything""
+  Delete ""$SMPROGRAMS\${PRODUCT_NAME}\*.*""
+  RMDir  ""$SMPROGRAMS\${PRODUCT_NAME}""
+  DetailPrint ""Removing registry info""
+  DeleteRegKey HKLM ""Software\Tesseract-OCR""
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+!ifdef REGISTRY_SETTINGS
+  ${un.EnvVarUpdate} $0 ""PATH"" ""R"" HKLM $INSTDIR
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+  !insertmacro RemoveTessdataPrefix
+!endif ; REGISTRY_SETTINGS
+
+  # remove the Add/Remove information
+  DeleteRegKey HKLM ""${UNINST_KEY}""
+  Delete ""${UNINST_EXE}""
+  DeleteRegValue HKLM ""${REGKEY}"" Path
+  DeleteRegKey /IfEmpty HKLM ""${REGKEY}\Components""
+  DeleteRegKey /IfEmpty HKLM ""${REGKEY}""
+  RMDir /r ""$INSTDIR""
+SectionEnd
+
+Function PageReinstall
+
+FunctionEnd
+
+Function PageLeaveReinstall
+
+FunctionEnd
+
+!macro REMOVE_REGKEY OLD_KEY
+  StrCmp ${OLD_KEY} HKLM 0 +3
+    DeleteRegKey HKLM ""${REGKEY}""
+    Goto End
+  DeleteRegKey HKCU ""${REGKEY}""
+  End:
+!macroend
+
+Function .onInit
+  Call PreventMultipleInstances
+  !insertmacro MUI_LANGDLL_DISPLAY
+  ;RequestExecutionLevel admin
+  !insertmacro MULTIUSER_INIT
+
+  ; is tesseract already installed?
+  ReadRegStr $R0 HKCU ""${REGKEY}"" ""CurrentVersion""
+  StrCpy $OLD_KEY HKCU
+  StrCmp $R0 """" TestHKLM AskUninstall
+  TestHKLM:
+    ReadRegStr $R0 HKLM ""${REGKEY}"" ""CurrentVersion""
+    StrCpy $OLD_KEY HKLM
+    StrCmp $R0 """" SkipUnInstall
+  AskUninstall:
+    MessageBox MB_YESNO|MB_ICONEXCLAMATION \
+      ""Tesseract-ocr version $R0 is installed (in $OLD_KEY)! Do you want to uninstall it first?$\nUninstall will delete all files in '$INSTDIR'!"" \
+       /SD IDYES IDNO SkipUnInstall IDYES UnInstall
+  UnInstall:
+    StrCmp $OLD_KEY ""HKLM"" UnInst_hklm
+       DetailPrint ""Uninstall: current user""
+       readRegStr $R1 HKCU ""${UNINST_KEY}"" ""UninstallString""
+       Goto try_uninstall
+    UnInst_hklm:
+       DetailPrint ""UnInstall: all users""
+       readRegStr $R1 HKLM ""${UNINST_KEY}"" ""UninstallString""
+    try_uninstall:
+      ClearErrors
+      ExecWait '$R1 _?=$INSTDIR'$0
+      ; Check if unstaller finished ok. If yes, then try to remove it from installer.
+      StrCmp $0 0 0 +3
+        !insertmacro REMOVE_REGKEY ${OLD_KEY}
+        Goto SkipUnInstall
+      messagebox mb_ok ""Uninstaller failed:\n$0\n\nYou need to remove program manually.""
+  SkipUnInstall:
+    ;InitPluginsDir
+    ;File /oname=$PLUGINSDIR\splash.bmp ""${NSISDIR}\Contrib\Graphics\Header\nsis.bmp""
+    ;File /oname=$PLUGINSDIR\splash.bmp ""new.bmp""
+    ;advsplash::show 1000 600 400 -1 $PLUGINSDIR\splash
+    ;Pop $0          ; $0 has '1' if the user closed the splash screen early,
+                    ; '0' if everything closed normal, and '-1' if some error occurred.
+    ;IfFileExists $INSTDIR\loadmain.exe PathGood
+  ;done:
+    ; Make selection based on System language ID
+    System::Call 'kernel32::GetSystemDefaultLangID() i .r0'
+    ;http://msdn.microsoft.com/en-us/library/dd318693%28v=VS.85%29.aspx
+    StrCmp $0 ""1078"" Afrikaans
+    StrCmp $0 ""1052"" Albanian
+    StrCmp $0 ""5121"" Arabic
+    StrCmp $0 ""1068"" Azerbaijani
+    StrCmp $0 ""1069"" Basque
+    StrCmp $0 ""1059"" Belarusian
+    StrCmp $0 ""1093"" Bengali
+    StrCmp $0 ""1026"" Bulgarian
+    StrCmp $0 ""1027"" Catalan
+    StrCmp $0 ""1116"" Cherokee
+    StrCmp $0 ""31748"" Chinese_tra
+    StrCmp $0 ""4"" Chinese_sim
+    StrCmp $0 ""26"" Croatian
+    StrCmp $0 ""1029"" Czech
+    StrCmp $0 ""1030"" Danish
+    StrCmp $0 ""2067"" Dutch
+    StrCmp $0 ""1061"" Estonian
+    StrCmp $0 ""3079"" German
+    StrCmp $0 ""1032"" Greek
+    StrCmp $0 ""1035"" Finnish
+    StrCmp $0 ""2060"" French
+    StrCmp $0 ""1037"" Hebrew
+    StrCmp $0 ""1081"" Hindi
+    StrCmp $0 ""1038"" Hungarian
+    StrCmp $0 ""1039"" Icelandic
+    StrCmp $0 ""1057"" Indonesian
+    StrCmp $0 ""1040"" Italian
+    StrCmp $0 ""1041"" Japanese
+    StrCmp $0 ""1099"" Kannada
+    StrCmp $0 ""1042"" Korean
+    StrCmp $0 ""1062"" Latvian
+    StrCmp $0 ""1063"" Lithuanian
+    StrCmp $0 ""1071"" Macedonian
+    StrCmp $0 ""1100"" Malayalam
+    StrCmp $0 ""2110"" Malay
+    StrCmp $0 ""1082"" Maltese
+    StrCmp $0 ""1044"" Norwegian
+    StrCmp $0 ""1045"" Polish
+    StrCmp $0 ""1046"" Portuguese
+    StrCmp $0 ""1048"" Romanian
+    StrCmp $0 ""1049"" Russian
+    StrCmp $0 ""1051"" Slovak
+    StrCmp $0 ""1060"" Slovenian
+    StrCmp $0 ""11274"" Spanish
+    StrCmp $0 ""2074"" Serbian
+    StrCmp $0 ""1089"" Swahili
+    StrCmp $0 ""2077"" Swedish
+    StrCmp $0 ""1097"" Tamil
+    StrCmp $0 ""1098"" Telugu
+    StrCmp $0 ""1054"" Thai
+    StrCmp $0 ""1055"" Turkish
+    StrCmp $0 ""1058"" Ukrainian
+    StrCmp $0 ""1066"" Vietnamese
+
+    Goto lang_end
+
+    Afrikaans: !insertmacro SelectSection ${SecLang_afr}
+            Goto lang_end
+    Albanian: !insertmacro SelectSection ${SecLang_sqi}
+            Goto lang_end
+    Arabic: !insertmacro SelectSection ${SecLang_ara}
+            Goto lang_end
+    ;Assamese: !insertmacro SelectSection ${SecLang_asm}
+    ;        Goto lang_end
+    Azerbaijani: !insertmacro SelectSection ${SecLang_aze}
+            Goto lang_end
+    Basque: !insertmacro SelectSection ${SecLang_eus}
+            Goto lang_end
+    Belarusian: !insertmacro SelectSection ${SecLang_bel}
+            Goto lang_end
+    Bengali: !insertmacro SelectSection ${SecLang_ben}
+            Goto lang_end
+    Bulgarian: !insertmacro SelectSection ${SecLang_bul}
+            Goto lang_end
+    Catalan: !insertmacro SelectSection ${SecLang_cat}
+            Goto lang_end
+    Cherokee: !insertmacro SelectSection ${SecLang_chr}
+            Goto lang_end
+    Chinese_tra: !insertmacro SelectSection ${SecLang_chi_tra}
+            Goto lang_end
+    Chinese_sim: !insertmacro SelectSection ${SecLang_chi_sim}
+            Goto lang_end
+    Croatian: !insertmacro SelectSection ${SecLang_hrv}
+            Goto lang_end
+    Czech: !insertmacro SelectSection ${SecLang_ces}
+            Goto lang_end
+    Danish: !insertmacro SelectSection ${SecLang_dan}
+            !insertmacro SelectSection ${SecLang_dan_frak}
+            Goto lang_end
+    Dutch: !insertmacro SelectSection ${SecLang_nld}
+            Goto lang_end
+    Estonian: !insertmacro SelectSection ${SecLang_hrv}
+            Goto lang_end
+    German: !insertmacro SelectSection ${SecLang_deu}
+            !insertmacro SelectSection ${SecLang_deu_frak}
+            Goto lang_end
+    Greek: !insertmacro SelectSection ${SecLang_ell}
+            !insertmacro SelectSection ${SecLang_grc}
+            Goto lang_end
+    Finnish: !insertmacro SelectSection ${SecLang_fin}
+            !insertmacro SelectSection ${SecLang_frm}
+            Goto lang_end
+    French: !insertmacro SelectSection ${SecLang_fra}
+            Goto lang_end
+    Hebrew: !insertmacro SelectSection ${SecLang_heb}
+            ;!insertmacro SelectSection ${SecLang_heb_com}
+            Goto lang_end
+    Hungarian: !insertmacro SelectSection ${SecLang_hin}
+            Goto lang_end
+    Hindi: !insertmacro SelectSection ${SecLang_hun}
+            Goto lang_end
+    Icelandic: !insertmacro SelectSection ${SecLang_isl}
+            Goto lang_end
+    Indonesian: !insertmacro SelectSection ${SecLang_ind}
+            Goto lang_end
+    Italian: !insertmacro SelectSection ${SecLang_ita}
+            !insertmacro SelectSection ${SecLang_ita_old}
+            Goto lang_end
+    Japanese: !insertmacro SelectSection ${SecLang_jpn}
+            Goto lang_end
+    Kannada: !insertmacro SelectSection ${SecLang_kan}
+            Goto lang_end
+    Korean: !insertmacro SelectSection ${SecLang_kor}
+            Goto lang_end
+    Latvian: !insertmacro SelectSection ${SecLang_lav}
+            Goto lang_end
+    Lithuanian: !insertmacro SelectSection ${SecLang_lit}
+            Goto lang_end
+    Macedonian: !insertmacro SelectSection ${SecLang_mkd}
+            Goto lang_end
+    Malayalam: !insertmacro SelectSection ${SecLang_msa}
+            Goto lang_end
+    Malay: !insertmacro SelectSection ${SecLang_mal}
+            Goto lang_end
+    Maltese: !insertmacro SelectSection ${SecLang_mlt}
+            Goto lang_end
+    Norwegian: !insertmacro SelectSection ${SecLang_nor}
+            Goto lang_end
+    Polish: !insertmacro SelectSection ${SecLang_pol}
+            Goto lang_end
+    Portuguese: !insertmacro SelectSection ${SecLang_por}
+            Goto lang_end
+    Romanian: !insertmacro SelectSection ${SecLang_ron}
+            Goto lang_end
+    Russian: !insertmacro SelectSection ${SecLang_rus}
+            Goto lang_end
+    Slovak: !insertmacro SelectSection ${SecLang_slk}
+            !insertmacro SelectSection ${SecLang_slk_frak}
+            Goto lang_end
+    Slovenian: !insertmacro SelectSection ${SecLang_slv}
+            Goto lang_end
+    Spanish: !insertmacro SelectSection ${SecLang_spa}
+            !insertmacro SelectSection ${SecLang_spa_old}
+            Goto lang_end
+    Serbian: !insertmacro SelectSection ${SecLang_srp}
+            Goto lang_end
+    Swahili: !insertmacro SelectSection ${SecLang_swa}
+            Goto lang_end
+    Swedish: !insertmacro SelectSection ${SecLang_swe}
+!ifdef OLD
+            !insertmacro SelectSection ${SecLang_swe_frak}
+!endif
+            Goto lang_end
+    Tamil: !insertmacro SelectSection ${SecLang_tam}
+            Goto lang_end
+    Telugu: !insertmacro SelectSection ${SecLang_tel}
+            Goto lang_end
+    Thai: !insertmacro SelectSection ${SecLang_tha}
+            Goto lang_end
+    Turkish: !insertmacro SelectSection ${SecLang_tur}
+            Goto lang_end
+    Ukrainian: !insertmacro SelectSection ${SecLang_ukr}
+            Goto lang_end
+    Vietnamese: !insertmacro SelectSection ${SecLang_vie}
+
+    lang_end:
+FunctionEnd
+
+Function un.onInit
+  !insertmacro MUI_LANGDLL_DISPLAY
+  !insertmacro MULTIUSER_UNINIT
+  ;!insertmacro SELECT_UNSECTION Main ${UNSEC0000}
+  ;!insertmacro MUI_UNGETLANGUAGE
+FunctionEnd
+
+Function .onInstFailed
+  MessageBox MB_OK ""Installation failed.""
+FunctionEnd
+
+Function ShowReadme
+  Exec ""iexplore.exe $INSTDIR\doc\README""
+  ;BringToFront
+FunctionEnd
+
+; Prevent running multiple instances of the installer
+Function PreventMultipleInstances
+  ; TODO: Does not work.
+  Push $R0
+  System::Call 'kernel32::CreateMutexA(i 0, i 0, t ${PRODUCT_NAME}) ?e'
+  Pop $R0
+  StrCmp $R0 0 +3
+    MessageBox MB_OK|MB_ICONEXCLAMATION ""The installer is already running."" /SD IDOK
+    Abort
+  Pop $R0
+FunctionEnd
","{'added': [(1, '; (C) Copyright 2010, Sergey Bronnikov'), (2, '; (C) Copyright 2010-2012, Zdenko Podobný'), (3, '; (C) Copyright 2015-2024 Stefan Weil'), (4, ';'), (5, '; Licensed under the Apache License, Version 2.0 (the ""License"");'), (6, '; you may not use this file except in compliance with the License.'), (7, '; You may obtain a copy of the License at'), (8, '; http://www.apache.org/licenses/LICENSE-2.0'), (9, '; Unless required by applicable law or agreed to in writing, software'), (10, '; distributed under the License is distributed on an ""AS IS"" BASIS,'), (11, '; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (12, '; See the License for the specific language governing permissions and'), (13, '; limitations under the License.'), (14, ''), (15, '; TODO:'), (16, '; * Fix PreventMultipleInstances.'), (17, '; * Add Tesseract icon and images for installer.'), (18, '; * Add support for 64 bit Tesseract.'), (19, ''), (20, 'SetCompressor /FINAL /SOLID lzma'), (21, 'SetCompressorDictSize 32'), (22, ''), (23, '; Settings which normally should be passed as command line arguments.'), (24, ';define CROSSBUILD'), (25, ';define SHARED'), (26, ';define W64'), (27, '!ifndef SRCDIR'), (28, '!define SRCDIR .'), (29, '!endif'), (30, '!ifndef VERSION'), (31, '!define VERSION 4.00-dev'), (32, '!endif'), (33, ''), (34, '!define PRODUCT_NAME ""Tesseract-OCR""'), (35, '!define PRODUCT_VERSION ""${VERSION}""'), (36, '!define PRODUCT_PUBLISHER ""Tesseract-OCR community""'), (37, '!ifndef PRODUCT_WEB_SITE'), (38, '!define PRODUCT_WEB_SITE ""https://github.com/tesseract-ocr/tesseract""'), (39, '!endif'), (40, '!define GITHUB_RAW_FILE_URL \\'), (41, '  ""https://raw.githubusercontent.com/tesseract-ocr/tessdata/master""'), (42, ''), (43, '!ifdef CROSSBUILD'), (44, '!addincludedir ${SRCDIR}\\nsis\\include'), (45, '!addplugindir Plugins/x86-unicode'), (46, '!endif'), (47, ''), (48, '!define PREFIX ""../usr/i686-w64-mingw32""'), (49, '!define TRAININGDIR ""${PREFIX}/bin""'), (50, ''), (51, '# General Definitions'), (52, 'Name ""${PRODUCT_NAME}""'), (53, 'Caption ""${PRODUCT_NAME} ${VERSION}""'), (54, '!ifndef CROSSBUILD'), (55, 'BrandingText /TRIMCENTER ""(c) 2010-2015 ${PRODUCT_NAME}""'), (56, '!endif'), (57, ''), (58, '!define REGKEY ""SOFTWARE\\${PRODUCT_NAME}""'), (59, '; HKLM (all users) vs HKCU (current user) defines'), (60, '!define env_hklm \'HKLM ""SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment""\''), (61, '!define env_hkcu \'HKCU ""Environment""\''), (62, ''), (63, '# MultiUser Symbol Definitions'), (64, '!define MULTIUSER_EXECUTIONLEVEL Admin'), (65, '!define MULTIUSER_MUI'), (66, '!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_KEY ""${REGKEY}""'), (67, '!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_VALUENAME MultiUserInstallMode'), (68, '!define MULTIUSER_INSTALLMODE_COMMANDLINE'), (69, '!define MULTIUSER_INSTALLMODE_INSTDIR ${PRODUCT_NAME}'), (70, '!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY ""${REGKEY}""'), (71, '!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUE ""Path""'), (72, ''), (73, '# MUI Symbol Definitions'), (74, '!define MUI_ABORTWARNING'), (75, '!define MUI_COMPONENTSPAGE_SMALLDESC'), (76, '!define MUI_HEADERIMAGE'), (77, '!define MUI_HEADERIMAGE_BITMAP_NOSTRETCH'), (78, '!define MUI_ICON ""${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-install-blue-full.ico""'), (79, '!define MUI_FINISHPAGE_LINK ""View Tesseract on GitHub""'), (80, '!define MUI_FINISHPAGE_LINK_LOCATION ""https://github.com/tesseract-ocr/tesseract""'), (81, '!define MUI_FINISHPAGE_NOAUTOCLOSE'), (82, '!define MUI_FINISHPAGE_SHOWREADME ""iexplore $INSTDIR\\doc\\README""'), (83, '!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme'), (84, '!define MUI_FINISHPAGE_SHOWREADME_TEXT ""Show README""'), (85, '!define MUI_LICENSEPAGE_CHECKBOX'), (86, '!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM'), (87, '!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}'), (88, '!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup'), (89, '!define MUI_STARTMENUPAGE_DEFAULTFOLDER ${PRODUCT_NAME}'), (90, '!define MUI_UNICON ""${NSISDIR}\\Contrib\\Graphics\\Icons\\orange-uninstall.ico""'), (91, '!define MUI_UNFINISHPAGE_NOAUTOCLOSE'), (92, '!define MUI_WELCOMEPAGE_TITLE_3LINES'), (93, ''), (94, '# Included files'), (95, '!include MultiUser.nsh'), (96, '!include Sections.nsh'), (97, '!include MUI2.nsh'), (98, '!ifdef REGISTRY_SETTINGS'), (99, '!include EnvVarUpdate.nsh'), (100, '!endif ; REGISTRY_SETTINGS'), (101, '!include LogicLib.nsh'), (102, '!include winmessages.nsh # include for some of the windows messages defines'), (103, ''), (104, '# Variables'), (105, 'Var StartMenuGroup'), (106, '!ifdef REGISTRY_SETTINGS'), (107, 'Var PathKey'), (108, '!endif ; REGISTRY_SETTINGS'), (109, '; Define user variables'), (110, 'Var OLD_KEY'), (111, ''), (112, '# Installer pages'), (113, '!insertmacro MUI_PAGE_WELCOME'), (114, '!insertmacro MUI_PAGE_LICENSE ""${SRCDIR}\\COPYING""'), (115, '!insertmacro MULTIUSER_PAGE_INSTALLMODE'), (116, '!ifdef VERSION'), (117, '  Page custom PageReinstall PageLeaveReinstall'), (118, '!endif'), (119, '!insertmacro MUI_PAGE_COMPONENTS'), (120, '!insertmacro MUI_PAGE_DIRECTORY'), (121, '!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup'), (122, '!insertmacro MUI_PAGE_INSTFILES'), (123, '!insertmacro MUI_PAGE_FINISH'), (124, '!insertmacro MUI_UNPAGE_CONFIRM'), (125, '!insertmacro MUI_UNPAGE_INSTFILES'), (126, ''), (127, '# Languages'), (128, '!insertmacro MUI_LANGUAGE ""English""'), (129, '!insertmacro MUI_LANGUAGE ""French""'), (130, '!insertmacro MUI_LANGUAGE ""German""'), (131, '!insertmacro MUI_LANGUAGE ""Italian""'), (132, '!insertmacro MUI_LANGUAGE ""Russian""'), (133, '!insertmacro MUI_LANGUAGE ""Slovak""'), (134, '!insertmacro MUI_LANGUAGE ""Spanish""'), (135, '!insertmacro MUI_LANGUAGE ""SpanishInternational""'), (136, ''), (137, '# Installer attributes'), (138, 'ShowInstDetails hide'), (139, 'InstProgressFlags smooth colored'), (140, 'XPStyle on'), (141, 'SpaceTexts'), (142, 'CRCCheck on'), (143, 'InstProgressFlags smooth colored'), (144, 'CRCCheck On  # Do a CRC check before installing'), (145, '!ifdef W64'), (146, 'InstallDir ""$PROGRAMFILES64\\Tesseract-OCR""'), (147, '!else'), (148, 'InstallDir ""$PROGRAMFILES\\Tesseract-OCR""'), (149, '!endif'), (150, '# Name of program and file'), (151, '!ifdef VERSION'), (152, 'OutFile tesseract-ocr-setup-${VERSION}.exe'), (153, '!else'), (154, 'OutFile tesseract-ocr-setup.exe'), (155, '!endif'), (156, ''), (157, '!ifdef REGISTRY_SETTINGS'), (158, '!macro AddToPath'), (159, '  # TODO(zdenop): Check if $INSTDIR is in path. If yes, do not append it.'), (160, '  # append bin path to user PATH environment variable'), (161, '  StrCpy $PathKey ""HKLM""'), (162, '  StrCmp $MultiUser.InstallMode ""AllUsers"" +2'), (163, '    StrCpy $PathKey ""HKCU""'), (164, '  DetailPrint ""Setting PATH to $INSTDIR at $PathKey""'), (165, '  ${EnvVarUpdate} $0 ""PATH"" ""A"" ""$PathKey"" ""$INSTDIR""'), (166, '  ; make sure windows knows about the change'), (167, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (168, '!macroend'), (169, ''), (170, '!macro RemoveTessdataPrefix'), (171, ""  ReadRegStr $R2 ${env_hklm} 'TESSDATA_PREFIX'""), (172, '  StrCmp $R2 """" Next1 0'), (173, '    DetailPrint ""Removing $R2 from HKLM Environment...""'), (174, '    DeleteRegValue ${env_hklm} ""TESSDATA_PREFIX""'), (175, '  Next1:'), (176, ""  ReadRegStr $R2 ${env_hkcu} 'TESSDATA_PREFIX'""), (177, '  StrCmp $R2 """" Next2 0'), (178, '    DetailPrint ""Removing $R2 from HKCU Environment...""'), (179, '    DeleteRegValue ${env_hkcu} ""TESSDATA_PREFIX""'), (180, '  Next2:'), (181, '  # make sure windows knows about the change'), (182, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (183, '!macroend'), (184, ''), (185, '!macro SetTESSDATA'), (186, '  !insertmacro RemoveTessdataPrefix'), (187, '  StrCpy $PathKey ""HKLM""'), (188, '  StrCmp $MultiUser.InstallMode ""AllUsers"" +2'), (189, '    StrCpy $PathKey ""HKCU""'), (190, '  DetailPrint ""Setting TESSDATA_PREFIX at $PathKey""'), (191, '  ${EnvVarUpdate} $0 ""TESSDATA_PREFIX"" ""A"" ""$PathKey"" ""$INSTDIR\\""'), (192, '  # make sure windows knows about the change'), (193, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (194, '!macroend'), (195, '!endif ; REGISTRY_SETTINGS'), (196, ''), (197, '!macro Download_Lang_Data Lang'), (198, '  ; Download traineddata file.'), (199, '  DetailPrint ""Download: ${Lang} language file""'), (200, '  inetc::get /caption ""Downloading ${Lang} language file"" \\'), (201, '      ""${GITHUB_RAW_FILE_URL}/${Lang}.traineddata"" $INSTDIR/tessdata/${Lang}.traineddata \\'), (202, '      /END'), (203, '    Pop $0 # return value = exit code, ""OK"" if OK'), (204, '    StrCmp $0 ""OK"" +2'), (205, '    MessageBox MB_OK|MB_ICONEXCLAMATION \\'), (206, '      ""Download error. Status of ${Lang}: $0. Click OK to continue."" /SD IDOK'), (207, '!macroend'), (208, ''), (209, 'Section -Main SEC0000'), (210, '  ; mark as read only component'), (211, '  SectionIn RO'), (212, '  SetOutPath ""$INSTDIR""'), (213, '  # files included in distribution'), (214, '  File ${PREFIX}/bin/tesseract.exe'), (215, '  File ${PREFIX}/bin/libtesseract-*.dll'), (216, '!ifdef CROSSBUILD'), (217, '  File ${SRCDIR}\\dll\\i686-w64-mingw32\\*.dll'), (218, '!endif'), (219, '  CreateDirectory ""$INSTDIR\\tessdata""'), (220, '  SetOutPath ""$INSTDIR\\tessdata""'), (221, '  File ${PREFIX}/share/tessdata/pdf.ttf'), (222, '  CreateDirectory ""$INSTDIR\\tessdata\\configs""'), (223, '  SetOutPath ""$INSTDIR\\tessdata\\configs""'), (224, '  File ${PREFIX}/share/tessdata/configs/*'), (225, '  CreateDirectory ""$INSTDIR\\tessdata\\tessconfigs""'), (226, '  SetOutPath ""$INSTDIR\\tessdata\\tessconfigs""'), (227, '  File ${PREFIX}/share/tessdata/tessconfigs/*'), (228, '  CreateDirectory ""$INSTDIR\\doc""'), (229, '  SetOutPath ""$INSTDIR\\doc""'), (230, '  File ${SRCDIR}\\AUTHORS'), (231, '  File ${SRCDIR}\\COPYING'), (232, '  File ${SRCDIR}\\testing\\eurotext.tif'), (233, '  File ${SRCDIR}\\testing\\phototest.tif'), (234, '  File ${SRCDIR}\\testing\\README'), (235, '##  File ${SRCDIR}\\ReleaseNotes'), (236, 'SectionEnd'), (237, ''), (238, 'Section ""ScrollView"" SecScrollView'), (239, '  SectionIn 1'), (240, '  CreateDirectory ""$INSTDIR\\java""'), (241, '  SetOutPath ""$INSTDIR\\java""'), (242, '  File ..\\java\\ScrollView.jar'), (243, '  File ..\\java\\piccolo2d-core-3.0.jar'), (244, '  File ..\\java\\piccolo2d-extras-3.0.jar'), (245, 'SectionEnd'), (246, ''), (247, 'Section ""Training Tools"" SecTr'), (248, '  SectionIn 1'), (249, '  SetOutPath ""$INSTDIR""'), (250, '  File ${TRAININGDIR}\\*.exe'), (251, 'SectionEnd'), (252, ''), (253, '!define UNINST_EXE ""$INSTDIR\\tesseract-uninstall.exe""'), (254, '!define UNINST_KEY ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}""'), (255, ''), (256, 'Section -post SEC0001'), (257, '  ;Store installation folder - we always use HKLM!'), (258, '  WriteRegStr HKLM ""${REGKEY}"" ""Path"" ""$INSTDIR""'), (259, '  WriteRegStr HKLM ""${REGKEY}"" ""Mode"" $MultiUser.InstallMode'), (260, '  WriteRegStr HKLM ""${REGKEY}"" ""InstallDir"" ""$INSTDIR""'), (261, '  WriteRegStr HKLM ""${REGKEY}"" ""CurrentVersion"" ""${VERSION}""'), (262, '  WriteRegStr HKLM ""${REGKEY}"" ""Uninstaller"" ""${UNINST_EXE}""'), (263, '  ;WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Run"" ""Tesseract-OCR"" ""$INSTDIR\\tesseract.exe""'), (264, '  ; Register to Add/Remove program in control panel'), (265, '  WriteRegStr HKLM ""${UNINST_KEY}"" ""DisplayName"" ""${PRODUCT_NAME} - open source OCR engine""'), (266, '  WriteRegStr HKLM ""${UNINST_KEY}"" ""DisplayVersion"" ""${VERSION}""'), (267, '  WriteRegStr HKLM ""${UNINST_KEY}"" ""Publisher"" ""${PRODUCT_PUBLISHER}""'), (268, '  WriteRegStr HKLM ""${UNINST_KEY}"" ""URLInfoAbout"" ""${PRODUCT_WEB_SITE}""'), (269, '  WriteRegStr HKLM ""${UNINST_KEY}"" ""DisplayIcon"" ""${UNINST_EXE}""'), (270, '  WriteRegStr HKLM ""${UNINST_KEY}"" ""UninstallString"" ""${UNINST_EXE}""'), (271, '  WriteRegStr HKLM ""${UNINST_KEY}"" ""QuietUninstallString"" \'""${UNINST_EXE}"" /S\''), (272, '  WriteRegDWORD HKLM ""${UNINST_KEY}"" ""NoModify"" 1'), (273, '  WriteRegDWORD HKLM ""${UNINST_KEY}"" ""NoRepair"" 1'), (274, '  ;Create uninstaller'), (275, '  WriteUninstaller ""${UNINST_EXE}""'), (276, '  ;ExecShell ""open"" ""https://github.com/tesseract-ocr/tesseract""'), (277, '  ;ExecShell ""open"" \'""$INSTDIR""\''), (278, '  ;BringToFront'), (279, 'SectionEnd'), (280, ''), (281, 'Section ""Shortcuts creation"" SecCS'), (282, '  SetOutPath $INSTDIR'), (283, '  CreateDirectory ""$SMPROGRAMS\\${PRODUCT_NAME}""'), (284, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Console.lnk"" $WINDIR\\system32\\CMD.EXE'), (285, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Homepage.lnk"" ""${PRODUCT_WEB_SITE}""'), (286, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\ReadMe.lnk"" ""${PRODUCT_WEB_SITE}/wiki/ReadMe""'), (287, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\FAQ.lnk"" ""${PRODUCT_WEB_SITE}/wiki/FAQ""'), (288, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Uninstall.lnk"" ""${UNINST_EXE}"" """" ""${UNINST_EXE}"" 0'), (289, '  ;CreateShortCut ""$DESKTOP\\Tesseract-OCR.lnk"" ""$INSTDIR\\tesseract.exe"" """" ""$INSTDIR\\tesseract.exe"" 0'), (290, '  ;CreateShortCut ""$QUICKLAUNCH\\.lnk"" ""$INSTDIR\\tesseract.exe"" """" ""$INSTDIR\\tesseract.exe"" 0'), (291, 'SectionEnd'), (292, ''), (293, '!ifdef REGISTRY_SETTINGS ; disabled because of bad behaviour with long PATH'), (294, 'SectionGroup ""Registry settings"" SecRS'), (295, '    Section /o ""Add to Path"" SecRS_path'), (296, '        !insertmacro AddToPath'), (297, '    SectionEnd'), (298, '    Section /o ""Set TESSDATA_PREFIX variable"" SecRS_tessdata'), (299, '        !insertmacro SetTESSDATA'), (300, '    SectionEnd'), (301, 'SectionGroupEnd'), (302, '!endif ; REGISTRY_SETTINGS'), (303, ''), (304, '; Language files'), (305, 'SectionGroup ""Language data"" SecGrp_LD'), (306, '    Section ""English"" SecLang_eng'), (307, '    SectionIn RO'), (308, '      SetOutPath ""$INSTDIR\\tessdata""'), (309, '      File ${SRCDIR}\\tessdata\\eng.*'), (310, '    SectionEnd'), (311, ''), (312, '    Section ""Orientation and script detection"" SecLang_osd'), (313, '    SectionIn 1'), (314, '      SetOutPath ""$INSTDIR\\tessdata""'), (315, '      File ${SRCDIR}\\tessdata\\osd.*'), (316, '    SectionEnd'), (317, 'SectionGroupEnd'), (318, ''), (319, '; Download language files'), (320, 'SectionGroup ""Additional language data (download)"" SecGrp_ALD'), (321, '  Section /o ""Math / equation detection module"" SecLang_equ'), (322, '    AddSize 2200'), (323, '    !insertmacro Download_Lang_Data equ'), (324, '  SectionEnd'), (325, ''), (326, '  ; The language names are documented here:'), (327, '  ; https://github.com/tesseract-ocr/tesseract/blob/master/doc/tesseract.1.asc#languages'), (328, ''), (329, '  Section /o ""Afrikaans"" SecLang_afr'), (330, '    AddSize 5080'), (331, '    !insertmacro Download_Lang_Data afr'), (332, '  SectionEnd'), (333, ''), (334, '  Section /o ""Albanian"" SecLang_sqi'), (335, '    AddSize 6436'), (336, '    !insertmacro Download_Lang_Data sqi'), (337, '  SectionEnd'), (338, ''), (339, '  Section /o ""Amharic"" SecLang_amh'), (340, '    AddSize 2888'), (341, '    !insertmacro Download_Lang_Data amh'), (342, '  SectionEnd'), (343, ''), (344, '  Section /o ""Arabic"" SecLang_ara'), (345, '    AddSize 27888'), (346, '    !insertmacro Download_Lang_Data ara'), (347, '  SectionEnd'), (348, ''), (349, '  Section /o ""Assamese"" SecLang_asm'), (350, '    AddSize 15460'), (351, '    !insertmacro Download_Lang_Data asm'), (352, '  SectionEnd'), (353, ''), (354, '  Section /o ""Azerbaijani"" SecLang_aze'), (355, '    AddSize 6464'), (356, '    !insertmacro Download_Lang_Data aze'), (357, '  SectionEnd'), (358, ''), (359, '  Section /o ""Azerbaijani (Cyrilic)"" SecLang_aze_cyrl'), (360, '    AddSize 2720'), (361, '    !insertmacro Download_Lang_Data aze_cyrl'), (362, '  SectionEnd'), (363, ''), (364, '  Section /o ""Basque"" SecLang_eus'), (365, '    AddSize 4856'), (366, '    !insertmacro Download_Lang_Data eus'), (367, '  SectionEnd'), (368, ''), (369, '  Section /o ""Belarusian"" SecLang_bel'), (370, '    AddSize 6664'), (371, '    !insertmacro Download_Lang_Data bel'), (372, '  SectionEnd'), (373, ''), (374, '  Section /o ""Bengali"" SecLang_ben'), (375, '    AddSize 15192'), (376, '    !insertmacro Download_Lang_Data ben'), (377, '  SectionEnd'), (378, ''), (379, '  Section /o ""Tibetan"" SecLang_bod'), (380, '    AddSize 24648'), (381, '    !insertmacro Download_Lang_Data bod'), (382, '  SectionEnd'), (383, ''), (384, '  Section /o ""Bosnian"" SecLang_bos'), (385, '    AddSize 5308'), (386, '    !insertmacro Download_Lang_Data bos'), (387, '  SectionEnd'), (388, ''), (389, '  Section /o ""Bulgarian"" SecLang_bul'), (390, '    AddSize 5888'), (391, '    !insertmacro Download_Lang_Data bul'), (392, '  SectionEnd'), (393, ''), (394, '  Section /o ""Catalan"" SecLang_cat'), (395, '    AddSize 5232'), (396, '    !insertmacro Download_Lang_Data cat'), (397, '  SectionEnd'), (398, ''), (399, '  Section /o ""Cebuano"" SecLang_ceb'), (400, '    AddSize 1648'), (401, '    !insertmacro Download_Lang_Data ceb'), (402, '  SectionEnd'), (403, ''), (404, '  Section /o ""Cherokee"" SecLang_chr'), (405, '    AddSize 1060'), (406, '    !insertmacro Download_Lang_Data chr'), (407, '  SectionEnd'), (408, ''), (409, '  Section /o ""Chinese (Traditional)"" SecLang_chi_tra'), (410, '    AddSize 55368'), (411, '    !insertmacro Download_Lang_Data chi_tra'), (412, '  SectionEnd'), (413, ''), (414, '  Section /o ""Chinese (Simplified)"" SecLang_chi_sim'), (415, '    AddSize 41108'), (416, '    !insertmacro Download_Lang_Data chi_sim'), (417, '  SectionEnd'), (418, ''), (419, '  Section /o ""Croatian"" SecLang_hrv'), (420, '    AddSize 8924'), (421, '    !insertmacro Download_Lang_Data hrv'), (422, '  SectionEnd'), (423, ''), (424, '  Section /o ""Czech"" SecLang_ces'), (425, '    AddSize 11620'), (426, '    !insertmacro Download_Lang_Data ces'), (427, '  SectionEnd'), (428, ''), (429, '  Section /o ""Welsh"" SecLang_cym'), (430, '    AddSize 3704'), (431, '    !insertmacro Download_Lang_Data cym'), (432, '  SectionEnd'), (433, ''), (434, '  Section /o ""Danish"" SecLang_dan'), (435, '    AddSize 7172'), (436, '    !insertmacro Download_Lang_Data dan'), (437, '  SectionEnd'), (438, ''), (439, '  Section /o ""Danish (Fraktur)"" SecLang_dan_frak'), (440, '    AddSize 1588'), (441, '    !insertmacro Download_Lang_Data dan_frak'), (442, '  SectionEnd'), (443, ''), (444, '  Section /o ""Dutch"" SecLang_nld'), (445, '    AddSize 16704'), (446, '    !insertmacro Download_Lang_Data nld'), (447, '  SectionEnd'), (448, ''), (449, '  Section /o ""English - Middle (1100-1500)"" SecLang_enm'), (450, '    AddSize 2060'), (451, '    !insertmacro Download_Lang_Data enm'), (452, '  SectionEnd'), (453, ''), (454, '  Section /o ""Esperanto"" SecLang_epo'), (455, '    AddSize 6448'), (456, '    !insertmacro Download_Lang_Data epo'), (457, '  SectionEnd'), (458, ''), (459, '  Section /o ""Estonian"" SecLang_est'), (460, '    AddSize 9424'), (461, '    !insertmacro Download_Lang_Data est'), (462, '  SectionEnd'), (463, ''), (464, '  Section /o ""German"" SecLang_deu'), (465, '    AddSize 13060'), (466, '    !insertmacro Download_Lang_Data deu'), (467, '  SectionEnd'), (468, ''), (469, '  Section /o ""German (Fraktur)"" SecLang_deu_frak'), (470, '    AddSize 1936'), (471, '    !insertmacro Download_Lang_Data deu_frak'), (472, '  SectionEnd'), (473, ''), (474, '  Section /o ""Dzongkha"" SecLang_dzo'), (475, '    AddSize 3236'), (476, '    !insertmacro Download_Lang_Data dzo'), (477, '  SectionEnd'), (478, ''), (479, '  Section /o ""Greek"" SecLang_ell'), (480, '    AddSize 5296'), (481, '    !insertmacro Download_Lang_Data ell'), (482, '  SectionEnd'), (483, ''), (484, '  Section /o ""Greek - Ancient"" SecLang_grc'), (485, '    AddSize 5064'), (486, '    !insertmacro Download_Lang_Data grc'), (487, '  SectionEnd'), (488, ''), (489, '  Section /o ""Persian"" SecLang_fas'), (490, '    AddSize 4692'), (491, '    !insertmacro Download_Lang_Data fas'), (492, '  SectionEnd'), (493, ''), (494, '  Section /o ""Finnish"" SecLang_fin'), (495, '    AddSize 12964'), (496, '    !insertmacro Download_Lang_Data fin'), (497, '  SectionEnd'), (498, ''), (499, '  Section /o ""Frankish"" SecLang_frk'), (500, '    AddSize 16072'), (501, '    !insertmacro Download_Lang_Data frk'), (502, '  SectionEnd'), (503, ''), (504, '  Section /o ""French"" SecLang_fra'), (505, '    AddSize 36504'), (506, '    !insertmacro Download_Lang_Data fra'), (507, '  SectionEnd'), (508, ''), (509, '  Section /o ""French - Middle (ca. 1400-1600)"" SecLang_frm'), (510, '    AddSize 15468'), (511, '    !insertmacro Download_Lang_Data frm'), (512, '  SectionEnd'), (513, ''), (514, '  Section /o ""Irish"" SecLang_gle'), (515, '    AddSize 3404'), (516, '    !insertmacro Download_Lang_Data gle'), (517, '  SectionEnd'), (518, ''), (519, '  Section /o ""Galician"" SecLang_glg'), (520, '    AddSize 5392'), (521, '    !insertmacro Download_Lang_Data glg'), (522, '  SectionEnd'), (523, ''), (524, '  Section /o ""Gujarati"" SecLang_guj'), (525, '    AddSize 10380'), (526, '    !insertmacro Download_Lang_Data guj'), (527, '  SectionEnd'), (528, ''), (529, '  Section /o ""Haitian"" SecLang_hat'), (530, '    AddSize 1320'), (531, '    !insertmacro Download_Lang_Data hat'), (532, '  SectionEnd'), (533, ''), (534, '  Section /o ""Hebrew"" SecLang_heb'), (535, '    AddSize 4240'), (536, '    !insertmacro Download_Lang_Data heb'), (537, '  SectionEnd'), (538, ''), (539, '  Section /o ""Hindi"" SecLang_hin'), (540, '    AddSize 22212'), (541, '    !insertmacro Download_Lang_Data hin'), (542, '  SectionEnd'), (543, ''), (544, '  Section /o ""Hungarian"" SecLang_hun'), (545, '    AddSize 11932'), (546, '    !insertmacro Download_Lang_Data hun'), (547, '  SectionEnd'), (548, ''), (549, '  Section /o ""Inuktitut"" SecLang_iku'), (550, '    AddSize 972'), (551, '    !insertmacro Download_Lang_Data iku'), (552, '  SectionEnd'), (553, ''), (554, '  Section /o ""Icelandic"" SecLang_isl'), (555, '    AddSize 5956'), (556, '    !insertmacro Download_Lang_Data isl'), (557, '  SectionEnd'), (558, ''), (559, '  Section /o ""Indonesian"" SecLang_ind'), (560, '    AddSize 6352'), (561, '    !insertmacro Download_Lang_Data ind'), (562, '  SectionEnd'), (563, ''), (564, '  Section /o ""Italian"" SecLang_ita'), (565, '    AddSize 31980'), (566, '    !insertmacro Download_Lang_Data ita'), (567, '  SectionEnd'), (568, ''), (569, '  Section /o ""Italian (Old)"" SecLang_ita_old'), (570, '    AddSize 13732'), (571, '    !insertmacro Download_Lang_Data ita_old'), (572, '  SectionEnd'), (573, ''), (574, '  Section /o ""Javanese"" SecLang_jav'), (575, '    AddSize 4304'), (576, '    !insertmacro Download_Lang_Data jav'), (577, '  SectionEnd'), (578, ''), (579, '  Section /o ""Japanese"" SecLang_jpn'), (580, '    AddSize 32304'), (581, '    !insertmacro Download_Lang_Data jpn'), (582, '  SectionEnd'), (583, ''), (584, '  Section /o ""Kannada"" SecLang_kan'), (585, '    AddSize 34828'), (586, '    !insertmacro Download_Lang_Data kan'), (587, '  SectionEnd'), (588, ''), (589, '  Section /o ""Georgian"" SecLang_kat'), (590, '    AddSize 6076'), (591, '    !insertmacro Download_Lang_Data kat'), (592, '  SectionEnd'), (593, ''), (594, '  Section /o ""Georgian (Old)"" SecLang_kat_old'), (595, '    AddSize 644'), (596, '    !insertmacro Download_Lang_Data kat_old'), (597, '  SectionEnd'), (598, ''), (599, '  Section /o ""Kazakh"" SecLang_kaz'), (600, '    AddSize 4424'), (601, '    !insertmacro Download_Lang_Data kaz'), (602, '  SectionEnd'), (603, ''), (604, '  Section /o ""Central Khmer"" SecLang_khm'), (605, '    AddSize 47712'), (606, '    !insertmacro Download_Lang_Data khm'), (607, '  SectionEnd'), (608, ''), (609, '  Section /o ""Kirghiz"" SecLang_kir'), (610, '    AddSize 5376'), (611, '    !insertmacro Download_Lang_Data kir'), (612, '  SectionEnd'), (613, ''), (614, '  Section /o ""Korean"" SecLang_kor'), (615, '    AddSize 13004'), (616, '    !insertmacro Download_Lang_Data kor'), (617, '  SectionEnd'), (618, ''), (619, '  Section /o ""Kurdish"" SecLang_kur'), (620, '    AddSize 1976'), (621, '    !insertmacro Download_Lang_Data kur'), (622, '  SectionEnd'), (623, ''), (624, '  Section /o ""Lao"" SecLang_lao'), (625, '    AddSize 20628'), (626, '    !insertmacro Download_Lang_Data lao'), (627, '  SectionEnd'), (628, ''), (629, '  Section /o ""Latin"" SecLang_lat'), (630, '    AddSize 5888'), (631, '    !insertmacro Download_Lang_Data lat'), (632, '  SectionEnd'), (633, ''), (634, '  Section /o ""Latvian"" SecLang_lav'), (635, '    AddSize 7620'), (636, '    !insertmacro Download_Lang_Data lav'), (637, '  SectionEnd'), (638, ''), (639, '  Section /o ""Lithuanian"" SecLang_lit'), (640, '    AddSize 8708'), (641, '    !insertmacro Download_Lang_Data lit'), (642, '  SectionEnd'), (643, ''), (644, '  Section /o ""Macedonian"" SecLang_mkd'), (645, '    AddSize 3748'), (646, '    !insertmacro Download_Lang_Data mkd'), (647, '  SectionEnd'), (648, ''), (649, '  Section /o ""Malay"" SecLang_msa'), (650, '    AddSize 6344'), (651, '    !insertmacro Download_Lang_Data msa'), (652, '  SectionEnd'), (653, ''), (654, '  Section /o ""Malayalam"" SecLang_mal'), (655, '    AddSize 8584'), (656, '    !insertmacro Download_Lang_Data mal'), (657, '  SectionEnd'), (658, ''), (659, '  Section /o ""Maltese"" SecLang_mlt'), (660, '    AddSize 5000'), (661, '    !insertmacro Download_Lang_Data mlt'), (662, '  SectionEnd'), (663, ''), (664, '  Section /o ""Marathi"" SecLang_mar'), (665, '    AddSize 13908'), (666, '    !insertmacro Download_Lang_Data mar'), (667, '  SectionEnd'), (668, ''), (669, '  Section /o ""Burmese"" SecLang_mya'), (670, '    AddSize 68140'), (671, '    !insertmacro Download_Lang_Data mya'), (672, '  SectionEnd'), (673, ''), (674, '  Section /o ""Nepali"" SecLang_nep'), (675, '    AddSize 15496'), (676, '    !insertmacro Download_Lang_Data nep'), (677, '  SectionEnd'), (678, ''), (679, '  Section /o ""Norwegian"" SecLang_nor'), (680, '    AddSize 8072'), (681, '    !insertmacro Download_Lang_Data nor'), (682, '  SectionEnd'), (683, ''), (684, '  Section /o ""Oriya"" SecLang_ori'), (685, '    AddSize 7716'), (686, '    !insertmacro Download_Lang_Data ori'), (687, '  SectionEnd'), (688, ''), (689, '  Section /o ""Panjabi / Punjabi"" SecLang_pan'), (690, '    AddSize 9976'), (691, '    !insertmacro Download_Lang_Data pan'), (692, '  SectionEnd'), (693, ''), (694, '  Section /o ""Polish"" SecLang_pol'), (695, '    AddSize 13592'), (696, '    !insertmacro Download_Lang_Data pol'), (697, '  SectionEnd'), (698, ''), (699, '  Section /o ""Portuguese"" SecLang_por'), (700, '    AddSize 12612'), (701, '    !insertmacro Download_Lang_Data por'), (702, '  SectionEnd'), (703, ''), (704, '  Section /o ""Pushto / Pashto"" SecLang_pus'), (705, '    AddSize 2436'), (706, '    !insertmacro Download_Lang_Data pus'), (707, '  SectionEnd'), (708, ''), (709, '  Section /o ""Romanian"" SecLang_ron'), (710, '    AddSize 7772'), (711, '    !insertmacro Download_Lang_Data ron'), (712, '  SectionEnd'), (713, ''), (714, '  Section /o ""Russian"" SecLang_rus'), (715, '    AddSize 38472'), (716, '    !insertmacro Download_Lang_Data rus'), (717, '  SectionEnd'), (718, ''), (719, '  Section /o ""Sanskrit"" SecLang_san'), (720, '    AddSize 22220'), (721, '    !insertmacro Download_Lang_Data san'), (722, '  SectionEnd'), (723, ''), (724, '  Section /o ""Sinhala / Sinhalese"" SecLang_sin'), (725, '    AddSize 6636'), (726, '    !insertmacro Download_Lang_Data sin'), (727, '  SectionEnd'), (728, ''), (729, '  Section /o ""Slovak"" SecLang_slk'), (730, '    AddSize 8916'), (731, '    !insertmacro Download_Lang_Data slk'), (732, '  SectionEnd'), (733, ''), (734, '  Section /o ""Slovak (Fraktur)"" SecLang_slk_frak'), (735, '    AddSize 828'), (736, '    !insertmacro Download_Lang_Data slk_frak'), (737, '  SectionEnd'), (738, ''), (739, '  Section /o ""Slovenian"" SecLang_slv'), (740, '    AddSize 6668'), (741, '    !insertmacro Download_Lang_Data slv'), (742, '  SectionEnd'), (743, ''), (744, '  Section /o ""Spanish"" SecLang_spa'), (745, '    AddSize 38276'), (746, '    !insertmacro Download_Lang_Data spa'), (747, '  SectionEnd'), (748, ''), (749, '  Section /o ""Spanish (Old)"" SecLang_spa_old'), (750, '    AddSize 16348'), (751, '    !insertmacro Download_Lang_Data spa_old'), (752, '  SectionEnd'), (753, ''), (754, '  Section /o ""Serbian"" SecLang_srp'), (755, '    AddSize 4504'), (756, '    !insertmacro Download_Lang_Data srp'), (757, '  SectionEnd'), (758, ''), (759, '  Section /o ""Serbian (Latin)"" SecLang_srp_latn'), (760, '    AddSize 5952'), (761, '    !insertmacro Download_Lang_Data srp_latn'), (762, '  SectionEnd'), (763, ''), (764, '  Section /o ""Swahili"" SecLang_swa'), (765, '    AddSize 3772'), (766, '    !insertmacro Download_Lang_Data swa'), (767, '  SectionEnd'), (768, ''), (769, '  Section /o ""Swedish"" SecLang_swe'), (770, '    AddSize 9240'), (771, '    !insertmacro Download_Lang_Data swe'), (772, '  SectionEnd'), (773, ''), (774, '!ifdef OLD'), (775, '  Section /o ""Swedish (Fraktur)"" SecLang_swe_frak'), (776, '    AddSize 999'), (777, '    !insertmacro Download_Lang_Data swe-frak'), (778, '  SectionEnd'), (779, '!endif ; OLD'), (780, ''), (781, '  Section /o ""Syriac"" SecLang_syr'), (782, '    AddSize 2672'), (783, '    !insertmacro Download_Lang_Data syr'), (784, '  SectionEnd'), (785, ''), (786, '  Section /o ""Tagalog"" SecLang_tgl'), (787, '    AddSize 4020'), (788, '    !insertmacro Download_Lang_Data tgl'), (789, '  SectionEnd'), (790, ''), (791, '  Section /o ""Tajik"" SecLang_tgk'), (792, '    AddSize 1096'), (793, '    !insertmacro Download_Lang_Data tgk'), (794, '  SectionEnd'), (795, ''), (796, '  Section /o ""Tamil"" SecLang_tam'), (797, '    AddSize 5000'), (798, '    !insertmacro Download_Lang_Data tam'), (799, '  SectionEnd'), (800, ''), (801, '  Section /o ""Telugu"" SecLang_tel'), (802, '    AddSize 38404'), (803, '    !insertmacro Download_Lang_Data tel'), (804, '  SectionEnd'), (805, ''), (806, '  Section /o ""Thai"" SecLang_tha'), (807, '    AddSize 13248'), (808, '    !insertmacro Download_Lang_Data tha'), (809, '  SectionEnd'), (810, ''), (811, '  Section /o ""Tigrinya"" SecLang_tir'), (812, '    AddSize 1764'), (813, '    !insertmacro Download_Lang_Data tir'), (814, '  SectionEnd'), (815, ''), (816, '  Section /o ""Turkish"" SecLang_tur'), (817, '    AddSize 13744'), (818, '    !insertmacro Download_Lang_Data tur'), (819, '  SectionEnd'), (820, ''), (821, '  Section /o ""Uighur"" SecLang_uig'), (822, '    AddSize 1972'), (823, '    !insertmacro Download_Lang_Data uig'), (824, '  SectionEnd'), (825, ''), (826, '  Section /o ""Ukrainian"" SecLang_ukr'), (827, '    AddSize 7856'), (828, '    !insertmacro Download_Lang_Data ukr'), (829, '  SectionEnd'), (830, ''), (831, '  Section /o ""Urdu"" SecLang_urd'), (832, '    AddSize 4716'), (833, '    !insertmacro Download_Lang_Data urd'), (834, '  SectionEnd'), (835, ''), (836, '  Section /o ""Uzbek"" SecLang_uzb'), (837, '    AddSize 4188'), (838, '    !insertmacro Download_Lang_Data uzb'), (839, '  SectionEnd'), (840, ''), (841, '  Section /o ""Uzbek (Cyrilic)"" SecLang_uzb_cyrl'), (842, '    AddSize 3264'), (843, '    !insertmacro Download_Lang_Data uzb_cyrl'), (844, '  SectionEnd'), (845, ''), (846, '  Section /o ""Vietnamese"" SecLang_vie'), (847, '    AddSize 5956'), (848, '    !insertmacro Download_Lang_Data vie'), (849, '  SectionEnd'), (850, ''), (851, '  Section /o ""Yiddish"" SecLang_yid'), (852, '    AddSize 4140'), (853, '    !insertmacro Download_Lang_Data yid'), (854, '  SectionEnd'), (855, 'SectionGroupEnd'), (856, ''), (857, ';--------------------------------'), (858, ';Descriptions'), (859, '  ; At first we need to localize installer for languages which supports well in tesseract: Eng, Spa, Ger, Ita, Dutch + Russian (it is authors native language)'), (860, '  ;Language strings'), (861, '  LangString DESC_SEC0001 ${LANG_RUSSIAN} ""Установочные файлы.""'), (862, '  ;LangString DESC_SecHelp ${LANG_RUSSIAN} ""Справочная информация.""'), (863, '  LangString DESC_SecCS    ${LANG_RUSSIAN} ""Добавить ярлыки в меню Пуск""'), (864, ''), (865, '  LangString DESC_SEC0001 ${LANG_ENGLISH} ""Installation files.""'), (866, '  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Help information.""'), (867, '  LangString DESC_SecCS    ${LANG_ENGLISH} ""Add shortcuts to Start menu.""'), (868, ''), (869, '  LangString DESC_SEC0001 ${LANG_FRENCH} ""Fichier d\'installation.""'), (870, '  ;LangString DESC_SecHelp ${LANG_FRENCH} ""Aide.""'), (871, '  LangString DESC_SecCS   ${LANG_FRENCH} ""Ajouter des raccourcis vers le menu démarrer.""'), (872, ''), (873, '  LangString DESC_SEC0001 ${LANG_GERMAN} ""Dateien für die Installation.""'), (874, ' ;LangString DESC_SecHelp ${LANG_GERMAN} ""Hilfe.""'), (875, '  LangString DESC_SecCS   ${LANG_GERMAN} ""Einträge im Startmenü hinzufügen.""'), (876, ''), (877, '  LangString DESC_SEC0001 ${LANG_ITALIAN} ""File di installazione.""'), (878, '  ;LangString DESC_SecHelp ${LANG_ITALIAN} ""Guida di informazioni.""'), (879, '  LangString DESC_SecCS    ${LANG_ITALIAN} ""Aggiungere collegamenti al menu Start.""'), (880, ''), (881, '  LangString DESC_SEC0001 ${LANG_SLOVAK} ""Súbory inštalácie.""'), (882, '  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Pomocné informácie.""'), (883, '  LangString DESC_SecCS    ${LANG_SLOVAK} ""Pridať odkaz do Start menu.""'), (884, ''), (885, '  LangString DESC_SEC0001 ${LANG_SPANISH} ""Los archivos de instalación.""'), (886, '  ;LangString DESC_SecHelp ${LANG_SPANISH} ""Información de ayuda.""'), (887, '  LangString DESC_SecCS    ${LANG_SPANISH} ""Ańadir accesos directos al menú Inicio.""'), (888, ''), (889, '  LangString DESC_SEC0001 ${LANG_SPANISHINTERNATIONAL} ""Los archivos de instalación.""'), (890, '  ;LangString DESC_SecHelp ${LANG_SPANISHINTERNATIONAL} ""Información de ayuda.""'), (891, '  LangString DESC_SecCS    ${LANG_SPANISHINTERNATIONAL} ""Ańadir accesos directos al menú Inicio.""'), (892, ''), (893, '  ;Assign language strings to sections'), (894, '  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN'), (895, '    !insertmacro MUI_DESCRIPTION_TEXT ${SEC0001} $(DESC_SEC0001)'), (896, '    !insertmacro MUI_DESCRIPTION_TEXT ${SecCS} $(DESC_SecCS)'), (897, '  !insertmacro MUI_FUNCTION_DESCRIPTION_END'), (898, ''), (899, ';--------------------------------'), (900, ';Uninstaller Section'), (901, ''), (902, ';Section /o -un.Main UNSEC0000'), (903, 'Section -un.Main UNSEC0000'), (904, '  DetailPrint ""Removing everything""'), (905, '  Delete ""$SMPROGRAMS\\${PRODUCT_NAME}\\*.*""'), (906, '  RMDir  ""$SMPROGRAMS\\${PRODUCT_NAME}""'), (907, '  DetailPrint ""Removing registry info""'), (908, '  DeleteRegKey HKLM ""Software\\Tesseract-OCR""'), (909, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (910, '!ifdef REGISTRY_SETTINGS'), (911, '  ${un.EnvVarUpdate} $0 ""PATH"" ""R"" HKLM $INSTDIR'), (912, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (913, '  !insertmacro RemoveTessdataPrefix'), (914, '!endif ; REGISTRY_SETTINGS'), (915, ''), (916, '  # remove the Add/Remove information'), (917, '  DeleteRegKey HKLM ""${UNINST_KEY}""'), (918, '  Delete ""${UNINST_EXE}""'), (919, '  DeleteRegValue HKLM ""${REGKEY}"" Path'), (920, '  DeleteRegKey /IfEmpty HKLM ""${REGKEY}\\Components""'), (921, '  DeleteRegKey /IfEmpty HKLM ""${REGKEY}""'), (922, '  RMDir /r ""$INSTDIR""'), (923, 'SectionEnd'), (924, ''), (925, 'Function PageReinstall'), (926, ''), (927, 'FunctionEnd'), (928, ''), (929, 'Function PageLeaveReinstall'), (930, ''), (931, 'FunctionEnd'), (932, ''), (933, '!macro REMOVE_REGKEY OLD_KEY'), (934, '  StrCmp ${OLD_KEY} HKLM 0 +3'), (935, '    DeleteRegKey HKLM ""${REGKEY}""'), (936, '    Goto End'), (937, '  DeleteRegKey HKCU ""${REGKEY}""'), (938, '  End:'), (939, '!macroend'), (940, ''), (941, 'Function .onInit'), (942, '  Call PreventMultipleInstances'), (943, '  !insertmacro MUI_LANGDLL_DISPLAY'), (944, '  ;RequestExecutionLevel admin'), (945, '  !insertmacro MULTIUSER_INIT'), (946, ''), (947, '  ; is tesseract already installed?'), (948, '  ReadRegStr $R0 HKCU ""${REGKEY}"" ""CurrentVersion""'), (949, '  StrCpy $OLD_KEY HKCU'), (950, '  StrCmp $R0 """" TestHKLM AskUninstall'), (951, '  TestHKLM:'), (952, '    ReadRegStr $R0 HKLM ""${REGKEY}"" ""CurrentVersion""'), (953, '    StrCpy $OLD_KEY HKLM'), (954, '    StrCmp $R0 """" SkipUnInstall'), (955, '  AskUninstall:'), (956, '    MessageBox MB_YESNO|MB_ICONEXCLAMATION \\'), (957, '      ""Tesseract-ocr version $R0 is installed (in $OLD_KEY)! Do you want to uninstall it first?$\\nUninstall will delete all files in \'$INSTDIR\'!"" \\'), (958, '       /SD IDYES IDNO SkipUnInstall IDYES UnInstall'), (959, '  UnInstall:'), (960, '    StrCmp $OLD_KEY ""HKLM"" UnInst_hklm'), (961, '       DetailPrint ""Uninstall: current user""'), (962, '       readRegStr $R1 HKCU ""${UNINST_KEY}"" ""UninstallString""'), (963, '       Goto try_uninstall'), (964, '    UnInst_hklm:'), (965, '       DetailPrint ""UnInstall: all users""'), (966, '       readRegStr $R1 HKLM ""${UNINST_KEY}"" ""UninstallString""'), (967, '    try_uninstall:'), (968, '      ClearErrors'), (969, ""      ExecWait '$R1 _?=$INSTDIR'$0""), (970, '      ; Check if unstaller finished ok. If yes, then try to remove it from installer.'), (971, '      StrCmp $0 0 0 +3'), (972, '        !insertmacro REMOVE_REGKEY ${OLD_KEY}'), (973, '        Goto SkipUnInstall'), (974, '      messagebox mb_ok ""Uninstaller failed:\\n$0\\n\\nYou need to remove program manually.""'), (975, '  SkipUnInstall:'), (976, '    ;InitPluginsDir'), (977, '    ;File /oname=$PLUGINSDIR\\splash.bmp ""${NSISDIR}\\Contrib\\Graphics\\Header\\nsis.bmp""'), (978, '    ;File /oname=$PLUGINSDIR\\splash.bmp ""new.bmp""'), (979, '    ;advsplash::show 1000 600 400 -1 $PLUGINSDIR\\splash'), (980, ""    ;Pop $0          ; $0 has '1' if the user closed the splash screen early,""), (981, ""                    ; '0' if everything closed normal, and '-1' if some error occurred.""), (982, '    ;IfFileExists $INSTDIR\\loadmain.exe PathGood'), (983, '  ;done:'), (984, '    ; Make selection based on System language ID'), (985, ""    System::Call 'kernel32::GetSystemDefaultLangID() i .r0'""), (986, '    ;http://msdn.microsoft.com/en-us/library/dd318693%28v=VS.85%29.aspx'), (987, '    StrCmp $0 ""1078"" Afrikaans'), (988, '    StrCmp $0 ""1052"" Albanian'), (989, '    StrCmp $0 ""5121"" Arabic'), (990, '    StrCmp $0 ""1068"" Azerbaijani'), (991, '    StrCmp $0 ""1069"" Basque'), (992, '    StrCmp $0 ""1059"" Belarusian'), (993, '    StrCmp $0 ""1093"" Bengali'), (994, '    StrCmp $0 ""1026"" Bulgarian'), (995, '    StrCmp $0 ""1027"" Catalan'), (996, '    StrCmp $0 ""1116"" Cherokee'), (997, '    StrCmp $0 ""31748"" Chinese_tra'), (998, '    StrCmp $0 ""4"" Chinese_sim'), (999, '    StrCmp $0 ""26"" Croatian'), (1000, '    StrCmp $0 ""1029"" Czech'), (1001, '    StrCmp $0 ""1030"" Danish'), (1002, '    StrCmp $0 ""2067"" Dutch'), (1003, '    StrCmp $0 ""1061"" Estonian'), (1004, '    StrCmp $0 ""3079"" German'), (1005, '    StrCmp $0 ""1032"" Greek'), (1006, '    StrCmp $0 ""1035"" Finnish'), (1007, '    StrCmp $0 ""2060"" French'), (1008, '    StrCmp $0 ""1037"" Hebrew'), (1009, '    StrCmp $0 ""1081"" Hindi'), (1010, '    StrCmp $0 ""1038"" Hungarian'), (1011, '    StrCmp $0 ""1039"" Icelandic'), (1012, '    StrCmp $0 ""1057"" Indonesian'), (1013, '    StrCmp $0 ""1040"" Italian'), (1014, '    StrCmp $0 ""1041"" Japanese'), (1015, '    StrCmp $0 ""1099"" Kannada'), (1016, '    StrCmp $0 ""1042"" Korean'), (1017, '    StrCmp $0 ""1062"" Latvian'), (1018, '    StrCmp $0 ""1063"" Lithuanian'), (1019, '    StrCmp $0 ""1071"" Macedonian'), (1020, '    StrCmp $0 ""1100"" Malayalam'), (1021, '    StrCmp $0 ""2110"" Malay'), (1022, '    StrCmp $0 ""1082"" Maltese'), (1023, '    StrCmp $0 ""1044"" Norwegian'), (1024, '    StrCmp $0 ""1045"" Polish'), (1025, '    StrCmp $0 ""1046"" Portuguese'), (1026, '    StrCmp $0 ""1048"" Romanian'), (1027, '    StrCmp $0 ""1049"" Russian'), (1028, '    StrCmp $0 ""1051"" Slovak'), (1029, '    StrCmp $0 ""1060"" Slovenian'), (1030, '    StrCmp $0 ""11274"" Spanish'), (1031, '    StrCmp $0 ""2074"" Serbian'), (1032, '    StrCmp $0 ""1089"" Swahili'), (1033, '    StrCmp $0 ""2077"" Swedish'), (1034, '    StrCmp $0 ""1097"" Tamil'), (1035, '    StrCmp $0 ""1098"" Telugu'), (1036, '    StrCmp $0 ""1054"" Thai'), (1037, '    StrCmp $0 ""1055"" Turkish'), (1038, '    StrCmp $0 ""1058"" Ukrainian'), (1039, '    StrCmp $0 ""1066"" Vietnamese'), (1040, ''), (1041, '    Goto lang_end'), (1042, ''), (1043, '    Afrikaans: !insertmacro SelectSection ${SecLang_afr}'), (1044, '            Goto lang_end'), (1045, '    Albanian: !insertmacro SelectSection ${SecLang_sqi}'), (1046, '            Goto lang_end'), (1047, '    Arabic: !insertmacro SelectSection ${SecLang_ara}'), (1048, '            Goto lang_end'), (1049, '    ;Assamese: !insertmacro SelectSection ${SecLang_asm}'), (1050, '    ;        Goto lang_end'), (1051, '    Azerbaijani: !insertmacro SelectSection ${SecLang_aze}'), (1052, '            Goto lang_end'), (1053, '    Basque: !insertmacro SelectSection ${SecLang_eus}'), (1054, '            Goto lang_end'), (1055, '    Belarusian: !insertmacro SelectSection ${SecLang_bel}'), (1056, '            Goto lang_end'), (1057, '    Bengali: !insertmacro SelectSection ${SecLang_ben}'), (1058, '            Goto lang_end'), (1059, '    Bulgarian: !insertmacro SelectSection ${SecLang_bul}'), (1060, '            Goto lang_end'), (1061, '    Catalan: !insertmacro SelectSection ${SecLang_cat}'), (1062, '            Goto lang_end'), (1063, '    Cherokee: !insertmacro SelectSection ${SecLang_chr}'), (1064, '            Goto lang_end'), (1065, '    Chinese_tra: !insertmacro SelectSection ${SecLang_chi_tra}'), (1066, '            Goto lang_end'), (1067, '    Chinese_sim: !insertmacro SelectSection ${SecLang_chi_sim}'), (1068, '            Goto lang_end'), (1069, '    Croatian: !insertmacro SelectSection ${SecLang_hrv}'), (1070, '            Goto lang_end'), (1071, '    Czech: !insertmacro SelectSection ${SecLang_ces}'), (1072, '            Goto lang_end'), (1073, '    Danish: !insertmacro SelectSection ${SecLang_dan}'), (1074, '            !insertmacro SelectSection ${SecLang_dan_frak}'), (1075, '            Goto lang_end'), (1076, '    Dutch: !insertmacro SelectSection ${SecLang_nld}'), (1077, '            Goto lang_end'), (1078, '    Estonian: !insertmacro SelectSection ${SecLang_hrv}'), (1079, '            Goto lang_end'), (1080, '    German: !insertmacro SelectSection ${SecLang_deu}'), (1081, '            !insertmacro SelectSection ${SecLang_deu_frak}'), (1082, '            Goto lang_end'), (1083, '    Greek: !insertmacro SelectSection ${SecLang_ell}'), (1084, '            !insertmacro SelectSection ${SecLang_grc}'), (1085, '            Goto lang_end'), (1086, '    Finnish: !insertmacro SelectSection ${SecLang_fin}'), (1087, '            !insertmacro SelectSection ${SecLang_frm}'), (1088, '            Goto lang_end'), (1089, '    French: !insertmacro SelectSection ${SecLang_fra}'), (1090, '            Goto lang_end'), (1091, '    Hebrew: !insertmacro SelectSection ${SecLang_heb}'), (1092, '            ;!insertmacro SelectSection ${SecLang_heb_com}'), (1093, '            Goto lang_end'), (1094, '    Hungarian: !insertmacro SelectSection ${SecLang_hin}'), (1095, '            Goto lang_end'), (1096, '    Hindi: !insertmacro SelectSection ${SecLang_hun}'), (1097, '            Goto lang_end'), (1098, '    Icelandic: !insertmacro SelectSection ${SecLang_isl}'), (1099, '            Goto lang_end'), (1100, '    Indonesian: !insertmacro SelectSection ${SecLang_ind}'), (1101, '            Goto lang_end'), (1102, '    Italian: !insertmacro SelectSection ${SecLang_ita}'), (1103, '            !insertmacro SelectSection ${SecLang_ita_old}'), (1104, '            Goto lang_end'), (1105, '    Japanese: !insertmacro SelectSection ${SecLang_jpn}'), (1106, '            Goto lang_end'), (1107, '    Kannada: !insertmacro SelectSection ${SecLang_kan}'), (1108, '            Goto lang_end'), (1109, '    Korean: !insertmacro SelectSection ${SecLang_kor}'), (1110, '            Goto lang_end'), (1111, '    Latvian: !insertmacro SelectSection ${SecLang_lav}'), (1112, '            Goto lang_end'), (1113, '    Lithuanian: !insertmacro SelectSection ${SecLang_lit}'), (1114, '            Goto lang_end'), (1115, '    Macedonian: !insertmacro SelectSection ${SecLang_mkd}'), (1116, '            Goto lang_end'), (1117, '    Malayalam: !insertmacro SelectSection ${SecLang_msa}'), (1118, '            Goto lang_end'), (1119, '    Malay: !insertmacro SelectSection ${SecLang_mal}'), (1120, '            Goto lang_end'), (1121, '    Maltese: !insertmacro SelectSection ${SecLang_mlt}'), (1122, '            Goto lang_end'), (1123, '    Norwegian: !insertmacro SelectSection ${SecLang_nor}'), (1124, '            Goto lang_end'), (1125, '    Polish: !insertmacro SelectSection ${SecLang_pol}'), (1126, '            Goto lang_end'), (1127, '    Portuguese: !insertmacro SelectSection ${SecLang_por}'), (1128, '            Goto lang_end'), (1129, '    Romanian: !insertmacro SelectSection ${SecLang_ron}'), (1130, '            Goto lang_end'), (1131, '    Russian: !insertmacro SelectSection ${SecLang_rus}'), (1132, '            Goto lang_end'), (1133, '    Slovak: !insertmacro SelectSection ${SecLang_slk}'), (1134, '            !insertmacro SelectSection ${SecLang_slk_frak}'), (1135, '            Goto lang_end'), (1136, '    Slovenian: !insertmacro SelectSection ${SecLang_slv}'), (1137, '            Goto lang_end'), (1138, '    Spanish: !insertmacro SelectSection ${SecLang_spa}'), (1139, '            !insertmacro SelectSection ${SecLang_spa_old}'), (1140, '            Goto lang_end'), (1141, '    Serbian: !insertmacro SelectSection ${SecLang_srp}'), (1142, '            Goto lang_end'), (1143, '    Swahili: !insertmacro SelectSection ${SecLang_swa}'), (1144, '            Goto lang_end'), (1145, '    Swedish: !insertmacro SelectSection ${SecLang_swe}'), (1146, '!ifdef OLD'), (1147, '            !insertmacro SelectSection ${SecLang_swe_frak}'), (1148, '!endif'), (1149, '            Goto lang_end'), (1150, '    Tamil: !insertmacro SelectSection ${SecLang_tam}'), (1151, '            Goto lang_end'), (1152, '    Telugu: !insertmacro SelectSection ${SecLang_tel}'), (1153, '            Goto lang_end'), (1154, '    Thai: !insertmacro SelectSection ${SecLang_tha}'), (1155, '            Goto lang_end'), (1156, '    Turkish: !insertmacro SelectSection ${SecLang_tur}'), (1157, '            Goto lang_end'), (1158, '    Ukrainian: !insertmacro SelectSection ${SecLang_ukr}'), (1159, '            Goto lang_end'), (1160, '    Vietnamese: !insertmacro SelectSection ${SecLang_vie}'), (1161, ''), (1162, '    lang_end:'), (1163, 'FunctionEnd'), (1164, ''), (1165, 'Function un.onInit'), (1166, '  !insertmacro MUI_LANGDLL_DISPLAY'), (1167, '  !insertmacro MULTIUSER_UNINIT'), (1168, '  ;!insertmacro SELECT_UNSECTION Main ${UNSEC0000}'), (1169, '  ;!insertmacro MUI_UNGETLANGUAGE'), (1170, 'FunctionEnd'), (1171, ''), (1172, 'Function .onInstFailed'), (1173, '  MessageBox MB_OK ""Installation failed.""'), (1174, 'FunctionEnd'), (1175, ''), (1176, 'Function ShowReadme'), (1177, '  Exec ""iexplore.exe $INSTDIR\\doc\\README""'), (1178, '  ;BringToFront'), (1179, 'FunctionEnd'), (1180, ''), (1181, '; Prevent running multiple instances of the installer'), (1182, 'Function PreventMultipleInstances'), (1183, '  ; TODO: Does not work.'), (1184, '  Push $R0'), (1185, ""  System::Call 'kernel32::CreateMutexA(i 0, i 0, t ${PRODUCT_NAME}) ?e'""), (1186, '  Pop $R0'), (1187, '  StrCmp $R0 0 +3'), (1188, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""The installer is already running."" /SD IDOK'), (1189, '    Abort'), (1190, '  Pop $R0'), (1191, 'FunctionEnd')], 'deleted': []}",yes
vs2008\tesseract-3.02.02.nsi,,c886e3b63968eba9f2ae32c3713a5ccee4bb5a37,678e427d8b5f0155caeb62ac7986cb1d43fdb037,"Update NSIS configuration

- Move NSIS installer file to new location
- Support cross builds with NSIS
- Clean nsis configuration
- Fix typos in nsis configuration
- Add jar files needed for ScrollView.jar
- Move ScrollView.jar to a new section
- Add missing configurations to tessdata
- Registry settings are now disabled (problems with long PATH)
- Add menu sections for all languages
- Simplify language downloads
- Tune and improve nsis configuration
- Add sizes for language data
- Add missing translations to nsis configuration
- Don't show details in installer by default
- Initial code for 64 bit Tesseract installer
- Fix uninstall for TESSDATA_PREFIX registry key
- Remove cube code
- nsis: Add all training executables
- nsis: Disable registry settings

Trying to add to PATH fails if the old PATH is very long and
will result in an empty PATH.

Remove these settings as they were already disabled by default,
and both are not needed.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,1004 +0,0 @@
-; (C) Copyright 2010, Sergey Bronnikov
-; (C) Copyright 2010-2012, Zdenko Podobný
-;
-; Licensed under the Apache License, Version 2.0 (the ""License"");
-; you may not use this file except in compliance with the License.
-; You may obtain a copy of the License at
-; http://www.apache.org/licenses/LICENSE-2.0
-; Unless required by applicable law or agreed to in writing, software
-; distributed under the License is distributed on an ""AS IS"" BASIS,
-; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-; See the License for the specific language governing permissions and
-; limitations under the License.
-
-SetCompressor /FINAL /SOLID lzma
-;SetCompressor lzma
-SetCompressorDictSize 32
-
-!define VERSION 3.02.02
-!define PRODUCT_NAME ""Tesseract-OCR""
-!define PRODUCT_VERSION ""${VERSION}""
-!define PRODUCT_PUBLISHER ""Tesseract-OCR community""
-!define PRODUCT_WEB_SITE ""http://code.google.com/p/tesseract-ocr""
-!define FILE_URL ""http://tesseract-ocr.googlecode.com/files/""
-
-# General Definitions
-Name ""${PRODUCT_NAME} ${VERSION} for Windows""
-Caption ""Tesseract-OCR ${VERSION}""
-BrandingText /TRIMCENTER ""(c) 2010-2012 Tesseract-OCR ""
-!define REGKEY ""SOFTWARE\${PRODUCT_NAME}""
-; HKLM (all users) vs HKCU (current user) defines
-!define env_hklm 'HKLM ""SYSTEM\CurrentControlSet\Control\Session Manager\Environment""'
-!define env_hkcu 'HKCU ""Environment""'
-
-# MultiUser Symbol Definitions
-!define MULTIUSER_EXECUTIONLEVEL Admin
-!define MULTIUSER_MUI
-!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_KEY ""${REGKEY}""
-!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_VALUENAME MultiUserInstallMode
-!define MULTIUSER_INSTALLMODE_COMMANDLINE
-!define MULTIUSER_INSTALLMODE_INSTDIR ${PRODUCT_NAME}
-!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY ""${REGKEY}""
-!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUE ""Path""
-
-# MUI Symbol Definitions
-!define MUI_ABORTWARNING
-!define MUI_COMPONENTSPAGE_SMALLDESC
-!define MUI_HEADERIMAGE
-!define MUI_HEADERIMAGE_BITMAP_NOSTRETCH
-!define MUI_ICON ""${NSISDIR}\Contrib\Graphics\Icons\modern-install-blue-full.ico""
-!define MUI_FINISHPAGE_LINK ""http://code.google.com/p/tesseract-ocr/""
-!define MUI_FINISHPAGE_LINK_LOCATION ""http://code.google.com/p/tesseract-ocr/""
-!define MUI_FINISHPAGE_NOAUTOCLOSE
-!define MUI_FINISHPAGE_SHOWREADME ""notepad $INSTDIR\doc\README""
-!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme
-!define MUI_LICENSEPAGE_CHECKBOX
-!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM
-!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}
-!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup
-!define MUI_STARTMENUPAGE_DEFAULTFOLDER ${PRODUCT_NAME}
-!define MUI_UNICON ""${NSISDIR}\Contrib\Graphics\Icons\orange-uninstall.ico""
-!define MUI_UNFINISHPAGE_NOAUTOCLOSE
-!define MUI_WELCOMEPAGE_TITLE_3LINES
-
-# Included files
-!include MultiUser.nsh
-!include Sections.nsh
-!include MUI2.nsh
-!include EnvVarUpdate.nsh
-!include LogicLib.nsh
-!include winmessages.nsh # include for some of the windows messages defines
-
-# Variables
-Var StartMenuGroup
-Var PathKey
-; Define user variables
-Var OLD_KEY
-
-# Installer pages
-!insertmacro MUI_PAGE_WELCOME
-!insertmacro MUI_PAGE_LICENSE ""..\COPYING""
-!insertmacro MULTIUSER_PAGE_INSTALLMODE
-!ifdef VERSION
-  Page custom PageReinstall PageLeaveReinstall
-!endif
-!insertmacro MUI_PAGE_DIRECTORY
-!insertmacro MUI_PAGE_COMPONENTS
-!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup
-!insertmacro MUI_PAGE_INSTFILES
-!insertmacro MUI_PAGE_FINISH
-!insertmacro MUI_UNPAGE_CONFIRM
-!insertmacro MUI_UNPAGE_INSTFILES
-
-# Languages
-!insertmacro MUI_LANGUAGE ""English""
-!insertmacro MUI_LANGUAGE ""Italian""
-!insertmacro MUI_LANGUAGE ""Russian""
-!insertmacro MUI_LANGUAGE ""Slovak""
-!insertmacro MUI_LANGUAGE ""Spanish""
-!insertmacro MUI_LANGUAGE ""SpanishInternational""
-
-# Installer attributes
-ShowInstDetails show
-InstProgressFlags smooth colored
-XPStyle on
-SpaceTexts
-CRCCheck on
-InstProgressFlags smooth colored
-CRCCheck On  # Do a CRC check before installing
-InstallDir ""$PROGRAMFILES\Tesseract-OCR""
-# Name of program and file
-!ifdef VERSION
-OutFile tesseract-ocr-setup-${VERSION}.exe
-!else
-OutFile tesseract-ocr-setup.exe
-!endif
-
-!macro AddToPath
-  # TODO(zdenop): Check if $INSTDIR is in path. If yes, that do not append it
-  # append bin path to user PATH environment variable
-  StrCpy $PathKey ""HKLM""
-  StrCmp $MultiUser.InstallMode ""AllUsers"" +2
-    StrCpy $PathKey ""HKCU""
-  DetailPrint ""Setting PATH to $INSTDIR at $PathKey""
-  ${EnvVarUpdate} $0 ""PATH"" ""A"" ""$PathKey"" ""$INSTDIR""
-  ; make sure windows knows about the change
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-!macroend
-
-!macro RemoveTessdataPrefix
-  ReadRegStr $R2 ${env_hklm} 'TESSDATA_PREFIX'
-  ReadRegStr $R3 ${env_hkcu} 'TESSDATA_PREFIX'
-  StrCmp $R2 """" Next1 0
-    DetailPrint ""Removing $R2 from HKLM Environment...""
-    DeleteRegValue ${env_hklm} TESSDATA_PREFIX  # This only empty variable, but do not remove it!
-    ${EnvVarUpdate} $0 ""TESSDATA_PREFIX""  ""R"" ""HKLM"" $R1
-  Next1:
-    StrCmp $R3 """" Next2 0
-      DetailPrint ""Removing $R3 from HKCU Environment...""
-      DeleteRegValue ${env_hkcu} ""TESSDATA_PREFIX""
-  Next2:
-    # make sure windows knows about the change
-    SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-!macroend
-
-!macro SetTESSDATA
-  !insertmacro RemoveTessdataPrefix
-  StrCpy $PathKey ""HKLM""
-  StrCmp $MultiUser.InstallMode ""AllUsers"" +2
-    StrCpy $PathKey ""HKCU""
-  DetailPrint ""Setting TESSDATA_PREFIX at $PathKey""
-  ${EnvVarUpdate} $0 ""TESSDATA_PREFIX"" ""A"" ""$PathKey"" ""$INSTDIR\""
-  # make sure windows knows about the change
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-!macroend
-
-!macro Download_Lang_Data Lang
-  IfFileExists $TEMP/${Lang} dlok
-  ;StrCpy $1 ${Lang}
-  ;StrCpy $2 ""$INSTDIR\tessdata\$1""
-  ;inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/$1"" $2 /end
-  inetc::get /caption ""Downloading ${Lang}"" /popup """" ""${FILE_URL}/${Lang}"" $TEMP/${Lang} /end
-    Pop $0 # return value = exit code, ""OK"" if OK
-    StrCmp $0 ""OK"" dlok
-    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of ${Lang}: $0. Click OK to continue."" /SD IDOK
-    Goto error
-  dlok:
-    DetailPrint ""Extracting ${Lang}""
-    untgz::extract ""-j"" ""-d"" ""$INSTDIR\tessdata\"" ""$TEMP/${Lang}""
-    # tarbal has to be created with option --old-archive otherwise there will be error
-    # untgz::extract failed because of checksum
-  error:
-    Delete ""$TEMP\${Lang}""
-!macroend
-
-!macro Download_Leptonica DataUrl
-  IfFileExists $TEMP/leptonica.zip dlok
-  inetc::get /caption ""Downloading $1"" /popup """" ${DataUrl} $TEMP/leptonica.zip /end
-    Pop $R0 # return value = exit code, ""OK"" if OK
-    StrCmp $R0 ""OK"" dlok
-    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK
-    Goto error
-  dlok:
-    nsisunz::UnzipToLog ""$TEMP/leptonica.zip"" ""$INSTDIR""
-    Pop $R0
-    StrCmp $R0 ""success"" +2
-        MessageBox MB_OK ""Decompression of leptonica failed: $R0""
-        Goto error
-  error:
-    Delete ""$TEMP\leptonica.zip""
-!macroend
-
-!macro Download_Lang_Data_gz Lang
-  ;IfFileExists $TEMP/${Lang} dlok
-  StrCpy $1 ${Lang}
-  StrCpy $2 ""$INSTDIR\tessdata\$1""
-  inetc::get /caption ""Downloading $1"" /popup """" ""http://tesseract-ocr.googlecode.com/files/$1"" $2 /end
-    Pop $0 # return value = exit code, ""OK"" if OK
-    StrCmp $0 ""OK"" dlok
-    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $0. Click OK to continue."" /SD IDOK
-    Goto error
-  dlok:
-    ExecWait  '""$INSTDIR\gzip.exe"" -d ""$2""'
-  error:
-!macroend
-
-!macro Download_Data2 Filename Komp
-  IfFileExists $TEMP/${Filename} dlok
-  inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/${Filename}"" $TEMP/${Filename} /end
-    Pop $R0 # return value = exit code, ""OK"" if OK
-    StrCmp $R0 ""OK"" dlok
-    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK
-    Goto error
-  dlok:
-    ${If} ${Komp} == ""tgz""
-        DetailPrint ""Extracting ${Filename}""
-        untgz::extract ""-d"" ""$INSTDIR\.."" ""$TEMP\${Filename}""
-        Goto install
-    ${EndIf}
-    ${If} ${Komp} == ""zip""
-        DetailPrint ""Extracting ${Filename}""
-        nsisunz::UnzipToLog ""$TEMP\${Filename}"" ""$INSTDIR\""
-        Goto install
-    ${EndIf}
-     MessageBox MB_OK|MB_ICONEXCLAMATION ""Unsupported compression!""
-  install:
-        Pop $R0
-        StrCmp $R0 ""success"" +3
-            MessageBox MB_OK ""Decompression of ${Filename} failed: $R0""
-            Goto error
-    Delete ""$TEMP\${Filename}""
-  error:
-!macroend
-
-!macro Download_Data Filename Komp
-  IfFileExists $TEMP/${Filename} dlok
-  inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/${Filename}"" $TEMP/${Filename} /end
-    Pop $R0 # return value = exit code, ""OK"" if OK
-    StrCmp $R0 ""OK"" dlok
-    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK
-    Goto end
-  dlok:
-    ${If} ${Komp} == ""tgz""
-        untgz::extract ""-d"" ""$INSTDIR"" ""$TEMP\${Filename}""
-        Goto install
-    ${EndIf}
-    ${If} ${Komp} == ""zip""
-        nsisunz::UnzipToLog ""$TEMP\${Filename}"" ""$INSTDIR""
-        Goto install
-    ${EndIf}
-     MessageBox MB_OK|MB_ICONEXCLAMATION ""Unsupported compression!""
-  install:
-        Pop $R0
-        StrCmp $R0 ""success"" +3
-            MessageBox MB_OK ""Decompression of ${Filename} failed: $R0""
-            Goto end
-    Delete ""$TEMP\${Filename}""
-    ${If} ${Komp} == ""zip""
-        Goto end
-    ${EndIf}
-    CopyFiles ""$TEMP\Tesseract-OCR\*"" ""$INSTDIR""
-    RMDir /r ""$TEMP\Tesseract-OCR""
-  end:
-!macroend
-
-Section -Main SEC0000
-  ; mark as read only component
-  SectionIn RO
-  SetOutPath ""$INSTDIR""
-  # files included in distribution
-  File LIB_Release\tesseract.exe
-  File gzip.exe
-  File tar.exe
-  CreateDirectory ""$INSTDIR\java""
-  SetOutPath ""$INSTDIR\java""
-  File ..\java\ScrollView.jar
-  CreateDirectory ""$INSTDIR\tessdata""
-  CreateDirectory ""$INSTDIR\tessdata\configs""
-  SetOutPath ""$INSTDIR\tessdata\configs""
-  File ..\tessdata\configs\ambigs.train
-  File ..\tessdata\configs\api_config
-  File ..\tessdata\configs\bigram
-  File ..\tessdata\configs\box.train
-  File ..\tessdata\configs\box.train.stderr
-  File ..\tessdata\configs\digits
-  File ..\tessdata\configs\hocr
-  File ..\tessdata\configs\inter
-  File ..\tessdata\configs\kannada
-  File ..\tessdata\configs\linebox
-  File ..\tessdata\configs\logfile
-  File ..\tessdata\configs\makebox
-  File ..\tessdata\configs\quiet
-  File ..\tessdata\configs\rebox
-  File ..\tessdata\configs\strokewidth
-  File ..\tessdata\configs\unlv
-  CreateDirectory ""$INSTDIR\tessdata\tessconfigs""
-  SetOutPath ""$INSTDIR\tessdata\tessconfigs""
-  File ..\tessdata\tessconfigs\batch
-  File ..\tessdata\tessconfigs\batch.nochop
-  File ..\tessdata\tessconfigs\matdemo
-  File ..\tessdata\tessconfigs\msdemo
-  File ..\tessdata\tessconfigs\nobatch
-  File ..\tessdata\tessconfigs\segdemo
-  CreateDirectory ""$INSTDIR\doc""
-  SetOutPath ""$INSTDIR\doc""
-  File ..\AUTHORS
-  File ..\COPYING
-  File ..\eurotext.tif
-  File ..\phototest.tif
-  File ..\README
-  File ..\ReleaseNotes
-SectionEnd
-
-Section ""Traning Tools"" SecTr
-  SectionIn 1
-  SetOutPath ""$INSTDIR""
-  File LIB_Release\cntraining.exe
-  File LIB_Release\combine_tessdata.exe
-  File LIB_Release\mftraining.exe
-  File LIB_Release\unicharset_extractor.exe
-  File LIB_Release\wordlist2dawg.exe
-  File LIB_Release\classifier_tester.exe
-  File LIB_Release\dawg2wordlist.exe
-  File LIB_Release\ambiguous_words.exe
-  File LIB_Release\shapeclustering.exe
-SectionEnd
-
-Section -post SEC0001
-  ;Store installation folder - we use allways HKLM!
-  WriteRegStr HKLM ""${REGKEY}"" ""Path"" ""$INSTDIR""
-  WriteRegStr HKLM ""${REGKEY}"" ""Mode"" $MultiUser.InstallMode
-  WriteRegStr HKLM ""${REGKEY}"" ""InstallDir"" ""$INSTDIR""
-  WriteRegStr HKLM ""${REGKEY}"" ""CurrentVersion"" ""${VERSION}""
-  WriteRegStr HKLM ""${REGKEY}"" ""Uninstaller"" ""$INSTDIR\uninstall.exe""
-  ;WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Run"" ""Tesseract-OCR"" ""$INSTDIR\tesseract.exe""
-  ; Register to Add/Remove program in control panel
-  WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""DisplayName"" ""${PRODUCT_NAME} - open source OCR engine""
-  WriteRegStr HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" DisplayVersion ""${VERSION}""
-  WriteRegStr HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" Publisher ""${PRODUCT_PUBLISHER}""
-  WriteRegStr HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" URLInfoAbout ""${PRODUCT_WEB_SITE}""
-  WriteRegStr HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""DisplayIcon"" ""$INSTDIR\uninstall.exe""
-  WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""UninstallString"" ""$INSTDIR\uninstall.exe""
-  WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""QuietUninstallString"" '""$INSTDIR\uninstall.exe"" /S'
-  WriteRegDWORD HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" NoModify 1
-  WriteRegDWORD HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" NoRepair 1
-  ;Create uninstaller
-  WriteUninstaller ""$INSTDIR\Uninstall.exe""
-  ;ExecShell ""open"" ""http://code.google.com/p/tesseract-ocr/""
-  ;ExecShell ""open"" '""$INSTDIR""'
-  ;BringToFront
-SectionEnd
-
-Section ""Shortcuts creation"" SecCS
-  SetOutPath $INSTDIR
-  CreateDirectory ""$SMPROGRAMS\${PRODUCT_NAME}""
-  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Console.lnk"" $WINDIR\system32\CMD.EXE
-  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Homepage.lnk"" ""${PRODUCT_WEB_SITE}""
-  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\ReadMe.lnk"" ""${PRODUCT_WEB_SITE}/wiki/ReadMe""
-  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\FAQ.lnk"" ""${PRODUCT_WEB_SITE}/wiki/FAQ""
-  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"" ""$INSTDIR\uninstall.exe"" """" ""$INSTDIR\uninstall.exe"" 0
-  ;CreateShortCut ""$DESKTOP\Tesseract-OCR.lnk"" ""$INSTDIR\tesseract.exe"" """" ""$INSTDIR\tesseract.exe"" 0
-  ;CreateShortCut ""$QUICKLAUNCH\.lnk"" ""$INSTDIR\tesseract.exe"" """" ""$INSTDIR\tesseract.exe"" 0
-SectionEnd
-
-SectionGroup ""Registry setttings"" SecRS
-    Section ""Add to Path"" SecRS_path
-        !insertmacro AddToPath
-    SectionEnd
-    Section ""Set TESSDATA_PREFIX variable"" SecRS_tessdata
-        !insertmacro SetTESSDATA
-    SectionEnd
-SectionGroupEnd
-
-SectionGroup ""Tesseract development files"" SecGrp_dev
-    Section /o ""Download and install tesseract libraries including header files"" SecLang_tlib
-    !insertmacro Download_Data2 tesseract-ocr-3.02.02-win32-lib-include-dirs.zip zip
-    CopyFiles $INSTDIR\lib\libtesseract*.dll $INSTDIR\  ; $INSTDIR is in the path!
-    Delete $INSTDIR\lib\libtesseract*.dll
-    SectionEnd
-    Section /o ""Download and install leptonica 1.68 libraries including header files"" SecLang_llib
-    !insertmacro Download_Leptonica http://leptonica.org/source/leptonica-1.68-win32-lib-include-dirs.zip
-    CopyFiles $INSTDIR\lib\liblept*.dll $INSTDIR\  ; move to path
-    Delete $INSTDIR\lib\liblept*.dll
-    SectionEnd
-    Section /o ""Download and install VC++ 2008 tesseract API example solution"" SecLang_example
-    !insertmacro Download_Data2 tesseract-ocr-API-Example-vs2008.zip zip
-    SectionEnd
-    Section /o ""Download and install tesseract source code"" SecLang_source
-    !insertmacro Download_Data tesseract-ocr-3.02.02.tar.gz tgz
-    SectionEnd
-    Section /o ""Download and install VS C++ 2008 solution for tesseract"" SecLang_vs2008
-    !insertmacro Download_Data tesseract-ocr-3.02-vs2008.zip zip
-    SectionEnd
-    Section /o ""Download and install doxygen documentation for tesseract"" SecLang_doxygen
-    !insertmacro Download_Data tesseract-ocr-3.02.02-doc-html.tar.gz tgz
-    CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\DoxygenDoc.lnk"" ""$INSTDIR\tesseract-ocr\doc\html\index.html""
-    SectionEnd
-SectionGroupEnd
-
-; Download language files
-SectionGroup ""Language data"" SecGrp_LD
-    Section ""English language data"" SecLang_eng
-    SectionIn RO
-      SetOutPath ""$INSTDIR\tessdata""
-      File ..\tessdata\eng.*
-    SectionEnd
-
-    Section ""Orientation and script detection data"" SecLang_osd
-    SectionIn 1
-      SetOutPath ""$INSTDIR\tessdata""
-     File ..\tessdata\osd.*
-    SectionEnd
-
-    Section /o ""Download and install Math / equation detection module"" SecLang_equ
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.equ.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Afrikaans language data"" SecLang_afr
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.afr.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Albanian language data"" SecLang_sqi
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.sqi.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Arabic language data"" SecLang_ara
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ara.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Azerbaijani language data"" SecLang_aze
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.aze.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Basque language data"" SecLang_eus
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.eus.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Belarusian language data"" SecLang_bel
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.bel.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Bengali language data"" SecLang_ben
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ben.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Bulgarian language data"" SecLang_bul
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.bul.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Catalan language data"" SecLang_cat
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.cat.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Cherokee language data"" SecLang_chr
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chr.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Chinese (Traditional) language data"" SecLang_chi_tra
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chi_tra.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Chinese (Simplified) language data"" SecLang_chi_sim
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chi_sim.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Croatian language data"" SecLang_hrv
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hrv.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Czech language data"" SecLang_ces
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ces.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Danish language data"" SecLang_dan
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.dan.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Danish (Fraktur) language data"" SecLang_dan_frak
-    !insertmacro Download_Lang_Data_gz dan-frak.traineddata.gz
-    SectionEnd
-
-    Section /o ""Download and install Dutch language data"" SecLang_nld
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.nld.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install English - Middle (1100-1500) language data"" SecLang_enm
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.enm.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Esperanto language data"" SecLang_epo
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.epo.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Estonian language data"" SecLang_est
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.est.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install German language data"" SecLang_deu
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.deu.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install German (Fraktur) language data"" SecLang_deu_frak
-    !insertmacro Download_Lang_Data_gz deu-frak.traineddata.gz
-    SectionEnd
-
-    Section /o ""Download and install Greek language data"" SecLang_ell
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ell.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Greek - Ancient language data"" SecLang_grc
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.grc.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Finnish language data"" SecLang_fin
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.fin.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Frankish language data"" SecLang_frk
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.frk.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install French language data"" SecLang_fra
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.fra.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install French - Middle(ca. 1400-1600) language data"" SecLang_frm
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.frm.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Hebrew language data"" SecLang_heb
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.heb.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Hebrew (community traning) language data"" SecLang_heb_com
-    !insertmacro Download_Lang_Data tesseract-ocr-3.01.heb-com.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Hindi language data"" SecLang_hin
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hin.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Hungarian language data"" SecLang_hun
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hun.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Icelandic language data"" SecLang_isl
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.isl.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Indonesian language data"" SecLang_ind
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ind.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Italian language data"" SecLang_ita
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ita.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Italian (Old) language data"" SecLang_ita_old
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ita_old.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Japanese language data"" SecLang_jpn
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.jpn.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Kannada language data"" SecLang_kan
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.kan.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Korean language data"" SecLang_kor
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.kor.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Latvian language data"" SecLang_lav
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.lav.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Lithuanian language data"" SecLang_lit
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.lit.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Macedonian language data"" SecLang_mkd
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mkd.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Malay language data"" SecLang_msa
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.msa.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Malayalam language data"" SecLang_mal
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mal.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Maltese language data"" SecLang_mlt
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mlt.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Norwegian language data"" SecLang_nor
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.nor.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Polish language data"" SecLang_pol
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.pol.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Portuguese language data"" SecLang_por
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.por.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Romanian language data"" SecLang_ron
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ron.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Russian language data"" SecLang_rus
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.rus.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Slovak language data"" SecLang_slk
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slk.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Slovak (Fraktur) language data"" SecLang_slk_frak
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slk_frak.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Slovenian language data"" SecLang_slv
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slv.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Spanish language data"" SecLang_spa
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.spa.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Spanish (Old) language data"" SecLang_spa_old
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.spa_old.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Serbian language data"" SecLang_srp
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.srp.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Swahili language data"" SecLang_swa
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.swa.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Swedish language data"" SecLang_swe
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.swe.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Swedish (Fraktur) language data"" SecLang_swe_frak
-    !insertmacro Download_Lang_Data_gz swe-frak.traineddata.gz
-    SectionEnd
-
-    Section /o ""Download and install Tagalog language data"" SecLang_tgl
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tgl.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Tamil language data"" SecLang_tam
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tam.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Telugu language data"" SecLang_tel
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tel.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Thai language data"" SecLang_tha
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tha.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Turkish language data"" SecLang_tur
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tur.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Ukrainian language data"" SecLang_ukr
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ukr.tar.gz
-    SectionEnd
-
-    Section /o ""Download and install Vietnamese language data"" SecLang_vie
-    !insertmacro Download_Lang_Data tesseract-ocr-3.02.vie.tar.gz
-    SectionEnd
-SectionGroupEnd
-
-;--------------------------------
-;Descriptions
-  ; At first we need to localize installer for languages which supports well in tesseract: Eng, Spa, Ger, Ita, Dutch + Russian (it is authors native language)
-  ;Language strings
-  LangString DESC_SEC0001 ${LANG_RUSSIAN} ""Установочные файлы.""
-  ;LangString DESC_SecHelp ${LANG_RUSSIAN} ""Справочная информация.""
-  LangString DESC_SecCS    ${LANG_RUSSIAN} ""Добавить ярлыки в меню Пуск""
-
-  LangString DESC_SEC0001 ${LANG_ENGLISH} ""Installation files.""
-  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Help information.""
-  LangString DESC_SecCS    ${LANG_ENGLISH} ""Add shortcuts to Start menu.""
-
-  LangString DESC_SEC0001 ${LANG_ITALIAN} ""File di installazione.""
-  ;LangString DESC_SecHelp ${LANG_ITALIAN} ""Guida di informazioni.""
-  LangString DESC_SecCS    ${LANG_ITALIAN} ""Aggiungere collegamenti al menu Start.""
-
-  LangString DESC_SEC0001 ${LANG_SLOVAK} ""Súbory inštalácie.""
-  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Pomocné informácie.""
-  LangString DESC_SecCS    ${LANG_SLOVAK} ""Pridať odkaz do Start menu.""
-
-  LangString DESC_SEC0001 ${LANG_SPANISH} ""Los archivos de instalación.""
-  ;LangString DESC_SecHelp ${LANG_SPANISH} ""Información de ayuda.""
-  LangString DESC_SecCS    ${LANG_SPANISH} ""Ańadir accesos directos al menú Inicio.""
-
-  LangString DESC_SEC0001 ${LANG_SPANISHINTERNATIONAL} ""Los archivos de instalación.""
-  ;LangString DESC_SecHelp ${LANG_SPANISHINTERNATIONAL} ""Información de ayuda.""
-  LangString DESC_SecCS    ${LANG_SPANISHINTERNATIONAL} ""Ańadir accesos directos al menú Inicio.""
-
-  ;Assign language strings to sections
-  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
-    !insertmacro MUI_DESCRIPTION_TEXT ${SEC0001} $(DESC_SEC0001)
-    !insertmacro MUI_DESCRIPTION_TEXT ${SecCS} $(DESC_SecCS)
-  !insertmacro MUI_FUNCTION_DESCRIPTION_END
-
-;--------------------------------
-;Uninstaller Section
-
-;Section /o -un.Main UNSEC0000
-Section -un.Main UNSEC0000
-  DetailPrint ""Removing everything""
-  Delete ""$SMPROGRAMS\${PRODUCT_NAME}\*.*""
-  RMDir  ""$SMPROGRAMS\${PRODUCT_NAME}""
-  DetailPrint ""Removing registry info""
-  DeleteRegKey HKLM ""Software\Tesseract-OCR""
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-  ${un.EnvVarUpdate} $0 ""PATH"" ""R"" HKLM $INSTDIR
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-  DeleteRegValue HKLM ""Environment"" ""TESSDATA_PREFIX""
-  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
-
-  # remove the Add/Remove information
-  DeleteRegKey HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}""
-  Delete ""$INSTDIR\Uninstall.exe""
-  DeleteRegValue HKLM ""${REGKEY}"" Path
-  DeleteRegKey /IfEmpty HKLM ""${REGKEY}\Components""
-  DeleteRegKey /IfEmpty HKLM ""${REGKEY}""
-  RMDir /r ""$INSTDIR""
-SectionEnd
-
-Function PageReinstall
-
-FunctionEnd
-
-Function PageLeaveReinstall
-
-FunctionEnd
-
-!macro REMOVE_REGKEY OLD_KEY
-  StrCmp ${OLD_KEY} HKLM 0 +3
-    DeleteRegKey HKLM ""${REGKEY}""
-    Goto End
-  DeleteRegKey HKCU ""${REGKEY}""
-  End:
-!macroend
-
-Function .onInit
-  Call PreventMultipleInstances
-  ;RequestExecutionLevel admin
-  !insertmacro MULTIUSER_INIT
-
-  ; is tesseract already installed?
-  ReadRegStr $R0 HKCU ""${REGKEY}"" ""CurrentVersion""
-  StrCpy $OLD_KEY HKCU
-  StrCmp $R0 """" test1 test2
-  test1:
-    ReadRegStr $R0 HKLM ""${REGKEY}"" ""CurrentVersion""
-    StrCpy $OLD_KEY HKLM
-    StrCmp $R0 """" SkipUnInstall
-  test2:
-    MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Tesseract-ocr version $R0 is installed (in $OLD_KEY)! Do you want to uninstall it first?$\nUninstall will delete all files in '$INSTDIR'!"" \
-       /SD IDYES IDNO SkipUnInstall IDYES UnInstall
-  UnInstall:
-    StrCmp $OLD_KEY ""HKLM"" UnInst_hklm
-       DetailPrint ""CurrentUser:""
-       readRegStr $R1 HKCU ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""UninstallString""
-       Goto try_uninstall
-    UnInst_hklm:
-       DetailPrint ""UnInst_hklm""
-       readRegStr $R1 HKLM ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""UninstallString""
-    try_uninstall:
-      ClearErrors
-      ExecWait '$R1 _?=$INSTDIR'$0
-      StrCmp $0 0 0 +3   ; Check if unstaller finished ok. If yes, than try to remove it from installer
-        !insertmacro REMOVE_REGKEY ${OLD_KEY}
-        Goto SkipUnInstall
-      messagebox mb_ok ""Uninstaller failed:\n$0\n\nYou need to remove program manually.""
-  SkipUnInstall:
-  MessageBox MB_YESNO|MB_ICONQUESTION ""Do you want to install ${PRODUCT_NAME} ${VERSION}?"" \
-    /SD IDYES IDNO no IDYES yes
-  no:
-    SetSilent silent
-    Goto done
-  yes:
-    ;InitPluginsDir
-    ;File /oname=$PLUGINSDIR\splash.bmp ""${NSISDIR}\Contrib\Graphics\Header\nsis.bmp""
-    ;File /oname=$PLUGINSDIR\splash.bmp ""new.bmp""
-    ;advsplash::show 1000 600 400 -1 $PLUGINSDIR\splash
-    ;Pop $0          ; $0 has '1' if the user closed the splash screen early,
-                    ; '0' if everything closed normal, and '-1' if some error occured.
-    ;IfFileExists $INSTDIR\loadmain.exe PathGood
-  done:
-    ; Make selection based on System language ID
-    System::Call 'kernel32::GetSystemDefaultLangID() i .r0'
-    ;http://msdn.microsoft.com/en-us/library/dd318693%28v=VS.85%29.aspx
-    StrCmp $0 ""1078"" Afrikaans
-    StrCmp $0 ""1052"" Albanian
-    StrCmp $0 ""5121"" Arabic
-    StrCmp $0 ""1068"" Azerbaijani
-    StrCmp $0 ""1069"" Basque
-    StrCmp $0 ""1059"" Belarusian
-    StrCmp $0 ""1093"" Bengali
-    StrCmp $0 ""1026"" Bulgarian
-    StrCmp $0 ""1027"" Catalan
-    StrCmp $0 ""1116"" Cherokee
-    StrCmp $0 ""31748"" Chinese_tra
-    StrCmp $0 ""4"" Chinese_sim
-    StrCmp $0 ""26"" Croatian
-    StrCmp $0 ""1029"" Czech
-    StrCmp $0 ""1030"" Danish
-    StrCmp $0 ""2067"" Dutch
-    StrCmp $0 ""1061"" Estonian
-    StrCmp $0 ""3079"" German
-    StrCmp $0 ""1032"" Greek
-    StrCmp $0 ""1035"" Finnish
-    StrCmp $0 ""2060"" French
-    StrCmp $0 ""1037"" Hebrew
-    StrCmp $0 ""1081"" Hindi
-    StrCmp $0 ""1038"" Hungarian
-    StrCmp $0 ""1039"" Icelandic
-    StrCmp $0 ""1057"" Indonesian
-    StrCmp $0 ""1040"" Italian
-    StrCmp $0 ""1041"" Japanese
-    StrCmp $0 ""1099"" Kannada
-    StrCmp $0 ""1042"" Korean
-    StrCmp $0 ""1062"" Latvian
-    StrCmp $0 ""1063"" Lithuanian
-    StrCmp $0 ""1071"" Macedonian
-    StrCmp $0 ""1100"" Malayalam
-    StrCmp $0 ""2110"" Malay
-    StrCmp $0 ""1082"" Maltese
-    StrCmp $0 ""1044"" Norwegian
-    StrCmp $0 ""1045"" Polish
-    StrCmp $0 ""1046"" Portuguese
-    StrCmp $0 ""1048"" Romanian
-    StrCmp $0 ""1049"" Russian
-    StrCmp $0 ""1051"" Slovak
-    StrCmp $0 ""1060"" Slovenian
-    StrCmp $0 ""11274"" Spanish
-    StrCmp $0 ""2074"" Serbian
-    StrCmp $0 ""1089"" Swahili
-    StrCmp $0 ""2077"" Swedish
-    StrCmp $0 ""1097"" Tamil
-    StrCmp $0 ""1098"" Telugu
-    StrCmp $0 ""1054"" Thai
-    StrCmp $0 ""1055"" Turkish
-    StrCmp $0 ""1058"" Ukrainian
-    StrCmp $0 ""1066"" Vietnamese
-
-    Goto lang_end
-
-    Afrikaans: !insertmacro SelectSection ${SecLang_afr}
-            Goto lang_end
-    Albanian: !insertmacro SelectSection ${SecLang_sqi}
-            Goto lang_end
-    Arabic: !insertmacro SelectSection ${SecLang_ara}
-            Goto lang_end
-    Azerbaijani: !insertmacro SelectSection ${SecLang_aze}
-            Goto lang_end
-    Basque: !insertmacro SelectSection ${SecLang_eus}
-            Goto lang_end
-    Belarusian: !insertmacro SelectSection ${SecLang_bel}
-            Goto lang_end
-    Bengali: !insertmacro SelectSection ${SecLang_ben}
-            Goto lang_end
-    Bulgarian: !insertmacro SelectSection ${SecLang_bul}
-            Goto lang_end
-    Catalan: !insertmacro SelectSection ${SecLang_cat}
-            Goto lang_end
-    Cherokee: !insertmacro SelectSection ${SecLang_chr}
-            Goto lang_end
-    Chinese_tra: !insertmacro SelectSection ${SecLang_chi_tra}
-            Goto lang_end
-    Chinese_sim: !insertmacro SelectSection ${SecLang_chi_sim}
-            Goto lang_end
-    Croatian: !insertmacro SelectSection ${SecLang_hrv}
-            Goto lang_end
-    Czech: !insertmacro SelectSection ${SecLang_ces}
-            Goto lang_end
-    Danish: !insertmacro SelectSection ${SecLang_dan}
-            !insertmacro SelectSection ${SecLang_dan_frak}
-            Goto lang_end
-    Dutch: !insertmacro SelectSection ${SecLang_nld}
-            Goto lang_end
-    Estonian: !insertmacro SelectSection ${SecLang_hrv}
-            Goto lang_end
-    German: !insertmacro SelectSection ${SecLang_deu}
-            !insertmacro SelectSection ${SecLang_deu_frak}
-            Goto lang_end
-    Greek: !insertmacro SelectSection ${SecLang_ell}
-            !insertmacro SelectSection ${SecLang_grc}
-            Goto lang_end
-    Finnish: !insertmacro SelectSection ${SecLang_fin}
-            !insertmacro SelectSection ${SecLang_frm}
-            Goto lang_end
-    French: !insertmacro SelectSection ${SecLang_fra}
-            Goto lang_end
-    Hebrew: !insertmacro SelectSection ${SecLang_heb}
-            !insertmacro SelectSection ${SecLang_heb_com}
-            Goto lang_end
-    Hungarian: !insertmacro SelectSection ${SecLang_hin}
-            Goto lang_end
-    Hindi: !insertmacro SelectSection ${SecLang_hun}
-            Goto lang_end
-    Icelandic: !insertmacro SelectSection ${SecLang_isl}
-            Goto lang_end
-    Indonesian: !insertmacro SelectSection ${SecLang_ind}
-            Goto lang_end
-    Italian: !insertmacro SelectSection ${SecLang_ita}
-            !insertmacro SelectSection ${SecLang_ita_old}
-            Goto lang_end
-    Japanese: !insertmacro SelectSection ${SecLang_jpn}
-            Goto lang_end
-    Kannada: !insertmacro SelectSection ${SecLang_kan}
-            Goto lang_end
-    Korean: !insertmacro SelectSection ${SecLang_kor}
-            Goto lang_end
-    Latvian: !insertmacro SelectSection ${SecLang_lav}
-            Goto lang_end
-    Lithuanian: !insertmacro SelectSection ${SecLang_lit}
-            Goto lang_end
-    Macedonian: !insertmacro SelectSection ${SecLang_mkd}
-            Goto lang_end
-    Malayalam: !insertmacro SelectSection ${SecLang_msa}
-            Goto lang_end
-    Malay: !insertmacro SelectSection ${SecLang_mal}
-            Goto lang_end
-    Maltese: !insertmacro SelectSection ${SecLang_mlt}
-            Goto lang_end
-    Norwegian: !insertmacro SelectSection ${SecLang_nor}
-            Goto lang_end
-    Polish: !insertmacro SelectSection ${SecLang_pol}
-            Goto lang_end
-    Portuguese: !insertmacro SelectSection ${SecLang_por}
-            Goto lang_end
-    Romanian: !insertmacro SelectSection ${SecLang_ron}
-            Goto lang_end
-    Russian: !insertmacro SelectSection ${SecLang_rus}
-            Goto lang_end
-    Slovak: !insertmacro SelectSection ${SecLang_slk}
-            !insertmacro SelectSection ${SecLang_slk_frak}
-            Goto lang_end
-    Slovenian: !insertmacro SelectSection ${SecLang_slv}
-            Goto lang_end
-    Spanish: !insertmacro SelectSection ${SecLang_spa}
-            !insertmacro SelectSection ${SecLang_spa_old}
-            Goto lang_end
-    Serbian: !insertmacro SelectSection ${SecLang_srp}
-            Goto lang_end
-    Swahili: !insertmacro SelectSection ${SecLang_swa}
-            Goto lang_end
-    Swedish: !insertmacro SelectSection ${SecLang_swe}
-            !insertmacro SelectSection ${SecLang_swe_frak}
-            Goto lang_end
-    Tamil: !insertmacro SelectSection ${SecLang_tam}
-            Goto lang_end
-    Telugu: !insertmacro SelectSection ${SecLang_tel}
-            Goto lang_end
-    Thai: !insertmacro SelectSection ${SecLang_tha}
-            Goto lang_end
-    Turkish: !insertmacro SelectSection ${SecLang_tur}
-            Goto lang_end
-    Ukrainian: !insertmacro SelectSection ${SecLang_ukr}
-            Goto lang_end
-    Vietnamese: !insertmacro SelectSection ${SecLang_vie}
-
-    lang_end:
-FunctionEnd
-
-Function un.onInit
-   !insertmacro MULTIUSER_UNINIT
-   ;!insertmacro SELECT_UNSECTION Main ${UNSEC0000}
-   ;!insertmacro MUI_UNGETLANGUAGE
-FunctionEnd
-
-Function .onInstFailed
-  MessageBox MB_OK ""Installation failed.""
-FunctionEnd
-
-Function ShowReadme
-  Exec ""explorer.exe $INSTDIR\doc\README""
-  ;BringToFront
-FunctionEnd
-
-; Prevent running multiple instances of the installer
-Function PreventMultipleInstances
-  Push $R0
-  System::Call 'kernel32::CreateMutexA(i 0, i 0, t ${PRODUCT_NAME}) ?e'
-  Pop $R0
-  StrCmp $R0 0 +3
-    MessageBox MB_OK|MB_ICONEXCLAMATION ""The installer is already running."" /SD IDOK
-    Abort
-  Pop $R0
-FunctionEnd
","{'added': [], 'deleted': [(1, '; (C) Copyright 2010, Sergey Bronnikov'), (2, '; (C) Copyright 2010-2012, Zdenko Podobný'), (3, ';'), (4, '; Licensed under the Apache License, Version 2.0 (the ""License"");'), (5, '; you may not use this file except in compliance with the License.'), (6, '; You may obtain a copy of the License at'), (7, '; http://www.apache.org/licenses/LICENSE-2.0'), (8, '; Unless required by applicable law or agreed to in writing, software'), (9, '; distributed under the License is distributed on an ""AS IS"" BASIS,'), (10, '; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (11, '; See the License for the specific language governing permissions and'), (12, '; limitations under the License.'), (13, ''), (14, 'SetCompressor /FINAL /SOLID lzma'), (15, ';SetCompressor lzma'), (16, 'SetCompressorDictSize 32'), (17, ''), (18, '!define VERSION 3.02.02'), (19, '!define PRODUCT_NAME ""Tesseract-OCR""'), (20, '!define PRODUCT_VERSION ""${VERSION}""'), (21, '!define PRODUCT_PUBLISHER ""Tesseract-OCR community""'), (22, '!define PRODUCT_WEB_SITE ""http://code.google.com/p/tesseract-ocr""'), (23, '!define FILE_URL ""http://tesseract-ocr.googlecode.com/files/""'), (24, ''), (25, '# General Definitions'), (26, 'Name ""${PRODUCT_NAME} ${VERSION} for Windows""'), (27, 'Caption ""Tesseract-OCR ${VERSION}""'), (28, 'BrandingText /TRIMCENTER ""(c) 2010-2012 Tesseract-OCR ""'), (29, '!define REGKEY ""SOFTWARE\\${PRODUCT_NAME}""'), (30, '; HKLM (all users) vs HKCU (current user) defines'), (31, '!define env_hklm \'HKLM ""SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment""\''), (32, '!define env_hkcu \'HKCU ""Environment""\''), (33, ''), (34, '# MultiUser Symbol Definitions'), (35, '!define MULTIUSER_EXECUTIONLEVEL Admin'), (36, '!define MULTIUSER_MUI'), (37, '!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_KEY ""${REGKEY}""'), (38, '!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_VALUENAME MultiUserInstallMode'), (39, '!define MULTIUSER_INSTALLMODE_COMMANDLINE'), (40, '!define MULTIUSER_INSTALLMODE_INSTDIR ${PRODUCT_NAME}'), (41, '!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY ""${REGKEY}""'), (42, '!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUE ""Path""'), (43, ''), (44, '# MUI Symbol Definitions'), (45, '!define MUI_ABORTWARNING'), (46, '!define MUI_COMPONENTSPAGE_SMALLDESC'), (47, '!define MUI_HEADERIMAGE'), (48, '!define MUI_HEADERIMAGE_BITMAP_NOSTRETCH'), (49, '!define MUI_ICON ""${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-install-blue-full.ico""'), (50, '!define MUI_FINISHPAGE_LINK ""http://code.google.com/p/tesseract-ocr/""'), (51, '!define MUI_FINISHPAGE_LINK_LOCATION ""http://code.google.com/p/tesseract-ocr/""'), (52, '!define MUI_FINISHPAGE_NOAUTOCLOSE'), (53, '!define MUI_FINISHPAGE_SHOWREADME ""notepad $INSTDIR\\doc\\README""'), (54, '!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme'), (55, '!define MUI_LICENSEPAGE_CHECKBOX'), (56, '!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM'), (57, '!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}'), (58, '!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup'), (59, '!define MUI_STARTMENUPAGE_DEFAULTFOLDER ${PRODUCT_NAME}'), (60, '!define MUI_UNICON ""${NSISDIR}\\Contrib\\Graphics\\Icons\\orange-uninstall.ico""'), (61, '!define MUI_UNFINISHPAGE_NOAUTOCLOSE'), (62, '!define MUI_WELCOMEPAGE_TITLE_3LINES'), (63, ''), (64, '# Included files'), (65, '!include MultiUser.nsh'), (66, '!include Sections.nsh'), (67, '!include MUI2.nsh'), (68, '!include EnvVarUpdate.nsh'), (69, '!include LogicLib.nsh'), (70, '!include winmessages.nsh # include for some of the windows messages defines'), (71, ''), (72, '# Variables'), (73, 'Var StartMenuGroup'), (74, 'Var PathKey'), (75, '; Define user variables'), (76, 'Var OLD_KEY'), (77, ''), (78, '# Installer pages'), (79, '!insertmacro MUI_PAGE_WELCOME'), (80, '!insertmacro MUI_PAGE_LICENSE ""..\\COPYING""'), (81, '!insertmacro MULTIUSER_PAGE_INSTALLMODE'), (82, '!ifdef VERSION'), (83, '  Page custom PageReinstall PageLeaveReinstall'), (84, '!endif'), (85, '!insertmacro MUI_PAGE_DIRECTORY'), (86, '!insertmacro MUI_PAGE_COMPONENTS'), (87, '!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup'), (88, '!insertmacro MUI_PAGE_INSTFILES'), (89, '!insertmacro MUI_PAGE_FINISH'), (90, '!insertmacro MUI_UNPAGE_CONFIRM'), (91, '!insertmacro MUI_UNPAGE_INSTFILES'), (92, ''), (93, '# Languages'), (94, '!insertmacro MUI_LANGUAGE ""English""'), (95, '!insertmacro MUI_LANGUAGE ""Italian""'), (96, '!insertmacro MUI_LANGUAGE ""Russian""'), (97, '!insertmacro MUI_LANGUAGE ""Slovak""'), (98, '!insertmacro MUI_LANGUAGE ""Spanish""'), (99, '!insertmacro MUI_LANGUAGE ""SpanishInternational""'), (100, ''), (101, '# Installer attributes'), (102, 'ShowInstDetails show'), (103, 'InstProgressFlags smooth colored'), (104, 'XPStyle on'), (105, 'SpaceTexts'), (106, 'CRCCheck on'), (107, 'InstProgressFlags smooth colored'), (108, 'CRCCheck On  # Do a CRC check before installing'), (109, 'InstallDir ""$PROGRAMFILES\\Tesseract-OCR""'), (110, '# Name of program and file'), (111, '!ifdef VERSION'), (112, 'OutFile tesseract-ocr-setup-${VERSION}.exe'), (113, '!else'), (114, 'OutFile tesseract-ocr-setup.exe'), (115, '!endif'), (116, ''), (117, '!macro AddToPath'), (118, '  # TODO(zdenop): Check if $INSTDIR is in path. If yes, that do not append it'), (119, '  # append bin path to user PATH environment variable'), (120, '  StrCpy $PathKey ""HKLM""'), (121, '  StrCmp $MultiUser.InstallMode ""AllUsers"" +2'), (122, '    StrCpy $PathKey ""HKCU""'), (123, '  DetailPrint ""Setting PATH to $INSTDIR at $PathKey""'), (124, '  ${EnvVarUpdate} $0 ""PATH"" ""A"" ""$PathKey"" ""$INSTDIR""'), (125, '  ; make sure windows knows about the change'), (126, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (127, '!macroend'), (128, ''), (129, '!macro RemoveTessdataPrefix'), (130, ""  ReadRegStr $R2 ${env_hklm} 'TESSDATA_PREFIX'""), (131, ""  ReadRegStr $R3 ${env_hkcu} 'TESSDATA_PREFIX'""), (132, '  StrCmp $R2 """" Next1 0'), (133, '    DetailPrint ""Removing $R2 from HKLM Environment...""'), (134, '    DeleteRegValue ${env_hklm} TESSDATA_PREFIX  # This only empty variable, but do not remove it!'), (135, '    ${EnvVarUpdate} $0 ""TESSDATA_PREFIX""  ""R"" ""HKLM"" $R1'), (136, '  Next1:'), (137, '    StrCmp $R3 """" Next2 0'), (138, '      DetailPrint ""Removing $R3 from HKCU Environment...""'), (139, '      DeleteRegValue ${env_hkcu} ""TESSDATA_PREFIX""'), (140, '  Next2:'), (141, '    # make sure windows knows about the change'), (142, '    SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (143, '!macroend'), (144, ''), (145, '!macro SetTESSDATA'), (146, '  !insertmacro RemoveTessdataPrefix'), (147, '  StrCpy $PathKey ""HKLM""'), (148, '  StrCmp $MultiUser.InstallMode ""AllUsers"" +2'), (149, '    StrCpy $PathKey ""HKCU""'), (150, '  DetailPrint ""Setting TESSDATA_PREFIX at $PathKey""'), (151, '  ${EnvVarUpdate} $0 ""TESSDATA_PREFIX"" ""A"" ""$PathKey"" ""$INSTDIR\\""'), (152, '  # make sure windows knows about the change'), (153, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (154, '!macroend'), (155, ''), (156, '!macro Download_Lang_Data Lang'), (157, '  IfFileExists $TEMP/${Lang} dlok'), (158, '  ;StrCpy $1 ${Lang}'), (159, '  ;StrCpy $2 ""$INSTDIR\\tessdata\\$1""'), (160, '  ;inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/$1"" $2 /end'), (161, '  inetc::get /caption ""Downloading ${Lang}"" /popup """" ""${FILE_URL}/${Lang}"" $TEMP/${Lang} /end'), (162, '    Pop $0 # return value = exit code, ""OK"" if OK'), (163, '    StrCmp $0 ""OK"" dlok'), (164, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of ${Lang}: $0. Click OK to continue."" /SD IDOK'), (165, '    Goto error'), (166, '  dlok:'), (167, '    DetailPrint ""Extracting ${Lang}""'), (168, '    untgz::extract ""-j"" ""-d"" ""$INSTDIR\\tessdata\\"" ""$TEMP/${Lang}""'), (169, '    # tarbal has to be created with option --old-archive otherwise there will be error'), (170, '    # untgz::extract failed because of checksum'), (171, '  error:'), (172, '    Delete ""$TEMP\\${Lang}""'), (173, '!macroend'), (174, ''), (175, '!macro Download_Leptonica DataUrl'), (176, '  IfFileExists $TEMP/leptonica.zip dlok'), (177, '  inetc::get /caption ""Downloading $1"" /popup """" ${DataUrl} $TEMP/leptonica.zip /end'), (178, '    Pop $R0 # return value = exit code, ""OK"" if OK'), (179, '    StrCmp $R0 ""OK"" dlok'), (180, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK'), (181, '    Goto error'), (182, '  dlok:'), (183, '    nsisunz::UnzipToLog ""$TEMP/leptonica.zip"" ""$INSTDIR""'), (184, '    Pop $R0'), (185, '    StrCmp $R0 ""success"" +2'), (186, '        MessageBox MB_OK ""Decompression of leptonica failed: $R0""'), (187, '        Goto error'), (188, '  error:'), (189, '    Delete ""$TEMP\\leptonica.zip""'), (190, '!macroend'), (191, ''), (192, '!macro Download_Lang_Data_gz Lang'), (193, '  ;IfFileExists $TEMP/${Lang} dlok'), (194, '  StrCpy $1 ${Lang}'), (195, '  StrCpy $2 ""$INSTDIR\\tessdata\\$1""'), (196, '  inetc::get /caption ""Downloading $1"" /popup """" ""http://tesseract-ocr.googlecode.com/files/$1"" $2 /end'), (197, '    Pop $0 # return value = exit code, ""OK"" if OK'), (198, '    StrCmp $0 ""OK"" dlok'), (199, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $0. Click OK to continue."" /SD IDOK'), (200, '    Goto error'), (201, '  dlok:'), (202, '    ExecWait  \'""$INSTDIR\\gzip.exe"" -d ""$2""\''), (203, '  error:'), (204, '!macroend'), (205, ''), (206, '!macro Download_Data2 Filename Komp'), (207, '  IfFileExists $TEMP/${Filename} dlok'), (208, '  inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/${Filename}"" $TEMP/${Filename} /end'), (209, '    Pop $R0 # return value = exit code, ""OK"" if OK'), (210, '    StrCmp $R0 ""OK"" dlok'), (211, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK'), (212, '    Goto error'), (213, '  dlok:'), (214, '    ${If} ${Komp} == ""tgz""'), (215, '        DetailPrint ""Extracting ${Filename}""'), (216, '        untgz::extract ""-d"" ""$INSTDIR\\.."" ""$TEMP\\${Filename}""'), (217, '        Goto install'), (218, '    ${EndIf}'), (219, '    ${If} ${Komp} == ""zip""'), (220, '        DetailPrint ""Extracting ${Filename}""'), (221, '        nsisunz::UnzipToLog ""$TEMP\\${Filename}"" ""$INSTDIR\\""'), (222, '        Goto install'), (223, '    ${EndIf}'), (224, '     MessageBox MB_OK|MB_ICONEXCLAMATION ""Unsupported compression!""'), (225, '  install:'), (226, '        Pop $R0'), (227, '        StrCmp $R0 ""success"" +3'), (228, '            MessageBox MB_OK ""Decompression of ${Filename} failed: $R0""'), (229, '            Goto error'), (230, '    Delete ""$TEMP\\${Filename}""'), (231, '  error:'), (232, '!macroend'), (233, ''), (234, '!macro Download_Data Filename Komp'), (235, '  IfFileExists $TEMP/${Filename} dlok'), (236, '  inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/${Filename}"" $TEMP/${Filename} /end'), (237, '    Pop $R0 # return value = exit code, ""OK"" if OK'), (238, '    StrCmp $R0 ""OK"" dlok'), (239, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK'), (240, '    Goto end'), (241, '  dlok:'), (242, '    ${If} ${Komp} == ""tgz""'), (243, '        untgz::extract ""-d"" ""$INSTDIR"" ""$TEMP\\${Filename}""'), (244, '        Goto install'), (245, '    ${EndIf}'), (246, '    ${If} ${Komp} == ""zip""'), (247, '        nsisunz::UnzipToLog ""$TEMP\\${Filename}"" ""$INSTDIR""'), (248, '        Goto install'), (249, '    ${EndIf}'), (250, '     MessageBox MB_OK|MB_ICONEXCLAMATION ""Unsupported compression!""'), (251, '  install:'), (252, '        Pop $R0'), (253, '        StrCmp $R0 ""success"" +3'), (254, '            MessageBox MB_OK ""Decompression of ${Filename} failed: $R0""'), (255, '            Goto end'), (256, '    Delete ""$TEMP\\${Filename}""'), (257, '    ${If} ${Komp} == ""zip""'), (258, '        Goto end'), (259, '    ${EndIf}'), (260, '    CopyFiles ""$TEMP\\Tesseract-OCR\\*"" ""$INSTDIR""'), (261, '    RMDir /r ""$TEMP\\Tesseract-OCR""'), (262, '  end:'), (263, '!macroend'), (264, ''), (265, 'Section -Main SEC0000'), (266, '  ; mark as read only component'), (267, '  SectionIn RO'), (268, '  SetOutPath ""$INSTDIR""'), (269, '  # files included in distribution'), (270, '  File LIB_Release\\tesseract.exe'), (271, '  File gzip.exe'), (272, '  File tar.exe'), (273, '  CreateDirectory ""$INSTDIR\\java""'), (274, '  SetOutPath ""$INSTDIR\\java""'), (275, '  File ..\\java\\ScrollView.jar'), (276, '  CreateDirectory ""$INSTDIR\\tessdata""'), (277, '  CreateDirectory ""$INSTDIR\\tessdata\\configs""'), (278, '  SetOutPath ""$INSTDIR\\tessdata\\configs""'), (279, '  File ..\\tessdata\\configs\\ambigs.train'), (280, '  File ..\\tessdata\\configs\\api_config'), (281, '  File ..\\tessdata\\configs\\bigram'), (282, '  File ..\\tessdata\\configs\\box.train'), (283, '  File ..\\tessdata\\configs\\box.train.stderr'), (284, '  File ..\\tessdata\\configs\\digits'), (285, '  File ..\\tessdata\\configs\\hocr'), (286, '  File ..\\tessdata\\configs\\inter'), (287, '  File ..\\tessdata\\configs\\kannada'), (288, '  File ..\\tessdata\\configs\\linebox'), (289, '  File ..\\tessdata\\configs\\logfile'), (290, '  File ..\\tessdata\\configs\\makebox'), (291, '  File ..\\tessdata\\configs\\quiet'), (292, '  File ..\\tessdata\\configs\\rebox'), (293, '  File ..\\tessdata\\configs\\strokewidth'), (294, '  File ..\\tessdata\\configs\\unlv'), (295, '  CreateDirectory ""$INSTDIR\\tessdata\\tessconfigs""'), (296, '  SetOutPath ""$INSTDIR\\tessdata\\tessconfigs""'), (297, '  File ..\\tessdata\\tessconfigs\\batch'), (298, '  File ..\\tessdata\\tessconfigs\\batch.nochop'), (299, '  File ..\\tessdata\\tessconfigs\\matdemo'), (300, '  File ..\\tessdata\\tessconfigs\\msdemo'), (301, '  File ..\\tessdata\\tessconfigs\\nobatch'), (302, '  File ..\\tessdata\\tessconfigs\\segdemo'), (303, '  CreateDirectory ""$INSTDIR\\doc""'), (304, '  SetOutPath ""$INSTDIR\\doc""'), (305, '  File ..\\AUTHORS'), (306, '  File ..\\COPYING'), (307, '  File ..\\eurotext.tif'), (308, '  File ..\\phototest.tif'), (309, '  File ..\\README'), (310, '  File ..\\ReleaseNotes'), (311, 'SectionEnd'), (312, ''), (313, 'Section ""Traning Tools"" SecTr'), (314, '  SectionIn 1'), (315, '  SetOutPath ""$INSTDIR""'), (316, '  File LIB_Release\\cntraining.exe'), (317, '  File LIB_Release\\combine_tessdata.exe'), (318, '  File LIB_Release\\mftraining.exe'), (319, '  File LIB_Release\\unicharset_extractor.exe'), (320, '  File LIB_Release\\wordlist2dawg.exe'), (321, '  File LIB_Release\\classifier_tester.exe'), (322, '  File LIB_Release\\dawg2wordlist.exe'), (323, '  File LIB_Release\\ambiguous_words.exe'), (324, '  File LIB_Release\\shapeclustering.exe'), (325, 'SectionEnd'), (326, ''), (327, 'Section -post SEC0001'), (328, '  ;Store installation folder - we use allways HKLM!'), (329, '  WriteRegStr HKLM ""${REGKEY}"" ""Path"" ""$INSTDIR""'), (330, '  WriteRegStr HKLM ""${REGKEY}"" ""Mode"" $MultiUser.InstallMode'), (331, '  WriteRegStr HKLM ""${REGKEY}"" ""InstallDir"" ""$INSTDIR""'), (332, '  WriteRegStr HKLM ""${REGKEY}"" ""CurrentVersion"" ""${VERSION}""'), (333, '  WriteRegStr HKLM ""${REGKEY}"" ""Uninstaller"" ""$INSTDIR\\uninstall.exe""'), (334, '  ;WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Run"" ""Tesseract-OCR"" ""$INSTDIR\\tesseract.exe""'), (335, '  ; Register to Add/Remove program in control panel'), (336, '  WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""DisplayName"" ""${PRODUCT_NAME} - open source OCR engine""'), (337, '  WriteRegStr HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" DisplayVersion ""${VERSION}""'), (338, '  WriteRegStr HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" Publisher ""${PRODUCT_PUBLISHER}""'), (339, '  WriteRegStr HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" URLInfoAbout ""${PRODUCT_WEB_SITE}""'), (340, '  WriteRegStr HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""DisplayIcon"" ""$INSTDIR\\uninstall.exe""'), (341, '  WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""UninstallString"" ""$INSTDIR\\uninstall.exe""'), (342, '  WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""QuietUninstallString"" \'""$INSTDIR\\uninstall.exe"" /S\''), (343, '  WriteRegDWORD HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" NoModify 1'), (344, '  WriteRegDWORD HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" NoRepair 1'), (345, '  ;Create uninstaller'), (346, '  WriteUninstaller ""$INSTDIR\\Uninstall.exe""'), (347, '  ;ExecShell ""open"" ""http://code.google.com/p/tesseract-ocr/""'), (348, '  ;ExecShell ""open"" \'""$INSTDIR""\''), (349, '  ;BringToFront'), (350, 'SectionEnd'), (351, ''), (352, 'Section ""Shortcuts creation"" SecCS'), (353, '  SetOutPath $INSTDIR'), (354, '  CreateDirectory ""$SMPROGRAMS\\${PRODUCT_NAME}""'), (355, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Console.lnk"" $WINDIR\\system32\\CMD.EXE'), (356, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Homepage.lnk"" ""${PRODUCT_WEB_SITE}""'), (357, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\ReadMe.lnk"" ""${PRODUCT_WEB_SITE}/wiki/ReadMe""'), (358, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\FAQ.lnk"" ""${PRODUCT_WEB_SITE}/wiki/FAQ""'), (359, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Uninstall.lnk"" ""$INSTDIR\\uninstall.exe"" """" ""$INSTDIR\\uninstall.exe"" 0'), (360, '  ;CreateShortCut ""$DESKTOP\\Tesseract-OCR.lnk"" ""$INSTDIR\\tesseract.exe"" """" ""$INSTDIR\\tesseract.exe"" 0'), (361, '  ;CreateShortCut ""$QUICKLAUNCH\\.lnk"" ""$INSTDIR\\tesseract.exe"" """" ""$INSTDIR\\tesseract.exe"" 0'), (362, 'SectionEnd'), (363, ''), (364, 'SectionGroup ""Registry setttings"" SecRS'), (365, '    Section ""Add to Path"" SecRS_path'), (366, '        !insertmacro AddToPath'), (367, '    SectionEnd'), (368, '    Section ""Set TESSDATA_PREFIX variable"" SecRS_tessdata'), (369, '        !insertmacro SetTESSDATA'), (370, '    SectionEnd'), (371, 'SectionGroupEnd'), (372, ''), (373, 'SectionGroup ""Tesseract development files"" SecGrp_dev'), (374, '    Section /o ""Download and install tesseract libraries including header files"" SecLang_tlib'), (375, '    !insertmacro Download_Data2 tesseract-ocr-3.02.02-win32-lib-include-dirs.zip zip'), (376, '    CopyFiles $INSTDIR\\lib\\libtesseract*.dll $INSTDIR\\  ; $INSTDIR is in the path!'), (377, '    Delete $INSTDIR\\lib\\libtesseract*.dll'), (378, '    SectionEnd'), (379, '    Section /o ""Download and install leptonica 1.68 libraries including header files"" SecLang_llib'), (380, '    !insertmacro Download_Leptonica http://leptonica.org/source/leptonica-1.68-win32-lib-include-dirs.zip'), (381, '    CopyFiles $INSTDIR\\lib\\liblept*.dll $INSTDIR\\  ; move to path'), (382, '    Delete $INSTDIR\\lib\\liblept*.dll'), (383, '    SectionEnd'), (384, '    Section /o ""Download and install VC++ 2008 tesseract API example solution"" SecLang_example'), (385, '    !insertmacro Download_Data2 tesseract-ocr-API-Example-vs2008.zip zip'), (386, '    SectionEnd'), (387, '    Section /o ""Download and install tesseract source code"" SecLang_source'), (388, '    !insertmacro Download_Data tesseract-ocr-3.02.02.tar.gz tgz'), (389, '    SectionEnd'), (390, '    Section /o ""Download and install VS C++ 2008 solution for tesseract"" SecLang_vs2008'), (391, '    !insertmacro Download_Data tesseract-ocr-3.02-vs2008.zip zip'), (392, '    SectionEnd'), (393, '    Section /o ""Download and install doxygen documentation for tesseract"" SecLang_doxygen'), (394, '    !insertmacro Download_Data tesseract-ocr-3.02.02-doc-html.tar.gz tgz'), (395, '    CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\DoxygenDoc.lnk"" ""$INSTDIR\\tesseract-ocr\\doc\\html\\index.html""'), (396, '    SectionEnd'), (397, 'SectionGroupEnd'), (398, ''), (399, '; Download language files'), (400, 'SectionGroup ""Language data"" SecGrp_LD'), (401, '    Section ""English language data"" SecLang_eng'), (402, '    SectionIn RO'), (403, '      SetOutPath ""$INSTDIR\\tessdata""'), (404, '      File ..\\tessdata\\eng.*'), (405, '    SectionEnd'), (406, ''), (407, '    Section ""Orientation and script detection data"" SecLang_osd'), (408, '    SectionIn 1'), (409, '      SetOutPath ""$INSTDIR\\tessdata""'), (410, '     File ..\\tessdata\\osd.*'), (411, '    SectionEnd'), (412, ''), (413, '    Section /o ""Download and install Math / equation detection module"" SecLang_equ'), (414, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.equ.tar.gz'), (415, '    SectionEnd'), (416, ''), (417, '    Section /o ""Download and install Afrikaans language data"" SecLang_afr'), (418, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.afr.tar.gz'), (419, '    SectionEnd'), (420, ''), (421, '    Section /o ""Download and install Albanian language data"" SecLang_sqi'), (422, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.sqi.tar.gz'), (423, '    SectionEnd'), (424, ''), (425, '    Section /o ""Download and install Arabic language data"" SecLang_ara'), (426, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ara.tar.gz'), (427, '    SectionEnd'), (428, ''), (429, '    Section /o ""Download and install Azerbaijani language data"" SecLang_aze'), (430, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.aze.tar.gz'), (431, '    SectionEnd'), (432, ''), (433, '    Section /o ""Download and install Basque language data"" SecLang_eus'), (434, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.eus.tar.gz'), (435, '    SectionEnd'), (436, ''), (437, '    Section /o ""Download and install Belarusian language data"" SecLang_bel'), (438, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.bel.tar.gz'), (439, '    SectionEnd'), (440, ''), (441, '    Section /o ""Download and install Bengali language data"" SecLang_ben'), (442, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ben.tar.gz'), (443, '    SectionEnd'), (444, ''), (445, '    Section /o ""Download and install Bulgarian language data"" SecLang_bul'), (446, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.bul.tar.gz'), (447, '    SectionEnd'), (448, ''), (449, '    Section /o ""Download and install Catalan language data"" SecLang_cat'), (450, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.cat.tar.gz'), (451, '    SectionEnd'), (452, ''), (453, '    Section /o ""Download and install Cherokee language data"" SecLang_chr'), (454, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chr.tar.gz'), (455, '    SectionEnd'), (456, ''), (457, '    Section /o ""Download and install Chinese (Traditional) language data"" SecLang_chi_tra'), (458, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chi_tra.tar.gz'), (459, '    SectionEnd'), (460, ''), (461, '    Section /o ""Download and install Chinese (Simplified) language data"" SecLang_chi_sim'), (462, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chi_sim.tar.gz'), (463, '    SectionEnd'), (464, ''), (465, '    Section /o ""Download and install Croatian language data"" SecLang_hrv'), (466, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hrv.tar.gz'), (467, '    SectionEnd'), (468, ''), (469, '    Section /o ""Download and install Czech language data"" SecLang_ces'), (470, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ces.tar.gz'), (471, '    SectionEnd'), (472, ''), (473, '    Section /o ""Download and install Danish language data"" SecLang_dan'), (474, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.dan.tar.gz'), (475, '    SectionEnd'), (476, ''), (477, '    Section /o ""Download and install Danish (Fraktur) language data"" SecLang_dan_frak'), (478, '    !insertmacro Download_Lang_Data_gz dan-frak.traineddata.gz'), (479, '    SectionEnd'), (480, ''), (481, '    Section /o ""Download and install Dutch language data"" SecLang_nld'), (482, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.nld.tar.gz'), (483, '    SectionEnd'), (484, ''), (485, '    Section /o ""Download and install English - Middle (1100-1500) language data"" SecLang_enm'), (486, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.enm.tar.gz'), (487, '    SectionEnd'), (488, ''), (489, '    Section /o ""Download and install Esperanto language data"" SecLang_epo'), (490, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.epo.tar.gz'), (491, '    SectionEnd'), (492, ''), (493, '    Section /o ""Download and install Estonian language data"" SecLang_est'), (494, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.est.tar.gz'), (495, '    SectionEnd'), (496, ''), (497, '    Section /o ""Download and install German language data"" SecLang_deu'), (498, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.deu.tar.gz'), (499, '    SectionEnd'), (500, ''), (501, '    Section /o ""Download and install German (Fraktur) language data"" SecLang_deu_frak'), (502, '    !insertmacro Download_Lang_Data_gz deu-frak.traineddata.gz'), (503, '    SectionEnd'), (504, ''), (505, '    Section /o ""Download and install Greek language data"" SecLang_ell'), (506, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ell.tar.gz'), (507, '    SectionEnd'), (508, ''), (509, '    Section /o ""Download and install Greek - Ancient language data"" SecLang_grc'), (510, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.grc.tar.gz'), (511, '    SectionEnd'), (512, ''), (513, '    Section /o ""Download and install Finnish language data"" SecLang_fin'), (514, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.fin.tar.gz'), (515, '    SectionEnd'), (516, ''), (517, '    Section /o ""Download and install Frankish language data"" SecLang_frk'), (518, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.frk.tar.gz'), (519, '    SectionEnd'), (520, ''), (521, '    Section /o ""Download and install French language data"" SecLang_fra'), (522, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.fra.tar.gz'), (523, '    SectionEnd'), (524, ''), (525, '    Section /o ""Download and install French - Middle(ca. 1400-1600) language data"" SecLang_frm'), (526, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.frm.tar.gz'), (527, '    SectionEnd'), (528, ''), (529, '    Section /o ""Download and install Hebrew language data"" SecLang_heb'), (530, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.heb.tar.gz'), (531, '    SectionEnd'), (532, ''), (533, '    Section /o ""Download and install Hebrew (community traning) language data"" SecLang_heb_com'), (534, '    !insertmacro Download_Lang_Data tesseract-ocr-3.01.heb-com.tar.gz'), (535, '    SectionEnd'), (536, ''), (537, '    Section /o ""Download and install Hindi language data"" SecLang_hin'), (538, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hin.tar.gz'), (539, '    SectionEnd'), (540, ''), (541, '    Section /o ""Download and install Hungarian language data"" SecLang_hun'), (542, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hun.tar.gz'), (543, '    SectionEnd'), (544, ''), (545, '    Section /o ""Download and install Icelandic language data"" SecLang_isl'), (546, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.isl.tar.gz'), (547, '    SectionEnd'), (548, ''), (549, '    Section /o ""Download and install Indonesian language data"" SecLang_ind'), (550, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ind.tar.gz'), (551, '    SectionEnd'), (552, ''), (553, '    Section /o ""Download and install Italian language data"" SecLang_ita'), (554, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ita.tar.gz'), (555, '    SectionEnd'), (556, ''), (557, '    Section /o ""Download and install Italian (Old) language data"" SecLang_ita_old'), (558, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ita_old.tar.gz'), (559, '    SectionEnd'), (560, ''), (561, '    Section /o ""Download and install Japanese language data"" SecLang_jpn'), (562, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.jpn.tar.gz'), (563, '    SectionEnd'), (564, ''), (565, '    Section /o ""Download and install Kannada language data"" SecLang_kan'), (566, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.kan.tar.gz'), (567, '    SectionEnd'), (568, ''), (569, '    Section /o ""Download and install Korean language data"" SecLang_kor'), (570, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.kor.tar.gz'), (571, '    SectionEnd'), (572, ''), (573, '    Section /o ""Download and install Latvian language data"" SecLang_lav'), (574, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.lav.tar.gz'), (575, '    SectionEnd'), (576, ''), (577, '    Section /o ""Download and install Lithuanian language data"" SecLang_lit'), (578, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.lit.tar.gz'), (579, '    SectionEnd'), (580, ''), (581, '    Section /o ""Download and install Macedonian language data"" SecLang_mkd'), (582, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mkd.tar.gz'), (583, '    SectionEnd'), (584, ''), (585, '    Section /o ""Download and install Malay language data"" SecLang_msa'), (586, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.msa.tar.gz'), (587, '    SectionEnd'), (588, ''), (589, '    Section /o ""Download and install Malayalam language data"" SecLang_mal'), (590, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mal.tar.gz'), (591, '    SectionEnd'), (592, ''), (593, '    Section /o ""Download and install Maltese language data"" SecLang_mlt'), (594, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mlt.tar.gz'), (595, '    SectionEnd'), (596, ''), (597, '    Section /o ""Download and install Norwegian language data"" SecLang_nor'), (598, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.nor.tar.gz'), (599, '    SectionEnd'), (600, ''), (601, '    Section /o ""Download and install Polish language data"" SecLang_pol'), (602, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.pol.tar.gz'), (603, '    SectionEnd'), (604, ''), (605, '    Section /o ""Download and install Portuguese language data"" SecLang_por'), (606, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.por.tar.gz'), (607, '    SectionEnd'), (608, ''), (609, '    Section /o ""Download and install Romanian language data"" SecLang_ron'), (610, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ron.tar.gz'), (611, '    SectionEnd'), (612, ''), (613, '    Section /o ""Download and install Russian language data"" SecLang_rus'), (614, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.rus.tar.gz'), (615, '    SectionEnd'), (616, ''), (617, '    Section /o ""Download and install Slovak language data"" SecLang_slk'), (618, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slk.tar.gz'), (619, '    SectionEnd'), (620, ''), (621, '    Section /o ""Download and install Slovak (Fraktur) language data"" SecLang_slk_frak'), (622, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slk_frak.tar.gz'), (623, '    SectionEnd'), (624, ''), (625, '    Section /o ""Download and install Slovenian language data"" SecLang_slv'), (626, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slv.tar.gz'), (627, '    SectionEnd'), (628, ''), (629, '    Section /o ""Download and install Spanish language data"" SecLang_spa'), (630, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.spa.tar.gz'), (631, '    SectionEnd'), (632, ''), (633, '    Section /o ""Download and install Spanish (Old) language data"" SecLang_spa_old'), (634, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.spa_old.tar.gz'), (635, '    SectionEnd'), (636, ''), (637, '    Section /o ""Download and install Serbian language data"" SecLang_srp'), (638, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.srp.tar.gz'), (639, '    SectionEnd'), (640, ''), (641, '    Section /o ""Download and install Swahili language data"" SecLang_swa'), (642, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.swa.tar.gz'), (643, '    SectionEnd'), (644, ''), (645, '    Section /o ""Download and install Swedish language data"" SecLang_swe'), (646, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.swe.tar.gz'), (647, '    SectionEnd'), (648, ''), (649, '    Section /o ""Download and install Swedish (Fraktur) language data"" SecLang_swe_frak'), (650, '    !insertmacro Download_Lang_Data_gz swe-frak.traineddata.gz'), (651, '    SectionEnd'), (652, ''), (653, '    Section /o ""Download and install Tagalog language data"" SecLang_tgl'), (654, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tgl.tar.gz'), (655, '    SectionEnd'), (656, ''), (657, '    Section /o ""Download and install Tamil language data"" SecLang_tam'), (658, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tam.tar.gz'), (659, '    SectionEnd'), (660, ''), (661, '    Section /o ""Download and install Telugu language data"" SecLang_tel'), (662, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tel.tar.gz'), (663, '    SectionEnd'), (664, ''), (665, '    Section /o ""Download and install Thai language data"" SecLang_tha'), (666, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tha.tar.gz'), (667, '    SectionEnd'), (668, ''), (669, '    Section /o ""Download and install Turkish language data"" SecLang_tur'), (670, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tur.tar.gz'), (671, '    SectionEnd'), (672, ''), (673, '    Section /o ""Download and install Ukrainian language data"" SecLang_ukr'), (674, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ukr.tar.gz'), (675, '    SectionEnd'), (676, ''), (677, '    Section /o ""Download and install Vietnamese language data"" SecLang_vie'), (678, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.vie.tar.gz'), (679, '    SectionEnd'), (680, 'SectionGroupEnd'), (681, ''), (682, ';--------------------------------'), (683, ';Descriptions'), (684, '  ; At first we need to localize installer for languages which supports well in tesseract: Eng, Spa, Ger, Ita, Dutch + Russian (it is authors native language)'), (685, '  ;Language strings'), (686, '  LangString DESC_SEC0001 ${LANG_RUSSIAN} ""Установочные файлы.""'), (687, '  ;LangString DESC_SecHelp ${LANG_RUSSIAN} ""Справочная информация.""'), (688, '  LangString DESC_SecCS    ${LANG_RUSSIAN} ""Добавить ярлыки в меню Пуск""'), (689, ''), (690, '  LangString DESC_SEC0001 ${LANG_ENGLISH} ""Installation files.""'), (691, '  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Help information.""'), (692, '  LangString DESC_SecCS    ${LANG_ENGLISH} ""Add shortcuts to Start menu.""'), (693, ''), (694, '  LangString DESC_SEC0001 ${LANG_ITALIAN} ""File di installazione.""'), (695, '  ;LangString DESC_SecHelp ${LANG_ITALIAN} ""Guida di informazioni.""'), (696, '  LangString DESC_SecCS    ${LANG_ITALIAN} ""Aggiungere collegamenti al menu Start.""'), (697, ''), (698, '  LangString DESC_SEC0001 ${LANG_SLOVAK} ""Súbory inštalácie.""'), (699, '  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Pomocné informácie.""'), (700, '  LangString DESC_SecCS    ${LANG_SLOVAK} ""Pridať odkaz do Start menu.""'), (701, ''), (702, '  LangString DESC_SEC0001 ${LANG_SPANISH} ""Los archivos de instalación.""'), (703, '  ;LangString DESC_SecHelp ${LANG_SPANISH} ""Información de ayuda.""'), (704, '  LangString DESC_SecCS    ${LANG_SPANISH} ""Ańadir accesos directos al menú Inicio.""'), (705, ''), (706, '  LangString DESC_SEC0001 ${LANG_SPANISHINTERNATIONAL} ""Los archivos de instalación.""'), (707, '  ;LangString DESC_SecHelp ${LANG_SPANISHINTERNATIONAL} ""Información de ayuda.""'), (708, '  LangString DESC_SecCS    ${LANG_SPANISHINTERNATIONAL} ""Ańadir accesos directos al menú Inicio.""'), (709, ''), (710, '  ;Assign language strings to sections'), (711, '  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN'), (712, '    !insertmacro MUI_DESCRIPTION_TEXT ${SEC0001} $(DESC_SEC0001)'), (713, '    !insertmacro MUI_DESCRIPTION_TEXT ${SecCS} $(DESC_SecCS)'), (714, '  !insertmacro MUI_FUNCTION_DESCRIPTION_END'), (715, ''), (716, ';--------------------------------'), (717, ';Uninstaller Section'), (718, ''), (719, ';Section /o -un.Main UNSEC0000'), (720, 'Section -un.Main UNSEC0000'), (721, '  DetailPrint ""Removing everything""'), (722, '  Delete ""$SMPROGRAMS\\${PRODUCT_NAME}\\*.*""'), (723, '  RMDir  ""$SMPROGRAMS\\${PRODUCT_NAME}""'), (724, '  DetailPrint ""Removing registry info""'), (725, '  DeleteRegKey HKLM ""Software\\Tesseract-OCR""'), (726, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (727, '  ${un.EnvVarUpdate} $0 ""PATH"" ""R"" HKLM $INSTDIR'), (728, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (729, '  DeleteRegValue HKLM ""Environment"" ""TESSDATA_PREFIX""'), (730, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (731, ''), (732, '  # remove the Add/Remove information'), (733, '  DeleteRegKey HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}""'), (734, '  Delete ""$INSTDIR\\Uninstall.exe""'), (735, '  DeleteRegValue HKLM ""${REGKEY}"" Path'), (736, '  DeleteRegKey /IfEmpty HKLM ""${REGKEY}\\Components""'), (737, '  DeleteRegKey /IfEmpty HKLM ""${REGKEY}""'), (738, '  RMDir /r ""$INSTDIR""'), (739, 'SectionEnd'), (740, ''), (741, 'Function PageReinstall'), (742, ''), (743, 'FunctionEnd'), (744, ''), (745, 'Function PageLeaveReinstall'), (746, ''), (747, 'FunctionEnd'), (748, ''), (749, '!macro REMOVE_REGKEY OLD_KEY'), (750, '  StrCmp ${OLD_KEY} HKLM 0 +3'), (751, '    DeleteRegKey HKLM ""${REGKEY}""'), (752, '    Goto End'), (753, '  DeleteRegKey HKCU ""${REGKEY}""'), (754, '  End:'), (755, '!macroend'), (756, ''), (757, 'Function .onInit'), (758, '  Call PreventMultipleInstances'), (759, '  ;RequestExecutionLevel admin'), (760, '  !insertmacro MULTIUSER_INIT'), (761, ''), (762, '  ; is tesseract already installed?'), (763, '  ReadRegStr $R0 HKCU ""${REGKEY}"" ""CurrentVersion""'), (764, '  StrCpy $OLD_KEY HKCU'), (765, '  StrCmp $R0 """" test1 test2'), (766, '  test1:'), (767, '    ReadRegStr $R0 HKLM ""${REGKEY}"" ""CurrentVersion""'), (768, '    StrCpy $OLD_KEY HKLM'), (769, '    StrCmp $R0 """" SkipUnInstall'), (770, '  test2:'), (771, '    MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Tesseract-ocr version $R0 is installed (in $OLD_KEY)! Do you want to uninstall it first?$\\nUninstall will delete all files in \'$INSTDIR\'!"" \\'), (772, '       /SD IDYES IDNO SkipUnInstall IDYES UnInstall'), (773, '  UnInstall:'), (774, '    StrCmp $OLD_KEY ""HKLM"" UnInst_hklm'), (775, '       DetailPrint ""CurrentUser:""'), (776, '       readRegStr $R1 HKCU ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""UninstallString""'), (777, '       Goto try_uninstall'), (778, '    UnInst_hklm:'), (779, '       DetailPrint ""UnInst_hklm""'), (780, '       readRegStr $R1 HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""UninstallString""'), (781, '    try_uninstall:'), (782, '      ClearErrors'), (783, ""      ExecWait '$R1 _?=$INSTDIR'$0""), (784, '      StrCmp $0 0 0 +3   ; Check if unstaller finished ok. If yes, than try to remove it from installer'), (785, '        !insertmacro REMOVE_REGKEY ${OLD_KEY}'), (786, '        Goto SkipUnInstall'), (787, '      messagebox mb_ok ""Uninstaller failed:\\n$0\\n\\nYou need to remove program manually.""'), (788, '  SkipUnInstall:'), (789, '  MessageBox MB_YESNO|MB_ICONQUESTION ""Do you want to install ${PRODUCT_NAME} ${VERSION}?"" \\'), (790, '    /SD IDYES IDNO no IDYES yes'), (791, '  no:'), (792, '    SetSilent silent'), (793, '    Goto done'), (794, '  yes:'), (795, '    ;InitPluginsDir'), (796, '    ;File /oname=$PLUGINSDIR\\splash.bmp ""${NSISDIR}\\Contrib\\Graphics\\Header\\nsis.bmp""'), (797, '    ;File /oname=$PLUGINSDIR\\splash.bmp ""new.bmp""'), (798, '    ;advsplash::show 1000 600 400 -1 $PLUGINSDIR\\splash'), (799, ""    ;Pop $0          ; $0 has '1' if the user closed the splash screen early,""), (800, ""                    ; '0' if everything closed normal, and '-1' if some error occured.""), (801, '    ;IfFileExists $INSTDIR\\loadmain.exe PathGood'), (802, '  done:'), (803, '    ; Make selection based on System language ID'), (804, ""    System::Call 'kernel32::GetSystemDefaultLangID() i .r0'""), (805, '    ;http://msdn.microsoft.com/en-us/library/dd318693%28v=VS.85%29.aspx'), (806, '    StrCmp $0 ""1078"" Afrikaans'), (807, '    StrCmp $0 ""1052"" Albanian'), (808, '    StrCmp $0 ""5121"" Arabic'), (809, '    StrCmp $0 ""1068"" Azerbaijani'), (810, '    StrCmp $0 ""1069"" Basque'), (811, '    StrCmp $0 ""1059"" Belarusian'), (812, '    StrCmp $0 ""1093"" Bengali'), (813, '    StrCmp $0 ""1026"" Bulgarian'), (814, '    StrCmp $0 ""1027"" Catalan'), (815, '    StrCmp $0 ""1116"" Cherokee'), (816, '    StrCmp $0 ""31748"" Chinese_tra'), (817, '    StrCmp $0 ""4"" Chinese_sim'), (818, '    StrCmp $0 ""26"" Croatian'), (819, '    StrCmp $0 ""1029"" Czech'), (820, '    StrCmp $0 ""1030"" Danish'), (821, '    StrCmp $0 ""2067"" Dutch'), (822, '    StrCmp $0 ""1061"" Estonian'), (823, '    StrCmp $0 ""3079"" German'), (824, '    StrCmp $0 ""1032"" Greek'), (825, '    StrCmp $0 ""1035"" Finnish'), (826, '    StrCmp $0 ""2060"" French'), (827, '    StrCmp $0 ""1037"" Hebrew'), (828, '    StrCmp $0 ""1081"" Hindi'), (829, '    StrCmp $0 ""1038"" Hungarian'), (830, '    StrCmp $0 ""1039"" Icelandic'), (831, '    StrCmp $0 ""1057"" Indonesian'), (832, '    StrCmp $0 ""1040"" Italian'), (833, '    StrCmp $0 ""1041"" Japanese'), (834, '    StrCmp $0 ""1099"" Kannada'), (835, '    StrCmp $0 ""1042"" Korean'), (836, '    StrCmp $0 ""1062"" Latvian'), (837, '    StrCmp $0 ""1063"" Lithuanian'), (838, '    StrCmp $0 ""1071"" Macedonian'), (839, '    StrCmp $0 ""1100"" Malayalam'), (840, '    StrCmp $0 ""2110"" Malay'), (841, '    StrCmp $0 ""1082"" Maltese'), (842, '    StrCmp $0 ""1044"" Norwegian'), (843, '    StrCmp $0 ""1045"" Polish'), (844, '    StrCmp $0 ""1046"" Portuguese'), (845, '    StrCmp $0 ""1048"" Romanian'), (846, '    StrCmp $0 ""1049"" Russian'), (847, '    StrCmp $0 ""1051"" Slovak'), (848, '    StrCmp $0 ""1060"" Slovenian'), (849, '    StrCmp $0 ""11274"" Spanish'), (850, '    StrCmp $0 ""2074"" Serbian'), (851, '    StrCmp $0 ""1089"" Swahili'), (852, '    StrCmp $0 ""2077"" Swedish'), (853, '    StrCmp $0 ""1097"" Tamil'), (854, '    StrCmp $0 ""1098"" Telugu'), (855, '    StrCmp $0 ""1054"" Thai'), (856, '    StrCmp $0 ""1055"" Turkish'), (857, '    StrCmp $0 ""1058"" Ukrainian'), (858, '    StrCmp $0 ""1066"" Vietnamese'), (859, ''), (860, '    Goto lang_end'), (861, ''), (862, '    Afrikaans: !insertmacro SelectSection ${SecLang_afr}'), (863, '            Goto lang_end'), (864, '    Albanian: !insertmacro SelectSection ${SecLang_sqi}'), (865, '            Goto lang_end'), (866, '    Arabic: !insertmacro SelectSection ${SecLang_ara}'), (867, '            Goto lang_end'), (868, '    Azerbaijani: !insertmacro SelectSection ${SecLang_aze}'), (869, '            Goto lang_end'), (870, '    Basque: !insertmacro SelectSection ${SecLang_eus}'), (871, '            Goto lang_end'), (872, '    Belarusian: !insertmacro SelectSection ${SecLang_bel}'), (873, '            Goto lang_end'), (874, '    Bengali: !insertmacro SelectSection ${SecLang_ben}'), (875, '            Goto lang_end'), (876, '    Bulgarian: !insertmacro SelectSection ${SecLang_bul}'), (877, '            Goto lang_end'), (878, '    Catalan: !insertmacro SelectSection ${SecLang_cat}'), (879, '            Goto lang_end'), (880, '    Cherokee: !insertmacro SelectSection ${SecLang_chr}'), (881, '            Goto lang_end'), (882, '    Chinese_tra: !insertmacro SelectSection ${SecLang_chi_tra}'), (883, '            Goto lang_end'), (884, '    Chinese_sim: !insertmacro SelectSection ${SecLang_chi_sim}'), (885, '            Goto lang_end'), (886, '    Croatian: !insertmacro SelectSection ${SecLang_hrv}'), (887, '            Goto lang_end'), (888, '    Czech: !insertmacro SelectSection ${SecLang_ces}'), (889, '            Goto lang_end'), (890, '    Danish: !insertmacro SelectSection ${SecLang_dan}'), (891, '            !insertmacro SelectSection ${SecLang_dan_frak}'), (892, '            Goto lang_end'), (893, '    Dutch: !insertmacro SelectSection ${SecLang_nld}'), (894, '            Goto lang_end'), (895, '    Estonian: !insertmacro SelectSection ${SecLang_hrv}'), (896, '            Goto lang_end'), (897, '    German: !insertmacro SelectSection ${SecLang_deu}'), (898, '            !insertmacro SelectSection ${SecLang_deu_frak}'), (899, '            Goto lang_end'), (900, '    Greek: !insertmacro SelectSection ${SecLang_ell}'), (901, '            !insertmacro SelectSection ${SecLang_grc}'), (902, '            Goto lang_end'), (903, '    Finnish: !insertmacro SelectSection ${SecLang_fin}'), (904, '            !insertmacro SelectSection ${SecLang_frm}'), (905, '            Goto lang_end'), (906, '    French: !insertmacro SelectSection ${SecLang_fra}'), (907, '            Goto lang_end'), (908, '    Hebrew: !insertmacro SelectSection ${SecLang_heb}'), (909, '            !insertmacro SelectSection ${SecLang_heb_com}'), (910, '            Goto lang_end'), (911, '    Hungarian: !insertmacro SelectSection ${SecLang_hin}'), (912, '            Goto lang_end'), (913, '    Hindi: !insertmacro SelectSection ${SecLang_hun}'), (914, '            Goto lang_end'), (915, '    Icelandic: !insertmacro SelectSection ${SecLang_isl}'), (916, '            Goto lang_end'), (917, '    Indonesian: !insertmacro SelectSection ${SecLang_ind}'), (918, '            Goto lang_end'), (919, '    Italian: !insertmacro SelectSection ${SecLang_ita}'), (920, '            !insertmacro SelectSection ${SecLang_ita_old}'), (921, '            Goto lang_end'), (922, '    Japanese: !insertmacro SelectSection ${SecLang_jpn}'), (923, '            Goto lang_end'), (924, '    Kannada: !insertmacro SelectSection ${SecLang_kan}'), (925, '            Goto lang_end'), (926, '    Korean: !insertmacro SelectSection ${SecLang_kor}'), (927, '            Goto lang_end'), (928, '    Latvian: !insertmacro SelectSection ${SecLang_lav}'), (929, '            Goto lang_end'), (930, '    Lithuanian: !insertmacro SelectSection ${SecLang_lit}'), (931, '            Goto lang_end'), (932, '    Macedonian: !insertmacro SelectSection ${SecLang_mkd}'), (933, '            Goto lang_end'), (934, '    Malayalam: !insertmacro SelectSection ${SecLang_msa}'), (935, '            Goto lang_end'), (936, '    Malay: !insertmacro SelectSection ${SecLang_mal}'), (937, '            Goto lang_end'), (938, '    Maltese: !insertmacro SelectSection ${SecLang_mlt}'), (939, '            Goto lang_end'), (940, '    Norwegian: !insertmacro SelectSection ${SecLang_nor}'), (941, '            Goto lang_end'), (942, '    Polish: !insertmacro SelectSection ${SecLang_pol}'), (943, '            Goto lang_end'), (944, '    Portuguese: !insertmacro SelectSection ${SecLang_por}'), (945, '            Goto lang_end'), (946, '    Romanian: !insertmacro SelectSection ${SecLang_ron}'), (947, '            Goto lang_end'), (948, '    Russian: !insertmacro SelectSection ${SecLang_rus}'), (949, '            Goto lang_end'), (950, '    Slovak: !insertmacro SelectSection ${SecLang_slk}'), (951, '            !insertmacro SelectSection ${SecLang_slk_frak}'), (952, '            Goto lang_end'), (953, '    Slovenian: !insertmacro SelectSection ${SecLang_slv}'), (954, '            Goto lang_end'), (955, '    Spanish: !insertmacro SelectSection ${SecLang_spa}'), (956, '            !insertmacro SelectSection ${SecLang_spa_old}'), (957, '            Goto lang_end'), (958, '    Serbian: !insertmacro SelectSection ${SecLang_srp}'), (959, '            Goto lang_end'), (960, '    Swahili: !insertmacro SelectSection ${SecLang_swa}'), (961, '            Goto lang_end'), (962, '    Swedish: !insertmacro SelectSection ${SecLang_swe}'), (963, '            !insertmacro SelectSection ${SecLang_swe_frak}'), (964, '            Goto lang_end'), (965, '    Tamil: !insertmacro SelectSection ${SecLang_tam}'), (966, '            Goto lang_end'), (967, '    Telugu: !insertmacro SelectSection ${SecLang_tel}'), (968, '            Goto lang_end'), (969, '    Thai: !insertmacro SelectSection ${SecLang_tha}'), (970, '            Goto lang_end'), (971, '    Turkish: !insertmacro SelectSection ${SecLang_tur}'), (972, '            Goto lang_end'), (973, '    Ukrainian: !insertmacro SelectSection ${SecLang_ukr}'), (974, '            Goto lang_end'), (975, '    Vietnamese: !insertmacro SelectSection ${SecLang_vie}'), (976, ''), (977, '    lang_end:'), (978, 'FunctionEnd'), (979, ''), (980, 'Function un.onInit'), (981, '   !insertmacro MULTIUSER_UNINIT'), (982, '   ;!insertmacro SELECT_UNSECTION Main ${UNSEC0000}'), (983, '   ;!insertmacro MUI_UNGETLANGUAGE'), (984, 'FunctionEnd'), (985, ''), (986, 'Function .onInstFailed'), (987, '  MessageBox MB_OK ""Installation failed.""'), (988, 'FunctionEnd'), (989, ''), (990, 'Function ShowReadme'), (991, '  Exec ""explorer.exe $INSTDIR\\doc\\README""'), (992, '  ;BringToFront'), (993, 'FunctionEnd'), (994, ''), (995, '; Prevent running multiple instances of the installer'), (996, 'Function PreventMultipleInstances'), (997, '  Push $R0'), (998, ""  System::Call 'kernel32::CreateMutexA(i 0, i 0, t ${PRODUCT_NAME}) ?e'""), (999, '  Pop $R0'), (1000, '  StrCmp $R0 0 +3'), (1001, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""The installer is already running."" /SD IDOK'), (1002, '    Abort'), (1003, '  Pop $R0'), (1004, 'FunctionEnd')]}",yes
,vs2008\tesseract-3.02.02.nsi,678e427d8b5f0155caeb62ac7986cb1d43fdb037,7fd6d2388ae4b4e7772597774492134c5f8706be,"add NSIS script for Windows installer

git-svn-id: https://tesseract-ocr.googlecode.com/svn/trunk@815 d0cd1f9f-072b-0410-8dd7-cf729c803f20","@@ -0,0 +1,1004 @@
+; (C) Copyright 2010, Sergey Bronnikov
+; (C) Copyright 2010-2012, Zdenko Podobný
+;
+; Licensed under the Apache License, Version 2.0 (the ""License"");
+; you may not use this file except in compliance with the License.
+; You may obtain a copy of the License at
+; http://www.apache.org/licenses/LICENSE-2.0
+; Unless required by applicable law or agreed to in writing, software
+; distributed under the License is distributed on an ""AS IS"" BASIS,
+; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+; See the License for the specific language governing permissions and
+; limitations under the License.
+
+SetCompressor /FINAL /SOLID lzma
+;SetCompressor lzma
+SetCompressorDictSize 32
+
+!define VERSION 3.02.02
+!define PRODUCT_NAME ""Tesseract-OCR""
+!define PRODUCT_VERSION ""${VERSION}""
+!define PRODUCT_PUBLISHER ""Tesseract-OCR community""
+!define PRODUCT_WEB_SITE ""http://code.google.com/p/tesseract-ocr""
+!define FILE_URL ""http://tesseract-ocr.googlecode.com/files/""
+
+# General Definitions
+Name ""${PRODUCT_NAME} ${VERSION} for Windows""
+Caption ""Tesseract-OCR ${VERSION}""
+BrandingText /TRIMCENTER ""(c) 2010-2012 Tesseract-OCR ""
+!define REGKEY ""SOFTWARE\${PRODUCT_NAME}""
+; HKLM (all users) vs HKCU (current user) defines
+!define env_hklm 'HKLM ""SYSTEM\CurrentControlSet\Control\Session Manager\Environment""'
+!define env_hkcu 'HKCU ""Environment""'
+
+# MultiUser Symbol Definitions
+!define MULTIUSER_EXECUTIONLEVEL Admin
+!define MULTIUSER_MUI
+!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_KEY ""${REGKEY}""
+!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_VALUENAME MultiUserInstallMode
+!define MULTIUSER_INSTALLMODE_COMMANDLINE
+!define MULTIUSER_INSTALLMODE_INSTDIR ${PRODUCT_NAME}
+!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY ""${REGKEY}""
+!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUE ""Path""
+
+# MUI Symbol Definitions
+!define MUI_ABORTWARNING
+!define MUI_COMPONENTSPAGE_SMALLDESC
+!define MUI_HEADERIMAGE
+!define MUI_HEADERIMAGE_BITMAP_NOSTRETCH
+!define MUI_ICON ""${NSISDIR}\Contrib\Graphics\Icons\modern-install-blue-full.ico""
+!define MUI_FINISHPAGE_LINK ""http://code.google.com/p/tesseract-ocr/""
+!define MUI_FINISHPAGE_LINK_LOCATION ""http://code.google.com/p/tesseract-ocr/""
+!define MUI_FINISHPAGE_NOAUTOCLOSE
+!define MUI_FINISHPAGE_SHOWREADME ""notepad $INSTDIR\doc\README""
+!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme
+!define MUI_LICENSEPAGE_CHECKBOX
+!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM
+!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}
+!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup
+!define MUI_STARTMENUPAGE_DEFAULTFOLDER ${PRODUCT_NAME}
+!define MUI_UNICON ""${NSISDIR}\Contrib\Graphics\Icons\orange-uninstall.ico""
+!define MUI_UNFINISHPAGE_NOAUTOCLOSE
+!define MUI_WELCOMEPAGE_TITLE_3LINES
+
+# Included files
+!include MultiUser.nsh
+!include Sections.nsh
+!include MUI2.nsh
+!include EnvVarUpdate.nsh
+!include LogicLib.nsh
+!include winmessages.nsh # include for some of the windows messages defines
+
+# Variables
+Var StartMenuGroup
+Var PathKey
+; Define user variables
+Var OLD_KEY
+
+# Installer pages
+!insertmacro MUI_PAGE_WELCOME
+!insertmacro MUI_PAGE_LICENSE ""..\COPYING""
+!insertmacro MULTIUSER_PAGE_INSTALLMODE
+!ifdef VERSION
+  Page custom PageReinstall PageLeaveReinstall
+!endif
+!insertmacro MUI_PAGE_DIRECTORY
+!insertmacro MUI_PAGE_COMPONENTS
+!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup
+!insertmacro MUI_PAGE_INSTFILES
+!insertmacro MUI_PAGE_FINISH
+!insertmacro MUI_UNPAGE_CONFIRM
+!insertmacro MUI_UNPAGE_INSTFILES
+
+# Languages
+!insertmacro MUI_LANGUAGE ""English""
+!insertmacro MUI_LANGUAGE ""Italian""
+!insertmacro MUI_LANGUAGE ""Russian""
+!insertmacro MUI_LANGUAGE ""Slovak""
+!insertmacro MUI_LANGUAGE ""Spanish""
+!insertmacro MUI_LANGUAGE ""SpanishInternational""
+
+# Installer attributes
+ShowInstDetails show
+InstProgressFlags smooth colored
+XPStyle on
+SpaceTexts
+CRCCheck on
+InstProgressFlags smooth colored
+CRCCheck On  # Do a CRC check before installing
+InstallDir ""$PROGRAMFILES\Tesseract-OCR""
+# Name of program and file
+!ifdef VERSION
+OutFile tesseract-ocr-setup-${VERSION}.exe
+!else
+OutFile tesseract-ocr-setup.exe
+!endif
+
+!macro AddToPath
+  # TODO(zdenop): Check if $INSTDIR is in path. If yes, that do not append it
+  # append bin path to user PATH environment variable
+  StrCpy $PathKey ""HKLM""
+  StrCmp $MultiUser.InstallMode ""AllUsers"" +2
+    StrCpy $PathKey ""HKCU""
+  DetailPrint ""Setting PATH to $INSTDIR at $PathKey""
+  ${EnvVarUpdate} $0 ""PATH"" ""A"" ""$PathKey"" ""$INSTDIR""
+  ; make sure windows knows about the change
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+!macroend
+
+!macro RemoveTessdataPrefix
+  ReadRegStr $R2 ${env_hklm} 'TESSDATA_PREFIX'
+  ReadRegStr $R3 ${env_hkcu} 'TESSDATA_PREFIX'
+  StrCmp $R2 """" Next1 0
+    DetailPrint ""Removing $R2 from HKLM Environment...""
+    DeleteRegValue ${env_hklm} TESSDATA_PREFIX  # This only empty variable, but do not remove it!
+    ${EnvVarUpdate} $0 ""TESSDATA_PREFIX""  ""R"" ""HKLM"" $R1
+  Next1:
+    StrCmp $R3 """" Next2 0
+      DetailPrint ""Removing $R3 from HKCU Environment...""
+      DeleteRegValue ${env_hkcu} ""TESSDATA_PREFIX""
+  Next2:
+    # make sure windows knows about the change
+    SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+!macroend
+
+!macro SetTESSDATA
+  !insertmacro RemoveTessdataPrefix
+  StrCpy $PathKey ""HKLM""
+  StrCmp $MultiUser.InstallMode ""AllUsers"" +2
+    StrCpy $PathKey ""HKCU""
+  DetailPrint ""Setting TESSDATA_PREFIX at $PathKey""
+  ${EnvVarUpdate} $0 ""TESSDATA_PREFIX"" ""A"" ""$PathKey"" ""$INSTDIR\""
+  # make sure windows knows about the change
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+!macroend
+
+!macro Download_Lang_Data Lang
+  IfFileExists $TEMP/${Lang} dlok
+  ;StrCpy $1 ${Lang}
+  ;StrCpy $2 ""$INSTDIR\tessdata\$1""
+  ;inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/$1"" $2 /end
+  inetc::get /caption ""Downloading ${Lang}"" /popup """" ""${FILE_URL}/${Lang}"" $TEMP/${Lang} /end
+    Pop $0 # return value = exit code, ""OK"" if OK
+    StrCmp $0 ""OK"" dlok
+    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of ${Lang}: $0. Click OK to continue."" /SD IDOK
+    Goto error
+  dlok:
+    DetailPrint ""Extracting ${Lang}""
+    untgz::extract ""-j"" ""-d"" ""$INSTDIR\tessdata\"" ""$TEMP/${Lang}""
+    # tarbal has to be created with option --old-archive otherwise there will be error
+    # untgz::extract failed because of checksum
+  error:
+    Delete ""$TEMP\${Lang}""
+!macroend
+
+!macro Download_Leptonica DataUrl
+  IfFileExists $TEMP/leptonica.zip dlok
+  inetc::get /caption ""Downloading $1"" /popup """" ${DataUrl} $TEMP/leptonica.zip /end
+    Pop $R0 # return value = exit code, ""OK"" if OK
+    StrCmp $R0 ""OK"" dlok
+    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK
+    Goto error
+  dlok:
+    nsisunz::UnzipToLog ""$TEMP/leptonica.zip"" ""$INSTDIR""
+    Pop $R0
+    StrCmp $R0 ""success"" +2
+        MessageBox MB_OK ""Decompression of leptonica failed: $R0""
+        Goto error
+  error:
+    Delete ""$TEMP\leptonica.zip""
+!macroend
+
+!macro Download_Lang_Data_gz Lang
+  ;IfFileExists $TEMP/${Lang} dlok
+  StrCpy $1 ${Lang}
+  StrCpy $2 ""$INSTDIR\tessdata\$1""
+  inetc::get /caption ""Downloading $1"" /popup """" ""http://tesseract-ocr.googlecode.com/files/$1"" $2 /end
+    Pop $0 # return value = exit code, ""OK"" if OK
+    StrCmp $0 ""OK"" dlok
+    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $0. Click OK to continue."" /SD IDOK
+    Goto error
+  dlok:
+    ExecWait  '""$INSTDIR\gzip.exe"" -d ""$2""'
+  error:
+!macroend
+
+!macro Download_Data2 Filename Komp
+  IfFileExists $TEMP/${Filename} dlok
+  inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/${Filename}"" $TEMP/${Filename} /end
+    Pop $R0 # return value = exit code, ""OK"" if OK
+    StrCmp $R0 ""OK"" dlok
+    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK
+    Goto error
+  dlok:
+    ${If} ${Komp} == ""tgz""
+        DetailPrint ""Extracting ${Filename}""
+        untgz::extract ""-d"" ""$INSTDIR\.."" ""$TEMP\${Filename}""
+        Goto install
+    ${EndIf}
+    ${If} ${Komp} == ""zip""
+        DetailPrint ""Extracting ${Filename}""
+        nsisunz::UnzipToLog ""$TEMP\${Filename}"" ""$INSTDIR\""
+        Goto install
+    ${EndIf}
+     MessageBox MB_OK|MB_ICONEXCLAMATION ""Unsupported compression!""
+  install:
+        Pop $R0
+        StrCmp $R0 ""success"" +3
+            MessageBox MB_OK ""Decompression of ${Filename} failed: $R0""
+            Goto error
+    Delete ""$TEMP\${Filename}""
+  error:
+!macroend
+
+!macro Download_Data Filename Komp
+  IfFileExists $TEMP/${Filename} dlok
+  inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/${Filename}"" $TEMP/${Filename} /end
+    Pop $R0 # return value = exit code, ""OK"" if OK
+    StrCmp $R0 ""OK"" dlok
+    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK
+    Goto end
+  dlok:
+    ${If} ${Komp} == ""tgz""
+        untgz::extract ""-d"" ""$INSTDIR"" ""$TEMP\${Filename}""
+        Goto install
+    ${EndIf}
+    ${If} ${Komp} == ""zip""
+        nsisunz::UnzipToLog ""$TEMP\${Filename}"" ""$INSTDIR""
+        Goto install
+    ${EndIf}
+     MessageBox MB_OK|MB_ICONEXCLAMATION ""Unsupported compression!""
+  install:
+        Pop $R0
+        StrCmp $R0 ""success"" +3
+            MessageBox MB_OK ""Decompression of ${Filename} failed: $R0""
+            Goto end
+    Delete ""$TEMP\${Filename}""
+    ${If} ${Komp} == ""zip""
+        Goto end
+    ${EndIf}
+    CopyFiles ""$TEMP\Tesseract-OCR\*"" ""$INSTDIR""
+    RMDir /r ""$TEMP\Tesseract-OCR""
+  end:
+!macroend
+
+Section -Main SEC0000
+  ; mark as read only component
+  SectionIn RO
+  SetOutPath ""$INSTDIR""
+  # files included in distribution
+  File LIB_Release\tesseract.exe
+  File gzip.exe
+  File tar.exe
+  CreateDirectory ""$INSTDIR\java""
+  SetOutPath ""$INSTDIR\java""
+  File ..\java\ScrollView.jar
+  CreateDirectory ""$INSTDIR\tessdata""
+  CreateDirectory ""$INSTDIR\tessdata\configs""
+  SetOutPath ""$INSTDIR\tessdata\configs""
+  File ..\tessdata\configs\ambigs.train
+  File ..\tessdata\configs\api_config
+  File ..\tessdata\configs\bigram
+  File ..\tessdata\configs\box.train
+  File ..\tessdata\configs\box.train.stderr
+  File ..\tessdata\configs\digits
+  File ..\tessdata\configs\hocr
+  File ..\tessdata\configs\inter
+  File ..\tessdata\configs\kannada
+  File ..\tessdata\configs\linebox
+  File ..\tessdata\configs\logfile
+  File ..\tessdata\configs\makebox
+  File ..\tessdata\configs\quiet
+  File ..\tessdata\configs\rebox
+  File ..\tessdata\configs\strokewidth
+  File ..\tessdata\configs\unlv
+  CreateDirectory ""$INSTDIR\tessdata\tessconfigs""
+  SetOutPath ""$INSTDIR\tessdata\tessconfigs""
+  File ..\tessdata\tessconfigs\batch
+  File ..\tessdata\tessconfigs\batch.nochop
+  File ..\tessdata\tessconfigs\matdemo
+  File ..\tessdata\tessconfigs\msdemo
+  File ..\tessdata\tessconfigs\nobatch
+  File ..\tessdata\tessconfigs\segdemo
+  CreateDirectory ""$INSTDIR\doc""
+  SetOutPath ""$INSTDIR\doc""
+  File ..\AUTHORS
+  File ..\COPYING
+  File ..\eurotext.tif
+  File ..\phototest.tif
+  File ..\README
+  File ..\ReleaseNotes
+SectionEnd
+
+Section ""Traning Tools"" SecTr
+  SectionIn 1
+  SetOutPath ""$INSTDIR""
+  File LIB_Release\cntraining.exe
+  File LIB_Release\combine_tessdata.exe
+  File LIB_Release\mftraining.exe
+  File LIB_Release\unicharset_extractor.exe
+  File LIB_Release\wordlist2dawg.exe
+  File LIB_Release\classifier_tester.exe
+  File LIB_Release\dawg2wordlist.exe
+  File LIB_Release\ambiguous_words.exe
+  File LIB_Release\shapeclustering.exe
+SectionEnd
+
+Section -post SEC0001
+  ;Store installation folder - we use allways HKLM!
+  WriteRegStr HKLM ""${REGKEY}"" ""Path"" ""$INSTDIR""
+  WriteRegStr HKLM ""${REGKEY}"" ""Mode"" $MultiUser.InstallMode
+  WriteRegStr HKLM ""${REGKEY}"" ""InstallDir"" ""$INSTDIR""
+  WriteRegStr HKLM ""${REGKEY}"" ""CurrentVersion"" ""${VERSION}""
+  WriteRegStr HKLM ""${REGKEY}"" ""Uninstaller"" ""$INSTDIR\uninstall.exe""
+  ;WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Run"" ""Tesseract-OCR"" ""$INSTDIR\tesseract.exe""
+  ; Register to Add/Remove program in control panel
+  WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""DisplayName"" ""${PRODUCT_NAME} - open source OCR engine""
+  WriteRegStr HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" DisplayVersion ""${VERSION}""
+  WriteRegStr HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" Publisher ""${PRODUCT_PUBLISHER}""
+  WriteRegStr HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" URLInfoAbout ""${PRODUCT_WEB_SITE}""
+  WriteRegStr HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""DisplayIcon"" ""$INSTDIR\uninstall.exe""
+  WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""UninstallString"" ""$INSTDIR\uninstall.exe""
+  WriteRegStr HKLM ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""QuietUninstallString"" '""$INSTDIR\uninstall.exe"" /S'
+  WriteRegDWORD HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" NoModify 1
+  WriteRegDWORD HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" NoRepair 1
+  ;Create uninstaller
+  WriteUninstaller ""$INSTDIR\Uninstall.exe""
+  ;ExecShell ""open"" ""http://code.google.com/p/tesseract-ocr/""
+  ;ExecShell ""open"" '""$INSTDIR""'
+  ;BringToFront
+SectionEnd
+
+Section ""Shortcuts creation"" SecCS
+  SetOutPath $INSTDIR
+  CreateDirectory ""$SMPROGRAMS\${PRODUCT_NAME}""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Console.lnk"" $WINDIR\system32\CMD.EXE
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Homepage.lnk"" ""${PRODUCT_WEB_SITE}""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\ReadMe.lnk"" ""${PRODUCT_WEB_SITE}/wiki/ReadMe""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\FAQ.lnk"" ""${PRODUCT_WEB_SITE}/wiki/FAQ""
+  CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\Uninstall.lnk"" ""$INSTDIR\uninstall.exe"" """" ""$INSTDIR\uninstall.exe"" 0
+  ;CreateShortCut ""$DESKTOP\Tesseract-OCR.lnk"" ""$INSTDIR\tesseract.exe"" """" ""$INSTDIR\tesseract.exe"" 0
+  ;CreateShortCut ""$QUICKLAUNCH\.lnk"" ""$INSTDIR\tesseract.exe"" """" ""$INSTDIR\tesseract.exe"" 0
+SectionEnd
+
+SectionGroup ""Registry setttings"" SecRS
+    Section ""Add to Path"" SecRS_path
+        !insertmacro AddToPath
+    SectionEnd
+    Section ""Set TESSDATA_PREFIX variable"" SecRS_tessdata
+        !insertmacro SetTESSDATA
+    SectionEnd
+SectionGroupEnd
+
+SectionGroup ""Tesseract development files"" SecGrp_dev
+    Section /o ""Download and install tesseract libraries including header files"" SecLang_tlib
+    !insertmacro Download_Data2 tesseract-ocr-3.02.02-win32-lib-include-dirs.zip zip
+    CopyFiles $INSTDIR\lib\libtesseract*.dll $INSTDIR\  ; $INSTDIR is in the path!
+    Delete $INSTDIR\lib\libtesseract*.dll
+    SectionEnd
+    Section /o ""Download and install leptonica 1.68 libraries including header files"" SecLang_llib
+    !insertmacro Download_Leptonica http://leptonica.org/source/leptonica-1.68-win32-lib-include-dirs.zip
+    CopyFiles $INSTDIR\lib\liblept*.dll $INSTDIR\  ; move to path
+    Delete $INSTDIR\lib\liblept*.dll
+    SectionEnd
+    Section /o ""Download and install VC++ 2008 tesseract API example solution"" SecLang_example
+    !insertmacro Download_Data2 tesseract-ocr-API-Example-vs2008.zip zip
+    SectionEnd
+    Section /o ""Download and install tesseract source code"" SecLang_source
+    !insertmacro Download_Data tesseract-ocr-3.02.02.tar.gz tgz
+    SectionEnd
+    Section /o ""Download and install VS C++ 2008 solution for tesseract"" SecLang_vs2008
+    !insertmacro Download_Data tesseract-ocr-3.02-vs2008.zip zip
+    SectionEnd
+    Section /o ""Download and install doxygen documentation for tesseract"" SecLang_doxygen
+    !insertmacro Download_Data tesseract-ocr-3.02.02-doc-html.tar.gz tgz
+    CreateShortCut ""$SMPROGRAMS\${PRODUCT_NAME}\DoxygenDoc.lnk"" ""$INSTDIR\tesseract-ocr\doc\html\index.html""
+    SectionEnd
+SectionGroupEnd
+
+; Download language files
+SectionGroup ""Language data"" SecGrp_LD
+    Section ""English language data"" SecLang_eng
+    SectionIn RO
+      SetOutPath ""$INSTDIR\tessdata""
+      File ..\tessdata\eng.*
+    SectionEnd
+
+    Section ""Orientation and script detection data"" SecLang_osd
+    SectionIn 1
+      SetOutPath ""$INSTDIR\tessdata""
+     File ..\tessdata\osd.*
+    SectionEnd
+
+    Section /o ""Download and install Math / equation detection module"" SecLang_equ
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.equ.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Afrikaans language data"" SecLang_afr
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.afr.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Albanian language data"" SecLang_sqi
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.sqi.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Arabic language data"" SecLang_ara
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ara.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Azerbaijani language data"" SecLang_aze
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.aze.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Basque language data"" SecLang_eus
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.eus.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Belarusian language data"" SecLang_bel
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.bel.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Bengali language data"" SecLang_ben
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ben.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Bulgarian language data"" SecLang_bul
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.bul.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Catalan language data"" SecLang_cat
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.cat.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Cherokee language data"" SecLang_chr
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chr.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Chinese (Traditional) language data"" SecLang_chi_tra
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chi_tra.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Chinese (Simplified) language data"" SecLang_chi_sim
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chi_sim.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Croatian language data"" SecLang_hrv
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hrv.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Czech language data"" SecLang_ces
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ces.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Danish language data"" SecLang_dan
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.dan.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Danish (Fraktur) language data"" SecLang_dan_frak
+    !insertmacro Download_Lang_Data_gz dan-frak.traineddata.gz
+    SectionEnd
+
+    Section /o ""Download and install Dutch language data"" SecLang_nld
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.nld.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install English - Middle (1100-1500) language data"" SecLang_enm
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.enm.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Esperanto language data"" SecLang_epo
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.epo.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Estonian language data"" SecLang_est
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.est.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install German language data"" SecLang_deu
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.deu.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install German (Fraktur) language data"" SecLang_deu_frak
+    !insertmacro Download_Lang_Data_gz deu-frak.traineddata.gz
+    SectionEnd
+
+    Section /o ""Download and install Greek language data"" SecLang_ell
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ell.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Greek - Ancient language data"" SecLang_grc
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.grc.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Finnish language data"" SecLang_fin
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.fin.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Frankish language data"" SecLang_frk
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.frk.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install French language data"" SecLang_fra
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.fra.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install French - Middle(ca. 1400-1600) language data"" SecLang_frm
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.frm.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Hebrew language data"" SecLang_heb
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.heb.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Hebrew (community traning) language data"" SecLang_heb_com
+    !insertmacro Download_Lang_Data tesseract-ocr-3.01.heb-com.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Hindi language data"" SecLang_hin
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hin.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Hungarian language data"" SecLang_hun
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hun.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Icelandic language data"" SecLang_isl
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.isl.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Indonesian language data"" SecLang_ind
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ind.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Italian language data"" SecLang_ita
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ita.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Italian (Old) language data"" SecLang_ita_old
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ita_old.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Japanese language data"" SecLang_jpn
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.jpn.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Kannada language data"" SecLang_kan
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.kan.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Korean language data"" SecLang_kor
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.kor.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Latvian language data"" SecLang_lav
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.lav.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Lithuanian language data"" SecLang_lit
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.lit.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Macedonian language data"" SecLang_mkd
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mkd.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Malay language data"" SecLang_msa
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.msa.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Malayalam language data"" SecLang_mal
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mal.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Maltese language data"" SecLang_mlt
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mlt.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Norwegian language data"" SecLang_nor
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.nor.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Polish language data"" SecLang_pol
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.pol.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Portuguese language data"" SecLang_por
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.por.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Romanian language data"" SecLang_ron
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ron.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Russian language data"" SecLang_rus
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.rus.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Slovak language data"" SecLang_slk
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slk.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Slovak (Fraktur) language data"" SecLang_slk_frak
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slk_frak.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Slovenian language data"" SecLang_slv
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slv.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Spanish language data"" SecLang_spa
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.spa.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Spanish (Old) language data"" SecLang_spa_old
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.spa_old.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Serbian language data"" SecLang_srp
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.srp.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Swahili language data"" SecLang_swa
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.swa.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Swedish language data"" SecLang_swe
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.swe.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Swedish (Fraktur) language data"" SecLang_swe_frak
+    !insertmacro Download_Lang_Data_gz swe-frak.traineddata.gz
+    SectionEnd
+
+    Section /o ""Download and install Tagalog language data"" SecLang_tgl
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tgl.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Tamil language data"" SecLang_tam
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tam.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Telugu language data"" SecLang_tel
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tel.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Thai language data"" SecLang_tha
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tha.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Turkish language data"" SecLang_tur
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tur.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Ukrainian language data"" SecLang_ukr
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ukr.tar.gz
+    SectionEnd
+
+    Section /o ""Download and install Vietnamese language data"" SecLang_vie
+    !insertmacro Download_Lang_Data tesseract-ocr-3.02.vie.tar.gz
+    SectionEnd
+SectionGroupEnd
+
+;--------------------------------
+;Descriptions
+  ; At first we need to localize installer for languages which supports well in tesseract: Eng, Spa, Ger, Ita, Dutch + Russian (it is authors native language)
+  ;Language strings
+  LangString DESC_SEC0001 ${LANG_RUSSIAN} ""Установочные файлы.""
+  ;LangString DESC_SecHelp ${LANG_RUSSIAN} ""Справочная информация.""
+  LangString DESC_SecCS    ${LANG_RUSSIAN} ""Добавить ярлыки в меню Пуск""
+
+  LangString DESC_SEC0001 ${LANG_ENGLISH} ""Installation files.""
+  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Help information.""
+  LangString DESC_SecCS    ${LANG_ENGLISH} ""Add shortcuts to Start menu.""
+
+  LangString DESC_SEC0001 ${LANG_ITALIAN} ""File di installazione.""
+  ;LangString DESC_SecHelp ${LANG_ITALIAN} ""Guida di informazioni.""
+  LangString DESC_SecCS    ${LANG_ITALIAN} ""Aggiungere collegamenti al menu Start.""
+
+  LangString DESC_SEC0001 ${LANG_SLOVAK} ""Súbory inštalácie.""
+  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Pomocné informácie.""
+  LangString DESC_SecCS    ${LANG_SLOVAK} ""Pridať odkaz do Start menu.""
+
+  LangString DESC_SEC0001 ${LANG_SPANISH} ""Los archivos de instalación.""
+  ;LangString DESC_SecHelp ${LANG_SPANISH} ""Información de ayuda.""
+  LangString DESC_SecCS    ${LANG_SPANISH} ""Ańadir accesos directos al menú Inicio.""
+
+  LangString DESC_SEC0001 ${LANG_SPANISHINTERNATIONAL} ""Los archivos de instalación.""
+  ;LangString DESC_SecHelp ${LANG_SPANISHINTERNATIONAL} ""Información de ayuda.""
+  LangString DESC_SecCS    ${LANG_SPANISHINTERNATIONAL} ""Ańadir accesos directos al menú Inicio.""
+
+  ;Assign language strings to sections
+  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
+    !insertmacro MUI_DESCRIPTION_TEXT ${SEC0001} $(DESC_SEC0001)
+    !insertmacro MUI_DESCRIPTION_TEXT ${SecCS} $(DESC_SecCS)
+  !insertmacro MUI_FUNCTION_DESCRIPTION_END
+
+;--------------------------------
+;Uninstaller Section
+
+;Section /o -un.Main UNSEC0000
+Section -un.Main UNSEC0000
+  DetailPrint ""Removing everything""
+  Delete ""$SMPROGRAMS\${PRODUCT_NAME}\*.*""
+  RMDir  ""$SMPROGRAMS\${PRODUCT_NAME}""
+  DetailPrint ""Removing registry info""
+  DeleteRegKey HKLM ""Software\Tesseract-OCR""
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+  ${un.EnvVarUpdate} $0 ""PATH"" ""R"" HKLM $INSTDIR
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+  DeleteRegValue HKLM ""Environment"" ""TESSDATA_PREFIX""
+  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000
+
+  # remove the Add/Remove information
+  DeleteRegKey HKLM ""SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}""
+  Delete ""$INSTDIR\Uninstall.exe""
+  DeleteRegValue HKLM ""${REGKEY}"" Path
+  DeleteRegKey /IfEmpty HKLM ""${REGKEY}\Components""
+  DeleteRegKey /IfEmpty HKLM ""${REGKEY}""
+  RMDir /r ""$INSTDIR""
+SectionEnd
+
+Function PageReinstall
+
+FunctionEnd
+
+Function PageLeaveReinstall
+
+FunctionEnd
+
+!macro REMOVE_REGKEY OLD_KEY
+  StrCmp ${OLD_KEY} HKLM 0 +3
+    DeleteRegKey HKLM ""${REGKEY}""
+    Goto End
+  DeleteRegKey HKCU ""${REGKEY}""
+  End:
+!macroend
+
+Function .onInit
+  Call PreventMultipleInstances
+  ;RequestExecutionLevel admin
+  !insertmacro MULTIUSER_INIT
+
+  ; is tesseract already installed?
+  ReadRegStr $R0 HKCU ""${REGKEY}"" ""CurrentVersion""
+  StrCpy $OLD_KEY HKCU
+  StrCmp $R0 """" test1 test2
+  test1:
+    ReadRegStr $R0 HKLM ""${REGKEY}"" ""CurrentVersion""
+    StrCpy $OLD_KEY HKLM
+    StrCmp $R0 """" SkipUnInstall
+  test2:
+    MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Tesseract-ocr version $R0 is installed (in $OLD_KEY)! Do you want to uninstall it first?$\nUninstall will delete all files in '$INSTDIR'!"" \
+       /SD IDYES IDNO SkipUnInstall IDYES UnInstall
+  UnInstall:
+    StrCmp $OLD_KEY ""HKLM"" UnInst_hklm
+       DetailPrint ""CurrentUser:""
+       readRegStr $R1 HKCU ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""UninstallString""
+       Goto try_uninstall
+    UnInst_hklm:
+       DetailPrint ""UnInst_hklm""
+       readRegStr $R1 HKLM ""Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"" ""UninstallString""
+    try_uninstall:
+      ClearErrors
+      ExecWait '$R1 _?=$INSTDIR'$0
+      StrCmp $0 0 0 +3   ; Check if unstaller finished ok. If yes, than try to remove it from installer
+        !insertmacro REMOVE_REGKEY ${OLD_KEY}
+        Goto SkipUnInstall
+      messagebox mb_ok ""Uninstaller failed:\n$0\n\nYou need to remove program manually.""
+  SkipUnInstall:
+  MessageBox MB_YESNO|MB_ICONQUESTION ""Do you want to install ${PRODUCT_NAME} ${VERSION}?"" \
+    /SD IDYES IDNO no IDYES yes
+  no:
+    SetSilent silent
+    Goto done
+  yes:
+    ;InitPluginsDir
+    ;File /oname=$PLUGINSDIR\splash.bmp ""${NSISDIR}\Contrib\Graphics\Header\nsis.bmp""
+    ;File /oname=$PLUGINSDIR\splash.bmp ""new.bmp""
+    ;advsplash::show 1000 600 400 -1 $PLUGINSDIR\splash
+    ;Pop $0          ; $0 has '1' if the user closed the splash screen early,
+                    ; '0' if everything closed normal, and '-1' if some error occured.
+    ;IfFileExists $INSTDIR\loadmain.exe PathGood
+  done:
+    ; Make selection based on System language ID
+    System::Call 'kernel32::GetSystemDefaultLangID() i .r0'
+    ;http://msdn.microsoft.com/en-us/library/dd318693%28v=VS.85%29.aspx
+    StrCmp $0 ""1078"" Afrikaans
+    StrCmp $0 ""1052"" Albanian
+    StrCmp $0 ""5121"" Arabic
+    StrCmp $0 ""1068"" Azerbaijani
+    StrCmp $0 ""1069"" Basque
+    StrCmp $0 ""1059"" Belarusian
+    StrCmp $0 ""1093"" Bengali
+    StrCmp $0 ""1026"" Bulgarian
+    StrCmp $0 ""1027"" Catalan
+    StrCmp $0 ""1116"" Cherokee
+    StrCmp $0 ""31748"" Chinese_tra
+    StrCmp $0 ""4"" Chinese_sim
+    StrCmp $0 ""26"" Croatian
+    StrCmp $0 ""1029"" Czech
+    StrCmp $0 ""1030"" Danish
+    StrCmp $0 ""2067"" Dutch
+    StrCmp $0 ""1061"" Estonian
+    StrCmp $0 ""3079"" German
+    StrCmp $0 ""1032"" Greek
+    StrCmp $0 ""1035"" Finnish
+    StrCmp $0 ""2060"" French
+    StrCmp $0 ""1037"" Hebrew
+    StrCmp $0 ""1081"" Hindi
+    StrCmp $0 ""1038"" Hungarian
+    StrCmp $0 ""1039"" Icelandic
+    StrCmp $0 ""1057"" Indonesian
+    StrCmp $0 ""1040"" Italian
+    StrCmp $0 ""1041"" Japanese
+    StrCmp $0 ""1099"" Kannada
+    StrCmp $0 ""1042"" Korean
+    StrCmp $0 ""1062"" Latvian
+    StrCmp $0 ""1063"" Lithuanian
+    StrCmp $0 ""1071"" Macedonian
+    StrCmp $0 ""1100"" Malayalam
+    StrCmp $0 ""2110"" Malay
+    StrCmp $0 ""1082"" Maltese
+    StrCmp $0 ""1044"" Norwegian
+    StrCmp $0 ""1045"" Polish
+    StrCmp $0 ""1046"" Portuguese
+    StrCmp $0 ""1048"" Romanian
+    StrCmp $0 ""1049"" Russian
+    StrCmp $0 ""1051"" Slovak
+    StrCmp $0 ""1060"" Slovenian
+    StrCmp $0 ""11274"" Spanish
+    StrCmp $0 ""2074"" Serbian
+    StrCmp $0 ""1089"" Swahili
+    StrCmp $0 ""2077"" Swedish
+    StrCmp $0 ""1097"" Tamil
+    StrCmp $0 ""1098"" Telugu
+    StrCmp $0 ""1054"" Thai
+    StrCmp $0 ""1055"" Turkish
+    StrCmp $0 ""1058"" Ukrainian
+    StrCmp $0 ""1066"" Vietnamese
+
+    Goto lang_end
+
+    Afrikaans: !insertmacro SelectSection ${SecLang_afr}
+            Goto lang_end
+    Albanian: !insertmacro SelectSection ${SecLang_sqi}
+            Goto lang_end
+    Arabic: !insertmacro SelectSection ${SecLang_ara}
+            Goto lang_end
+    Azerbaijani: !insertmacro SelectSection ${SecLang_aze}
+            Goto lang_end
+    Basque: !insertmacro SelectSection ${SecLang_eus}
+            Goto lang_end
+    Belarusian: !insertmacro SelectSection ${SecLang_bel}
+            Goto lang_end
+    Bengali: !insertmacro SelectSection ${SecLang_ben}
+            Goto lang_end
+    Bulgarian: !insertmacro SelectSection ${SecLang_bul}
+            Goto lang_end
+    Catalan: !insertmacro SelectSection ${SecLang_cat}
+            Goto lang_end
+    Cherokee: !insertmacro SelectSection ${SecLang_chr}
+            Goto lang_end
+    Chinese_tra: !insertmacro SelectSection ${SecLang_chi_tra}
+            Goto lang_end
+    Chinese_sim: !insertmacro SelectSection ${SecLang_chi_sim}
+            Goto lang_end
+    Croatian: !insertmacro SelectSection ${SecLang_hrv}
+            Goto lang_end
+    Czech: !insertmacro SelectSection ${SecLang_ces}
+            Goto lang_end
+    Danish: !insertmacro SelectSection ${SecLang_dan}
+            !insertmacro SelectSection ${SecLang_dan_frak}
+            Goto lang_end
+    Dutch: !insertmacro SelectSection ${SecLang_nld}
+            Goto lang_end
+    Estonian: !insertmacro SelectSection ${SecLang_hrv}
+            Goto lang_end
+    German: !insertmacro SelectSection ${SecLang_deu}
+            !insertmacro SelectSection ${SecLang_deu_frak}
+            Goto lang_end
+    Greek: !insertmacro SelectSection ${SecLang_ell}
+            !insertmacro SelectSection ${SecLang_grc}
+            Goto lang_end
+    Finnish: !insertmacro SelectSection ${SecLang_fin}
+            !insertmacro SelectSection ${SecLang_frm}
+            Goto lang_end
+    French: !insertmacro SelectSection ${SecLang_fra}
+            Goto lang_end
+    Hebrew: !insertmacro SelectSection ${SecLang_heb}
+            !insertmacro SelectSection ${SecLang_heb_com}
+            Goto lang_end
+    Hungarian: !insertmacro SelectSection ${SecLang_hin}
+            Goto lang_end
+    Hindi: !insertmacro SelectSection ${SecLang_hun}
+            Goto lang_end
+    Icelandic: !insertmacro SelectSection ${SecLang_isl}
+            Goto lang_end
+    Indonesian: !insertmacro SelectSection ${SecLang_ind}
+            Goto lang_end
+    Italian: !insertmacro SelectSection ${SecLang_ita}
+            !insertmacro SelectSection ${SecLang_ita_old}
+            Goto lang_end
+    Japanese: !insertmacro SelectSection ${SecLang_jpn}
+            Goto lang_end
+    Kannada: !insertmacro SelectSection ${SecLang_kan}
+            Goto lang_end
+    Korean: !insertmacro SelectSection ${SecLang_kor}
+            Goto lang_end
+    Latvian: !insertmacro SelectSection ${SecLang_lav}
+            Goto lang_end
+    Lithuanian: !insertmacro SelectSection ${SecLang_lit}
+            Goto lang_end
+    Macedonian: !insertmacro SelectSection ${SecLang_mkd}
+            Goto lang_end
+    Malayalam: !insertmacro SelectSection ${SecLang_msa}
+            Goto lang_end
+    Malay: !insertmacro SelectSection ${SecLang_mal}
+            Goto lang_end
+    Maltese: !insertmacro SelectSection ${SecLang_mlt}
+            Goto lang_end
+    Norwegian: !insertmacro SelectSection ${SecLang_nor}
+            Goto lang_end
+    Polish: !insertmacro SelectSection ${SecLang_pol}
+            Goto lang_end
+    Portuguese: !insertmacro SelectSection ${SecLang_por}
+            Goto lang_end
+    Romanian: !insertmacro SelectSection ${SecLang_ron}
+            Goto lang_end
+    Russian: !insertmacro SelectSection ${SecLang_rus}
+            Goto lang_end
+    Slovak: !insertmacro SelectSection ${SecLang_slk}
+            !insertmacro SelectSection ${SecLang_slk_frak}
+            Goto lang_end
+    Slovenian: !insertmacro SelectSection ${SecLang_slv}
+            Goto lang_end
+    Spanish: !insertmacro SelectSection ${SecLang_spa}
+            !insertmacro SelectSection ${SecLang_spa_old}
+            Goto lang_end
+    Serbian: !insertmacro SelectSection ${SecLang_srp}
+            Goto lang_end
+    Swahili: !insertmacro SelectSection ${SecLang_swa}
+            Goto lang_end
+    Swedish: !insertmacro SelectSection ${SecLang_swe}
+            !insertmacro SelectSection ${SecLang_swe_frak}
+            Goto lang_end
+    Tamil: !insertmacro SelectSection ${SecLang_tam}
+            Goto lang_end
+    Telugu: !insertmacro SelectSection ${SecLang_tel}
+            Goto lang_end
+    Thai: !insertmacro SelectSection ${SecLang_tha}
+            Goto lang_end
+    Turkish: !insertmacro SelectSection ${SecLang_tur}
+            Goto lang_end
+    Ukrainian: !insertmacro SelectSection ${SecLang_ukr}
+            Goto lang_end
+    Vietnamese: !insertmacro SelectSection ${SecLang_vie}
+
+    lang_end:
+FunctionEnd
+
+Function un.onInit
+   !insertmacro MULTIUSER_UNINIT
+   ;!insertmacro SELECT_UNSECTION Main ${UNSEC0000}
+   ;!insertmacro MUI_UNGETLANGUAGE
+FunctionEnd
+
+Function .onInstFailed
+  MessageBox MB_OK ""Installation failed.""
+FunctionEnd
+
+Function ShowReadme
+  Exec ""explorer.exe $INSTDIR\doc\README""
+  ;BringToFront
+FunctionEnd
+
+; Prevent running multiple instances of the installer
+Function PreventMultipleInstances
+  Push $R0
+  System::Call 'kernel32::CreateMutexA(i 0, i 0, t ${PRODUCT_NAME}) ?e'
+  Pop $R0
+  StrCmp $R0 0 +3
+    MessageBox MB_OK|MB_ICONEXCLAMATION ""The installer is already running."" /SD IDOK
+    Abort
+  Pop $R0
+FunctionEnd
","{'added': [(1, '; (C) Copyright 2010, Sergey Bronnikov'), (2, '; (C) Copyright 2010-2012, Zdenko Podobný'), (3, ';'), (4, '; Licensed under the Apache License, Version 2.0 (the ""License"");'), (5, '; you may not use this file except in compliance with the License.'), (6, '; You may obtain a copy of the License at'), (7, '; http://www.apache.org/licenses/LICENSE-2.0'), (8, '; Unless required by applicable law or agreed to in writing, software'), (9, '; distributed under the License is distributed on an ""AS IS"" BASIS,'), (10, '; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (11, '; See the License for the specific language governing permissions and'), (12, '; limitations under the License.'), (13, ''), (14, 'SetCompressor /FINAL /SOLID lzma'), (15, ';SetCompressor lzma'), (16, 'SetCompressorDictSize 32'), (17, ''), (18, '!define VERSION 3.02.02'), (19, '!define PRODUCT_NAME ""Tesseract-OCR""'), (20, '!define PRODUCT_VERSION ""${VERSION}""'), (21, '!define PRODUCT_PUBLISHER ""Tesseract-OCR community""'), (22, '!define PRODUCT_WEB_SITE ""http://code.google.com/p/tesseract-ocr""'), (23, '!define FILE_URL ""http://tesseract-ocr.googlecode.com/files/""'), (24, ''), (25, '# General Definitions'), (26, 'Name ""${PRODUCT_NAME} ${VERSION} for Windows""'), (27, 'Caption ""Tesseract-OCR ${VERSION}""'), (28, 'BrandingText /TRIMCENTER ""(c) 2010-2012 Tesseract-OCR ""'), (29, '!define REGKEY ""SOFTWARE\\${PRODUCT_NAME}""'), (30, '; HKLM (all users) vs HKCU (current user) defines'), (31, '!define env_hklm \'HKLM ""SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment""\''), (32, '!define env_hkcu \'HKCU ""Environment""\''), (33, ''), (34, '# MultiUser Symbol Definitions'), (35, '!define MULTIUSER_EXECUTIONLEVEL Admin'), (36, '!define MULTIUSER_MUI'), (37, '!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_KEY ""${REGKEY}""'), (38, '!define MULTIUSER_INSTALLMODE_DEFAULT_REGISTRY_VALUENAME MultiUserInstallMode'), (39, '!define MULTIUSER_INSTALLMODE_COMMANDLINE'), (40, '!define MULTIUSER_INSTALLMODE_INSTDIR ${PRODUCT_NAME}'), (41, '!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_KEY ""${REGKEY}""'), (42, '!define MULTIUSER_INSTALLMODE_INSTDIR_REGISTRY_VALUE ""Path""'), (43, ''), (44, '# MUI Symbol Definitions'), (45, '!define MUI_ABORTWARNING'), (46, '!define MUI_COMPONENTSPAGE_SMALLDESC'), (47, '!define MUI_HEADERIMAGE'), (48, '!define MUI_HEADERIMAGE_BITMAP_NOSTRETCH'), (49, '!define MUI_ICON ""${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-install-blue-full.ico""'), (50, '!define MUI_FINISHPAGE_LINK ""http://code.google.com/p/tesseract-ocr/""'), (51, '!define MUI_FINISHPAGE_LINK_LOCATION ""http://code.google.com/p/tesseract-ocr/""'), (52, '!define MUI_FINISHPAGE_NOAUTOCLOSE'), (53, '!define MUI_FINISHPAGE_SHOWREADME ""notepad $INSTDIR\\doc\\README""'), (54, '!define MUI_FINISHPAGE_SHOWREADME_FUNCTION ShowReadme'), (55, '!define MUI_LICENSEPAGE_CHECKBOX'), (56, '!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM'), (57, '!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}'), (58, '!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup'), (59, '!define MUI_STARTMENUPAGE_DEFAULTFOLDER ${PRODUCT_NAME}'), (60, '!define MUI_UNICON ""${NSISDIR}\\Contrib\\Graphics\\Icons\\orange-uninstall.ico""'), (61, '!define MUI_UNFINISHPAGE_NOAUTOCLOSE'), (62, '!define MUI_WELCOMEPAGE_TITLE_3LINES'), (63, ''), (64, '# Included files'), (65, '!include MultiUser.nsh'), (66, '!include Sections.nsh'), (67, '!include MUI2.nsh'), (68, '!include EnvVarUpdate.nsh'), (69, '!include LogicLib.nsh'), (70, '!include winmessages.nsh # include for some of the windows messages defines'), (71, ''), (72, '# Variables'), (73, 'Var StartMenuGroup'), (74, 'Var PathKey'), (75, '; Define user variables'), (76, 'Var OLD_KEY'), (77, ''), (78, '# Installer pages'), (79, '!insertmacro MUI_PAGE_WELCOME'), (80, '!insertmacro MUI_PAGE_LICENSE ""..\\COPYING""'), (81, '!insertmacro MULTIUSER_PAGE_INSTALLMODE'), (82, '!ifdef VERSION'), (83, '  Page custom PageReinstall PageLeaveReinstall'), (84, '!endif'), (85, '!insertmacro MUI_PAGE_DIRECTORY'), (86, '!insertmacro MUI_PAGE_COMPONENTS'), (87, '!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup'), (88, '!insertmacro MUI_PAGE_INSTFILES'), (89, '!insertmacro MUI_PAGE_FINISH'), (90, '!insertmacro MUI_UNPAGE_CONFIRM'), (91, '!insertmacro MUI_UNPAGE_INSTFILES'), (92, ''), (93, '# Languages'), (94, '!insertmacro MUI_LANGUAGE ""English""'), (95, '!insertmacro MUI_LANGUAGE ""Italian""'), (96, '!insertmacro MUI_LANGUAGE ""Russian""'), (97, '!insertmacro MUI_LANGUAGE ""Slovak""'), (98, '!insertmacro MUI_LANGUAGE ""Spanish""'), (99, '!insertmacro MUI_LANGUAGE ""SpanishInternational""'), (100, ''), (101, '# Installer attributes'), (102, 'ShowInstDetails show'), (103, 'InstProgressFlags smooth colored'), (104, 'XPStyle on'), (105, 'SpaceTexts'), (106, 'CRCCheck on'), (107, 'InstProgressFlags smooth colored'), (108, 'CRCCheck On  # Do a CRC check before installing'), (109, 'InstallDir ""$PROGRAMFILES\\Tesseract-OCR""'), (110, '# Name of program and file'), (111, '!ifdef VERSION'), (112, 'OutFile tesseract-ocr-setup-${VERSION}.exe'), (113, '!else'), (114, 'OutFile tesseract-ocr-setup.exe'), (115, '!endif'), (116, ''), (117, '!macro AddToPath'), (118, '  # TODO(zdenop): Check if $INSTDIR is in path. If yes, that do not append it'), (119, '  # append bin path to user PATH environment variable'), (120, '  StrCpy $PathKey ""HKLM""'), (121, '  StrCmp $MultiUser.InstallMode ""AllUsers"" +2'), (122, '    StrCpy $PathKey ""HKCU""'), (123, '  DetailPrint ""Setting PATH to $INSTDIR at $PathKey""'), (124, '  ${EnvVarUpdate} $0 ""PATH"" ""A"" ""$PathKey"" ""$INSTDIR""'), (125, '  ; make sure windows knows about the change'), (126, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (127, '!macroend'), (128, ''), (129, '!macro RemoveTessdataPrefix'), (130, ""  ReadRegStr $R2 ${env_hklm} 'TESSDATA_PREFIX'""), (131, ""  ReadRegStr $R3 ${env_hkcu} 'TESSDATA_PREFIX'""), (132, '  StrCmp $R2 """" Next1 0'), (133, '    DetailPrint ""Removing $R2 from HKLM Environment...""'), (134, '    DeleteRegValue ${env_hklm} TESSDATA_PREFIX  # This only empty variable, but do not remove it!'), (135, '    ${EnvVarUpdate} $0 ""TESSDATA_PREFIX""  ""R"" ""HKLM"" $R1'), (136, '  Next1:'), (137, '    StrCmp $R3 """" Next2 0'), (138, '      DetailPrint ""Removing $R3 from HKCU Environment...""'), (139, '      DeleteRegValue ${env_hkcu} ""TESSDATA_PREFIX""'), (140, '  Next2:'), (141, '    # make sure windows knows about the change'), (142, '    SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (143, '!macroend'), (144, ''), (145, '!macro SetTESSDATA'), (146, '  !insertmacro RemoveTessdataPrefix'), (147, '  StrCpy $PathKey ""HKLM""'), (148, '  StrCmp $MultiUser.InstallMode ""AllUsers"" +2'), (149, '    StrCpy $PathKey ""HKCU""'), (150, '  DetailPrint ""Setting TESSDATA_PREFIX at $PathKey""'), (151, '  ${EnvVarUpdate} $0 ""TESSDATA_PREFIX"" ""A"" ""$PathKey"" ""$INSTDIR\\""'), (152, '  # make sure windows knows about the change'), (153, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (154, '!macroend'), (155, ''), (156, '!macro Download_Lang_Data Lang'), (157, '  IfFileExists $TEMP/${Lang} dlok'), (158, '  ;StrCpy $1 ${Lang}'), (159, '  ;StrCpy $2 ""$INSTDIR\\tessdata\\$1""'), (160, '  ;inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/$1"" $2 /end'), (161, '  inetc::get /caption ""Downloading ${Lang}"" /popup """" ""${FILE_URL}/${Lang}"" $TEMP/${Lang} /end'), (162, '    Pop $0 # return value = exit code, ""OK"" if OK'), (163, '    StrCmp $0 ""OK"" dlok'), (164, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of ${Lang}: $0. Click OK to continue."" /SD IDOK'), (165, '    Goto error'), (166, '  dlok:'), (167, '    DetailPrint ""Extracting ${Lang}""'), (168, '    untgz::extract ""-j"" ""-d"" ""$INSTDIR\\tessdata\\"" ""$TEMP/${Lang}""'), (169, '    # tarbal has to be created with option --old-archive otherwise there will be error'), (170, '    # untgz::extract failed because of checksum'), (171, '  error:'), (172, '    Delete ""$TEMP\\${Lang}""'), (173, '!macroend'), (174, ''), (175, '!macro Download_Leptonica DataUrl'), (176, '  IfFileExists $TEMP/leptonica.zip dlok'), (177, '  inetc::get /caption ""Downloading $1"" /popup """" ${DataUrl} $TEMP/leptonica.zip /end'), (178, '    Pop $R0 # return value = exit code, ""OK"" if OK'), (179, '    StrCmp $R0 ""OK"" dlok'), (180, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK'), (181, '    Goto error'), (182, '  dlok:'), (183, '    nsisunz::UnzipToLog ""$TEMP/leptonica.zip"" ""$INSTDIR""'), (184, '    Pop $R0'), (185, '    StrCmp $R0 ""success"" +2'), (186, '        MessageBox MB_OK ""Decompression of leptonica failed: $R0""'), (187, '        Goto error'), (188, '  error:'), (189, '    Delete ""$TEMP\\leptonica.zip""'), (190, '!macroend'), (191, ''), (192, '!macro Download_Lang_Data_gz Lang'), (193, '  ;IfFileExists $TEMP/${Lang} dlok'), (194, '  StrCpy $1 ${Lang}'), (195, '  StrCpy $2 ""$INSTDIR\\tessdata\\$1""'), (196, '  inetc::get /caption ""Downloading $1"" /popup """" ""http://tesseract-ocr.googlecode.com/files/$1"" $2 /end'), (197, '    Pop $0 # return value = exit code, ""OK"" if OK'), (198, '    StrCmp $0 ""OK"" dlok'), (199, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $0. Click OK to continue."" /SD IDOK'), (200, '    Goto error'), (201, '  dlok:'), (202, '    ExecWait  \'""$INSTDIR\\gzip.exe"" -d ""$2""\''), (203, '  error:'), (204, '!macroend'), (205, ''), (206, '!macro Download_Data2 Filename Komp'), (207, '  IfFileExists $TEMP/${Filename} dlok'), (208, '  inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/${Filename}"" $TEMP/${Filename} /end'), (209, '    Pop $R0 # return value = exit code, ""OK"" if OK'), (210, '    StrCmp $R0 ""OK"" dlok'), (211, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK'), (212, '    Goto error'), (213, '  dlok:'), (214, '    ${If} ${Komp} == ""tgz""'), (215, '        DetailPrint ""Extracting ${Filename}""'), (216, '        untgz::extract ""-d"" ""$INSTDIR\\.."" ""$TEMP\\${Filename}""'), (217, '        Goto install'), (218, '    ${EndIf}'), (219, '    ${If} ${Komp} == ""zip""'), (220, '        DetailPrint ""Extracting ${Filename}""'), (221, '        nsisunz::UnzipToLog ""$TEMP\\${Filename}"" ""$INSTDIR\\""'), (222, '        Goto install'), (223, '    ${EndIf}'), (224, '     MessageBox MB_OK|MB_ICONEXCLAMATION ""Unsupported compression!""'), (225, '  install:'), (226, '        Pop $R0'), (227, '        StrCmp $R0 ""success"" +3'), (228, '            MessageBox MB_OK ""Decompression of ${Filename} failed: $R0""'), (229, '            Goto error'), (230, '    Delete ""$TEMP\\${Filename}""'), (231, '  error:'), (232, '!macroend'), (233, ''), (234, '!macro Download_Data Filename Komp'), (235, '  IfFileExists $TEMP/${Filename} dlok'), (236, '  inetc::get /caption ""Downloading $1"" /popup """" ""${FILE_URL}/${Filename}"" $TEMP/${Filename} /end'), (237, '    Pop $R0 # return value = exit code, ""OK"" if OK'), (238, '    StrCmp $R0 ""OK"" dlok'), (239, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""http download error. Download Status of $1: $R0. Click OK to continue."" /SD IDOK'), (240, '    Goto end'), (241, '  dlok:'), (242, '    ${If} ${Komp} == ""tgz""'), (243, '        untgz::extract ""-d"" ""$INSTDIR"" ""$TEMP\\${Filename}""'), (244, '        Goto install'), (245, '    ${EndIf}'), (246, '    ${If} ${Komp} == ""zip""'), (247, '        nsisunz::UnzipToLog ""$TEMP\\${Filename}"" ""$INSTDIR""'), (248, '        Goto install'), (249, '    ${EndIf}'), (250, '     MessageBox MB_OK|MB_ICONEXCLAMATION ""Unsupported compression!""'), (251, '  install:'), (252, '        Pop $R0'), (253, '        StrCmp $R0 ""success"" +3'), (254, '            MessageBox MB_OK ""Decompression of ${Filename} failed: $R0""'), (255, '            Goto end'), (256, '    Delete ""$TEMP\\${Filename}""'), (257, '    ${If} ${Komp} == ""zip""'), (258, '        Goto end'), (259, '    ${EndIf}'), (260, '    CopyFiles ""$TEMP\\Tesseract-OCR\\*"" ""$INSTDIR""'), (261, '    RMDir /r ""$TEMP\\Tesseract-OCR""'), (262, '  end:'), (263, '!macroend'), (264, ''), (265, 'Section -Main SEC0000'), (266, '  ; mark as read only component'), (267, '  SectionIn RO'), (268, '  SetOutPath ""$INSTDIR""'), (269, '  # files included in distribution'), (270, '  File LIB_Release\\tesseract.exe'), (271, '  File gzip.exe'), (272, '  File tar.exe'), (273, '  CreateDirectory ""$INSTDIR\\java""'), (274, '  SetOutPath ""$INSTDIR\\java""'), (275, '  File ..\\java\\ScrollView.jar'), (276, '  CreateDirectory ""$INSTDIR\\tessdata""'), (277, '  CreateDirectory ""$INSTDIR\\tessdata\\configs""'), (278, '  SetOutPath ""$INSTDIR\\tessdata\\configs""'), (279, '  File ..\\tessdata\\configs\\ambigs.train'), (280, '  File ..\\tessdata\\configs\\api_config'), (281, '  File ..\\tessdata\\configs\\bigram'), (282, '  File ..\\tessdata\\configs\\box.train'), (283, '  File ..\\tessdata\\configs\\box.train.stderr'), (284, '  File ..\\tessdata\\configs\\digits'), (285, '  File ..\\tessdata\\configs\\hocr'), (286, '  File ..\\tessdata\\configs\\inter'), (287, '  File ..\\tessdata\\configs\\kannada'), (288, '  File ..\\tessdata\\configs\\linebox'), (289, '  File ..\\tessdata\\configs\\logfile'), (290, '  File ..\\tessdata\\configs\\makebox'), (291, '  File ..\\tessdata\\configs\\quiet'), (292, '  File ..\\tessdata\\configs\\rebox'), (293, '  File ..\\tessdata\\configs\\strokewidth'), (294, '  File ..\\tessdata\\configs\\unlv'), (295, '  CreateDirectory ""$INSTDIR\\tessdata\\tessconfigs""'), (296, '  SetOutPath ""$INSTDIR\\tessdata\\tessconfigs""'), (297, '  File ..\\tessdata\\tessconfigs\\batch'), (298, '  File ..\\tessdata\\tessconfigs\\batch.nochop'), (299, '  File ..\\tessdata\\tessconfigs\\matdemo'), (300, '  File ..\\tessdata\\tessconfigs\\msdemo'), (301, '  File ..\\tessdata\\tessconfigs\\nobatch'), (302, '  File ..\\tessdata\\tessconfigs\\segdemo'), (303, '  CreateDirectory ""$INSTDIR\\doc""'), (304, '  SetOutPath ""$INSTDIR\\doc""'), (305, '  File ..\\AUTHORS'), (306, '  File ..\\COPYING'), (307, '  File ..\\eurotext.tif'), (308, '  File ..\\phototest.tif'), (309, '  File ..\\README'), (310, '  File ..\\ReleaseNotes'), (311, 'SectionEnd'), (312, ''), (313, 'Section ""Traning Tools"" SecTr'), (314, '  SectionIn 1'), (315, '  SetOutPath ""$INSTDIR""'), (316, '  File LIB_Release\\cntraining.exe'), (317, '  File LIB_Release\\combine_tessdata.exe'), (318, '  File LIB_Release\\mftraining.exe'), (319, '  File LIB_Release\\unicharset_extractor.exe'), (320, '  File LIB_Release\\wordlist2dawg.exe'), (321, '  File LIB_Release\\classifier_tester.exe'), (322, '  File LIB_Release\\dawg2wordlist.exe'), (323, '  File LIB_Release\\ambiguous_words.exe'), (324, '  File LIB_Release\\shapeclustering.exe'), (325, 'SectionEnd'), (326, ''), (327, 'Section -post SEC0001'), (328, '  ;Store installation folder - we use allways HKLM!'), (329, '  WriteRegStr HKLM ""${REGKEY}"" ""Path"" ""$INSTDIR""'), (330, '  WriteRegStr HKLM ""${REGKEY}"" ""Mode"" $MultiUser.InstallMode'), (331, '  WriteRegStr HKLM ""${REGKEY}"" ""InstallDir"" ""$INSTDIR""'), (332, '  WriteRegStr HKLM ""${REGKEY}"" ""CurrentVersion"" ""${VERSION}""'), (333, '  WriteRegStr HKLM ""${REGKEY}"" ""Uninstaller"" ""$INSTDIR\\uninstall.exe""'), (334, '  ;WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Run"" ""Tesseract-OCR"" ""$INSTDIR\\tesseract.exe""'), (335, '  ; Register to Add/Remove program in control panel'), (336, '  WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""DisplayName"" ""${PRODUCT_NAME} - open source OCR engine""'), (337, '  WriteRegStr HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" DisplayVersion ""${VERSION}""'), (338, '  WriteRegStr HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" Publisher ""${PRODUCT_PUBLISHER}""'), (339, '  WriteRegStr HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" URLInfoAbout ""${PRODUCT_WEB_SITE}""'), (340, '  WriteRegStr HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""DisplayIcon"" ""$INSTDIR\\uninstall.exe""'), (341, '  WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""UninstallString"" ""$INSTDIR\\uninstall.exe""'), (342, '  WriteRegStr HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""QuietUninstallString"" \'""$INSTDIR\\uninstall.exe"" /S\''), (343, '  WriteRegDWORD HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" NoModify 1'), (344, '  WriteRegDWORD HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" NoRepair 1'), (345, '  ;Create uninstaller'), (346, '  WriteUninstaller ""$INSTDIR\\Uninstall.exe""'), (347, '  ;ExecShell ""open"" ""http://code.google.com/p/tesseract-ocr/""'), (348, '  ;ExecShell ""open"" \'""$INSTDIR""\''), (349, '  ;BringToFront'), (350, 'SectionEnd'), (351, ''), (352, 'Section ""Shortcuts creation"" SecCS'), (353, '  SetOutPath $INSTDIR'), (354, '  CreateDirectory ""$SMPROGRAMS\\${PRODUCT_NAME}""'), (355, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Console.lnk"" $WINDIR\\system32\\CMD.EXE'), (356, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Homepage.lnk"" ""${PRODUCT_WEB_SITE}""'), (357, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\ReadMe.lnk"" ""${PRODUCT_WEB_SITE}/wiki/ReadMe""'), (358, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\FAQ.lnk"" ""${PRODUCT_WEB_SITE}/wiki/FAQ""'), (359, '  CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\Uninstall.lnk"" ""$INSTDIR\\uninstall.exe"" """" ""$INSTDIR\\uninstall.exe"" 0'), (360, '  ;CreateShortCut ""$DESKTOP\\Tesseract-OCR.lnk"" ""$INSTDIR\\tesseract.exe"" """" ""$INSTDIR\\tesseract.exe"" 0'), (361, '  ;CreateShortCut ""$QUICKLAUNCH\\.lnk"" ""$INSTDIR\\tesseract.exe"" """" ""$INSTDIR\\tesseract.exe"" 0'), (362, 'SectionEnd'), (363, ''), (364, 'SectionGroup ""Registry setttings"" SecRS'), (365, '    Section ""Add to Path"" SecRS_path'), (366, '        !insertmacro AddToPath'), (367, '    SectionEnd'), (368, '    Section ""Set TESSDATA_PREFIX variable"" SecRS_tessdata'), (369, '        !insertmacro SetTESSDATA'), (370, '    SectionEnd'), (371, 'SectionGroupEnd'), (372, ''), (373, 'SectionGroup ""Tesseract development files"" SecGrp_dev'), (374, '    Section /o ""Download and install tesseract libraries including header files"" SecLang_tlib'), (375, '    !insertmacro Download_Data2 tesseract-ocr-3.02.02-win32-lib-include-dirs.zip zip'), (376, '    CopyFiles $INSTDIR\\lib\\libtesseract*.dll $INSTDIR\\  ; $INSTDIR is in the path!'), (377, '    Delete $INSTDIR\\lib\\libtesseract*.dll'), (378, '    SectionEnd'), (379, '    Section /o ""Download and install leptonica 1.68 libraries including header files"" SecLang_llib'), (380, '    !insertmacro Download_Leptonica http://leptonica.org/source/leptonica-1.68-win32-lib-include-dirs.zip'), (381, '    CopyFiles $INSTDIR\\lib\\liblept*.dll $INSTDIR\\  ; move to path'), (382, '    Delete $INSTDIR\\lib\\liblept*.dll'), (383, '    SectionEnd'), (384, '    Section /o ""Download and install VC++ 2008 tesseract API example solution"" SecLang_example'), (385, '    !insertmacro Download_Data2 tesseract-ocr-API-Example-vs2008.zip zip'), (386, '    SectionEnd'), (387, '    Section /o ""Download and install tesseract source code"" SecLang_source'), (388, '    !insertmacro Download_Data tesseract-ocr-3.02.02.tar.gz tgz'), (389, '    SectionEnd'), (390, '    Section /o ""Download and install VS C++ 2008 solution for tesseract"" SecLang_vs2008'), (391, '    !insertmacro Download_Data tesseract-ocr-3.02-vs2008.zip zip'), (392, '    SectionEnd'), (393, '    Section /o ""Download and install doxygen documentation for tesseract"" SecLang_doxygen'), (394, '    !insertmacro Download_Data tesseract-ocr-3.02.02-doc-html.tar.gz tgz'), (395, '    CreateShortCut ""$SMPROGRAMS\\${PRODUCT_NAME}\\DoxygenDoc.lnk"" ""$INSTDIR\\tesseract-ocr\\doc\\html\\index.html""'), (396, '    SectionEnd'), (397, 'SectionGroupEnd'), (398, ''), (399, '; Download language files'), (400, 'SectionGroup ""Language data"" SecGrp_LD'), (401, '    Section ""English language data"" SecLang_eng'), (402, '    SectionIn RO'), (403, '      SetOutPath ""$INSTDIR\\tessdata""'), (404, '      File ..\\tessdata\\eng.*'), (405, '    SectionEnd'), (406, ''), (407, '    Section ""Orientation and script detection data"" SecLang_osd'), (408, '    SectionIn 1'), (409, '      SetOutPath ""$INSTDIR\\tessdata""'), (410, '     File ..\\tessdata\\osd.*'), (411, '    SectionEnd'), (412, ''), (413, '    Section /o ""Download and install Math / equation detection module"" SecLang_equ'), (414, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.equ.tar.gz'), (415, '    SectionEnd'), (416, ''), (417, '    Section /o ""Download and install Afrikaans language data"" SecLang_afr'), (418, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.afr.tar.gz'), (419, '    SectionEnd'), (420, ''), (421, '    Section /o ""Download and install Albanian language data"" SecLang_sqi'), (422, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.sqi.tar.gz'), (423, '    SectionEnd'), (424, ''), (425, '    Section /o ""Download and install Arabic language data"" SecLang_ara'), (426, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ara.tar.gz'), (427, '    SectionEnd'), (428, ''), (429, '    Section /o ""Download and install Azerbaijani language data"" SecLang_aze'), (430, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.aze.tar.gz'), (431, '    SectionEnd'), (432, ''), (433, '    Section /o ""Download and install Basque language data"" SecLang_eus'), (434, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.eus.tar.gz'), (435, '    SectionEnd'), (436, ''), (437, '    Section /o ""Download and install Belarusian language data"" SecLang_bel'), (438, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.bel.tar.gz'), (439, '    SectionEnd'), (440, ''), (441, '    Section /o ""Download and install Bengali language data"" SecLang_ben'), (442, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ben.tar.gz'), (443, '    SectionEnd'), (444, ''), (445, '    Section /o ""Download and install Bulgarian language data"" SecLang_bul'), (446, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.bul.tar.gz'), (447, '    SectionEnd'), (448, ''), (449, '    Section /o ""Download and install Catalan language data"" SecLang_cat'), (450, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.cat.tar.gz'), (451, '    SectionEnd'), (452, ''), (453, '    Section /o ""Download and install Cherokee language data"" SecLang_chr'), (454, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chr.tar.gz'), (455, '    SectionEnd'), (456, ''), (457, '    Section /o ""Download and install Chinese (Traditional) language data"" SecLang_chi_tra'), (458, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chi_tra.tar.gz'), (459, '    SectionEnd'), (460, ''), (461, '    Section /o ""Download and install Chinese (Simplified) language data"" SecLang_chi_sim'), (462, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.chi_sim.tar.gz'), (463, '    SectionEnd'), (464, ''), (465, '    Section /o ""Download and install Croatian language data"" SecLang_hrv'), (466, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hrv.tar.gz'), (467, '    SectionEnd'), (468, ''), (469, '    Section /o ""Download and install Czech language data"" SecLang_ces'), (470, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ces.tar.gz'), (471, '    SectionEnd'), (472, ''), (473, '    Section /o ""Download and install Danish language data"" SecLang_dan'), (474, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.dan.tar.gz'), (475, '    SectionEnd'), (476, ''), (477, '    Section /o ""Download and install Danish (Fraktur) language data"" SecLang_dan_frak'), (478, '    !insertmacro Download_Lang_Data_gz dan-frak.traineddata.gz'), (479, '    SectionEnd'), (480, ''), (481, '    Section /o ""Download and install Dutch language data"" SecLang_nld'), (482, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.nld.tar.gz'), (483, '    SectionEnd'), (484, ''), (485, '    Section /o ""Download and install English - Middle (1100-1500) language data"" SecLang_enm'), (486, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.enm.tar.gz'), (487, '    SectionEnd'), (488, ''), (489, '    Section /o ""Download and install Esperanto language data"" SecLang_epo'), (490, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.epo.tar.gz'), (491, '    SectionEnd'), (492, ''), (493, '    Section /o ""Download and install Estonian language data"" SecLang_est'), (494, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.est.tar.gz'), (495, '    SectionEnd'), (496, ''), (497, '    Section /o ""Download and install German language data"" SecLang_deu'), (498, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.deu.tar.gz'), (499, '    SectionEnd'), (500, ''), (501, '    Section /o ""Download and install German (Fraktur) language data"" SecLang_deu_frak'), (502, '    !insertmacro Download_Lang_Data_gz deu-frak.traineddata.gz'), (503, '    SectionEnd'), (504, ''), (505, '    Section /o ""Download and install Greek language data"" SecLang_ell'), (506, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ell.tar.gz'), (507, '    SectionEnd'), (508, ''), (509, '    Section /o ""Download and install Greek - Ancient language data"" SecLang_grc'), (510, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.grc.tar.gz'), (511, '    SectionEnd'), (512, ''), (513, '    Section /o ""Download and install Finnish language data"" SecLang_fin'), (514, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.fin.tar.gz'), (515, '    SectionEnd'), (516, ''), (517, '    Section /o ""Download and install Frankish language data"" SecLang_frk'), (518, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.frk.tar.gz'), (519, '    SectionEnd'), (520, ''), (521, '    Section /o ""Download and install French language data"" SecLang_fra'), (522, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.fra.tar.gz'), (523, '    SectionEnd'), (524, ''), (525, '    Section /o ""Download and install French - Middle(ca. 1400-1600) language data"" SecLang_frm'), (526, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.frm.tar.gz'), (527, '    SectionEnd'), (528, ''), (529, '    Section /o ""Download and install Hebrew language data"" SecLang_heb'), (530, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.heb.tar.gz'), (531, '    SectionEnd'), (532, ''), (533, '    Section /o ""Download and install Hebrew (community traning) language data"" SecLang_heb_com'), (534, '    !insertmacro Download_Lang_Data tesseract-ocr-3.01.heb-com.tar.gz'), (535, '    SectionEnd'), (536, ''), (537, '    Section /o ""Download and install Hindi language data"" SecLang_hin'), (538, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hin.tar.gz'), (539, '    SectionEnd'), (540, ''), (541, '    Section /o ""Download and install Hungarian language data"" SecLang_hun'), (542, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.hun.tar.gz'), (543, '    SectionEnd'), (544, ''), (545, '    Section /o ""Download and install Icelandic language data"" SecLang_isl'), (546, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.isl.tar.gz'), (547, '    SectionEnd'), (548, ''), (549, '    Section /o ""Download and install Indonesian language data"" SecLang_ind'), (550, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ind.tar.gz'), (551, '    SectionEnd'), (552, ''), (553, '    Section /o ""Download and install Italian language data"" SecLang_ita'), (554, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ita.tar.gz'), (555, '    SectionEnd'), (556, ''), (557, '    Section /o ""Download and install Italian (Old) language data"" SecLang_ita_old'), (558, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ita_old.tar.gz'), (559, '    SectionEnd'), (560, ''), (561, '    Section /o ""Download and install Japanese language data"" SecLang_jpn'), (562, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.jpn.tar.gz'), (563, '    SectionEnd'), (564, ''), (565, '    Section /o ""Download and install Kannada language data"" SecLang_kan'), (566, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.kan.tar.gz'), (567, '    SectionEnd'), (568, ''), (569, '    Section /o ""Download and install Korean language data"" SecLang_kor'), (570, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.kor.tar.gz'), (571, '    SectionEnd'), (572, ''), (573, '    Section /o ""Download and install Latvian language data"" SecLang_lav'), (574, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.lav.tar.gz'), (575, '    SectionEnd'), (576, ''), (577, '    Section /o ""Download and install Lithuanian language data"" SecLang_lit'), (578, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.lit.tar.gz'), (579, '    SectionEnd'), (580, ''), (581, '    Section /o ""Download and install Macedonian language data"" SecLang_mkd'), (582, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mkd.tar.gz'), (583, '    SectionEnd'), (584, ''), (585, '    Section /o ""Download and install Malay language data"" SecLang_msa'), (586, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.msa.tar.gz'), (587, '    SectionEnd'), (588, ''), (589, '    Section /o ""Download and install Malayalam language data"" SecLang_mal'), (590, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mal.tar.gz'), (591, '    SectionEnd'), (592, ''), (593, '    Section /o ""Download and install Maltese language data"" SecLang_mlt'), (594, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.mlt.tar.gz'), (595, '    SectionEnd'), (596, ''), (597, '    Section /o ""Download and install Norwegian language data"" SecLang_nor'), (598, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.nor.tar.gz'), (599, '    SectionEnd'), (600, ''), (601, '    Section /o ""Download and install Polish language data"" SecLang_pol'), (602, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.pol.tar.gz'), (603, '    SectionEnd'), (604, ''), (605, '    Section /o ""Download and install Portuguese language data"" SecLang_por'), (606, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.por.tar.gz'), (607, '    SectionEnd'), (608, ''), (609, '    Section /o ""Download and install Romanian language data"" SecLang_ron'), (610, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ron.tar.gz'), (611, '    SectionEnd'), (612, ''), (613, '    Section /o ""Download and install Russian language data"" SecLang_rus'), (614, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.rus.tar.gz'), (615, '    SectionEnd'), (616, ''), (617, '    Section /o ""Download and install Slovak language data"" SecLang_slk'), (618, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slk.tar.gz'), (619, '    SectionEnd'), (620, ''), (621, '    Section /o ""Download and install Slovak (Fraktur) language data"" SecLang_slk_frak'), (622, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slk_frak.tar.gz'), (623, '    SectionEnd'), (624, ''), (625, '    Section /o ""Download and install Slovenian language data"" SecLang_slv'), (626, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.slv.tar.gz'), (627, '    SectionEnd'), (628, ''), (629, '    Section /o ""Download and install Spanish language data"" SecLang_spa'), (630, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.spa.tar.gz'), (631, '    SectionEnd'), (632, ''), (633, '    Section /o ""Download and install Spanish (Old) language data"" SecLang_spa_old'), (634, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.spa_old.tar.gz'), (635, '    SectionEnd'), (636, ''), (637, '    Section /o ""Download and install Serbian language data"" SecLang_srp'), (638, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.srp.tar.gz'), (639, '    SectionEnd'), (640, ''), (641, '    Section /o ""Download and install Swahili language data"" SecLang_swa'), (642, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.swa.tar.gz'), (643, '    SectionEnd'), (644, ''), (645, '    Section /o ""Download and install Swedish language data"" SecLang_swe'), (646, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.swe.tar.gz'), (647, '    SectionEnd'), (648, ''), (649, '    Section /o ""Download and install Swedish (Fraktur) language data"" SecLang_swe_frak'), (650, '    !insertmacro Download_Lang_Data_gz swe-frak.traineddata.gz'), (651, '    SectionEnd'), (652, ''), (653, '    Section /o ""Download and install Tagalog language data"" SecLang_tgl'), (654, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tgl.tar.gz'), (655, '    SectionEnd'), (656, ''), (657, '    Section /o ""Download and install Tamil language data"" SecLang_tam'), (658, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tam.tar.gz'), (659, '    SectionEnd'), (660, ''), (661, '    Section /o ""Download and install Telugu language data"" SecLang_tel'), (662, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tel.tar.gz'), (663, '    SectionEnd'), (664, ''), (665, '    Section /o ""Download and install Thai language data"" SecLang_tha'), (666, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tha.tar.gz'), (667, '    SectionEnd'), (668, ''), (669, '    Section /o ""Download and install Turkish language data"" SecLang_tur'), (670, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.tur.tar.gz'), (671, '    SectionEnd'), (672, ''), (673, '    Section /o ""Download and install Ukrainian language data"" SecLang_ukr'), (674, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.ukr.tar.gz'), (675, '    SectionEnd'), (676, ''), (677, '    Section /o ""Download and install Vietnamese language data"" SecLang_vie'), (678, '    !insertmacro Download_Lang_Data tesseract-ocr-3.02.vie.tar.gz'), (679, '    SectionEnd'), (680, 'SectionGroupEnd'), (681, ''), (682, ';--------------------------------'), (683, ';Descriptions'), (684, '  ; At first we need to localize installer for languages which supports well in tesseract: Eng, Spa, Ger, Ita, Dutch + Russian (it is authors native language)'), (685, '  ;Language strings'), (686, '  LangString DESC_SEC0001 ${LANG_RUSSIAN} ""Установочные файлы.""'), (687, '  ;LangString DESC_SecHelp ${LANG_RUSSIAN} ""Справочная информация.""'), (688, '  LangString DESC_SecCS    ${LANG_RUSSIAN} ""Добавить ярлыки в меню Пуск""'), (689, ''), (690, '  LangString DESC_SEC0001 ${LANG_ENGLISH} ""Installation files.""'), (691, '  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Help information.""'), (692, '  LangString DESC_SecCS    ${LANG_ENGLISH} ""Add shortcuts to Start menu.""'), (693, ''), (694, '  LangString DESC_SEC0001 ${LANG_ITALIAN} ""File di installazione.""'), (695, '  ;LangString DESC_SecHelp ${LANG_ITALIAN} ""Guida di informazioni.""'), (696, '  LangString DESC_SecCS    ${LANG_ITALIAN} ""Aggiungere collegamenti al menu Start.""'), (697, ''), (698, '  LangString DESC_SEC0001 ${LANG_SLOVAK} ""Súbory inštalácie.""'), (699, '  ;LangString DESC_SecHelp ${LANG_ENGLISH} ""Pomocné informácie.""'), (700, '  LangString DESC_SecCS    ${LANG_SLOVAK} ""Pridať odkaz do Start menu.""'), (701, ''), (702, '  LangString DESC_SEC0001 ${LANG_SPANISH} ""Los archivos de instalación.""'), (703, '  ;LangString DESC_SecHelp ${LANG_SPANISH} ""Información de ayuda.""'), (704, '  LangString DESC_SecCS    ${LANG_SPANISH} ""Ańadir accesos directos al menú Inicio.""'), (705, ''), (706, '  LangString DESC_SEC0001 ${LANG_SPANISHINTERNATIONAL} ""Los archivos de instalación.""'), (707, '  ;LangString DESC_SecHelp ${LANG_SPANISHINTERNATIONAL} ""Información de ayuda.""'), (708, '  LangString DESC_SecCS    ${LANG_SPANISHINTERNATIONAL} ""Ańadir accesos directos al menú Inicio.""'), (709, ''), (710, '  ;Assign language strings to sections'), (711, '  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN'), (712, '    !insertmacro MUI_DESCRIPTION_TEXT ${SEC0001} $(DESC_SEC0001)'), (713, '    !insertmacro MUI_DESCRIPTION_TEXT ${SecCS} $(DESC_SecCS)'), (714, '  !insertmacro MUI_FUNCTION_DESCRIPTION_END'), (715, ''), (716, ';--------------------------------'), (717, ';Uninstaller Section'), (718, ''), (719, ';Section /o -un.Main UNSEC0000'), (720, 'Section -un.Main UNSEC0000'), (721, '  DetailPrint ""Removing everything""'), (722, '  Delete ""$SMPROGRAMS\\${PRODUCT_NAME}\\*.*""'), (723, '  RMDir  ""$SMPROGRAMS\\${PRODUCT_NAME}""'), (724, '  DetailPrint ""Removing registry info""'), (725, '  DeleteRegKey HKLM ""Software\\Tesseract-OCR""'), (726, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (727, '  ${un.EnvVarUpdate} $0 ""PATH"" ""R"" HKLM $INSTDIR'), (728, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (729, '  DeleteRegValue HKLM ""Environment"" ""TESSDATA_PREFIX""'), (730, '  SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 ""STR:Environment"" /TIMEOUT=5000'), (731, ''), (732, '  # remove the Add/Remove information'), (733, '  DeleteRegKey HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}""'), (734, '  Delete ""$INSTDIR\\Uninstall.exe""'), (735, '  DeleteRegValue HKLM ""${REGKEY}"" Path'), (736, '  DeleteRegKey /IfEmpty HKLM ""${REGKEY}\\Components""'), (737, '  DeleteRegKey /IfEmpty HKLM ""${REGKEY}""'), (738, '  RMDir /r ""$INSTDIR""'), (739, 'SectionEnd'), (740, ''), (741, 'Function PageReinstall'), (742, ''), (743, 'FunctionEnd'), (744, ''), (745, 'Function PageLeaveReinstall'), (746, ''), (747, 'FunctionEnd'), (748, ''), (749, '!macro REMOVE_REGKEY OLD_KEY'), (750, '  StrCmp ${OLD_KEY} HKLM 0 +3'), (751, '    DeleteRegKey HKLM ""${REGKEY}""'), (752, '    Goto End'), (753, '  DeleteRegKey HKCU ""${REGKEY}""'), (754, '  End:'), (755, '!macroend'), (756, ''), (757, 'Function .onInit'), (758, '  Call PreventMultipleInstances'), (759, '  ;RequestExecutionLevel admin'), (760, '  !insertmacro MULTIUSER_INIT'), (761, ''), (762, '  ; is tesseract already installed?'), (763, '  ReadRegStr $R0 HKCU ""${REGKEY}"" ""CurrentVersion""'), (764, '  StrCpy $OLD_KEY HKCU'), (765, '  StrCmp $R0 """" test1 test2'), (766, '  test1:'), (767, '    ReadRegStr $R0 HKLM ""${REGKEY}"" ""CurrentVersion""'), (768, '    StrCpy $OLD_KEY HKLM'), (769, '    StrCmp $R0 """" SkipUnInstall'), (770, '  test2:'), (771, '    MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Tesseract-ocr version $R0 is installed (in $OLD_KEY)! Do you want to uninstall it first?$\\nUninstall will delete all files in \'$INSTDIR\'!"" \\'), (772, '       /SD IDYES IDNO SkipUnInstall IDYES UnInstall'), (773, '  UnInstall:'), (774, '    StrCmp $OLD_KEY ""HKLM"" UnInst_hklm'), (775, '       DetailPrint ""CurrentUser:""'), (776, '       readRegStr $R1 HKCU ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""UninstallString""'), (777, '       Goto try_uninstall'), (778, '    UnInst_hklm:'), (779, '       DetailPrint ""UnInst_hklm""'), (780, '       readRegStr $R1 HKLM ""Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${PRODUCT_NAME}"" ""UninstallString""'), (781, '    try_uninstall:'), (782, '      ClearErrors'), (783, ""      ExecWait '$R1 _?=$INSTDIR'$0""), (784, '      StrCmp $0 0 0 +3   ; Check if unstaller finished ok. If yes, than try to remove it from installer'), (785, '        !insertmacro REMOVE_REGKEY ${OLD_KEY}'), (786, '        Goto SkipUnInstall'), (787, '      messagebox mb_ok ""Uninstaller failed:\\n$0\\n\\nYou need to remove program manually.""'), (788, '  SkipUnInstall:'), (789, '  MessageBox MB_YESNO|MB_ICONQUESTION ""Do you want to install ${PRODUCT_NAME} ${VERSION}?"" \\'), (790, '    /SD IDYES IDNO no IDYES yes'), (791, '  no:'), (792, '    SetSilent silent'), (793, '    Goto done'), (794, '  yes:'), (795, '    ;InitPluginsDir'), (796, '    ;File /oname=$PLUGINSDIR\\splash.bmp ""${NSISDIR}\\Contrib\\Graphics\\Header\\nsis.bmp""'), (797, '    ;File /oname=$PLUGINSDIR\\splash.bmp ""new.bmp""'), (798, '    ;advsplash::show 1000 600 400 -1 $PLUGINSDIR\\splash'), (799, ""    ;Pop $0          ; $0 has '1' if the user closed the splash screen early,""), (800, ""                    ; '0' if everything closed normal, and '-1' if some error occured.""), (801, '    ;IfFileExists $INSTDIR\\loadmain.exe PathGood'), (802, '  done:'), (803, '    ; Make selection based on System language ID'), (804, ""    System::Call 'kernel32::GetSystemDefaultLangID() i .r0'""), (805, '    ;http://msdn.microsoft.com/en-us/library/dd318693%28v=VS.85%29.aspx'), (806, '    StrCmp $0 ""1078"" Afrikaans'), (807, '    StrCmp $0 ""1052"" Albanian'), (808, '    StrCmp $0 ""5121"" Arabic'), (809, '    StrCmp $0 ""1068"" Azerbaijani'), (810, '    StrCmp $0 ""1069"" Basque'), (811, '    StrCmp $0 ""1059"" Belarusian'), (812, '    StrCmp $0 ""1093"" Bengali'), (813, '    StrCmp $0 ""1026"" Bulgarian'), (814, '    StrCmp $0 ""1027"" Catalan'), (815, '    StrCmp $0 ""1116"" Cherokee'), (816, '    StrCmp $0 ""31748"" Chinese_tra'), (817, '    StrCmp $0 ""4"" Chinese_sim'), (818, '    StrCmp $0 ""26"" Croatian'), (819, '    StrCmp $0 ""1029"" Czech'), (820, '    StrCmp $0 ""1030"" Danish'), (821, '    StrCmp $0 ""2067"" Dutch'), (822, '    StrCmp $0 ""1061"" Estonian'), (823, '    StrCmp $0 ""3079"" German'), (824, '    StrCmp $0 ""1032"" Greek'), (825, '    StrCmp $0 ""1035"" Finnish'), (826, '    StrCmp $0 ""2060"" French'), (827, '    StrCmp $0 ""1037"" Hebrew'), (828, '    StrCmp $0 ""1081"" Hindi'), (829, '    StrCmp $0 ""1038"" Hungarian'), (830, '    StrCmp $0 ""1039"" Icelandic'), (831, '    StrCmp $0 ""1057"" Indonesian'), (832, '    StrCmp $0 ""1040"" Italian'), (833, '    StrCmp $0 ""1041"" Japanese'), (834, '    StrCmp $0 ""1099"" Kannada'), (835, '    StrCmp $0 ""1042"" Korean'), (836, '    StrCmp $0 ""1062"" Latvian'), (837, '    StrCmp $0 ""1063"" Lithuanian'), (838, '    StrCmp $0 ""1071"" Macedonian'), (839, '    StrCmp $0 ""1100"" Malayalam'), (840, '    StrCmp $0 ""2110"" Malay'), (841, '    StrCmp $0 ""1082"" Maltese'), (842, '    StrCmp $0 ""1044"" Norwegian'), (843, '    StrCmp $0 ""1045"" Polish'), (844, '    StrCmp $0 ""1046"" Portuguese'), (845, '    StrCmp $0 ""1048"" Romanian'), (846, '    StrCmp $0 ""1049"" Russian'), (847, '    StrCmp $0 ""1051"" Slovak'), (848, '    StrCmp $0 ""1060"" Slovenian'), (849, '    StrCmp $0 ""11274"" Spanish'), (850, '    StrCmp $0 ""2074"" Serbian'), (851, '    StrCmp $0 ""1089"" Swahili'), (852, '    StrCmp $0 ""2077"" Swedish'), (853, '    StrCmp $0 ""1097"" Tamil'), (854, '    StrCmp $0 ""1098"" Telugu'), (855, '    StrCmp $0 ""1054"" Thai'), (856, '    StrCmp $0 ""1055"" Turkish'), (857, '    StrCmp $0 ""1058"" Ukrainian'), (858, '    StrCmp $0 ""1066"" Vietnamese'), (859, ''), (860, '    Goto lang_end'), (861, ''), (862, '    Afrikaans: !insertmacro SelectSection ${SecLang_afr}'), (863, '            Goto lang_end'), (864, '    Albanian: !insertmacro SelectSection ${SecLang_sqi}'), (865, '            Goto lang_end'), (866, '    Arabic: !insertmacro SelectSection ${SecLang_ara}'), (867, '            Goto lang_end'), (868, '    Azerbaijani: !insertmacro SelectSection ${SecLang_aze}'), (869, '            Goto lang_end'), (870, '    Basque: !insertmacro SelectSection ${SecLang_eus}'), (871, '            Goto lang_end'), (872, '    Belarusian: !insertmacro SelectSection ${SecLang_bel}'), (873, '            Goto lang_end'), (874, '    Bengali: !insertmacro SelectSection ${SecLang_ben}'), (875, '            Goto lang_end'), (876, '    Bulgarian: !insertmacro SelectSection ${SecLang_bul}'), (877, '            Goto lang_end'), (878, '    Catalan: !insertmacro SelectSection ${SecLang_cat}'), (879, '            Goto lang_end'), (880, '    Cherokee: !insertmacro SelectSection ${SecLang_chr}'), (881, '            Goto lang_end'), (882, '    Chinese_tra: !insertmacro SelectSection ${SecLang_chi_tra}'), (883, '            Goto lang_end'), (884, '    Chinese_sim: !insertmacro SelectSection ${SecLang_chi_sim}'), (885, '            Goto lang_end'), (886, '    Croatian: !insertmacro SelectSection ${SecLang_hrv}'), (887, '            Goto lang_end'), (888, '    Czech: !insertmacro SelectSection ${SecLang_ces}'), (889, '            Goto lang_end'), (890, '    Danish: !insertmacro SelectSection ${SecLang_dan}'), (891, '            !insertmacro SelectSection ${SecLang_dan_frak}'), (892, '            Goto lang_end'), (893, '    Dutch: !insertmacro SelectSection ${SecLang_nld}'), (894, '            Goto lang_end'), (895, '    Estonian: !insertmacro SelectSection ${SecLang_hrv}'), (896, '            Goto lang_end'), (897, '    German: !insertmacro SelectSection ${SecLang_deu}'), (898, '            !insertmacro SelectSection ${SecLang_deu_frak}'), (899, '            Goto lang_end'), (900, '    Greek: !insertmacro SelectSection ${SecLang_ell}'), (901, '            !insertmacro SelectSection ${SecLang_grc}'), (902, '            Goto lang_end'), (903, '    Finnish: !insertmacro SelectSection ${SecLang_fin}'), (904, '            !insertmacro SelectSection ${SecLang_frm}'), (905, '            Goto lang_end'), (906, '    French: !insertmacro SelectSection ${SecLang_fra}'), (907, '            Goto lang_end'), (908, '    Hebrew: !insertmacro SelectSection ${SecLang_heb}'), (909, '            !insertmacro SelectSection ${SecLang_heb_com}'), (910, '            Goto lang_end'), (911, '    Hungarian: !insertmacro SelectSection ${SecLang_hin}'), (912, '            Goto lang_end'), (913, '    Hindi: !insertmacro SelectSection ${SecLang_hun}'), (914, '            Goto lang_end'), (915, '    Icelandic: !insertmacro SelectSection ${SecLang_isl}'), (916, '            Goto lang_end'), (917, '    Indonesian: !insertmacro SelectSection ${SecLang_ind}'), (918, '            Goto lang_end'), (919, '    Italian: !insertmacro SelectSection ${SecLang_ita}'), (920, '            !insertmacro SelectSection ${SecLang_ita_old}'), (921, '            Goto lang_end'), (922, '    Japanese: !insertmacro SelectSection ${SecLang_jpn}'), (923, '            Goto lang_end'), (924, '    Kannada: !insertmacro SelectSection ${SecLang_kan}'), (925, '            Goto lang_end'), (926, '    Korean: !insertmacro SelectSection ${SecLang_kor}'), (927, '            Goto lang_end'), (928, '    Latvian: !insertmacro SelectSection ${SecLang_lav}'), (929, '            Goto lang_end'), (930, '    Lithuanian: !insertmacro SelectSection ${SecLang_lit}'), (931, '            Goto lang_end'), (932, '    Macedonian: !insertmacro SelectSection ${SecLang_mkd}'), (933, '            Goto lang_end'), (934, '    Malayalam: !insertmacro SelectSection ${SecLang_msa}'), (935, '            Goto lang_end'), (936, '    Malay: !insertmacro SelectSection ${SecLang_mal}'), (937, '            Goto lang_end'), (938, '    Maltese: !insertmacro SelectSection ${SecLang_mlt}'), (939, '            Goto lang_end'), (940, '    Norwegian: !insertmacro SelectSection ${SecLang_nor}'), (941, '            Goto lang_end'), (942, '    Polish: !insertmacro SelectSection ${SecLang_pol}'), (943, '            Goto lang_end'), (944, '    Portuguese: !insertmacro SelectSection ${SecLang_por}'), (945, '            Goto lang_end'), (946, '    Romanian: !insertmacro SelectSection ${SecLang_ron}'), (947, '            Goto lang_end'), (948, '    Russian: !insertmacro SelectSection ${SecLang_rus}'), (949, '            Goto lang_end'), (950, '    Slovak: !insertmacro SelectSection ${SecLang_slk}'), (951, '            !insertmacro SelectSection ${SecLang_slk_frak}'), (952, '            Goto lang_end'), (953, '    Slovenian: !insertmacro SelectSection ${SecLang_slv}'), (954, '            Goto lang_end'), (955, '    Spanish: !insertmacro SelectSection ${SecLang_spa}'), (956, '            !insertmacro SelectSection ${SecLang_spa_old}'), (957, '            Goto lang_end'), (958, '    Serbian: !insertmacro SelectSection ${SecLang_srp}'), (959, '            Goto lang_end'), (960, '    Swahili: !insertmacro SelectSection ${SecLang_swa}'), (961, '            Goto lang_end'), (962, '    Swedish: !insertmacro SelectSection ${SecLang_swe}'), (963, '            !insertmacro SelectSection ${SecLang_swe_frak}'), (964, '            Goto lang_end'), (965, '    Tamil: !insertmacro SelectSection ${SecLang_tam}'), (966, '            Goto lang_end'), (967, '    Telugu: !insertmacro SelectSection ${SecLang_tel}'), (968, '            Goto lang_end'), (969, '    Thai: !insertmacro SelectSection ${SecLang_tha}'), (970, '            Goto lang_end'), (971, '    Turkish: !insertmacro SelectSection ${SecLang_tur}'), (972, '            Goto lang_end'), (973, '    Ukrainian: !insertmacro SelectSection ${SecLang_ukr}'), (974, '            Goto lang_end'), (975, '    Vietnamese: !insertmacro SelectSection ${SecLang_vie}'), (976, ''), (977, '    lang_end:'), (978, 'FunctionEnd'), (979, ''), (980, 'Function un.onInit'), (981, '   !insertmacro MULTIUSER_UNINIT'), (982, '   ;!insertmacro SELECT_UNSECTION Main ${UNSEC0000}'), (983, '   ;!insertmacro MUI_UNGETLANGUAGE'), (984, 'FunctionEnd'), (985, ''), (986, 'Function .onInstFailed'), (987, '  MessageBox MB_OK ""Installation failed.""'), (988, 'FunctionEnd'), (989, ''), (990, 'Function ShowReadme'), (991, '  Exec ""explorer.exe $INSTDIR\\doc\\README""'), (992, '  ;BringToFront'), (993, 'FunctionEnd'), (994, ''), (995, '; Prevent running multiple instances of the installer'), (996, 'Function PreventMultipleInstances'), (997, '  Push $R0'), (998, ""  System::Call 'kernel32::CreateMutexA(i 0, i 0, t ${PRODUCT_NAME}) ?e'""), (999, '  Pop $R0'), (1000, '  StrCmp $R0 0 +3'), (1001, '    MessageBox MB_OK|MB_ICONEXCLAMATION ""The installer is already running."" /SD IDOK'), (1002, '    Abort'), (1003, '  Pop $R0'), (1004, 'FunctionEnd')], 'deleted': []}",yes
src\training\classifier_tester.cpp,src\training\classifier_tester.cpp,7fd6d2388ae4b4e7772597774492134c5f8706be,9f8e07cdf96704bd5e13ea0185e5906daa08aee1,"Fix more typos in code comments and variable name

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -35,13 +35,13 @@ enum ClassifierName { CN_PRUNER, CN_FULL, CN_COUNT };
 
 static const char *names[] = {""pruner"", ""full""};
 
-static tesseract::ShapeClassifier *InitializeClassifier(const char *classifer_name,
+static tesseract::ShapeClassifier *InitializeClassifier(const char *classifier_name,
                                                         const UNICHARSET &unicharset, int argc,
                                                         char **argv, tesseract::TessBaseAPI **api) {
   // Decode the classifier string.
   ClassifierName classifier = CN_COUNT;
   for (int c = 0; c < CN_COUNT; ++c) {
-    if (strcmp(classifer_name, names[c]) == 0) {
+    if (strcmp(classifier_name, names[c]) == 0) {
       classifier = static_cast<ClassifierName>(c);
       break;
     }
@@ -75,7 +75,7 @@ static tesseract::ShapeClassifier *InitializeClassifier(const char *classifer_na
   } else if (classifier == CN_FULL) {
     shape_classifier = new tesseract::TessClassifier(false, classify);
   }
-  tprintf(""Testing classifier %s:\n"", classifer_name);
+  tprintf(""Testing classifier %s:\n"", classifier_name);
   return shape_classifier;
 }
 
","{'added': [(38, 'static tesseract::ShapeClassifier *InitializeClassifier(const char *classifier_name,'), (44, '    if (strcmp(classifier_name, names[c]) == 0) {'), (78, '  tprintf(""Testing classifier %s:\\n"", classifier_name);')], 'deleted': [(38, 'static tesseract::ShapeClassifier *InitializeClassifier(const char *classifer_name,'), (44, '    if (strcmp(classifer_name, names[c]) == 0) {'), (78, '  tprintf(""Testing classifier %s:\\n"", classifer_name);')]}",yes
src\wordrec\associate.h,src\wordrec\associate.h,7fd6d2388ae4b4e7772597774492134c5f8706be,9f8e07cdf96704bd5e13ea0185e5906daa08aee1,"Fix more typos in code comments and variable name

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -55,13 +55,13 @@ struct AssociateStats {
 
   float shape_cost;               // cost of blob shape
   bool bad_shape;                 // true if the shape of the blob is unacceptable
-  float full_wh_ratio;            // width-to-hight ratio + gap on the right
-  float full_wh_ratio_total;      // sum of width-to-hight ratios
+  float full_wh_ratio;            // width-to-height ratio + gap on the right
+  float full_wh_ratio_total;      // sum of width-to-height ratios
                                   // on the path terminating at this blob
   float full_wh_ratio_var;        // variance of full_wh_ratios on the path
   bool bad_fixed_pitch_right_gap; // true if there is no gap before
                                   // the blob on the right
-  bool bad_fixed_pitch_wh_ratio;  // true if the blobs has width-to-hight
+  bool bad_fixed_pitch_wh_ratio;  // true if the blobs has width-to-height
                                   // ratio > kMaxFixedPitchCharAspectRatio
   int gap_sum;                    // sum of gaps within the blob
 };
","{'added': [(58, '  float full_wh_ratio;            // width-to-height ratio + gap on the right'), (59, '  float full_wh_ratio_total;      // sum of width-to-height ratios'), (64, '  bool bad_fixed_pitch_wh_ratio;  // true if the blobs has width-to-height')], 'deleted': [(58, '  float full_wh_ratio;            // width-to-hight ratio + gap on the right'), (59, '  float full_wh_ratio_total;      // sum of width-to-hight ratios'), (64, '  bool bad_fixed_pitch_wh_ratio;  // true if the blobs has width-to-hight')]}",yes
README.md,README.md,3633e88b2abf6fe356d0f1d05af9f7a1fd9e2a4e,638868ed38952cc7073210aea695201880c9c5ae,Update README.md: Fix OSS-Fuzz link,"@@ -4,7 +4,7 @@
 [![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
 [![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/security/code-scanning)
-[![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)
+[![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://issues.oss-fuzz.com/issues?q=is:open%20title:tesseract-ocr)
 \
 [![GitHub license](https://img.shields.io/badge/license-Apache--2.0-blue.svg)](https://raw.githubusercontent.com/tesseract-ocr/tesseract/main/LICENSE)
 [![Downloads](https://img.shields.io/badge/download-all%20releases-brightgreen.svg)](https://github.com/tesseract-ocr/tesseract/releases/)
","{'added': [(7, '[![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://issues.oss-fuzz.com/issues?q=is:open%20title:tesseract-ocr)')], 'deleted': [(7, '[![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)')]}",yes
src\wordrec\language_model.h,src\wordrec\language_model.h,3400ce766230faaea5f21168403959164f5e3e23,31e864b4a417909b8d28137ae00cfe68c73d56ae,Fix more typos in code comments,"@@ -227,7 +227,7 @@ protected:
   // (used by ComputeNgramCost()).
   float ComputeDenom(BLOB_CHOICE_LIST *curr_list);
 
-  // Fills the given consistenty_info based on parent_vse.consistency_info
+  // Fills the given consistency_info based on parent_vse.consistency_info
   // and on the consistency of the given unichar_id with parent_vse.
   void FillConsistencyInfo(int curr_col, bool word_end, BLOB_CHOICE *b,
                            ViterbiStateEntry *parent_vse, WERD_RES *word_res,
","{'added': [(230, '  // Fills the given consistency_info based on parent_vse.consistency_info')], 'deleted': [(230, '  // Fills the given consistenty_info based on parent_vse.consistency_info')]}",yes
src\classify\adaptmatch.cpp,src\classify\adaptmatch.cpp,31e864b4a417909b8d28137ae00cfe68c73d56ae,688f8283c5071a91f2ab339cd2c003e12d11be51,"Fix Settup -> Setup in method names

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -644,12 +644,12 @@ void Classify::StartBackupAdaptiveClassifier() {
  * - #EnableLearning
  * set to true by this routine
  */
-void Classify::SettupPass1() {
+void Classify::SetupPass1() {
   EnableLearning = classify_enable_learning;
 
-  getDict().SettupStopperPass1();
+  getDict().SetupStopperPass1();
 
-} /* SettupPass1 */
+} /* SetupPass1 */
 
 /*---------------------------------------------------------------------------*/
 /**
@@ -660,11 +660,11 @@ void Classify::SettupPass1() {
  * Globals:
  * - #EnableLearning set to false by this routine
  */
-void Classify::SettupPass2() {
+void Classify::SetupPass2() {
   EnableLearning = false;
-  getDict().SettupStopperPass2();
+  getDict().SetupStopperPass2();
 
-} /* SettupPass2 */
+} /* SetupPass2 */
 
 /*---------------------------------------------------------------------------*/
 /**
","{'added': [(647, 'void Classify::SetupPass1() {'), (650, '  getDict().SetupStopperPass1();'), (652, '} /* SetupPass1 */'), (663, 'void Classify::SetupPass2() {'), (665, '  getDict().SetupStopperPass2();'), (667, '} /* SetupPass2 */')], 'deleted': [(647, 'void Classify::SettupPass1() {'), (650, '  getDict().SettupStopperPass1();'), (652, '} /* SettupPass1 */'), (663, 'void Classify::SettupPass2() {'), (665, '  getDict().SettupStopperPass2();'), (667, '} /* SettupPass2 */')]}",yes
src\classify\classify.h,src\classify\classify.h,31e864b4a417909b8d28137ae00cfe68c73d56ae,688f8283c5071a91f2ab339cd2c003e12d11be51,"Fix Settup -> Setup in method names

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -243,8 +243,8 @@ public:
   void DisplayAdaptedChar(TBLOB *blob, INT_CLASS_STRUCT *int_class);
   bool AdaptableWord(WERD_RES *word);
   void EndAdaptiveClassifier();
-  void SettupPass1();
-  void SettupPass2();
+  void SetupPass1();
+  void SetupPass2();
   void AdaptiveClassifier(TBLOB *Blob, BLOB_CHOICE_LIST *Choices);
   void ClassifyAsNoise(ADAPT_RESULTS *Results);
   void ResetAdaptiveClassifierInternal();
","{'added': [(246, '  void SetupPass1();'), (247, '  void SetupPass2();')], 'deleted': [(246, '  void SettupPass1();'), (247, '  void SettupPass2();')]}",yes
src\dict\dict.h,src\dict\dict.h,31e864b4a417909b8d28137ae00cfe68c73d56ae,688f8283c5071a91f2ab339cd2c003e12d11be51,"Fix Settup -> Setup in method names

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -267,9 +267,9 @@ public:
   /// Prints the current choices for this word to stdout.
   void DebugWordChoices();
   /// Sets up stopper variables in preparation for the first pass.
-  void SettupStopperPass1();
+  void SetupStopperPass1();
   /// Sets up stopper variables in preparation for the second pass.
-  void SettupStopperPass2();
+  void SetupStopperPass2();
   /* context.cpp *************************************************************/
   /// Check a string to see if it matches a set of lexical rules.
   int case_ok(const WERD_CHOICE &word) const;
","{'added': [(270, '  void SetupStopperPass1();'), (272, '  void SetupStopperPass2();')], 'deleted': [(270, '  void SettupStopperPass1();'), (272, '  void SettupStopperPass2();')]}",yes
src\dict\stopper.cpp,src\dict\stopper.cpp,31e864b4a417909b8d28137ae00cfe68c73d56ae,688f8283c5071a91f2ab339cd2c003e12d11be51,"Fix Settup -> Setup in method names

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -359,11 +359,11 @@ void Dict::EndDangerousAmbigs() {}
 
 #endif // !defined(DISABLED_LEGACY_ENGINE)
 
-void Dict::SettupStopperPass1() {
+void Dict::SetupStopperPass1() {
   reject_offset_ = 0.0;
 }
 
-void Dict::SettupStopperPass2() {
+void Dict::SetupStopperPass2() {
   reject_offset_ = stopper_phase2_certainty_rejection_offset;
 }
 
","{'added': [(362, 'void Dict::SetupStopperPass1() {'), (366, 'void Dict::SetupStopperPass2() {')], 'deleted': [(362, 'void Dict::SettupStopperPass1() {'), (366, 'void Dict::SettupStopperPass2() {')]}",yes
src\wordrec\tface.cpp,src\wordrec\tface.cpp,31e864b4a417909b8d28137ae00cfe68c73d56ae,688f8283c5071a91f2ab339cd2c003e12d11be51,"Fix Settup -> Setup in method names

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -97,7 +97,7 @@ int Wordrec::dict_word(const WERD_CHOICE &word) {
 void Wordrec::set_pass1() {
   chop_ok_split.set_value(70.0);
   language_model_->getParamsModel().SetPass(ParamsModel::PTRAIN_PASS1);
-  SettupPass1();
+  SetupPass1();
 }
 
 /**
@@ -108,7 +108,7 @@ void Wordrec::set_pass1() {
 void Wordrec::set_pass2() {
   chop_ok_split.set_value(pass2_ok_split);
   language_model_->getParamsModel().SetPass(ParamsModel::PTRAIN_PASS2);
-  SettupPass2();
+  SetupPass2();
 }
 
 /**
","{'added': [(100, '  SetupPass1();'), (111, '  SetupPass2();')], 'deleted': [(100, '  SettupPass1();'), (111, '  SettupPass2();')]}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,688f8283c5071a91f2ab339cd2c003e12d11be51,638868ed38952cc7073210aea695201880c9c5ae,"Fix some code comments

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -493,7 +493,7 @@ Pta *FitBaselineIntoLinePolygon(Pta *bottom_pts, Pta *baseline_pts,
   }
 
   num_pts = ptaGetCount(bottom_pts);
-  // Create a interpolated polygon with stepsize 1
+  // Create an interpolated polygon with stepsize 1.
   for (int index = 0; index < num_pts - 1; ++index) {
     ptaGetIPt(bottom_pts, index, &x0, &y0);
     ptaGetIPt(bottom_pts, index + 1, &x1, &y1);
@@ -636,7 +636,7 @@ bool TessPAGERenderer::AddImageHandler(TessBaseAPI *api) {
         ""pagecontent.xsd\"">\n""
         ""\t<Metadata"");
 
-    // If a URL is used to recognize a image add it as <Metadata
+    // If a URL is used to recognize an image add it as <Metadata
     // externalRef=""url"">
     if (std::regex_search(api->GetInputName(),
                           std::regex(""^(https?|ftp|ssh):""))) {
","{'added': [(496, '  // Create an interpolated polygon with stepsize 1.'), (639, '    // If a URL is used to recognize an image add it as <Metadata')], 'deleted': [(496, '  // Create a interpolated polygon with stepsize 1'), (639, '    // If a URL is used to recognize a image add it as <Metadata')]}",yes
src\ccstruct\blobbox.cpp,src\ccstruct\blobbox.cpp,688f8283c5071a91f2ab339cd2c003e12d11be51,638868ed38952cc7073210aea695201880c9c5ae,"Fix some code comments

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -883,7 +883,7 @@ void vertical_cblob_projection( // project outlines
 /**********************************************************************
  * vertical_coutline_projection
  *
- * Compute the vertical projection of a outline from its outlines
+ * Compute the vertical projection of an outline from its outlines
  * and add to the given STATS.
  **********************************************************************/
 
","{'added': [(886, ' * Compute the vertical projection of an outline from its outlines')], 'deleted': [(886, ' * Compute the vertical projection of a outline from its outlines')]}",yes
src\textord\blkocc.cpp,src\textord\blkocc.cpp,688f8283c5071a91f2ab339cd2c003e12d11be51,638868ed38952cc7073210aea695201880c9c5ae,"Fix some code comments

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -125,7 +125,7 @@ static void horizontal_cblob_projection( // project outlines
 /**
  * horizontal_coutline_projection
  *
- * Compute the horizontal projection of a outline from its outlines
+ * Compute the horizontal projection of an outline from its outlines
  * and add to the given STATS.
  */
 
","{'added': [(128, ' * Compute the horizontal projection of an outline from its outlines')], 'deleted': [(128, ' * Compute the horizontal projection of a outline from its outlines')]}",yes
src\api\altorenderer.cpp,src\api\altorenderer.cpp,638868ed38952cc7073210aea695201880c9c5ae,3020c14a6014ee5ace9bbbd220cdf188ef99bf57,"Modernize code for renderers and remove filename conversion for Windows (#4330)

Commit db52047420c54bd added the filename conversion for the hOCR renderer,
but it was removed later for TSV in commit 6700edd8bcdd2a4.

Tesseract does not use a filename conversion anywhere else, so remove it
for the other renderers, too.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -15,9 +15,6 @@
 
 #include ""errcode.h"" // for ASSERT_HOST
 #include ""helpers.h"" // for copy_string
-#ifdef _WIN32
-#  include ""host.h""  // windows.h for MultiByteToWideChar, ...
-#endif
 #include ""tprintf.h"" // for tprintf
 
 #include <tesseract/baseapi.h>
@@ -145,20 +142,6 @@ char *TessBaseAPI::GetAltoText(ETEXT_DESC *monitor, int page_number) {
     SetInputName(nullptr);
   }
 
-#ifdef _WIN32
-  // convert input name from ANSI encoding to utf-8
-  int str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, nullptr, 0);
-  wchar_t *uni16_str = new WCHAR[str16_len];
-  str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, uni16_str, str16_len);
-  int utf8_len =
-      WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, nullptr, 0, nullptr, nullptr);
-  char *utf8_str = new char[utf8_len];
-  WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, utf8_str, utf8_len, nullptr, nullptr);
-  input_file_ = utf8_str;
-  delete[] uni16_str;
-  delete[] utf8_str;
-#endif
-
   std::stringstream alto_str;
   // Use ""C"" locale (needed for int values larger than 999).
   alto_str.imbue(std::locale::classic());
@@ -169,7 +152,7 @@ char *TessBaseAPI::GetAltoText(ETEXT_DESC *monitor, int page_number) {
            << "" WIDTH=\"""" << rect_width_ << ""\""""
            << "" HEIGHT=\"""" << rect_height_ << ""\"">\n"";
 
-  ResultIterator *res_it = GetIterator();
+  std::unique_ptr<ResultIterator> res_it(GetIterator());
   while (!res_it->Empty(RIL_BLOCK)) {
     if (res_it->Empty(RIL_WORD)) {
       res_it->Next(RIL_WORD);
@@ -186,7 +169,7 @@ char *TessBaseAPI::GetAltoText(ETEXT_DESC *monitor, int page_number) {
         // Handle all kinds of images.
         // TODO: optionally add TYPE, for example TYPE=""photo"".
         alto_str << ""\t\t\t\t<Illustration ID=\""cblock_"" << bcnt++ << ""\"""";
-        AddBoxToAlto(res_it, RIL_BLOCK, alto_str);
+        AddBoxToAlto(res_it.get(), RIL_BLOCK, alto_str);
         alto_str << ""</Illustration>\n"";
         res_it->Next(RIL_BLOCK);
         continue;
@@ -195,7 +178,7 @@ char *TessBaseAPI::GetAltoText(ETEXT_DESC *monitor, int page_number) {
       case PT_VERT_LINE:
         // Handle horizontal and vertical lines.
         alto_str << ""\t\t\t\t<GraphicalElement ID=\""cblock_"" << bcnt++ << ""\"""";
-        AddBoxToAlto(res_it, RIL_BLOCK, alto_str);
+        AddBoxToAlto(res_it.get(), RIL_BLOCK, alto_str);
         alto_str << ""</GraphicalElement >\n"";
         res_it->Next(RIL_BLOCK);
         continue;
@@ -208,24 +191,24 @@ char *TessBaseAPI::GetAltoText(ETEXT_DESC *monitor, int page_number) {
 
     if (res_it->IsAtBeginningOf(RIL_BLOCK)) {
       alto_str << ""\t\t\t\t<ComposedBlock ID=\""cblock_"" << bcnt << ""\"""";
-      AddBoxToAlto(res_it, RIL_BLOCK, alto_str);
+      AddBoxToAlto(res_it.get(), RIL_BLOCK, alto_str);
       alto_str << ""\n"";
     }
 
     if (res_it->IsAtBeginningOf(RIL_PARA)) {
       alto_str << ""\t\t\t\t\t<TextBlock ID=\""block_"" << tcnt << ""\"""";
-      AddBoxToAlto(res_it, RIL_PARA, alto_str);
+      AddBoxToAlto(res_it.get(), RIL_PARA, alto_str);
       alto_str << ""\n"";
     }
 
     if (res_it->IsAtBeginningOf(RIL_TEXTLINE)) {
       alto_str << ""\t\t\t\t\t\t<TextLine ID=\""line_"" << lcnt << ""\"""";
-      AddBoxToAlto(res_it, RIL_TEXTLINE, alto_str);
+      AddBoxToAlto(res_it.get(), RIL_TEXTLINE, alto_str);
       alto_str << ""\n"";
     }
 
     alto_str << ""\t\t\t\t\t\t\t<String ID=\""string_"" << wcnt << ""\"""";
-    AddBoxToAlto(res_it, RIL_WORD, alto_str);
+    AddBoxToAlto(res_it.get(), RIL_WORD, alto_str);
     alto_str << "" CONTENT=\"""";
 
     bool last_word_in_line = res_it->IsAtFinalElement(RIL_TEXTLINE, RIL_WORD);
@@ -272,7 +255,6 @@ char *TessBaseAPI::GetAltoText(ETEXT_DESC *monitor, int page_number) {
   alto_str << ""\t\t\t</PrintSpace>\n""
            << ""\t\t</Page>\n"";
 
-  delete res_it;
   return copy_string(alto_str.str());
 }
 
","{'added': [(155, '  std::unique_ptr<ResultIterator> res_it(GetIterator());'), (172, '        AddBoxToAlto(res_it.get(), RIL_BLOCK, alto_str);'), (181, '        AddBoxToAlto(res_it.get(), RIL_BLOCK, alto_str);'), (194, '      AddBoxToAlto(res_it.get(), RIL_BLOCK, alto_str);'), (200, '      AddBoxToAlto(res_it.get(), RIL_PARA, alto_str);'), (206, '      AddBoxToAlto(res_it.get(), RIL_TEXTLINE, alto_str);'), (211, '    AddBoxToAlto(res_it.get(), RIL_WORD, alto_str);')], 'deleted': [(18, '#ifdef _WIN32'), (19, '#  include ""host.h""  // windows.h for MultiByteToWideChar, ...'), (20, '#endif'), (148, '#ifdef _WIN32'), (149, '  // convert input name from ANSI encoding to utf-8'), (150, '  int str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, nullptr, 0);'), (151, '  wchar_t *uni16_str = new WCHAR[str16_len];'), (152, '  str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, uni16_str, str16_len);'), (153, '  int utf8_len ='), (154, '      WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, nullptr, 0, nullptr, nullptr);'), (155, '  char *utf8_str = new char[utf8_len];'), (156, '  WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, utf8_str, utf8_len, nullptr, nullptr);'), (157, '  input_file_ = utf8_str;'), (158, '  delete[] uni16_str;'), (159, '  delete[] utf8_str;'), (160, '#endif'), (161, ''), (172, '  ResultIterator *res_it = GetIterator();'), (189, '        AddBoxToAlto(res_it, RIL_BLOCK, alto_str);'), (198, '        AddBoxToAlto(res_it, RIL_BLOCK, alto_str);'), (211, '      AddBoxToAlto(res_it, RIL_BLOCK, alto_str);'), (217, '      AddBoxToAlto(res_it, RIL_PARA, alto_str);'), (223, '      AddBoxToAlto(res_it, RIL_TEXTLINE, alto_str);'), (228, '    AddBoxToAlto(res_it, RIL_WORD, alto_str);'), (275, '  delete res_it;')]}",yes
src\api\hocrrenderer.cpp,src\api\hocrrenderer.cpp,638868ed38952cc7073210aea695201880c9c5ae,3020c14a6014ee5ace9bbbd220cdf188ef99bf57,"Modernize code for renderers and remove filename conversion for Windows (#4330)

Commit db52047420c54bd added the filename conversion for the hOCR renderer,
but it was removed later for TSV in commit 6700edd8bcdd2a4.

Tesseract does not use a filename conversion anywhere else, so remove it
for the other renderers, too.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -21,9 +21,6 @@
 #include <locale>              // for std::locale::classic
 #include <memory>              // for std::unique_ptr
 #include <sstream>             // for std::stringstream
-#ifdef _WIN32
-#  include ""host.h"" // windows.h for MultiByteToWideChar, ...
-#endif
 #include <tesseract/renderer.h>
 #include ""helpers.h""        // for copy_string
 #include ""tesseractclass.h"" // for Tesseract
@@ -151,23 +148,6 @@ char *TessBaseAPI::GetHOCRText(ETEXT_DESC *monitor, int page_number) {
     SetInputName(nullptr);
   }
 
-#ifdef _WIN32
-  // convert input name from ANSI encoding to utf-8
-  int str16_len =
-      MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, nullptr, 0);
-  wchar_t *uni16_str = new WCHAR[str16_len];
-  str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, uni16_str,
-                                  str16_len);
-  int utf8_len = WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, nullptr,
-                                     0, nullptr, nullptr);
-  char *utf8_str = new char[utf8_len];
-  WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, utf8_str, utf8_len,
-                      nullptr, nullptr);
-  input_file_ = utf8_str;
-  delete[] uni16_str;
-  delete[] utf8_str;
-#endif
-
   std::stringstream hocr_str;
   // Use ""C"" locale (needed for double values x_size and x_descenders).
   hocr_str.imbue(std::locale::classic());
","{'added': [], 'deleted': [(24, '#ifdef _WIN32'), (25, '#  include ""host.h"" // windows.h for MultiByteToWideChar, ...'), (26, '#endif'), (154, '#ifdef _WIN32'), (155, '  // convert input name from ANSI encoding to utf-8'), (156, '  int str16_len ='), (157, '      MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, nullptr, 0);'), (158, '  wchar_t *uni16_str = new WCHAR[str16_len];'), (159, '  str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, uni16_str,'), (160, '                                  str16_len);'), (161, '  int utf8_len = WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, nullptr,'), (162, '                                     0, nullptr, nullptr);'), (163, '  char *utf8_str = new char[utf8_len];'), (164, '  WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, utf8_str, utf8_len,'), (165, '                      nullptr, nullptr);'), (166, '  input_file_ = utf8_str;'), (167, '  delete[] uni16_str;'), (168, '  delete[] utf8_str;'), (169, '#endif'), (170, '')]}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,638868ed38952cc7073210aea695201880c9c5ae,3020c14a6014ee5ace9bbbd220cdf188ef99bf57,"Modernize code for renderers and remove filename conversion for Windows (#4330)

Commit db52047420c54bd added the filename conversion for the hOCR renderer,
but it was removed later for TSV in commit 6700edd8bcdd2a4.

Tesseract does not use a filename conversion anywhere else, so remove it
for the other renderers, too.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -2,7 +2,7 @@
 // Description: PAGE XML rendering interface
 // Author:      Jan Kamlah
 
-// (C) Copyright 2021
+// (C) Copyright 2024
 // Licensed under the Apache License, Version 2.0 (the ""License"");
 // you may not use this file except in compliance with the License.
 // You may obtain a copy of the License at
@@ -15,9 +15,6 @@
 
 #include ""errcode.h"" // for ASSERT_HOST
 #include ""helpers.h"" // for copy_string
-#ifdef _WIN32
-#  include ""host.h"" // windows.h for MultiByteToWideChar, ...
-#endif
 #include ""tprintf.h"" // for tprintf
 
 #include <tesseract/baseapi.h>
@@ -717,23 +714,6 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
     SetInputName(nullptr);
   }
 
-#ifdef _WIN32
-  // convert input name from ANSI encoding to utf-8
-  int str16_len =
-      MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, nullptr, 0);
-  wchar_t *uni16_str = new WCHAR[str16_len];
-  str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, uni16_str,
-                                  str16_len);
-  int utf8_len = WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, nullptr,
-                                     0, nullptr, nullptr);
-  char *utf8_str = new char[utf8_len];
-  WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, utf8_str, utf8_len,
-                      nullptr, nullptr);
-  input_file_ = utf8_str;
-  delete[] uni16_str;
-  delete[] utf8_str;
-#endif
-
   // Used variables
 
   std::stringstream reading_order_str;
@@ -788,7 +768,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
                     << ""\t\t\t<OrderedGroup id=\""ro"" << ro_id
                     << ""\"" caption=\""Regions reading order\"">\n"";
 
-  ResultIterator *res_it = GetIterator();
+  std::unique_ptr<ResultIterator> res_it(GetIterator());
 
   float block_conf = 0;
   float line_conf = 0;
@@ -808,7 +788,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
         // Handle all kinds of images.
         page_str << ""\t\t<GraphicRegion id=\""r"" << rcnt++ << ""\"">\n"";
         page_str << ""\t\t\t"";
-        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);
+        AddBoxToPAGE(res_it.get(), RIL_BLOCK, page_str);
         page_str << ""\t\t</GraphicRegion>\n"";
         res_it->Next(RIL_BLOCK);
         continue;
@@ -818,7 +798,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
         // Handle horizontal and vertical lines.
         page_str << ""\t\t<SeparatorRegion id=\""r"" << rcnt++ << ""\"">\n"";
         page_str << ""\t\t\t"";
-        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);
+        AddBoxToPAGE(res_it.get(), RIL_BLOCK, page_str);
         page_str << ""\t\t</SeparatorRegion>\n"";
         res_it->Next(RIL_BLOCK);
         continue;
@@ -849,7 +829,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
       if ((!POLYGONFLAG || (orientation_block != ORIENTATION_PAGE_UP &&
                             orientation_block != ORIENTATION_PAGE_DOWN)) &&
           LEVELFLAG == 0) {
-        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);
+        AddBoxToPAGE(res_it.get(), RIL_BLOCK, page_str);
       }
     }
 
@@ -892,9 +872,9 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
       line_str << ""custom=\"""" << ""readingOrder {index:"" << lcnt << "";}\"">\n"";
       // If level is linebased, get the line polygon and baseline
       if (LEVELFLAG == 0 && (!POLYGONFLAG || skewed_flag)) {
-        AddPointToWordPolygon(res_it, RIL_TEXTLINE, line_top_ltr_pts,
+        AddPointToWordPolygon(res_it.get(), RIL_TEXTLINE, line_top_ltr_pts,
                               line_bottom_ltr_pts, writing_direction);
-        AddBaselineToPTA(res_it, RIL_TEXTLINE, line_baseline_pts);
+        AddBaselineToPTA(res_it.get(), RIL_TEXTLINE, line_baseline_pts);
         if (ttb_flag) {
           line_baseline_pts = TransposePolygonline(line_baseline_pts);
         }
@@ -914,18 +894,18 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
                << WritingDirectionToStr(writing_direction) << ""\"" ""
                << ""custom=\"""" << ""readingOrder {index:"" << wcnt << "";}\"">\n"";
       if ((!POLYGONFLAG || skewed_flag) || ttb_flag) {
-        AddPointToWordPolygon(res_it, RIL_WORD, word_top_pts, word_bottom_pts,
+        AddPointToWordPolygon(res_it.get(), RIL_WORD, word_top_pts, word_bottom_pts,
                               writing_direction);
       }
     }
 
     if (POLYGONFLAG && !skewed_flag && ttb_flag && LEVELFLAG == 0) {
-      AddPointToWordPolygon(res_it, RIL_WORD, word_top_pts, word_bottom_pts,
+      AddPointToWordPolygon(res_it.get(), RIL_WORD, word_top_pts, word_bottom_pts,
                             writing_direction);
     }
 
     // Get the word baseline information
-    AddBaselineToPTA(res_it, RIL_WORD, word_baseline_pts);
+    AddBaselineToPTA(res_it.get(), RIL_WORD, word_baseline_pts);
 
     // Get the word text content and polygon
     do {
@@ -934,7 +914,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
       if (grapheme && grapheme[0] != 0) {
         word_content << HOcrEscape(grapheme.get()).c_str();
         if (POLYGONFLAG && !skewed_flag && !ttb_flag) {
-          AddPointToWordPolygon(res_it, RIL_SYMBOL, word_top_pts,
+          AddPointToWordPolygon(res_it.get(), RIL_SYMBOL, word_top_pts,
                                 word_bottom_pts, writing_direction);
         }
       }
@@ -1146,7 +1126,6 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
   const std::string &text = reading_order_str.str();
   reading_order_str.str("""");
 
-  delete res_it;
   return copy_string(text);
 }
 
","{'added': [(5, '// (C) Copyright 2024'), (771, '  std::unique_ptr<ResultIterator> res_it(GetIterator());'), (791, '        AddBoxToPAGE(res_it.get(), RIL_BLOCK, page_str);'), (801, '        AddBoxToPAGE(res_it.get(), RIL_BLOCK, page_str);'), (832, '        AddBoxToPAGE(res_it.get(), RIL_BLOCK, page_str);'), (875, '        AddPointToWordPolygon(res_it.get(), RIL_TEXTLINE, line_top_ltr_pts,'), (877, '        AddBaselineToPTA(res_it.get(), RIL_TEXTLINE, line_baseline_pts);'), (897, '        AddPointToWordPolygon(res_it.get(), RIL_WORD, word_top_pts, word_bottom_pts,'), (903, '      AddPointToWordPolygon(res_it.get(), RIL_WORD, word_top_pts, word_bottom_pts,'), (908, '    AddBaselineToPTA(res_it.get(), RIL_WORD, word_baseline_pts);'), (917, '          AddPointToWordPolygon(res_it.get(), RIL_SYMBOL, word_top_pts,')], 'deleted': [(5, '// (C) Copyright 2021'), (18, '#ifdef _WIN32'), (19, '#  include ""host.h"" // windows.h for MultiByteToWideChar, ...'), (20, '#endif'), (720, '#ifdef _WIN32'), (721, '  // convert input name from ANSI encoding to utf-8'), (722, '  int str16_len ='), (723, '      MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, nullptr, 0);'), (724, '  wchar_t *uni16_str = new WCHAR[str16_len];'), (725, '  str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, uni16_str,'), (726, '                                  str16_len);'), (727, '  int utf8_len = WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, nullptr,'), (728, '                                     0, nullptr, nullptr);'), (729, '  char *utf8_str = new char[utf8_len];'), (730, '  WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, utf8_str, utf8_len,'), (731, '                      nullptr, nullptr);'), (732, '  input_file_ = utf8_str;'), (733, '  delete[] uni16_str;'), (734, '  delete[] utf8_str;'), (735, '#endif'), (736, ''), (791, '  ResultIterator *res_it = GetIterator();'), (811, '        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);'), (821, '        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);'), (852, '        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);'), (895, '        AddPointToWordPolygon(res_it, RIL_TEXTLINE, line_top_ltr_pts,'), (897, '        AddBaselineToPTA(res_it, RIL_TEXTLINE, line_baseline_pts);'), (917, '        AddPointToWordPolygon(res_it, RIL_WORD, word_top_pts, word_bottom_pts,'), (923, '      AddPointToWordPolygon(res_it, RIL_WORD, word_top_pts, word_bottom_pts,'), (928, '    AddBaselineToPTA(res_it, RIL_WORD, word_baseline_pts);'), (937, '          AddPointToWordPolygon(res_it, RIL_SYMBOL, word_top_pts,'), (1149, '  delete res_it;')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,3020c14a6014ee5ace9bbbd220cdf188ef99bf57,e9fc2af0b2c0d475d58682cc7ff33fb448c9d911,"CI: Install libtool as required dependency for macOS build

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,11 +29,8 @@ jobs:
 
     - name: Install dependencies
       run: |
-           brew install autoconf automake
-           brew install leptonica
-           brew install pango icu4c
-           brew install cabextract
-           brew install libarchive curl
+           brew install autoconf automake cabextract libtool
+           brew install curl icu4c leptonica libarchive pango
 
     - name: Setup Tesseract
       run: |
","{'added': [(32, '           brew install autoconf automake cabextract libtool'), (33, '           brew install curl icu4c leptonica libarchive pango')], 'deleted': [(32, '           brew install autoconf automake'), (33, '           brew install leptonica'), (34, '           brew install pango icu4c'), (35, '           brew install cabextract'), (36, '           brew install libarchive curl')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,e9fc2af0b2c0d475d58682cc7ff33fb448c9d911,2976eb1678a1c272e8d780f01f3258cb955000a2,"CI: Install curl and icu4c as required dependencies for macOS build

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -25,7 +25,7 @@ jobs:
     - name: Install dependencies (macOS Homebrew)
       run: |
            brew install autoconf automake cabextract libtool
-           brew install leptonica libarchive pango
+           brew install curl icu4c leptonica libarchive pango
     - name: Setup
       run: |
            ./autogen.sh
","{'added': [(28, '           brew install curl icu4c leptonica libarchive pango')], 'deleted': [(28, '           brew install leptonica libarchive pango')]}",yes
tesseract.pc.in,tesseract.pc.in,2976eb1678a1c272e8d780f01f3258cb955000a2,b4adf2464b0f53f6baafda6e21705bd6fa0abfd4,"Revert ""use variable instead of hardcoded name for pkg-config file""

This reverts commit b4a4f5c6cbe1f13dd247ee641393bf223ddc36fe.","@@ -10,7 +10,7 @@ Name: @PACKAGE_NAME@
 Description: An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.
 URL: https://github.com/tesseract-ocr/tesseract
 Version: @VERSION@
-Requires.private: @LEPTONICA_LIBS@
-Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
+Requires.private: lept
+Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
 Libs.private: -lpthread
 Cflags: -I${includedir}
","{'added': [(13, 'Requires.private: lept'), (14, 'Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@')], 'deleted': [(13, 'Requires.private: @LEPTONICA_LIBS@'), (14, 'Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,b4adf2464b0f53f6baafda6e21705bd6fa0abfd4,3ebed578781069d7e8deed139c4a3a2a9d853398,"Replace deprecated runner macos-12 by macos-latest in GitHub actions

The macOS 12 runner image will be removed by December 3rd, 2024.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -14,8 +14,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }
-          #- { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }
+          - { name: macos-latest-clang-autotools, os: macos-latest, cxx: clang++ }
 
     steps:
     - uses: actions/checkout@v4
@@ -114,7 +113,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }
+          - { name: macos-latest-clang-autotools, os: macos-latest, cxx: clang++ }
 
     steps:
     - uses: actions/checkout@v4
","{'added': [(17, '          - { name: macos-latest-clang-autotools, os: macos-latest, cxx: clang++ }'), (116, '          - { name: macos-latest-clang-autotools, os: macos-latest, cxx: clang++ }')], 'deleted': [(17, '          - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }'), (18, '          #- { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }'), (117, '          - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,b4adf2464b0f53f6baafda6e21705bd6fa0abfd4,3ebed578781069d7e8deed139c4a3a2a9d853398,"Replace deprecated runner macos-12 by macos-latest in GitHub actions

The macOS 12 runner image will be removed by December 3rd, 2024.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -14,7 +14,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default        
+          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default
           - { name: macos-14-gcc-14-cmake, os: macos-14, cxx: g++-14 } #installed
           - { name: macos-15-clang-cmake, os: macos-15, cxx: clang++ } # default
 
","{'added': [(17, '          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default')], 'deleted': [(17, '          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,b4adf2464b0f53f6baafda6e21705bd6fa0abfd4,3ebed578781069d7e8deed139c4a3a2a9d853398,"Replace deprecated runner macos-12 by macos-latest in GitHub actions

The macOS 12 runner image will be removed by December 3rd, 2024.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -14,8 +14,8 @@ jobs:
       matrix:
         config:
           - { name: macos-arm-14-clang-unittest, os: macos-14, cxx: clang++ } # Apple silicon
-          - { name: macos-12-clang-unittest, os: macos-12, cxx: clang++ }
-          - { name: macos-12-gcc-unittest, os: macos-12, cxx: g++ }
+          - { name: macos-latest-clang-unittest, os: macos-latest, cxx: clang++ }
+          - { name: macos-latest-gcc-unittest, os: macos-latest, cxx: g++ }
 
     steps:
     - uses: actions/checkout@v4
","{'added': [(17, '          - { name: macos-latest-clang-unittest, os: macos-latest, cxx: clang++ }'), (18, '          - { name: macos-latest-gcc-unittest, os: macos-latest, cxx: g++ }')], 'deleted': [(17, '          - { name: macos-12-clang-unittest, os: macos-12, cxx: clang++ }'), (18, '          - { name: macos-12-gcc-unittest, os: macos-12, cxx: g++ }')]}",yes
tesseract.pc.in,tesseract.pc.in,b4a4f5c6cbe1f13dd247ee641393bf223ddc36fe,900c721f14b343032703f7a0e08874768834ada9,use variable instead of hardcoded name for pkg-config file,"@@ -10,7 +10,7 @@ Name: @PACKAGE_NAME@
 Description: An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.
 URL: https://github.com/tesseract-ocr/tesseract
 Version: @VERSION@
-Requires.private: lept
-Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
+Requires.private: @LEPTONICA_LIBS@
+Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
 Libs.private: -lpthread
 Cflags: -I${includedir}
","{'added': [(13, 'Requires.private: @LEPTONICA_LIBS@'), (14, 'Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@')], 'deleted': [(13, 'Requires.private: lept'), (14, 'Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,aacc9052b98f06c3a55ee14f7f6fe3500fe53840,61ed4d9f36c7fed792216b47c0103faa97ee719a,"Update cmake.yml

Use macOS 15 as the macOS 12 runner image will be removed by 12/3/2024","@@ -14,11 +14,9 @@ jobs:
       fail-fast: false
       matrix:
         config:
-
-          - { name: macos-12-clang-14-cmake, os: macos-12, cxx: clang++ } # default
-          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default
-
+          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default        
           - { name: macos-14-gcc-14-cmake, os: macos-14, cxx: g++-14 } #installed
+          - { name: macos-15-clang-cmake, os: macos-15, cxx: clang++ } # default
 
           - { name: ubuntu-22.04-clang-15-cmake, os: ubuntu-22.04, cxx: clang++-15 } #installed
 
@@ -55,6 +53,8 @@ jobs:
            brew install ninja
            ninja --version
            cmake --version
+           clang++ --version
+           g++ --version
         if: runner.os == 'macOS'
 
       - name: Checkout Source
","{'added': [(17, '          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default'), (19, '          - { name: macos-15-clang-cmake, os: macos-15, cxx: clang++ } # default'), (56, '           clang++ --version'), (57, '           g++ --version')], 'deleted': [(17, ''), (18, '          - { name: macos-12-clang-14-cmake, os: macos-12, cxx: clang++ } # default'), (19, '          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default'), (20, '')]}",no
src\training\CMakeLists.txt,src\training\CMakeLists.txt,61ed4d9f36c7fed792216b47c0103faa97ee719a,900c721f14b343032703f7a0e08874768834ada9,Do not export PDBs for static libraries. Fixes #4279.,"@@ -126,7 +126,7 @@ install(
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 generate_export_header(common_training EXPORT_MACRO_NAME
                        TESS_COMMON_TRAINING_API)
-if (MSVC)
+if (MSVC AND BUILD_SHARED_LIBS)
   install(FILES $<TARGET_PDB_FILE:common_training> DESTINATION bin OPTIONAL)
 endif()
 project_group(common_training ""Training Tools"")
@@ -298,7 +298,7 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
-  if (MSVC)
+  if (MSVC AND BUILD_SHARED_LIBS)
     install(FILES $<TARGET_PDB_FILE:unicharset_training> DESTINATION bin OPTIONAL)
   endif()
   generate_export_header(unicharset_training EXPORT_MACRO_NAME
","{'added': [(129, 'if (MSVC AND BUILD_SHARED_LIBS)'), (301, '  if (MSVC AND BUILD_SHARED_LIBS)')], 'deleted': [(129, 'if (MSVC)'), (301, '  if (MSVC)')]}",yes
CMakeLists.txt,CMakeLists.txt,280779c615402e335e40d96b9cf71ee8758fd63f,4f435363354a4c06730ee1b9a2b5facacf353d6b,"cmake: Correctly set the soversion based on SemVer properties

As this project follows Semantic Versioning, the shared object
version should match these semantics.

The two options that make sense here are to have the soversion
set to the version major (so only breaking changes are tracked)
or to set to version major and minor (so breaking and API additions
are tracked).

Since the Windows version of the library already uses version major
and version minor, let's just do this universally.

Fixes: 832926f5afebd9a5a81343425e733708332f730f (""Update library version handling for cmake"")

Signed-off-by: Neal Gompa <neal@gompa.dev>","@@ -827,7 +827,7 @@ set_target_properties(
                           ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
 set_target_properties(
   libtesseract PROPERTIES SOVERSION
-                          ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
+                          ${VERSION_MAJOR}.${VERSION_MINOR})
 
 set_target_properties(
   libtesseract
","{'added': [(830, '                          ${VERSION_MAJOR}.${VERSION_MINOR})')], 'deleted': [(830, '                          ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})')]}",yes
src\ccutil\tesserrstream.h,src\ccutil\tesserrstream.h,37d1c6506d488c4e828e63ccfe133d6c865873ad,7ef8e3c7ee921d768402c41a49b209b793bc79ab,"Add TESS_API in declaration for tesserr (fix sw build)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,6 +17,7 @@
 #define TESSERACT_CCUTIL_TESSERRSTREAM_H
 
 #include ""tprintf.h""
+#include <tesseract/export.h> // for TESS_API
 
 #include <ostream> // for std::ostream
 
@@ -60,7 +61,7 @@ public:
   }
 };
 
-extern TessErrStream tesserr;
+extern TESS_API TessErrStream tesserr;
 
 } // namespace tesseract
 
","{'added': [(20, '#include <tesseract/export.h> // for TESS_API'), (64, 'extern TESS_API TessErrStream tesserr;')], 'deleted': [(63, 'extern TessErrStream tesserr;')]}",yes
src\training\common\errorcounter.cpp,src\training\common\errorcounter.cpp,7ef8e3c7ee921d768402c41a49b209b793bc79ab,bd7b3571ccfac0da2e1cdece30879efa48d31a47,"Print time for ErrorCounter::ComputeErrorRate in milliseconds

Optimize also the code, replace tprintf by C++ stream
and call clock() only when needed.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -23,6 +23,7 @@
 #include ""sampleiterator.h""
 #include ""shapeclassifier.h""
 #include ""shapetable.h""
+#include ""tesserrstream.h""
 #include ""trainingsample.h""
 #include ""trainingsampleset.h""
 #include ""unicity_table.h""
@@ -50,7 +51,10 @@ double ErrorCounter::ComputeErrorRate(ShapeClassifier *classifier, int report_le
   ErrorCounter counter(classifier->GetUnicharset(), fontsize);
   std::vector<UnicharRating> results;
 
-  clock_t start = clock();
+  clock_t total_time = 0;
+  if (report_level > 1) {
+    total_time = clock();
+  }
   unsigned total_samples = 0;
   double unscaled_error = 0.0;
   // Set a number of samples on which to run the classify debug mode.
@@ -85,7 +89,6 @@ double ErrorCounter::ComputeErrorRate(ShapeClassifier *classifier, int report_le
     }
     ++total_samples;
   }
-  const double total_time = 1.0 * (clock() - start) / CLOCKS_PER_SEC;
   // Create the appropriate error report.
   unscaled_error = counter.ReportErrors(report_level, boosting_mode, fontinfo_table, *it,
                                         unichar_error, fonts_report);
@@ -94,8 +97,9 @@ double ErrorCounter::ComputeErrorRate(ShapeClassifier *classifier, int report_le
   }
   if (report_level > 1 && total_samples > 0) {
     // It is useful to know the time in microseconds/char.
-    tprintf(""Errors computed in %.2fs at %.1f μs/char\n"", total_time,
-            1000000.0 * total_time / total_samples);
+    total_time = 1000 * (clock() - total_time) / CLOCKS_PER_SEC;
+    tesserr << ""Errors computed in "" << total_time << ""  ms at ""
+            << 1000 * total_time / total_samples << "" μs/char\n"";
   }
   return unscaled_error;
 }
","{'added': [(26, '#include ""tesserrstream.h""'), (54, '  clock_t total_time = 0;'), (55, '  if (report_level > 1) {'), (56, '    total_time = clock();'), (57, '  }'), (100, '    total_time = 1000 * (clock() - total_time) / CLOCKS_PER_SEC;'), (101, '    tesserr << ""Errors computed in "" << total_time << ""  ms at ""'), (102, '            << 1000 * total_time / total_samples << "" μs/char\\n"";')], 'deleted': [(53, '  clock_t start = clock();'), (88, '  const double total_time = 1.0 * (clock() - start) / CLOCKS_PER_SEC;'), (97, '    tprintf(""Errors computed in %.2fs at %.1f μs/char\\n"", total_time,'), (98, '            1000000.0 * total_time / total_samples);')]}",yes
src\ccmain\control.cpp,src\ccmain\control.cpp,bd7b3571ccfac0da2e1cdece30879efa48d31a47,33d673c46d640abaadc3a6dfaa6ccbda3224f571,"Print time for tessedit_timing_debug in milliseconds

Optimize also the code a little bit.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -41,6 +41,7 @@
 #endif
 #include ""sorthelper.h""
 #include ""tesseractclass.h""
+#include ""tesserrstream.h""  // for tesserr
 #include ""tessvars.h""
 #include ""werdit.h""
 
@@ -1313,9 +1314,10 @@ void Tesseract::classify_word_and_language(int pass_n, PAGE_RES_IT *pr_it, WordD
   PointerVector<WERD_RES> best_words;
   // Points to the best result. May be word or in lang_words.
   const WERD_RES *word = word_data->word;
-  clock_t start_t = 0;
-  if (tessedit_timing_debug) {
-    start_t = clock();
+  clock_t total_time = 0;
+  const bool timing_debug = tessedit_timing_debug;
+  if (timing_debug) {
+    total_time = clock();
   }
   const bool debug = classify_debug_level > 0 || multilang_debug_level > 0;
   if (debug) {
@@ -1368,10 +1370,10 @@ void Tesseract::classify_word_and_language(int pass_n, PAGE_RES_IT *pr_it, WordD
   } else {
     tprintf(""no best words!!\n"");
   }
-  if (tessedit_timing_debug) {
-    clock_t ocr_t = clock();
-    tprintf(""%s (ocr took %.2f sec)\n"", word_data->word->best_choice->unichar_string().c_str(),
-            static_cast<double>(ocr_t - start_t) / CLOCKS_PER_SEC);
+  if (timing_debug) {
+    total_time = clock() - total_time;
+    tesserr << word_data->word->best_choice->unichar_string()
+            << "" (ocr took "" << 1000 * total_time / CLOCKS_PER_SEC << "" ms)\n"";
   }
 }
 
","{'added': [(44, '#include ""tesserrstream.h""  // for tesserr'), (1317, '  clock_t total_time = 0;'), (1318, '  const bool timing_debug = tessedit_timing_debug;'), (1319, '  if (timing_debug) {'), (1320, '    total_time = clock();'), (1373, '  if (timing_debug) {'), (1374, '    total_time = clock() - total_time;'), (1375, '    tesserr << word_data->word->best_choice->unichar_string()'), (1376, '            << "" (ocr took "" << 1000 * total_time / CLOCKS_PER_SEC << "" ms)\\n"";')], 'deleted': [(1316, '  clock_t start_t = 0;'), (1317, '  if (tessedit_timing_debug) {'), (1318, '    start_t = clock();'), (1371, '  if (tessedit_timing_debug) {'), (1372, '    clock_t ocr_t = clock();'), (1373, '    tprintf(""%s (ocr took %.2f sec)\\n"", word_data->word->best_choice->unichar_string().c_str(),'), (1374, '            static_cast<double>(ocr_t - start_t) / CLOCKS_PER_SEC);')]}",yes
,src\ccutil\tesserrstream.h,33d673c46d640abaadc3a6dfaa6ccbda3224f571,a63e7ec2e6f7aec7215134081891a404c9ea8182,"tprintf: Add C++ stream for log messages

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,67 @@
+// File:        tesserrstream.h
+// Description: C++ stream which enhances tprintf
+// Author:      Stefan Weil
+//
+// (C) Copyright 2024
+// Licensed under the Apache License, Version 2.0 (the ""License"");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an ""AS IS"" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+#ifndef TESSERACT_CCUTIL_TESSERRSTREAM_H
+#define TESSERACT_CCUTIL_TESSERRSTREAM_H
+
+#include ""tprintf.h""
+
+#include <ostream> // for std::ostream
+
+namespace tesseract {
+
+class TessStreamBuf : public std::streambuf {
+public:
+  TessStreamBuf() = default;
+
+protected:
+  virtual int_type overflow(int_type c) override {
+    if (c != EOF) {
+      if (debugfp == nullptr) {
+        debugfp = get_debugfp();
+      }
+      if (fputc(c, debugfp) == EOF) {
+        return EOF;
+      }
+    }
+    return c;
+  }
+
+  virtual std::streamsize xsputn(const char* s, std::streamsize n) override {
+    if (debugfp == nullptr) {
+      debugfp = get_debugfp();
+    }
+    return fwrite(s, 1, n, debugfp);
+  }
+
+private:
+  FILE *debugfp = nullptr;
+};
+
+class TessErrStream : public std::ostream {
+private:
+  TessStreamBuf buf;
+
+public:
+  TessErrStream() : std::ostream(nullptr), buf() {
+    rdbuf(&buf);
+  }
+};
+
+extern TessErrStream tesserr;
+
+} // namespace tesseract
+
+#endif // TESSERACT_CCUTIL_TESSERRSTREAM_H
","{'added': [(1, '// File:        tesserrstream.h'), (2, '// Description: C++ stream which enhances tprintf'), (3, '// Author:      Stefan Weil'), (4, '//'), (5, '// (C) Copyright 2024'), (6, '// Licensed under the Apache License, Version 2.0 (the ""License"");'), (7, '// you may not use this file except in compliance with the License.'), (8, '// You may obtain a copy of the License at'), (9, '// http://www.apache.org/licenses/LICENSE-2.0'), (10, '// Unless required by applicable law or agreed to in writing, software'), (11, '// distributed under the License is distributed on an ""AS IS"" BASIS,'), (12, '// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (13, '// See the License for the specific language governing permissions and'), (14, '// limitations under the License.'), (15, ''), (16, '#ifndef TESSERACT_CCUTIL_TESSERRSTREAM_H'), (17, '#define TESSERACT_CCUTIL_TESSERRSTREAM_H'), (18, ''), (19, '#include ""tprintf.h""'), (20, ''), (21, '#include <ostream> // for std::ostream'), (22, ''), (23, 'namespace tesseract {'), (24, ''), (25, 'class TessStreamBuf : public std::streambuf {'), (26, 'public:'), (27, '  TessStreamBuf() = default;'), (28, ''), (29, 'protected:'), (30, '  virtual int_type overflow(int_type c) override {'), (31, '    if (c != EOF) {'), (32, '      if (debugfp == nullptr) {'), (33, '        debugfp = get_debugfp();'), (34, '      }'), (35, '      if (fputc(c, debugfp) == EOF) {'), (36, '        return EOF;'), (37, '      }'), (38, '    }'), (39, '    return c;'), (40, '  }'), (41, ''), (42, '  virtual std::streamsize xsputn(const char* s, std::streamsize n) override {'), (43, '    if (debugfp == nullptr) {'), (44, '      debugfp = get_debugfp();'), (45, '    }'), (46, '    return fwrite(s, 1, n, debugfp);'), (47, '  }'), (48, ''), (49, 'private:'), (50, '  FILE *debugfp = nullptr;'), (51, '};'), (52, ''), (53, 'class TessErrStream : public std::ostream {'), (54, 'private:'), (55, '  TessStreamBuf buf;'), (56, ''), (57, 'public:'), (58, '  TessErrStream() : std::ostream(nullptr), buf() {'), (59, '    rdbuf(&buf);'), (60, '  }'), (61, '};'), (62, ''), (63, 'extern TessErrStream tesserr;'), (64, ''), (65, '} // namespace tesseract'), (66, ''), (67, '#endif // TESSERACT_CCUTIL_TESSERRSTREAM_H')], 'deleted': []}",yes
src\ccutil\tprintf.cpp,src\ccutil\tprintf.cpp,33d673c46d640abaadc3a6dfaa6ccbda3224f571,a63e7ec2e6f7aec7215134081891a404c9ea8182,"tprintf: Add C++ stream for log messages

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -21,6 +21,7 @@
 #  include ""config_auto.h""
 #endif
 
+#include ""tesserrstream.h""
 #include ""tprintf.h""
 
 #include ""params.h""
@@ -36,7 +37,7 @@ INT_VAR(log_level, INT_MAX, ""Logging level"");
 static STRING_VAR(debug_file, """", ""File to send tprintf output to"");
 
 // File for debug output.
-static FILE *debugfp;
+FILE *debugfp;
 
 // Set output for log messages.
 // The output is written to stderr if debug_file is empty.
@@ -49,7 +50,7 @@ static FILE *debugfp;
 // tprintf(""write to /tmp/log\n"");
 // debug_file = """";
 // tprintf(""write to stderr\n"");
-static void set_debugfp() {
+FILE *get_debugfp() {
   if (debug_file.empty()) {
     // Write to stderr.
     if (debugfp != stderr && debugfp != nullptr) {
@@ -66,15 +67,18 @@ static void set_debugfp() {
 #endif
     debugfp = fopen(debug_file.c_str(), ""wb"");
   }
+  return debugfp;
 }
 
 // Trace printf.
 void tprintf(const char *format, ...) {
-  set_debugfp();
+  FILE *f = get_debugfp();
   va_list args;           // variable args
   va_start(args, format); // variable list
-  vfprintf(debugfp, format, args);
+  vfprintf(f, format, args);
   va_end(args);
 }
 
+TessErrStream tesserr;
+
 } // namespace tesseract
","{'added': [(24, '#include ""tesserrstream.h""'), (40, 'FILE *debugfp;'), (53, 'FILE *get_debugfp() {'), (70, '  return debugfp;'), (75, '  FILE *f = get_debugfp();'), (78, '  vfprintf(f, format, args);'), (82, 'TessErrStream tesserr;'), (83, '')], 'deleted': [(39, 'static FILE *debugfp;'), (52, 'static void set_debugfp() {'), (73, '  set_debugfp();'), (76, '  vfprintf(debugfp, format, args);')]}",yes
src\ccutil\tprintf.h,src\ccutil\tprintf.h,33d673c46d640abaadc3a6dfaa6ccbda3224f571,a63e7ec2e6f7aec7215134081891a404c9ea8182,"tprintf: Add C++ stream for log messages

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -36,6 +36,9 @@ extern TESS_API void tprintf( // Trace printf
     const char *format, ...)  // Message
     __attribute__((format(printf, 1, 2)));
 
+// Get file for debug output.
+FILE *get_debugfp();
+
 } // namespace tesseract
 
 #undef __attribute__
","{'added': [(39, '// Get file for debug output.'), (40, 'FILE *get_debugfp();'), (41, '')], 'deleted': []}",yes
src\ccutil\tprintf.cpp,src\ccutil\tprintf.cpp,a63e7ec2e6f7aec7215134081891a404c9ea8182,3a4a013dfe2c89fea68211f69e7b19509beb6317,"tprintf: Modernize and simplify the code

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -35,38 +35,45 @@ INT_VAR(log_level, INT_MAX, ""Logging level"");
 
 static STRING_VAR(debug_file, """", ""File to send tprintf output to"");
 
-// Trace printf
-void tprintf(const char *format, ...) {
-  const char *debug_file_name = debug_file.c_str();
-  static FILE *debugfp = nullptr; // debug file
-
-  if (debug_file_name == nullptr) {
-    // This should not happen.
-    return;
-  }
+// File for debug output.
+static FILE *debugfp;
 
+// Set output for log messages.
+// The output is written to stderr if debug_file is empty.
+// Otherwise it is written to debug_file.
+// It is possible to switch between stderr and debug_file output:
+// tprintf(""write to configured output\n"");
+// debug_file = """";
+// tprintf(""write to stderr\n"");
+// debug_file = ""/tmp/log"";
+// tprintf(""write to /tmp/log\n"");
+// debug_file = """";
+// tprintf(""write to stderr\n"");
+static void set_debugfp() {
+  if (debug_file.empty()) {
+    // Write to stderr.
+    if (debugfp != stderr && debugfp != nullptr) {
+      fclose(debugfp);
+    }
+    debugfp = stderr;
+  } else if (debugfp == stderr || debugfp == nullptr) {
+    // Write to file.
 #ifdef _WIN32
-  // Replace /dev/null by nul for Windows.
-  if (strcmp(debug_file_name, ""/dev/null"") == 0) {
-    debug_file_name = ""nul"";
-    debug_file.set_value(debug_file_name);
-  }
+    if (debug_file == ""/dev/null"") {
+      // Replace /dev/null by nul for Windows.
+      debug_file = ""nul"";
+    }
 #endif
-
-  if (debugfp == nullptr && debug_file_name[0] != '\0') {
-    debugfp = fopen(debug_file_name, ""wb"");
-  } else if (debugfp != nullptr && debug_file_name[0] == '\0') {
-    fclose(debugfp);
-    debugfp = nullptr;
+    debugfp = fopen(debug_file.c_str(), ""wb"");
   }
+}
 
+// Trace printf.
+void tprintf(const char *format, ...) {
+  set_debugfp();
   va_list args;           // variable args
   va_start(args, format); // variable list
-  if (debugfp != nullptr) {
-    vfprintf(debugfp, format, args);
-  } else {
-    vfprintf(stderr, format, args);
-  }
+  vfprintf(debugfp, format, args);
   va_end(args);
 }
 
","{'added': [(38, '// File for debug output.'), (39, 'static FILE *debugfp;'), (41, '// Set output for log messages.'), (42, '// The output is written to stderr if debug_file is empty.'), (43, '// Otherwise it is written to debug_file.'), (44, '// It is possible to switch between stderr and debug_file output:'), (45, '// tprintf(""write to configured output\\n"");'), (46, '// debug_file = """";'), (47, '// tprintf(""write to stderr\\n"");'), (48, '// debug_file = ""/tmp/log"";'), (49, '// tprintf(""write to /tmp/log\\n"");'), (50, '// debug_file = """";'), (51, '// tprintf(""write to stderr\\n"");'), (52, 'static void set_debugfp() {'), (53, '  if (debug_file.empty()) {'), (54, '    // Write to stderr.'), (55, '    if (debugfp != stderr && debugfp != nullptr) {'), (56, '      fclose(debugfp);'), (57, '    }'), (58, '    debugfp = stderr;'), (59, '  } else if (debugfp == stderr || debugfp == nullptr) {'), (60, '    // Write to file.'), (62, '    if (debug_file == ""/dev/null"") {'), (63, '      // Replace /dev/null by nul for Windows.'), (64, '      debug_file = ""nul"";'), (65, '    }'), (67, '    debugfp = fopen(debug_file.c_str(), ""wb"");'), (69, '}'), (71, '// Trace printf.'), (72, 'void tprintf(const char *format, ...) {'), (73, '  set_debugfp();'), (76, '  vfprintf(debugfp, format, args);')], 'deleted': [(38, '// Trace printf'), (39, 'void tprintf(const char *format, ...) {'), (40, '  const char *debug_file_name = debug_file.c_str();'), (41, '  static FILE *debugfp = nullptr; // debug file'), (42, ''), (43, '  if (debug_file_name == nullptr) {'), (44, '    // This should not happen.'), (45, '    return;'), (46, '  }'), (49, '  // Replace /dev/null by nul for Windows.'), (50, '  if (strcmp(debug_file_name, ""/dev/null"") == 0) {'), (51, '    debug_file_name = ""nul"";'), (52, '    debug_file.set_value(debug_file_name);'), (53, '  }'), (55, ''), (56, ""  if (debugfp == nullptr && debug_file_name[0] != '\\0') {""), (57, '    debugfp = fopen(debug_file_name, ""wb"");'), (58, ""  } else if (debugfp != nullptr && debug_file_name[0] == '\\0') {""), (59, '    fclose(debugfp);'), (60, '    debugfp = nullptr;'), (65, '  if (debugfp != nullptr) {'), (66, '    vfprintf(debugfp, format, args);'), (67, '  } else {'), (68, '    vfprintf(stderr, format, args);'), (69, '  }')]}",yes
src\ccutil\tprintf.cpp,src\ccutil\tprintf.cpp,3a4a013dfe2c89fea68211f69e7b19509beb6317,1b222452f4fe6992f2e3376d603084ce997c7585,"tprintf: Remove unused macro and update comment

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -31,8 +31,6 @@
 
 namespace tesseract {
 
-#define MAX_MSG_LEN 2048
-
 INT_VAR(log_level, INT_MAX, ""Logging level"");
 
 static STRING_VAR(debug_file, """", ""File to send tprintf output to"");
","{'added': [], 'deleted': [(34, '#define MAX_MSG_LEN 2048'), (35, '')]}",yes
src\ccutil\tprintf.h,src\ccutil\tprintf.h,3a4a013dfe2c89fea68211f69e7b19509beb6317,1b222452f4fe6992f2e3376d603084ce997c7585,"tprintf: Remove unused macro and update comment

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -19,7 +19,7 @@
 #ifndef TESSERACT_CCUTIL_TPRINTF_H
 #define TESSERACT_CCUTIL_TPRINTF_H
 
-#include ""params.h"" // for BOOL_VAR_H
+#include ""params.h""           // for INT_VAR_H
 #include <tesseract/export.h> // for TESS_API
 
 namespace tesseract {
","{'added': [(22, '#include ""params.h""           // for INT_VAR_H')], 'deleted': [(22, '#include ""params.h"" // for BOOL_VAR_H')]}",yes
src\ccmain\ltrresultiterator.cpp,src\ccmain\ltrresultiterator.cpp,1b222452f4fe6992f2e3376d603084ce997c7585,027ad18a8ddeb622b43e83dcc5a326124799cd85,"Remove unnecessary assignment and assertions

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -99,13 +99,11 @@ float LTRResultIterator::Confidence(PageIteratorLevel level) const {
   float mean_certainty = 0.0f;
   int certainty_count = 0;
   PAGE_RES_IT res_it(*it_);
-  WERD_CHOICE *best_choice = res_it.word()->best_choice;
-  ASSERT_HOST(best_choice != nullptr);
+  WERD_CHOICE *best_choice;
   switch (level) {
     case RIL_BLOCK:
       do {
         best_choice = res_it.word()->best_choice;
-        ASSERT_HOST(best_choice != nullptr);
         mean_certainty += best_choice->certainty();
         ++certainty_count;
         res_it.forward();
@@ -114,7 +112,6 @@ float LTRResultIterator::Confidence(PageIteratorLevel level) const {
     case RIL_PARA:
       do {
         best_choice = res_it.word()->best_choice;
-        ASSERT_HOST(best_choice != nullptr);
         mean_certainty += best_choice->certainty();
         ++certainty_count;
         res_it.forward();
@@ -124,19 +121,20 @@ float LTRResultIterator::Confidence(PageIteratorLevel level) const {
     case RIL_TEXTLINE:
       do {
         best_choice = res_it.word()->best_choice;
-        ASSERT_HOST(best_choice != nullptr);
         mean_certainty += best_choice->certainty();
         ++certainty_count;
         res_it.forward();
       } while (res_it.row() == res_it.prev_row());
       break;
     case RIL_WORD:
-      mean_certainty += best_choice->certainty();
-      ++certainty_count;
+      best_choice = res_it.word()->best_choice;
+      mean_certainty = best_choice->certainty();
+      certainty_count = 1;
       break;
     case RIL_SYMBOL:
-      mean_certainty += best_choice->certainty(blob_index_);
-      ++certainty_count;
+      best_choice = res_it.word()->best_choice;
+      mean_certainty = best_choice->certainty(blob_index_);
+      certainty_count = 1;
   }
   if (certainty_count > 0) {
     mean_certainty /= certainty_count;
@@ -320,7 +318,6 @@ char *LTRResultIterator::WordNormedUTF8Text() const {
   std::string ocr_text;
   WERD_CHOICE *best_choice = it_->word()->best_choice;
   const UNICHARSET *unicharset = it_->word()->uch_set;
-  ASSERT_HOST(best_choice != nullptr);
   for (unsigned i = 0; i < best_choice->length(); ++i) {
     ocr_text += unicharset->get_normed_unichar(best_choice->unichar_id(i));
   }
","{'added': [(102, '  WERD_CHOICE *best_choice;'), (130, '      best_choice = res_it.word()->best_choice;'), (131, '      mean_certainty = best_choice->certainty();'), (132, '      certainty_count = 1;'), (135, '      best_choice = res_it.word()->best_choice;'), (136, '      mean_certainty = best_choice->certainty(blob_index_);'), (137, '      certainty_count = 1;')], 'deleted': [(102, '  WERD_CHOICE *best_choice = res_it.word()->best_choice;'), (103, '  ASSERT_HOST(best_choice != nullptr);'), (108, '        ASSERT_HOST(best_choice != nullptr);'), (117, '        ASSERT_HOST(best_choice != nullptr);'), (127, '        ASSERT_HOST(best_choice != nullptr);'), (134, '      mean_certainty += best_choice->certainty();'), (135, '      ++certainty_count;'), (138, '      mean_certainty += best_choice->certainty(blob_index_);'), (139, '      ++certainty_count;'), (323, '  ASSERT_HOST(best_choice != nullptr);')]}",yes
src\ccutil\unicharset.cpp,src\ccutil\unicharset.cpp,027ad18a8ddeb622b43e83dcc5a326124799cd85,6be58e54fac0c204e36d68b37599befea90889a5,"Fix several format strings

This fixes five performance issues reported by Codacy:

    %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed int'.
    %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'.
    %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -824,7 +824,7 @@ bool UNICHARSET::load_via_fgets(
     stream >> std::setw(255) >> unichar >> std::hex >> properties >> std::dec;
     // stream.flags(std::ios::dec);
     if (stream.fail()) {
-      fprintf(stderr, ""%s:%u failed\n"", __FILE__, __LINE__);
+      fprintf(stderr, ""%s:%d failed\n"", __FILE__, __LINE__);
       return false;
     }
     auto position = stream.tellg();
","{'added': [(827, '      fprintf(stderr, ""%s:%d failed\\n"", __FILE__, __LINE__);')], 'deleted': [(827, '      fprintf(stderr, ""%s:%u failed\\n"", __FILE__, __LINE__);')]}",yes
src\classify\clusttool.cpp,src\classify\clusttool.cpp,027ad18a8ddeb622b43e83dcc5a326124799cd85,6be58e54fac0c204e36d68b37599befea90889a5,"Fix several format strings

This fixes five performance issues reported by Codacy:

    %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed int'.
    %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'.
    %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -277,7 +277,7 @@ void WritePrototype(FILE *File, uint16_t N, PROTOTYPE *Proto) {
     fprintf(File, ""insignificant "");
   }
   WriteProtoStyle(File, static_cast<PROTOSTYLE>(Proto->Style));
-  fprintf(File, ""%6d\n\t"", Proto->NumSamples);
+  fprintf(File, ""%6u\n\t"", Proto->NumSamples);
   WriteNFloats(File, N, &Proto->Mean[0]);
   fprintf(File, ""\t"");
 
","{'added': [(280, '  fprintf(File, ""%6u\\n\\t"", Proto->NumSamples);')], 'deleted': [(280, '  fprintf(File, ""%6d\\n\\t"", Proto->NumSamples);')]}",yes
src\viewer\scrollview.cpp,src\viewer\scrollview.cpp,027ad18a8ddeb622b43e83dcc5a326124799cd85,6be58e54fac0c204e36d68b37599befea90889a5,"Fix several format strings

This fixes five performance issues reported by Codacy:

    %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed int'.
    %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'.
    %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -307,7 +307,7 @@ void ScrollView::Initialize(const char *name, int x_pos, int y_pos, int x_size,
   // Set up an actual Window on the client side.
   char message[kMaxMsgSize];
   snprintf(message, sizeof(message),
-           ""w%u = luajava.newInstance('com.google.scrollview.ui""
+           ""w%d = luajava.newInstance('com.google.scrollview.ui""
            "".SVWindow','%s',%u,%u,%u,%u,%u,%u,%u)\n"",
            window_id_, window_name_, window_id_, x_pos, y_pos, x_size, y_size, x_canvas_size,
            y_canvas_size);
@@ -393,7 +393,7 @@ void ScrollView::SendMsg(const char *format, ...) {
   va_end(args);
 
   char form[kMaxMsgSize];
-  snprintf(form, sizeof(form), ""w%u:%s\n"", window_id_, message);
+  snprintf(form, sizeof(form), ""w%d:%s\n"", window_id_, message);
 
   stream_->Send(form);
 }
@@ -532,7 +532,7 @@ void ScrollView::AlwaysOnTop(bool b) {
 // Adds a message entry to the message box.
 void ScrollView::AddMessage(const char *message) {
   char form[kMaxMsgSize];
-  snprintf(form, sizeof(form), ""w%u:%s"", window_id_, message);
+  snprintf(form, sizeof(form), ""w%d:%s"", window_id_, message);
 
   char *esc = AddEscapeChars(form);
   SendMsg(""addMessage(\""%s\"")"", esc);
","{'added': [(310, '           ""w%d = luajava.newInstance(\'com.google.scrollview.ui""'), (396, '  snprintf(form, sizeof(form), ""w%d:%s\\n"", window_id_, message);'), (535, '  snprintf(form, sizeof(form), ""w%d:%s"", window_id_, message);')], 'deleted': [(310, '           ""w%u = luajava.newInstance(\'com.google.scrollview.ui""'), (396, '  snprintf(form, sizeof(form), ""w%u:%s\\n"", window_id_, message);'), (535, '  snprintf(form, sizeof(form), ""w%u:%s"", window_id_, message);')]}",yes
src\ccutil\ambigs.cpp,src\ccutil\ambigs.cpp,6be58e54fac0c204e36d68b37599befea90889a5,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,"Initialize variables in initialization list

This fixes several performance issues reported by Coverity:

    Variable 'master_trainer_' is assigned in constructor body.
    Consider performing initialization in initialization list.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -39,12 +39,9 @@ static const char kIllegalUnicharMsg[] = ""Illegal unichar %s in ambiguity specif
 //   UNICHAR_LEN * (MAX_AMBIG_SIZE + 1) for each part of the ambig
 const int kMaxAmbigStringSize = UNICHAR_LEN * (MAX_AMBIG_SIZE + 1);
 
-AmbigSpec::AmbigSpec() {
+AmbigSpec::AmbigSpec() : correct_ngram_id(INVALID_UNICHAR_ID), type(NOT_AMBIG), wrong_ngram_size(0) {
   wrong_ngram[0] = INVALID_UNICHAR_ID;
   correct_fragments[0] = INVALID_UNICHAR_ID;
-  correct_ngram_id = INVALID_UNICHAR_ID;
-  type = NOT_AMBIG;
-  wrong_ngram_size = 0;
 }
 
 // Initializes the ambigs by adding a nullptr pointer to each table.
","{'added': [(42, 'AmbigSpec::AmbigSpec() : correct_ngram_id(INVALID_UNICHAR_ID), type(NOT_AMBIG), wrong_ngram_size(0) {')], 'deleted': [(42, 'AmbigSpec::AmbigSpec() {'), (45, '  correct_ngram_id = INVALID_UNICHAR_ID;'), (46, '  type = NOT_AMBIG;'), (47, '  wrong_ngram_size = 0;')]}",yes
src\classify\adaptive.cpp,src\classify\adaptive.cpp,6be58e54fac0c204e36d68b37599befea90889a5,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,"Initialize variables in initialization list

This fixes several performance issues reported by Coverity:

    Variable 'master_trainer_' is assigned in constructor body.
    Consider performing initialization in initialization list.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -59,13 +59,12 @@ PERM_CONFIG_STRUCT::~PERM_CONFIG_STRUCT() {
   delete[] Ambigs;
 }
 
-ADAPT_CLASS_STRUCT::ADAPT_CLASS_STRUCT() {
-  NumPermConfigs = 0;
-  MaxNumTimesSeen = 0;
-  TempProtos = NIL_LIST;
-
-  PermProtos = NewBitVector(MAX_NUM_PROTOS);
-  PermConfigs = NewBitVector(MAX_NUM_CONFIGS);
+ADAPT_CLASS_STRUCT::ADAPT_CLASS_STRUCT() :
+  NumPermConfigs(0),
+  MaxNumTimesSeen(0),
+  PermProtos(NewBitVector(MAX_NUM_PROTOS)),
+  PermConfigs(NewBitVector(MAX_NUM_CONFIGS)),
+  TempProtos(NIL_LIST) {
   zero_all_bits(PermProtos, WordsInVectorOfSize(MAX_NUM_PROTOS));
   zero_all_bits(PermConfigs, WordsInVectorOfSize(MAX_NUM_CONFIGS));
 
@@ -124,16 +123,13 @@ int Classify::GetFontinfoId(ADAPT_CLASS_STRUCT *Class, uint8_t ConfigId) {
 ///
 /// @param MaxProtoId  max id of any proto in new config
 /// @param FontinfoId font information from pre-trained templates
-TEMP_CONFIG_STRUCT::TEMP_CONFIG_STRUCT(int maxProtoId, int fontinfoId) {
-  int NumProtos = maxProtoId + 1;
-
-  Protos = NewBitVector(NumProtos);
-
-  NumTimesSeen = 1;
-  MaxProtoId = maxProtoId;
-  ProtoVectorSize = WordsInVectorOfSize(NumProtos);
+TEMP_CONFIG_STRUCT::TEMP_CONFIG_STRUCT(int maxProtoId, int fontinfoId) :
+  NumTimesSeen(1),
+  ProtoVectorSize(WordsInVectorOfSize(maxProtoId + 1)),
+  MaxProtoId(maxProtoId),
+  Protos(NewBitVector(maxProtoId + 1)),
+  FontinfoId(fontinfoId) {
   zero_all_bits(Protos, ProtoVectorSize);
-  FontinfoId = fontinfoId;
 }
 
 TEMP_CONFIG_STRUCT::~TEMP_CONFIG_STRUCT() {
","{'added': [(62, 'ADAPT_CLASS_STRUCT::ADAPT_CLASS_STRUCT() :'), (63, '  NumPermConfigs(0),'), (64, '  MaxNumTimesSeen(0),'), (65, '  PermProtos(NewBitVector(MAX_NUM_PROTOS)),'), (66, '  PermConfigs(NewBitVector(MAX_NUM_CONFIGS)),'), (67, '  TempProtos(NIL_LIST) {'), (126, 'TEMP_CONFIG_STRUCT::TEMP_CONFIG_STRUCT(int maxProtoId, int fontinfoId) :'), (127, '  NumTimesSeen(1),'), (128, '  ProtoVectorSize(WordsInVectorOfSize(maxProtoId + 1)),'), (129, '  MaxProtoId(maxProtoId),'), (130, '  Protos(NewBitVector(maxProtoId + 1)),'), (131, '  FontinfoId(fontinfoId) {')], 'deleted': [(62, 'ADAPT_CLASS_STRUCT::ADAPT_CLASS_STRUCT() {'), (63, '  NumPermConfigs = 0;'), (64, '  MaxNumTimesSeen = 0;'), (65, '  TempProtos = NIL_LIST;'), (66, ''), (67, '  PermProtos = NewBitVector(MAX_NUM_PROTOS);'), (68, '  PermConfigs = NewBitVector(MAX_NUM_CONFIGS);'), (127, 'TEMP_CONFIG_STRUCT::TEMP_CONFIG_STRUCT(int maxProtoId, int fontinfoId) {'), (128, '  int NumProtos = maxProtoId + 1;'), (129, ''), (130, '  Protos = NewBitVector(NumProtos);'), (131, ''), (132, '  NumTimesSeen = 1;'), (133, '  MaxProtoId = maxProtoId;'), (134, '  ProtoVectorSize = WordsInVectorOfSize(NumProtos);'), (136, '  FontinfoId = fontinfoId;')]}",yes
src\tesseract.cpp,src\tesseract.cpp,6be58e54fac0c204e36d68b37599befea90889a5,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,"Initialize variables in initialization list

This fixes several performance issues reported by Coverity:

    Variable 'master_trainer_' is assigned in constructor body.
    Consider performing initialization in initialization list.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -78,8 +78,8 @@ static void Win32WarningHandler(const char *module, const char *fmt, va_list ap)
 
 class AutoWin32ConsoleOutputCP {
 public:
-  explicit AutoWin32ConsoleOutputCP(UINT codeCP) {
-    oldCP_ = GetConsoleOutputCP();
+  explicit AutoWin32ConsoleOutputCP(UINT codeCP) :
+    oldCP_(GetConsoleOutputCP()) {
     SetConsoleOutputCP(codeCP);
   }
   ~AutoWin32ConsoleOutputCP() {
","{'added': [(81, '  explicit AutoWin32ConsoleOutputCP(UINT codeCP) :'), (82, '    oldCP_(GetConsoleOutputCP()) {')], 'deleted': [(81, '  explicit AutoWin32ConsoleOutputCP(UINT codeCP) {'), (82, '    oldCP_ = GetConsoleOutputCP();')]}",yes
src\textord\devanagari_processing.cpp,src\textord\devanagari_processing.cpp,6be58e54fac0c204e36d68b37599befea90889a5,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,"Initialize variables in initialization list

This fixes several performance issues reported by Coverity:

    Variable 'master_trainer_' is assigned in constructor body.
    Consider performing initialization in initialization list.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -38,15 +38,16 @@ INT_VAR(devanagari_split_debuglevel, 0, ""Debug level for split shiro-rekha proce
 BOOL_VAR(devanagari_split_debugimage, 0,
          ""Whether to create a debug image for split shiro-rekha process."");
 
-ShiroRekhaSplitter::ShiroRekhaSplitter() {
-  orig_pix_ = nullptr;
-  segmentation_block_list_ = nullptr;
-  splitted_image_ = nullptr;
-  global_xheight_ = kUnspecifiedXheight;
-  perform_close_ = false;
-  debug_image_ = nullptr;
-  pageseg_split_strategy_ = NO_SPLIT;
-  ocr_split_strategy_ = NO_SPLIT;
+ShiroRekhaSplitter::ShiroRekhaSplitter() :
+  orig_pix_(nullptr),
+  splitted_image_(nullptr),
+  pageseg_split_strategy_(NO_SPLIT),
+  ocr_split_strategy_(NO_SPLIT),
+  debug_image_(nullptr),
+  segmentation_block_list_(nullptr),
+  global_xheight_(kUnspecifiedXheight),
+  perform_close_(false)
+{
 }
 
 ShiroRekhaSplitter::~ShiroRekhaSplitter() {
","{'added': [(41, 'ShiroRekhaSplitter::ShiroRekhaSplitter() :'), (42, '  orig_pix_(nullptr),'), (43, '  splitted_image_(nullptr),'), (44, '  pageseg_split_strategy_(NO_SPLIT),'), (45, '  ocr_split_strategy_(NO_SPLIT),'), (46, '  debug_image_(nullptr),'), (47, '  segmentation_block_list_(nullptr),'), (48, '  global_xheight_(kUnspecifiedXheight),'), (49, '  perform_close_(false)'), (50, '{')], 'deleted': [(41, 'ShiroRekhaSplitter::ShiroRekhaSplitter() {'), (42, '  orig_pix_ = nullptr;'), (43, '  segmentation_block_list_ = nullptr;'), (44, '  splitted_image_ = nullptr;'), (45, '  global_xheight_ = kUnspecifiedXheight;'), (46, '  perform_close_ = false;'), (47, '  debug_image_ = nullptr;'), (48, '  pageseg_split_strategy_ = NO_SPLIT;'), (49, '  ocr_split_strategy_ = NO_SPLIT;')]}",yes
src\textord\tabfind.cpp,src\textord\tabfind.cpp,6be58e54fac0c204e36d68b37599befea90889a5,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,"Initialize variables in initialization list

This fixes several performance issues reported by Coverity:

    Variable 'master_trainer_' is assigned in constructor body.
    Consider performing initialization in initialization list.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -67,8 +67,8 @@ TabFind::TabFind(int gridsize, const ICOORD &bleft, const ICOORD &tright, TabVec
     : AlignedBlob(gridsize, bleft, tright)
     , resolution_(resolution)
     , image_origin_(0, tright.y() - 1)
-    , v_it_(&vectors_) {
-  width_cb_ = nullptr;
+    , v_it_(&vectors_)
+    , width_cb_(nullptr) {
   v_it_.add_list_after(vlines);
   SetVerticalSkewAndParallelize(vertical_x, vertical_y);
   using namespace std::placeholders; // for _1
","{'added': [(70, '    , v_it_(&vectors_)'), (71, '    , width_cb_(nullptr) {')], 'deleted': [(70, '    , v_it_(&vectors_) {'), (71, '  width_cb_ = nullptr;')]}",yes
src\wordrec\wordrec.cpp,src\wordrec\wordrec.cpp,6be58e54fac0c204e36d68b37599befea90889a5,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,"Initialize variables in initialization list

This fixes several performance issues reported by Coverity:

    Variable 'master_trainer_' is assigned in constructor body.
    Consider performing initialization in initialization list.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -99,10 +99,10 @@ Wordrec::Wordrec()
                   ""Save alternative paths found during chopping""
                   "" and segmentation search"",
                   params())
-    , pass2_ok_split(0.0f) {
-  prev_word_best_choice_ = nullptr;
-  language_model_ = std::make_unique<LanguageModel>(&get_fontinfo_table(), &(getDict()));
-  fill_lattice_ = nullptr;
+    , language_model_(std::make_unique<LanguageModel>(&get_fontinfo_table(), &(getDict())))
+    , pass2_ok_split(0.0f)
+    , prev_word_best_choice_(nullptr)
+    , fill_lattice_(nullptr) {
 }
 
 } // namespace tesseract
","{'added': [(102, '    , language_model_(std::make_unique<LanguageModel>(&get_fontinfo_table(), &(getDict())))'), (103, '    , pass2_ok_split(0.0f)'), (104, '    , prev_word_best_choice_(nullptr)'), (105, '    , fill_lattice_(nullptr) {')], 'deleted': [(102, '    , pass2_ok_split(0.0f) {'), (103, '  prev_word_best_choice_ = nullptr;'), (104, '  language_model_ = std::make_unique<LanguageModel>(&get_fontinfo_table(), &(getDict()));'), (105, '  fill_lattice_ = nullptr;')]}",yes
unittest\mastertrainer_test.cc,unittest\mastertrainer_test.cc,6be58e54fac0c204e36d68b37599befea90889a5,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,"Initialize variables in initialization list

This fixes several performance issues reported by Coverity:

    Variable 'master_trainer_' is assigned in constructor body.
    Consider performing initialization in initialization list.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -156,9 +156,9 @@ protected:
     return file::JoinPath(FLAGS_test_tmpdir, name);
   }
 
-  MasterTrainerTest() {
-    shape_table_ = nullptr;
-    master_trainer_ = nullptr;
+  MasterTrainerTest() :
+    shape_table_(nullptr),
+    master_trainer_(nullptr) {
   }
   ~MasterTrainerTest() override {
     delete shape_table_;
","{'added': [(159, '  MasterTrainerTest() :'), (160, '    shape_table_(nullptr),'), (161, '    master_trainer_(nullptr) {')], 'deleted': [(159, '  MasterTrainerTest() {'), (160, '    shape_table_ = nullptr;'), (161, '    master_trainer_ = nullptr;')]}",yes
src\ccmain\pagesegmain.cpp,src\ccmain\pagesegmain.cpp,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,5fd7870cd6fbb685a2bcaa7c87145e712998bc52,"Replace std::string::substr by std::string::resize

This fixes two performance issues reported by Codacy:

    Ineffective call of function 'substr' because a prefix of the string
    is assigned to itself. Use resize() or pop_back() instead.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -108,8 +108,10 @@ int Tesseract::SegmentPage(const char *input_file, BLOCK_LIST *blocks, Tesseract
   // If a UNLV zone file can be found, use that instead of segmentation.
   if (!PSM_COL_FIND_ENABLED(pageseg_mode) && input_file != nullptr && input_file[0] != '\0') {
     std::string name = input_file;
-    std::size_t lastdot = name.find_last_of(""."");
-    name = name.substr(0, lastdot);
+    auto lastdot = name.find_last_of('.');
+    if (lastdot != std::string::npos) {
+      name.resize(lastdot);
+    }
     read_unlv_file(name, width, height, blocks);
   }
   if (blocks->empty()) {
","{'added': [(111, ""    auto lastdot = name.find_last_of('.');""), (112, '    if (lastdot != std::string::npos) {'), (113, '      name.resize(lastdot);'), (114, '    }')], 'deleted': [(111, '    std::size_t lastdot = name.find_last_of(""."");'), (112, '    name = name.substr(0, lastdot);')]}",yes
src\training\pango\pango_font_info.cpp,src\training\pango\pango_font_info.cpp,4ea8495d1ce597e30bd9c9c315eaf8388c1ba257,5fd7870cd6fbb685a2bcaa7c87145e712998bc52,"Replace std::string::substr by std::string::resize

This fixes two performance issues reported by Codacy:

    Ineffective call of function 'substr' because a prefix of the string
    is assigned to itself. Use resize() or pop_back() instead.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -521,9 +521,9 @@ bool FontUtils::IsAvailableFont(const char *input_query_desc, std::string *best_
     *best_match = selected_desc_str;
     // Clip the ending ' 0' if there is one. It seems that, if there is no
     // point size on the end of the fontname, then Pango always appends ' 0'.
-    int len = best_match->size();
+    auto len = best_match->size();
     if (len > 2 && best_match->at(len - 1) == '0' && best_match->at(len - 2) == ' ') {
-      *best_match = best_match->substr(0, len - 2);
+      best_match->resize(len - 2);
     }
   }
   g_free(selected_desc_str);
","{'added': [(524, '    auto len = best_match->size();'), (526, '      best_match->resize(len - 2);')], 'deleted': [(524, '    int len = best_match->size();'), (526, '      *best_match = best_match->substr(0, len - 2);')]}",yes
src\ccmain\control.cpp,src\ccmain\control.cpp,5fd7870cd6fbb685a2bcaa7c87145e712998bc52,d50600a618a37b79549fead90e19891453f64842,"Fix location of namespace statement

It separated a comment for Tesseract::recog_pseudo_word from this function.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -51,13 +51,14 @@ const char *const kBackUpConfigFile = ""tempconfigdata.config"";
 const double kMinRefitXHeightFraction = 0.5;
 #endif // ! DISABLED_LEGACY_ENGINE
 
+namespace tesseract {
+
 /**
  * Make a word from the selected blobs and run Tess on them.
  *
  * @param page_res recognise blobs
  * @param selection_box within this box
  */
-namespace tesseract {
 
 void Tesseract::recog_pseudo_word(PAGE_RES *page_res, TBOX &selection_box) {
   PAGE_RES_IT *it = make_pseudo_word(page_res, selection_box);
","{'added': [(54, 'namespace tesseract {'), (55, '')], 'deleted': [(60, 'namespace tesseract {')]}",yes
Makefile.am,Makefile.am,d50600a618a37b79549fead90e19891453f64842,67aad9ed13d9a6e16a6d72703839afcf80292737,"Remove old comment in Makefile.am

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -23,7 +23,6 @@ uninstall-hook:
 	rm -rf $(DESTDIR)$(pkgincludedir)
 
 dist-hook:
-# Need to remove .svn directories from directories
 # added using EXTRA_DIST. $(distdir)/tessdata would in
 # theory suffice.
 	rm -rf `find $(distdir) -name .deps -type d`
","{'added': [], 'deleted': [(26, '# Need to remove .svn directories from directories')]}",yes
Makefile.am,Makefile.am,67aad9ed13d9a6e16a6d72703839afcf80292737,4e42f9de541f21acb010886925afe42094a15dfe,"Compile src/lstm/tfnetwork.cpp only in builds with TensorFlow

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -549,11 +549,11 @@ libtesseract_lstm_la_SOURCES += src/lstm/reconfig.cpp
 libtesseract_lstm_la_SOURCES += src/lstm/reversed.cpp
 libtesseract_lstm_la_SOURCES += src/lstm/series.cpp
 libtesseract_lstm_la_SOURCES += src/lstm/stridemap.cpp
-libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.cpp
-libtesseract_lstm_la_SOURCES += src/lstm/weightmatrix.cpp
 if TENSORFLOW
+libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.cpp
 libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.pb.cc
 endif
+libtesseract_lstm_la_SOURCES += src/lstm/weightmatrix.cpp
 
 # Rules for src/textord.
 
","{'added': [(553, 'libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.cpp'), (556, 'libtesseract_lstm_la_SOURCES += src/lstm/weightmatrix.cpp')], 'deleted': [(552, 'libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.cpp'), (553, 'libtesseract_lstm_la_SOURCES += src/lstm/weightmatrix.cpp')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,4e42f9de541f21acb010886925afe42094a15dfe,fc50324986f06771599ed46088b9ea156a4a09a2,"Modernize code for list of available models (#4308)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -64,6 +64,7 @@
 #include <cmath>    // for round, M_PI
 #include <cstdint>  // for int32_t
 #include <cstring>  // for strcmp, strcpy
+#include <filesystem> // for std::filesystem
 #include <fstream>  // for size_t
 #include <iostream> // for std::cin
 #include <locale>   // for std::locale::classic
@@ -82,15 +83,9 @@
 #endif
 
 #if defined(_WIN32)
-#  include <fcntl.h>
-#  include <io.h>
-#else
-#  include <dirent.h> // for closedir, opendir, readdir, DIR, dirent
-#  include <libgen.h>
-#  include <sys/stat.h> // for stat, S_IFDIR
-#  include <sys/types.h>
-#  include <unistd.h>
-#endif // _WIN32
+#  include <fcntl.h> // for _O_BINARY
+#  include <io.h>    // for _setmode
+#endif
 
 namespace tesseract {
 
@@ -149,61 +144,18 @@ static void ExtractFontName(const char* filename, std::string* fontname) {
 
 /* Add all available languages recursively.
  */
-static void addAvailableLanguages(const std::string &datadir, const std::string &base,
+static void addAvailableLanguages(const std::string &datadir,
                                   std::vector<std::string> *langs) {
-  auto base2 = base;
-  if (!base2.empty()) {
-    base2 += ""/"";
-  }
-  const size_t extlen = sizeof(kTrainedDataSuffix);
-#ifdef _WIN32
-  WIN32_FIND_DATA data;
-  HANDLE handle = FindFirstFile((datadir + base2 + ""*"").c_str(), &data);
-  if (handle != INVALID_HANDLE_VALUE) {
-    BOOL result = TRUE;
-    for (; result;) {
-      char *name = data.cFileName;
-      // Skip '.', '..', and hidden files
-      if (name[0] != '.') {
-        if ((data.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) == FILE_ATTRIBUTE_DIRECTORY) {
-          addAvailableLanguages(datadir, base2 + name, langs);
-        } else {
-          size_t len = strlen(name);
-          if (len > extlen && name[len - extlen] == '.' &&
-              strcmp(&name[len - extlen + 1], kTrainedDataSuffix) == 0) {
-            name[len - extlen] = '\0';
-            langs->push_back(base2 + name);
-          }
-        }
-      }
-      result = FindNextFile(handle, &data);
-    }
-    FindClose(handle);
-  }
-#else // _WIN32
-  DIR *dir = opendir((datadir + base).c_str());
-  if (dir != nullptr) {
-    dirent *de;
-    while ((de = readdir(dir))) {
-      char *name = de->d_name;
-      // Skip '.', '..', and hidden files
-      if (name[0] != '.') {
-        struct stat st;
-        if (stat((datadir + base2 + name).c_str(), &st) == 0 && (st.st_mode & S_IFDIR) == S_IFDIR) {
-          addAvailableLanguages(datadir, base2 + name, langs);
-        } else {
-          size_t len = strlen(name);
-          if (len > extlen && name[len - extlen] == '.' &&
-              strcmp(&name[len - extlen + 1], kTrainedDataSuffix) == 0) {
-            name[len - extlen] = '\0';
-            langs->push_back(base2 + name);
-          }
-        }
-      }
+  for (const auto& entry :
+       std::filesystem::recursive_directory_iterator(datadir,
+         std::filesystem::directory_options::follow_directory_symlink |
+         std::filesystem::directory_options::skip_permission_denied)) {
+    auto path = entry.path().lexically_relative(datadir).string();
+    auto extPos = path.rfind("".traineddata"");
+    if (extPos != std::string::npos) {
+      langs->push_back(path.substr(0, extPos));
     }
-    closedir(dir);
   }
-#endif
 }
 
 TessBaseAPI::TessBaseAPI()
@@ -444,7 +396,7 @@ void TessBaseAPI::GetLoadedLanguagesAsVector(std::vector<std::string> *langs) co
 void TessBaseAPI::GetAvailableLanguagesAsVector(std::vector<std::string> *langs) const {
   langs->clear();
   if (tesseract_ != nullptr) {
-    addAvailableLanguages(tesseract_->datadir, """", langs);
+    addAvailableLanguages(tesseract_->datadir, langs);
     std::sort(langs->begin(), langs->end());
   }
 }
","{'added': [(67, '#include <filesystem> // for std::filesystem'), (86, '#  include <fcntl.h> // for _O_BINARY'), (87, '#  include <io.h>    // for _setmode'), (88, '#endif'), (147, 'static void addAvailableLanguages(const std::string &datadir,'), (149, '  for (const auto& entry :'), (150, '       std::filesystem::recursive_directory_iterator(datadir,'), (151, '         std::filesystem::directory_options::follow_directory_symlink |'), (152, '         std::filesystem::directory_options::skip_permission_denied)) {'), (153, '    auto path = entry.path().lexically_relative(datadir).string();'), (154, '    auto extPos = path.rfind("".traineddata"");'), (155, '    if (extPos != std::string::npos) {'), (156, '      langs->push_back(path.substr(0, extPos));'), (399, '    addAvailableLanguages(tesseract_->datadir, langs);')], 'deleted': [(85, '#  include <fcntl.h>'), (86, '#  include <io.h>'), (87, '#else'), (88, '#  include <dirent.h> // for closedir, opendir, readdir, DIR, dirent'), (89, '#  include <libgen.h>'), (90, '#  include <sys/stat.h> // for stat, S_IFDIR'), (91, '#  include <sys/types.h>'), (92, '#  include <unistd.h>'), (93, '#endif // _WIN32'), (152, 'static void addAvailableLanguages(const std::string &datadir, const std::string &base,'), (154, '  auto base2 = base;'), (155, '  if (!base2.empty()) {'), (156, '    base2 += ""/"";'), (157, '  }'), (158, '  const size_t extlen = sizeof(kTrainedDataSuffix);'), (159, '#ifdef _WIN32'), (160, '  WIN32_FIND_DATA data;'), (161, '  HANDLE handle = FindFirstFile((datadir + base2 + ""*"").c_str(), &data);'), (162, '  if (handle != INVALID_HANDLE_VALUE) {'), (163, '    BOOL result = TRUE;'), (164, '    for (; result;) {'), (165, '      char *name = data.cFileName;'), (166, ""      // Skip '.', '..', and hidden files""), (167, ""      if (name[0] != '.') {""), (168, '        if ((data.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) == FILE_ATTRIBUTE_DIRECTORY) {'), (169, '          addAvailableLanguages(datadir, base2 + name, langs);'), (170, '        } else {'), (171, '          size_t len = strlen(name);'), (172, ""          if (len > extlen && name[len - extlen] == '.' &&""), (173, '              strcmp(&name[len - extlen + 1], kTrainedDataSuffix) == 0) {'), (174, ""            name[len - extlen] = '\\0';""), (175, '            langs->push_back(base2 + name);'), (176, '          }'), (177, '        }'), (178, '      }'), (179, '      result = FindNextFile(handle, &data);'), (180, '    }'), (181, '    FindClose(handle);'), (182, '  }'), (183, '#else // _WIN32'), (184, '  DIR *dir = opendir((datadir + base).c_str());'), (185, '  if (dir != nullptr) {'), (186, '    dirent *de;'), (187, '    while ((de = readdir(dir))) {'), (188, '      char *name = de->d_name;'), (189, ""      // Skip '.', '..', and hidden files""), (190, ""      if (name[0] != '.') {""), (191, '        struct stat st;'), (192, '        if (stat((datadir + base2 + name).c_str(), &st) == 0 && (st.st_mode & S_IFDIR) == S_IFDIR) {'), (193, '          addAvailableLanguages(datadir, base2 + name, langs);'), (194, '        } else {'), (195, '          size_t len = strlen(name);'), (196, ""          if (len > extlen && name[len - extlen] == '.' &&""), (197, '              strcmp(&name[len - extlen + 1], kTrainedDataSuffix) == 0) {'), (198, ""            name[len - extlen] = '\\0';""), (199, '            langs->push_back(base2 + name);'), (200, '          }'), (201, '        }'), (202, '      }'), (204, '    closedir(dir);'), (206, '#endif'), (447, '    addAvailableLanguages(tesseract_->datadir, """", langs);')]}",yes
src\ccutil\ccutil.cpp,src\ccutil\ccutil.cpp,fc50324986f06771599ed46088b9ea156a4a09a2,ee80dfe509b9e3efff24dd1ee5d7cd683a2445a5,"Replace access/_access by std::filesystem::exists (#4307)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -10,10 +10,6 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-#if defined(_WIN32)
-#  include <io.h> // for _access
-#endif
-
 #include ""ccutil.h""
 #include ""tprintf.h""  // for tprintf
 
@@ -63,7 +59,7 @@ void CCUtil::main_setup(const std::string &argv0, const std::string &basename) {
     /* Use tessdata prefix from the environment. */
     datadir = tessdata_prefix;
 #if defined(_WIN32)
-  } else if (datadir.empty() || _access(datadir.c_str(), 0) != 0) {
+  } else if (datadir.empty() || !std::filesystem::exists(datadir)) {
     /* Look for tessdata in directory of executable. */
     char path[_MAX_PATH];
     DWORD length = GetModuleFileName(nullptr, path, sizeof(path));
@@ -73,7 +69,7 @@ void CCUtil::main_setup(const std::string &argv0, const std::string &basename) {
         *separator = '\0';
         std::string subdir = path;
         subdir += ""/tessdata"";
-        if (_access(subdir.c_str(), 0) == 0) {
+        if (std::filesystem::exists(subdir)) {
           datadir = subdir;
         }
       }
","{'added': [(62, '  } else if (datadir.empty() || !std::filesystem::exists(datadir)) {'), (72, '        if (std::filesystem::exists(subdir)) {')], 'deleted': [(13, '#if defined(_WIN32)'), (14, '#  include <io.h> // for _access'), (15, '#endif'), (16, ''), (66, '  } else if (datadir.empty() || _access(datadir.c_str(), 0) != 0) {'), (76, '        if (_access(subdir.c_str(), 0) == 0) {')]}",yes
unittest\pagesegmode_test.cc,unittest\pagesegmode_test.cc,fc50324986f06771599ed46088b9ea156a4a09a2,ee80dfe509b9e3efff24dd1ee5d7cd683a2445a5,"Replace access/_access by std::filesystem::exists (#4307)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -9,13 +9,9 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-#if defined(_WIN32)
-#  include <io.h> // for _access
-#else
-#  include <unistd.h> // for access
-#endif
 #include <allheaders.h>
 #include <tesseract/baseapi.h>
+#include <filesystem>
 #include <string>
 #include ""helpers.h""
 #include ""include_gunit.h""
@@ -24,15 +20,6 @@
 
 namespace tesseract {
 
-// Replacement for std::filesystem::exists (C++-17)
-static bool file_exists(const char *filename) {
-#if defined(_WIN32)
-  return _access(filename, 0) == 0;
-#else
-  return access(filename, 0) == 0;
-#endif
-}
-
 // The fixture for testing Tesseract.
 class PageSegModeTest : public testing::Test {
 protected:
@@ -86,7 +73,7 @@ protected:
 // and differently to line and block mode.
 TEST_F(PageSegModeTest, WordTest) {
   std::string filename = file::JoinPath(TESTING_DIR, ""segmodeimg.tif"");
-  if (!file_exists(filename.c_str())) {
+  if (!std::filesystem::exists(filename)) {
     LOG(INFO) << ""Skip test because of missing "" << filename << '\n';
     GTEST_SKIP();
   } else {
","{'added': [(14, '#include <filesystem>'), (76, '  if (!std::filesystem::exists(filename)) {')], 'deleted': [(12, '#if defined(_WIN32)'), (13, '#  include <io.h> // for _access'), (14, '#else'), (15, '#  include <unistd.h> // for access'), (16, '#endif'), (27, '// Replacement for std::filesystem::exists (C++-17)'), (28, 'static bool file_exists(const char *filename) {'), (29, '#if defined(_WIN32)'), (30, '  return _access(filename, 0) == 0;'), (31, '#else'), (32, '  return access(filename, 0) == 0;'), (33, '#endif'), (34, '}'), (35, ''), (89, '  if (!file_exists(filename.c_str())) {')]}",yes
unittest\tatweel_test.cc,unittest\tatweel_test.cc,fc50324986f06771599ed46088b9ea156a4a09a2,ee80dfe509b9e3efff24dd1ee5d7cd683a2445a5,"Replace access/_access by std::filesystem::exists (#4307)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -9,12 +9,7 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-#if defined(_WIN32)
-#  include <io.h> // for _access
-#else
-#  include <unistd.h> // for access
-#endif
-
+#include <filesystem>
 #include ""dawg.h""
 #include ""include_gunit.h""
 #include ""trie.h""
@@ -23,15 +18,6 @@
 
 namespace tesseract {
 
-// Replacement for std::filesystem::exists (C++-17)
-static bool file_exists(const char *filename) {
-#if defined(_WIN32)
-  return _access(filename, 0) == 0;
-#else
-  return access(filename, 0) == 0;
-#endif
-}
-
 class TatweelTest : public ::testing::Test {
 protected:
   void SetUp() override {
@@ -41,7 +27,7 @@ protected:
 
   TatweelTest() {
     std::string filename = TestDataNameToPath(""ara.wordlist"");
-    if (file_exists(filename.c_str())) {
+    if (std::filesystem::exists(filename)) {
       std::string wordlist(""\u0640"");
       CHECK_OK(file::GetContents(filename, &wordlist, file::Defaults()));
       // Put all the unicodes in the unicharset_.
@@ -77,7 +63,7 @@ TEST_F(TatweelTest, DictIgnoresTatweel) {
   // This test verifies that the dictionary ignores the Tatweel character.
   tesseract::Trie trie(tesseract::DAWG_TYPE_WORD, ""ara"", SYSTEM_DAWG_PERM, unicharset_.size(), 0);
   std::string filename = TestDataNameToPath(""ara.wordlist"");
-  if (!file_exists(filename.c_str())) {
+  if (!std::filesystem::exists(filename)) {
     LOG(INFO) << ""Skip test because of missing "" << filename;
     GTEST_SKIP();
   } else {
@@ -91,7 +77,7 @@ TEST_F(TatweelTest, UnicharsetLoadKeepsTatweel) {
   // This test verifies that a load of an existing unicharset keeps any
   // existing tatweel for backwards compatibility.
   std::string filename = TestDataNameToPath(""ara.unicharset"");
-  if (!file_exists(filename.c_str())) {
+  if (!std::filesystem::exists(filename)) {
     LOG(INFO) << ""Skip test because of missing "" << filename;
     GTEST_SKIP();
   } else {
","{'added': [(12, '#include <filesystem>'), (30, '    if (std::filesystem::exists(filename)) {'), (66, '  if (!std::filesystem::exists(filename)) {'), (80, '  if (!std::filesystem::exists(filename)) {')], 'deleted': [(12, '#if defined(_WIN32)'), (13, '#  include <io.h> // for _access'), (14, '#else'), (15, '#  include <unistd.h> // for access'), (16, '#endif'), (17, ''), (26, '// Replacement for std::filesystem::exists (C++-17)'), (27, 'static bool file_exists(const char *filename) {'), (28, '#if defined(_WIN32)'), (29, '  return _access(filename, 0) == 0;'), (30, '#else'), (31, '  return access(filename, 0) == 0;'), (32, '#endif'), (33, '}'), (34, ''), (44, '    if (file_exists(filename.c_str())) {'), (80, '  if (!file_exists(filename.c_str())) {'), (94, '  if (!file_exists(filename.c_str())) {')]}",yes
src\ccmain\control.cpp,src\ccmain\control.cpp,3b9d11951810c199297b01cba64c28b718fabd84,215b023c43f67a52fe4c9f783988503529f5c6dd,"Reduce clock syscalls (#4303)

Gate the sample of the clock by the tessedit_timing_debug flag,
which is the only time it gets used anyway.

This eliminates unnecessary clock_gettime() system calls.","@@ -1312,7 +1312,10 @@ void Tesseract::classify_word_and_language(int pass_n, PAGE_RES_IT *pr_it, WordD
   PointerVector<WERD_RES> best_words;
   // Points to the best result. May be word or in lang_words.
   const WERD_RES *word = word_data->word;
-  clock_t start_t = clock();
+  clock_t start_t = 0;
+  if (tessedit_timing_debug) {
+    start_t = clock();
+  }
   const bool debug = classify_debug_level > 0 || multilang_debug_level > 0;
   if (debug) {
     tprintf(""%s word with lang %s at:"", word->done ? ""Already done"" : ""Processing"",
@@ -1364,8 +1367,8 @@ void Tesseract::classify_word_and_language(int pass_n, PAGE_RES_IT *pr_it, WordD
   } else {
     tprintf(""no best words!!\n"");
   }
-  clock_t ocr_t = clock();
   if (tessedit_timing_debug) {
+    clock_t ocr_t = clock();
     tprintf(""%s (ocr took %.2f sec)\n"", word_data->word->best_choice->unichar_string().c_str(),
             static_cast<double>(ocr_t - start_t) / CLOCKS_PER_SEC);
   }
","{'added': [(1315, '  clock_t start_t = 0;'), (1316, '  if (tessedit_timing_debug) {'), (1317, '    start_t = clock();'), (1318, '  }'), (1371, '    clock_t ocr_t = clock();')], 'deleted': [(1315, '  clock_t start_t = clock();'), (1367, '  clock_t ocr_t = clock();')]}",yes
src\textord\wordseg.cpp,src\textord\wordseg.cpp,ba8dfcece7f3f9a295faa2f106283a87000ecc20,215b023c43f67a52fe4c9f783988503529f5c6dd,Calculate row bounding box in single-word mode per #4304,"@@ -87,6 +87,7 @@ void make_single_word(bool one_blob, TO_ROW_LIST *rows, ROW_LIST *real_rows) {
     word->set_flag(W_EOL, true);
     word->set_flag(W_DONT_CHOP, one_blob);
     word_it.add_after_then_move(word);
+    real_row->recalc_bounding_box();
     row_it.add_after_then_move(real_row);
   }
 }
","{'added': [(90, '    real_row->recalc_bounding_box();')], 'deleted': []}",yes
src\api\hocrrenderer.cpp,src\api\hocrrenderer.cpp,215b023c43f67a52fe4c9f783988503529f5c6dd,ecf0622a85bd4c98a8cfda012376aaebd69df0cd,"Set hOCR capabilities ocrp_dir and ocrp_lang unconditionally

Both `dir` and `lang` are also written if no font information
was requested.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -512,9 +512,9 @@ bool TessHOcrRenderer::BeginDocumentHandler() {
       ""  <meta name='ocr-system' content='tesseract "" TESSERACT_VERSION_STR
       ""' />\n""
       ""  <meta name='ocr-capabilities' content='ocr_page ocr_carea ocr_par""
-      "" ocr_line ocrx_word ocrp_wconf"");
+      "" ocr_line ocrx_word ocrp_dir ocrp_lang ocrp_wconf"");
   if (font_info_) {
-    AppendString("" ocrp_lang ocrp_dir ocrp_font ocrp_fsize"");
+    AppendString("" ocrp_font ocrp_fsize"");
   }
   AppendString(
       ""'/>\n""
","{'added': [(515, '      "" ocr_line ocrx_word ocrp_dir ocrp_lang ocrp_wconf"");'), (517, '    AppendString("" ocrp_font ocrp_fsize"");')], 'deleted': [(515, '      "" ocr_line ocrx_word ocrp_wconf"");'), (517, '    AppendString("" ocrp_lang ocrp_dir ocrp_font ocrp_fsize"");')]}",yes
src\ccstruct\rect.h,src\ccstruct\rect.h,ecf0622a85bd4c98a8cfda012376aaebd69df0cd,46b99041ebf94cd2dfa2ed9c9f1a64119e972556,"Fix comment

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -123,7 +123,7 @@ public:
     }
   }
 
-  TDimension width() const { // how high is it?
+  TDimension width() const { // how wide is it?
     if (!null_box()) {
       return top_right.x() - bot_left.x();
     } else {
","{'added': [(126, '  TDimension width() const { // how wide is it?')], 'deleted': [(126, '  TDimension width() const { // how high is it?')]}",yes
.github\workflows\autotools-openmp.yml,.github\workflows\autotools-openmp.yml,46b99041ebf94cd2dfa2ed9c9f1a64119e972556,620d82812f657816ff5d69ec97c4ae960c009ddb,"CI: Clean more GitHub action (remove unneeded mkdir)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -37,7 +37,6 @@ jobs:
 
     - name: Setup Tesseract
       run: |
-           mkdir -p m4
            ./autogen.sh
 
     - name: Configure Tesseract
","{'added': [], 'deleted': [(40, '           mkdir -p m4')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,46b99041ebf94cd2dfa2ed9c9f1a64119e972556,620d82812f657816ff5d69ec97c4ae960c009ddb,"CI: Clean more GitHub action (remove unneeded mkdir)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -45,7 +45,6 @@ jobs:
 
     - name: Setup Tesseract
       run: |
-           mkdir -p m4
            ./autogen.sh
 
     - name: Configure Tesseract
","{'added': [], 'deleted': [(48, '           mkdir -p m4')]}",yes
.github\workflows\msys2.yml,.github\workflows\msys2.yml,46b99041ebf94cd2dfa2ed9c9f1a64119e972556,620d82812f657816ff5d69ec97c4ae960c009ddb,"CI: Clean more GitHub action (remove unneeded mkdir)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -41,7 +41,6 @@ jobs:
 
     - name: Setup Tesseract
       run: |
-           mkdir -p m4
            ./autogen.sh
 
     - name: Configure Tesseract
","{'added': [], 'deleted': [(44, '           mkdir -p m4')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,46b99041ebf94cd2dfa2ed9c9f1a64119e972556,620d82812f657816ff5d69ec97c4ae960c009ddb,"CI: Clean more GitHub action (remove unneeded mkdir)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -31,7 +31,6 @@ jobs:
 
     - name: Setup
       run: |
-           mkdir -p m4
            ./autogen.sh
 
     - name: Configure
","{'added': [], 'deleted': [(34, '           mkdir -p m4')]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,46b99041ebf94cd2dfa2ed9c9f1a64119e972556,620d82812f657816ff5d69ec97c4ae960c009ddb,"CI: Clean more GitHub action (remove unneeded mkdir)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -37,7 +37,6 @@ jobs:
 
     - name: Setup
       run: |
-           mkdir -p m4
            ./autogen.sh
 
     - name: Configure (Linux)
","{'added': [], 'deleted': [(40, '           mkdir -p m4')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,620d82812f657816ff5d69ec97c4ae960c009ddb,c6b00827540e1271a3d12957790b2f12ea90ba86,"CI: Clean GitHub action for autotools on macOS

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -32,13 +32,12 @@ jobs:
       run: |
            brew install autoconf automake
            brew install leptonica
-           brew install cairo pango icu4c
+           brew install pango icu4c
            brew install cabextract
            brew install libarchive curl
 
     - name: Setup Tesseract
       run: |
-           mkdir -p m4
            ./autogen.sh
 
     - name: Configure Tesseract
@@ -145,7 +144,6 @@ jobs:
 
     - name: Setup Tesseract
       run: |
-           mkdir -p m4
            ./autogen.sh
 
     - name: Configure Tesseract
","{'added': [(35, '           brew install pango icu4c')], 'deleted': [(35, '           brew install cairo pango icu4c'), (41, '           mkdir -p m4'), (148, '           mkdir -p m4')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,c6b00827540e1271a3d12957790b2f12ea90ba86,e563e83e49f0a345eb77264f25b9b7fbd0eea605,"CI: Clean GitHub action for unittest on macOS

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -24,13 +24,10 @@ jobs:
 
     - name: Install dependencies (macOS Homebrew)
       run: |
-           brew install autoconf automake libarchive
-           brew install leptonica cairo pango
-           brew install cabextract libtool
-
+           brew install autoconf automake cabextract libtool
+           brew install leptonica libarchive pango
     - name: Setup
       run: |
-           mkdir -p m4
            ./autogen.sh
 
     - name: Configure (macOS Homebrew)
","{'added': [(27, '           brew install autoconf automake cabextract libtool'), (28, '           brew install leptonica libarchive pango')], 'deleted': [(27, '           brew install autoconf automake libarchive'), (28, '           brew install leptonica cairo pango'), (29, '           brew install cabextract libtool'), (30, ''), (33, '           mkdir -p m4')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,e563e83e49f0a345eb77264f25b9b7fbd0eea605,e1fea0700f74bf16de44f813e9f496e0e29a5506,"CI: Replace macOS 11 runner which is no longer supported by macOS 14 runner

Use also newer compilers.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -16,9 +16,9 @@ jobs:
         config:
 
           - { name: macos-12-clang-14-cmake, os: macos-12, cxx: clang++ } # default
-          - { name: macos-11-clang-13-cmake, os: macos-11, cxx: clang++ } # default
+          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default
 
-          - { name: macos-11-gcc-12-cmake, os: macos-11, cxx: g++-12 } #installed
+          - { name: macos-14-gcc-14-cmake, os: macos-14, cxx: g++-14 } #installed
 
           - { name: ubuntu-22.04-clang-15-cmake, os: ubuntu-22.04, cxx: clang++-15 } #installed
 
","{'added': [(19, '          - { name: macos-14-clang-15-cmake, os: macos-14, cxx: clang++ } # default'), (21, '          - { name: macos-14-gcc-14-cmake, os: macos-14, cxx: g++-14 } #installed')], 'deleted': [(19, '          - { name: macos-11-clang-13-cmake, os: macos-11, cxx: clang++ } # default'), (21, '          - { name: macos-11-gcc-12-cmake, os: macos-11, cxx: g++-12 } #installed')]}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,e1fea0700f74bf16de44f813e9f496e0e29a5506,c5030ea15a7f5303611317348b87b7329726f7cf,"Fix whitespace issues (space at line endings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -789,7 +789,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
                     << ""\"" caption=\""Regions reading order\"">\n"";
 
   ResultIterator *res_it = GetIterator();
-  
+
   float block_conf = 0;
   float line_conf = 0;
 
@@ -874,7 +874,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
     // for now using LinePts
     bool skewed_flag = (orientation_block != ORIENTATION_PAGE_UP &&
                         orientation_block != ORIENTATION_PAGE_DOWN);
-  
+
     if (res_it->IsAtBeginningOf(RIL_TEXTLINE)) {
       // writing_direction_before = writing_direction;
       line_conf = ((res_it->Confidence(RIL_TEXTLINE)) / 100.);
","{'added': [(792, ''), (877, '')], 'deleted': [(792, ''), (877, '')]}",yes
src\ccutil\ccutil.cpp,src\ccutil\ccutil.cpp,c5030ea15a7f5303611317348b87b7329726f7cf,dd08a7aa6a3a6b0fdfefc8e10887122e4b15a412,"Add missing include statement

Fixes: bc490ea7ab67d944 (""Ignore illegal TESSDATA_PREFIX [...]"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -15,6 +15,7 @@
 #endif
 
 #include ""ccutil.h""
+#include ""tprintf.h""  // for tprintf
 
 #include <cstdlib>
 #include <cstring>    // for std::strrchrA
","{'added': [(18, '#include ""tprintf.h""  // for tprintf')], 'deleted': []}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,dd08a7aa6a3a6b0fdfefc8e10887122e4b15a412,bc490ea7ab67d944781b2f3c2c1e99cce9d26abc,Fix confidence output for the PAGE XML renderer.,"@@ -789,6 +789,10 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
                     << ""\"" caption=\""Regions reading order\"">\n"";
 
   ResultIterator *res_it = GetIterator();
+  
+  float block_conf = 0;
+  float line_conf = 0;
+
   while (!res_it->Empty(RIL_BLOCK)) {
     if (res_it->Empty(RIL_WORD)) {
       res_it->Next(RIL_WORD);
@@ -825,7 +829,6 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
         break;
     }
 
-    float block_conf = 0;
     if (res_it->IsAtBeginningOf(RIL_BLOCK)) {
       // Add Block to reading order
       reading_order_str << ""\t\t\t\t<RegionRefIndexed "" << ""index=\"""" << rcnt
@@ -871,8 +874,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
     // for now using LinePts
     bool skewed_flag = (orientation_block != ORIENTATION_PAGE_UP &&
                         orientation_block != ORIENTATION_PAGE_DOWN);
-
-    float line_conf = 0;
+  
     if (res_it->IsAtBeginningOf(RIL_TEXTLINE)) {
       // writing_direction_before = writing_direction;
       line_conf = ((res_it->Confidence(RIL_TEXTLINE)) / 100.);
","{'added': [(792, ''), (793, '  float block_conf = 0;'), (794, '  float line_conf = 0;'), (795, ''), (877, '')], 'deleted': [(828, '    float block_conf = 0;'), (874, ''), (875, '    float line_conf = 0;')]}",no
src\ccutil\ccutil.cpp,src\ccutil\ccutil.cpp,bc490ea7ab67d944781b2f3c2c1e99cce9d26abc,2991d36a8b92454cc413c8347a7decc7daf33877,"Ignore illegal TESSDATA_PREFIX (not existing filesystem entry, issue #4277)

Don't check for a directory, because a symbolic link is also allowed.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,7 +17,8 @@
 #include ""ccutil.h""
 
 #include <cstdlib>
-#include <cstring> // for std::strrchr
+#include <cstring>    // for std::strrchrA
+#include <filesystem> // for std::filesystem
 
 namespace tesseract {
 
@@ -48,6 +49,12 @@ void CCUtil::main_setup(const std::string &argv0, const std::string &basename) {
 
   const char *tessdata_prefix = getenv(""TESSDATA_PREFIX"");
 
+  // Ignore TESSDATA_PREFIX if there is no matching filesystem entry.
+  if (tessdata_prefix != nullptr && !std::filesystem::exists(tessdata_prefix)) {
+    tprintf(""Warning: TESSDATA_PREFIX %s does not exist, ignore it\n"", tessdata_prefix);
+    tessdata_prefix = nullptr;
+  }
+
   if (!argv0.empty()) {
     /* Use tessdata prefix from the command line. */
     datadir = argv0;
","{'added': [(20, '#include <cstring>    // for std::strrchrA'), (21, '#include <filesystem> // for std::filesystem'), (52, '  // Ignore TESSDATA_PREFIX if there is no matching filesystem entry.'), (53, '  if (tessdata_prefix != nullptr && !std::filesystem::exists(tessdata_prefix)) {'), (54, '    tprintf(""Warning: TESSDATA_PREFIX %s does not exist, ignore it\\n"", tessdata_prefix);'), (55, '    tessdata_prefix = nullptr;'), (56, '  }'), (57, '')], 'deleted': [(20, '#include <cstring> // for std::strrchr')]}",yes
CMakeLists.txt,CMakeLists.txt,2991d36a8b92454cc413c8347a7decc7daf33877,93c9be7acfce2be3df40eb6a2af84019e67ffdb3,Make regular usage of CMAKE_INSTALL_LIBDIR and GNUInstallDirs,"@@ -471,9 +471,7 @@ else()
   set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -O3 -ffast-math"")
 endif()
 
-if(NOT DEFINED CMAKE_INSTALL_LIBDIR)
-  set(CMAKE_INSTALL_LIBDIR lib)
-endif(NOT DEFINED CMAKE_INSTALL_LIBDIR)
+include (GNUInstallDirs)
 
 set(AUTOCONFIG_SRC ${CMAKE_CURRENT_BINARY_DIR}/config_auto.h.in)
 set(AUTOCONFIG ${CMAKE_CURRENT_BINARY_DIR}/config_auto.h)
@@ -484,13 +482,13 @@ if(GRAPHICS_DISABLED)
 endif()
 set(CMAKE_REQUIRED_INCLUDES
     ${CMAKE_REQUIRED_INCLUDES} ""${CMAKE_PREFIX_PATH}/include""
-    ""${CMAKE_INSTALL_PREFIX}/include"")
+    ${CMAKE_INSTALL_INCLUDEDIR})
 include(Configure)
 
 configure_file(${AUTOCONFIG_SRC} ${AUTOCONFIG} @ONLY)
 
-set(INCLUDE_DIR ""${CMAKE_INSTALL_PREFIX}/include"")
-set(LIBRARY_DIRS ""${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}"")
+set(INCLUDE_DIR ${CMAKE_INSTALL_INCLUDEDIR})
+set(LIBRARY_DIRS ${CMAKE_INSTALL_LIBDIR})
 
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/include/tesseract/version.h.in
                ${CMAKE_CURRENT_BINARY_DIR}/include/tesseract/version.h @ONLY)
@@ -965,9 +963,9 @@ install(
 
 if(INSTALL_CONFIGS)
   install(FILES ${TESSERACT_CONFIGS}
-          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/configs)
+          DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/tessdata/configs)
   install(FILES ${TESSERACT_TESSCONFIGS}
-          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/tessconfigs)
+          DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/tessdata/tessconfigs)
 endif()
 
 # ##############################################################################
","{'added': [(474, 'include (GNUInstallDirs)'), (485, '    ${CMAKE_INSTALL_INCLUDEDIR})'), (490, 'set(INCLUDE_DIR ${CMAKE_INSTALL_INCLUDEDIR})'), (491, 'set(LIBRARY_DIRS ${CMAKE_INSTALL_LIBDIR})'), (966, '          DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/tessdata/configs)'), (968, '          DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/tessdata/tessconfigs)')], 'deleted': [(474, 'if(NOT DEFINED CMAKE_INSTALL_LIBDIR)'), (475, '  set(CMAKE_INSTALL_LIBDIR lib)'), (476, 'endif(NOT DEFINED CMAKE_INSTALL_LIBDIR)'), (487, '    ""${CMAKE_INSTALL_PREFIX}/include"")'), (492, 'set(INCLUDE_DIR ""${CMAKE_INSTALL_PREFIX}/include"")'), (493, 'set(LIBRARY_DIRS ""${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}"")'), (968, '          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/configs)'), (970, '          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/tessconfigs)')]}",yes
tesseract.pc.cmake,tesseract.pc.cmake,2991d36a8b92454cc413c8347a7decc7daf33877,93c9be7acfce2be3df40eb6a2af84019e67ffdb3,Make regular usage of CMAKE_INSTALL_LIBDIR and GNUInstallDirs,"@@ -1,7 +1,7 @@
 prefix=@CMAKE_INSTALL_PREFIX@
-exec_prefix=${prefix}/bin
-libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
-includedir=${prefix}/include
+exec_prefix=@CMAKE_INSTALL_PREFIX@
+libdir=@CMAKE_INSTALL_FULL_LIBDIR@
+includedir=@CMAKE_INSTALL_FULL_INCLUDEDIR@
 
 Name: @tesseract_NAME@
 Description: An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.
","{'added': [(2, 'exec_prefix=@CMAKE_INSTALL_PREFIX@'), (3, 'libdir=@CMAKE_INSTALL_FULL_LIBDIR@'), (4, 'includedir=@CMAKE_INSTALL_FULL_INCLUDEDIR@')], 'deleted': [(2, 'exec_prefix=${prefix}/bin'), (3, 'libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@'), (4, 'includedir=${prefix}/include')]}",yes
CMakeLists.txt,CMakeLists.txt,1476a591316ca59947b75513e5342d97c8ce45d3,b5f279ec7582dc57f6464557ed938558791f200d,Fix TARGET_PDB_FILE error for static linking.,"@@ -937,7 +937,7 @@ install(
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
-if (MSVC)
+if (MSVC AND BUILD_SHARED_LIBS)
   install(FILES $<TARGET_PDB_FILE:libtesseract> DESTINATION bin OPTIONAL)
 endif()
 install(
","{'added': [(940, 'if (MSVC AND BUILD_SHARED_LIBS)')], 'deleted': [(940, 'if (MSVC)')]}",yes
ChangeLog,ChangeLog,b5f279ec7582dc57f6464557ed938558791f200d,130b8a1c1e8a9e80bb5a4ecacc26d8f2861c392f,"Create new release 5.4.1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,7 @@
+2024-06-11 - V5.4.1
+* Avoid FP overflow in NormEvidenceOf (fixes issue #4257) (#4259)
+* Small build fixes and code improvements (#4262, #4263, #4266, #4267)
+
 2024-06-06 - V5.4.0
 * Small build fixes and code improvements
   (#4241, #4243, #4244, #4245, #4246, #4248, #4249, #4250, #4253)
","{'added': [(1, '2024-06-11 - V5.4.1'), (2, '* Avoid FP overflow in NormEvidenceOf (fixes issue #4257) (#4259)'), (3, '* Small build fixes and code improvements (#4262, #4263, #4266, #4267)'), (4, '')], 'deleted': []}",yes
VERSION,VERSION,b5f279ec7582dc57f6464557ed938558791f200d,130b8a1c1e8a9e80bb5a4ecacc26d8f2861c392f,"Create new release 5.4.1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.4.0
+5.4.1
","{'added': [(1, '5.4.1')], 'deleted': [(1, '5.4.0')]}",yes
configure.ac,configure.ac,b5f279ec7582dc57f6464557ed938558791f200d,130b8a1c1e8a9e80bb5a4ecacc26d8f2861c392f,"Create new release 5.4.1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2024
-PACKAGE_DATE=""06/06""
+PACKAGE_DATE=""06/11""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""06/11""')], 'deleted': [(32, 'PACKAGE_DATE=""06/06""')]}",yes
src\arch\intsimdmatrixavx2.cpp,src\arch\intsimdmatrixavx2.cpp,130b8a1c1e8a9e80bb5a4ecacc26d8f2861c392f,08e9ba8b2e51d3f87d80bdf1a94deab631e48fd5,"Remove unused variable assignments

This fixes some issues which were reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -568,7 +568,6 @@ static void matrixDotVector(int dim1, int dim2, const int8_t *wi, const double *
     output += group_size;
   }
   group_size /= 2;
-  w_step /= 2;
 
   if (output + group_size <= rounded_num_out) {
     PartialMatrixDotVector8(wi, scales, u, rounded_num_in, v);
","{'added': [], 'deleted': [(571, '  w_step /= 2;')]}",yes
src\ccmain\fixspace.cpp,src\ccmain\fixspace.cpp,130b8a1c1e8a9e80bb5a4ecacc26d8f2861c392f,08e9ba8b2e51d3f87d80bdf1a94deab631e48fd5,"Remove unused variable assignments

This fixes some issues which were reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -267,8 +267,6 @@ int16_t Tesseract::eval_word_spacing(WERD_RES_LIST &word_res_list) {
   bool prev_char_1 = false;     // prev ch a ""1/I/l""?
   bool prev_char_digit = false; // prev ch 2..9 or 0
   const char *punct_chars = ""!\""`',.:;"";
-  bool prev_char_punct = false;
-
   do {
     // current word
     WERD_RES *word = word_res_it.data();
@@ -325,6 +323,7 @@ int16_t Tesseract::eval_word_spacing(WERD_RES_LIST &word_res_list) {
       /* Add 1 to total score for every joined punctuation regardless of context
   and rejtn */
       if (tessedit_prefer_joined_punct) {
+        bool prev_char_punct;
         for (i = 0, offset = 0, prev_char_punct = false; i < word_len;
              offset += word->best_choice->unichar_lengths()[i++]) {
           bool current_char_punct =
","{'added': [(326, '        bool prev_char_punct;')], 'deleted': [(270, '  bool prev_char_punct = false;'), (271, '')]}",yes
src\classify\intmatcher.cpp,src\classify\intmatcher.cpp,130b8a1c1e8a9e80bb5a4ecacc26d8f2861c392f,08e9ba8b2e51d3f87d80bdf1a94deab631e48fd5,"Remove unused variable assignments

This fixes some issues which were reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -892,7 +892,6 @@ void IntegerMatcher::DebugFeatureProtoError(INT_CLASS_STRUCT *ClassTemplate, BIT
   uint16_t ProtoNum;
   uint8_t ProtoWordNum;
   PROTO_SET_STRUCT *ProtoSet;
-  uint16_t ActualProtoNum;
 
   if (PrintMatchSummaryOn(Debug)) {
     tprintf(""Configuration Mask:\n"");
@@ -912,9 +911,8 @@ void IntegerMatcher::DebugFeatureProtoError(INT_CLASS_STRUCT *ClassTemplate, BIT
   if (PrintMatchSummaryOn(Debug)) {
     tprintf(""Proto Mask:\n"");
     for (ProtoSetIndex = 0; ProtoSetIndex < ClassTemplate->NumProtoSets; ProtoSetIndex++) {
-      ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);
       for (ProtoWordNum = 0; ProtoWordNum < 2; ProtoWordNum++, ProtoMask++) {
-        ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);
+        uint16_t ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);
         for (ProtoNum = 0; ((ProtoNum < (PROTOS_PER_PROTO_SET >> 1)) &&
                             (ActualProtoNum < ClassTemplate->NumProtos));
              ProtoNum++, ActualProtoNum++) {
@@ -934,7 +932,7 @@ void IntegerMatcher::DebugFeatureProtoError(INT_CLASS_STRUCT *ClassTemplate, BIT
     tprintf(""Proto Evidence:\n"");
     for (ProtoSetIndex = 0; ProtoSetIndex < ClassTemplate->NumProtoSets; ProtoSetIndex++) {
       ProtoSet = ClassTemplate->ProtoSets[ProtoSetIndex];
-      ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);
+      uint16_t ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);
       for (ProtoNum = 0;
            ((ProtoNum < PROTOS_PER_PROTO_SET) && (ActualProtoNum < ClassTemplate->NumProtos));
            ProtoNum++, ActualProtoNum++) {
@@ -991,7 +989,6 @@ void IntegerMatcher::DisplayProtoDebugInfo(INT_CLASS_STRUCT *ClassTemplate, BIT_
                                            const ScratchEvidence &tables,
                                            bool SeparateDebugWindows) {
   uint16_t ProtoNum;
-  uint16_t ActualProtoNum;
   PROTO_SET_STRUCT *ProtoSet;
   int ProtoSetIndex;
 
@@ -1003,7 +1000,7 @@ void IntegerMatcher::DisplayProtoDebugInfo(INT_CLASS_STRUCT *ClassTemplate, BIT_
 
   for (ProtoSetIndex = 0; ProtoSetIndex < ClassTemplate->NumProtoSets; ProtoSetIndex++) {
     ProtoSet = ClassTemplate->ProtoSets[ProtoSetIndex];
-    ActualProtoNum = ProtoSetIndex * PROTOS_PER_PROTO_SET;
+    uint16_t ActualProtoNum = ProtoSetIndex * PROTOS_PER_PROTO_SET;
     for (ProtoNum = 0;
          ((ProtoNum < PROTOS_PER_PROTO_SET) && (ActualProtoNum < ClassTemplate->NumProtos));
          ProtoNum++, ActualProtoNum++) {
@@ -1076,13 +1073,12 @@ void ScratchEvidence::UpdateSumOfProtoEvidences(INT_CLASS_STRUCT *ClassTemplate,
   uint16_t ProtoNum;
   PROTO_SET_STRUCT *ProtoSet;
   int NumProtos;
-  uint16_t ActualProtoNum;
 
   NumProtos = ClassTemplate->NumProtos;
 
   for (ProtoSetIndex = 0; ProtoSetIndex < ClassTemplate->NumProtoSets; ProtoSetIndex++) {
     ProtoSet = ClassTemplate->ProtoSets[ProtoSetIndex];
-    ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);
+    uint16_t ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);
     for (ProtoNum = 0; ((ProtoNum < PROTOS_PER_PROTO_SET) && (ActualProtoNum < NumProtos));
          ProtoNum++, ActualProtoNum++) {
       int temp = 0;
","{'added': [(915, '        uint16_t ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);'), (935, '      uint16_t ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);'), (1003, '    uint16_t ActualProtoNum = ProtoSetIndex * PROTOS_PER_PROTO_SET;'), (1081, '    uint16_t ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);')], 'deleted': [(895, '  uint16_t ActualProtoNum;'), (915, '      ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);'), (917, '        ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);'), (937, '      ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);'), (994, '  uint16_t ActualProtoNum;'), (1006, '    ActualProtoNum = ProtoSetIndex * PROTOS_PER_PROTO_SET;'), (1079, '  uint16_t ActualProtoNum;'), (1085, '    ActualProtoNum = (ProtoSetIndex * PROTOS_PER_PROTO_SET);')]}",yes
src\dict\dict.cpp,src\dict\dict.cpp,130b8a1c1e8a9e80bb5a4ecacc26d8f2861c392f,08e9ba8b2e51d3f87d80bdf1a94deab631e48fd5,"Remove unused variable assignments

This fixes some issues which were reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -886,7 +886,7 @@ bool Dict::valid_punctuation(const WERD_CHOICE &word) {
   }
   WERD_CHOICE new_word(word.unicharset());
   auto last_index = word.length() - 1;
-  int new_len = 0;
+  int new_len;
   for (unsigned i = 0; i <= last_index; ++i) {
     UNICHAR_ID unichar_id = (word.unichar_id(i));
     if (getUnicharset().get_ispunctuation(unichar_id)) {
","{'added': [(889, '  int new_len;')], 'deleted': [(889, '  int new_len = 0;')]}",yes
src\textord\tablefind.cpp,src\textord\tablefind.cpp,130b8a1c1e8a9e80bb5a4ecacc26d8f2861c392f,08e9ba8b2e51d3f87d80bdf1a94deab631e48fd5,"Remove unused variable assignments

This fixes some issues which were reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -884,8 +884,6 @@ bool TableFinder::HasWideOrNoInterWordGap(ColPartition *part) const {
   }
 
   // Variables used to compute inter-blob spacing.
-  int current_x0 = -1;
-  int current_x1 = -1;
   int previous_x1 = -1;
   // Stores the maximum gap detected.
   int largest_partition_gap_found = -1;
@@ -897,8 +895,8 @@ bool TableFinder::HasWideOrNoInterWordGap(ColPartition *part) const {
 
   for (it.mark_cycle_pt(); !it.cycled_list(); it.forward()) {
     BLOBNBOX *blob = it.data();
-    current_x0 = blob->bounding_box().left();
-    current_x1 = blob->bounding_box().right();
+    int current_x0 = blob->bounding_box().left();
+    int current_x1 = blob->bounding_box().right();
     if (previous_x1 != -1) {
       int gap = current_x0 - previous_x1;
 
","{'added': [(898, '    int current_x0 = blob->bounding_box().left();'), (899, '    int current_x1 = blob->bounding_box().right();')], 'deleted': [(887, '  int current_x0 = -1;'), (888, '  int current_x1 = -1;'), (900, '    current_x0 = blob->bounding_box().left();'), (901, '    current_x1 = blob->bounding_box().right();')]}",yes
doc\generate_manpages.sh,doc\generate_manpages.sh,08e9ba8b2e51d3f87d80bdf1a94deab631e48fd5,6cb49dcebd0464ae2c985ff4ae9fce6dae0db5ff,"Add double quotes to prevent globbing and word splitting

This fixes some issues which were reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -25,9 +25,9 @@ if [[ -z ""${asciidoc}"" ]] || [[ -z ""${xsltproc}"" ]]; then
 else
   for src in *.asc; do
     pagename=${src/.asc/}
-    (${asciidoc} -d manpage ${src} &&
-     ${asciidoc} -d manpage -b docbook ${src} &&
-       ${xsltproc} --nonet ${man_xslt} ${pagename}.xml) ||
+    (${asciidoc} -d manpage ""${src}"" &&
+     ${asciidoc} -d manpage -b docbook ""${src}"" &&
+       ${xsltproc} --nonet ${man_xslt} ""${pagename}"".xml) ||
        echo ""Error generating ${pagename}""
   done
 fi
","{'added': [(28, '    (${asciidoc} -d manpage ""${src}"" &&'), (29, '     ${asciidoc} -d manpage -b docbook ""${src}"" &&'), (30, '       ${xsltproc} --nonet ${man_xslt} ""${pagename}"".xml) ||')], 'deleted': [(28, '    (${asciidoc} -d manpage ${src} &&'), (29, '     ${asciidoc} -d manpage -b docbook ${src} &&'), (30, '       ${xsltproc} --nonet ${man_xslt} ${pagename}.xml) ||')]}",yes
unittest\fuzzers\oss-fuzz-build.sh,unittest\fuzzers\oss-fuzz-build.sh,08e9ba8b2e51d3f87d80bdf1a94deab631e48fd5,6cb49dcebd0464ae2c985ff4ae9fce6dae0db5ff,"Add double quotes to prevent globbing and word splitting

This fixes some issues which were reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -15,22 +15,22 @@
 #
 ################################################################################
 
-cd $SRC/leptonica
+cd ""$SRC""/leptonica
 ./autogen.sh
 ./configure --disable-shared
-make SUBDIRS=src install -j$(nproc)
+make SUBDIRS=src install -j""$(nproc)""
 ldconfig
 
-cd $SRC/tesseract
+cd ""$SRC""/tesseract
 ./autogen.sh
 CXXFLAGS=""$CXXFLAGS -D_GLIBCXX_DEBUG"" ./configure --disable-graphics --disable-shared
-make -j$(nproc)
+make -j""$(nproc)""
 
 # Get the models which are needed for the fuzzers.
 
-mkdir -p $OUT/tessdata
+mkdir -p ""$OUT""/tessdata
 (
-cd $OUT/tessdata
+cd ""$OUT""/tessdata
 test -f eng.traineddata || \
   curl -L -O https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata
 )
@@ -44,9 +44,9 @@ LEPTONICA_LIBS=$(pkg-config --static --libs lept)
 LIBTIFF_LIBS=$(pkg-config --static --libs libtiff-4 | sed 's/ -lm//')
 
 $CXX $CXXFLAGS \
-    -I $SRC/tesseract/include \
-     $SRC/tesseract/unittest/fuzzers/fuzzer-api.cpp -o $OUT/fuzzer-api \
-     $SRC/tesseract/.libs/libtesseract.a \
+    -I ""$SRC""/tesseract/include \
+     ""$SRC""/tesseract/unittest/fuzzers/fuzzer-api.cpp -o ""$OUT""/fuzzer-api \
+     ""$SRC""/tesseract/.libs/libtesseract.a \
      $LEPTONICA_CFLAGS \
      -Wl,-Bstatic $LEPTONICA_LIBS $LIBTIFF_LIBS -Wl,-Bdynamic \
      $LIB_FUZZING_ENGINE
@@ -54,9 +54,9 @@ $CXX $CXXFLAGS \
 $CXX $CXXFLAGS \
     -DTESSERACT_FUZZER_WIDTH=512 \
     -DTESSERACT_FUZZER_HEIGHT=256 \
-    -I $SRC/tesseract/include \
-     $SRC/tesseract/unittest/fuzzers/fuzzer-api.cpp -o $OUT/fuzzer-api-512x256 \
-     $SRC/tesseract/.libs/libtesseract.a \
+    -I ""$SRC""/tesseract/include \
+     ""$SRC""/tesseract/unittest/fuzzers/fuzzer-api.cpp -o ""$OUT""/fuzzer-api-512x256 \
+     ""$SRC""/tesseract/.libs/libtesseract.a \
      $LEPTONICA_CFLAGS \
      -Wl,-Bstatic $LEPTONICA_LIBS $LIBTIFF_LIBS -Wl,-Bdynamic \
      $LIB_FUZZING_ENGINE
","{'added': [(18, 'cd ""$SRC""/leptonica'), (21, 'make SUBDIRS=src install -j""$(nproc)""'), (24, 'cd ""$SRC""/tesseract'), (27, 'make -j""$(nproc)""'), (31, 'mkdir -p ""$OUT""/tessdata'), (33, 'cd ""$OUT""/tessdata'), (47, '    -I ""$SRC""/tesseract/include \\'), (48, '     ""$SRC""/tesseract/unittest/fuzzers/fuzzer-api.cpp -o ""$OUT""/fuzzer-api \\'), (49, '     ""$SRC""/tesseract/.libs/libtesseract.a \\'), (57, '    -I ""$SRC""/tesseract/include \\'), (58, '     ""$SRC""/tesseract/unittest/fuzzers/fuzzer-api.cpp -o ""$OUT""/fuzzer-api-512x256 \\'), (59, '     ""$SRC""/tesseract/.libs/libtesseract.a \\')], 'deleted': [(18, 'cd $SRC/leptonica'), (21, 'make SUBDIRS=src install -j$(nproc)'), (24, 'cd $SRC/tesseract'), (27, 'make -j$(nproc)'), (31, 'mkdir -p $OUT/tessdata'), (33, 'cd $OUT/tessdata'), (47, '    -I $SRC/tesseract/include \\'), (48, '     $SRC/tesseract/unittest/fuzzers/fuzzer-api.cpp -o $OUT/fuzzer-api \\'), (49, '     $SRC/tesseract/.libs/libtesseract.a \\'), (57, '    -I $SRC/tesseract/include \\'), (58, '     $SRC/tesseract/unittest/fuzzers/fuzzer-api.cpp -o $OUT/fuzzer-api-512x256 \\'), (59, '     $SRC/tesseract/.libs/libtesseract.a \\')]}",yes
INSTALL.GIT.md,INSTALL.GIT.md,6cb49dcebd0464ae2c985ff4ae9fce6dae0db5ff,f251a0da39cba97681bc81ab02fb460f85a87114,"Fix more code style issues (reported by Codacy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -50,7 +50,6 @@ Just run:
 
 and follow the instruction on [Viewer Debugging](https://tesseract-ocr.github.io/tessdoc/ViewerDebugging.html).
 
-
 ## cmake
 
 There is alternative build system based on multiplatform [cmake](https://cmake.org/)
@@ -61,7 +60,6 @@ There is alternative build system based on multiplatform [cmake](https://cmake.o
     cd build && cmake .. && make
     sudo make install
 
-
 ### WINDOWS
 
 See the [documentation](https://tesseract-ocr.github.io/tessdoc/) for more information on this.
","{'added': [], 'deleted': [(53, ''), (64, '')]}",yes
unittest\README.md,unittest\README.md,6cb49dcebd0464ae2c985ff4ae9fce6dae0db5ff,f251a0da39cba97681bc81ab02fb460f85a87114,"Fix more code style issues (reported by Codacy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -75,7 +75,6 @@
 * [Lohit-Hindi.ttf](https://raw.githubusercontent.com/pratul/packageofpractices/master/assets/fonts/Lohit-Hindi.ttf)
 * [UnBatang.ttf](https://raw.githubusercontent.com/byrongibson/fonts/master/backup/truetype.original/unfonts-core/UnBatang.ttf)
 
-
 ## Run tests
 
 To run the tests, do the following in tesseract folder
","{'added': [], 'deleted': [(78, '')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,f251a0da39cba97681bc81ab02fb460f85a87114,96772c5761cf2407798f97a513a68993aea083c8,use c++17 instead of c++11,"@@ -93,7 +93,7 @@ jobs:
       run: |
            export ""PKG_CONFIG_PATH=/usr/local/lib/pkgconfig""
            cd test
-           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp $(pkg-config --cflags --libs tesseract lept) -pthread -std=c++11 -framework accelerate
+           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp $(pkg-config --cflags --libs tesseract lept) -pthread -std=c++17 -framework accelerate
            ./basicapitest
 
     - name: Display Compiler Version
@@ -193,7 +193,7 @@ jobs:
       run: |
            export ""PKG_CONFIG_PATH=/usr/local/lib/pkgconfig""
            cd test
-           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp -I/opt/local/include -L/opt/local/lib $(pkg-config --cflags --libs tesseract lept) -pthread -std=c++11 -framework Accelerate
+           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp -I/opt/local/include -L/opt/local/lib $(pkg-config --cflags --libs tesseract lept) -pthread -std=c++17 -framework Accelerate
            ./basicapitest
 
     - name: Display Compiler Version
","{'added': [(96, '           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp $(pkg-config --cflags --libs tesseract lept) -pthread -std=c++17 -framework accelerate'), (196, '           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp -I/opt/local/include -L/opt/local/lib $(pkg-config --cflags --libs tesseract lept) -pthread -std=c++17 -framework Accelerate')], 'deleted': [(96, '           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp $(pkg-config --cflags --libs tesseract lept) -pthread -std=c++11 -framework accelerate'), (196, '           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp -I/opt/local/include -L/opt/local/lib $(pkg-config --cflags --libs tesseract lept) -pthread -std=c++11 -framework Accelerate')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,f251a0da39cba97681bc81ab02fb460f85a87114,96772c5761cf2407798f97a513a68993aea083c8,use c++17 instead of c++11,"@@ -92,7 +92,7 @@ jobs:
       run: |
            export ""PKG_CONFIG_PATH=/usr/local/lib/pkgconfig""
            cd test
-           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp -I/usr/local/include -L/usr/local/lib `pkg-config --cflags --libs tesseract lept ` -pthread -std=c++11
+           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp -I/usr/local/include -L/usr/local/lib `pkg-config --cflags --libs tesseract lept ` -pthread -std=c++17
            ./basicapitest
 
     - name: Setup for Tesseract benchmark using image from issue 263 fifteen times in a list file
","{'added': [(95, '           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp -I/usr/local/include -L/usr/local/lib `pkg-config --cflags --libs tesseract lept ` -pthread -std=c++17')], 'deleted': [(95, '           ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp -I/usr/local/include -L/usr/local/lib `pkg-config --cflags --libs tesseract lept ` -pthread -std=c++11')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,f251a0da39cba97681bc81ab02fb460f85a87114,96772c5761cf2407798f97a513a68993aea083c8,use c++17 instead of c++11,"@@ -133,7 +133,7 @@ jobs:
         run: |
              export ""PKG_CONFIG_PATH=$GITHUB_WORKSPACE/build/inst/lib/pkgconfig/:$PKG_CONFIG_PATH""
              cd test
-             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libarchive libcurl) -pthread -std=c++11
+             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libarchive libcurl) -pthread -std=c++17
              ./basicapitest
         if: runner.os == 'Linux'
 
@@ -141,7 +141,7 @@ jobs:
         run: |
              export ""PKG_CONFIG_PATH=$GITHUB_WORKSPACE/build/inst/lib/pkgconfig/:$(brew --prefix)/opt/libarchive/lib/pkgconfig:$(brew --prefix)/Library/Homebrew/os/mac/pkgconfig/11:$PKG_CONFIG_PATH""
              cd test
-             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libcurl) -pthread -std=c++11
+             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libcurl) -pthread -std=c++17
              ./basicapitest
         if: runner.os == 'macOS'
 
","{'added': [(136, '             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libarchive libcurl) -pthread -std=c++17'), (144, '             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libcurl) -pthread -std=c++17')], 'deleted': [(136, '             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libarchive libcurl) -pthread -std=c++11'), (144, '             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libcurl) -pthread -std=c++11')]}",yes
INSTALL.GIT.md,INSTALL.GIT.md,f251a0da39cba97681bc81ab02fb460f85a87114,96772c5761cf2407798f97a513a68993aea083c8,use c++17 instead of c++11,"@@ -10,7 +10,7 @@ You need Leptonica 1.74.2 (minimum) for Tesseract 4.0x.
 
 Known dependencies for training tools (excluding leptonica):
 
-* compiler with c++11 support
+* compiler with c++17 support
 * automake
 * pkg-config
 * pango-devel
","{'added': [(13, '* compiler with c++17 support')], 'deleted': [(13, '* compiler with c++11 support')]}",yes
src\api\pdfrenderer.cpp,src\api\pdfrenderer.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -242,13 +242,13 @@ static void GetWordBaseline(int writing_direction, int ppi, int height, int word
   double word_length;
   double x, y;
   {
-    int px = word_x1;
-    int py = word_y1;
     double l2 = dist2(line_x1, line_y1, line_x2, line_y2);
     if (l2 == 0) {
       x = line_x1;
       y = line_y1;
     } else {
+      int px = word_x1;
+      int py = word_y1;
       double t = ((px - line_x2) * (line_x2 - line_x1) + (py - line_y2) * (line_y2 - line_y1)) / l2;
       x = line_x2 + t * (line_x2 - line_x1);
       y = line_y2 + t * (line_y2 - line_y1);
","{'added': [(250, '      int px = word_x1;'), (251, '      int py = word_y1;')], 'deleted': [(245, '    int px = word_x1;'), (246, '    int py = word_y1;')]}",yes
src\ccmain\applybox.cpp,src\ccmain\applybox.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -258,10 +258,10 @@ void Tesseract::MaximallyChopWord(const std::vector<TBOX> &boxes, BLOCK *block,
   }
   const double e = exp(1.0); // The base of natural logs.
   unsigned blob_number;
-  int right_chop_index = 0;
   if (!assume_fixed_pitch_char_segment) {
     // We only chop if the language is not fixed pitch like CJK.
     SEAM *seam = nullptr;
+    int right_chop_index = 0;
     while ((seam = chop_one_blob(boxes, blob_choices, word_res, &blob_number)) != nullptr) {
       word_res->InsertSeam(blob_number, seam);
       BLOB_CHOICE *left_choice = blob_choices[blob_number];
@@ -685,6 +685,7 @@ void Tesseract::SearchForText(const std::vector<BLOB_CHOICE_LIST *> *choices, in
 void Tesseract::TidyUp(PAGE_RES *page_res) {
   int ok_blob_count = 0;
   int bad_blob_count = 0;
+  // TODO: check usage of ok_word_count.
   int ok_word_count = 0;
   int unlabelled_words = 0;
   PAGE_RES_IT pr_it(page_res);
","{'added': [(264, '    int right_chop_index = 0;'), (688, '  // TODO: check usage of ok_word_count.')], 'deleted': [(261, '  int right_chop_index = 0;')]}",yes
src\ccmain\control.cpp,src\ccmain\control.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -949,6 +949,7 @@ bool Tesseract::ReassignDiacritics(int pass, PAGE_RES_IT *pr_it, bool *make_next
   }
   real_word->AddSelectedOutlines(wanted, wanted_blobs, wanted_outlines, nullptr);
   AssignDiacriticsToNewBlobs(outlines, pass, real_word, pr_it, &word_wanted, &target_blobs);
+  // TODO: check code.
   int non_overlapped = 0;
   int non_overlapped_used = 0;
   for (unsigned i = 0; i < word_wanted.size(); ++i) {
@@ -1121,9 +1122,9 @@ bool Tesseract::SelectGoodDiacriticOutlines(int pass, float certainty_threshold,
                                             C_BLOB *blob,
                                             const std::vector<C_OUTLINE *> &outlines,
                                             int num_outlines, std::vector<bool> *ok_outlines) {
-  std::string best_str;
   float target_cert = certainty_threshold;
   if (blob != nullptr) {
+    std::string best_str;
     float target_c2;
     target_cert = ClassifyBlobAsWord(pass, pr_it, blob, best_str, &target_c2);
     if (debug_noise_removal) {
@@ -1797,9 +1798,6 @@ not_a_word:
 }
 
 bool Tesseract::check_debug_pt(WERD_RES *word, int location) {
-  bool show_map_detail = false;
-  int16_t i;
-
   if (!test_pt) {
     return false;
   }
@@ -1811,6 +1809,7 @@ bool Tesseract::check_debug_pt(WERD_RES *word, int location) {
     if (location < 0) {
       return true; // For breakpoint use
     }
+    bool show_map_detail = false;
     tessedit_rejection_debug.set_value(true);
     debug_x_ht_level.set_value(2);
     tprintf(""\n\nTESTWD::"");
@@ -1864,7 +1863,7 @@ bool Tesseract::check_debug_pt(WERD_RES *word, int location) {
       tprintf(""\n"");
       if (show_map_detail) {
         tprintf(""\""%s\""\n"", word->best_choice->unichar_string().c_str());
-        for (i = 0; word->best_choice->unichar_string()[i] != '\0'; i++) {
+        for (unsigned i = 0; word->best_choice->unichar_string()[i] != '\0'; i++) {
           tprintf(""**** \""%c\"" ****\n"", word->best_choice->unichar_string()[i]);
           word->reject_map[i].full_print(debug_fp);
         }
@@ -1891,13 +1890,12 @@ static void find_modal_font( // good chars in word
     int16_t *font_out,       // output font
     int8_t *font_count       // output count
 ) {
-  int16_t font;  // font index
-  int32_t count; // pile count
-
   if (fonts->get_total() > 0) {
-    font = static_cast<int16_t>(fonts->mode());
+    // font index
+    int16_t font = static_cast<int16_t>(fonts->mode());
     *font_out = font;
-    count = fonts->pile_count(font);
+    // pile count
+    int32_t count = fonts->pile_count(font);
     *font_count = count < INT8_MAX ? count : INT8_MAX;
     fonts->add(font, -*font_count);
   } else {
","{'added': [(952, '  // TODO: check code.'), (1127, '    std::string best_str;'), (1812, '    bool show_map_detail = false;'), (1866, ""        for (unsigned i = 0; word->best_choice->unichar_string()[i] != '\\0'; i++) {""), (1894, '    // font index'), (1895, '    int16_t font = static_cast<int16_t>(fonts->mode());'), (1897, '    // pile count'), (1898, '    int32_t count = fonts->pile_count(font);')], 'deleted': [(1124, '  std::string best_str;'), (1800, '  bool show_map_detail = false;'), (1801, '  int16_t i;'), (1802, ''), (1867, ""        for (i = 0; word->best_choice->unichar_string()[i] != '\\0'; i++) {""), (1894, '  int16_t font;  // font index'), (1895, '  int32_t count; // pile count'), (1896, ''), (1898, '    font = static_cast<int16_t>(fonts->mode());'), (1900, '    count = fonts->pile_count(font);')]}",yes
src\ccmain\docqual.cpp,src\ccmain\docqual.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -60,10 +60,10 @@ int16_t Tesseract::word_blob_quality(WERD_RES *word) {
 }
 
 int16_t Tesseract::word_outline_errs(WERD_RES *word) {
-  int16_t i = 0;
   int16_t err_count = 0;
 
   if (word->rebuild_word != nullptr) {
+    int16_t i = 0;
     for (unsigned b = 0; b < word->rebuild_word->NumBlobs(); ++b) {
       TBLOB *blob = word->rebuild_word->blobs[b];
       err_count += count_outline_errs(word->best_choice->unichar_string()[i], blob->NumOutlines());
@@ -209,13 +209,8 @@ void Tesseract::unrej_good_quality_words( // unreject potential
 
 void Tesseract::doc_and_block_rejection( // reject big chunks
     PAGE_RES_IT &page_res_it, bool good_quality_doc) {
-  int16_t block_no = 0;
-  int16_t row_no = 0;
   BLOCK_RES *current_block;
-  ROW_RES *current_row;
 
-  bool rej_word;
-  bool prev_word_rejected;
   int16_t char_quality = 0;
   int16_t accepted_char_quality;
 
@@ -238,7 +233,7 @@ void Tesseract::doc_and_block_rejection( // reject big chunks
     WERD_RES *word;
     while ((word = page_res_it.word()) != nullptr) {
       current_block = page_res_it.block();
-      block_no = current_block->block->pdblk.index();
+      int16_t block_no = current_block->block->pdblk.index();
       if (current_block->char_count > 0 &&
           (current_block->rej_count * 100.0 / current_block->char_count) >
               tessedit_reject_block_percent) {
@@ -246,8 +241,9 @@ void Tesseract::doc_and_block_rejection( // reject big chunks
           tprintf(""REJECTING BLOCK %d  #chars: %d;  #Rejects: %d\n"", block_no,
                   current_block->char_count, current_block->rej_count);
         }
-        prev_word_rejected = false;
+        bool prev_word_rejected = false;
         while ((word = page_res_it.word()) != nullptr && (page_res_it.block() == current_block)) {
+          bool rej_word;
           if (tessedit_preserve_blk_rej_perfect_wds) {
             rej_word = word->reject_map.reject_count() > 0 ||
                        word->reject_map.length() < tessedit_preserve_min_wd_len;
@@ -284,9 +280,9 @@ void Tesseract::doc_and_block_rejection( // reject big chunks
         }
 
         /* Walk rows in block testing for row rejection */
-        row_no = 0;
+        int16_t row_no = 0;
         while (page_res_it.word() != nullptr && page_res_it.block() == current_block) {
-          current_row = page_res_it.row();
+          ROW_RES *current_row = page_res_it.row();
           row_no++;
           /* Reject whole row if:
   fraction of chars on row which are rejected exceed a limit AND
@@ -302,9 +298,10 @@ void Tesseract::doc_and_block_rejection( // reject big chunks
               tprintf(""REJECTING ROW %d  #chars: %d;  #Rejects: %d\n"", row_no,
                       current_row->char_count, current_row->rej_count);
             }
-            prev_word_rejected = false;
+            bool prev_word_rejected = false;
             while ((word = page_res_it.word()) != nullptr && page_res_it.row() == current_row) {
               /* Preserve words on good docs unless they are mostly rejected*/
+              bool rej_word;
               if (!tessedit_row_rej_good_docs && good_quality_doc) {
                 rej_word = word->reject_map.reject_count() /
                                static_cast<float>(word->reject_map.length()) >
@@ -448,8 +445,6 @@ void Tesseract::tilde_crunch(PAGE_RES_IT &page_res_it) {
 }
 
 bool Tesseract::terrible_word_crunch(WERD_RES *word, GARBAGE_LEVEL garbage_level) {
-  float rating_per_ch;
-  int adjusted_len;
   int crunch_mode = 0;
 
   if (word->best_choice->unichar_string().empty() ||
@@ -457,11 +452,11 @@ bool Tesseract::terrible_word_crunch(WERD_RES *word, GARBAGE_LEVEL garbage_level
        word->best_choice->unichar_string().size())) {
     crunch_mode = 1;
   } else {
-    adjusted_len = word->reject_map.length();
+    int adjusted_len = word->reject_map.length();
     if (adjusted_len > crunch_rating_max) {
       adjusted_len = crunch_rating_max;
     }
-    rating_per_ch = word->best_choice->rating() / adjusted_len;
+    float rating_per_ch = word->best_choice->rating() / adjusted_len;
 
     if (rating_per_ch > crunch_terrible_rating) {
       crunch_mode = 2;
@@ -528,7 +523,6 @@ bool Tesseract::potential_word_crunch(WERD_RES *word, GARBAGE_LEVEL garbage_leve
 }
 
 void Tesseract::tilde_delete(PAGE_RES_IT &page_res_it) {
-  WERD_RES *word;
   PAGE_RES_IT copy_it;
   bool deleting_from_bol = false;
   bool marked_delete_point = false;
@@ -539,7 +533,7 @@ void Tesseract::tilde_delete(PAGE_RES_IT &page_res_it) {
 
   page_res_it.restart_page();
   while (page_res_it.word() != nullptr) {
-    word = page_res_it.word();
+    WERD_RES *word = page_res_it.word();
 
     delete_mode = word_deletable(word, debug_delete_mode);
     if (delete_mode != CR_NONE) {
","{'added': [(66, '    int16_t i = 0;'), (236, '      int16_t block_no = current_block->block->pdblk.index();'), (244, '        bool prev_word_rejected = false;'), (246, '          bool rej_word;'), (283, '        int16_t row_no = 0;'), (285, '          ROW_RES *current_row = page_res_it.row();'), (301, '            bool prev_word_rejected = false;'), (304, '              bool rej_word;'), (455, '    int adjusted_len = word->reject_map.length();'), (459, '    float rating_per_ch = word->best_choice->rating() / adjusted_len;'), (536, '    WERD_RES *word = page_res_it.word();')], 'deleted': [(63, '  int16_t i = 0;'), (212, '  int16_t block_no = 0;'), (213, '  int16_t row_no = 0;'), (215, '  ROW_RES *current_row;'), (217, '  bool rej_word;'), (218, '  bool prev_word_rejected;'), (241, '      block_no = current_block->block->pdblk.index();'), (249, '        prev_word_rejected = false;'), (287, '        row_no = 0;'), (289, '          current_row = page_res_it.row();'), (305, '            prev_word_rejected = false;'), (451, '  float rating_per_ch;'), (452, '  int adjusted_len;'), (460, '    adjusted_len = word->reject_map.length();'), (464, '    rating_per_ch = word->best_choice->rating() / adjusted_len;'), (531, '  WERD_RES *word;'), (542, '    word = page_res_it.word();')]}",yes
src\ccmain\fixspace.cpp,src\ccmain\fixspace.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -171,7 +171,6 @@ void Tesseract::fix_fuzzy_spaces(ETEXT_DESC *monitor, int32_t word_count, PAGE_R
 void Tesseract::fix_fuzzy_space_list(WERD_RES_LIST &best_perm, ROW *row, BLOCK *block) {
   int16_t best_score;
   WERD_RES_LIST current_perm;
-  int16_t current_score;
   bool improved = false;
 
   best_score = eval_word_spacing(best_perm); // default score
@@ -183,7 +182,7 @@ void Tesseract::fix_fuzzy_space_list(WERD_RES_LIST &best_perm, ROW *row, BLOCK *
 
   while ((best_score != PERFECT_WERDS) && !current_perm.empty()) {
     match_current_words(current_perm, row, block);
-    current_score = eval_word_spacing(current_perm);
+    int16_t current_score = eval_word_spacing(current_perm);
     dump_words(current_perm, current_score, 2, improved);
     if (current_score > best_score) {
       best_perm.clear();
@@ -201,11 +200,10 @@ void Tesseract::fix_fuzzy_space_list(WERD_RES_LIST &best_perm, ROW *row, BLOCK *
 void initialise_search(WERD_RES_LIST &src_list, WERD_RES_LIST &new_list) {
   WERD_RES_IT src_it(&src_list);
   WERD_RES_IT new_it(&new_list);
-  WERD_RES *src_wd;
   WERD_RES *new_wd;
 
   for (src_it.mark_cycle_pt(); !src_it.cycled_list(); src_it.forward()) {
-    src_wd = src_it.data();
+    WERD_RES *src_wd = src_it.data();
     if (!src_wd->combination) {
       new_wd = WERD_RES::deep_copy(src_wd);
       new_wd->combination = false;
@@ -393,8 +391,6 @@ void transform_to_next_perm(WERD_RES_LIST &words) {
   WERD_RES_IT prev_word_it(&words);
   WERD_RES *word;
   WERD_RES *prev_word;
-  WERD_RES *combo;
-  WERD *copy_word;
   int16_t prev_right = -INT16_MAX;
   TBOX box;
   int16_t gap;
@@ -425,12 +421,13 @@ void transform_to_next_perm(WERD_RES_LIST &words) {
           gap = box.left() - prev_right;
           if (gap <= min_gap) {
             prev_word = prev_word_it.data();
+            WERD_RES *combo;
             if (prev_word->combination) {
               combo = prev_word;
             } else {
               /* Make a new combination and insert before
                * the first word being joined. */
-              copy_word = new WERD;
+              auto *copy_word = new WERD;
               *copy_word = *(prev_word->word);
               // deep copy
               combo = new WERD_RES(copy_word);
@@ -546,7 +543,6 @@ void Tesseract::fix_sp_fp_word(WERD_RES_IT &word_res_it, ROW *row, BLOCK *block)
   WERD_RES *word_res;
   WERD_RES_LIST sub_word_list;
   WERD_RES_IT sub_word_list_it(&sub_word_list);
-  int16_t blob_index;
   int16_t new_length;
   float junk;
 
@@ -556,7 +552,7 @@ void Tesseract::fix_sp_fp_word(WERD_RES_IT &word_res_it, ROW *row, BLOCK *block)
     return;
   }
 
-  blob_index = worst_noise_blob(word_res, &junk);
+  auto blob_index = worst_noise_blob(word_res, &junk);
   if (blob_index < 0) {
     return;
   }
@@ -623,7 +619,6 @@ void Tesseract::break_noisiest_blob_word(WERD_RES_LIST &words) {
   WERD_RES_IT worst_word_it;
   float worst_noise_score = 9999;
   int worst_blob_index = -1; // Noisiest blob of noisiest wd
-  int blob_index;            // of wds noisiest blob
   float noise_score;         // of wds noisiest blob
   WERD_RES *word_res;
   C_BLOB_IT blob_it;
@@ -636,7 +631,7 @@ void Tesseract::break_noisiest_blob_word(WERD_RES_LIST &words) {
   int16_t i;
 
   for (word_it.mark_cycle_pt(); !word_it.cycled_list(); word_it.forward()) {
-    blob_index = worst_noise_blob(word_it.data(), &noise_score);
+    auto blob_index = worst_noise_blob(word_it.data(), &noise_score);
     if (blob_index > -1 && worst_noise_score > noise_score) {
       worst_noise_score = noise_score;
       worst_blob_index = blob_index;
@@ -806,7 +801,6 @@ float Tesseract::blob_noise_score(TBLOB *blob) {
 void fixspace_dbg(WERD_RES *word) {
   TBOX box = word->word->bounding_box();
   const bool show_map_detail = false;
-  int16_t i;
 
   box.print();
   tprintf("" \""%s\"" "", word->best_choice->unichar_string().c_str());
@@ -816,7 +810,7 @@ void fixspace_dbg(WERD_RES *word) {
   tprintf(""\n"");
   if (show_map_detail) {
     tprintf(""\""%s\""\n"", word->best_choice->unichar_string().c_str());
-    for (i = 0; word->best_choice->unichar_string()[i] != '\0'; i++) {
+    for (unsigned i = 0; word->best_choice->unichar_string()[i] != '\0'; i++) {
       tprintf(""**** \""%c\"" ****\n"", word->best_choice->unichar_string()[i]);
       word->reject_map[i].full_print(debug_fp);
     }
","{'added': [(185, '    int16_t current_score = eval_word_spacing(current_perm);'), (206, '    WERD_RES *src_wd = src_it.data();'), (424, '            WERD_RES *combo;'), (430, '              auto *copy_word = new WERD;'), (555, '  auto blob_index = worst_noise_blob(word_res, &junk);'), (634, '    auto blob_index = worst_noise_blob(word_it.data(), &noise_score);'), (813, ""    for (unsigned i = 0; word->best_choice->unichar_string()[i] != '\\0'; i++) {"")], 'deleted': [(174, '  int16_t current_score;'), (186, '    current_score = eval_word_spacing(current_perm);'), (204, '  WERD_RES *src_wd;'), (208, '    src_wd = src_it.data();'), (396, '  WERD_RES *combo;'), (397, '  WERD *copy_word;'), (433, '              copy_word = new WERD;'), (549, '  int16_t blob_index;'), (559, '  blob_index = worst_noise_blob(word_res, &junk);'), (626, '  int blob_index;            // of wds noisiest blob'), (639, '    blob_index = worst_noise_blob(word_it.data(), &noise_score);'), (809, '  int16_t i;'), (819, ""    for (i = 0; word->best_choice->unichar_string()[i] != '\\0'; i++) {"")]}",yes
src\ccmain\output.cpp,src\ccmain\output.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -101,11 +101,11 @@ void Tesseract::write_results(PAGE_RES_IT &page_res_it,
                               bool force_eol) {  // override tilde crunch?
   WERD_RES *word = page_res_it.word();
   const UNICHARSET &uchset = *word->uch_set;
-  bool need_reject = false;
   UNICHAR_ID space = uchset.unichar_to_id("" "");
 
   if ((word->unlv_crunch_mode != CR_NONE || word->best_choice->empty()) &&
       !tessedit_zero_kelvin_rejection && !tessedit_word_for_word) {
+    bool need_reject = false;
     if ((word->unlv_crunch_mode != CR_DELETE) &&
         (!stats_.tilde_crunch_written ||
          ((word->unlv_crunch_mode == CR_KEEP_SPACE) && (word->word->space() > 0) &&
","{'added': [(108, '    bool need_reject = false;')], 'deleted': [(104, '  bool need_reject = false;')]}",yes
src\ccmain\paragraphs.cpp,src\ccmain\paragraphs.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -2407,8 +2407,8 @@ static void InitializeTextAndBoxesPreRecognition(const MutableIterator &it, RowI
   // Set up text, lword_text, and rword_text (mostly for debug printing).
   std::string fake_text;
   PageIterator pit(static_cast<const PageIterator &>(it));
-  bool first_word = true;
   if (!pit.Empty(RIL_WORD)) {
+    bool first_word = true;
     do {
       fake_text += ""x"";
       if (first_word) {
","{'added': [(2411, '    bool first_word = true;')], 'deleted': [(2410, '  bool first_word = true;')]}",yes
src\ccmain\pgedit.cpp,src\ccmain\pgedit.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -703,9 +703,7 @@ bool Tesseract::word_display(PAGE_RES_IT *pr_it) {
   WERD_RES *word_res = pr_it->word();
   WERD *word = word_res->word;
   TBOX word_bb;    // word bounding box
-  int word_height; // ht of word BB
   bool displayed_something = false;
-  float shift; // from bot left
 
   if (color_mode != CM_RAINBOW && word_res->box_word != nullptr) {
 #  ifndef DISABLED_LEGACY_ENGINE
@@ -842,13 +840,14 @@ bool Tesseract::word_display(PAGE_RES_IT *pr_it) {
   if (text.length() > 0) {
     word_bb = word->bounding_box();
     image_win->Pen(ScrollView::RED);
-    word_height = word_bb.height();
-    int text_height = 0.50 * word_height;
+    auto word_height = word_bb.height();
+    int text_height = word_height / 2;
     if (text_height > 20) {
       text_height = 20;
     }
     image_win->TextAttributes(""Arial"", text_height, false, false, false);
-    shift = (word_height < word_bb.width()) ? 0.25 * word_height : 0.0f;
+    // from bot left
+    float shift = (word_height < word_bb.width()) ? 0.25f * word_height : 0.0f;
     image_win->Text(word_bb.left() + shift, word_bb.bottom() + 0.25 * word_height, text.c_str());
     if (blame.length() > 0) {
       image_win->Text(word_bb.left() + shift, word_bb.bottom() + 0.25 * word_height - text_height,
","{'added': [(843, '    auto word_height = word_bb.height();'), (844, '    int text_height = word_height / 2;'), (849, '    // from bot left'), (850, '    float shift = (word_height < word_bb.width()) ? 0.25f * word_height : 0.0f;')], 'deleted': [(706, '  int word_height; // ht of word BB'), (708, '  float shift; // from bot left'), (845, '    word_height = word_bb.height();'), (846, '    int text_height = 0.50 * word_height;'), (851, '    shift = (word_height < word_bb.width()) ? 0.25 * word_height : 0.0f;')]}",yes
src\ccmain\reject.cpp,src\ccmain\reject.cpp,96772c5761cf2407798f97a513a68993aea083c8,560529332c227ed6254450b8efd60d70de81f048,"Reduce scope of some local variables (reported by Codacy)

Apply also some smaller optimizations and add TODO comments
for local variables which require further examination.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -293,8 +293,6 @@ bool Tesseract::one_ell_conflict(WERD_RES *word_res, bool update_map) {
   int16_t i;
   int16_t offset;
   bool non_conflict_set_char; // non conf set a/n?
-  bool conflict = false;
-  bool allow_1s;
   ACCEPTABLE_WERD_TYPE word_type;
   bool dict_perm_type;
   bool dict_word_ok;
@@ -411,11 +409,11 @@ bool Tesseract::one_ell_conflict(WERD_RES *word_res, bool update_map) {
     Else reject all conflict chs
 */
   if (word_contains_non_1_digit(word, lengths)) {
-    allow_1s =
+    bool allow_1s =
         (alpha_count(word, lengths) == 0) || (word_res->best_choice->permuter() == NUMBER_PERM);
 
     int16_t offset;
-    conflict = false;
+    bool conflict = false;
     for (i = 0, offset = 0; word[offset] != '\0';
          offset += word_res->best_choice->unichar_lengths()[i++]) {
       if ((!allow_1s || (word[offset] != '1')) &&
","{'added': [(412, '    bool allow_1s ='), (416, '    bool conflict = false;')], 'deleted': [(296, '  bool conflict = false;'), (297, '  bool allow_1s;'), (414, '    allow_1s ='), (418, '    conflict = false;')]}",yes
INSTALL.GIT.md,INSTALL.GIT.md,560529332c227ed6254450b8efd60d70de81f048,ec829cd90fd34c0295f652e95296a89b199006ee,"Fix more code style issues (reported by Codacy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -38,7 +38,6 @@ all languages).
 
     git clone https://github.com/tesseract-ocr/tessdata.git tesseract-ocr.tessdata
 
-
 You need an Internet connection and [curl](https://curl.haxx.se/) to compile `ScrollView.jar`
 because the build will automatically download
 [piccolo2d-core-3.0.1.jar](https://search.maven.org/remotecontent?filepath=org/piccolo2d/piccolo2d-core/3.0.1/piccolo2d-core-3.0.1.jar) and
","{'added': [], 'deleted': [(41, '')]}",yes
unittest\README.md,unittest\README.md,560529332c227ed6254450b8efd60d70de81f048,ec829cd90fd34c0295f652e95296a89b199006ee,"Fix more code style issues (reported by Codacy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,9 +1,9 @@
 # Unit Testing for Tesseract
 
-
 ## Requirements
 
 ### Files and structure
+
 ```
 
 ├── langdata_lstm
","{'added': [(6, '')], 'deleted': [(3, '')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,ec829cd90fd34c0295f652e95296a89b199006ee,694cd16cb80fceb231724a684404a9623e02c610,cmake: remove config option from build to avoid GA wrong build,"@@ -47,7 +47,7 @@ jobs:
              git clone --depth 1 https://github.com/zlib-ng/zlib-ng.git
              cd zlib-ng
              cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
-             cmake --build build --config RelWithDebInfo --target install
+             cmake --build build --target install
              cd ..
 
       - name: Build and Install libpng
@@ -57,7 +57,7 @@ jobs:
              unzip.exe  -qq lpng${{env.png_ver}}.zip
              cd lpng${{env.png_ver}}
              cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF
-             cmake --build build --config RelWithDebInfo --target install
+             cmake --build build --target install
              cd ..
 
       - name: Build and Install libjpeg
@@ -66,7 +66,7 @@ jobs:
              git clone --depth 1 https://github.com/libjpeg-turbo/libjpeg-turbo.git
              cd libjpeg-turbo
              cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWITH_TURBOJPEG=OFF -DENABLE_SHARED=OFF
-             cmake --build build --config RelWithDebInfo --target install
+             cmake --build build --target install
              cd ..
 
       - name: Build and Install jbigkit
@@ -75,7 +75,7 @@ jobs:
              git clone --depth 1 https://github.com/zdenop/jbigkit.git
              cd jbigkit
              cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_PROGRAMS=OFF -DBUILD_TOOLS=OFF -DCMAKE_WARN_DEPRECATED=OFF
-             cmake --build build --config RelWithDebInfo --target install
+             cmake --build build --target install
              cd ..
 
       - name: Build and Install libtiff
@@ -84,7 +84,7 @@ jobs:
              git clone -c advice.detachedHead=false -b ""v4.6.0"" --depth 1 https://gitlab.com/libtiff/libtiff.git
              cd libtiff
              cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF
-             cmake --build build --config RelWithDebInfo --target install
+             cmake --build build --target install
              cd ..
 
       - name: Build and Install leptonica
@@ -94,7 +94,7 @@ jobs:
              git clone --depth 1 https://github.com/DanBloomberg/leptonica.git
              cd leptonica
              cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_PROG=OFF -DBUILD_SHARED_LIBS=ON
-             cmake --build build --config RelWithDebInfo --target install
+             cmake --build build --target install
 
       - name: Remove not needed tools Before building tesseract
         shell: cmd
@@ -105,7 +105,7 @@ jobs:
         shell: cmd
         run: |
              cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=OFF
-             cmake --build build --config RelWithDebInfo --target install
+             cmake --build build --target install
 
       - name: Upload Build Results
         uses: actions/upload-artifact@v4
","{'added': [(50, '             cmake --build build --target install'), (60, '             cmake --build build --target install'), (69, '             cmake --build build --target install'), (78, '             cmake --build build --target install'), (87, '             cmake --build build --target install'), (97, '             cmake --build build --target install'), (108, '             cmake --build build --target install')], 'deleted': [(50, '             cmake --build build --config RelWithDebInfo --target install'), (60, '             cmake --build build --config RelWithDebInfo --target install'), (69, '             cmake --build build --config RelWithDebInfo --target install'), (78, '             cmake --build build --config RelWithDebInfo --target install'), (87, '             cmake --build build --config RelWithDebInfo --target install'), (97, '             cmake --build build --config RelWithDebInfo --target install'), (108, '             cmake --build build --config RelWithDebInfo --target install')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,694cd16cb80fceb231724a684404a9623e02c610,a387624e9f337158556adbdcd03ffe7113fddf86,cmake: add timestamp to artifacts,"@@ -26,9 +26,12 @@ jobs:
 
       - name: Get the version
         id: get_version
+        continue-on-error: true
         run: |
              $git_info=$(git describe --tags HEAD)
+             $stamp=$(date +'%Y-%m-%d_%H%M%S')
              echo ""version=${git_info}"" >> $env:GITHUB_OUTPUT
+             echo ""stamp=${stamp}"" >> $env:GITHUB_OUTPUT
 
       - name: Setup Installation Location
         run: |
@@ -107,7 +110,7 @@ jobs:
       - name: Upload Build Results
         uses: actions/upload-artifact@v4
         with:
-          name: tesseract-${{ steps.get_version.outputs.version }}-VS2019_win64
+          name: tesseract-${{ steps.get_version.outputs.version }}-${{steps.get_version.outputs.stamp}}-VS2019_win64
           path: ${{env.ILOC}}
           retention-days: 5
 
","{'added': [(29, '        continue-on-error: true'), (32, ""             $stamp=$(date +'%Y-%m-%d_%H%M%S')""), (34, '             echo ""stamp=${stamp}"" >> $env:GITHUB_OUTPUT'), (113, '          name: tesseract-${{ steps.get_version.outputs.version }}-${{steps.get_version.outputs.stamp}}-VS2019_win64')], 'deleted': [(110, '          name: tesseract-${{ steps.get_version.outputs.version }}-VS2019_win64')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,a387624e9f337158556adbdcd03ffe7113fddf86,09e003f8fb4273fced33ade680df6757971a9cd0,cmake: use RelWithDebInfo instead of Release,"@@ -17,19 +17,23 @@ jobs:
     runs-on: windows-latest
     steps:
       - uses: ilammy/setup-nasm@v1
+      - uses: microsoft/setup-msbuild@v2
       - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""
         uses: actions/checkout@v4
         with:
           submodules: recursive
       - run: git fetch --prune --unshallow --tags
+
       - name: Get the version
         id: get_version
         run: |
              $git_info=$(git describe --tags HEAD)
              echo ""version=${git_info}"" >> $env:GITHUB_OUTPUT
+
       - name: Setup Installation Location
         run: |
              mkdir ${{env.ILOC}}
+
       - name: Uninstall Perl
         run: |
           choco uninstall strawberryperl
@@ -40,7 +44,7 @@ jobs:
              git clone --depth 1 https://github.com/zlib-ng/zlib-ng.git
              cd zlib-ng
              cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
-             cmake --build build --config Release --target install
+             cmake --build build --config RelWithDebInfo --target install
              cd ..
 
       - name: Build and Install libpng
@@ -58,8 +62,8 @@ jobs:
         run: |
              git clone --depth 1 https://github.com/libjpeg-turbo/libjpeg-turbo.git
              cd libjpeg-turbo
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWITH_TURBOJPEG=OFF -DENABLE_SHARED=OFF
-             cmake --build build --config Release --target install
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWITH_TURBOJPEG=OFF -DENABLE_SHARED=OFF
+             cmake --build build --config RelWithDebInfo --target install
              cd ..
 
       - name: Build and Install jbigkit
@@ -68,7 +72,7 @@ jobs:
              git clone --depth 1 https://github.com/zdenop/jbigkit.git
              cd jbigkit
              cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_PROGRAMS=OFF -DBUILD_TOOLS=OFF -DCMAKE_WARN_DEPRECATED=OFF
-             cmake --build build --config Release --target install
+             cmake --build build --config RelWithDebInfo --target install
              cd ..
 
       - name: Build and Install libtiff
@@ -76,8 +80,8 @@ jobs:
         run: |
              git clone -c advice.detachedHead=false -b ""v4.6.0"" --depth 1 https://gitlab.com/libtiff/libtiff.git
              cd libtiff
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF
-             cmake --build build --config Release --target install
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF
+             cmake --build build --config RelWithDebInfo --target install
              cd ..
 
       - name: Build and Install leptonica
@@ -86,8 +90,8 @@ jobs:
              echo ""Building leptonica...""
              git clone --depth 1 https://github.com/DanBloomberg/leptonica.git
              cd leptonica
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_PROG=OFF -DBUILD_SHARED_LIBS=ON
-             cmake --build build --config Release --target install
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_PROG=OFF -DBUILD_SHARED_LIBS=ON
+             cmake --build build --config RelWithDebInfo --target install
 
       - name: Remove not needed tools Before building tesseract
         shell: cmd
@@ -97,8 +101,8 @@ jobs:
       - name: Build and Install tesseract
         shell: cmd
         run: |
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=OFF
-             cmake --build build --config Release --target install
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=OFF
+             cmake --build build --config RelWithDebInfo --target install
 
       - name: Upload Build Results
         uses: actions/upload-artifact@v4
","{'added': [(20, '      - uses: microsoft/setup-msbuild@v2'), (26, ''), (32, ''), (36, ''), (47, '             cmake --build build --config RelWithDebInfo --target install'), (65, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWITH_TURBOJPEG=OFF -DENABLE_SHARED=OFF'), (66, '             cmake --build build --config RelWithDebInfo --target install'), (75, '             cmake --build build --config RelWithDebInfo --target install'), (83, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF'), (84, '             cmake --build build --config RelWithDebInfo --target install'), (93, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_PROG=OFF -DBUILD_SHARED_LIBS=ON'), (94, '             cmake --build build --config RelWithDebInfo --target install'), (104, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=OFF'), (105, '             cmake --build build --config RelWithDebInfo --target install')], 'deleted': [(43, '             cmake --build build --config Release --target install'), (61, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWITH_TURBOJPEG=OFF -DENABLE_SHARED=OFF'), (62, '             cmake --build build --config Release --target install'), (71, '             cmake --build build --config Release --target install'), (79, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF'), (80, '             cmake --build build --config Release --target install'), (89, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_PROG=OFF -DBUILD_SHARED_LIBS=ON'), (90, '             cmake --build build --config Release --target install'), (100, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=OFF'), (101, '             cmake --build build --config Release --target install')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,09e003f8fb4273fced33ade680df6757971a9cd0,4bd125b03246b841c230a6506c08ac0dba7aaaef,cmake: improve png version handling,"@@ -9,6 +9,7 @@ on:
 
 env:
   ILOC: d:/a/local
+  png_ver: 1643
 
 jobs:
   build:
@@ -45,11 +46,11 @@ jobs:
       - name: Build and Install libpng
         shell: cmd
         run: |
-             curl -sSL -o lpng1643.zip https://download.sourceforge.net/libpng/lpng1643.zip
-             unzip.exe  -qq lpng1643.zip
-             cd lpng1643
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF
-             cmake --build build --config Release --target install
+             curl -sSL -o lpng${{env.png_ver}}.zip https://download.sourceforge.net/libpng/lpng${{env.png_ver}}.zip
+             unzip.exe  -qq lpng${{env.png_ver}}.zip
+             cd lpng${{env.png_ver}}
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF
+             cmake --build build --config RelWithDebInfo --target install
              cd ..
 
       - name: Build and Install libjpeg
","{'added': [(12, '  png_ver: 1643'), (49, '             curl -sSL -o lpng${{env.png_ver}}.zip https://download.sourceforge.net/libpng/lpng${{env.png_ver}}.zip'), (50, '             unzip.exe  -qq lpng${{env.png_ver}}.zip'), (51, '             cd lpng${{env.png_ver}}'), (52, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF'), (53, '             cmake --build build --config RelWithDebInfo --target install')], 'deleted': [(48, '             curl -sSL -o lpng1643.zip https://download.sourceforge.net/libpng/lpng1643.zip'), (49, '             unzip.exe  -qq lpng1643.zip'), (50, '             cd lpng1643'), (51, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF'), (52, '             cmake --build build --config Release --target install')]}",yes
CMakeLists.txt,CMakeLists.txt,4bd125b03246b841c230a6506c08ac0dba7aaaef,0f815d5ddee63a8621c0029842ec7906f355035b,cmake: install pdb files only for MSVC build,"@@ -927,13 +927,19 @@ install(
   DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
   RENAME tesseract.pc)
 install(TARGETS tesseract DESTINATION bin)
-install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> DESTINATION bin OPTIONAL)
+if (MSVC)
+  install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> DESTINATION bin OPTIONAL)
+endif()
 install(
   TARGETS libtesseract
   EXPORT TesseractTargets
   RUNTIME DESTINATION bin
+  RUNTIME DESTINATION bin
   LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+if (MSVC)
+  install(FILES $<TARGET_PDB_FILE:libtesseract> DESTINATION bin OPTIONAL)
+endif()
 install(
   EXPORT TesseractTargets
   NAMESPACE Tesseract::
","{'added': [(930, 'if (MSVC)'), (931, '  install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> DESTINATION bin OPTIONAL)'), (932, 'endif()'), (937, '  RUNTIME DESTINATION bin'), (940, 'if (MSVC)'), (941, '  install(FILES $<TARGET_PDB_FILE:libtesseract> DESTINATION bin OPTIONAL)'), (942, 'endif()')], 'deleted': [(930, 'install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> DESTINATION bin OPTIONAL)')]}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,4bd125b03246b841c230a6506c08ac0dba7aaaef,0f815d5ddee63a8621c0029842ec7906f355035b,cmake: install pdb files only for MSVC build,"@@ -126,7 +126,9 @@ install(
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 generate_export_header(common_training EXPORT_MACRO_NAME
                        TESS_COMMON_TRAINING_API)
-install(FILES $<TARGET_PDB_FILE:common_training> DESTINATION bin OPTIONAL)
+if (MSVC)
+  install(FILES $<TARGET_PDB_FILE:common_training> DESTINATION bin OPTIONAL)
+endif()
 project_group(common_training ""Training Tools"")
 
 # ##############################################################################
@@ -142,7 +144,9 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:ambiguous_words> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:ambiguous_words> DESTINATION bin OPTIONAL)
+  endif()
 endif()
 
 # ##############################################################################
@@ -158,7 +162,9 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:classifier_tester> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:classifier_tester> DESTINATION bin OPTIONAL)
+  endif()
 endif()
 
 # ##############################################################################
@@ -173,7 +179,9 @@ install(
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib)
-install(FILES $<TARGET_PDB_FILE:combine_tessdata> DESTINATION bin OPTIONAL)
+if (MSVC)
+  install(FILES $<TARGET_PDB_FILE:combine_tessdata> DESTINATION bin OPTIONAL)
+endif()
 
 # ##############################################################################
 # EXECUTABLE cntraining
@@ -188,7 +196,9 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:cntraining> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:cntraining> DESTINATION bin OPTIONAL)
+  endif()
 endif()
 
 # ##############################################################################
@@ -203,7 +213,10 @@ install(
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib)
-install(FILES $<TARGET_PDB_FILE:dawg2wordlist> DESTINATION bin OPTIONAL)
+if (MSVC)
+  install(FILES $<TARGET_PDB_FILE:dawg2wordlist> DESTINATION bin OPTIONAL)
+endif()
+
 # ##############################################################################
 # EXECUTABLE mftraining
 # ##############################################################################
@@ -217,7 +230,9 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:mftraining> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:mftraining> DESTINATION bin OPTIONAL)
+  endif()
 endif()
 
 # ##############################################################################
@@ -233,7 +248,9 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:shapeclustering> DESTINATION bin OPTIONAL)
+  if (MSVC)
+     install(FILES $<TARGET_PDB_FILE:shapeclustering> DESTINATION bin OPTIONAL)
+  endif()
 endif()
 
 # ##############################################################################
@@ -248,9 +265,11 @@ install(
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib)
-install(FILES $<TARGET_PDB_FILE:wordlist2dawg> DESTINATION bin OPTIONAL)
-if(ICU_FOUND)
+if (MSVC)
+  install(FILES $<TARGET_PDB_FILE:wordlist2dawg> DESTINATION bin OPTIONAL)
+endif()
 
+if(ICU_FOUND)
   if(NOT SW_BUILD)
     include_directories(${ICU_INCLUDE_DIRS})
   endif()
@@ -279,7 +298,9 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
-  install(FILES $<TARGET_PDB_FILE:unicharset_training> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:unicharset_training> DESTINATION bin OPTIONAL)
+  endif()
   generate_export_header(unicharset_training EXPORT_MACRO_NAME
                          TESS_UNICHARSET_TRAINING_API)
   project_group(unicharset_training ""Training Tools"")
@@ -296,7 +317,9 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:combine_lang_model> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:combine_lang_model> DESTINATION bin OPTIONAL)
+  endif()
 
   # ############################################################################
   # EXECUTABLE lstmeval
@@ -310,7 +333,9 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:lstmeval> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:lstmeval> DESTINATION bin OPTIONAL)
+  endif()
 
   # ############################################################################
   # EXECUTABLE lstmtraining
@@ -324,7 +349,9 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:lstmtraining> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:lstmtraining> DESTINATION bin OPTIONAL)
+  endif()
 
   # ############################################################################
   # EXECUTABLE merge_unicharsets
@@ -338,7 +365,9 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:merge_unicharsets> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:merge_unicharsets> DESTINATION bin OPTIONAL)
+  endif()
 
   # ############################################################################
   # EXECUTABLE set_unicharset_properties
@@ -352,7 +381,9 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:set_unicharset_properties> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:set_unicharset_properties> DESTINATION bin OPTIONAL)
+  endif()
 
   # ############################################################################
   # EXECUTABLE unicharset_extractor
@@ -367,7 +398,9 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
-  install(FILES $<TARGET_PDB_FILE:unicharset_extractor> DESTINATION bin OPTIONAL)
+  if (MSVC)
+    install(FILES $<TARGET_PDB_FILE:unicharset_extractor> DESTINATION bin OPTIONAL)
+  endif()
 
   # ############################################################################
 
@@ -424,7 +457,9 @@ if(ICU_FOUND)
       RUNTIME DESTINATION bin
       LIBRARY DESTINATION lib
       ARCHIVE DESTINATION lib)
-    install(FILES $<TARGET_PDB_FILE:text2image> DESTINATION bin OPTIONAL)
+    if (MSVC)
+      install(FILES $<TARGET_PDB_FILE:text2image> DESTINATION bin OPTIONAL)
+    endif()
   endif()
 endif(ICU_FOUND)
 
","{'added': [(129, 'if (MSVC)'), (130, '  install(FILES $<TARGET_PDB_FILE:common_training> DESTINATION bin OPTIONAL)'), (131, 'endif()'), (147, '  if (MSVC)'), (148, '    install(FILES $<TARGET_PDB_FILE:ambiguous_words> DESTINATION bin OPTIONAL)'), (149, '  endif()'), (165, '  if (MSVC)'), (166, '    install(FILES $<TARGET_PDB_FILE:classifier_tester> DESTINATION bin OPTIONAL)'), (167, '  endif()'), (182, 'if (MSVC)'), (183, '  install(FILES $<TARGET_PDB_FILE:combine_tessdata> DESTINATION bin OPTIONAL)'), (184, 'endif()'), (199, '  if (MSVC)'), (200, '    install(FILES $<TARGET_PDB_FILE:cntraining> DESTINATION bin OPTIONAL)'), (201, '  endif()'), (216, 'if (MSVC)'), (217, '  install(FILES $<TARGET_PDB_FILE:dawg2wordlist> DESTINATION bin OPTIONAL)'), (218, 'endif()'), (219, ''), (233, '  if (MSVC)'), (234, '    install(FILES $<TARGET_PDB_FILE:mftraining> DESTINATION bin OPTIONAL)'), (235, '  endif()'), (251, '  if (MSVC)'), (252, '     install(FILES $<TARGET_PDB_FILE:shapeclustering> DESTINATION bin OPTIONAL)'), (253, '  endif()'), (268, 'if (MSVC)'), (269, '  install(FILES $<TARGET_PDB_FILE:wordlist2dawg> DESTINATION bin OPTIONAL)'), (270, 'endif()'), (272, 'if(ICU_FOUND)'), (301, '  if (MSVC)'), (302, '    install(FILES $<TARGET_PDB_FILE:unicharset_training> DESTINATION bin OPTIONAL)'), (303, '  endif()'), (320, '  if (MSVC)'), (321, '    install(FILES $<TARGET_PDB_FILE:combine_lang_model> DESTINATION bin OPTIONAL)'), (322, '  endif()'), (336, '  if (MSVC)'), (337, '    install(FILES $<TARGET_PDB_FILE:lstmeval> DESTINATION bin OPTIONAL)'), (338, '  endif()'), (352, '  if (MSVC)'), (353, '    install(FILES $<TARGET_PDB_FILE:lstmtraining> DESTINATION bin OPTIONAL)'), (354, '  endif()'), (368, '  if (MSVC)'), (369, '    install(FILES $<TARGET_PDB_FILE:merge_unicharsets> DESTINATION bin OPTIONAL)'), (370, '  endif()'), (384, '  if (MSVC)'), (385, '    install(FILES $<TARGET_PDB_FILE:set_unicharset_properties> DESTINATION bin OPTIONAL)'), (386, '  endif()'), (401, '  if (MSVC)'), (402, '    install(FILES $<TARGET_PDB_FILE:unicharset_extractor> DESTINATION bin OPTIONAL)'), (403, '  endif()'), (460, '    if (MSVC)'), (461, '      install(FILES $<TARGET_PDB_FILE:text2image> DESTINATION bin OPTIONAL)'), (462, '    endif()')], 'deleted': [(129, 'install(FILES $<TARGET_PDB_FILE:common_training> DESTINATION bin OPTIONAL)'), (145, '  install(FILES $<TARGET_PDB_FILE:ambiguous_words> DESTINATION bin OPTIONAL)'), (161, '  install(FILES $<TARGET_PDB_FILE:classifier_tester> DESTINATION bin OPTIONAL)'), (176, 'install(FILES $<TARGET_PDB_FILE:combine_tessdata> DESTINATION bin OPTIONAL)'), (191, '  install(FILES $<TARGET_PDB_FILE:cntraining> DESTINATION bin OPTIONAL)'), (206, 'install(FILES $<TARGET_PDB_FILE:dawg2wordlist> DESTINATION bin OPTIONAL)'), (220, '  install(FILES $<TARGET_PDB_FILE:mftraining> DESTINATION bin OPTIONAL)'), (236, '  install(FILES $<TARGET_PDB_FILE:shapeclustering> DESTINATION bin OPTIONAL)'), (251, 'install(FILES $<TARGET_PDB_FILE:wordlist2dawg> DESTINATION bin OPTIONAL)'), (252, 'if(ICU_FOUND)'), (282, '  install(FILES $<TARGET_PDB_FILE:unicharset_training> DESTINATION bin OPTIONAL)'), (299, '  install(FILES $<TARGET_PDB_FILE:combine_lang_model> DESTINATION bin OPTIONAL)'), (313, '  install(FILES $<TARGET_PDB_FILE:lstmeval> DESTINATION bin OPTIONAL)'), (327, '  install(FILES $<TARGET_PDB_FILE:lstmtraining> DESTINATION bin OPTIONAL)'), (341, '  install(FILES $<TARGET_PDB_FILE:merge_unicharsets> DESTINATION bin OPTIONAL)'), (355, '  install(FILES $<TARGET_PDB_FILE:set_unicharset_properties> DESTINATION bin OPTIONAL)'), (370, '  install(FILES $<TARGET_PDB_FILE:unicharset_extractor> DESTINATION bin OPTIONAL)'), (427, '    install(FILES $<TARGET_PDB_FILE:text2image> DESTINATION bin OPTIONAL)')]}",yes
CONTRIBUTING.md,CONTRIBUTING.md,651f172c42b169c10c2b3d3f75007e2a1525a3d0,cde0576fb363989463cfa263d262811bd0d59a26,"Fix more code style issues (reported by Codacy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -15,9 +15,10 @@ Use the [user forum](https://groups.google.com/g/tesseract-ocr) instead of creat
 * You have a general question.
 
 An issue should only be reported if the platform you are using is one of these:
-  * Linux (but not a version that is more than 4 years old)
-  * Windows (Windows 7 or newer version)
-  * macOS (last 3 releases)
+
+* Linux (but not a version that is more than 4 years old)
+* Windows (Windows 7 or newer version)
+* macOS (last 3 releases)
 
 For older versions or other operating systems, use the Tesseract forum.
 
@@ -40,8 +41,9 @@ Post example files to demonstrate the problem.
 BUT don't post files with private info (about yourself or others).
 
 When attaching a file to the issue report / forum ...
-  * Do not post a file larger than 20 MB.
-  * GitHub supports only few file name extensions like `.png` or `.txt`. If GitHub rejects your files, you can compress them using a program that can produce a zip archive and then load this zip file to GitHub.
+
+* Do not post a file larger than 20 MB.
+* GitHub supports only few file name extensions like `.png` or `.txt`. If GitHub rejects your files, you can compress them using a program that can produce a zip archive and then load this zip file to GitHub.
 
 Do not attach programs or libraries to your issues/posts.
 
","{'added': [(18, ''), (19, '* Linux (but not a version that is more than 4 years old)'), (20, '* Windows (Windows 7 or newer version)'), (21, '* macOS (last 3 releases)'), (44, ''), (45, '* Do not post a file larger than 20 MB.'), (46, '* GitHub supports only few file name extensions like `.png` or `.txt`. If GitHub rejects your files, you can compress them using a program that can produce a zip archive and then load this zip file to GitHub.')], 'deleted': [(18, '  * Linux (but not a version that is more than 4 years old)'), (19, '  * Windows (Windows 7 or newer version)'), (20, '  * macOS (last 3 releases)'), (43, '  * Do not post a file larger than 20 MB.'), (44, '  * GitHub supports only few file name extensions like `.png` or `.txt`. If GitHub rejects your files, you can compress them using a program that can produce a zip archive and then load this zip file to GitHub.')]}",yes
INSTALL.GIT.md,INSTALL.GIT.md,651f172c42b169c10c2b3d3f75007e2a1525a3d0,cde0576fb363989463cfa263d262811bd0d59a26,"Fix more code style issues (reported by Codacy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,4 +1,4 @@
-# autotools (LINUX/UNIX , msys...)
+## autotools (LINUX/UNIX , msys...)
 
 If you have cloned Tesseract from GitHub, you must generate
 the configure script.
@@ -10,22 +10,22 @@ You need Leptonica 1.74.2 (minimum) for Tesseract 4.0x.
 
 Known dependencies for training tools (excluding leptonica):
 
- * compiler with c++11 support
- * automake
- * pkg-config
- * pango-devel
- * cairo-devel
- * icu-devel
+* compiler with c++11 support
+* automake
+* pkg-config
+* pango-devel
+* cairo-devel
+* icu-devel
 
 So, the steps for making Tesseract are:
 
-    $ ./autogen.sh
-    $ ./configure
-    $ make
-    $ sudo make install
-    $ sudo ldconfig
-    $ make training
-    $ sudo make training-install
+    ./autogen.sh
+    ./configure
+    make
+    sudo make install
+    sudo ldconfig
+    make training
+    sudo make training-install
 
 You need to install at least English language and OSD traineddata files to
 `TESSDATA_PREFIX` directory.
@@ -36,7 +36,7 @@ All language data files can be retrieved from git repository (useful only for pa
 (Repository is huge - more that 1.2 GB. You do NOT need to download traineddata files for
 all languages).
 
-    $ git clone https://github.com/tesseract-ocr/tessdata.git tesseract-ocr.tessdata
+    git clone https://github.com/tesseract-ocr/tessdata.git tesseract-ocr.tessdata
 
 
 You need an Internet connection and [curl](https://curl.haxx.se/) to compile `ScrollView.jar`
@@ -47,22 +47,22 @@ because the build will automatically download
 
 Just run:
 
-    $ make ScrollView.jar
+    make ScrollView.jar
 
 and follow the instruction on [Viewer Debugging](https://tesseract-ocr.github.io/tessdoc/ViewerDebugging.html).
 
 
-# CMAKE
+## cmake
 
 There is alternative build system based on multiplatform [cmake](https://cmake.org/)
 
-## LINUX
+### LINUX
 
-    $ mkdir build
-    $ cd build && cmake .. && make
-    $ sudo make install
+    mkdir build
+    cd build && cmake .. && make
+    sudo make install
 
 
-## WINDOWS
+### WINDOWS
 
 See the [documentation](https://tesseract-ocr.github.io/tessdoc/) for more information on this.
","{'added': [(1, '## autotools (LINUX/UNIX , msys...)'), (13, '* compiler with c++11 support'), (14, '* automake'), (15, '* pkg-config'), (16, '* pango-devel'), (17, '* cairo-devel'), (18, '* icu-devel'), (22, '    ./autogen.sh'), (23, '    ./configure'), (24, '    make'), (25, '    sudo make install'), (26, '    sudo ldconfig'), (27, '    make training'), (28, '    sudo make training-install'), (39, '    git clone https://github.com/tesseract-ocr/tessdata.git tesseract-ocr.tessdata'), (50, '    make ScrollView.jar'), (55, '## cmake'), (59, '### LINUX'), (61, '    mkdir build'), (62, '    cd build && cmake .. && make'), (63, '    sudo make install'), (66, '### WINDOWS')], 'deleted': [(1, '# autotools (LINUX/UNIX , msys...)'), (13, ' * compiler with c++11 support'), (14, ' * automake'), (15, ' * pkg-config'), (16, ' * pango-devel'), (17, ' * cairo-devel'), (18, ' * icu-devel'), (22, '    $ ./autogen.sh'), (23, '    $ ./configure'), (24, '    $ make'), (25, '    $ sudo make install'), (26, '    $ sudo ldconfig'), (27, '    $ make training'), (28, '    $ sudo make training-install'), (39, '    $ git clone https://github.com/tesseract-ocr/tessdata.git tesseract-ocr.tessdata'), (50, '    $ make ScrollView.jar'), (55, '# CMAKE'), (59, '## LINUX'), (61, '    $ mkdir build'), (62, '    $ cd build && cmake .. && make'), (63, '    $ sudo make install'), (66, '## WINDOWS')]}",yes
CONTRIBUTING.md,CONTRIBUTING.md,cde0576fb363989463cfa263d262811bd0d59a26,896f90537ce5a69c9efc6f180b2899eba3a7f7d4,"Fix small code style issues (reported by Codacy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -7,6 +7,7 @@
 If you think you found a bug in Tesseract, please create an issue.
 
 Use the [user forum](https://groups.google.com/g/tesseract-ocr) instead of creating an issue if ...
+
 * You have problems using Tesseract and need some help.
 * You have problems installing the software.
 * You are not satisfied with the accuracy of the OCR, and want to ask how you can improve it. Note: You should first read the [ImproveQuality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) documentation.
","{'added': [(10, '')], 'deleted': []}",yes
INSTALL.GIT.md,INSTALL.GIT.md,cde0576fb363989463cfa263d262811bd0d59a26,896f90537ce5a69c9efc6f180b2899eba3a7f7d4,"Fix small code style issues (reported by Codacy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -9,6 +9,7 @@ before new build.
 You need Leptonica 1.74.2 (minimum) for Tesseract 4.0x.
 
 Known dependencies for training tools (excluding leptonica):
+
  * compiler with c++11 support
  * automake
  * pkg-config
","{'added': [(12, '')], 'deleted': []}",yes
.github\ISSUE_TEMPLATE.md,,896f90537ce5a69c9efc6f180b2899eba3a7f7d4,cb177c059d20ecdba28a21ce28da0f2affef02e0,"Remove unused .github/ISSUE_TEMPLATE.md

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,23 +0,0 @@
-Before you submit an issue, please review [the guidelines for this repository](https://github.com/tesseract-ocr/tesseract/blob/main/CONTRIBUTING.md).
-
-Please report an issue only for a BUG, not for asking questions.
-
-Note that it will be much easier for us to fix the issue if a test case that
-reproduces the problem is provided. Ideally this test case should not have any
-external dependencies. Provide a copy of the image or link to files for the test case.
-
-Please delete this text and fill in the template below.
-
-------------------------
-
-### Environment
-
-* **Tesseract Version**: <!-- compulsory. you must provide your version -->
-* **Commit Number**: <!-- optional. if known - specify commit used, if built from source -->
-* **Platform**: <!-- either `uname -a` output, or if Windows, version and 32-bit or 64-bit -->
-
-### Current Behavior:
-
-### Expected Behavior:
-
-### Suggested Fix:
","{'added': [], 'deleted': [(1, 'Before you submit an issue, please review [the guidelines for this repository](https://github.com/tesseract-ocr/tesseract/blob/main/CONTRIBUTING.md).'), (2, ''), (3, 'Please report an issue only for a BUG, not for asking questions.'), (4, ''), (5, 'Note that it will be much easier for us to fix the issue if a test case that'), (6, 'reproduces the problem is provided. Ideally this test case should not have any'), (7, 'external dependencies. Provide a copy of the image or link to files for the test case.'), (8, ''), (9, 'Please delete this text and fill in the template below.'), (10, ''), (11, '------------------------'), (12, ''), (13, '### Environment'), (14, ''), (15, '* **Tesseract Version**: <!-- compulsory. you must provide your version -->'), (16, '* **Commit Number**: <!-- optional. if known - specify commit used, if built from source -->'), (17, '* **Platform**: <!-- either `uname -a` output, or if Windows, version and 32-bit or 64-bit -->'), (18, ''), (19, '### Current Behavior:'), (20, ''), (21, '### Expected Behavior:'), (22, ''), (23, '### Suggested Fix:')]}",yes
.github\workflows\cifuzz.yml,.github\workflows\cifuzz.yml,59bda0853c38608cb73c7e578013243c5f78d4b3,cb177c059d20ecdba28a21ce28da0f2affef02e0,"Update deprecated Node.js 16 GitHub actions

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -26,7 +26,7 @@ jobs:
         fuzz-seconds: 600
         dry-run: false
     - name: Upload Crash
-      uses: actions/upload-artifact@v3
+      uses: actions/upload-artifact@v4
       if: failure() && steps.build.outcome == 'success'
       with:
         name: artifacts
","{'added': [(29, '      uses: actions/upload-artifact@v4')], 'deleted': [(29, '      uses: actions/upload-artifact@v3')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,59bda0853c38608cb73c7e578013243c5f78d4b3,cb177c059d20ecdba28a21ce28da0f2affef02e0,"Update deprecated Node.js 16 GitHub actions

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -88,14 +88,14 @@ jobs:
 
     - name: Upload Unit Test Results
       if: always() && matrix.os != 'windows-2022'
-      uses: actions/upload-artifact@v3
+      uses: actions/upload-artifact@v4
       with:
         name: Test Results (${{ matrix.os }})
         path: .sw/test/results.xml
 
     - name: Publish Test Report
       if: always() && matrix.os != 'windows-2022'
-      uses: mikepenz/action-junit-report@v3
+      uses: mikepenz/action-junit-report@v4
       with:
         check_name: test (${{ matrix.os }})
         report_paths: .sw/test/results.xml
","{'added': [(91, '      uses: actions/upload-artifact@v4'), (98, '      uses: mikepenz/action-junit-report@v4')], 'deleted': [(91, '      uses: actions/upload-artifact@v3'), (98, '      uses: mikepenz/action-junit-report@v3')]}",yes
CMakeLists.txt,CMakeLists.txt,cb177c059d20ecdba28a21ce28da0f2affef02e0,dac6b18a4764d13d670e7f304bbdb80f756b8431,cmake: msvc: install also pdb files,"@@ -927,6 +927,7 @@ install(
   DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
   RENAME tesseract.pc)
 install(TARGETS tesseract DESTINATION bin)
+install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> DESTINATION bin OPTIONAL)
 install(
   TARGETS libtesseract
   EXPORT TesseractTargets
","{'added': [(930, 'install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> DESTINATION bin OPTIONAL)')], 'deleted': []}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,cb177c059d20ecdba28a21ce28da0f2affef02e0,dac6b18a4764d13d670e7f304bbdb80f756b8431,cmake: msvc: install also pdb files,"@@ -126,6 +126,7 @@ install(
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 generate_export_header(common_training EXPORT_MACRO_NAME
                        TESS_COMMON_TRAINING_API)
+install(FILES $<TARGET_PDB_FILE:common_training> DESTINATION bin OPTIONAL)
 project_group(common_training ""Training Tools"")
 
 # ##############################################################################
@@ -141,6 +142,7 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:ambiguous_words> DESTINATION bin OPTIONAL)
 endif()
 
 # ##############################################################################
@@ -156,6 +158,7 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:classifier_tester> DESTINATION bin OPTIONAL)
 endif()
 
 # ##############################################################################
@@ -170,6 +173,7 @@ install(
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib)
+install(FILES $<TARGET_PDB_FILE:combine_tessdata> DESTINATION bin OPTIONAL)
 
 # ##############################################################################
 # EXECUTABLE cntraining
@@ -184,6 +188,7 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:cntraining> DESTINATION bin OPTIONAL)
 endif()
 
 # ##############################################################################
@@ -198,7 +203,7 @@ install(
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib)
-
+install(FILES $<TARGET_PDB_FILE:dawg2wordlist> DESTINATION bin OPTIONAL)
 # ##############################################################################
 # EXECUTABLE mftraining
 # ##############################################################################
@@ -212,6 +217,7 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:mftraining> DESTINATION bin OPTIONAL)
 endif()
 
 # ##############################################################################
@@ -227,6 +233,7 @@ if(NOT DISABLED_LEGACY_ENGINE)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:shapeclustering> DESTINATION bin OPTIONAL)
 endif()
 
 # ##############################################################################
@@ -241,7 +248,7 @@ install(
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib)
-
+install(FILES $<TARGET_PDB_FILE:wordlist2dawg> DESTINATION bin OPTIONAL)
 if(ICU_FOUND)
 
   if(NOT SW_BUILD)
@@ -272,6 +279,7 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
+  install(FILES $<TARGET_PDB_FILE:unicharset_training> DESTINATION bin OPTIONAL)
   generate_export_header(unicharset_training EXPORT_MACRO_NAME
                          TESS_UNICHARSET_TRAINING_API)
   project_group(unicharset_training ""Training Tools"")
@@ -288,6 +296,7 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:combine_lang_model> DESTINATION bin OPTIONAL)
 
   # ############################################################################
   # EXECUTABLE lstmeval
@@ -301,6 +310,7 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:lstmeval> DESTINATION bin OPTIONAL)
 
   # ############################################################################
   # EXECUTABLE lstmtraining
@@ -314,6 +324,7 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:lstmtraining> DESTINATION bin OPTIONAL)
 
   # ############################################################################
   # EXECUTABLE merge_unicharsets
@@ -327,6 +338,7 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:merge_unicharsets> DESTINATION bin OPTIONAL)
 
   # ############################################################################
   # EXECUTABLE set_unicharset_properties
@@ -340,6 +352,7 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:set_unicharset_properties> DESTINATION bin OPTIONAL)
 
   # ############################################################################
   # EXECUTABLE unicharset_extractor
@@ -354,6 +367,7 @@ if(ICU_FOUND)
     RUNTIME DESTINATION bin
     LIBRARY DESTINATION lib
     ARCHIVE DESTINATION lib)
+  install(FILES $<TARGET_PDB_FILE:unicharset_extractor> DESTINATION bin OPTIONAL)
 
   # ############################################################################
 
@@ -410,7 +424,7 @@ if(ICU_FOUND)
       RUNTIME DESTINATION bin
       LIBRARY DESTINATION lib
       ARCHIVE DESTINATION lib)
-
+    install(FILES $<TARGET_PDB_FILE:text2image> DESTINATION bin OPTIONAL)
   endif()
 endif(ICU_FOUND)
 
","{'added': [(129, 'install(FILES $<TARGET_PDB_FILE:common_training> DESTINATION bin OPTIONAL)'), (145, '  install(FILES $<TARGET_PDB_FILE:ambiguous_words> DESTINATION bin OPTIONAL)'), (161, '  install(FILES $<TARGET_PDB_FILE:classifier_tester> DESTINATION bin OPTIONAL)'), (176, 'install(FILES $<TARGET_PDB_FILE:combine_tessdata> DESTINATION bin OPTIONAL)'), (191, '  install(FILES $<TARGET_PDB_FILE:cntraining> DESTINATION bin OPTIONAL)'), (206, 'install(FILES $<TARGET_PDB_FILE:dawg2wordlist> DESTINATION bin OPTIONAL)'), (220, '  install(FILES $<TARGET_PDB_FILE:mftraining> DESTINATION bin OPTIONAL)'), (236, '  install(FILES $<TARGET_PDB_FILE:shapeclustering> DESTINATION bin OPTIONAL)'), (251, 'install(FILES $<TARGET_PDB_FILE:wordlist2dawg> DESTINATION bin OPTIONAL)'), (282, '  install(FILES $<TARGET_PDB_FILE:unicharset_training> DESTINATION bin OPTIONAL)'), (299, '  install(FILES $<TARGET_PDB_FILE:combine_lang_model> DESTINATION bin OPTIONAL)'), (313, '  install(FILES $<TARGET_PDB_FILE:lstmeval> DESTINATION bin OPTIONAL)'), (327, '  install(FILES $<TARGET_PDB_FILE:lstmtraining> DESTINATION bin OPTIONAL)'), (341, '  install(FILES $<TARGET_PDB_FILE:merge_unicharsets> DESTINATION bin OPTIONAL)'), (355, '  install(FILES $<TARGET_PDB_FILE:set_unicharset_properties> DESTINATION bin OPTIONAL)'), (370, '  install(FILES $<TARGET_PDB_FILE:unicharset_extractor> DESTINATION bin OPTIONAL)'), (427, '    install(FILES $<TARGET_PDB_FILE:text2image> DESTINATION bin OPTIONAL)')], 'deleted': [(201, ''), (244, ''), (413, '')]}",yes
src\classify\normmatch.cpp,src\classify\normmatch.cpp,dac6b18a4764d13d670e7f304bbdb80f756b8431,b0a10bbe1a5c3f55d79c4f00cb18d688726d5275,"Avoid FP overflow in NormEvidenceOf (fixes issue #4257)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -105,13 +105,17 @@ float Classify::ComputeNormMatch(CLASS_ID ClassId, const FEATURE_STRUCT &feature
     return (1 - NormEvidenceOf(Match));
   }
 
-  float BestMatch = FLT_MAX;
-  LIST Protos = NormProtos->Protos[ClassId];
-
   if (DebugMatch) {
     tprintf(""\nChar norm for class %s\n"", unicharset.id_to_unichar(ClassId));
   }
 
+  LIST Protos = NormProtos->Protos[ClassId];
+  if (Protos == nullptr) {
+     // Avoid FP overflow in NormEvidenceOf.
+     return 1.0f;
+  }
+
+  float BestMatch = FLT_MAX;
   iterate(Protos) {
     auto Proto = reinterpret_cast<PROTOTYPE *>(Protos->first_node());
     float Delta = feature.Params[CharNormY] - Proto->Mean[CharNormY];
","{'added': [(112, '  LIST Protos = NormProtos->Protos[ClassId];'), (113, '  if (Protos == nullptr) {'), (114, '     // Avoid FP overflow in NormEvidenceOf.'), (115, '     return 1.0f;'), (116, '  }'), (117, ''), (118, '  float BestMatch = FLT_MAX;')], 'deleted': [(108, '  float BestMatch = FLT_MAX;'), (109, '  LIST Protos = NormProtos->Protos[ClassId];'), (110, '')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,b0a10bbe1a5c3f55d79c4f00cb18d688726d5275,6db748d1fcf58fd36ea57245125ff52e660b3984,"Update cmake-win64.yml

Use libpng 1.6.43","@@ -45,9 +45,9 @@ jobs:
       - name: Build and Install libpng
         shell: cmd
         run: |
-             curl -sSL -o lpng1639.zip https://download.sourceforge.net/libpng/lpng1640.zip
-             unzip.exe  -qq lpng1640.zip
-             cd lpng1639
+             curl -sSL -o lpng1643.zip https://download.sourceforge.net/libpng/lpng1643.zip
+             unzip.exe  -qq lpng1643.zip
+             cd lpng1643
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF
              cmake --build build --config Release --target install
              cd ..
","{'added': [(48, '             curl -sSL -o lpng1643.zip https://download.sourceforge.net/libpng/lpng1643.zip'), (49, '             unzip.exe  -qq lpng1643.zip'), (50, '             cd lpng1643')], 'deleted': [(48, '             curl -sSL -o lpng1639.zip https://download.sourceforge.net/libpng/lpng1640.zip'), (49, '             unzip.exe  -qq lpng1640.zip'), (50, '             cd lpng1639')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,6db748d1fcf58fd36ea57245125ff52e660b3984,1be261dc226d49bdcad0ab2fcb10f8395edc1225,"Update cmake-win64.yml

actions/upload-artifact@v3.1.1 is depreciated","@@ -100,7 +100,7 @@ jobs:
              cmake --build build --config Release --target install
 
       - name: Upload Build Results
-        uses: actions/upload-artifact@v3.1.1
+        uses: actions/upload-artifact@v4
         with:
           name: tesseract-${{ steps.get_version.outputs.version }}-VS2019_win64
           path: ${{env.ILOC}}
","{'added': [(103, '        uses: actions/upload-artifact@v4')], 'deleted': [(103, '        uses: actions/upload-artifact@v3.1.1')]}",yes
ChangeLog,ChangeLog,1be261dc226d49bdcad0ab2fcb10f8395edc1225,34693cd772bb891f30b584814b52fac6d4e4b4cc,"Create new release 5.4.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,7 @@
+2024-06-06 - V5.4.0
+* Small build fixes and code improvements
+  (#4241, #4243, #4244, #4245, #4246, #4248, #4249, #4250, #4253)
+
 2024-05-19 - V5.4.0-rc2
 * Fix setup of datadir on installations with Conda (issue #4230) (#4240)
 * Fix FP exception in Wordrec::angle_change (issue #4242) (#4243)
","{'added': [(1, '2024-06-06 - V5.4.0'), (2, '* Small build fixes and code improvements'), (3, '  (#4241, #4243, #4244, #4245, #4246, #4248, #4249, #4250, #4253)'), (4, '')], 'deleted': []}",yes
VERSION,VERSION,1be261dc226d49bdcad0ab2fcb10f8395edc1225,34693cd772bb891f30b584814b52fac6d4e4b4cc,"Create new release 5.4.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.4.0-rc2
+5.4.0
","{'added': [(1, '5.4.0')], 'deleted': [(1, '5.4.0-rc2')]}",yes
configure.ac,configure.ac,1be261dc226d49bdcad0ab2fcb10f8395edc1225,34693cd772bb891f30b584814b52fac6d4e4b4cc,"Create new release 5.4.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2024
-PACKAGE_DATE=""05/19""
+PACKAGE_DATE=""06/06""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""06/06""')], 'deleted': [(32, 'PACKAGE_DATE=""05/19""')]}",yes
src\lstm\network.h,src\lstm\network.h,34693cd772bb891f30b584814b52fac6d4e4b4cc,a7c0a952b010dd44be549d3105fd88e6ecf7c707,"Make function Network::spec pure virtual

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -140,9 +140,7 @@ public:
   const std::string &name() const {
     return name_;
   }
-  virtual std::string spec() const {
-    return ""?"";
-  }
+  virtual std::string spec() const = 0;
   bool TestFlag(NetworkFlags flag) const {
     return (network_flags_ & flag) != 0;
   }
","{'added': [(143, '  virtual std::string spec() const = 0;')], 'deleted': [(143, '  virtual std::string spec() const {'), (144, '    return ""?"";'), (145, '  }')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,a7c0a952b010dd44be549d3105fd88e6ecf7c707,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,Update issue-bug.yml,"@@ -45,8 +45,8 @@ body:
         - macOS 13 Ventura
         - macOS 12 Monterey
         - macOS 11 Big Sur
+        - Ubuntu 24.04 Noble
         - Ubuntu 22.04 Jammy
-        - Ubuntu 20.04 Focal
         - Debian 12 Bookworm
         - Debian 11 Bullseye
         - RHEL 9
","{'added': [(48, '        - Ubuntu 24.04 Noble')], 'deleted': [(49, '        - Ubuntu 20.04 Focal')]}",yes
src\api\altorenderer.cpp,src\api\altorenderer.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -14,6 +14,7 @@
 // limitations under the License.
 
 #include ""errcode.h"" // for ASSERT_HOST
+#include ""helpers.h"" // for copy_string
 #ifdef _WIN32
 #  include ""host.h""  // windows.h for MultiByteToWideChar, ...
 #endif
@@ -270,12 +271,9 @@ char *TessBaseAPI::GetAltoText(ETEXT_DESC *monitor, int page_number) {
 
   alto_str << ""\t\t\t</PrintSpace>\n""
            << ""\t\t</Page>\n"";
-  const std::string &text = alto_str.str();
 
-  char *result = new char[text.length() + 1];
-  strcpy(result, text.c_str());
   delete res_it;
-  return result;
+  return copy_string(alto_str.str());
 }
 
 } // namespace tesseract
","{'added': [(17, '#include ""helpers.h"" // for copy_string'), (276, '  return copy_string(alto_str.str());')], 'deleted': [(273, '  const std::string &text = alto_str.str();'), (275, '  char *result = new char[text.length() + 1];'), (276, '  strcpy(result, text.c_str());'), (278, '  return result;')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -33,7 +33,7 @@
 #include ""equationdetect.h"" // for EquationDetect, destructor of equ_detect_
 #endif // ndef DISABLED_LEGACY_ENGINE
 #include ""errcode.h"" // for ASSERT_HOST
-#include ""helpers.h"" // for IntCastRounded, chomp_string
+#include ""helpers.h"" // for IntCastRounded, chomp_string, copy_string
 #include ""host.h""    // for MAX_PATH
 #include ""imageio.h"" // for IFF_TIFF_G4, IFF_TIFF, IFF_TIFF_G3, ...
 #ifndef DISABLED_LEGACY_ENGINE
@@ -1378,9 +1378,7 @@ char *TessBaseAPI::GetUTF8Text() {
     const std::unique_ptr<const char[]> para_text(it->GetUTF8Text(RIL_PARA));
     text += para_text.get();
   } while (it->Next(RIL_PARA));
-  char *result = new char[text.length() + 1];
-  strncpy(result, text.c_str(), text.length() + 1);
-  return result;
+  return copy_string(text);
 }
 
 static void AddBoxToTSV(const PageIterator *it, PageIteratorLevel level, std::string &text) {
@@ -1509,9 +1507,7 @@ char *TessBaseAPI::GetTSVText(int page_number) {
 #endif
   }
 
-  char *ret = new char[tsv_str.length() + 1];
-  strcpy(ret, tsv_str.c_str());
-  return ret;
+  return copy_string(tsv_str);
 }
 
 /** The 5 numbers output for each box (the usual 4 and a page number.) */
@@ -1759,10 +1755,7 @@ char *TessBaseAPI::GetOsdText(int page_number) {
          << ""Orientation confidence: "" << orient_conf << ""\n""
          << ""Script: "" << script_name << ""\n""
          << ""Script confidence: "" << script_conf << ""\n"";
-  const std::string &text = stream.str();
-  char *result = new char[text.length() + 1];
-  strcpy(result, text.c_str());
-  return result;
+  return copy_string(stream.str());
 }
 
 #endif // ndef DISABLED_LEGACY_ENGINE
","{'added': [(36, '#include ""helpers.h"" // for IntCastRounded, chomp_string, copy_string'), (1381, '  return copy_string(text);'), (1510, '  return copy_string(tsv_str);'), (1758, '  return copy_string(stream.str());')], 'deleted': [(36, '#include ""helpers.h"" // for IntCastRounded, chomp_string'), (1381, '  char *result = new char[text.length() + 1];'), (1382, '  strncpy(result, text.c_str(), text.length() + 1);'), (1383, '  return result;'), (1512, '  char *ret = new char[tsv_str.length() + 1];'), (1513, '  strcpy(ret, tsv_str.c_str());'), (1514, '  return ret;'), (1762, '  const std::string &text = stream.str();'), (1763, '  char *result = new char[text.length() + 1];'), (1764, '  strcpy(result, text.c_str());'), (1765, '  return result;')]}",yes
src\api\hocrrenderer.cpp,src\api\hocrrenderer.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -25,6 +25,7 @@
 #  include ""host.h"" // windows.h for MultiByteToWideChar, ...
 #endif
 #include <tesseract/renderer.h>
+#include ""helpers.h""        // for copy_string
 #include ""tesseractclass.h"" // for Tesseract
 
 namespace tesseract {
@@ -480,10 +481,7 @@ char *TessBaseAPI::GetHOCRText(ETEXT_DESC *monitor, int page_number) {
   }
   hocr_str << ""  </div>\n"";
 
-  const std::string &text = hocr_str.str();
-  char *result = new char[text.length() + 1];
-  strcpy(result, text.c_str());
-  return result;
+  return copy_string(hocr_str.str());
 }
 
 /**********************************************************************
","{'added': [(28, '#include ""helpers.h""        // for copy_string'), (484, '  return copy_string(hocr_str.str());')], 'deleted': [(483, '  const std::string &text = hocr_str.str();'), (484, '  char *result = new char[text.length() + 1];'), (485, '  strcpy(result, text.c_str());'), (486, '  return result;')]}",yes
src\api\lstmboxrenderer.cpp,src\api\lstmboxrenderer.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -18,6 +18,7 @@
 
 #include <tesseract/baseapi.h> // for TessBaseAPI
 #include <tesseract/renderer.h>
+#include ""helpers.h""        // for copy_string
 #include ""tesseractclass.h"" // for Tesseract
 
 namespace tesseract {
@@ -81,10 +82,8 @@ char *TessBaseAPI::GetLSTMBoxText(int page_number = 0) {
     AddBoxToLSTM(right, bottom, top, image_height_, page_number, lstm_box_str);
     lstm_box_str += ""\n""; // end of PAGE
   }
-  char *ret = new char[lstm_box_str.length() + 1];
-  strcpy(ret, lstm_box_str.c_str());
   delete res_it;
-  return ret;
+  return copy_string(lstm_box_str);
 }
 
 /**********************************************************************
","{'added': [(21, '#include ""helpers.h""        // for copy_string'), (86, '  return copy_string(lstm_box_str);')], 'deleted': [(84, '  char *ret = new char[lstm_box_str.length() + 1];'), (85, '  strcpy(ret, lstm_box_str.c_str());'), (87, '  return ret;')]}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -14,6 +14,7 @@
 // limitations under the License.
 
 #include ""errcode.h"" // for ASSERT_HOST
+#include ""helpers.h"" // for copy_string
 #ifdef _WIN32
 #  include ""host.h"" // windows.h for MultiByteToWideChar, ...
 #endif
@@ -1143,15 +1144,8 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
   const std::string &text = reading_order_str.str();
   reading_order_str.str("""");
 
-  // Allocate memory for result to hold text.length() characters plus a null
-  // terminator Safely copy the string into result, ensuring no overflow strncpy
-  // does not necessarily null-terminate the destination, so do it manually
-  char *result = new char[text.length() + 1];
-  strncpy(result, text.c_str(), text.length());
-  result[text.length()] = '\0';
-
   delete res_it;
-  return result;
+  return copy_string(text);
 }
 
 } // namespace tesseract
","{'added': [(17, '#include ""helpers.h"" // for copy_string'), (1148, '  return copy_string(text);')], 'deleted': [(1146, '  // Allocate memory for result to hold text.length() characters plus a null'), (1147, '  // terminator Safely copy the string into result, ensuring no overflow strncpy'), (1148, '  // does not necessarily null-terminate the destination, so do it manually'), (1149, '  char *result = new char[text.length() + 1];'), (1150, '  strncpy(result, text.c_str(), text.length());'), (1151, ""  result[text.length()] = '\\0';""), (1152, ''), (1154, '  return result;')]}",yes
src\api\pdfrenderer.cpp,src\api\pdfrenderer.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -22,7 +22,7 @@
 
 #include ""pdf_ttf.h""
 #include ""tprintf.h""
-#include ""helpers.h"" // for Swap
+#include ""helpers.h"" // for Swap, copy_string
 
 #include <allheaders.h>
 #include <tesseract/baseapi.h>
@@ -497,10 +497,7 @@ char *TessPDFRenderer::GetPDFTextObjects(TessBaseAPI *api, double width, double
       pdf_str << ""ET\n""; // end the text object
     }
   }
-  const std::string &text = pdf_str.str();
-  char *result = new char[text.length() + 1];
-  strcpy(result, text.c_str());
-  return result;
+  return copy_string(pdf_str.str());
 }
 
 bool TessPDFRenderer::BeginDocumentHandler() {
","{'added': [(25, '#include ""helpers.h"" // for Swap, copy_string'), (500, '  return copy_string(pdf_str.str());')], 'deleted': [(25, '#include ""helpers.h"" // for Swap'), (500, '  const std::string &text = pdf_str.str();'), (501, '  char *result = new char[text.length() + 1];'), (502, '  strcpy(result, text.c_str());'), (503, '  return result;')]}",yes
src\api\wordstrboxrenderer.cpp,src\api\wordstrboxrenderer.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -18,6 +18,7 @@
 
 #include <tesseract/baseapi.h> // for TessBaseAPI
 #include <tesseract/renderer.h>
+#include ""helpers.h""        // for copy_string
 #include ""tesseractclass.h"" // for Tesseract
 
 namespace tesseract {
@@ -80,10 +81,8 @@ char *TessBaseAPI::GetWordStrBoxText(int page_number = 0) {
     wordstr_box_str += "" "" + std::to_string(page_number); // row for tab for EOL
     wordstr_box_str += ""\n"";
   }
-  char *ret = new char[wordstr_box_str.length() + 1];
-  strcpy(ret, wordstr_box_str.c_str());
   delete res_it;
-  return ret;
+  return copy_string(wordstr_box_str);
 }
 
 /**********************************************************************
","{'added': [(21, '#include ""helpers.h""        // for copy_string'), (85, '  return copy_string(wordstr_box_str);')], 'deleted': [(83, '  char *ret = new char[wordstr_box_str.length() + 1];'), (84, '  strcpy(ret, wordstr_box_str.c_str());'), (86, '  return ret;')]}",yes
src\ccmain\ltrresultiterator.cpp,src\ccmain\ltrresultiterator.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -19,6 +19,7 @@
 
 #include <tesseract/ltrresultiterator.h>
 
+#include ""helpers.h""  // for copy_string
 #include ""pageres.h""
 #include ""tesseractclass.h""
 
@@ -76,10 +77,7 @@ char *LTRResultIterator::GetUTF8Text(PageIteratorLevel level) const {
       }
     } while (level == RIL_BLOCK && res_it.block() == res_it.prev_block());
   }
-  int length = text.length() + 1;
-  char *result = new char[length];
-  strncpy(result, text.c_str(), length);
-  return result;
+  return copy_string(text);
 }
 
 // Set the string inserted at the end of each text line. ""\n"" by default.
@@ -310,11 +308,7 @@ char *LTRResultIterator::WordTruthUTF8Text() const {
   if (!HasTruthString()) {
     return nullptr;
   }
-  std::string truth_text = it_->word()->blamer_bundle->TruthString();
-  int length = truth_text.length() + 1;
-  char *result = new char[length];
-  strncpy(result, truth_text.c_str(), length);
-  return result;
+  return copy_string(it_->word()->blamer_bundle->TruthString());
 }
 
 // Returns the null terminated UTF-8 encoded normalized OCR string for the
@@ -330,10 +324,7 @@ char *LTRResultIterator::WordNormedUTF8Text() const {
   for (unsigned i = 0; i < best_choice->length(); ++i) {
     ocr_text += unicharset->get_normed_unichar(best_choice->unichar_id(i));
   }
-  auto length = ocr_text.length() + 1;
-  char *result = new char[length];
-  strncpy(result, ocr_text.c_str(), length);
-  return result;
+  return copy_string(ocr_text);
 }
 
 // Returns a pointer to serialized choice lattice.
","{'added': [(22, '#include ""helpers.h""  // for copy_string'), (80, '  return copy_string(text);'), (311, '  return copy_string(it_->word()->blamer_bundle->TruthString());'), (327, '  return copy_string(ocr_text);')], 'deleted': [(79, '  int length = text.length() + 1;'), (80, '  char *result = new char[length];'), (81, '  strncpy(result, text.c_str(), length);'), (82, '  return result;'), (313, '  std::string truth_text = it_->word()->blamer_bundle->TruthString();'), (314, '  int length = truth_text.length() + 1;'), (315, '  char *result = new char[length];'), (316, '  strncpy(result, truth_text.c_str(), length);'), (317, '  return result;'), (333, '  auto length = ocr_text.length() + 1;'), (334, '  char *result = new char[length];'), (335, '  strncpy(result, ocr_text.c_str(), length);'), (336, '  return result;')]}",yes
src\ccmain\resultiterator.cpp,src\ccmain\resultiterator.cpp,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -20,6 +20,7 @@
 
 #include <tesseract/resultiterator.h>
 
+#include ""helpers.h""  // for copy_string
 #include ""pageres.h""
 #include ""tesseractclass.h""
 #include ""unicharset.h""
@@ -681,10 +682,7 @@ char *ResultIterator::GetUTF8Text(PageIteratorLevel level) const {
       }
     } break;
   }
-  int length = text.length() + 1;
-  char *result = new char[length];
-  strncpy(result, text.c_str(), length);
-  return result;
+  return copy_string(text);
 }
 std::vector<std::vector<std::vector<std::pair<const char *, float>>>>
     *ResultIterator::GetRawLSTMTimesteps() const {
","{'added': [(23, '#include ""helpers.h""  // for copy_string'), (685, '  return copy_string(text);')], 'deleted': [(684, '  int length = text.length() + 1;'), (685, '  char *result = new char[length];'), (686, '  strncpy(result, text.c_str(), length);'), (687, '  return result;')]}",yes
src\ccutil\helpers.h,src\ccutil\helpers.h,c5b0c2f421ff92e697f4a6f66878a450fd8ee7fe,ea82f919a60a2b1c851e1f5d90bce9aa799ff2c8,"Replace strcpy and strncpy by new inline helper function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -35,6 +35,17 @@
 
 namespace tesseract {
 
+// Copy a std::string to a newly allocated char *.
+// TODO: Remove this function once the related code has been converted
+// to use std::string.
+inline char *copy_string(const std::string &from) {
+  auto length = from.length();
+  char *target_string = new char[length + 1];
+  from.copy(target_string, length);
+  target_string[length] = '\0';
+  return target_string;
+}
+
 template <class T>
 inline bool contains(const std::vector<T> &data, const T &value) {
   return std::find(data.begin(), data.end(), value) != data.end();
","{'added': [(38, '// Copy a std::string to a newly allocated char *.'), (39, '// TODO: Remove this function once the related code has been converted'), (40, '// to use std::string.'), (41, 'inline char *copy_string(const std::string &from) {'), (42, '  auto length = from.length();'), (43, '  char *target_string = new char[length + 1];'), (44, '  from.copy(target_string, length);'), (45, ""  target_string[length] = '\\0';""), (46, '  return target_string;'), (47, '}'), (48, '')], 'deleted': []}",yes
src\training\unicharset\fileio.cpp,src\training\unicharset\fileio.cpp,6e73a80e1098c3f3bf3e673411ecbe90350358aa,5712e16957a46cc5569efa355444da5ec84cf04c,"Avoid redundant conversion from std::string to char * to std::string

This fixes two issues reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -71,7 +71,7 @@ bool File::Readable(const std::string &filename) {
 }
 
 bool File::ReadFileToString(const std::string &filename, std::string *out) {
-  FILE *stream = File::Open(filename.c_str(), ""rb"");
+  FILE *stream = File::Open(filename, ""rb"");
   if (stream == nullptr) {
     return false;
   }
","{'added': [(74, '  FILE *stream = File::Open(filename, ""rb"");')], 'deleted': [(74, '  FILE *stream = File::Open(filename.c_str(), ""rb"");')]}",yes
src\training\unicharset\lang_model_helpers.cpp,src\training\unicharset\lang_model_helpers.cpp,6e73a80e1098c3f3bf3e673411ecbe90350358aa,5712e16957a46cc5569efa355444da5ec84cf04c,"Avoid redundant conversion from std::string to char * to std::string

This fixes two issues reported by Codacy.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -129,7 +129,7 @@ bool WriteRecoder(const UNICHARSET &unicharset, bool pass_through, const std::st
   std::string suffix;
   suffix += "".charset_size="" + std::to_string(recoder.code_range());
   suffix += "".txt"";
-  return WriteFile(output_dir, lang, suffix.c_str(), recoder_data, writer);
+  return WriteFile(output_dir, lang, suffix, recoder_data, writer);
 }
 
 // Helper builds a dawg from the given words, using the unicharset as coding,
","{'added': [(132, '  return WriteFile(output_dir, lang, suffix, recoder_data, writer);')], 'deleted': [(132, '  return WriteFile(output_dir, lang, suffix.c_str(), recoder_data, writer);')]}",yes
src\lstm\recodebeam.cpp,src\lstm\recodebeam.cpp,5712e16957a46cc5569efa355444da5ec84cf04c,cf7231f37080bdb0882fbf11a47b76bbd927d684,"Add nullptr check in for statement of function RecodeBeamSearch::ContinueContext

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -898,12 +898,13 @@ void RecodeBeamSearch::ContinueContext(
   int length = LengthFromBeamsIndex(index);
   bool use_dawgs = IsDawgFromBeamsIndex(index);
   NodeContinuation prev_cont = ContinuationFromBeamsIndex(index);
-  for (int p = length - 1; p >= 0; --p, previous = previous->prev) {
+  for (int p = length - 1; p >= 0 && previous != nullptr; --p) {
     while (previous->duplicate || previous->code == null_char_) {
       previous = previous->prev;
     }
     prefix.Set(p, previous->code);
     full_code.Set(p, previous->code);
+    previous = previous->prev;
   }
   if (prev != nullptr && !is_simple_text_) {
     if (top_n_flags_[prev->code] == top_n_flag) {
","{'added': [(901, '  for (int p = length - 1; p >= 0 && previous != nullptr; --p) {'), (907, '    previous = previous->prev;')], 'deleted': [(901, '  for (int p = length - 1; p >= 0; --p, previous = previous->prev) {')]}",yes
src\lstm\recodebeam.cpp,src\lstm\recodebeam.cpp,cf7231f37080bdb0882fbf11a47b76bbd927d684,5d5a633a5d7abfb155a605be90f8033f82e9744f,Fixes #4247: remove unnecessary nullptr checks,"@@ -899,14 +899,11 @@ void RecodeBeamSearch::ContinueContext(
   bool use_dawgs = IsDawgFromBeamsIndex(index);
   NodeContinuation prev_cont = ContinuationFromBeamsIndex(index);
   for (int p = length - 1; p >= 0; --p, previous = previous->prev) {
-    while (previous != nullptr &&
-           (previous->duplicate || previous->code == null_char_)) {
+    while (previous->duplicate || previous->code == null_char_) {
       previous = previous->prev;
     }
-    if (previous != nullptr) {
-      prefix.Set(p, previous->code);
-      full_code.Set(p, previous->code);
-    }
+    prefix.Set(p, previous->code);
+    full_code.Set(p, previous->code);
   }
   if (prev != nullptr && !is_simple_text_) {
     if (top_n_flags_[prev->code] == top_n_flag) {
","{'added': [(902, '    while (previous->duplicate || previous->code == null_char_) {'), (905, '    prefix.Set(p, previous->code);'), (906, '    full_code.Set(p, previous->code);')], 'deleted': [(902, '    while (previous != nullptr &&'), (903, '           (previous->duplicate || previous->code == null_char_)) {'), (906, '    if (previous != nullptr) {'), (907, '      prefix.Set(p, previous->code);'), (908, '      full_code.Set(p, previous->code);'), (909, '    }')]}",yes
src\training\pango\pango_font_info.cpp,src\training\pango\pango_font_info.cpp,5d5a633a5d7abfb155a605be90f8033f82e9744f,bdc64229ca8ddc74f8c0b6057006f6cf63122c9e,"Fix compiler warnings [-Wdeprecated-declarations]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -230,12 +230,20 @@ bool PangoFontInfo::CoversUTF8Text(const char *utf8_text, int byte_length) const
       int len = it.get_utf8(tmp);
       tmp[len] = '\0';
       tlog(2, ""'%s' (U+%x) not covered by font\n"", tmp, *it);
+#if PANGO_VERSION_CHECK(1, 52, 0)
+      g_object_unref(coverage);
+#else
       pango_coverage_unref(coverage);
+#endif
       g_object_unref(font);
       return false;
     }
   }
+#if PANGO_VERSION_CHECK(1, 52, 0)
+  g_object_unref(coverage);
+#else
   pango_coverage_unref(coverage);
+#endif
   g_object_unref(font);
   return true;
 }
@@ -303,7 +311,11 @@ int PangoFontInfo::DropUncoveredChars(std::string *utf8_text) const {
     my_strnmove(out, utf8_char, utf8_len);
     out += utf8_len;
   }
+#if PANGO_VERSION_CHECK(1, 52, 0)
+  g_object_unref(coverage);
+#else
   pango_coverage_unref(coverage);
+#endif
   g_object_unref(font);
   utf8_text->resize(out - utf8_text->c_str());
   return num_dropped_chars;
@@ -603,7 +615,11 @@ int FontUtils::FontScore(const std::unordered_map<char32, int64_t> &ch_map,
       ch_flags->push_back(covered);
     }
   }
+#if PANGO_VERSION_CHECK(1, 52, 0)
+  g_object_unref(coverage);
+#else
   pango_coverage_unref(coverage);
+#endif
   g_object_unref(font);
   return ok_chars;
 }
","{'added': [(233, '#if PANGO_VERSION_CHECK(1, 52, 0)'), (234, '      g_object_unref(coverage);'), (235, '#else'), (237, '#endif'), (242, '#if PANGO_VERSION_CHECK(1, 52, 0)'), (243, '  g_object_unref(coverage);'), (244, '#else'), (246, '#endif'), (314, '#if PANGO_VERSION_CHECK(1, 52, 0)'), (315, '  g_object_unref(coverage);'), (316, '#else'), (318, '#endif'), (618, '#if PANGO_VERSION_CHECK(1, 52, 0)'), (619, '  g_object_unref(coverage);'), (620, '#else'), (622, '#endif')], 'deleted': []}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,bdc64229ca8ddc74f8c0b6057006f6cf63122c9e,f1a45db977986e1d81a6f5f49649da9829b6816a,"Fix compiler warnings [-Wmaybe-uninitialized]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -744,7 +744,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
   std::stringstream word_str;
   std::stringstream page_str;
 
-  float x1, y1, x2, y2, word_conf, line_conf, block_conf;
+  float x1, y1, x2, y2;
 
   tesseract::Orientation orientation_block = ORIENTATION_PAGE_UP;
   tesseract::WritingDirection writing_direction_block =
@@ -824,6 +824,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
         break;
     }
 
+    float block_conf = 0;
     if (res_it->IsAtBeginningOf(RIL_BLOCK)) {
       // Add Block to reading order
       reading_order_str << ""\t\t\t\t<RegionRefIndexed "" << ""index=\"""" << rcnt
@@ -870,6 +871,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
     bool skewed_flag = (orientation_block != ORIENTATION_PAGE_UP &&
                         orientation_block != ORIENTATION_PAGE_DOWN);
 
+    float line_conf = 0;
     if (res_it->IsAtBeginningOf(RIL_TEXTLINE)) {
       // writing_direction_before = writing_direction;
       line_conf = ((res_it->Confidence(RIL_TEXTLINE)) / 100.);
@@ -900,7 +902,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
     bool last_word_in_line = res_it->IsAtFinalElement(RIL_TEXTLINE, RIL_WORD);
     bool last_word_in_cblock = res_it->IsAtFinalElement(RIL_BLOCK, RIL_WORD);
 
-    word_conf = ((res_it->Confidence(RIL_WORD)) / 100.);
+    float word_conf = ((res_it->Confidence(RIL_WORD)) / 100.);
 
     // Create word stream if word level output is active
     if (LEVELFLAG > 0) {
","{'added': [(747, '  float x1, y1, x2, y2;'), (827, '    float block_conf = 0;'), (874, '    float line_conf = 0;'), (905, '    float word_conf = ((res_it->Confidence(RIL_WORD)) / 100.);')], 'deleted': [(747, '  float x1, y1, x2, y2, word_conf, line_conf, block_conf;'), (903, '    word_conf = ((res_it->Confidence(RIL_WORD)) / 100.);')]}",yes
src\api\altorenderer.cpp,src\api\altorenderer.cpp,f1a45db977986e1d81a6f5f49649da9829b6816a,03666135260cec813de04c7e44033be2403ac765,"Remove unused xmlns:xlink from ALTO renderer

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -70,7 +70,6 @@ bool TessAltoRenderer::AddImageHandler(TessBaseAPI *api) {
     AppendString(
       ""<?xml version=\""1.0\"" encoding=\""UTF-8\""?>\n""
       ""<alto xmlns=\""http://www.loc.gov/standards/alto/ns-v3#\"" ""
-      ""xmlns:xlink=\""http://www.w3.org/1999/xlink\"" ""
       ""xmlns:xsi=\""http://www.w3.org/2001/XMLSchema-instance\"" ""
       ""xsi:schemaLocation=\""http://www.loc.gov/standards/alto/ns-v3# ""
       ""http://www.loc.gov/alto/v3/alto-3-0.xsd\"">\n""
","{'added': [], 'deleted': [(73, '      ""xmlns:xlink=\\""http://www.w3.org/1999/xlink\\"" ""')]}",yes
src\classify\normmatch.cpp,src\classify\normmatch.cpp,03666135260cec813de04c7e44033be2403ac765,d0b3d0915ebc1b13f6ef9ba92036bb3ed198844e,"Avoid some float / double conversions in class Classify

This also fixes several compiler warnings ([-Wimplicit-float-conversion],
[-Wdouble-promotion]).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -52,17 +52,17 @@ struct NORM_PROTOS {
  * normalization adjustment.  The equation that represents the transform is:
  *       1 / (1 + (NormAdj / midpoint) ^ curl)
  */
-static double NormEvidenceOf(double NormAdj) {
-  NormAdj /= classify_norm_adj_midpoint;
+static float NormEvidenceOf(float NormAdj) {
+  NormAdj /= static_cast<float>(classify_norm_adj_midpoint);
 
   if (classify_norm_adj_curl == 3) {
     NormAdj = NormAdj * NormAdj * NormAdj;
   } else if (classify_norm_adj_curl == 2) {
     NormAdj = NormAdj * NormAdj;
   } else {
-    NormAdj = pow(NormAdj, classify_norm_adj_curl);
+    NormAdj = std::pow(NormAdj, static_cast<float>(classify_norm_adj_curl));
   }
-  return (1.0 / (1.0 + NormAdj));
+  return (1 / (1 + NormAdj));
 }
 
 /*----------------------------------------------------------------------------
@@ -73,7 +73,7 @@ static double NormEvidenceOf(double NormAdj) {
 double_VAR(classify_norm_adj_midpoint, 32.0, ""Norm adjust midpoint ..."");
 double_VAR(classify_norm_adj_curl, 2.0, ""Norm adjust curl ..."");
 /** Weight of width variance against height and vertical position. */
-const double kWidthErrorWeighting = 0.125;
+const float kWidthErrorWeighting = 0.125f;
 
 /*----------------------------------------------------------------------------
               Public Code
@@ -102,7 +102,7 @@ float Classify::ComputeNormMatch(CLASS_ID ClassId, const FEATURE_STRUCT &feature
     float Match = (feature.Params[CharNormLength] * feature.Params[CharNormLength] * 500.0f +
                    feature.Params[CharNormRx] * feature.Params[CharNormRx] * 8000.0f +
                    feature.Params[CharNormRy] * feature.Params[CharNormRy] * 8000.0f);
-    return (1.0f - NormEvidenceOf(Match));
+    return (1 - NormEvidenceOf(Match));
   }
 
   float BestMatch = FLT_MAX;
@@ -145,7 +145,7 @@ float Classify::ComputeNormMatch(CLASS_ID ClassId, const FEATURE_STRUCT &feature
       BestMatch = Match;
     }
   }
-  return 1.0 - NormEvidenceOf(BestMatch);
+  return 1 - NormEvidenceOf(BestMatch);
 } /* ComputeNormMatch */
 
 void Classify::FreeNormProtos() {
","{'added': [(55, 'static float NormEvidenceOf(float NormAdj) {'), (56, '  NormAdj /= static_cast<float>(classify_norm_adj_midpoint);'), (63, '    NormAdj = std::pow(NormAdj, static_cast<float>(classify_norm_adj_curl));'), (65, '  return (1 / (1 + NormAdj));'), (76, 'const float kWidthErrorWeighting = 0.125f;'), (105, '    return (1 - NormEvidenceOf(Match));'), (148, '  return 1 - NormEvidenceOf(BestMatch);')], 'deleted': [(55, 'static double NormEvidenceOf(double NormAdj) {'), (56, '  NormAdj /= classify_norm_adj_midpoint;'), (63, '    NormAdj = pow(NormAdj, classify_norm_adj_curl);'), (65, '  return (1.0 / (1.0 + NormAdj));'), (76, 'const double kWidthErrorWeighting = 0.125;'), (105, '    return (1.0f - NormEvidenceOf(Match));'), (148, '  return 1.0 - NormEvidenceOf(BestMatch);')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,d0b3d0915ebc1b13f6ef9ba92036bb3ed198844e,1644205d9edb3512e4130a748fcdf60442aa6537,"Fix compiler warnings [-Wunused-but-set-variable]

- Use conditional compilation for variables which might be useful for debugging.
- Remove all other unused variables.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1402,7 +1402,9 @@ char *TessBaseAPI::GetTSVText(int page_number) {
     return nullptr;
   }
 
+#if !defined(NDEBUG)
   int lcnt = 1, bcnt = 1, pcnt = 1, wcnt = 1;
+#endif
   int page_id = page_number + 1; // we use 1-based page numbers.
 
   int page_num = page_id;
@@ -1484,6 +1486,7 @@ char *TessBaseAPI::GetTSVText(int page_number) {
     tsv_str += ""\t"" + std::to_string(res_it->Confidence(RIL_WORD));
     tsv_str += ""\t"";
 
+#if !defined(NDEBUG)
     // Increment counts if at end of block/paragraph/textline.
     if (res_it->IsAtFinalElement(RIL_TEXTLINE, RIL_WORD)) {
       lcnt++;
@@ -1494,13 +1497,16 @@ char *TessBaseAPI::GetTSVText(int page_number) {
     if (res_it->IsAtFinalElement(RIL_BLOCK, RIL_WORD)) {
       bcnt++;
     }
+#endif
 
     do {
       tsv_str += std::unique_ptr<const char[]>(res_it->GetUTF8Text(RIL_SYMBOL)).get();
       res_it->Next(RIL_SYMBOL);
     } while (!res_it->Empty(RIL_BLOCK) && !res_it->IsAtBeginningOf(RIL_WORD));
     tsv_str += ""\n""; // end of row
+#if !defined(NDEBUG)
     wcnt++;
+#endif
   }
 
   char *ret = new char[tsv_str.length() + 1];
","{'added': [(1405, '#if !defined(NDEBUG)'), (1407, '#endif'), (1489, '#if !defined(NDEBUG)'), (1500, '#endif'), (1507, '#if !defined(NDEBUG)'), (1509, '#endif')], 'deleted': []}",yes
src\ccmain\osdetect.cpp,src\ccmain\osdetect.cpp,d0b3d0915ebc1b13f6ef9ba92036bb3ed198844e,1644205d9edb3512e4130a748fcdf60442aa6537,"Fix compiler warnings [-Wunused-but-set-variable]

- Use conditional compilation for variables which might be useful for debugging.
- Remove all other unused variables.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -223,7 +223,9 @@ int orientation_and_script_detection(const char *filename, OSResults *osr,
 // Returns a non-zero number of blobs if the page was successfully processed, or
 // zero if the page had too few characters to be reliable
 int os_detect(TO_BLOCK_LIST *port_blocks, OSResults *osr, tesseract::Tesseract *tess) {
+#if !defined(NDEBUG)
   int blobs_total = 0;
+#endif
   TO_BLOCK_IT block_it;
   block_it.set_to_list(port_blocks);
 
@@ -241,7 +243,9 @@ int os_detect(TO_BLOCK_LIST *port_blocks, OSResults *osr, tesseract::Tesseract *
       BLOBNBOX *bbox = bbox_it.data();
       C_BLOB *blob = bbox->cblob();
       TBOX box = blob->bounding_box();
+#if !defined(NDEBUG)
       ++blobs_total;
+#endif
 
       // Catch illegal value of box width and avoid division by zero.
       if (box.width() == 0) {
","{'added': [(226, '#if !defined(NDEBUG)'), (228, '#endif'), (246, '#if !defined(NDEBUG)'), (248, '#endif')], 'deleted': []}",yes
src\classify\normmatch.cpp,src\classify\normmatch.cpp,d0b3d0915ebc1b13f6ef9ba92036bb3ed198844e,1644205d9edb3512e4130a748fcdf60442aa6537,"Fix compiler warnings [-Wunused-but-set-variable]

- Use conditional compilation for variables which might be useful for debugging.
- Remove all other unused variables.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -112,7 +112,6 @@ float Classify::ComputeNormMatch(CLASS_ID ClassId, const FEATURE_STRUCT &feature
     tprintf(""\nChar norm for class %s\n"", unicharset.id_to_unichar(ClassId));
   }
 
-  int ProtoId = 0;
   iterate(Protos) {
     auto Proto = reinterpret_cast<PROTOTYPE *>(Protos->first_node());
     float Delta = feature.Params[CharNormY] - Proto->Mean[CharNormY];
@@ -145,8 +144,6 @@ float Classify::ComputeNormMatch(CLASS_ID ClassId, const FEATURE_STRUCT &feature
     if (Match < BestMatch) {
       BestMatch = Match;
     }
-
-    ProtoId++;
   }
   return 1.0 - NormEvidenceOf(BestMatch);
 } /* ComputeNormMatch */
","{'added': [], 'deleted': [(115, '  int ProtoId = 0;'), (148, ''), (149, '    ProtoId++;')]}",yes
src\textord\topitch.cpp,src\textord\topitch.cpp,d0b3d0915ebc1b13f6ef9ba92036bb3ed198844e,1644205d9edb3512e4130a748fcdf60442aa6537,"Fix compiler warnings [-Wunused-but-set-variable]

- Use conditional compilation for variables which might be useful for debugging.
- Remove all other unused variables.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -151,7 +151,6 @@ void fix_row_pitch(TO_ROW *bad_row,        // row to fix
   int like_votes;                // votes over page
   int other_votes;               // votes of unlike blocks
   int block_index;               // number of block
-  int row_index;                 // number of row
   int maxwidth;                  // max pitch
   TO_BLOCK_IT block_it = blocks; // block iterator
   TO_BLOCK *block;               // current block
@@ -172,7 +171,6 @@ void fix_row_pitch(TO_ROW *bad_row,        // row to fix
       if (pb != nullptr && !pb->IsText()) {
         continue; // Non text doesn't exist!
       }
-      row_index = 1;
       TO_ROW_IT row_it(block->get_rows());
       for (row_it.mark_cycle_pt(); !row_it.cycled_list(); row_it.forward()) {
         row = row_it.data();
@@ -226,7 +224,6 @@ void fix_row_pitch(TO_ROW *bad_row,        // row to fix
             other_votes--;
           }
         }
-        row_index++;
       }
       block_index++;
     }
@@ -518,7 +515,6 @@ bool try_rows_fixed(     // find line stats
     bool testing_on      // correct orientation
 ) {
   TO_ROW *row;           // current row
-  int32_t row_index;     // row number.
   int32_t def_fixed = 0; // counters
   int32_t def_prop = 0;
   int32_t maybe_fixed = 0;
@@ -529,7 +525,6 @@ bool try_rows_fixed(     // find line stats
   float lower, upper; // cluster thresholds
   TO_ROW_IT row_it = block->get_rows();
 
-  row_index = 1;
   for (row_it.mark_cycle_pt(); !row_it.cycled_list(); row_it.forward()) {
     row = row_it.data();
     ASSERT_HOST(row->xheight > 0);
@@ -541,7 +536,6 @@ bool try_rows_fixed(     // find line stats
         row->kern_size = lower;
       }
     }
-    row_index++;
   }
   count_block_votes(block, def_fixed, def_prop, maybe_fixed, maybe_prop, corr_fixed, corr_prop,
                     dunno);
","{'added': [], 'deleted': [(154, '  int row_index;                 // number of row'), (175, '      row_index = 1;'), (229, '        row_index++;'), (521, '  int32_t row_index;     // row number.'), (532, '  row_index = 1;'), (544, '    row_index++;')]}",yes
src\training\cntraining.cpp,src\training\cntraining.cpp,d0b3d0915ebc1b13f6ef9ba92036bb3ed198844e,1644205d9edb3512e4130a748fcdf60442aa6537,"Fix compiler warnings [-Wunused-but-set-variable]

- Use conditional compilation for variables which might be useful for debugging.
- Remove all other unused variables.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -116,7 +116,9 @@ int main(int argc, char *argv[]) {
   InitFeatureDefs(&FeatureDefs);
 
   ParseArguments(&argc, &argv);
+#if !defined(NDEBUG)
   int num_fonts = 0;
+#endif
   for (const char *PageName = *++argv; PageName != nullptr; PageName = *++argv) {
     printf(""Reading %s ...\n"", PageName);
     FILE *TrainingPage = fopen(PageName, ""rb"");
@@ -124,7 +126,9 @@ int main(int argc, char *argv[]) {
     if (TrainingPage) {
       ReadTrainingSamples(FeatureDefs, PROGRAM_FEATURE_TYPE, 100, nullptr, TrainingPage, &CharList);
       fclose(TrainingPage);
+#if !defined(NDEBUG)
       ++num_fonts;
+#endif
     }
   }
   printf(""Clustering ...\n"");
","{'added': [(119, '#if !defined(NDEBUG)'), (121, '#endif'), (129, '#if !defined(NDEBUG)'), (131, '#endif')], 'deleted': []}",yes
src\training\common\errorcounter.cpp,src\training\common\errorcounter.cpp,d0b3d0915ebc1b13f6ef9ba92036bb3ed198844e,1644205d9edb3512e4130a748fcdf60442aa6537,"Fix compiler warnings [-Wunused-but-set-variable]

- Use conditional compilation for variables which might be useful for debugging.
- Remove all other unused variables.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -114,7 +114,9 @@ void ErrorCounter::DebugNewErrors(ShapeClassifier *new_classifier, ShapeClassifi
   ErrorCounter new_counter(new_classifier->GetUnicharset(), fontsize);
   std::vector<UnicharRating> results;
 
+#if !defined(NDEBUG)
   int total_samples = 0;
+#endif
   int error_samples = 25;
   int total_new_errors = 0;
   // Iterate over all the samples, accumulating errors.
@@ -145,7 +147,9 @@ void ErrorCounter::DebugNewErrors(ShapeClassifier *new_classifier, ShapeClassifi
         }
       }
     }
+#if !defined(NDEBUG)
     ++total_samples;
+#endif
   }
   tprintf(""Total new errors = %d\n"", total_new_errors);
 }
","{'added': [(117, '#if !defined(NDEBUG)'), (119, '#endif'), (150, '#if !defined(NDEBUG)'), (152, '#endif')], 'deleted': []}",yes
src\training\common\sampleiterator.cpp,src\training\common\sampleiterator.cpp,d0b3d0915ebc1b13f6ef9ba92036bb3ed198844e,1644205d9edb3512e4130a748fcdf60442aa6537,"Fix compiler warnings [-Wunused-but-set-variable]

- Use conditional compilation for variables which might be useful for debugging.
- Remove all other unused variables.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -240,11 +240,9 @@ int SampleIterator::UniformSamples() {
 // to 1. Returns the minimum assigned sample weight.
 double SampleIterator::NormalizeSamples() {
   double total_weight = 0.0;
-  int sample_count = 0;
   for (Begin(); !AtEnd(); Next()) {
     const TrainingSample &sample = GetSample();
     total_weight += sample.weight();
-    ++sample_count;
   }
   // Normalize samples.
   double min_assigned_sample_weight = 1.0;
","{'added': [], 'deleted': [(243, '  int sample_count = 0;'), (247, '    ++sample_count;')]}",yes
src\ccstruct\points.h,src\ccstruct\points.h,1644205d9edb3512e4130a748fcdf60442aa6537,24dd72603b2a3635e75a51830bf5f5830dbd34ad,"Fix compiler warnings [-Wold-style-cast]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -77,7 +77,7 @@ public:
 
   /// find sq length
   float sqlength() const {
-    return (float)(xcoord * xcoord + ycoord * ycoord);
+    return static_cast<float>(xcoord * xcoord + ycoord * ycoord);
   }
 
   /// find length
@@ -101,7 +101,7 @@ public:
 
   /// find angle
   float angle() const {
-    return (float)std::atan2(ycoord, xcoord);
+    return std::atan2(static_cast<float>(ycoord), static_cast<float>(xcoord));
   }
 
   /// test equality
","{'added': [(80, '    return static_cast<float>(xcoord * xcoord + ycoord * ycoord);'), (104, '    return std::atan2(static_cast<float>(ycoord), static_cast<float>(xcoord));')], 'deleted': [(80, '    return (float)(xcoord * xcoord + ycoord * ycoord);'), (104, '    return (float)std::atan2(ycoord, xcoord);')]}",yes
src\dict\dawg.h,src\dict\dawg.h,1644205d9edb3512e4130a748fcdf60442aa6537,24dd72603b2a3635e75a51830bf5f5830dbd34ad,"Fix compiler warnings [-Wold-style-cast]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -34,10 +34,10 @@
 
 #ifndef __GNUC__
 #  ifdef _WIN32
-#    define NO_EDGE (int64_t)0xffffffffffffffffi64
+#    define NO_EDGE static_cast<int64_t>(0xffffffffffffffffi64)
 #  endif /*_WIN32*/
 #else
-#  define NO_EDGE (int64_t)0xffffffffffffffffll
+#  define NO_EDGE static_cast<int64_t>(0xffffffffffffffffll)
 #endif /*__GNUC__*/
 
 namespace tesseract {
@@ -74,12 +74,12 @@ enum DawgType {
               C o n s t a n t s
 ----------------------------------------------------------------------*/
 
-#define FORWARD_EDGE (int32_t)0
-#define BACKWARD_EDGE (int32_t)1
-#define MAX_NODE_EDGES_DISPLAY (int64_t)100
-#define MARKER_FLAG (int64_t)1
-#define DIRECTION_FLAG (int64_t)2
-#define WERD_END_FLAG (int64_t)4
+#define FORWARD_EDGE static_cast<int32_t>(0)
+#define BACKWARD_EDGE static_cast<int32_t>(1)
+#define MAX_NODE_EDGES_DISPLAY static_cast<int64_t>(100)
+#define MARKER_FLAG static_cast<int64_t>(1)
+#define DIRECTION_FLAG static_cast<int64_t>(2)
+#define WERD_END_FLAG static_cast<int64_t>(4)
 #define LETTER_START_BIT 0
 #define NUM_FLAG_BITS 3
 #define REFFORMAT ""%"" PRId64
","{'added': [(37, '#    define NO_EDGE static_cast<int64_t>(0xffffffffffffffffi64)'), (40, '#  define NO_EDGE static_cast<int64_t>(0xffffffffffffffffll)'), (77, '#define FORWARD_EDGE static_cast<int32_t>(0)'), (78, '#define BACKWARD_EDGE static_cast<int32_t>(1)'), (79, '#define MAX_NODE_EDGES_DISPLAY static_cast<int64_t>(100)'), (80, '#define MARKER_FLAG static_cast<int64_t>(1)'), (81, '#define DIRECTION_FLAG static_cast<int64_t>(2)'), (82, '#define WERD_END_FLAG static_cast<int64_t>(4)')], 'deleted': [(37, '#    define NO_EDGE (int64_t)0xffffffffffffffffi64'), (40, '#  define NO_EDGE (int64_t)0xffffffffffffffffll'), (77, '#define FORWARD_EDGE (int32_t)0'), (78, '#define BACKWARD_EDGE (int32_t)1'), (79, '#define MAX_NODE_EDGES_DISPLAY (int64_t)100'), (80, '#define MARKER_FLAG (int64_t)1'), (81, '#define DIRECTION_FLAG (int64_t)2'), (82, '#define WERD_END_FLAG (int64_t)4')]}",yes
src\training\common\networkbuilder.cpp,src\training\common\networkbuilder.cpp,24dd72603b2a3635e75a51830bf5f5830dbd34ad,36d44a1497264cbe314fbb1dabcc7d63333a9eb0,"Fix compiler warnings [-Wunreachable-code-return]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -114,7 +114,6 @@ Network *NetworkBuilder::BuildFromString(const StaticShape &input_shape, const c
       return ParseOutput(input_shape, str);
     default:
       tprintf(""Invalid network spec:%s\n"", *str);
-      return nullptr;
   }
   return nullptr;
 }
","{'added': [], 'deleted': [(117, '      return nullptr;')]}",yes
src\wordrec\chopper.cpp,src\wordrec\chopper.cpp,24dd72603b2a3635e75a51830bf5f5830dbd34ad,36d44a1497264cbe314fbb1dabcc7d63333a9eb0,"Fix compiler warnings [-Wunreachable-code-return]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -344,7 +344,7 @@ SEAM *Wordrec::improve_one_blob(const std::vector<BLOB_CHOICE *> &blob_choices,
     // TODO(rays) it may eventually help to allow italic_blob to be true,
     seam = chop_numbered_blob(word->chopped_word, *blob_number, italic_blob, word->seam_array);
     if (seam != nullptr) {
-      return seam; // Success!
+      break; // Success!
     }
     if (blob_choices[*blob_number] == nullptr) {
       return nullptr;
","{'added': [(347, '      break; // Success!')], 'deleted': [(347, '      return seam; // Success!')]}",yes
unittest\applybox_test.cc,unittest\applybox_test.cc,24dd72603b2a3635e75a51830bf5f5830dbd34ad,36d44a1497264cbe314fbb1dabcc7d63333a9eb0,"Fix compiler warnings [-Wunreachable-code-return]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -64,7 +64,6 @@ protected:
     if (!SetImage(imagefile)) {
       // eng.traineddata not found or other problem during Init.
       GTEST_SKIP();
-      return;
     }
     if (line_mode) {
       api_.SetVariable(""tessedit_resegment_from_line_boxes"", ""1"");
","{'added': [], 'deleted': [(67, '      return;')]}",yes
unittest\baseapi_test.cc,unittest\baseapi_test.cc,24dd72603b2a3635e75a51830bf5f5830dbd34ad,36d44a1497264cbe314fbb1dabcc7d63333a9eb0,"Fix compiler warnings [-Wunreachable-code-return]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -124,7 +124,6 @@ TEST_F(TesseractTest, HOCRWorksWithoutSetInputName) {
   if (api.Init(TessdataPath().c_str(), ""eng"", tesseract::OEM_TESSERACT_ONLY) == -1) {
     // eng.traineddata not found.
     GTEST_SKIP();
-    return;
   }
   Image src_pix = pixRead(TestDataNameToPath(""HelloGoogle.tif"").c_str());
   CHECK(src_pix);
@@ -143,7 +142,6 @@ TEST_F(TesseractTest, HOCRContainsBaseline) {
   if (api.Init(TessdataPath().c_str(), ""eng"", tesseract::OEM_TESSERACT_ONLY) == -1) {
     // eng.traineddata not found.
     GTEST_SKIP();
-    return;
   }
   Image src_pix = pixRead(TestDataNameToPath(""HelloGoogle.tif"").c_str());
   CHECK(src_pix);
@@ -179,7 +177,6 @@ TEST_F(TesseractTest, AdaptToWordStrTest) {
   if (api.Init(TessdataPath().c_str(), ""eng"", tesseract::OEM_TESSERACT_ONLY) == -1) {
     // eng.traineddata not found.
     GTEST_SKIP();
-    return;
   }
   api.SetVariable(""matcher_sufficient_examples_for_prototyping"", ""1"");
   api.SetVariable(""classify_class_pruner_threshold"", ""220"");
@@ -215,7 +212,6 @@ TEST_F(TesseractTest, BasicLSTMTest) {
   if (api.Init(TessdataPath().c_str(), ""eng"", tesseract::OEM_LSTM_ONLY) == -1) {
     // eng.traineddata not found.
     GTEST_SKIP();
-    return;
   }
   Image src_pix = pixRead(TestDataNameToPath(""phototest_2.tif"").c_str());
   CHECK(src_pix);
@@ -239,7 +235,6 @@ TEST_F(TesseractTest, LSTMGeometryTest) {
   if (api.Init(TessdataPath().c_str(), ""eng"", tesseract::OEM_LSTM_ONLY) == -1) {
     // eng.traineddata not found.
     GTEST_SKIP();
-    return;
   }
   api.SetImage(src_pix);
   ASSERT_EQ(api.Recognize(nullptr), 0);
","{'added': [], 'deleted': [(127, '    return;'), (146, '    return;'), (182, '    return;'), (218, '    return;'), (242, '    return;')]}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,36d44a1497264cbe314fbb1dabcc7d63333a9eb0,531597fbea58aedbdbfb5ba7b2dd4d12c7020be4,"Fix compiler warnings [-Wzero-as-null-pointer-constant]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -391,7 +391,7 @@ Pta *SortBaseline(Pta *baseline_pts,
   Pta *sorted_baseline_pts;
 
   sorted_baseline_pts =
-      ptaSort(baseline_pts, L_SORT_BY_X, L_SORT_INCREASING, NULL);
+      ptaSort(baseline_pts, L_SORT_BY_X, L_SORT_INCREASING, nullptr);
 
   do {
     ptaGetPt(sorted_baseline_pts, index, &x0, &y0);
@@ -557,8 +557,8 @@ Pta *FitBaselineIntoLinePolygon(Pta *bottom_pts, Pta *baseline_pts,
 
   // Calculate quartiles to find outliers
   numaGetMedian(poly_bl_delta, &delta_median);
-  numaGetRankValue(poly_bl_delta, 0.25, NULL, 0, &delta_median_Q1);
-  numaGetRankValue(poly_bl_delta, 0.75, NULL, 0, &delta_median_Q3);
+  numaGetRankValue(poly_bl_delta, 0.25, nullptr, 0, &delta_median_Q1);
+  numaGetRankValue(poly_bl_delta, 0.75, nullptr, 0, &delta_median_Q3);
 
   // Fit baseline into the polygon
   // Todo: Needs maybe some adjustments to suppress fitting to superscript
","{'added': [(394, '      ptaSort(baseline_pts, L_SORT_BY_X, L_SORT_INCREASING, nullptr);'), (560, '  numaGetRankValue(poly_bl_delta, 0.25, nullptr, 0, &delta_median_Q1);'), (561, '  numaGetRankValue(poly_bl_delta, 0.75, nullptr, 0, &delta_median_Q3);')], 'deleted': [(394, '      ptaSort(baseline_pts, L_SORT_BY_X, L_SORT_INCREASING, NULL);'), (560, '  numaGetRankValue(poly_bl_delta, 0.25, NULL, 0, &delta_median_Q1);'), (561, '  numaGetRankValue(poly_bl_delta, 0.75, NULL, 0, &delta_median_Q3);')]}",yes
Makefile.am,Makefile.am,d72567ad4554391fffd6e60f8ba9c62518d45dc4,9a30816783df8a9c297e197ac4a1881b73f5041f,"Use AM_CPPFLAGS also for compilation of all sources

It was not used for all sources before. Therefore some parts of the
code (especially the code for training) used different compiler
options. For example NDEBUG was not defined, and so the training
code was built with debug assertions (resulting in potentially
slower execution).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -654,9 +654,7 @@ libtesseract_la_SOURCES += src/viewer/svmnode.cpp
 libtesseract_la_SOURCES += src/viewer/svutil.cpp
 
 EXTRA_PROGRAMS += svpaint
-svpaint_CPPFLAGS =
-svpaint_CPPFLAGS += -I$(top_builddir)/include
-svpaint_CPPFLAGS += -I$(top_srcdir)/include
+svpaint_CPPFLAGS = $(AM_CPPFLAGS)
 svpaint_CPPFLAGS += -I$(top_srcdir)/src/ccstruct
 svpaint_CPPFLAGS += -I$(top_srcdir)/src/viewer
 svpaint_SOURCES = src/svpaint.cpp
@@ -709,7 +707,7 @@ endif
 
 bin_PROGRAMS = tesseract
 tesseract_SOURCES = src/tesseract.cpp
-tesseract_CPPFLAGS =
+tesseract_CPPFLAGS = $(AM_CPPFLAGS)
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/arch
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/ccmain
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/ccstruct
@@ -720,10 +718,6 @@ tesseract_CPPFLAGS += -I$(top_srcdir)/src/dict
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/textord
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/viewer
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/wordrec
-tesseract_CPPFLAGS += $(AM_CPPFLAGS)
-if VISIBILITY
-tesseract_CPPFLAGS += -DTESS_IMPORTS
-endif
 
 tesseract_LDFLAGS = $(OPENMP_CXXFLAGS)
 
@@ -769,12 +763,11 @@ endif
 
 CLEANFILES += $(EXTRA_PROGRAMS)
 
-training_CPPFLAGS := -DPANGO_ENABLE_ENGINE
+training_CPPFLAGS = $(AM_CPPFLAGS)
+training_CPPFLAGS += -DPANGO_ENABLE_ENGINE
 training_CPPFLAGS += -DTESS_COMMON_TRAINING_API=
 training_CPPFLAGS += -DTESS_PANGO_TRAINING_API=
 training_CPPFLAGS += -DTESS_UNICHARSET_TRAINING_API=
-training_CPPFLAGS += -I$(top_builddir)/include
-training_CPPFLAGS += -I$(top_srcdir)/include
 training_CPPFLAGS += -I$(top_srcdir)/src/training
 training_CPPFLAGS += -I$(top_srcdir)/src/training/common
 training_CPPFLAGS += -I$(top_srcdir)/src/training/pango
@@ -1105,7 +1098,7 @@ TESTDATA_DIR=$(shell cd $(top_srcdir) && pwd)/test/testdata
 # Suppress some memory leaks reported by LeakSanitizer.
 export LSAN_OPTIONS=suppressions=$(top_srcdir)/unittest/tesseract_leaksanitizer.supp
 
-unittest_CPPFLAGS =
+unittest_CPPFLAGS = $(AM_CPPFLAGS)
 unittest_CPPFLAGS += -DTESSBIN_DIR=""\""$(abs_top_builddir)\""""
 unittest_CPPFLAGS += -DLANGDATA_DIR=""\""$(LANGDATA_DIR)\""""
 unittest_CPPFLAGS += -DTESSDATA_DIR=""\""$(TESSDATA_DIR)\""""
@@ -1118,8 +1111,6 @@ endif # DISABLED_LEGACY_ENGINE
 unittest_CPPFLAGS += -DTESS_COMMON_TRAINING_API=
 unittest_CPPFLAGS += -DTESS_PANGO_TRAINING_API=
 unittest_CPPFLAGS += -DTESS_UNICHARSET_TRAINING_API=
-unittest_CPPFLAGS += -I$(top_builddir)/include
-unittest_CPPFLAGS += -I$(top_srcdir)/include
 unittest_CPPFLAGS += -I$(top_srcdir)/src/arch
 unittest_CPPFLAGS += -I$(top_srcdir)/src/ccmain
 unittest_CPPFLAGS += -I$(top_srcdir)/src/ccstruct
","{'added': [(657, 'svpaint_CPPFLAGS = $(AM_CPPFLAGS)'), (710, 'tesseract_CPPFLAGS = $(AM_CPPFLAGS)'), (766, 'training_CPPFLAGS = $(AM_CPPFLAGS)'), (767, 'training_CPPFLAGS += -DPANGO_ENABLE_ENGINE'), (1101, 'unittest_CPPFLAGS = $(AM_CPPFLAGS)')], 'deleted': [(657, 'svpaint_CPPFLAGS ='), (658, 'svpaint_CPPFLAGS += -I$(top_builddir)/include'), (659, 'svpaint_CPPFLAGS += -I$(top_srcdir)/include'), (712, 'tesseract_CPPFLAGS ='), (723, 'tesseract_CPPFLAGS += $(AM_CPPFLAGS)'), (724, 'if VISIBILITY'), (725, 'tesseract_CPPFLAGS += -DTESS_IMPORTS'), (726, 'endif'), (772, 'training_CPPFLAGS := -DPANGO_ENABLE_ENGINE'), (776, 'training_CPPFLAGS += -I$(top_builddir)/include'), (777, 'training_CPPFLAGS += -I$(top_srcdir)/include'), (1108, 'unittest_CPPFLAGS ='), (1121, 'unittest_CPPFLAGS += -I$(top_builddir)/include'), (1122, 'unittest_CPPFLAGS += -I$(top_srcdir)/include')]}",yes
ChangeLog,ChangeLog,9a30816783df8a9c297e197ac4a1881b73f5041f,74e438169618a0e2b0ec68ba4c6432acf917ef3b,"Create new release 5.3.5-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,7 @@
+2024-05-19 - V5.4.0-rc2
+* Fix setup of datadir on installations with Conda (issue #4230) (#4240)
+* Fix FP exception in Wordrec::angle_change (issue #4242) (#4243)
+
 2024-05-12 - V5.4.0-rc1
 * Build fixes, code refactoring and other smaller changes.
 * Fix grey result of indexed PNG in pdfrenderer.
","{'added': [(1, '2024-05-19 - V5.4.0-rc2'), (2, '* Fix setup of datadir on installations with Conda (issue #4230) (#4240)'), (3, '* Fix FP exception in Wordrec::angle_change (issue #4242) (#4243)'), (4, '')], 'deleted': []}",yes
VERSION,VERSION,9a30816783df8a9c297e197ac4a1881b73f5041f,74e438169618a0e2b0ec68ba4c6432acf917ef3b,"Create new release 5.3.5-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.4.0-rc1
+5.4.0-rc2
","{'added': [(1, '5.4.0-rc2')], 'deleted': [(1, '5.4.0-rc1')]}",yes
configure.ac,configure.ac,9a30816783df8a9c297e197ac4a1881b73f5041f,74e438169618a0e2b0ec68ba4c6432acf917ef3b,"Create new release 5.3.5-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2024
-PACKAGE_DATE=""05/12""
+PACKAGE_DATE=""05/19""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""05/19""')], 'deleted': [(32, 'PACKAGE_DATE=""05/12""')]}",yes
src\ccstruct\blobs.h,src\ccstruct\blobs.h,74e438169618a0e2b0ec68ba4c6432acf917ef3b,bcfdd5e51164311ee96cacec33bce4f68632f68e,"Fix FP exception in Wordrec::angle_change (issue #4242) (#4243)

std::asin only allows arguments in [-1, 1], but rounding errors can
produce values which are slightly outside of this range and which
would cause a FP exception (or wrong calculation results).

Rename also the internally used function `TPOINT::length` to `TPOINT::length2`
because it calculates the square of the length.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -81,8 +81,8 @@ struct TPOINT {
     return x * other.x + y * other.y;
   }
 
-  // Calculate length of vector.
-  int length() const {
+  // Calculate square of vector length.
+  int length2() const {
     return x * x + y * y;
   }
 
","{'added': [(84, '  // Calculate square of vector length.'), (85, '  int length2() const {')], 'deleted': [(84, '  // Calculate length of vector.'), (85, '  int length() const {')]}",yes
src\ccstruct\polyaprx.cpp,src\ccstruct\polyaprx.cpp,74e438169618a0e2b0ec68ba4c6432acf917ef3b,bcfdd5e51164311ee96cacec33bce4f68632f68e,"Fix FP exception in Wordrec::angle_change (issue #4242) (#4243)

std::asin only allows arguments in [-1, 1], but rounding errors can
produce values which are slightly outside of this range and which
would cause a FP exception (or wrong calculation results).

Rename also the internally used function `TPOINT::length` to `TPOINT::length2`
because it calculates the square of the length.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -108,7 +108,7 @@ static void cutline(       // recursive refine
     edge = edge->next;
   } while (edge != last); // test all line
 
-  perp = vecsum.length();
+  perp = vecsum.length2();
   ASSERT_HOST(perp != 0);
 
   if (maxperp < 256 * INT16_MAX) {
@@ -389,7 +389,7 @@ static void fix2(  // polygonal approx
       break; // already too few
     }
     d12vec.diff(edgefix1->pos, edgefix2->pos);
-    d12 = d12vec.length();
+    d12 = d12vec.length2();
     // TODO(rays) investigate this change:
     // Only unfix a point if it is part of a low-curvature section
     // of outline and the total angle change of the outlines is
@@ -397,9 +397,9 @@ static void fix2(  // polygonal approx
     // if (d12 <= gapmin && edgefix0->vec.dot(edgefix2->vec) > 0) {
     if (d12 <= gapmin) {
       d01vec.diff(edgefix0->pos, edgefix1->pos);
-      d01 = d01vec.length();
+      d01 = d01vec.length2();
       d23vec.diff(edgefix2->pos, edgefix3->pos);
-      d23 = d23vec.length();
+      d23 = d23vec.length2();
       if (d01 > d23) {
         edgefix2->fixed = false;
         fixed_count--;
","{'added': [(111, '  perp = vecsum.length2();'), (392, '    d12 = d12vec.length2();'), (400, '      d01 = d01vec.length2();'), (402, '      d23 = d23vec.length2();')], 'deleted': [(111, '  perp = vecsum.length();'), (392, '    d12 = d12vec.length();'), (400, '      d01 = d01vec.length();'), (402, '      d23 = d23vec.length();')]}",yes
src\wordrec\chop.cpp,src\wordrec\chop.cpp,74e438169618a0e2b0ec68ba4c6432acf917ef3b,bcfdd5e51164311ee96cacec33bce4f68632f68e,"Fix FP exception in Wordrec::angle_change (issue #4242) (#4243)

std::asin only allows arguments in [-1, 1], but rounding errors can
produce values which are slightly outside of this range and which
would cause a FP exception (or wrong calculation results).

Rename also the internally used function `TPOINT::length` to `TPOINT::length2`
because it calculates the square of the length.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -107,24 +107,31 @@ int Wordrec::angle_change(EDGEPT *point1, EDGEPT *point2, EDGEPT *point3) {
   vector2.x = point3->pos.x - point2->pos.x;
   vector2.y = point3->pos.y - point2->pos.y;
   /* Use cross product */
-  float length = std::sqrt(static_cast<float>(vector1.length()) * vector2.length());
+  float length = std::sqrt(static_cast<float>(vector1.length2()) * vector2.length2());
   if (static_cast<int>(length) == 0) {
     return (0);
   }
-  angle = static_cast<int>(floor(std::asin(vector1.cross(vector2) / length) / M_PI * 180.0 + 0.5));
-
-  /* Use dot product */
-  if (vector1.dot(vector2) < 0) {
-    angle = 180 - angle;
-  }
-  /* Adjust angle */
-  if (angle > 180) {
-    angle -= 360;
-  }
-  if (angle <= -180) {
-    angle += 360;
+  auto f = vector1.cross(vector2) / length;
+  // Avoid FP exception in std::asin caused by illegal values of f
+  // (caused by rounding errors).
+  if (f <= -1.0f) {
+    angle = -90;
+  } else if (f >= 1.0f) {
+    angle = 90;
+  } else {
+    angle = static_cast<int>(floor(std::asin(f) / M_PI * 180.0 + 0.5));
+    // Use dot product.
+    if (vector1.dot(vector2) < 0) {
+      angle = 180 - angle;
+    }
+    // Adjust angle.
+    if (angle > 180) {
+      angle -= 360;
+    } else if (angle <= -180) {
+      angle += 360;
+    }
   }
-  return (angle);
+  return angle;
 }
 
 /**
","{'added': [(110, '  float length = std::sqrt(static_cast<float>(vector1.length2()) * vector2.length2());'), (114, '  auto f = vector1.cross(vector2) / length;'), (115, '  // Avoid FP exception in std::asin caused by illegal values of f'), (116, '  // (caused by rounding errors).'), (117, '  if (f <= -1.0f) {'), (118, '    angle = -90;'), (119, '  } else if (f >= 1.0f) {'), (120, '    angle = 90;'), (121, '  } else {'), (122, '    angle = static_cast<int>(floor(std::asin(f) / M_PI * 180.0 + 0.5));'), (123, '    // Use dot product.'), (124, '    if (vector1.dot(vector2) < 0) {'), (125, '      angle = 180 - angle;'), (126, '    }'), (127, '    // Adjust angle.'), (128, '    if (angle > 180) {'), (129, '      angle -= 360;'), (130, '    } else if (angle <= -180) {'), (131, '      angle += 360;'), (132, '    }'), (134, '  return angle;')], 'deleted': [(110, '  float length = std::sqrt(static_cast<float>(vector1.length()) * vector2.length());'), (114, '  angle = static_cast<int>(floor(std::asin(vector1.cross(vector2) / length) / M_PI * 180.0 + 0.5));'), (115, ''), (116, '  /* Use dot product */'), (117, '  if (vector1.dot(vector2) < 0) {'), (118, '    angle = 180 - angle;'), (119, '  }'), (120, '  /* Adjust angle */'), (121, '  if (angle > 180) {'), (122, '    angle -= 360;'), (123, '  }'), (124, '  if (angle <= -180) {'), (125, '    angle += 360;'), (127, '  return (angle);')]}",yes
src\ccutil\ccutil.cpp,src\ccutil\ccutil.cpp,bcfdd5e51164311ee96cacec33bce4f68632f68e,f3974d422cd9a9b614b55e237419d395e438340e,"Fix setup of datadir on installations with Conda (issue #4230)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -77,11 +77,10 @@ void CCUtil::main_setup(const std::string &argv0, const std::string &basename) {
   if (datadir.empty()) {
 #if defined(TESSDATA_PREFIX)
     // Use tessdata prefix which was compiled in.
+    datadir = TESSDATA_PREFIX ""/tessdata/"";
     // Note that some software (for example conda) patches TESSDATA_PREFIX
-    // in the binary, so it should not be used directly with a std::string.
-    tessdata_prefix = TESSDATA_PREFIX;
-    datadir = tessdata_prefix;
-    datadir += ""/tessdata/"";
+    // in the binary, so it might be shorter. Recalculate its length.
+    datadir.resize(std::strlen(datadir.c_str()));
 #else
     datadir = ""./"";
 #endif /* TESSDATA_PREFIX */
","{'added': [(80, '    datadir = TESSDATA_PREFIX ""/tessdata/"";'), (82, '    // in the binary, so it might be shorter. Recalculate its length.'), (83, '    datadir.resize(std::strlen(datadir.c_str()));')], 'deleted': [(81, '    // in the binary, so it should not be used directly with a std::string.'), (82, '    tessdata_prefix = TESSDATA_PREFIX;'), (83, '    datadir = tessdata_prefix;'), (84, '    datadir += ""/tessdata/"";')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,f3974d422cd9a9b614b55e237419d395e438340e,0ad6efc9480660c40124b270cb6388b5e1720da9,Update sw.yml,"@@ -26,7 +26,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [windows-2022, macos-13]
+        os: [windows-2022, macos-latest]
         include:
           - os: ubuntu-22.04
             container: fedora:latest
@@ -67,7 +67,7 @@ jobs:
       shell: pwsh
 
     - name: test
-      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'macos-13')
+      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'macos-latest')
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       continue-on-error: true
     - name: test
@@ -76,13 +76,13 @@ jobs:
       continue-on-error: true
 
     - name: test-nightly
-      if: matrix.os != 'windows-2022' && matrix.os != 'macos-13' && github.event.schedule=='0 0 * * *'
+      if: matrix.os != 'windows-2022' && matrix.os != 'macos-latest' && github.event.schedule=='0 0 * * *'
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1
       continue-on-error: true
 
-    # windows and macos-13 tests hang here for some reason, investigate
+    # windows and macos-latest tests hang here for some reason, investigate
     #- name: test
-      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-13'
+      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-latest'
       #run: ./sw test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       #continue-on-error: true
 
","{'added': [(29, '        os: [windows-2022, macos-latest]'), (70, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'macos-latest')""), (79, ""      if: matrix.os != 'windows-2022' && matrix.os != 'macos-latest' && github.event.schedule=='0 0 * * *'""), (83, '    # windows and macos-latest tests hang here for some reason, investigate'), (85, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-latest'"")], 'deleted': [(29, '        os: [windows-2022, macos-13]'), (70, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'macos-13')""), (79, ""      if: matrix.os != 'windows-2022' && matrix.os != 'macos-13' && github.event.schedule=='0 0 * * *'""), (83, '    # windows and macos-13 tests hang here for some reason, investigate'), (85, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-13'"")]}",yes
ChangeLog,ChangeLog,0ad6efc9480660c40124b270cb6388b5e1720da9,cab565865907da99771259fe9e0ec872b4d3d355,"Replace release 5.3.5-rc1 by 5.4.0-rc1

The new release includes API changes, therefore the minor version
must be updated.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,4 +1,4 @@
-2024-05-12 - V5.3.5-rc1
+2024-05-12 - V5.4.0-rc1
 * Build fixes, code refactoring and other smaller changes.
 * Fix grey result of indexed PNG in pdfrenderer.
 * Rename frk -> deu_latf (ISO 639-3, ISO 15924).
","{'added': [(1, '2024-05-12 - V5.4.0-rc1')], 'deleted': [(1, '2024-05-12 - V5.3.5-rc1')]}",yes
VERSION,VERSION,0ad6efc9480660c40124b270cb6388b5e1720da9,cab565865907da99771259fe9e0ec872b4d3d355,"Replace release 5.3.5-rc1 by 5.4.0-rc1

The new release includes API changes, therefore the minor version
must be updated.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.3.5-rc1
+5.4.0-rc1
","{'added': [(1, '5.4.0-rc1')], 'deleted': [(1, '5.3.5-rc1')]}",yes
ChangeLog,ChangeLog,cab565865907da99771259fe9e0ec872b4d3d355,0418ec28f3b046d63a7d8b4a3a2c43d7fa8b2199,"Create new release 5.3.5-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,5 +1,15 @@
 2024-05-12 - V5.3.5-rc1
-*
+* Build fixes, code refactoring and other smaller changes.
+* Fix grey result of indexed PNG in pdfrenderer.
+* Rename frk -> deu_latf (ISO 639-3, ISO 15924).
+* Remove broken Dockerfile.
+* Fixes for several issues reported by Coverity Scan.
+* Remove unsupported OpenCL code and related API functions (#4220).
+* Facilitate vectorization for generic build (#4223).
+* Add PAGE XML renderer / export (#4214).
+* Support training without lstmf files.
+* Improve CCUtil::main_setup (fixes issue #4230 related to Coda).
+* Allow for text angle/gradient to be retrieved (#4070).
 
 2024-01-18 - V5.3.4
 * Fixes for scrollview
","{'added': [(2, '* Build fixes, code refactoring and other smaller changes.'), (3, '* Fix grey result of indexed PNG in pdfrenderer.'), (4, '* Rename frk -> deu_latf (ISO 639-3, ISO 15924).'), (5, '* Remove broken Dockerfile.'), (6, '* Fixes for several issues reported by Coverity Scan.'), (7, '* Remove unsupported OpenCL code and related API functions (#4220).'), (8, '* Facilitate vectorization for generic build (#4223).'), (9, '* Add PAGE XML renderer / export (#4214).'), (10, '* Support training without lstmf files.'), (11, '* Improve CCUtil::main_setup (fixes issue #4230 related to Coda).'), (12, '* Allow for text angle/gradient to be retrieved (#4070).')], 'deleted': [(2, '*')]}",yes
ChangeLog,ChangeLog,0418ec28f3b046d63a7d8b4a3a2c43d7fa8b2199,c23792bc3164d3190677c8bf2273d53f32b57caa,"Create new release 5.3.5-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,6 @@
+2024-05-12 - V5.3.5-rc1
+*
+
 2024-01-18 - V5.3.4
 * Fixes for scrollview
 * Fixes for autoconf, clang and sw builds
","{'added': [(1, '2024-05-12 - V5.3.5-rc1'), (2, '*'), (3, '')], 'deleted': []}",yes
VERSION,VERSION,0418ec28f3b046d63a7d8b4a3a2c43d7fa8b2199,c23792bc3164d3190677c8bf2273d53f32b57caa,"Create new release 5.3.5-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.3.4
+5.3.5-rc1
","{'added': [(1, '5.3.5-rc1')], 'deleted': [(1, '5.3.4')]}",yes
configure.ac,configure.ac,0418ec28f3b046d63a7d8b4a3a2c43d7fa8b2199,c23792bc3164d3190677c8bf2273d53f32b57caa,"Create new release 5.3.5-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2024
-PACKAGE_DATE=""01/18""
+PACKAGE_DATE=""05/12""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""05/12""')], 'deleted': [(32, 'PACKAGE_DATE=""01/18""')]}",yes
include\tesseract\baseapi.h,include\tesseract\baseapi.h,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -337,6 +337,11 @@ public:
    */
   Pix *GetThresholdedImage();
 
+  /**
+   * Return average gradient of lines on page.
+   */
+  float GetGradient();
+
   /**
    * Get the result of page layout analysis as a leptonica-style
    * Boxa, Pixa pair, in reading order.
","{'added': [(340, '  /**'), (341, '   * Return average gradient of lines on page.'), (342, '   */'), (343, '  float GetGradient();'), (344, '')], 'deleted': []}",yes
include\tesseract\capi.h,include\tesseract\capi.h,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -273,6 +273,7 @@ TESS_API void TessBaseAPISetRectangle(TessBaseAPI *handle, int left, int top,
                                       int width, int height);
 
 TESS_API struct Pix *TessBaseAPIGetThresholdedImage(TessBaseAPI *handle);
+TESS_API float TessBaseAPIGetGradient(TessBaseAPI *handle);
 TESS_API struct Boxa *TessBaseAPIGetRegions(TessBaseAPI *handle,
                                             struct Pixa **pixa);
 TESS_API struct Boxa *TessBaseAPIGetTextlines(TessBaseAPI *handle,
","{'added': [(276, 'TESS_API float TessBaseAPIGetGradient(TessBaseAPI *handle);')], 'deleted': []}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -2189,6 +2189,13 @@ int TessBaseAPI::FindLines() {
   return 0;
 }
 
+/**
+ * Return average gradient of lines on page.
+ */
+float TessBaseAPI::GetGradient() {
+  return tesseract_->gradient();
+}
+
 /** Delete the pageres and clear the block list ready for a new page. */
 void TessBaseAPI::ClearResults() {
   if (tesseract_ != nullptr) {
","{'added': [(2192, '/**'), (2193, ' * Return average gradient of lines on page.'), (2194, ' */'), (2195, 'float TessBaseAPI::GetGradient() {'), (2196, '  return tesseract_->gradient();'), (2197, '}'), (2198, '')], 'deleted': []}",yes
src\api\capi.cpp,src\api\capi.cpp,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -327,6 +327,10 @@ struct Pix *TessBaseAPIGetThresholdedImage(TessBaseAPI *handle) {
   return handle->GetThresholdedImage();
 }
 
+float TessBaseAPIGetGradient(TessBaseAPI *handle) {
+  return handle->GetGradient();
+}
+
 void TessBaseAPIClearPersistentCache(TessBaseAPI * /*handle*/) {
   TessBaseAPI::ClearPersistentCache();
 }
","{'added': [(330, 'float TessBaseAPIGetGradient(TessBaseAPI *handle) {'), (331, '  return handle->GetGradient();'), (332, '}'), (333, '')], 'deleted': []}",yes
src\ccmain\pagesegmain.cpp,src\ccmain\pagesegmain.cpp,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -168,7 +168,7 @@ int Tesseract::SegmentPage(const char *input_file, BLOCK_LIST *blocks, Tesseract
   bool cjk_mode = textord_use_cjk_fp_model;
 
   textord_.TextordPage(pageseg_mode, reskew_, width, height, pix_binary_, pix_thresholds_,
-                       pix_grey_, splitting || cjk_mode, &diacritic_blobs, blocks, &to_blocks);
+                       pix_grey_, splitting || cjk_mode, &diacritic_blobs, blocks, &to_blocks, &gradient_);
   return auto_page_seg_ret_val;
 }
 
","{'added': [(171, '                       pix_grey_, splitting || cjk_mode, &diacritic_blobs, blocks, &to_blocks, &gradient_);')], 'deleted': [(171, '                       pix_grey_, splitting || cjk_mode, &diacritic_blobs, blocks, &to_blocks);')]}",yes
src\ccmain\tesseractclass.cpp,src\ccmain\tesseractclass.cpp,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -461,6 +461,7 @@ Tesseract::Tesseract()
     , scaled_factor_(-1)
     , deskew_(1.0f, 0.0f)
     , reskew_(1.0f, 0.0f)
+    , gradient_(0.0f)
     , most_recently_used_(this)
     , font_table_size_(0)
 #ifndef DISABLED_LEGACY_ENGINE
@@ -498,6 +499,7 @@ void Tesseract::Clear() {
   scaled_color_.destroy();
   deskew_ = FCOORD(1.0f, 0.0f);
   reskew_ = FCOORD(1.0f, 0.0f);
+  gradient_ = 0.0f;
   splitter_.Clear();
   scaled_factor_ = -1;
   for (auto &sub_lang : sub_langs_) {
","{'added': [(464, '    , gradient_(0.0f)'), (502, '  gradient_ = 0.0f;')], 'deleted': []}",yes
src\ccmain\tesseractclass.h,src\ccmain\tesseractclass.h,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -200,6 +200,9 @@ public:
   const FCOORD &reskew() const {
     return reskew_;
   }
+  float gradient() const {
+    return gradient_;
+  }
   // Destroy any existing pix and return a pointer to the pointer.
   Image *mutable_pix_binary() {
     pix_binary_.destroy();
@@ -1004,6 +1007,7 @@ private:
   int scaled_factor_;
   FCOORD deskew_;
   FCOORD reskew_;
+  float gradient_;
   TesseractStats stats_;
   // Sub-languages to be tried in addition to this.
   std::vector<Tesseract *> sub_langs_;
","{'added': [(203, '  float gradient() const {'), (204, '    return gradient_;'), (205, '  }'), (1010, '  float gradient_;')], 'deleted': []}",yes
src\textord\textord.cpp,src\textord\textord.cpp,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -177,7 +177,7 @@ Textord::Textord(CCStruct *ccstruct)
 void Textord::TextordPage(PageSegMode pageseg_mode, const FCOORD &reskew, int width, int height,
                           Image binary_pix, Image thresholds_pix, Image grey_pix, bool use_box_bottoms,
                           BLOBNBOX_LIST *diacritic_blobs, BLOCK_LIST *blocks,
-                          TO_BLOCK_LIST *to_blocks) {
+                          TO_BLOCK_LIST *to_blocks, float *gradient) {
   page_tr_.set_x(width);
   page_tr_.set_y(height);
   if (to_blocks->empty()) {
@@ -219,15 +219,14 @@ void Textord::TextordPage(PageSegMode pageseg_mode, const FCOORD &reskew, int wi
   TO_BLOCK_IT to_block_it(to_blocks);
   TO_BLOCK *to_block = to_block_it.data();
   // Make the rows in the block.
-  float gradient;
   // Do it the old fashioned way.
   if (PSM_LINE_FIND_ENABLED(pageseg_mode)) {
-    gradient = make_rows(page_tr_, to_blocks);
+    *gradient = make_rows(page_tr_, to_blocks);
   } else if (!PSM_SPARSE(pageseg_mode)) {
     // RAW_LINE, SINGLE_LINE, SINGLE_WORD and SINGLE_CHAR all need a single row.
-    gradient = make_single_row(page_tr_, pageseg_mode != PSM_RAW_LINE, to_block, to_blocks);
+    *gradient = make_single_row(page_tr_, pageseg_mode != PSM_RAW_LINE, to_block, to_blocks);
   } else {
-    gradient = 0.0f;
+    *gradient = 0.0f;
   }
   BaselineDetect baseline_detector(textord_baseline_debug, reskew, to_blocks);
   baseline_detector.ComputeStraightBaselines(use_box_bottoms);
@@ -236,7 +235,7 @@ void Textord::TextordPage(PageSegMode pageseg_mode, const FCOORD &reskew, int wi
   // Now make the words in the lines.
   if (PSM_WORD_FIND_ENABLED(pageseg_mode)) {
     // SINGLE_LINE uses the old word maker on the single line.
-    make_words(this, page_tr_, gradient, blocks, to_blocks);
+    make_words(this, page_tr_, *gradient, blocks, to_blocks);
   } else {
     // SINGLE_WORD and SINGLE_CHAR cram all the blobs into a
     // single word, and in SINGLE_CHAR mode, all the outlines
","{'added': [(180, '                          TO_BLOCK_LIST *to_blocks, float *gradient) {'), (224, '    *gradient = make_rows(page_tr_, to_blocks);'), (227, '    *gradient = make_single_row(page_tr_, pageseg_mode != PSM_RAW_LINE, to_block, to_blocks);'), (229, '    *gradient = 0.0f;'), (238, '    make_words(this, page_tr_, *gradient, blocks, to_blocks);')], 'deleted': [(180, '                          TO_BLOCK_LIST *to_blocks) {'), (222, '  float gradient;'), (225, '    gradient = make_rows(page_tr_, to_blocks);'), (228, '    gradient = make_single_row(page_tr_, pageseg_mode != PSM_RAW_LINE, to_block, to_blocks);'), (230, '    gradient = 0.0f;'), (239, '    make_words(this, page_tr_, gradient, blocks, to_blocks);')]}",yes
src\textord\textord.h,src\textord\textord.h,c23792bc3164d3190677c8bf2273d53f32b57caa,6a31e36e0ca9f740420bc96bdde763f08ba756d4,"Allow for text angle/gradient to be retrieved (#4070)

* Added GetGradient function","@@ -89,7 +89,8 @@ public:
   // to the appropriate word(s) in case they are really diacritics.
   void TextordPage(PageSegMode pageseg_mode, const FCOORD &reskew, int width, int height,
                    Image binary_pix, Image thresholds_pix, Image grey_pix, bool use_box_bottoms,
-                   BLOBNBOX_LIST *diacritic_blobs, BLOCK_LIST *blocks, TO_BLOCK_LIST *to_blocks);
+                   BLOBNBOX_LIST *diacritic_blobs, BLOCK_LIST *blocks, TO_BLOCK_LIST *to_blocks,
+                   float *gradient);
 
   // If we were supposed to return only a single textline, and there is more
   // than one, clean up and leave only the best.
","{'added': [(92, '                   BLOBNBOX_LIST *diacritic_blobs, BLOCK_LIST *blocks, TO_BLOCK_LIST *to_blocks,'), (93, '                   float *gradient);')], 'deleted': [(92, '                   BLOBNBOX_LIST *diacritic_blobs, BLOCK_LIST *blocks, TO_BLOCK_LIST *to_blocks);')]}",yes
src\ccutil\ccutil.cpp,src\ccutil\ccutil.cpp,6a31e36e0ca9f740420bc96bdde763f08ba756d4,6648d5bcac42853b3a11a5a8648c91434d3a6a6f,"Improve CCUtil::main_setup (fixes issue #4230)

Conda installations patch TESSDATA_PREFIX in the binary.
That does not work for std::string because the length
won't be patched, so use a normal C string which can be
patched.

Simplify also the code which checks the last character
of datadir.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -46,7 +46,7 @@ CCUtil::~CCUtil() = default;
 void CCUtil::main_setup(const std::string &argv0, const std::string &basename) {
   imagebasename = basename; /**< name of image */
 
-  char *tessdata_prefix = getenv(""TESSDATA_PREFIX"");
+  const char *tessdata_prefix = getenv(""TESSDATA_PREFIX"");
 
   if (!argv0.empty()) {
     /* Use tessdata prefix from the command line. */
@@ -77,17 +77,20 @@ void CCUtil::main_setup(const std::string &argv0, const std::string &basename) {
   if (datadir.empty()) {
 #if defined(TESSDATA_PREFIX)
     // Use tessdata prefix which was compiled in.
-    datadir = TESSDATA_PREFIX ""/tessdata"";
+    // Note that some software (for example conda) patches TESSDATA_PREFIX
+    // in the binary, so it should not be used directly with a std::string.
+    tessdata_prefix = TESSDATA_PREFIX;
+    datadir = tessdata_prefix;
+    datadir += ""/tessdata/"";
 #else
     datadir = ""./"";
 #endif /* TESSDATA_PREFIX */
   }
 
   // check for missing directory separator
-  const char *lastchar = datadir.c_str();
-  lastchar += datadir.length() - 1;
-  if ((strcmp(lastchar, ""/"") != 0) && (strcmp(lastchar, ""\\"") != 0)) {
-    datadir += ""/"";
+  const char lastchar = datadir.back();
+  if (lastchar != '/' && lastchar != '\\') {
+    datadir += '/';
   }
 }
 
","{'added': [(49, '  const char *tessdata_prefix = getenv(""TESSDATA_PREFIX"");'), (80, '    // Note that some software (for example conda) patches TESSDATA_PREFIX'), (81, '    // in the binary, so it should not be used directly with a std::string.'), (82, '    tessdata_prefix = TESSDATA_PREFIX;'), (83, '    datadir = tessdata_prefix;'), (84, '    datadir += ""/tessdata/"";'), (91, '  const char lastchar = datadir.back();'), (92, ""  if (lastchar != '/' && lastchar != '\\\\') {""), (93, ""    datadir += '/';"")], 'deleted': [(49, '  char *tessdata_prefix = getenv(""TESSDATA_PREFIX"");'), (80, '    datadir = TESSDATA_PREFIX ""/tessdata"";'), (87, '  const char *lastchar = datadir.c_str();'), (88, '  lastchar += datadir.length() - 1;'), (89, '  if ((strcmp(lastchar, ""/"") != 0) && (strcmp(lastchar, ""\\\\"") != 0)) {'), (90, '    datadir += ""/"";')]}",yes
src\ccutil\ambigs.cpp,src\ccutil\ambigs.cpp,6648d5bcac42853b3a11a5a8648c91434d3a6a6f,0f9d5077404ea1e7da608367695b45bb83b0f34a,"Fix some issues which were reported by GitHub code scanning

GitHub code scanning report:

    Incorrect return-value check for a 'scanf'-like function

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -270,10 +270,10 @@ bool UnicharAmbigs::ParseAmbiguityLine(int line_num, int version, int debug_leve
     return true;
   }
   int i;
-  char *token;
   char *next_token;
-  if (!(token = strtok_r(buffer, kAmbigDelimiters, &next_token)) ||
-      !sscanf(token, ""%d"", test_ambig_part_size) || *test_ambig_part_size <= 0) {
+  char *token = strtok_r(buffer, kAmbigDelimiters, &next_token);
+  if (!token || sscanf(token, ""%d"", test_ambig_part_size) != 1 ||
+      *test_ambig_part_size <= 0) {
     if (debug_level) {
       tprintf(kIllegalMsg, line_num);
     }
@@ -300,7 +300,8 @@ bool UnicharAmbigs::ParseAmbiguityLine(int line_num, int version, int debug_leve
   test_unichar_ids[i] = INVALID_UNICHAR_ID;
 
   if (i != *test_ambig_part_size || !(token = strtok_r(nullptr, kAmbigDelimiters, &next_token)) ||
-      !sscanf(token, ""%d"", replacement_ambig_part_size) || *replacement_ambig_part_size <= 0) {
+      sscanf(token, ""%d"", replacement_ambig_part_size) != 1 ||
+      *replacement_ambig_part_size <= 0) {
     if (debug_level) {
       tprintf(kIllegalMsg, line_num);
     }
@@ -341,7 +342,8 @@ bool UnicharAmbigs::ParseAmbiguityLine(int line_num, int version, int debug_leve
     // Note that if m > 1, an ngram will be inserted into the
     // modified word, not the individual unigrams. Tesseract
     // has limited support for ngram unichar (e.g. dawg permuter).
-    if (!(token = strtok_r(nullptr, kAmbigDelimiters, &next_token)) || !sscanf(token, ""%d"", type)) {
+    token = strtok_r(nullptr, kAmbigDelimiters, &next_token);
+    if (!token || sscanf(token, ""%d"", type) != 1) {
       if (debug_level) {
         tprintf(kIllegalMsg, line_num);
       }
","{'added': [(274, '  char *token = strtok_r(buffer, kAmbigDelimiters, &next_token);'), (275, '  if (!token || sscanf(token, ""%d"", test_ambig_part_size) != 1 ||'), (276, '      *test_ambig_part_size <= 0) {'), (303, '      sscanf(token, ""%d"", replacement_ambig_part_size) != 1 ||'), (304, '      *replacement_ambig_part_size <= 0) {'), (345, '    token = strtok_r(nullptr, kAmbigDelimiters, &next_token);'), (346, '    if (!token || sscanf(token, ""%d"", type) != 1) {')], 'deleted': [(273, '  char *token;'), (275, '  if (!(token = strtok_r(buffer, kAmbigDelimiters, &next_token)) ||'), (276, '      !sscanf(token, ""%d"", test_ambig_part_size) || *test_ambig_part_size <= 0) {'), (303, '      !sscanf(token, ""%d"", replacement_ambig_part_size) || *replacement_ambig_part_size <= 0) {'), (344, '    if (!(token = strtok_r(nullptr, kAmbigDelimiters, &next_token)) || !sscanf(token, ""%d"", type)) {')]}",yes
doc\ambiguous_words.1.asc,doc\ambiguous_words.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,4 +29,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(32, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(32, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\classifier_tester.1.asc,doc\classifier_tester.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -58,4 +58,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(61, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(61, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\cntraining.1.asc,doc\cntraining.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -34,4 +34,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(37, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(37, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\combine_lang_model.1.asc,doc\combine_lang_model.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -68,4 +68,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(71, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(71, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\combine_tessdata.1.asc,doc\combine_tessdata.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -198,4 +198,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(201, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(201, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\dawg2wordlist.1.asc,doc\dawg2wordlist.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -42,4 +42,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(45, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(45, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\lstmeval.1.asc,doc\lstmeval.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -52,4 +52,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(55, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(55, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\lstmtraining.1.asc,doc\lstmtraining.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -115,4 +115,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(118, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(118, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\merge_unicharsets.1.asc,doc\merge_unicharsets.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -48,4 +48,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(51, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(51, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\mftraining.1.asc,doc\mftraining.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -53,4 +53,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(56, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(56, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\set_unicharset_properties.1.asc,doc\set_unicharset_properties.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -47,4 +47,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(50, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(50, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\shapeclustering.1.asc,doc\shapeclustering.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -56,4 +56,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(59, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(59, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\text2image.1.asc,doc\text2image.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -165,4 +165,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(168, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(168, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\unicharambigs.5.asc,doc\unicharambigs.5.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -86,4 +86,4 @@ https://tesseract-ocr.github.io/tessdoc/Training-Tesseract-3.03%E2%80%933.05.htm
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(89, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(89, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\unicharset.5.asc,doc\unicharset.5.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -130,4 +130,4 @@ tesseract(1), combine_tessdata(1), unicharset_extractor(1)
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(133, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(133, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\unicharset_extractor.1.asc,doc\unicharset_extractor.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -44,4 +44,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(47, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(47, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
doc\wordlist2dawg.1.asc,doc\wordlist2dawg.1.asc,0f9d5077404ea1e7da608367695b45bb83b0f34a,dff5ebd299806ea483ccf9109a6c913852648040,"Update documentation

The last contribution from Google was in 2018
(see commit ce88adbf326a40b0).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -66,4 +66,4 @@ Licensed under the Apache License, Version 2.0
 AUTHOR
 ------
 The Tesseract OCR engine was written by Ray Smith and his research groups
-at Hewlett Packard (1985-1995) and Google (2006-present).
+at Hewlett Packard (1985-1995) and Google (2006-2018).
","{'added': [(69, 'at Hewlett Packard (1985-1995) and Google (2006-2018).')], 'deleted': [(69, 'at Hewlett Packard (1985-1995) and Google (2006-present).')]}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,dff5ebd299806ea483ccf9109a6c913852648040,4a49e0340fea5b1bf071601be2c8970f52fb5c13,"Fix CID 1544762 and CID 1544763 (Uninitialized scalar variable)

Use also enum names instead of numeric values where possible.

Fixes: 577e8a8b93a9 (""Add PAGE XML renderer / export (#4214)"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -746,8 +746,9 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
 
   float x1, y1, x2, y2, word_conf, line_conf, block_conf;
 
-  tesseract::Orientation orientation_block;
-  tesseract::WritingDirection writing_direction_block;
+  tesseract::Orientation orientation_block = ORIENTATION_PAGE_UP;
+  tesseract::WritingDirection writing_direction_block =
+      WRITING_DIRECTION_LEFT_TO_RIGHT;
   tesseract::TextlineOrder textline_order_block;
 
   Pta *block_top_pts = ptaCreate(0);
@@ -834,14 +835,14 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
       block_conf = ((res_it->Confidence(RIL_BLOCK)) / 100.);
       page_str << ""\t\t<TextRegion id=\""r"" << rcnt << ""\"" "" << ""custom=\""""
                << ""readingOrder {index:"" << rcnt << "";} "";
-      if (writing_direction_block != 0) {
+      if (writing_direction_block != WRITING_DIRECTION_LEFT_TO_RIGHT) {
         page_str << ""readingDirection {""
                  << WritingDirectionToStr(writing_direction_block) << "";} "";
       }
       page_str << ""orientation {"" << orientation_block << "";}\"">\n"";
       page_str << ""\t\t\t"";
-      if ((!POLYGONFLAG ||
-           (orientation_block != 0 && orientation_block != 2)) &&
+      if ((!POLYGONFLAG || (orientation_block != ORIENTATION_PAGE_UP &&
+                            orientation_block != ORIENTATION_PAGE_DOWN)) &&
           LEVELFLAG == 0) {
         AddBoxToPAGE(res_it, RIL_BLOCK, page_str);
       }
@@ -849,9 +850,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
 
     // Writing direction changes at a per-word granularity
     // tesseract::WritingDirection writing_direction_before;
-    tesseract::WritingDirection writing_direction;
-
-    writing_direction = writing_direction_block;
+    auto writing_direction = writing_direction_block;
     if (writing_direction_block != WRITING_DIRECTION_TOP_TO_BOTTOM) {
       switch (res_it->WordDirection()) {
         case DIR_LEFT_TO_RIGHT:
@@ -868,7 +867,8 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
     bool ttb_flag = (writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM);
     // TODO: Rework polygon handling if line is skewed (90 or 180 degress),
     // for now using LinePts
-    bool skewed_flag = (orientation_block != 0 && orientation_block != 2);
+    bool skewed_flag = (orientation_block != ORIENTATION_PAGE_UP &&
+                        orientation_block != ORIENTATION_PAGE_DOWN);
 
     if (res_it->IsAtBeginningOf(RIL_TEXTLINE)) {
       // writing_direction_before = writing_direction;
@@ -879,7 +879,7 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
       }
       line_content << HOcrEscape(textline.c_str());
       line_str << ""\t\t\t<TextLine id=\""r"" << rcnt << ""l"" << lcnt << ""\"" "";
-      if (writing_direction != 0 &&
+      if (writing_direction != WRITING_DIRECTION_LEFT_TO_RIGHT &&
           writing_direction != writing_direction_block) {
         line_str << ""readingDirection=\""""
                  << WritingDirectionToStr(writing_direction) << ""\"" "";
","{'added': [(749, '  tesseract::Orientation orientation_block = ORIENTATION_PAGE_UP;'), (750, '  tesseract::WritingDirection writing_direction_block ='), (751, '      WRITING_DIRECTION_LEFT_TO_RIGHT;'), (838, '      if (writing_direction_block != WRITING_DIRECTION_LEFT_TO_RIGHT) {'), (844, '      if ((!POLYGONFLAG || (orientation_block != ORIENTATION_PAGE_UP &&'), (845, '                            orientation_block != ORIENTATION_PAGE_DOWN)) &&'), (853, '    auto writing_direction = writing_direction_block;'), (870, '    bool skewed_flag = (orientation_block != ORIENTATION_PAGE_UP &&'), (871, '                        orientation_block != ORIENTATION_PAGE_DOWN);'), (882, '      if (writing_direction != WRITING_DIRECTION_LEFT_TO_RIGHT &&')], 'deleted': [(749, '  tesseract::Orientation orientation_block;'), (750, '  tesseract::WritingDirection writing_direction_block;'), (837, '      if (writing_direction_block != 0) {'), (843, '      if ((!POLYGONFLAG ||'), (844, '           (orientation_block != 0 && orientation_block != 2)) &&'), (852, '    tesseract::WritingDirection writing_direction;'), (853, ''), (854, '    writing_direction = writing_direction_block;'), (871, '    bool skewed_flag = (orientation_block != 0 && orientation_block != 2);'), (882, '      if (writing_direction != 0 &&')]}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,4a49e0340fea5b1bf071601be2c8970f52fb5c13,d46186781285172947c80ddd2f5268753ef3764d,"Remove trailing whitespace from PAGE XML <Unicode> output

Fixes: 577e8a8b93a9 (""Add PAGE XML renderer / export (#4214)"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -873,7 +873,11 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
     if (res_it->IsAtBeginningOf(RIL_TEXTLINE)) {
       // writing_direction_before = writing_direction;
       line_conf = ((res_it->Confidence(RIL_TEXTLINE)) / 100.);
-      line_content << HOcrEscape(res_it->GetUTF8Text(RIL_TEXTLINE)).c_str();
+      std::string textline = res_it->GetUTF8Text(RIL_TEXTLINE);
+      if (textline.back() == '\n') {
+        textline.erase(textline.length() - 1);
+      }
+      line_content << HOcrEscape(textline.c_str());
       line_str << ""\t\t\t<TextLine id=\""r"" << rcnt << ""l"" << lcnt << ""\"" "";
       if (writing_direction != 0 &&
           writing_direction != writing_direction_block) {
@@ -1078,12 +1082,10 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
       region_content << line_content.str();
       line_content.str("""");
       if (!last_word_in_cblock) {
-        region_content << ""\n\t\t\t\t\t"";
+        region_content << '\n';
       }
       lcnt++;
       wcnt = 0;
-    } else {
-      line_content << "" "";
     }
 
     // Write region information to the output
","{'added': [(876, '      std::string textline = res_it->GetUTF8Text(RIL_TEXTLINE);'), (877, ""      if (textline.back() == '\\n') {""), (878, '        textline.erase(textline.length() - 1);'), (879, '      }'), (880, '      line_content << HOcrEscape(textline.c_str());'), (1085, ""        region_content << '\\n';"")], 'deleted': [(876, '      line_content << HOcrEscape(res_it->GetUTF8Text(RIL_TEXTLINE)).c_str();'), (1081, '        region_content << ""\\n\\t\\t\\t\\t\\t"";'), (1085, '    } else {'), (1086, '      line_content << "" "";')]}",yes
src\textord\tordmain.cpp,src\textord\tordmain.cpp,d46186781285172947c80ddd2f5268753ef3764d,a1837f18e087ca0cb73751b76e998d89dfbbc289,"Refactor function Textord::clean_noise_from_row (#4225)

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -533,16 +533,17 @@ bool Textord::clean_noise_from_row( // remove empties
       }
     }
   }
+  // TODO: check whether `&& super_norm_count < textord_noise_sncount`should always be added here.
+  bool rejected = dot_count > norm_count * textord_noise_normratio &&
+                  dot_count > 2;
   if (textord_noise_debug) {
     tprintf(""Row ending at (%d,%g):"", blob_box.right(), row->base_line(blob_box.right()));
     tprintf("" R=%g, dc=%d, nc=%d, %s\n"",
             norm_count > 0 ? static_cast<float>(dot_count) / norm_count : 9999, dot_count,
             norm_count,
-            dot_count > norm_count * textord_noise_normratio && dot_count > 2 ? ""REJECTED""
-                                                                              : ""ACCEPTED"");
+            rejected? ""REJECTED"": ""ACCEPTED"");
   }
-  return super_norm_count < textord_noise_sncount &&
-         dot_count > norm_count * textord_noise_rowratio && dot_count > 2;
+  return super_norm_count < textord_noise_sncount && rejected;
 }
 
 /**********************************************************************
","{'added': [(536, '  // TODO: check whether `&& super_norm_count < textord_noise_sncount`should always be added here.'), (537, '  bool rejected = dot_count > norm_count * textord_noise_normratio &&'), (538, '                  dot_count > 2;'), (544, '            rejected? ""REJECTED"": ""ACCEPTED"");'), (546, '  return super_norm_count < textord_noise_sncount && rejected;')], 'deleted': [(541, '            dot_count > norm_count * textord_noise_normratio && dot_count > 2 ? ""REJECTED""'), (542, '                                                                              : ""ACCEPTED"");'), (544, '  return super_norm_count < textord_noise_sncount &&'), (545, '         dot_count > norm_count * textord_noise_rowratio && dot_count > 2;')]}",yes
src\ccmain\paragraphs.cpp,src\ccmain\paragraphs.cpp,a1837f18e087ca0cb73751b76e998d89dfbbc289,77c99e07826a48c89bc62f2339b7e098c4bd4477,Remove the variable,"@@ -2610,7 +2610,6 @@ void DetectParagraphs(int debug_level, bool after_text_recognition,
 
   // Run the paragraph detection algorithm.
   std::vector<PARA *> row_owners;
-  std::vector<PARA *> the_paragraphs;
   if (!is_image_block) {
     DetectParagraphs(debug_level, &row_infos, &row_owners, block->para_list(), models);
   } else {
","{'added': [], 'deleted': [(2613, '  std::vector<PARA *> the_paragraphs;')]}",yes
src\ccstruct\stepblob.cpp,src\ccstruct\stepblob.cpp,77c99e07826a48c89bc62f2339b7e098c4bd4477,072b5d47c1426a2d5c0f8a5588b790cae0e480e0,A few typo fix,"@@ -43,7 +43,7 @@ const double kMaxPerimeterWidthRatio = 8.0;
  **********************************************************************/
 static void position_outline( // put in place
     C_OUTLINE *outline,       // thing to place
-    C_OUTLINE_LIST *destlist  // desstination list
+    C_OUTLINE_LIST *destlist  // destination list
 ) {
   C_OUTLINE_IT it = destlist; // iterator
                               // iterator on children
","{'added': [(46, '    C_OUTLINE_LIST *destlist  // destination list')], 'deleted': [(46, '    C_OUTLINE_LIST *destlist  // desstination list')]}",yes
src\textord\colfind.cpp,src\textord\colfind.cpp,77c99e07826a48c89bc62f2339b7e098c4bd4477,072b5d47c1426a2d5c0f8a5588b790cae0e480e0,A few typo fix,"@@ -142,7 +142,7 @@ ColumnFinder::~ColumnFinder() {
 }
 
 // Performs initial processing on the blobs in the input_block:
-// Setup the part_grid, stroke_width_, nontext_map.
+// Setup the part_grid_, stroke_width_, nontext_map.
 // Obvious noise blobs are filtered out and used to mark the nontext_map_.
 // Initial stroke-width analysis is used to get local text alignment
 // direction, so the textline projection_ map can be setup.
","{'added': [(145, '// Setup the part_grid_, stroke_width_, nontext_map.')], 'deleted': [(145, '// Setup the part_grid, stroke_width_, nontext_map.')]}",yes
src\textord\strokewidth.h,src\textord\strokewidth.h,77c99e07826a48c89bc62f2339b7e098c4bd4477,072b5d47c1426a2d5c0f8a5588b790cae0e480e0,A few typo fix,"@@ -89,7 +89,7 @@ public:
   // Corrects the data structures for the given rotation.
   void CorrectForRotation(const FCOORD &rerotation, ColPartitionGrid *part_grid);
 
-  // Finds leader partitions and inserts them into the give grid.
+  // Finds leader partitions and inserts them into the given grid.
   void FindLeaderPartitions(TO_BLOCK *block, ColPartitionGrid *part_grid);
 
   // Finds and marks noise those blobs that look like bits of vertical lines
","{'added': [(92, '  // Finds leader partitions and inserts them into the given grid.')], 'deleted': [(92, '  // Finds leader partitions and inserts them into the give grid.')]}",yes
src\textord\makerow.cpp,src\textord\makerow.cpp,072b5d47c1426a2d5c0f8a5588b790cae0e480e0,6802705cf07131bbcc780d7109af300e13338310,Apply the change,"@@ -2485,8 +2485,8 @@ OVERLAP_STATE most_overlapping_row( // find best row
       row_it->forward();
       test_row = row_it->data();
       if (test_row->min_y() <= top && test_row->max_y() >= bottom) {
-        merge_top = test_row->max_y() > row->max_y() ? test_row->max_y() : row->max_y();
-        merge_bottom = test_row->min_y() < row->min_y() ? test_row->min_y() : row->min_y();
+        merge_top = std::max(test_row->max_y(),row->max_y());
+        merge_bottom = std::min(test_row->min_y(),row->min_y());
         if (merge_top - merge_bottom <= rowsize) {
           if (testing_blob && textord_debug_blob) {
             tprintf(""Merging rows at (%g,%g), (%g,%g)\n"", row->min_y(), row->max_y(),
","{'added': [(2488, '        merge_top = std::max(test_row->max_y(),row->max_y());'), (2489, '        merge_bottom = std::min(test_row->min_y(),row->min_y());')], 'deleted': [(2488, '        merge_top = test_row->max_y() > row->max_y() ? test_row->max_y() : row->max_y();'), (2489, '        merge_bottom = test_row->min_y() < row->min_y() ? test_row->min_y() : row->min_y();')]}",yes
src\textord\alignedblob.cpp,src\textord\alignedblob.cpp,6802705cf07131bbcc780d7109af300e13338310,d6f0073c75e62ca4331ca62ba3976748f3921aeb,Apply the changes,"@@ -167,7 +167,7 @@ ScrollView *AlignedBlob::DisplayTabs(const char *window_name, ScrollView *tab_wi
     tab_win = MakeWindow(0, 50, window_name);
   }
   // For every tab in the grid, display it.
-  GridSearch<BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT> gsearch(this);
+  BlobGridSearch gsearch(this);
   gsearch.StartFullSearch();
   BLOBNBOX *bbox;
   while ((bbox = gsearch.NextFullSearch()) != nullptr) {
@@ -409,7 +409,7 @@ BLOBNBOX *AlignedBlob::FindAlignedBlob(const AlignedBlobParams &p, bool top_to_b
     xmin -= p.min_gutter;
   }
   // Setup a vertical search for an aligned blob.
-  GridSearch<BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT> vsearch(this);
+  BlobGridSearch vsearch(this);
   if (WithinTestRegion(2, x_start, start_y)) {
     tprintf(""Starting %s %s search at %d-%d,%d, search_size=%d, gutter=%d\n"",
             p.ragged ? ""Ragged"" : ""Aligned"", p.right_tab ? ""Right"" : ""Left"", xmin, xmax, start_y,
","{'added': [(170, '  BlobGridSearch gsearch(this);'), (412, '  BlobGridSearch vsearch(this);')], 'deleted': [(170, '  GridSearch<BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT> gsearch(this);'), (412, '  GridSearch<BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT> vsearch(this);')]}",yes
src\textord\colfind.cpp,src\textord\colfind.cpp,6802705cf07131bbcc780d7109af300e13338310,d6f0073c75e62ca4331ca62ba3976748f3921aeb,Apply the changes,"@@ -971,7 +971,7 @@ void ColumnFinder::ReleaseBlobsAndCleanupUnused(TO_BLOCK *block) {
 // Splits partitions that cross columns where they have nothing in the gap.
 void ColumnFinder::GridSplitPartitions() {
   // Iterate the ColPartitions in the grid.
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(&part_grid_);
+  ColPartitionGridSearch gsearch(&part_grid_);
   gsearch.StartFullSearch();
   ColPartition *dont_repeat = nullptr;
   ColPartition *part;
@@ -1438,7 +1438,7 @@ void ColumnFinder::TransformToBlocks(BLOCK_LIST *blocks, TO_BLOCK_LIST *to_block
   // like horizontal lines going before the text lines above them.
   ColPartition_CLIST temp_part_list;
   // Iterate the ColPartitions in the grid. It starts at the top
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(&part_grid_);
+  ColPartitionGridSearch gsearch(&part_grid_);
   gsearch.StartFullSearch();
   int prev_grid_y = -1;
   ColPartition *part;
","{'added': [(974, '  ColPartitionGridSearch gsearch(&part_grid_);'), (1441, '  ColPartitionGridSearch gsearch(&part_grid_);')], 'deleted': [(974, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(&part_grid_);'), (1441, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(&part_grid_);')]}",yes
src\textord\tabfind.cpp,src\textord\tabfind.cpp,6802705cf07131bbcc780d7109af300e13338310,d6f0073c75e62ca4331ca62ba3976748f3921aeb,Apply the changes,"@@ -562,7 +562,7 @@ ScrollView *TabFind::FindTabBoxes(int min_gutter_width, double tabfind_aligned_g
   left_tab_boxes_.clear();
   right_tab_boxes_.clear();
   // For every bbox in the grid, determine whether it uses a tab on an edge.
-  GridSearch<BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT> gsearch(this);
+  BlobGridSearch gsearch(this);
   gsearch.StartFullSearch();
   BLOBNBOX *bbox;
   while ((bbox = gsearch.NextFullSearch()) != nullptr) {
","{'added': [(565, '  BlobGridSearch gsearch(this);')], 'deleted': [(565, '  GridSearch<BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT> gsearch(this);')]}",yes
src\textord\tablefind.cpp,src\textord\tablefind.cpp,6802705cf07131bbcc780d7109af300e13338310,d6f0073c75e62ca4331ca62ba3976748f3921aeb,Apply the changes,"@@ -679,8 +679,7 @@ void TableFinder::SetVerticalSpacing(ColPartition *part) {
 
   TBOX part_box = part->bounding_box();
   // Start a rect search
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rectsearch(
-      &clean_part_grid_);
+  ColPartitionGridSearch rectsearch(&clean_part_grid_);
   rectsearch.StartRectSearch(box);
   ColPartition *neighbor;
   int min_space_above = kMaxVerticalSpacing;
@@ -843,8 +842,7 @@ void TableFinder::MarkTablePartitions() {
 //  4- Partitions with leaders before/after them.
 void TableFinder::MarkPartitionsUsingLocalInformation() {
   // Iterate the ColPartitions in the grid.
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(
-      &clean_part_grid_);
+  ColPartitionGridSearch gsearch(&clean_part_grid_);
   gsearch.StartFullSearch();
   ColPartition *part = nullptr;
   while ((part = gsearch.NextFullSearch()) != nullptr) {
@@ -1190,8 +1188,7 @@ void TableFinder::SetColumnsType(ColSegment_LIST *column_blocks) {
     TBOX box = seg->bounding_box();
     int num_table_cells = 0;
     int num_text_cells = 0;
-    GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rsearch(
-        &clean_part_grid_);
+    ColPartitionGridSearch rsearch(&clean_part_grid_);
     rsearch.SetUniqueMode(true);
     rsearch.StartRectSearch(box);
     ColPartition *part = nullptr;
@@ -1320,8 +1317,7 @@ void TableFinder::GridMergeColumnBlocks() {
 void TableFinder::GetTableColumns(ColSegment_LIST *table_columns) {
   ColSegment_IT it(table_columns);
   // Iterate the ColPartitions in the grid.
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(
-      &clean_part_grid_);
+  ColPartitionGridSearch gsearch(&clean_part_grid_);
   gsearch.StartFullSearch();
   ColPartition *part;
   while ((part = gsearch.NextFullSearch()) != nullptr) {
@@ -1335,8 +1331,7 @@ void TableFinder::GetTableColumns(ColSegment_LIST *table_columns) {
     // Start a search below the current cell to find bottom neighbours
     // Note: a full search will always process things above it first, so
     // this should be starting at the highest cell and working its way down.
-    GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> vsearch(
-        &clean_part_grid_);
+    ColPartitionGridSearch vsearch(&clean_part_grid_);
     vsearch.StartVerticalSearch(box.left(), box.right(), box.bottom());
     ColPartition *neighbor = nullptr;
     bool found_neighbours = false;
@@ -1503,8 +1498,7 @@ bool TableFinder::BelongToOneTable(const TBOX &box1, const TBOX &box2) {
   // Check for ColPartitions spanning both table regions
   TBOX bbox = box1.bounding_union(box2);
   // Start a rect search on bbox
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rectsearch(
-      &clean_part_grid_);
+  ColPartitionGridSearch rectsearch(&clean_part_grid_);
   rectsearch.StartRectSearch(bbox);
   ColPartition *part = nullptr;
   while ((part = rectsearch.NextRectSearch()) != nullptr) {
@@ -1783,8 +1777,7 @@ void TableFinder::DeleteSingleColumnTables() {
       table_xprojection[i] = 0;
     }
     // Start a rect search on table_box
-    GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rectsearch(
-        &clean_part_grid_);
+    ColPartitionGridSearch rectsearch(&clean_part_grid_);
     rectsearch.SetUniqueMode(true);
     rectsearch.StartRectSearch(table_box);
     ColPartition *part;
@@ -1972,7 +1965,7 @@ void TableFinder::DisplayColPartitions(ScrollView *win, ColPartitionGrid *grid,
                                        ScrollView::Color table_color) {
   ScrollView::Color color = default_color;
   // Iterate the ColPartitions in the grid.
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(grid);
+  ColPartitionGridSearch gsearch(grid);
   gsearch.StartFullSearch();
   ColPartition *part = nullptr;
   while ((part = gsearch.NextFullSearch()) != nullptr) {
@@ -2002,7 +1995,7 @@ void TableFinder::DisplayColPartitionConnections(ScrollView *win,
                                                  ColPartitionGrid *grid,
                                                  ScrollView::Color color) {
   // Iterate the ColPartitions in the grid.
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(grid);
+  ColPartitionGridSearch gsearch(grid);
   gsearch.StartFullSearch();
   ColPartition *part = nullptr;
   while ((part = gsearch.NextFullSearch()) != nullptr) {
@@ -2048,7 +2041,7 @@ void TableFinder::MakeTableBlocks(ColPartitionGrid *grid,
                                   const WidthCallback &width_cb) {
   // Since we have table blocks already, remove table tags from all
   // colpartitions
-  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(grid);
+  ColPartitionGridSearch gsearch(grid);
   gsearch.StartFullSearch();
   ColPartition *part = nullptr;
 
@@ -2066,8 +2059,7 @@ void TableFinder::MakeTableBlocks(ColPartitionGrid *grid,
   while ((table = table_search.NextFullSearch()) != nullptr) {
     const TBOX &table_box = table->bounding_box();
     // Start a rect search on table_box
-    GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rectsearch(
-        grid);
+    ColPartitionGridSearch rectsearch(grid);
     rectsearch.StartRectSearch(table_box);
     ColPartition *part;
     ColPartition *table_partition = nullptr;
","{'added': [(682, '  ColPartitionGridSearch rectsearch(&clean_part_grid_);'), (845, '  ColPartitionGridSearch gsearch(&clean_part_grid_);'), (1191, '    ColPartitionGridSearch rsearch(&clean_part_grid_);'), (1320, '  ColPartitionGridSearch gsearch(&clean_part_grid_);'), (1334, '    ColPartitionGridSearch vsearch(&clean_part_grid_);'), (1501, '  ColPartitionGridSearch rectsearch(&clean_part_grid_);'), (1780, '    ColPartitionGridSearch rectsearch(&clean_part_grid_);'), (1968, '  ColPartitionGridSearch gsearch(grid);'), (1998, '  ColPartitionGridSearch gsearch(grid);'), (2044, '  ColPartitionGridSearch gsearch(grid);'), (2062, '    ColPartitionGridSearch rectsearch(grid);')], 'deleted': [(682, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rectsearch('), (683, '      &clean_part_grid_);'), (846, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch('), (847, '      &clean_part_grid_);'), (1193, '    GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rsearch('), (1194, '        &clean_part_grid_);'), (1323, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch('), (1324, '      &clean_part_grid_);'), (1338, '    GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> vsearch('), (1339, '        &clean_part_grid_);'), (1506, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rectsearch('), (1507, '      &clean_part_grid_);'), (1786, '    GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rectsearch('), (1787, '        &clean_part_grid_);'), (1975, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(grid);'), (2005, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(grid);'), (2051, '  GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> gsearch(grid);'), (2069, '    GridSearch<ColPartition, ColPartition_CLIST, ColPartition_C_IT> rectsearch('), (2070, '        grid);')]}",yes
src\api\pagerenderer.cpp,src\api\pagerenderer.cpp,d6f0073c75e62ca4331ca62ba3976748f3921aeb,549b8767e944238c9e2ec0332a81c73b39243c75,"Remove unused local variables in PAGE renderer

Fixes: 577e8a8b93a9 (""Add PAGE XML renderer / export (#4214)"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -482,7 +482,7 @@ Pta *FitBaselineIntoLinePolygon(Pta *bottom_pts, Pta *baseline_pts,
   int num_pts, num_bin, x0, y0, x1, y1;
   float m, b;
   float x_min, y_min, x_max, y_max;
-  float delta_median, delta_median_Q1, delta_median_Q3, delta_median_IQR;
+  float delta_median, delta_median_Q1, delta_median_Q3;
   NUMA *bin_line, *poly_bl_delta;
   Pta *baseline_recalc_pts, *baseline_clipped_pts;
 
@@ -747,7 +747,6 @@ char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
   float x1, y1, x2, y2, word_conf, line_conf, block_conf;
 
   tesseract::Orientation orientation_block;
-  tesseract::Orientation orientation_line;
   tesseract::WritingDirection writing_direction_block;
   tesseract::TextlineOrder textline_order_block;
 
","{'added': [(485, '  float delta_median, delta_median_Q1, delta_median_Q3;')], 'deleted': [(485, '  float delta_median, delta_median_Q1, delta_median_Q3, delta_median_IQR;'), (750, '  tesseract::Orientation orientation_line;')]}",yes
src\ccstruct\imagedata.cpp,src\ccstruct\imagedata.cpp,549b8767e944238c9e2ec0332a81c73b39243c75,88771ca4c66bc62012772b047505583cb202f351,"Support training without lstmf files

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -33,7 +33,8 @@
 
 #include <allheaders.h> // for pixDestroy, pixGetHeight, pixGetWidth, lept_...
 
-#include <cinttypes> // for PRId64
+#include <cinttypes>    // for PRId64
+#include <fstream>      // for std::ifstream
 
 namespace tesseract {
 
@@ -546,6 +547,31 @@ bool DocumentData::ReCachePages() {
     delete page;
   }
   pages_.clear();
+#if !defined(TESSERACT_IMAGEDATA_AS_PIX)
+  auto name_size = document_name_.size();
+  if (name_size > 4 && document_name_.substr(name_size - 4) == "".png"") {
+    // PNG image given instead of LSTMF file.
+    std::string gt_name = document_name_.substr(0, name_size - 3) + ""gt.txt"";
+    std::ifstream t(gt_name);
+    std::string line;
+    std::getline(t, line);
+    t.close();
+    ImageData *image_data = ImageData::Build(document_name_.c_str(), 0, """", nullptr, 0, line.c_str(), nullptr);
+    Image image = pixRead(document_name_.c_str());
+    image_data->SetPix(image);
+    pages_.push_back(image_data);
+    loaded_pages = 1;
+    pages_offset_ %= loaded_pages;
+    set_total_pages(loaded_pages);
+    set_memory_used(memory_used() + image_data->MemoryUsed());
+#if 0
+    tprintf(""Loaded %zu/%d lines (%d-%zu) of document %s\n"", pages_.size(),
+            loaded_pages, pages_offset_ + 1, pages_offset_ + pages_.size(),
+            document_name_.c_str());
+#endif
+    return !pages_.empty();
+  }
+#endif
   TFile fp;
   if (!fp.Open(document_name_.c_str(), reader_) ||
       !fp.DeSerializeSize(&loaded_pages) || loaded_pages <= 0) {
","{'added': [(36, '#include <cinttypes>    // for PRId64'), (37, '#include <fstream>      // for std::ifstream'), (550, '#if !defined(TESSERACT_IMAGEDATA_AS_PIX)'), (551, '  auto name_size = document_name_.size();'), (552, '  if (name_size > 4 && document_name_.substr(name_size - 4) == "".png"") {'), (553, '    // PNG image given instead of LSTMF file.'), (554, '    std::string gt_name = document_name_.substr(0, name_size - 3) + ""gt.txt"";'), (555, '    std::ifstream t(gt_name);'), (556, '    std::string line;'), (557, '    std::getline(t, line);'), (558, '    t.close();'), (559, '    ImageData *image_data = ImageData::Build(document_name_.c_str(), 0, """", nullptr, 0, line.c_str(), nullptr);'), (560, '    Image image = pixRead(document_name_.c_str());'), (561, '    image_data->SetPix(image);'), (562, '    pages_.push_back(image_data);'), (563, '    loaded_pages = 1;'), (564, '    pages_offset_ %= loaded_pages;'), (565, '    set_total_pages(loaded_pages);'), (566, '    set_memory_used(memory_used() + image_data->MemoryUsed());'), (567, '#if 0'), (568, '    tprintf(""Loaded %zu/%d lines (%d-%zu) of document %s\\n"", pages_.size(),'), (569, '            loaded_pages, pages_offset_ + 1, pages_offset_ + pages_.size(),'), (570, '            document_name_.c_str());'), (571, '#endif'), (572, '    return !pages_.empty();'), (573, '  }'), (574, '#endif')], 'deleted': [(36, '#include <cinttypes> // for PRId64')]}",yes
include\tesseract\capi.h,include\tesseract\capi.h,88771ca4c66bc62012772b047505583cb202f351,577e8a8b93a94ded139d66e41ee08d345b3c67ab,"Add missing new function prototypes for PAGE renderer to C API

Fixes: 577e8a8b93a9 (""Add PAGE XML renderer / export (#4214)"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -156,6 +156,7 @@ TESS_API TessResultRenderer *TessHOcrRendererCreate(const char *outputbase);
 TESS_API TessResultRenderer *TessHOcrRendererCreate2(const char *outputbase,
                                                      BOOL font_info);
 TESS_API TessResultRenderer *TessAltoRendererCreate(const char *outputbase);
+TESS_API TessResultRenderer *TessPAGERendererCreate(const char *outputbase);
 TESS_API TessResultRenderer *TessTsvRendererCreate(const char *outputbase);
 TESS_API TessResultRenderer *TessPDFRendererCreate(const char *outputbase,
                                                    const char *datadir,
@@ -322,6 +323,7 @@ TESS_API char *TessBaseAPIGetUTF8Text(TessBaseAPI *handle);
 TESS_API char *TessBaseAPIGetHOCRText(TessBaseAPI *handle, int page_number);
 
 TESS_API char *TessBaseAPIGetAltoText(TessBaseAPI *handle, int page_number);
+TESS_API char *TessBaseAPIGetPAGEText(TessBaseAPI *handle, int page_number);
 TESS_API char *TessBaseAPIGetTsvText(TessBaseAPI *handle, int page_number);
 
 TESS_API char *TessBaseAPIGetBoxText(TessBaseAPI *handle, int page_number);
","{'added': [(159, 'TESS_API TessResultRenderer *TessPAGERendererCreate(const char *outputbase);'), (326, 'TESS_API char *TessBaseAPIGetPAGEText(TessBaseAPI *handle, int page_number);')], 'deleted': []}",yes
CMakeLists.txt,CMakeLists.txt,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -740,6 +740,7 @@ set(TESSERACT_SRC
     src/api/capi.cpp
     src/api/renderer.cpp
     src/api/altorenderer.cpp
+    src/api/pagerenderer.cpp
     src/api/hocrrenderer.cpp
     src/api/lstmboxrenderer.cpp
     src/api/pdfrenderer.cpp
@@ -764,6 +765,7 @@ set(TESSERACT_CONFIGS
     tessdata/configs/lstmbox
     tessdata/configs/lstmdebug
     tessdata/configs/makebox
+    tessdata/configs/page
     tessdata/configs/pdf
     tessdata/configs/quiet
     tessdata/configs/rebox
","{'added': [(743, '    src/api/pagerenderer.cpp'), (768, '    tessdata/configs/page')], 'deleted': []}",yes
Makefile.am,Makefile.am,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -113,6 +113,7 @@ libtesseract_la_LDFLAGS += -version-info $(GENERIC_LIBRARY_VERSION)
 
 libtesseract_la_SOURCES = src/api/baseapi.cpp
 libtesseract_la_SOURCES += src/api/altorenderer.cpp
+libtesseract_la_SOURCES += src/api/pagerenderer.cpp
 libtesseract_la_SOURCES += src/api/capi.cpp
 libtesseract_la_SOURCES += src/api/hocrrenderer.cpp
 libtesseract_la_SOURCES += src/api/lstmboxrenderer.cpp
","{'added': [(116, 'libtesseract_la_SOURCES += src/api/pagerenderer.cpp')], 'deleted': []}",yes
README.md,README.md,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -36,7 +36,7 @@ Tesseract has **unicode (UTF-8) support**, and can **recognize [more than 100 la
 
 Tesseract supports **[various image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.
 
-Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO.
+Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV, ALTO and PAGE.
 
 You should note that in many cases, in order to get better OCR results, you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.
 
","{'added': [(39, 'Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV, ALTO and PAGE.')], 'deleted': [(39, 'Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO.')]}",yes
doc\tesseract.1.asc,doc\tesseract.1.asc,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -104,6 +104,10 @@ OPTIONS
 
   * *alto* -- Output in ALTO format ('OUTPUTBASE'`.xml`).
   * *hocr* -- Output in hOCR format ('OUTPUTBASE'`.hocr`).
+  * *page* -- Output in PAGE format ('OUTPUTBASE'`.page.xml`).
+              The output can be customized with the flags:
+              page_xml_polygon -- Create polygons instead of bounding boxes (default: true)
+              page_xml_level -- Create the PAGE file on  0=linelevel or 1=wordlevel (default: 0)
   * *pdf* -- Output PDF ('OUTPUTBASE'`.pdf`).
   * *tsv* -- Output TSV ('OUTPUTBASE'`.tsv`).
   * *txt* -- Output plain text ('OUTPUTBASE'`.txt`).
","{'added': [(107, ""  * *page* -- Output in PAGE format ('OUTPUTBASE'`.page.xml`).""), (108, '              The output can be customized with the flags:'), (109, '              page_xml_polygon -- Create polygons instead of bounding boxes (default: true)'), (110, '              page_xml_level -- Create the PAGE file on  0=linelevel or 1=wordlevel (default: 0)')], 'deleted': []}",yes
include\tesseract\baseapi.h,include\tesseract\baseapi.h,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -550,6 +550,18 @@ public:
    */
   char *GetAltoText(int page_number);
 
+   /**
+   * Make an XML-formatted string with PAGE markup from the internal
+   * data structures.
+   */
+  char *GetPAGEText(ETEXT_DESC *monitor, int page_number);
+
+  /**
+   * Make an XML-formatted string with PAGE markup from the internal
+   * data structures.
+   */
+  char *GetPAGEText(int page_number);
+
   /**
    * Make a TSV-formatted string from the internal data structures.
    * page_number is 0-based but will appear in the output as 1-based.
","{'added': [(553, '   /**'), (554, '   * Make an XML-formatted string with PAGE markup from the internal'), (555, '   * data structures.'), (556, '   */'), (557, '  char *GetPAGEText(ETEXT_DESC *monitor, int page_number);'), (558, ''), (559, '  /**'), (560, '   * Make an XML-formatted string with PAGE markup from the internal'), (561, '   * data structures.'), (562, '   */'), (563, '  char *GetPAGEText(int page_number);'), (564, '')], 'deleted': []}",yes
include\tesseract\renderer.h,include\tesseract\renderer.h,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -198,6 +198,23 @@ private:
   bool begin_document;
 };
 
+/**
+ * Renders Tesseract output into a PAGE XML text string
+ */
+class TESS_API TessPAGERenderer : public TessResultRenderer {
+public:
+  explicit TessPAGERenderer(const char *outputbase);
+
+protected:
+  bool BeginDocumentHandler() override;
+  bool AddImageHandler(TessBaseAPI *api) override;
+  bool EndDocumentHandler() override;
+
+private:
+  bool begin_document;
+};
+
+
 /**
  * Renders Tesseract output into a TSV string
  */
","{'added': [(201, '/**'), (202, ' * Renders Tesseract output into a PAGE XML text string'), (203, ' */'), (204, 'class TESS_API TessPAGERenderer : public TessResultRenderer {'), (205, 'public:'), (206, '  explicit TessPAGERenderer(const char *outputbase);'), (207, ''), (208, 'protected:'), (209, '  bool BeginDocumentHandler() override;'), (210, '  bool AddImageHandler(TessBaseAPI *api) override;'), (211, '  bool EndDocumentHandler() override;'), (212, ''), (213, 'private:'), (214, '  bool begin_document;'), (215, '};'), (216, ''), (217, '')], 'deleted': []}",yes
src\api\capi.cpp,src\api\capi.cpp,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -68,6 +68,10 @@ TessResultRenderer *TessAltoRendererCreate(const char *outputbase) {
   return new tesseract::TessAltoRenderer(outputbase);
 }
 
+TessResultRenderer *TessPAGERendererCreate(const char *outputbase) {
+  return new tesseract::TessPAGERenderer(outputbase);
+}
+
 TessResultRenderer *TessTsvRendererCreate(const char *outputbase) {
   return new tesseract::TessTsvRenderer(outputbase);
 }
@@ -420,6 +424,10 @@ char *TessBaseAPIGetAltoText(TessBaseAPI *handle, int page_number) {
   return handle->GetAltoText(page_number);
 }
 
+char *TessBaseAPIGetPAGEText(TessBaseAPI *handle, int page_number) {
+  return handle->GetPAGEText(page_number);
+}
+
 char *TessBaseAPIGetTsvText(TessBaseAPI *handle, int page_number) {
   return handle->GetTSVText(page_number);
 }
","{'added': [(71, 'TessResultRenderer *TessPAGERendererCreate(const char *outputbase) {'), (72, '  return new tesseract::TessPAGERenderer(outputbase);'), (73, '}'), (74, ''), (427, 'char *TessBaseAPIGetPAGEText(TessBaseAPI *handle, int page_number) {'), (428, '  return handle->GetPAGEText(page_number);'), (429, '}'), (430, '')], 'deleted': []}",yes
,src\api\pagerenderer.cpp,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,1154 @@
+// File:        pagerenderer.cpp
+// Description: PAGE XML rendering interface
+// Author:      Jan Kamlah
+
+// (C) Copyright 2021
+// Licensed under the Apache License, Version 2.0 (the ""License"");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+// http://www.apache.org/licenses/LICENSE-2.0
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an ""AS IS"" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+#include ""errcode.h"" // for ASSERT_HOST
+#ifdef _WIN32
+#  include ""host.h"" // windows.h for MultiByteToWideChar, ...
+#endif
+#include ""tprintf.h"" // for tprintf
+
+#include <tesseract/baseapi.h>
+#include <tesseract/renderer.h>
+
+#include <ctime>
+#include <iomanip>
+#include <memory>
+#include <regex>
+#include <sstream> // for std::stringstream
+#include <unordered_set>
+
+#include <allheaders.h>
+#if (LIBLEPT_MAJOR_VERSION == 1 && LIBLEPT_MINOR_VERSION >= 83) || \
+    LIBLEPT_MAJOR_VERSION > 1
+#  include <array_internal.h>
+#  include <pix_internal.h>
+#endif
+
+namespace tesseract {
+
+///
+/// Slope and offset between two points
+///
+static void GetSlopeAndOffset(float x0, float y0, float x1, float y1, float *m,
+                              float *b) {
+  float slope;
+
+  slope = ((y1 - y0) / (x1 - x0));
+  *m = slope;
+  *b = y0 - slope * x0;
+}
+
+///
+/// Write coordinates in the form of a points to a stream
+///
+static void AddPointsToPAGE(Pta *pts, std::stringstream &str) {
+  int num_pts;
+
+  str << ""<Coords points=\"""";
+  num_pts = ptaGetCount(pts);
+  for (int p = 0; p < num_pts; ++p) {
+    int x, y;
+    ptaGetIPt(pts, p, &x, &y);
+    if (p != 0) {
+      str << "" "";
+    }
+    str << std::to_string(x) << "","" << std::to_string(y);
+  }
+  str << ""\""/>\n"";
+}
+
+///
+/// Convert bbox information to top and bottom polygon
+///
+static void AddPointToWordPolygon(
+    const ResultIterator *res_it, PageIteratorLevel level, Pta *word_top_pts,
+    Pta *word_bottom_pts, tesseract::WritingDirection writing_direction) {
+  int left, top, right, bottom;
+
+  res_it->BoundingBox(level, &left, &top, &right, &bottom);
+
+  if (writing_direction != WRITING_DIRECTION_TOP_TO_BOTTOM) {
+    ptaAddPt(word_top_pts, left, top);
+    ptaAddPt(word_top_pts, right, top);
+
+    ptaAddPt(word_bottom_pts, left, bottom);
+    ptaAddPt(word_bottom_pts, right, bottom);
+
+  } else {
+    // Transform from ttb to ltr
+    ptaAddPt(word_top_pts, top, right);
+    ptaAddPt(word_top_pts, bottom, right);
+
+    ptaAddPt(word_bottom_pts, top, left);
+    ptaAddPt(word_bottom_pts, bottom, left);
+  }
+}
+
+///
+/// Transpose polygonline, destroy old and return new pts
+///
+Pta *TransposePolygonline(Pta *pts) {
+  Pta *pts_transposed;
+
+  pts_transposed = ptaTranspose(pts);
+  ptaDestroy(&pts);
+  return pts_transposed;
+}
+
+///
+/// Reverse polygonline, destroy old and return new pts
+///
+Pta *ReversePolygonline(Pta *pts, int type) {
+  Pta *pts_reversed;
+
+  pts_reversed = ptaReverse(pts, type);
+  ptaDestroy(&pts);
+  return pts_reversed;
+}
+
+///
+/// Destroy old and create new pts
+///
+Pta *DestroyAndCreatePta(Pta *pts) {
+  ptaDestroy(&pts);
+  return ptaCreate(0);
+}
+
+///
+/// Recalculate linepolygon
+/// Create a hull for overlapping areas
+///
+Pta *RecalcPolygonline(Pta *pts, bool upper) {
+  int num_pts, num_bin, index = 0;
+  int y, x0, y0, x1, y1;
+  float x_min, y_min, x_max, y_max;
+  NUMA *bin_line;
+  Pta *pts_recalc;
+
+  ptaGetMinMax(pts, &x_min, &y_min, &x_max, &y_max);
+  num_bin = x_max - x_min;
+  bin_line = numaCreate(num_bin + 1);
+
+  for (int p = 0; p <= num_bin; ++p) {
+    bin_line->array[p] = -1.;
+  }
+
+  num_pts = ptaGetCount(pts);
+
+  if (num_pts == 2) {
+    pts_recalc = ptaCopy(pts);
+    ptaDestroy(&pts);
+    return pts_recalc;
+  }
+
+  do {
+    ptaGetIPt(pts, index, &x0, &y0);
+    ptaGetIPt(pts, index + 1, &x1, &y1);
+    for (int p = x0 - x_min; p <= x1 - x_min; ++p) {
+      if (!upper) {
+        if (bin_line->array[p] == -1. || y0 > bin_line->array[p]) {
+          bin_line->array[p] = y0;
+        }
+      } else {
+        if (bin_line->array[p] == -1. || y0 < bin_line->array[p]) {
+          bin_line->array[p] = y0;
+        }
+      }
+    }
+    index += 2;
+  } while (index < num_pts - 1);
+
+  pts_recalc = ptaCreate(0);
+
+  for (int p = 0; p <= num_bin; ++p) {
+    if (p == 0) {
+      y = bin_line->array[p];
+      ptaAddPt(pts_recalc, x_min + p, y);
+    } else if (p == num_bin) {
+      ptaAddPt(pts_recalc, x_min + p, y);
+      break;
+    } else if (y != bin_line->array[p]) {
+      if (y != -1.) {
+        ptaAddPt(pts_recalc, x_min + p, y);
+      }
+      y = bin_line->array[p];
+      if (y != -1.) {
+        ptaAddPt(pts_recalc, x_min + p, y);
+      }
+    }
+  }
+
+  ptaDestroy(&pts);
+  return pts_recalc;
+}
+
+///
+/// Create a rectangle hull around a single line
+///
+Pta *PolygonToBoxCoords(Pta *pts) {
+  Pta *pts_box;
+  float x_min, y_min, x_max, y_max;
+
+  pts_box = ptaCreate(0);
+  ptaGetMinMax(pts, &x_min, &y_min, &x_max, &y_max);
+  ptaAddPt(pts_box, x_min, y_min);
+  ptaAddPt(pts_box, x_max, y_min);
+  ptaAddPt(pts_box, x_max, y_max);
+  ptaAddPt(pts_box, x_min, y_max);
+  ptaDestroy(&pts);
+  return pts_box;
+}
+
+///
+/// Create a rectangle polygon round the existing multiple lines
+///
+static void UpdateBlockPoints(Pta *block_top_pts, Pta *block_bottom_pts,
+                              Pta *line_top_pts, Pta *line_bottom_pts, int lcnt,
+                              int last_word_in_cblock) {
+  int num_pts;
+  int x, y;
+
+  // Create a hull around all lines
+  if (lcnt == 0 && last_word_in_cblock) {
+    ptaJoin(block_top_pts, line_top_pts, 0, -1);
+    ptaJoin(block_bottom_pts, line_bottom_pts, 0, -1);
+  } else if (lcnt == 0) {
+    ptaJoin(block_top_pts, line_top_pts, 0, -1);
+    num_pts = ptaGetCount(line_bottom_pts);
+    ptaGetIPt(line_bottom_pts, num_pts - 1, &x, &y);
+    ptaAddPt(block_top_pts, x, y);
+    ptaGetIPt(line_bottom_pts, 0, &x, &y);
+    ptaAddPt(block_bottom_pts, x, y);
+  } else if (last_word_in_cblock) {
+    ptaGetIPt(line_top_pts, 0, &x, &y);
+    ptaAddPt(block_bottom_pts, x, y);
+    ptaJoin(block_bottom_pts, line_bottom_pts, 0, -1);
+    num_pts = ptaGetCount(line_top_pts);
+    ptaGetIPt(line_top_pts, num_pts - 1, &x, &y);
+    ptaAddPt(block_top_pts, x, y);
+  } else {
+    ptaGetIPt(line_top_pts, 0, &x, &y);
+    ptaAddPt(block_bottom_pts, x, y);
+    ptaGetIPt(line_bottom_pts, 0, &x, &y);
+    ptaAddPt(block_bottom_pts, x, y);
+    num_pts = ptaGetCount(line_top_pts);
+    ptaGetIPt(line_top_pts, num_pts - 1, &x, &y);
+    ptaAddPt(block_top_pts, x, y);
+    num_pts = ptaGetCount(line_bottom_pts);
+    ptaGetIPt(line_bottom_pts, num_pts - 1, &x, &y);
+    ptaAddPt(block_top_pts, x, y);
+  };
+}
+
+///
+/// Simplify polygonlines (only expanding not shrinking) (Due to recalculation
+/// currently not necessary)
+///
+static void SimplifyLinePolygon(Pta *polyline, int tolerance, bool upper) {
+  int x0, y0, x1, y1, x2, y2, x3, y3, index = 1;
+  float m, b, y_min, y_max;
+
+  while (index <= polyline->n - 2) {
+    ptaGetIPt(polyline, index - 1, &x0, &y0);
+    ptaGetIPt(polyline, index, &x1, &y1);
+    ptaGetIPt(polyline, index + 1, &x2, &y2);
+    if (index + 2 < polyline->n) {
+      // Delete two point indentations
+      ptaGetIPt(polyline, index + 2, &x3, &y3);
+      if (abs(x3 - x0) <= tolerance * 2) {
+        GetSlopeAndOffset(x0, y0, x3, y3, &m, &b);
+
+        if (upper && (m * x1 + b) < y1 && (m * x2 + b) < y2) {
+          ptaRemovePt(polyline, index + 1);
+          ptaRemovePt(polyline, index);
+          continue;
+        } else if (!upper && (m * x1 + b) > y1 && (m * x2 + b) > y2) {
+          ptaRemovePt(polyline, index + 1);
+          ptaRemovePt(polyline, index);
+          continue;
+        }
+      }
+    }
+    // Delete one point indentations
+    if (abs(y0 - y1) <= tolerance && abs(y1 - y2) <= tolerance) {
+      GetSlopeAndOffset(x0, y0, x2, y2, &m, &b);
+      if (upper && (m * x1 + b) <= y1) {
+        ptaRemovePt(polyline, index);
+        continue;
+      } else if (!upper && (m * x1 + b) >= y1) {
+        ptaRemovePt(polyline, index);
+        continue;
+      }
+    }
+    // Delete near by points
+    if (x1 != x0 && abs(y1 - y0) < 4 && abs(x1 - x0) <= tolerance) {
+      if (upper) {
+        y_min = std::min(y0, y1);
+        GetSlopeAndOffset(x0, y_min, x2, y2, &m, &b);
+        if ((m * x1 + b) <= y1) {
+          polyline->y[index - 1] = std::min(y0, y1);
+          ptaRemovePt(polyline, index);
+          continue;
+        }
+      } else {
+        y_max = std::max(y0, y1);
+        GetSlopeAndOffset(x0, y_max, x2, y2, &m, &b);
+        if ((m * x1 + b) >= y1) {
+          polyline->y[index - 1] = y_max;
+          ptaRemovePt(polyline, index);
+          continue;
+        }
+      }
+    }
+    index++;
+  }
+}
+
+///
+/// Directly write bounding box information as coordinates a stream
+///
+static void AddBoxToPAGE(const ResultIterator *it, PageIteratorLevel level,
+                         std::stringstream &page_str) {
+  int left, top, right, bottom;
+
+  it->BoundingBox(level, &left, &top, &right, &bottom);
+  page_str << ""<Coords points=\"""" << left << "","" << top << "" "" << right << "",""
+           << top << "" "" << right << "","" << bottom << "" "" << left << "",""
+           << bottom << ""\""/>\n"";
+}
+
+///
+/// Join ltr and rtl polygon information
+///
+static void AppendLinePolygon(Pta *pts_ltr, Pta *pts_rtl, Pta *ptss,
+                              tesseract::WritingDirection writing_direction) {
+  // If writing direction is NOT right-to-left, handle the left-to-right case.
+  if (writing_direction != WRITING_DIRECTION_RIGHT_TO_LEFT) {
+    if (ptaGetCount(pts_rtl) != 0) {
+      ptaJoin(pts_ltr, pts_rtl, 0, -1);
+      DestroyAndCreatePta(pts_rtl);
+    }
+    ptaJoin(pts_ltr, ptss, 0, -1);
+  } else {
+    // For right-to-left, work with a copy of ptss initially.
+    PTA *ptsd = ptaCopy(ptss);
+    if (ptaGetCount(pts_rtl) != 0) {
+      ptaJoin(ptsd, pts_rtl, 0, -1);
+    }
+    ptaDestroy(&pts_rtl);
+    ptaCopy(ptsd);
+  }
+}
+
+///
+/// Convert baseline to points and add to polygon
+///
+static void AddBaselineToPTA(const ResultIterator *it, PageIteratorLevel level,
+                             Pta *baseline_pts) {
+  int x1, y1, x2, y2;
+
+  it->Baseline(level, &x1, &y1, &x2, &y2);
+  ptaAddPt(baseline_pts, x1, y1);
+  ptaAddPt(baseline_pts, x2, y2);
+}
+
+///
+/// Directly write baseline information as baseline points a stream
+///
+static void AddBaselinePtsToPAGE(Pta *baseline_pts, std::stringstream &str) {
+  int x, y, num_pts = baseline_pts->n;
+
+  str << ""<Baseline points=\"""";
+  for (int p = 0; p < num_pts; ++p) {
+    ptaGetIPt(baseline_pts, p, &x, &y);
+    if (p != 0) {
+      str << "" "";
+    }
+    str << std::to_string(x) << "","" << std::to_string(y);
+  }
+  str << ""\""/>\n"";
+}
+
+///
+/// Sort baseline points ascending and deleting duplicates
+///
+Pta *SortBaseline(Pta *baseline_pts,
+                  tesseract::WritingDirection writing_direction) {
+  int num_pts, index = 0;
+  float x0, y0, x1, y1;
+  Pta *sorted_baseline_pts;
+
+  sorted_baseline_pts =
+      ptaSort(baseline_pts, L_SORT_BY_X, L_SORT_INCREASING, NULL);
+
+  do {
+    ptaGetPt(sorted_baseline_pts, index, &x0, &y0);
+    ptaGetPt(sorted_baseline_pts, index + 1, &x1, &y1);
+    if (x0 >= x1) {
+      sorted_baseline_pts->y[index] = std::min(y0, y1);
+      ptaRemovePt(sorted_baseline_pts, index + 1);
+    } else {
+      index++;
+    }
+    num_pts = ptaGetCount(sorted_baseline_pts);
+  } while (index < num_pts - 1);
+
+  ptaDestroy(&baseline_pts);
+  return sorted_baseline_pts;
+}
+
+///
+/// Clip baseline to range of the exsitings polygon and simplifies the baseline
+/// linepolygon
+///
+Pta *ClipAndSimplifyBaseline(Pta *bottom_pts, Pta *baseline_pts,
+                             tesseract::WritingDirection writing_direction) {
+  int num_pts;
+  float m, b, x0, y0, x1, y1;
+  float x_min, y_min, x_max, y_max;
+  Pta *baseline_clipped_pts;
+
+  ptaGetMinMax(bottom_pts, &x_min, &y_min, &x_max, &y_max);
+  num_pts = ptaGetCount(baseline_pts);
+  baseline_clipped_pts = ptaCreate(0);
+
+  // Clip Baseline
+  for (int p = 0; p < num_pts; ++p) {
+    ptaGetPt(baseline_pts, p, &x0, &y0);
+    if (x0 < x_min) {
+      if (p + 1 < num_pts) {
+        ptaGetPt(baseline_pts, p + 1, &x1, &y1);
+        if (x1 < x_min) {
+          continue;
+        } else {
+          GetSlopeAndOffset(x0, y0, x1, y1, &m, &b);
+          y0 = int(x_min * m + b);
+          x0 = x_min;
+        }
+      }
+    } else if (x0 > x_max) {
+      if (ptaGetCount(baseline_clipped_pts) > 0 && p > 0) {
+        ptaGetPt(baseline_pts, p - 1, &x1, &y1);
+        // See comment above
+        GetSlopeAndOffset(x1, y1, x0, y0, &m, &b);
+        y0 = int(x_max * m + b);
+        x0 = x_max;
+        ptaAddPt(baseline_clipped_pts, x0, y0);
+        break;
+      }
+    }
+    ptaAddPt(baseline_clipped_pts, x0, y0);
+  }
+  if (writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM) {
+    SimplifyLinePolygon(baseline_clipped_pts, 3, 0);
+  } else {
+    SimplifyLinePolygon(baseline_clipped_pts, 3, 1);
+  }
+  SimplifyLinePolygon(
+      baseline_clipped_pts, 3,
+      writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM ? 0 : 1);
+
+  // Check the number of points in baseline_clipped_pts after processing
+  int clipped_pts_count = ptaGetCount(baseline_clipped_pts);
+
+  if (clipped_pts_count < 2) {
+    // If there's only one point in baseline_clipped_pts, duplicate it
+    ptaDestroy(&baseline_clipped_pts); // Clean up the created but unused Pta
+    baseline_clipped_pts = ptaCreate(0);
+    ptaAddPt(baseline_clipped_pts, x_min, y_min);
+    ptaAddPt(baseline_clipped_pts, x_max, y_min);
+  }
+
+  return baseline_clipped_pts;
+}
+
+///
+/// Fit the baseline points into the existings polygon
+///
+Pta *FitBaselineIntoLinePolygon(Pta *bottom_pts, Pta *baseline_pts,
+                                tesseract::WritingDirection writing_direction) {
+  int num_pts, num_bin, x0, y0, x1, y1;
+  float m, b;
+  float x_min, y_min, x_max, y_max;
+  float delta_median, delta_median_Q1, delta_median_Q3, delta_median_IQR;
+  NUMA *bin_line, *poly_bl_delta;
+  Pta *baseline_recalc_pts, *baseline_clipped_pts;
+
+  ptaGetMinMax(bottom_pts, &x_min, &y_min, &x_max, &y_max);
+  num_bin = x_max - x_min;
+  bin_line = numaCreate(num_bin + 1);
+
+  for (int p = 0; p < num_bin + 1; ++p) {
+    bin_line->array[p] = -1.;
+  }
+
+  num_pts = ptaGetCount(bottom_pts);
+  // Create a interpolated polygon with stepsize 1
+  for (int index = 0; index < num_pts - 1; ++index) {
+    ptaGetIPt(bottom_pts, index, &x0, &y0);
+    ptaGetIPt(bottom_pts, index + 1, &x1, &y1);
+    if (x0 >= x1) {
+      continue;
+    }
+    if (y0 == y1) {
+      for (int p = x0 - x_min; p < x1 - x_min + 1; ++p) {
+        if (bin_line->array[p] == -1. || y0 > bin_line->array[p]) {
+          bin_line->array[p] = y0;
+        }
+      }
+    } else {
+      GetSlopeAndOffset(x0, y0, x1, y1, &m, &b);
+      for (int p = x0 - x_min; p < x1 - x_min + 1; ++p) {
+        if (bin_line->array[p] == -1. ||
+            ((p + x_min) * m + b) > bin_line->array[p]) {
+          bin_line->array[p] = ((p + x_min) * m + b);
+        }
+      }
+    }
+  }
+
+  num_pts = ptaGetCount(baseline_pts);
+  baseline_clipped_pts = ptaCreate(0);
+  poly_bl_delta = numaCreate(0);
+
+  // Clip Baseline and create a set of deltas between baseline and polygon
+  for (int p = 0; p < num_pts; ++p) {
+    ptaGetIPt(baseline_pts, p, &x0, &y0);
+
+    if (x0 < x_min) {
+      ptaGetIPt(baseline_pts, p + 1, &x1, &y1);
+      if (x1 < x_min) {
+        continue;
+      } else {
+        GetSlopeAndOffset(x0, y0, x1, y1, &m, &b);
+        y0 = int(x_min * m + b);
+        x0 = x_min;
+      }
+    } else if (x0 > x_max) {
+      if (ptaGetCount(baseline_clipped_pts) > 0) {
+        ptaGetIPt(baseline_pts, p - 1, &x1, &y1);
+        GetSlopeAndOffset(x1, y1, x0, y0, &m, &b);
+        y0 = int(x_max * m + b);
+        x0 = x_max;
+        int x_val = x0 - x_min;
+        numaAddNumber(poly_bl_delta, abs(bin_line->array[x_val] - y0));
+        ptaAddPt(baseline_clipped_pts, x0, y0);
+        break;
+      }
+    }
+    int x_val = x0 - x_min;
+    numaAddNumber(poly_bl_delta, abs(bin_line->array[x_val] - y0));
+    ptaAddPt(baseline_clipped_pts, x0, y0);
+  }
+
+  ptaDestroy(&baseline_pts);
+
+  // Calculate quartiles to find outliers
+  numaGetMedian(poly_bl_delta, &delta_median);
+  numaGetRankValue(poly_bl_delta, 0.25, NULL, 0, &delta_median_Q1);
+  numaGetRankValue(poly_bl_delta, 0.75, NULL, 0, &delta_median_Q3);
+
+  // Fit baseline into the polygon
+  // Todo: Needs maybe some adjustments to suppress fitting to superscript
+  // glyphs
+  baseline_recalc_pts = ptaCreate(0);
+  num_pts = ptaGetCount(baseline_clipped_pts);
+  for (int p = 0; p < num_pts; ++p) {
+    ptaGetIPt(baseline_clipped_pts, p, &x0, &y0);
+    int x_val = x0 - x_min;
+    // Delete outliers with IQR
+    if (abs(y0 - bin_line->array[x_val]) >
+            1.5 * delta_median_Q3 + delta_median &&
+        p != 0 && p != num_pts - 1) {
+      continue;
+    }
+    if (writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM) {
+      if (y0 < bin_line->array[x_val]) {
+        ptaAddPt(baseline_recalc_pts, x0, bin_line->array[x_val]);
+      } else {
+        ptaAddPt(baseline_recalc_pts, x0, y0);
+      }
+    } else {
+      if (y0 > bin_line->array[x_val]) {
+        ptaAddPt(baseline_recalc_pts, x0, bin_line->array[x_val]);
+      } else {
+        ptaAddPt(baseline_recalc_pts, x0, y0);
+      }
+    }
+  }
+  // Return recalculated baseline if this fails return the bottom line as
+  // baseline
+  ptaDestroy(&baseline_clipped_pts);
+  if (ptaGetCount(baseline_recalc_pts) < 2) {
+    ptaDestroy(&baseline_recalc_pts);
+    return ptaCopy(bottom_pts);
+  } else {
+    return baseline_recalc_pts;
+  }
+}
+
+/// Convert writing direction to string representation
+const char *WritingDirectionToStr(int wd) {
+  switch (wd) {
+    case 0:
+      return ""left-to-right"";
+    case 1:
+      return ""right-to-left"";
+    case 2:
+      return ""top-to-bottom"";
+    default:
+      return ""bottom-to-top"";
+  }
+}
+///
+/// Append the PAGE XML for the beginning of the document
+///
+bool TessPAGERenderer::BeginDocumentHandler() {
+  // Delay the XML output because we need the name of the image file.
+  begin_document = true;
+  return true;
+}
+
+///
+/// Append the PAGE XML for the layout of the image
+///
+bool TessPAGERenderer::AddImageHandler(TessBaseAPI *api) {
+  if (begin_document) {
+    AppendString(
+        ""<?xml version=\""1.0\"" encoding=\""UTF-8\"" standalone=\""yes\""?>\n""
+        ""<PcGts ""
+        ""xmlns=\""http://schema.primaresearch.org/PAGE/gts/pagecontent/""
+        ""2019-07-15\"" ""
+        ""xmlns:xsi=\""http://www.w3.org/2001/XMLSchema-instance\"" ""
+        ""xsi:schemaLocation=\""http://schema.primaresearch.org/PAGE/gts/""
+        ""pagecontent/2019-07-15 ""
+        ""http://schema.primaresearch.org/PAGE/gts/pagecontent/2019-07-15/""
+        ""pagecontent.xsd\"">\n""
+        ""\t<Metadata"");
+
+    // If a URL is used to recognize a image add it as <Metadata
+    // externalRef=""url"">
+    if (std::regex_search(api->GetInputName(),
+                          std::regex(""^(https?|ftp|ssh):""))) {
+      AppendString("" externalRef=\"""");
+      AppendString(api->GetInputName());
+      AppendString(""\"" "");
+    }
+
+    AppendString(
+        "">\n""
+        ""\t\t<Creator>Tesseract - "");
+    AppendString(TESSERACT_VERSION_STR);
+    // If gmtime conversion is problematic maybe l_getFormattedDate can be used
+    // here
+    // char *datestr = l_getFormattedDate();
+    std::time_t now = std::time(nullptr);
+    std::tm *now_tm = std::gmtime(&now);
+    char mbstr[100];
+    std::strftime(mbstr, sizeof(mbstr), ""%Y-%m-%dT%H:%M:%S"", now_tm);
+    AppendString(
+        ""</Creator>\n""
+        ""\t\t<Created>"");
+    AppendString(mbstr);
+    AppendString(""</Created>\n"");
+    AppendString(""\t\t<LastChange>"");
+    AppendString(mbstr);
+    AppendString(
+        ""</LastChange>\n""
+        ""\t</Metadata>\n"");
+    begin_document = false;
+  }
+
+  const std::unique_ptr<const char[]> text(api->GetPAGEText(imagenum()));
+  if (text == nullptr) {
+    return false;
+  }
+
+  AppendString(text.get());
+
+  return true;
+}
+
+///
+/// Append the PAGE XML for the end of the document
+///
+bool TessPAGERenderer::EndDocumentHandler() {
+  AppendString(""\t\t</Page>\n</PcGts>\n"");
+  return true;
+}
+
+TessPAGERenderer::TessPAGERenderer(const char *outputbase)
+    : TessResultRenderer(outputbase, ""page.xml""), begin_document(false) {}
+
+///
+/// Make an XML-formatted string with PAGE markup from the internal
+/// data structures.
+///
+char *TessBaseAPI::GetPAGEText(int page_number) {
+  return GetPAGEText(nullptr, page_number);
+}
+
+///
+/// Make an XML-formatted string with PAGE markup from the internal
+/// data structures.
+///
+char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {
+  if (tesseract_ == nullptr ||
+      (page_res_ == nullptr && Recognize(monitor) < 0)) {
+    return nullptr;
+  }
+
+  int rcnt = 0, lcnt = 0, wcnt = 0;
+
+  if (input_file_.empty()) {
+    SetInputName(nullptr);
+  }
+
+#ifdef _WIN32
+  // convert input name from ANSI encoding to utf-8
+  int str16_len =
+      MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, nullptr, 0);
+  wchar_t *uni16_str = new WCHAR[str16_len];
+  str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, uni16_str,
+                                  str16_len);
+  int utf8_len = WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, nullptr,
+                                     0, nullptr, nullptr);
+  char *utf8_str = new char[utf8_len];
+  WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, utf8_str, utf8_len,
+                      nullptr, nullptr);
+  input_file_ = utf8_str;
+  delete[] uni16_str;
+  delete[] utf8_str;
+#endif
+
+  // Used variables
+
+  std::stringstream reading_order_str;
+  std::stringstream region_content;
+  std::stringstream line_content;
+  std::stringstream word_content;
+  std::stringstream line_str;
+  std::stringstream line_inter_str;
+  std::stringstream word_str;
+  std::stringstream page_str;
+
+  float x1, y1, x2, y2, word_conf, line_conf, block_conf;
+
+  tesseract::Orientation orientation_block;
+  tesseract::Orientation orientation_line;
+  tesseract::WritingDirection writing_direction_block;
+  tesseract::TextlineOrder textline_order_block;
+
+  Pta *block_top_pts = ptaCreate(0);
+  Pta *block_bottom_pts = ptaCreate(0);
+  Pta *line_top_ltr_pts = ptaCreate(0);
+  Pta *line_bottom_ltr_pts = ptaCreate(0);
+  Pta *line_top_rtl_pts = ptaCreate(0);
+  Pta *line_bottom_rtl_pts = ptaCreate(0);
+  Pta *word_top_pts = ptaCreate(0);
+  Pta *word_bottom_pts = ptaCreate(0);
+  Pta *word_baseline_pts = ptaCreate(0);
+  Pta *line_baseline_rtl_pts = ptaCreate(0);
+  Pta *line_baseline_ltr_pts = ptaCreate(0);
+  Pta *line_baseline_pts = ptaCreate(0);
+
+  bool POLYGONFLAG;
+  GetBoolVariable(""page_xml_polygon"", &POLYGONFLAG);
+  int LEVELFLAG;
+  GetIntVariable(""page_xml_level"", &LEVELFLAG);
+
+  if (LEVELFLAG != 0 && LEVELFLAG != 1) {
+    tprintf(
+        ""For now, only line level and word level are available, and the level ""
+        ""is reset to line level.\n"");
+    LEVELFLAG = 0;
+  }
+
+  // Use ""C"" locale (needed for int values larger than 999).
+  page_str.imbue(std::locale::classic());
+  reading_order_str << ""\t<Page "" << ""imageFilename=\"""" << GetInputName();
+  // AppendString(api->GetInputName());
+  reading_order_str << ""\"" "" << ""imageWidth=\"""" << rect_width_ << ""\"" ""
+                    << ""imageHeight=\"""" << rect_height_ << ""\"">\n"";
+  std::size_t ro_id = std::hash<std::string>{}(GetInputName());
+  reading_order_str << ""\t\t<ReadingOrder>\n""
+                    << ""\t\t\t<OrderedGroup id=\""ro"" << ro_id
+                    << ""\"" caption=\""Regions reading order\"">\n"";
+
+  ResultIterator *res_it = GetIterator();
+  while (!res_it->Empty(RIL_BLOCK)) {
+    if (res_it->Empty(RIL_WORD)) {
+      res_it->Next(RIL_WORD);
+      continue;
+    }
+
+    auto block_type = res_it->BlockType();
+
+    switch (block_type) {
+      case PT_FLOWING_IMAGE:
+      case PT_HEADING_IMAGE:
+      case PT_PULLOUT_IMAGE: {
+        // Handle all kinds of images.
+        page_str << ""\t\t<GraphicRegion id=\""r"" << rcnt++ << ""\"">\n"";
+        page_str << ""\t\t\t"";
+        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);
+        page_str << ""\t\t</GraphicRegion>\n"";
+        res_it->Next(RIL_BLOCK);
+        continue;
+      }
+      case PT_HORZ_LINE:
+      case PT_VERT_LINE:
+        // Handle horizontal and vertical lines.
+        page_str << ""\t\t<SeparatorRegion id=\""r"" << rcnt++ << ""\"">\n"";
+        page_str << ""\t\t\t"";
+        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);
+        page_str << ""\t\t</SeparatorRegion>\n"";
+        res_it->Next(RIL_BLOCK);
+        continue;
+      case PT_NOISE:
+        tprintf(""TODO: Please report image which triggers the noise case.\n"");
+        ASSERT_HOST(false);
+      default:
+        break;
+    }
+
+    if (res_it->IsAtBeginningOf(RIL_BLOCK)) {
+      // Add Block to reading order
+      reading_order_str << ""\t\t\t\t<RegionRefIndexed "" << ""index=\"""" << rcnt
+                        << ""\"" "" << ""regionRef=\""r"" << rcnt << ""\""/>\n"";
+
+      float deskew_angle;
+      res_it->Orientation(&orientation_block, &writing_direction_block,
+                          &textline_order_block, &deskew_angle);
+      block_conf = ((res_it->Confidence(RIL_BLOCK)) / 100.);
+      page_str << ""\t\t<TextRegion id=\""r"" << rcnt << ""\"" "" << ""custom=\""""
+               << ""readingOrder {index:"" << rcnt << "";} "";
+      if (writing_direction_block != 0) {
+        page_str << ""readingDirection {""
+                 << WritingDirectionToStr(writing_direction_block) << "";} "";
+      }
+      page_str << ""orientation {"" << orientation_block << "";}\"">\n"";
+      page_str << ""\t\t\t"";
+      if ((!POLYGONFLAG ||
+           (orientation_block != 0 && orientation_block != 2)) &&
+          LEVELFLAG == 0) {
+        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);
+      }
+    }
+
+    // Writing direction changes at a per-word granularity
+    // tesseract::WritingDirection writing_direction_before;
+    tesseract::WritingDirection writing_direction;
+
+    writing_direction = writing_direction_block;
+    if (writing_direction_block != WRITING_DIRECTION_TOP_TO_BOTTOM) {
+      switch (res_it->WordDirection()) {
+        case DIR_LEFT_TO_RIGHT:
+          writing_direction = WRITING_DIRECTION_LEFT_TO_RIGHT;
+          break;
+        case DIR_RIGHT_TO_LEFT:
+          writing_direction = WRITING_DIRECTION_RIGHT_TO_LEFT;
+          break;
+        default:
+          break;
+      }
+    }
+
+    bool ttb_flag = (writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM);
+    // TODO: Rework polygon handling if line is skewed (90 or 180 degress),
+    // for now using LinePts
+    bool skewed_flag = (orientation_block != 0 && orientation_block != 2);
+
+    if (res_it->IsAtBeginningOf(RIL_TEXTLINE)) {
+      // writing_direction_before = writing_direction;
+      line_conf = ((res_it->Confidence(RIL_TEXTLINE)) / 100.);
+      line_content << HOcrEscape(res_it->GetUTF8Text(RIL_TEXTLINE)).c_str();
+      line_str << ""\t\t\t<TextLine id=\""r"" << rcnt << ""l"" << lcnt << ""\"" "";
+      if (writing_direction != 0 &&
+          writing_direction != writing_direction_block) {
+        line_str << ""readingDirection=\""""
+                 << WritingDirectionToStr(writing_direction) << ""\"" "";
+      }
+      line_str << ""custom=\"""" << ""readingOrder {index:"" << lcnt << "";}\"">\n"";
+      // If level is linebased, get the line polygon and baseline
+      if (LEVELFLAG == 0 && (!POLYGONFLAG || skewed_flag)) {
+        AddPointToWordPolygon(res_it, RIL_TEXTLINE, line_top_ltr_pts,
+                              line_bottom_ltr_pts, writing_direction);
+        AddBaselineToPTA(res_it, RIL_TEXTLINE, line_baseline_pts);
+        if (ttb_flag) {
+          line_baseline_pts = TransposePolygonline(line_baseline_pts);
+        }
+      }
+    }
+
+    // Get information if word is last in line and if its last in the region
+    bool last_word_in_line = res_it->IsAtFinalElement(RIL_TEXTLINE, RIL_WORD);
+    bool last_word_in_cblock = res_it->IsAtFinalElement(RIL_BLOCK, RIL_WORD);
+
+    word_conf = ((res_it->Confidence(RIL_WORD)) / 100.);
+
+    // Create word stream if word level output is active
+    if (LEVELFLAG > 0) {
+      word_str << ""\t\t\t\t<Word id=\""r"" << rcnt << ""l"" << lcnt << ""w"" << wcnt
+               << ""\"" readingDirection=\""""
+               << WritingDirectionToStr(writing_direction) << ""\"" ""
+               << ""custom=\"""" << ""readingOrder {index:"" << wcnt << "";}\"">\n"";
+      if ((!POLYGONFLAG || skewed_flag) || ttb_flag) {
+        AddPointToWordPolygon(res_it, RIL_WORD, word_top_pts, word_bottom_pts,
+                              writing_direction);
+      }
+    }
+
+    if (POLYGONFLAG && !skewed_flag && ttb_flag && LEVELFLAG == 0) {
+      AddPointToWordPolygon(res_it, RIL_WORD, word_top_pts, word_bottom_pts,
+                            writing_direction);
+    }
+
+    // Get the word baseline information
+    AddBaselineToPTA(res_it, RIL_WORD, word_baseline_pts);
+
+    // Get the word text content and polygon
+    do {
+      const std::unique_ptr<const char[]> grapheme(
+          res_it->GetUTF8Text(RIL_SYMBOL));
+      if (grapheme && grapheme[0] != 0) {
+        word_content << HOcrEscape(grapheme.get()).c_str();
+        if (POLYGONFLAG && !skewed_flag && !ttb_flag) {
+          AddPointToWordPolygon(res_it, RIL_SYMBOL, word_top_pts,
+                                word_bottom_pts, writing_direction);
+        }
+      }
+      res_it->Next(RIL_SYMBOL);
+    } while (!res_it->Empty(RIL_BLOCK) && !res_it->IsAtBeginningOf(RIL_WORD));
+
+    if (LEVELFLAG > 0 || (POLYGONFLAG && !skewed_flag)) {
+      // Sort wordpolygons
+      word_top_pts = RecalcPolygonline(word_top_pts, 1 - ttb_flag);
+      word_bottom_pts = RecalcPolygonline(word_bottom_pts, 0 + ttb_flag);
+
+      // AppendLinePolygon
+      AppendLinePolygon(line_top_ltr_pts, line_top_rtl_pts, word_top_pts,
+                        writing_direction);
+      AppendLinePolygon(line_bottom_ltr_pts, line_bottom_rtl_pts,
+                        word_bottom_pts, writing_direction);
+
+      // Word level polygon
+      word_bottom_pts = ReversePolygonline(word_bottom_pts, 1);
+      ptaJoin(word_top_pts, word_bottom_pts, 0, -1);
+    }
+
+    // Reverse the word baseline direction for rtl
+    if (writing_direction == WRITING_DIRECTION_RIGHT_TO_LEFT) {
+      word_baseline_pts = ReversePolygonline(word_baseline_pts, 1);
+    }
+
+    // Write word information to the output
+    if (LEVELFLAG > 0) {
+      word_str << ""\t\t\t\t\t"";
+      if (ttb_flag) {
+        word_top_pts = TransposePolygonline(word_top_pts);
+      }
+      AddPointsToPAGE(word_top_pts, word_str);
+      word_str << ""\t\t\t\t\t"";
+      AddBaselinePtsToPAGE(word_baseline_pts, word_str);
+      word_str << ""\t\t\t\t\t<TextEquiv index=\""1\"" conf=\""""
+               << std::setprecision(4) << word_conf << ""\"">\n""
+               << ""\t\t\t\t\t\t<Unicode>"" << word_content.str()
+               << ""</Unicode>\n""
+               << ""\t\t\t\t\t</TextEquiv>\n""
+               << ""\t\t\t\t</Word>\n"";
+    }
+    if (LEVELFLAG > 0 || (POLYGONFLAG && !skewed_flag)) {
+      // Add wordbaseline to linebaseline
+      if (ttb_flag) {
+        word_baseline_pts = TransposePolygonline(word_baseline_pts);
+      }
+      ptaJoin(line_baseline_pts, word_baseline_pts, 0, -1);
+    }
+    word_baseline_pts = DestroyAndCreatePta(word_baseline_pts);
+
+    // Reset word pts arrays
+    word_top_pts = DestroyAndCreatePta(word_top_pts);
+    word_bottom_pts = DestroyAndCreatePta(word_bottom_pts);
+
+    // Check why this combination of words is not working as expected!
+    // Write the word contents to the line
+#if 0
+    if (!last_word_in_line && writing_direction_before != writing_direction &&
+        writing_direction < 2 && writing_direction_before < 2 &&
+        res_it->WordDirection()) {
+      if (writing_direction_before == WRITING_DIRECTION_LEFT_TO_RIGHT) {
+        // line_content << ""‏"" << word_content.str();
+      } else {
+        // line_content << ""‎"" << word_content.str();
+      }
+    } else {
+      // line_content << word_content.str();
+    }
+    // Check if WordIsNeutral
+    if (res_it->WordDirection()) {
+      writing_direction_before = writing_direction;
+    }
+#endif
+    word_content.str("""");
+    wcnt++;
+
+    // Write line information to the output
+    if (last_word_in_line) {
+      // Combine ltr and rtl lines
+      if (ptaGetCount(line_top_rtl_pts) != 0) {
+        ptaJoin(line_top_ltr_pts, line_top_rtl_pts, 0, -1);
+        line_top_rtl_pts = DestroyAndCreatePta(line_top_rtl_pts);
+      }
+      if (ptaGetCount(line_bottom_rtl_pts) != 0) {
+        ptaJoin(line_bottom_ltr_pts, line_bottom_rtl_pts, 0, -1);
+        line_bottom_rtl_pts = DestroyAndCreatePta(line_bottom_rtl_pts);
+      }
+      if ((POLYGONFLAG && !skewed_flag) || LEVELFLAG > 0) {
+        // Recalc Polygonlines
+        line_top_ltr_pts = RecalcPolygonline(line_top_ltr_pts, 1 - ttb_flag);
+        line_bottom_ltr_pts =
+            RecalcPolygonline(line_bottom_ltr_pts, 0 + ttb_flag);
+
+        // Smooth the polygonline
+        SimplifyLinePolygon(line_top_ltr_pts, 5, 1 - ttb_flag);
+        SimplifyLinePolygon(line_bottom_ltr_pts, 5, 0 + ttb_flag);
+
+        // Fit linepolygon matching the baselinepoints
+        line_baseline_pts = SortBaseline(line_baseline_pts, writing_direction);
+        // Fitting baseline into polygon is currently deactivated
+        // it tends to push the baseline directly under superscritpts
+        // but the baseline is always inside the polygon maybe it will be useful
+        // for something line_baseline_pts =
+        // FitBaselineIntoLinePolygon(line_bottom_ltr_pts, line_baseline_pts,
+        // writing_direction); and it only cut it to the length and simplifies
+        // the linepolyon
+        line_baseline_pts = ClipAndSimplifyBaseline(
+            line_bottom_ltr_pts, line_baseline_pts, writing_direction);
+
+        // Update polygon of the block
+        UpdateBlockPoints(block_top_pts, block_bottom_pts, line_top_ltr_pts,
+                          line_bottom_ltr_pts, lcnt, last_word_in_cblock);
+      }
+      // Line level polygon
+      line_bottom_ltr_pts = ReversePolygonline(line_bottom_ltr_pts, 1);
+      ptaJoin(line_top_ltr_pts, line_bottom_ltr_pts, 0, -1);
+      line_bottom_ltr_pts = DestroyAndCreatePta(line_bottom_ltr_pts);
+
+      if (LEVELFLAG > 0 && !(POLYGONFLAG && !skewed_flag)) {
+        line_top_ltr_pts = PolygonToBoxCoords(line_top_ltr_pts);
+      }
+
+      // Write level points
+      line_str << ""\t\t\t\t"";
+      if (ttb_flag) {
+        line_top_ltr_pts = TransposePolygonline(line_top_ltr_pts);
+      }
+      AddPointsToPAGE(line_top_ltr_pts, line_str);
+      line_top_ltr_pts = DestroyAndCreatePta(line_top_ltr_pts);
+
+      // Write Baseline
+      line_str << ""\t\t\t\t"";
+      if (ttb_flag) {
+        line_baseline_pts = TransposePolygonline(line_baseline_pts);
+      }
+      AddBaselinePtsToPAGE(line_baseline_pts, line_str);
+      line_baseline_pts = DestroyAndCreatePta(line_baseline_pts);
+
+      // Add word information if word level output is active
+      line_str << word_str.str();
+      word_str.str("""");
+      // Write Line TextEquiv
+      line_str << ""\t\t\t\t<TextEquiv index=\""1\"" conf=\""""
+               << std::setprecision(4) << line_conf << ""\"">\n""
+               << ""\t\t\t\t\t<Unicode>"" << line_content.str() << ""</Unicode>\n""
+               << ""\t\t\t\t</TextEquiv>\n"";
+      line_str << ""\t\t\t</TextLine>\n"";
+      region_content << line_content.str();
+      line_content.str("""");
+      if (!last_word_in_cblock) {
+        region_content << ""\n\t\t\t\t\t"";
+      }
+      lcnt++;
+      wcnt = 0;
+    } else {
+      line_content << "" "";
+    }
+
+    // Write region information to the output
+    if (last_word_in_cblock) {
+      if ((POLYGONFLAG && !skewed_flag) || LEVELFLAG > 0) {
+        page_str << ""<Coords points=\"""";
+        block_bottom_pts = ReversePolygonline(block_bottom_pts, 1);
+        ptaJoin(block_top_pts, block_bottom_pts, 0, -1);
+        if (ttb_flag) {
+          block_top_pts = TransposePolygonline(block_top_pts);
+        }
+        ptaGetMinMax(block_top_pts, &x1, &y1, &x2, &y2);
+        page_str << (l_uint32)x1 << "","" << (l_uint32)y1;
+        page_str << "" "" << (l_uint32)x2 << "","" << (l_uint32)y1;
+        page_str << "" "" << (l_uint32)x2 << "","" << (l_uint32)y2;
+        page_str << "" "" << (l_uint32)x1 << "","" << (l_uint32)y2;
+        page_str << ""\""/>\n"";
+        block_top_pts = DestroyAndCreatePta(block_top_pts);
+        block_bottom_pts = DestroyAndCreatePta(block_bottom_pts);
+      }
+      page_str << line_str.str();
+      line_str.str("""");
+      page_str << ""\t\t\t<TextEquiv index=\""1\"" conf=\"""" << std::setprecision(4)
+               << block_conf << ""\"">\n""
+               << ""\t\t\t\t<Unicode>"" << region_content.str() << ""</Unicode>\n""
+               << ""\t\t\t</TextEquiv>\n"";
+      page_str << ""\t\t</TextRegion>\n"";
+      region_content.str("""");
+      rcnt++;
+      lcnt = 0;
+    }
+  }
+
+  // Destroy all point information
+  ptaDestroy(&block_top_pts);
+  ptaDestroy(&block_bottom_pts);
+  ptaDestroy(&line_top_ltr_pts);
+  ptaDestroy(&line_bottom_ltr_pts);
+  ptaDestroy(&line_top_rtl_pts);
+  ptaDestroy(&line_bottom_rtl_pts);
+  ptaDestroy(&word_top_pts);
+  ptaDestroy(&word_bottom_pts);
+  ptaDestroy(&word_baseline_pts);
+  ptaDestroy(&line_baseline_rtl_pts);
+  ptaDestroy(&line_baseline_ltr_pts);
+  ptaDestroy(&line_baseline_pts);
+
+  reading_order_str << ""\t\t\t</OrderedGroup>\n""
+                    << ""\t\t</ReadingOrder>\n"";
+
+  reading_order_str << page_str.str();
+  page_str.str("""");
+  const std::string &text = reading_order_str.str();
+  reading_order_str.str("""");
+
+  // Allocate memory for result to hold text.length() characters plus a null
+  // terminator Safely copy the string into result, ensuring no overflow strncpy
+  // does not necessarily null-terminate the destination, so do it manually
+  char *result = new char[text.length() + 1];
+  strncpy(result, text.c_str(), text.length());
+  result[text.length()] = '\0';
+
+  delete res_it;
+  return result;
+}
+
+} // namespace tesseract
","{'added': [(1, '// File:        pagerenderer.cpp'), (2, '// Description: PAGE XML rendering interface'), (3, '// Author:      Jan Kamlah'), (4, ''), (5, '// (C) Copyright 2021'), (6, '// Licensed under the Apache License, Version 2.0 (the ""License"");'), (7, '// you may not use this file except in compliance with the License.'), (8, '// You may obtain a copy of the License at'), (9, '// http://www.apache.org/licenses/LICENSE-2.0'), (10, '// Unless required by applicable law or agreed to in writing, software'), (11, '// distributed under the License is distributed on an ""AS IS"" BASIS,'), (12, '// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (13, '// See the License for the specific language governing permissions and'), (14, '// limitations under the License.'), (15, ''), (16, '#include ""errcode.h"" // for ASSERT_HOST'), (17, '#ifdef _WIN32'), (18, '#  include ""host.h"" // windows.h for MultiByteToWideChar, ...'), (19, '#endif'), (20, '#include ""tprintf.h"" // for tprintf'), (21, ''), (22, '#include <tesseract/baseapi.h>'), (23, '#include <tesseract/renderer.h>'), (24, ''), (25, '#include <ctime>'), (26, '#include <iomanip>'), (27, '#include <memory>'), (28, '#include <regex>'), (29, '#include <sstream> // for std::stringstream'), (30, '#include <unordered_set>'), (31, ''), (32, '#include <allheaders.h>'), (33, '#if (LIBLEPT_MAJOR_VERSION == 1 && LIBLEPT_MINOR_VERSION >= 83) || \\'), (34, '    LIBLEPT_MAJOR_VERSION > 1'), (35, '#  include <array_internal.h>'), (36, '#  include <pix_internal.h>'), (37, '#endif'), (38, ''), (39, 'namespace tesseract {'), (40, ''), (41, '///'), (42, '/// Slope and offset between two points'), (43, '///'), (44, 'static void GetSlopeAndOffset(float x0, float y0, float x1, float y1, float *m,'), (45, '                              float *b) {'), (46, '  float slope;'), (47, ''), (48, '  slope = ((y1 - y0) / (x1 - x0));'), (49, '  *m = slope;'), (50, '  *b = y0 - slope * x0;'), (51, '}'), (52, ''), (53, '///'), (54, '/// Write coordinates in the form of a points to a stream'), (55, '///'), (56, 'static void AddPointsToPAGE(Pta *pts, std::stringstream &str) {'), (57, '  int num_pts;'), (58, ''), (59, '  str << ""<Coords points=\\"""";'), (60, '  num_pts = ptaGetCount(pts);'), (61, '  for (int p = 0; p < num_pts; ++p) {'), (62, '    int x, y;'), (63, '    ptaGetIPt(pts, p, &x, &y);'), (64, '    if (p != 0) {'), (65, '      str << "" "";'), (66, '    }'), (67, '    str << std::to_string(x) << "","" << std::to_string(y);'), (68, '  }'), (69, '  str << ""\\""/>\\n"";'), (70, '}'), (71, ''), (72, '///'), (73, '/// Convert bbox information to top and bottom polygon'), (74, '///'), (75, 'static void AddPointToWordPolygon('), (76, '    const ResultIterator *res_it, PageIteratorLevel level, Pta *word_top_pts,'), (77, '    Pta *word_bottom_pts, tesseract::WritingDirection writing_direction) {'), (78, '  int left, top, right, bottom;'), (79, ''), (80, '  res_it->BoundingBox(level, &left, &top, &right, &bottom);'), (81, ''), (82, '  if (writing_direction != WRITING_DIRECTION_TOP_TO_BOTTOM) {'), (83, '    ptaAddPt(word_top_pts, left, top);'), (84, '    ptaAddPt(word_top_pts, right, top);'), (85, ''), (86, '    ptaAddPt(word_bottom_pts, left, bottom);'), (87, '    ptaAddPt(word_bottom_pts, right, bottom);'), (88, ''), (89, '  } else {'), (90, '    // Transform from ttb to ltr'), (91, '    ptaAddPt(word_top_pts, top, right);'), (92, '    ptaAddPt(word_top_pts, bottom, right);'), (93, ''), (94, '    ptaAddPt(word_bottom_pts, top, left);'), (95, '    ptaAddPt(word_bottom_pts, bottom, left);'), (96, '  }'), (97, '}'), (98, ''), (99, '///'), (100, '/// Transpose polygonline, destroy old and return new pts'), (101, '///'), (102, 'Pta *TransposePolygonline(Pta *pts) {'), (103, '  Pta *pts_transposed;'), (104, ''), (105, '  pts_transposed = ptaTranspose(pts);'), (106, '  ptaDestroy(&pts);'), (107, '  return pts_transposed;'), (108, '}'), (109, ''), (110, '///'), (111, '/// Reverse polygonline, destroy old and return new pts'), (112, '///'), (113, 'Pta *ReversePolygonline(Pta *pts, int type) {'), (114, '  Pta *pts_reversed;'), (115, ''), (116, '  pts_reversed = ptaReverse(pts, type);'), (117, '  ptaDestroy(&pts);'), (118, '  return pts_reversed;'), (119, '}'), (120, ''), (121, '///'), (122, '/// Destroy old and create new pts'), (123, '///'), (124, 'Pta *DestroyAndCreatePta(Pta *pts) {'), (125, '  ptaDestroy(&pts);'), (126, '  return ptaCreate(0);'), (127, '}'), (128, ''), (129, '///'), (130, '/// Recalculate linepolygon'), (131, '/// Create a hull for overlapping areas'), (132, '///'), (133, 'Pta *RecalcPolygonline(Pta *pts, bool upper) {'), (134, '  int num_pts, num_bin, index = 0;'), (135, '  int y, x0, y0, x1, y1;'), (136, '  float x_min, y_min, x_max, y_max;'), (137, '  NUMA *bin_line;'), (138, '  Pta *pts_recalc;'), (139, ''), (140, '  ptaGetMinMax(pts, &x_min, &y_min, &x_max, &y_max);'), (141, '  num_bin = x_max - x_min;'), (142, '  bin_line = numaCreate(num_bin + 1);'), (143, ''), (144, '  for (int p = 0; p <= num_bin; ++p) {'), (145, '    bin_line->array[p] = -1.;'), (146, '  }'), (147, ''), (148, '  num_pts = ptaGetCount(pts);'), (149, ''), (150, '  if (num_pts == 2) {'), (151, '    pts_recalc = ptaCopy(pts);'), (152, '    ptaDestroy(&pts);'), (153, '    return pts_recalc;'), (154, '  }'), (155, ''), (156, '  do {'), (157, '    ptaGetIPt(pts, index, &x0, &y0);'), (158, '    ptaGetIPt(pts, index + 1, &x1, &y1);'), (159, '    for (int p = x0 - x_min; p <= x1 - x_min; ++p) {'), (160, '      if (!upper) {'), (161, '        if (bin_line->array[p] == -1. || y0 > bin_line->array[p]) {'), (162, '          bin_line->array[p] = y0;'), (163, '        }'), (164, '      } else {'), (165, '        if (bin_line->array[p] == -1. || y0 < bin_line->array[p]) {'), (166, '          bin_line->array[p] = y0;'), (167, '        }'), (168, '      }'), (169, '    }'), (170, '    index += 2;'), (171, '  } while (index < num_pts - 1);'), (172, ''), (173, '  pts_recalc = ptaCreate(0);'), (174, ''), (175, '  for (int p = 0; p <= num_bin; ++p) {'), (176, '    if (p == 0) {'), (177, '      y = bin_line->array[p];'), (178, '      ptaAddPt(pts_recalc, x_min + p, y);'), (179, '    } else if (p == num_bin) {'), (180, '      ptaAddPt(pts_recalc, x_min + p, y);'), (181, '      break;'), (182, '    } else if (y != bin_line->array[p]) {'), (183, '      if (y != -1.) {'), (184, '        ptaAddPt(pts_recalc, x_min + p, y);'), (185, '      }'), (186, '      y = bin_line->array[p];'), (187, '      if (y != -1.) {'), (188, '        ptaAddPt(pts_recalc, x_min + p, y);'), (189, '      }'), (190, '    }'), (191, '  }'), (192, ''), (193, '  ptaDestroy(&pts);'), (194, '  return pts_recalc;'), (195, '}'), (196, ''), (197, '///'), (198, '/// Create a rectangle hull around a single line'), (199, '///'), (200, 'Pta *PolygonToBoxCoords(Pta *pts) {'), (201, '  Pta *pts_box;'), (202, '  float x_min, y_min, x_max, y_max;'), (203, ''), (204, '  pts_box = ptaCreate(0);'), (205, '  ptaGetMinMax(pts, &x_min, &y_min, &x_max, &y_max);'), (206, '  ptaAddPt(pts_box, x_min, y_min);'), (207, '  ptaAddPt(pts_box, x_max, y_min);'), (208, '  ptaAddPt(pts_box, x_max, y_max);'), (209, '  ptaAddPt(pts_box, x_min, y_max);'), (210, '  ptaDestroy(&pts);'), (211, '  return pts_box;'), (212, '}'), (213, ''), (214, '///'), (215, '/// Create a rectangle polygon round the existing multiple lines'), (216, '///'), (217, 'static void UpdateBlockPoints(Pta *block_top_pts, Pta *block_bottom_pts,'), (218, '                              Pta *line_top_pts, Pta *line_bottom_pts, int lcnt,'), (219, '                              int last_word_in_cblock) {'), (220, '  int num_pts;'), (221, '  int x, y;'), (222, ''), (223, '  // Create a hull around all lines'), (224, '  if (lcnt == 0 && last_word_in_cblock) {'), (225, '    ptaJoin(block_top_pts, line_top_pts, 0, -1);'), (226, '    ptaJoin(block_bottom_pts, line_bottom_pts, 0, -1);'), (227, '  } else if (lcnt == 0) {'), (228, '    ptaJoin(block_top_pts, line_top_pts, 0, -1);'), (229, '    num_pts = ptaGetCount(line_bottom_pts);'), (230, '    ptaGetIPt(line_bottom_pts, num_pts - 1, &x, &y);'), (231, '    ptaAddPt(block_top_pts, x, y);'), (232, '    ptaGetIPt(line_bottom_pts, 0, &x, &y);'), (233, '    ptaAddPt(block_bottom_pts, x, y);'), (234, '  } else if (last_word_in_cblock) {'), (235, '    ptaGetIPt(line_top_pts, 0, &x, &y);'), (236, '    ptaAddPt(block_bottom_pts, x, y);'), (237, '    ptaJoin(block_bottom_pts, line_bottom_pts, 0, -1);'), (238, '    num_pts = ptaGetCount(line_top_pts);'), (239, '    ptaGetIPt(line_top_pts, num_pts - 1, &x, &y);'), (240, '    ptaAddPt(block_top_pts, x, y);'), (241, '  } else {'), (242, '    ptaGetIPt(line_top_pts, 0, &x, &y);'), (243, '    ptaAddPt(block_bottom_pts, x, y);'), (244, '    ptaGetIPt(line_bottom_pts, 0, &x, &y);'), (245, '    ptaAddPt(block_bottom_pts, x, y);'), (246, '    num_pts = ptaGetCount(line_top_pts);'), (247, '    ptaGetIPt(line_top_pts, num_pts - 1, &x, &y);'), (248, '    ptaAddPt(block_top_pts, x, y);'), (249, '    num_pts = ptaGetCount(line_bottom_pts);'), (250, '    ptaGetIPt(line_bottom_pts, num_pts - 1, &x, &y);'), (251, '    ptaAddPt(block_top_pts, x, y);'), (252, '  };'), (253, '}'), (254, ''), (255, '///'), (256, '/// Simplify polygonlines (only expanding not shrinking) (Due to recalculation'), (257, '/// currently not necessary)'), (258, '///'), (259, 'static void SimplifyLinePolygon(Pta *polyline, int tolerance, bool upper) {'), (260, '  int x0, y0, x1, y1, x2, y2, x3, y3, index = 1;'), (261, '  float m, b, y_min, y_max;'), (262, ''), (263, '  while (index <= polyline->n - 2) {'), (264, '    ptaGetIPt(polyline, index - 1, &x0, &y0);'), (265, '    ptaGetIPt(polyline, index, &x1, &y1);'), (266, '    ptaGetIPt(polyline, index + 1, &x2, &y2);'), (267, '    if (index + 2 < polyline->n) {'), (268, '      // Delete two point indentations'), (269, '      ptaGetIPt(polyline, index + 2, &x3, &y3);'), (270, '      if (abs(x3 - x0) <= tolerance * 2) {'), (271, '        GetSlopeAndOffset(x0, y0, x3, y3, &m, &b);'), (272, ''), (273, '        if (upper && (m * x1 + b) < y1 && (m * x2 + b) < y2) {'), (274, '          ptaRemovePt(polyline, index + 1);'), (275, '          ptaRemovePt(polyline, index);'), (276, '          continue;'), (277, '        } else if (!upper && (m * x1 + b) > y1 && (m * x2 + b) > y2) {'), (278, '          ptaRemovePt(polyline, index + 1);'), (279, '          ptaRemovePt(polyline, index);'), (280, '          continue;'), (281, '        }'), (282, '      }'), (283, '    }'), (284, '    // Delete one point indentations'), (285, '    if (abs(y0 - y1) <= tolerance && abs(y1 - y2) <= tolerance) {'), (286, '      GetSlopeAndOffset(x0, y0, x2, y2, &m, &b);'), (287, '      if (upper && (m * x1 + b) <= y1) {'), (288, '        ptaRemovePt(polyline, index);'), (289, '        continue;'), (290, '      } else if (!upper && (m * x1 + b) >= y1) {'), (291, '        ptaRemovePt(polyline, index);'), (292, '        continue;'), (293, '      }'), (294, '    }'), (295, '    // Delete near by points'), (296, '    if (x1 != x0 && abs(y1 - y0) < 4 && abs(x1 - x0) <= tolerance) {'), (297, '      if (upper) {'), (298, '        y_min = std::min(y0, y1);'), (299, '        GetSlopeAndOffset(x0, y_min, x2, y2, &m, &b);'), (300, '        if ((m * x1 + b) <= y1) {'), (301, '          polyline->y[index - 1] = std::min(y0, y1);'), (302, '          ptaRemovePt(polyline, index);'), (303, '          continue;'), (304, '        }'), (305, '      } else {'), (306, '        y_max = std::max(y0, y1);'), (307, '        GetSlopeAndOffset(x0, y_max, x2, y2, &m, &b);'), (308, '        if ((m * x1 + b) >= y1) {'), (309, '          polyline->y[index - 1] = y_max;'), (310, '          ptaRemovePt(polyline, index);'), (311, '          continue;'), (312, '        }'), (313, '      }'), (314, '    }'), (315, '    index++;'), (316, '  }'), (317, '}'), (318, ''), (319, '///'), (320, '/// Directly write bounding box information as coordinates a stream'), (321, '///'), (322, 'static void AddBoxToPAGE(const ResultIterator *it, PageIteratorLevel level,'), (323, '                         std::stringstream &page_str) {'), (324, '  int left, top, right, bottom;'), (325, ''), (326, '  it->BoundingBox(level, &left, &top, &right, &bottom);'), (327, '  page_str << ""<Coords points=\\"""" << left << "","" << top << "" "" << right << "",""'), (328, '           << top << "" "" << right << "","" << bottom << "" "" << left << "",""'), (329, '           << bottom << ""\\""/>\\n"";'), (330, '}'), (331, ''), (332, '///'), (333, '/// Join ltr and rtl polygon information'), (334, '///'), (335, 'static void AppendLinePolygon(Pta *pts_ltr, Pta *pts_rtl, Pta *ptss,'), (336, '                              tesseract::WritingDirection writing_direction) {'), (337, '  // If writing direction is NOT right-to-left, handle the left-to-right case.'), (338, '  if (writing_direction != WRITING_DIRECTION_RIGHT_TO_LEFT) {'), (339, '    if (ptaGetCount(pts_rtl) != 0) {'), (340, '      ptaJoin(pts_ltr, pts_rtl, 0, -1);'), (341, '      DestroyAndCreatePta(pts_rtl);'), (342, '    }'), (343, '    ptaJoin(pts_ltr, ptss, 0, -1);'), (344, '  } else {'), (345, '    // For right-to-left, work with a copy of ptss initially.'), (346, '    PTA *ptsd = ptaCopy(ptss);'), (347, '    if (ptaGetCount(pts_rtl) != 0) {'), (348, '      ptaJoin(ptsd, pts_rtl, 0, -1);'), (349, '    }'), (350, '    ptaDestroy(&pts_rtl);'), (351, '    ptaCopy(ptsd);'), (352, '  }'), (353, '}'), (354, ''), (355, '///'), (356, '/// Convert baseline to points and add to polygon'), (357, '///'), (358, 'static void AddBaselineToPTA(const ResultIterator *it, PageIteratorLevel level,'), (359, '                             Pta *baseline_pts) {'), (360, '  int x1, y1, x2, y2;'), (361, ''), (362, '  it->Baseline(level, &x1, &y1, &x2, &y2);'), (363, '  ptaAddPt(baseline_pts, x1, y1);'), (364, '  ptaAddPt(baseline_pts, x2, y2);'), (365, '}'), (366, ''), (367, '///'), (368, '/// Directly write baseline information as baseline points a stream'), (369, '///'), (370, 'static void AddBaselinePtsToPAGE(Pta *baseline_pts, std::stringstream &str) {'), (371, '  int x, y, num_pts = baseline_pts->n;'), (372, ''), (373, '  str << ""<Baseline points=\\"""";'), (374, '  for (int p = 0; p < num_pts; ++p) {'), (375, '    ptaGetIPt(baseline_pts, p, &x, &y);'), (376, '    if (p != 0) {'), (377, '      str << "" "";'), (378, '    }'), (379, '    str << std::to_string(x) << "","" << std::to_string(y);'), (380, '  }'), (381, '  str << ""\\""/>\\n"";'), (382, '}'), (383, ''), (384, '///'), (385, '/// Sort baseline points ascending and deleting duplicates'), (386, '///'), (387, 'Pta *SortBaseline(Pta *baseline_pts,'), (388, '                  tesseract::WritingDirection writing_direction) {'), (389, '  int num_pts, index = 0;'), (390, '  float x0, y0, x1, y1;'), (391, '  Pta *sorted_baseline_pts;'), (392, ''), (393, '  sorted_baseline_pts ='), (394, '      ptaSort(baseline_pts, L_SORT_BY_X, L_SORT_INCREASING, NULL);'), (395, ''), (396, '  do {'), (397, '    ptaGetPt(sorted_baseline_pts, index, &x0, &y0);'), (398, '    ptaGetPt(sorted_baseline_pts, index + 1, &x1, &y1);'), (399, '    if (x0 >= x1) {'), (400, '      sorted_baseline_pts->y[index] = std::min(y0, y1);'), (401, '      ptaRemovePt(sorted_baseline_pts, index + 1);'), (402, '    } else {'), (403, '      index++;'), (404, '    }'), (405, '    num_pts = ptaGetCount(sorted_baseline_pts);'), (406, '  } while (index < num_pts - 1);'), (407, ''), (408, '  ptaDestroy(&baseline_pts);'), (409, '  return sorted_baseline_pts;'), (410, '}'), (411, ''), (412, '///'), (413, '/// Clip baseline to range of the exsitings polygon and simplifies the baseline'), (414, '/// linepolygon'), (415, '///'), (416, 'Pta *ClipAndSimplifyBaseline(Pta *bottom_pts, Pta *baseline_pts,'), (417, '                             tesseract::WritingDirection writing_direction) {'), (418, '  int num_pts;'), (419, '  float m, b, x0, y0, x1, y1;'), (420, '  float x_min, y_min, x_max, y_max;'), (421, '  Pta *baseline_clipped_pts;'), (422, ''), (423, '  ptaGetMinMax(bottom_pts, &x_min, &y_min, &x_max, &y_max);'), (424, '  num_pts = ptaGetCount(baseline_pts);'), (425, '  baseline_clipped_pts = ptaCreate(0);'), (426, ''), (427, '  // Clip Baseline'), (428, '  for (int p = 0; p < num_pts; ++p) {'), (429, '    ptaGetPt(baseline_pts, p, &x0, &y0);'), (430, '    if (x0 < x_min) {'), (431, '      if (p + 1 < num_pts) {'), (432, '        ptaGetPt(baseline_pts, p + 1, &x1, &y1);'), (433, '        if (x1 < x_min) {'), (434, '          continue;'), (435, '        } else {'), (436, '          GetSlopeAndOffset(x0, y0, x1, y1, &m, &b);'), (437, '          y0 = int(x_min * m + b);'), (438, '          x0 = x_min;'), (439, '        }'), (440, '      }'), (441, '    } else if (x0 > x_max) {'), (442, '      if (ptaGetCount(baseline_clipped_pts) > 0 && p > 0) {'), (443, '        ptaGetPt(baseline_pts, p - 1, &x1, &y1);'), (444, '        // See comment above'), (445, '        GetSlopeAndOffset(x1, y1, x0, y0, &m, &b);'), (446, '        y0 = int(x_max * m + b);'), (447, '        x0 = x_max;'), (448, '        ptaAddPt(baseline_clipped_pts, x0, y0);'), (449, '        break;'), (450, '      }'), (451, '    }'), (452, '    ptaAddPt(baseline_clipped_pts, x0, y0);'), (453, '  }'), (454, '  if (writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM) {'), (455, '    SimplifyLinePolygon(baseline_clipped_pts, 3, 0);'), (456, '  } else {'), (457, '    SimplifyLinePolygon(baseline_clipped_pts, 3, 1);'), (458, '  }'), (459, '  SimplifyLinePolygon('), (460, '      baseline_clipped_pts, 3,'), (461, '      writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM ? 0 : 1);'), (462, ''), (463, '  // Check the number of points in baseline_clipped_pts after processing'), (464, '  int clipped_pts_count = ptaGetCount(baseline_clipped_pts);'), (465, ''), (466, '  if (clipped_pts_count < 2) {'), (467, ""    // If there's only one point in baseline_clipped_pts, duplicate it""), (468, '    ptaDestroy(&baseline_clipped_pts); // Clean up the created but unused Pta'), (469, '    baseline_clipped_pts = ptaCreate(0);'), (470, '    ptaAddPt(baseline_clipped_pts, x_min, y_min);'), (471, '    ptaAddPt(baseline_clipped_pts, x_max, y_min);'), (472, '  }'), (473, ''), (474, '  return baseline_clipped_pts;'), (475, '}'), (476, ''), (477, '///'), (478, '/// Fit the baseline points into the existings polygon'), (479, '///'), (480, 'Pta *FitBaselineIntoLinePolygon(Pta *bottom_pts, Pta *baseline_pts,'), (481, '                                tesseract::WritingDirection writing_direction) {'), (482, '  int num_pts, num_bin, x0, y0, x1, y1;'), (483, '  float m, b;'), (484, '  float x_min, y_min, x_max, y_max;'), (485, '  float delta_median, delta_median_Q1, delta_median_Q3, delta_median_IQR;'), (486, '  NUMA *bin_line, *poly_bl_delta;'), (487, '  Pta *baseline_recalc_pts, *baseline_clipped_pts;'), (488, ''), (489, '  ptaGetMinMax(bottom_pts, &x_min, &y_min, &x_max, &y_max);'), (490, '  num_bin = x_max - x_min;'), (491, '  bin_line = numaCreate(num_bin + 1);'), (492, ''), (493, '  for (int p = 0; p < num_bin + 1; ++p) {'), (494, '    bin_line->array[p] = -1.;'), (495, '  }'), (496, ''), (497, '  num_pts = ptaGetCount(bottom_pts);'), (498, '  // Create a interpolated polygon with stepsize 1'), (499, '  for (int index = 0; index < num_pts - 1; ++index) {'), (500, '    ptaGetIPt(bottom_pts, index, &x0, &y0);'), (501, '    ptaGetIPt(bottom_pts, index + 1, &x1, &y1);'), (502, '    if (x0 >= x1) {'), (503, '      continue;'), (504, '    }'), (505, '    if (y0 == y1) {'), (506, '      for (int p = x0 - x_min; p < x1 - x_min + 1; ++p) {'), (507, '        if (bin_line->array[p] == -1. || y0 > bin_line->array[p]) {'), (508, '          bin_line->array[p] = y0;'), (509, '        }'), (510, '      }'), (511, '    } else {'), (512, '      GetSlopeAndOffset(x0, y0, x1, y1, &m, &b);'), (513, '      for (int p = x0 - x_min; p < x1 - x_min + 1; ++p) {'), (514, '        if (bin_line->array[p] == -1. ||'), (515, '            ((p + x_min) * m + b) > bin_line->array[p]) {'), (516, '          bin_line->array[p] = ((p + x_min) * m + b);'), (517, '        }'), (518, '      }'), (519, '    }'), (520, '  }'), (521, ''), (522, '  num_pts = ptaGetCount(baseline_pts);'), (523, '  baseline_clipped_pts = ptaCreate(0);'), (524, '  poly_bl_delta = numaCreate(0);'), (525, ''), (526, '  // Clip Baseline and create a set of deltas between baseline and polygon'), (527, '  for (int p = 0; p < num_pts; ++p) {'), (528, '    ptaGetIPt(baseline_pts, p, &x0, &y0);'), (529, ''), (530, '    if (x0 < x_min) {'), (531, '      ptaGetIPt(baseline_pts, p + 1, &x1, &y1);'), (532, '      if (x1 < x_min) {'), (533, '        continue;'), (534, '      } else {'), (535, '        GetSlopeAndOffset(x0, y0, x1, y1, &m, &b);'), (536, '        y0 = int(x_min * m + b);'), (537, '        x0 = x_min;'), (538, '      }'), (539, '    } else if (x0 > x_max) {'), (540, '      if (ptaGetCount(baseline_clipped_pts) > 0) {'), (541, '        ptaGetIPt(baseline_pts, p - 1, &x1, &y1);'), (542, '        GetSlopeAndOffset(x1, y1, x0, y0, &m, &b);'), (543, '        y0 = int(x_max * m + b);'), (544, '        x0 = x_max;'), (545, '        int x_val = x0 - x_min;'), (546, '        numaAddNumber(poly_bl_delta, abs(bin_line->array[x_val] - y0));'), (547, '        ptaAddPt(baseline_clipped_pts, x0, y0);'), (548, '        break;'), (549, '      }'), (550, '    }'), (551, '    int x_val = x0 - x_min;'), (552, '    numaAddNumber(poly_bl_delta, abs(bin_line->array[x_val] - y0));'), (553, '    ptaAddPt(baseline_clipped_pts, x0, y0);'), (554, '  }'), (555, ''), (556, '  ptaDestroy(&baseline_pts);'), (557, ''), (558, '  // Calculate quartiles to find outliers'), (559, '  numaGetMedian(poly_bl_delta, &delta_median);'), (560, '  numaGetRankValue(poly_bl_delta, 0.25, NULL, 0, &delta_median_Q1);'), (561, '  numaGetRankValue(poly_bl_delta, 0.75, NULL, 0, &delta_median_Q3);'), (562, ''), (563, '  // Fit baseline into the polygon'), (564, '  // Todo: Needs maybe some adjustments to suppress fitting to superscript'), (565, '  // glyphs'), (566, '  baseline_recalc_pts = ptaCreate(0);'), (567, '  num_pts = ptaGetCount(baseline_clipped_pts);'), (568, '  for (int p = 0; p < num_pts; ++p) {'), (569, '    ptaGetIPt(baseline_clipped_pts, p, &x0, &y0);'), (570, '    int x_val = x0 - x_min;'), (571, '    // Delete outliers with IQR'), (572, '    if (abs(y0 - bin_line->array[x_val]) >'), (573, '            1.5 * delta_median_Q3 + delta_median &&'), (574, '        p != 0 && p != num_pts - 1) {'), (575, '      continue;'), (576, '    }'), (577, '    if (writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM) {'), (578, '      if (y0 < bin_line->array[x_val]) {'), (579, '        ptaAddPt(baseline_recalc_pts, x0, bin_line->array[x_val]);'), (580, '      } else {'), (581, '        ptaAddPt(baseline_recalc_pts, x0, y0);'), (582, '      }'), (583, '    } else {'), (584, '      if (y0 > bin_line->array[x_val]) {'), (585, '        ptaAddPt(baseline_recalc_pts, x0, bin_line->array[x_val]);'), (586, '      } else {'), (587, '        ptaAddPt(baseline_recalc_pts, x0, y0);'), (588, '      }'), (589, '    }'), (590, '  }'), (591, '  // Return recalculated baseline if this fails return the bottom line as'), (592, '  // baseline'), (593, '  ptaDestroy(&baseline_clipped_pts);'), (594, '  if (ptaGetCount(baseline_recalc_pts) < 2) {'), (595, '    ptaDestroy(&baseline_recalc_pts);'), (596, '    return ptaCopy(bottom_pts);'), (597, '  } else {'), (598, '    return baseline_recalc_pts;'), (599, '  }'), (600, '}'), (601, ''), (602, '/// Convert writing direction to string representation'), (603, 'const char *WritingDirectionToStr(int wd) {'), (604, '  switch (wd) {'), (605, '    case 0:'), (606, '      return ""left-to-right"";'), (607, '    case 1:'), (608, '      return ""right-to-left"";'), (609, '    case 2:'), (610, '      return ""top-to-bottom"";'), (611, '    default:'), (612, '      return ""bottom-to-top"";'), (613, '  }'), (614, '}'), (615, '///'), (616, '/// Append the PAGE XML for the beginning of the document'), (617, '///'), (618, 'bool TessPAGERenderer::BeginDocumentHandler() {'), (619, '  // Delay the XML output because we need the name of the image file.'), (620, '  begin_document = true;'), (621, '  return true;'), (622, '}'), (623, ''), (624, '///'), (625, '/// Append the PAGE XML for the layout of the image'), (626, '///'), (627, 'bool TessPAGERenderer::AddImageHandler(TessBaseAPI *api) {'), (628, '  if (begin_document) {'), (629, '    AppendString('), (630, '        ""<?xml version=\\""1.0\\"" encoding=\\""UTF-8\\"" standalone=\\""yes\\""?>\\n""'), (631, '        ""<PcGts ""'), (632, '        ""xmlns=\\""http://schema.primaresearch.org/PAGE/gts/pagecontent/""'), (633, '        ""2019-07-15\\"" ""'), (634, '        ""xmlns:xsi=\\""http://www.w3.org/2001/XMLSchema-instance\\"" ""'), (635, '        ""xsi:schemaLocation=\\""http://schema.primaresearch.org/PAGE/gts/""'), (636, '        ""pagecontent/2019-07-15 ""'), (637, '        ""http://schema.primaresearch.org/PAGE/gts/pagecontent/2019-07-15/""'), (638, '        ""pagecontent.xsd\\"">\\n""'), (639, '        ""\\t<Metadata"");'), (640, ''), (641, '    // If a URL is used to recognize a image add it as <Metadata'), (642, '    // externalRef=""url"">'), (643, '    if (std::regex_search(api->GetInputName(),'), (644, '                          std::regex(""^(https?|ftp|ssh):""))) {'), (645, '      AppendString("" externalRef=\\"""");'), (646, '      AppendString(api->GetInputName());'), (647, '      AppendString(""\\"" "");'), (648, '    }'), (649, ''), (650, '    AppendString('), (651, '        "">\\n""'), (652, '        ""\\t\\t<Creator>Tesseract - "");'), (653, '    AppendString(TESSERACT_VERSION_STR);'), (654, '    // If gmtime conversion is problematic maybe l_getFormattedDate can be used'), (655, '    // here'), (656, '    // char *datestr = l_getFormattedDate();'), (657, '    std::time_t now = std::time(nullptr);'), (658, '    std::tm *now_tm = std::gmtime(&now);'), (659, '    char mbstr[100];'), (660, '    std::strftime(mbstr, sizeof(mbstr), ""%Y-%m-%dT%H:%M:%S"", now_tm);'), (661, '    AppendString('), (662, '        ""</Creator>\\n""'), (663, '        ""\\t\\t<Created>"");'), (664, '    AppendString(mbstr);'), (665, '    AppendString(""</Created>\\n"");'), (666, '    AppendString(""\\t\\t<LastChange>"");'), (667, '    AppendString(mbstr);'), (668, '    AppendString('), (669, '        ""</LastChange>\\n""'), (670, '        ""\\t</Metadata>\\n"");'), (671, '    begin_document = false;'), (672, '  }'), (673, ''), (674, '  const std::unique_ptr<const char[]> text(api->GetPAGEText(imagenum()));'), (675, '  if (text == nullptr) {'), (676, '    return false;'), (677, '  }'), (678, ''), (679, '  AppendString(text.get());'), (680, ''), (681, '  return true;'), (682, '}'), (683, ''), (684, '///'), (685, '/// Append the PAGE XML for the end of the document'), (686, '///'), (687, 'bool TessPAGERenderer::EndDocumentHandler() {'), (688, '  AppendString(""\\t\\t</Page>\\n</PcGts>\\n"");'), (689, '  return true;'), (690, '}'), (691, ''), (692, 'TessPAGERenderer::TessPAGERenderer(const char *outputbase)'), (693, '    : TessResultRenderer(outputbase, ""page.xml""), begin_document(false) {}'), (694, ''), (695, '///'), (696, '/// Make an XML-formatted string with PAGE markup from the internal'), (697, '/// data structures.'), (698, '///'), (699, 'char *TessBaseAPI::GetPAGEText(int page_number) {'), (700, '  return GetPAGEText(nullptr, page_number);'), (701, '}'), (702, ''), (703, '///'), (704, '/// Make an XML-formatted string with PAGE markup from the internal'), (705, '/// data structures.'), (706, '///'), (707, 'char *TessBaseAPI::GetPAGEText(ETEXT_DESC *monitor, int page_number) {'), (708, '  if (tesseract_ == nullptr ||'), (709, '      (page_res_ == nullptr && Recognize(monitor) < 0)) {'), (710, '    return nullptr;'), (711, '  }'), (712, ''), (713, '  int rcnt = 0, lcnt = 0, wcnt = 0;'), (714, ''), (715, '  if (input_file_.empty()) {'), (716, '    SetInputName(nullptr);'), (717, '  }'), (718, ''), (719, '#ifdef _WIN32'), (720, '  // convert input name from ANSI encoding to utf-8'), (721, '  int str16_len ='), (722, '      MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, nullptr, 0);'), (723, '  wchar_t *uni16_str = new WCHAR[str16_len];'), (724, '  str16_len = MultiByteToWideChar(CP_ACP, 0, input_file_.c_str(), -1, uni16_str,'), (725, '                                  str16_len);'), (726, '  int utf8_len = WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, nullptr,'), (727, '                                     0, nullptr, nullptr);'), (728, '  char *utf8_str = new char[utf8_len];'), (729, '  WideCharToMultiByte(CP_UTF8, 0, uni16_str, str16_len, utf8_str, utf8_len,'), (730, '                      nullptr, nullptr);'), (731, '  input_file_ = utf8_str;'), (732, '  delete[] uni16_str;'), (733, '  delete[] utf8_str;'), (734, '#endif'), (735, ''), (736, '  // Used variables'), (737, ''), (738, '  std::stringstream reading_order_str;'), (739, '  std::stringstream region_content;'), (740, '  std::stringstream line_content;'), (741, '  std::stringstream word_content;'), (742, '  std::stringstream line_str;'), (743, '  std::stringstream line_inter_str;'), (744, '  std::stringstream word_str;'), (745, '  std::stringstream page_str;'), (746, ''), (747, '  float x1, y1, x2, y2, word_conf, line_conf, block_conf;'), (748, ''), (749, '  tesseract::Orientation orientation_block;'), (750, '  tesseract::Orientation orientation_line;'), (751, '  tesseract::WritingDirection writing_direction_block;'), (752, '  tesseract::TextlineOrder textline_order_block;'), (753, ''), (754, '  Pta *block_top_pts = ptaCreate(0);'), (755, '  Pta *block_bottom_pts = ptaCreate(0);'), (756, '  Pta *line_top_ltr_pts = ptaCreate(0);'), (757, '  Pta *line_bottom_ltr_pts = ptaCreate(0);'), (758, '  Pta *line_top_rtl_pts = ptaCreate(0);'), (759, '  Pta *line_bottom_rtl_pts = ptaCreate(0);'), (760, '  Pta *word_top_pts = ptaCreate(0);'), (761, '  Pta *word_bottom_pts = ptaCreate(0);'), (762, '  Pta *word_baseline_pts = ptaCreate(0);'), (763, '  Pta *line_baseline_rtl_pts = ptaCreate(0);'), (764, '  Pta *line_baseline_ltr_pts = ptaCreate(0);'), (765, '  Pta *line_baseline_pts = ptaCreate(0);'), (766, ''), (767, '  bool POLYGONFLAG;'), (768, '  GetBoolVariable(""page_xml_polygon"", &POLYGONFLAG);'), (769, '  int LEVELFLAG;'), (770, '  GetIntVariable(""page_xml_level"", &LEVELFLAG);'), (771, ''), (772, '  if (LEVELFLAG != 0 && LEVELFLAG != 1) {'), (773, '    tprintf('), (774, '        ""For now, only line level and word level are available, and the level ""'), (775, '        ""is reset to line level.\\n"");'), (776, '    LEVELFLAG = 0;'), (777, '  }'), (778, ''), (779, '  // Use ""C"" locale (needed for int values larger than 999).'), (780, '  page_str.imbue(std::locale::classic());'), (781, '  reading_order_str << ""\\t<Page "" << ""imageFilename=\\"""" << GetInputName();'), (782, '  // AppendString(api->GetInputName());'), (783, '  reading_order_str << ""\\"" "" << ""imageWidth=\\"""" << rect_width_ << ""\\"" ""'), (784, '                    << ""imageHeight=\\"""" << rect_height_ << ""\\"">\\n"";'), (785, '  std::size_t ro_id = std::hash<std::string>{}(GetInputName());'), (786, '  reading_order_str << ""\\t\\t<ReadingOrder>\\n""'), (787, '                    << ""\\t\\t\\t<OrderedGroup id=\\""ro"" << ro_id'), (788, '                    << ""\\"" caption=\\""Regions reading order\\"">\\n"";'), (789, ''), (790, '  ResultIterator *res_it = GetIterator();'), (791, '  while (!res_it->Empty(RIL_BLOCK)) {'), (792, '    if (res_it->Empty(RIL_WORD)) {'), (793, '      res_it->Next(RIL_WORD);'), (794, '      continue;'), (795, '    }'), (796, ''), (797, '    auto block_type = res_it->BlockType();'), (798, ''), (799, '    switch (block_type) {'), (800, '      case PT_FLOWING_IMAGE:'), (801, '      case PT_HEADING_IMAGE:'), (802, '      case PT_PULLOUT_IMAGE: {'), (803, '        // Handle all kinds of images.'), (804, '        page_str << ""\\t\\t<GraphicRegion id=\\""r"" << rcnt++ << ""\\"">\\n"";'), (805, '        page_str << ""\\t\\t\\t"";'), (806, '        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);'), (807, '        page_str << ""\\t\\t</GraphicRegion>\\n"";'), (808, '        res_it->Next(RIL_BLOCK);'), (809, '        continue;'), (810, '      }'), (811, '      case PT_HORZ_LINE:'), (812, '      case PT_VERT_LINE:'), (813, '        // Handle horizontal and vertical lines.'), (814, '        page_str << ""\\t\\t<SeparatorRegion id=\\""r"" << rcnt++ << ""\\"">\\n"";'), (815, '        page_str << ""\\t\\t\\t"";'), (816, '        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);'), (817, '        page_str << ""\\t\\t</SeparatorRegion>\\n"";'), (818, '        res_it->Next(RIL_BLOCK);'), (819, '        continue;'), (820, '      case PT_NOISE:'), (821, '        tprintf(""TODO: Please report image which triggers the noise case.\\n"");'), (822, '        ASSERT_HOST(false);'), (823, '      default:'), (824, '        break;'), (825, '    }'), (826, ''), (827, '    if (res_it->IsAtBeginningOf(RIL_BLOCK)) {'), (828, '      // Add Block to reading order'), (829, '      reading_order_str << ""\\t\\t\\t\\t<RegionRefIndexed "" << ""index=\\"""" << rcnt'), (830, '                        << ""\\"" "" << ""regionRef=\\""r"" << rcnt << ""\\""/>\\n"";'), (831, ''), (832, '      float deskew_angle;'), (833, '      res_it->Orientation(&orientation_block, &writing_direction_block,'), (834, '                          &textline_order_block, &deskew_angle);'), (835, '      block_conf = ((res_it->Confidence(RIL_BLOCK)) / 100.);'), (836, '      page_str << ""\\t\\t<TextRegion id=\\""r"" << rcnt << ""\\"" "" << ""custom=\\""""'), (837, '               << ""readingOrder {index:"" << rcnt << "";} "";'), (838, '      if (writing_direction_block != 0) {'), (839, '        page_str << ""readingDirection {""'), (840, '                 << WritingDirectionToStr(writing_direction_block) << "";} "";'), (841, '      }'), (842, '      page_str << ""orientation {"" << orientation_block << "";}\\"">\\n"";'), (843, '      page_str << ""\\t\\t\\t"";'), (844, '      if ((!POLYGONFLAG ||'), (845, '           (orientation_block != 0 && orientation_block != 2)) &&'), (846, '          LEVELFLAG == 0) {'), (847, '        AddBoxToPAGE(res_it, RIL_BLOCK, page_str);'), (848, '      }'), (849, '    }'), (850, ''), (851, '    // Writing direction changes at a per-word granularity'), (852, '    // tesseract::WritingDirection writing_direction_before;'), (853, '    tesseract::WritingDirection writing_direction;'), (854, ''), (855, '    writing_direction = writing_direction_block;'), (856, '    if (writing_direction_block != WRITING_DIRECTION_TOP_TO_BOTTOM) {'), (857, '      switch (res_it->WordDirection()) {'), (858, '        case DIR_LEFT_TO_RIGHT:'), (859, '          writing_direction = WRITING_DIRECTION_LEFT_TO_RIGHT;'), (860, '          break;'), (861, '        case DIR_RIGHT_TO_LEFT:'), (862, '          writing_direction = WRITING_DIRECTION_RIGHT_TO_LEFT;'), (863, '          break;'), (864, '        default:'), (865, '          break;'), (866, '      }'), (867, '    }'), (868, ''), (869, '    bool ttb_flag = (writing_direction == WRITING_DIRECTION_TOP_TO_BOTTOM);'), (870, '    // TODO: Rework polygon handling if line is skewed (90 or 180 degress),'), (871, '    // for now using LinePts'), (872, '    bool skewed_flag = (orientation_block != 0 && orientation_block != 2);'), (873, ''), (874, '    if (res_it->IsAtBeginningOf(RIL_TEXTLINE)) {'), (875, '      // writing_direction_before = writing_direction;'), (876, '      line_conf = ((res_it->Confidence(RIL_TEXTLINE)) / 100.);'), (877, '      line_content << HOcrEscape(res_it->GetUTF8Text(RIL_TEXTLINE)).c_str();'), (878, '      line_str << ""\\t\\t\\t<TextLine id=\\""r"" << rcnt << ""l"" << lcnt << ""\\"" "";'), (879, '      if (writing_direction != 0 &&'), (880, '          writing_direction != writing_direction_block) {'), (881, '        line_str << ""readingDirection=\\""""'), (882, '                 << WritingDirectionToStr(writing_direction) << ""\\"" "";'), (883, '      }'), (884, '      line_str << ""custom=\\"""" << ""readingOrder {index:"" << lcnt << "";}\\"">\\n"";'), (885, '      // If level is linebased, get the line polygon and baseline'), (886, '      if (LEVELFLAG == 0 && (!POLYGONFLAG || skewed_flag)) {'), (887, '        AddPointToWordPolygon(res_it, RIL_TEXTLINE, line_top_ltr_pts,'), (888, '                              line_bottom_ltr_pts, writing_direction);'), (889, '        AddBaselineToPTA(res_it, RIL_TEXTLINE, line_baseline_pts);'), (890, '        if (ttb_flag) {'), (891, '          line_baseline_pts = TransposePolygonline(line_baseline_pts);'), (892, '        }'), (893, '      }'), (894, '    }'), (895, ''), (896, '    // Get information if word is last in line and if its last in the region'), (897, '    bool last_word_in_line = res_it->IsAtFinalElement(RIL_TEXTLINE, RIL_WORD);'), (898, '    bool last_word_in_cblock = res_it->IsAtFinalElement(RIL_BLOCK, RIL_WORD);'), (899, ''), (900, '    word_conf = ((res_it->Confidence(RIL_WORD)) / 100.);'), (901, ''), (902, '    // Create word stream if word level output is active'), (903, '    if (LEVELFLAG > 0) {'), (904, '      word_str << ""\\t\\t\\t\\t<Word id=\\""r"" << rcnt << ""l"" << lcnt << ""w"" << wcnt'), (905, '               << ""\\"" readingDirection=\\""""'), (906, '               << WritingDirectionToStr(writing_direction) << ""\\"" ""'), (907, '               << ""custom=\\"""" << ""readingOrder {index:"" << wcnt << "";}\\"">\\n"";'), (908, '      if ((!POLYGONFLAG || skewed_flag) || ttb_flag) {'), (909, '        AddPointToWordPolygon(res_it, RIL_WORD, word_top_pts, word_bottom_pts,'), (910, '                              writing_direction);'), (911, '      }'), (912, '    }'), (913, ''), (914, '    if (POLYGONFLAG && !skewed_flag && ttb_flag && LEVELFLAG == 0) {'), (915, '      AddPointToWordPolygon(res_it, RIL_WORD, word_top_pts, word_bottom_pts,'), (916, '                            writing_direction);'), (917, '    }'), (918, ''), (919, '    // Get the word baseline information'), (920, '    AddBaselineToPTA(res_it, RIL_WORD, word_baseline_pts);'), (921, ''), (922, '    // Get the word text content and polygon'), (923, '    do {'), (924, '      const std::unique_ptr<const char[]> grapheme('), (925, '          res_it->GetUTF8Text(RIL_SYMBOL));'), (926, '      if (grapheme && grapheme[0] != 0) {'), (927, '        word_content << HOcrEscape(grapheme.get()).c_str();'), (928, '        if (POLYGONFLAG && !skewed_flag && !ttb_flag) {'), (929, '          AddPointToWordPolygon(res_it, RIL_SYMBOL, word_top_pts,'), (930, '                                word_bottom_pts, writing_direction);'), (931, '        }'), (932, '      }'), (933, '      res_it->Next(RIL_SYMBOL);'), (934, '    } while (!res_it->Empty(RIL_BLOCK) && !res_it->IsAtBeginningOf(RIL_WORD));'), (935, ''), (936, '    if (LEVELFLAG > 0 || (POLYGONFLAG && !skewed_flag)) {'), (937, '      // Sort wordpolygons'), (938, '      word_top_pts = RecalcPolygonline(word_top_pts, 1 - ttb_flag);'), (939, '      word_bottom_pts = RecalcPolygonline(word_bottom_pts, 0 + ttb_flag);'), (940, ''), (941, '      // AppendLinePolygon'), (942, '      AppendLinePolygon(line_top_ltr_pts, line_top_rtl_pts, word_top_pts,'), (943, '                        writing_direction);'), (944, '      AppendLinePolygon(line_bottom_ltr_pts, line_bottom_rtl_pts,'), (945, '                        word_bottom_pts, writing_direction);'), (946, ''), (947, '      // Word level polygon'), (948, '      word_bottom_pts = ReversePolygonline(word_bottom_pts, 1);'), (949, '      ptaJoin(word_top_pts, word_bottom_pts, 0, -1);'), (950, '    }'), (951, ''), (952, '    // Reverse the word baseline direction for rtl'), (953, '    if (writing_direction == WRITING_DIRECTION_RIGHT_TO_LEFT) {'), (954, '      word_baseline_pts = ReversePolygonline(word_baseline_pts, 1);'), (955, '    }'), (956, ''), (957, '    // Write word information to the output'), (958, '    if (LEVELFLAG > 0) {'), (959, '      word_str << ""\\t\\t\\t\\t\\t"";'), (960, '      if (ttb_flag) {'), (961, '        word_top_pts = TransposePolygonline(word_top_pts);'), (962, '      }'), (963, '      AddPointsToPAGE(word_top_pts, word_str);'), (964, '      word_str << ""\\t\\t\\t\\t\\t"";'), (965, '      AddBaselinePtsToPAGE(word_baseline_pts, word_str);'), (966, '      word_str << ""\\t\\t\\t\\t\\t<TextEquiv index=\\""1\\"" conf=\\""""'), (967, '               << std::setprecision(4) << word_conf << ""\\"">\\n""'), (968, '               << ""\\t\\t\\t\\t\\t\\t<Unicode>"" << word_content.str()'), (969, '               << ""</Unicode>\\n""'), (970, '               << ""\\t\\t\\t\\t\\t</TextEquiv>\\n""'), (971, '               << ""\\t\\t\\t\\t</Word>\\n"";'), (972, '    }'), (973, '    if (LEVELFLAG > 0 || (POLYGONFLAG && !skewed_flag)) {'), (974, '      // Add wordbaseline to linebaseline'), (975, '      if (ttb_flag) {'), (976, '        word_baseline_pts = TransposePolygonline(word_baseline_pts);'), (977, '      }'), (978, '      ptaJoin(line_baseline_pts, word_baseline_pts, 0, -1);'), (979, '    }'), (980, '    word_baseline_pts = DestroyAndCreatePta(word_baseline_pts);'), (981, ''), (982, '    // Reset word pts arrays'), (983, '    word_top_pts = DestroyAndCreatePta(word_top_pts);'), (984, '    word_bottom_pts = DestroyAndCreatePta(word_bottom_pts);'), (985, ''), (986, '    // Check why this combination of words is not working as expected!'), (987, '    // Write the word contents to the line'), (988, '#if 0'), (989, '    if (!last_word_in_line && writing_direction_before != writing_direction &&'), (990, '        writing_direction < 2 && writing_direction_before < 2 &&'), (991, '        res_it->WordDirection()) {'), (992, '      if (writing_direction_before == WRITING_DIRECTION_LEFT_TO_RIGHT) {'), (993, '        // line_content << ""\u200f"" << word_content.str();'), (994, '      } else {'), (995, '        // line_content << ""\u200e"" << word_content.str();'), (996, '      }'), (997, '    } else {'), (998, '      // line_content << word_content.str();'), (999, '    }'), (1000, '    // Check if WordIsNeutral'), (1001, '    if (res_it->WordDirection()) {'), (1002, '      writing_direction_before = writing_direction;'), (1003, '    }'), (1004, '#endif'), (1005, '    word_content.str("""");'), (1006, '    wcnt++;'), (1007, ''), (1008, '    // Write line information to the output'), (1009, '    if (last_word_in_line) {'), (1010, '      // Combine ltr and rtl lines'), (1011, '      if (ptaGetCount(line_top_rtl_pts) != 0) {'), (1012, '        ptaJoin(line_top_ltr_pts, line_top_rtl_pts, 0, -1);'), (1013, '        line_top_rtl_pts = DestroyAndCreatePta(line_top_rtl_pts);'), (1014, '      }'), (1015, '      if (ptaGetCount(line_bottom_rtl_pts) != 0) {'), (1016, '        ptaJoin(line_bottom_ltr_pts, line_bottom_rtl_pts, 0, -1);'), (1017, '        line_bottom_rtl_pts = DestroyAndCreatePta(line_bottom_rtl_pts);'), (1018, '      }'), (1019, '      if ((POLYGONFLAG && !skewed_flag) || LEVELFLAG > 0) {'), (1020, '        // Recalc Polygonlines'), (1021, '        line_top_ltr_pts = RecalcPolygonline(line_top_ltr_pts, 1 - ttb_flag);'), (1022, '        line_bottom_ltr_pts ='), (1023, '            RecalcPolygonline(line_bottom_ltr_pts, 0 + ttb_flag);'), (1024, ''), (1025, '        // Smooth the polygonline'), (1026, '        SimplifyLinePolygon(line_top_ltr_pts, 5, 1 - ttb_flag);'), (1027, '        SimplifyLinePolygon(line_bottom_ltr_pts, 5, 0 + ttb_flag);'), (1028, ''), (1029, '        // Fit linepolygon matching the baselinepoints'), (1030, '        line_baseline_pts = SortBaseline(line_baseline_pts, writing_direction);'), (1031, '        // Fitting baseline into polygon is currently deactivated'), (1032, '        // it tends to push the baseline directly under superscritpts'), (1033, '        // but the baseline is always inside the polygon maybe it will be useful'), (1034, '        // for something line_baseline_pts ='), (1035, '        // FitBaselineIntoLinePolygon(line_bottom_ltr_pts, line_baseline_pts,'), (1036, '        // writing_direction); and it only cut it to the length and simplifies'), (1037, '        // the linepolyon'), (1038, '        line_baseline_pts = ClipAndSimplifyBaseline('), (1039, '            line_bottom_ltr_pts, line_baseline_pts, writing_direction);'), (1040, ''), (1041, '        // Update polygon of the block'), (1042, '        UpdateBlockPoints(block_top_pts, block_bottom_pts, line_top_ltr_pts,'), (1043, '                          line_bottom_ltr_pts, lcnt, last_word_in_cblock);'), (1044, '      }'), (1045, '      // Line level polygon'), (1046, '      line_bottom_ltr_pts = ReversePolygonline(line_bottom_ltr_pts, 1);'), (1047, '      ptaJoin(line_top_ltr_pts, line_bottom_ltr_pts, 0, -1);'), (1048, '      line_bottom_ltr_pts = DestroyAndCreatePta(line_bottom_ltr_pts);'), (1049, ''), (1050, '      if (LEVELFLAG > 0 && !(POLYGONFLAG && !skewed_flag)) {'), (1051, '        line_top_ltr_pts = PolygonToBoxCoords(line_top_ltr_pts);'), (1052, '      }'), (1053, ''), (1054, '      // Write level points'), (1055, '      line_str << ""\\t\\t\\t\\t"";'), (1056, '      if (ttb_flag) {'), (1057, '        line_top_ltr_pts = TransposePolygonline(line_top_ltr_pts);'), (1058, '      }'), (1059, '      AddPointsToPAGE(line_top_ltr_pts, line_str);'), (1060, '      line_top_ltr_pts = DestroyAndCreatePta(line_top_ltr_pts);'), (1061, ''), (1062, '      // Write Baseline'), (1063, '      line_str << ""\\t\\t\\t\\t"";'), (1064, '      if (ttb_flag) {'), (1065, '        line_baseline_pts = TransposePolygonline(line_baseline_pts);'), (1066, '      }'), (1067, '      AddBaselinePtsToPAGE(line_baseline_pts, line_str);'), (1068, '      line_baseline_pts = DestroyAndCreatePta(line_baseline_pts);'), (1069, ''), (1070, '      // Add word information if word level output is active'), (1071, '      line_str << word_str.str();'), (1072, '      word_str.str("""");'), (1073, '      // Write Line TextEquiv'), (1074, '      line_str << ""\\t\\t\\t\\t<TextEquiv index=\\""1\\"" conf=\\""""'), (1075, '               << std::setprecision(4) << line_conf << ""\\"">\\n""'), (1076, '               << ""\\t\\t\\t\\t\\t<Unicode>"" << line_content.str() << ""</Unicode>\\n""'), (1077, '               << ""\\t\\t\\t\\t</TextEquiv>\\n"";'), (1078, '      line_str << ""\\t\\t\\t</TextLine>\\n"";'), (1079, '      region_content << line_content.str();'), (1080, '      line_content.str("""");'), (1081, '      if (!last_word_in_cblock) {'), (1082, '        region_content << ""\\n\\t\\t\\t\\t\\t"";'), (1083, '      }'), (1084, '      lcnt++;'), (1085, '      wcnt = 0;'), (1086, '    } else {'), (1087, '      line_content << "" "";'), (1088, '    }'), (1089, ''), (1090, '    // Write region information to the output'), (1091, '    if (last_word_in_cblock) {'), (1092, '      if ((POLYGONFLAG && !skewed_flag) || LEVELFLAG > 0) {'), (1093, '        page_str << ""<Coords points=\\"""";'), (1094, '        block_bottom_pts = ReversePolygonline(block_bottom_pts, 1);'), (1095, '        ptaJoin(block_top_pts, block_bottom_pts, 0, -1);'), (1096, '        if (ttb_flag) {'), (1097, '          block_top_pts = TransposePolygonline(block_top_pts);'), (1098, '        }'), (1099, '        ptaGetMinMax(block_top_pts, &x1, &y1, &x2, &y2);'), (1100, '        page_str << (l_uint32)x1 << "","" << (l_uint32)y1;'), (1101, '        page_str << "" "" << (l_uint32)x2 << "","" << (l_uint32)y1;'), (1102, '        page_str << "" "" << (l_uint32)x2 << "","" << (l_uint32)y2;'), (1103, '        page_str << "" "" << (l_uint32)x1 << "","" << (l_uint32)y2;'), (1104, '        page_str << ""\\""/>\\n"";'), (1105, '        block_top_pts = DestroyAndCreatePta(block_top_pts);'), (1106, '        block_bottom_pts = DestroyAndCreatePta(block_bottom_pts);'), (1107, '      }'), (1108, '      page_str << line_str.str();'), (1109, '      line_str.str("""");'), (1110, '      page_str << ""\\t\\t\\t<TextEquiv index=\\""1\\"" conf=\\"""" << std::setprecision(4)'), (1111, '               << block_conf << ""\\"">\\n""'), (1112, '               << ""\\t\\t\\t\\t<Unicode>"" << region_content.str() << ""</Unicode>\\n""'), (1113, '               << ""\\t\\t\\t</TextEquiv>\\n"";'), (1114, '      page_str << ""\\t\\t</TextRegion>\\n"";'), (1115, '      region_content.str("""");'), (1116, '      rcnt++;'), (1117, '      lcnt = 0;'), (1118, '    }'), (1119, '  }'), (1120, ''), (1121, '  // Destroy all point information'), (1122, '  ptaDestroy(&block_top_pts);'), (1123, '  ptaDestroy(&block_bottom_pts);'), (1124, '  ptaDestroy(&line_top_ltr_pts);'), (1125, '  ptaDestroy(&line_bottom_ltr_pts);'), (1126, '  ptaDestroy(&line_top_rtl_pts);'), (1127, '  ptaDestroy(&line_bottom_rtl_pts);'), (1128, '  ptaDestroy(&word_top_pts);'), (1129, '  ptaDestroy(&word_bottom_pts);'), (1130, '  ptaDestroy(&word_baseline_pts);'), (1131, '  ptaDestroy(&line_baseline_rtl_pts);'), (1132, '  ptaDestroy(&line_baseline_ltr_pts);'), (1133, '  ptaDestroy(&line_baseline_pts);'), (1134, ''), (1135, '  reading_order_str << ""\\t\\t\\t</OrderedGroup>\\n""'), (1136, '                    << ""\\t\\t</ReadingOrder>\\n"";'), (1137, ''), (1138, '  reading_order_str << page_str.str();'), (1139, '  page_str.str("""");'), (1140, '  const std::string &text = reading_order_str.str();'), (1141, '  reading_order_str.str("""");'), (1142, ''), (1143, '  // Allocate memory for result to hold text.length() characters plus a null'), (1144, '  // terminator Safely copy the string into result, ensuring no overflow strncpy'), (1145, '  // does not necessarily null-terminate the destination, so do it manually'), (1146, '  char *result = new char[text.length() + 1];'), (1147, '  strncpy(result, text.c_str(), text.length());'), (1148, ""  result[text.length()] = '\\0';""), (1149, ''), (1150, '  delete res_it;'), (1151, '  return result;'), (1152, '}'), (1153, ''), (1154, '} // namespace tesseract')], 'deleted': []}",yes
src\ccmain\tesseractclass.cpp,src\ccmain\tesseractclass.cpp,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -340,6 +340,9 @@ Tesseract::Tesseract()
     , BOOL_MEMBER(tessedit_create_txt, false, ""Write .txt output file"", this->params())
     , BOOL_MEMBER(tessedit_create_hocr, false, ""Write .html hOCR output file"", this->params())
     , BOOL_MEMBER(tessedit_create_alto, false, ""Write .xml ALTO file"", this->params())
+    , BOOL_MEMBER(tessedit_create_page_xml, false, ""Write .page.xml PAGE file"", this->params())
+    , BOOL_MEMBER(page_xml_polygon, true, ""Create the PAGE file with polygons instead of box values"", this->params())
+    , INT_MEMBER(page_xml_level, 0, ""Create the PAGE file on 0=line or 1=word level."", this->params())
     , BOOL_MEMBER(tessedit_create_lstmbox, false, ""Write .box file for LSTM training"",
                   this->params())
     , BOOL_MEMBER(tessedit_create_tsv, false, ""Write .tsv output file"", this->params())
","{'added': [(343, '    , BOOL_MEMBER(tessedit_create_page_xml, false, ""Write .page.xml PAGE file"", this->params())'), (344, '    , BOOL_MEMBER(page_xml_polygon, true, ""Create the PAGE file with polygons instead of box values"", this->params())'), (345, '    , INT_MEMBER(page_xml_level, 0, ""Create the PAGE file on 0=line or 1=word level."", this->params())')], 'deleted': []}",yes
src\ccmain\tesseractclass.h,src\ccmain\tesseractclass.h,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -897,6 +897,9 @@ public:
   BOOL_VAR_H(tessedit_create_txt);
   BOOL_VAR_H(tessedit_create_hocr);
   BOOL_VAR_H(tessedit_create_alto);
+  BOOL_VAR_H(tessedit_create_page_xml);
+  BOOL_VAR_H(page_xml_polygon);
+  INT_VAR_H(page_xml_level);
   BOOL_VAR_H(tessedit_create_lstmbox);
   BOOL_VAR_H(tessedit_create_tsv);
   BOOL_VAR_H(tessedit_create_wordstrbox);
","{'added': [(900, '  BOOL_VAR_H(tessedit_create_page_xml);'), (901, '  BOOL_VAR_H(page_xml_polygon);'), (902, '  INT_VAR_H(page_xml_level);')], 'deleted': []}",yes
src\tesseract.cpp,src\tesseract.cpp,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -500,6 +500,17 @@ static void PreloadRenderers(tesseract::TessBaseAPI &api,
       }
     }
 
+    api.GetBoolVariable(""tessedit_create_page_xml"", &b);
+    if (b) {
+      auto renderer = std::make_unique<tesseract::TessPAGERenderer>(outputbase);
+      if (renderer->happy()) {
+        renderers.push_back(std::move(renderer));
+      } else {
+        tprintf(""Error, could not create PAGE output file: %s\n"", strerror(errno));
+        error = true;
+      }
+    }
+
     api.GetBoolVariable(""tessedit_create_tsv"", &b);
     if (b) {
       bool font_info;
","{'added': [(503, '    api.GetBoolVariable(""tessedit_create_page_xml"", &b);'), (504, '    if (b) {'), (505, '      auto renderer = std::make_unique<tesseract::TessPAGERenderer>(outputbase);'), (506, '      if (renderer->happy()) {'), (507, '        renderers.push_back(std::move(renderer));'), (508, '      } else {'), (509, '        tprintf(""Error, could not create PAGE output file: %s\\n"", strerror(errno));'), (510, '        error = true;'), (511, '      }'), (512, '    }'), (513, '')], 'deleted': []}",yes
tessdata\configs\Makefile.am,tessdata\configs\Makefile.am,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -3,6 +3,6 @@ data_DATA = inter makebox box.train unlv ambigs.train lstm.train lstmdebug
 data_DATA += api_config kannada box.train.stderr quiet logfile digits get.images
 data_DATA += lstmbox wordstrbox
 # Configurations for OCR output.
-data_DATA += alto hocr pdf tsv txt
+data_DATA += alto hocr page pdf tsv txt
 data_DATA += linebox rebox strokewidth bigram
 EXTRA_DIST = $(data_DATA)
","{'added': [(6, 'data_DATA += alto hocr page pdf tsv txt')], 'deleted': [(6, 'data_DATA += alto hocr pdf tsv txt')]}",yes
,tessdata\configs\page,577e8a8b93a94ded139d66e41ee08d345b3c67ab,bae520ea009b13f488fb69b08fcfdbc7222ae64f,"Add PAGE XML renderer / export (#4214)

Add PAGE XML export and documentation.
To generate PAGE XML output just add 'page' to the tesseract command.

The output is outputname + '.page.xml' to avoid conflicts with ALTO export.

The output can be customized with the flags:
tessedit_create_page_polygon and tessedit_create_page_wordlevel.

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -0,0 +1,3 @@
+tessedit_create_page_xml 1
+# page_xml_polygon 1
+# page_xml_level 0
","{'added': [(1, 'tessedit_create_page_xml 1'), (2, '# page_xml_polygon 1'), (3, '# page_xml_level 0')], 'deleted': []}",yes
src\arch\intsimdmatrix.cpp,src\arch\intsimdmatrix.cpp,bae520ea009b13f488fb69b08fcfdbc7222ae64f,d5e000bc58c50c807e9423290feace3f31a77de0,"Facilitate vectorization for generic build (#4223)

* Update intsimdmatrix.cpp

Unroll loop into chunks of four operations to facilitate compilers recognizing vectorization opportunity.

* Apply suggestions from code review

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -80,7 +80,32 @@ void IntSimdMatrix::MatrixDotVector(const GENERIC_2D_ARRAY<int8_t> &w,
   int num_out = w.dim1();
   int num_in = w.dim2() - 1;
   // Base implementation.
-  for (int i = 0; i < num_out; ++i) {
+  int i;
+  // Break up into chunks of four to facilitate vectorization
+  for (i = 0; i < (num_out / 4) * 4; i += 4) {
+    const int8_t *wi0 = w[i + 0];
+    const int8_t *wi1 = w[i + 1];
+    const int8_t *wi2 = w[i + 2];
+    const int8_t *wi3 = w[i + 3];
+    int total0 = 0;
+    int total1 = 0;
+    int total2 = 0;
+    int total3 = 0;
+    for (int j = 0; j < num_in; ++j) {
+      total0 += wi0[j] * u[j];
+      total1 += wi1[j] * u[j];
+      total2 += wi2[j] * u[j];
+      total3 += wi3[j] * u[j];
+    }
+    // Add in the bias and correct for integer values.
+    v[i + 0] = (total0 + wi0[num_in] * INT8_MAX) * scales[i + 0];
+    v[i + 1] = (total1 + wi1[num_in] * INT8_MAX) * scales[i + 1];
+    v[i + 2] = (total2 + wi2[num_in] * INT8_MAX) * scales[i + 2];
+    v[i + 3] = (total3 + wi3[num_in] * INT8_MAX) * scales[i + 3];
+  }
+
+  // Capture the remainder mod four
+  for (; i < num_out; ++i) {
     const int8_t *wi = w[i];
     int total = 0;
     for (int j = 0; j < num_in; ++j) {
","{'added': [(83, '  int i;'), (84, '  // Break up into chunks of four to facilitate vectorization'), (85, '  for (i = 0; i < (num_out / 4) * 4; i += 4) {'), (86, '    const int8_t *wi0 = w[i + 0];'), (87, '    const int8_t *wi1 = w[i + 1];'), (88, '    const int8_t *wi2 = w[i + 2];'), (89, '    const int8_t *wi3 = w[i + 3];'), (90, '    int total0 = 0;'), (91, '    int total1 = 0;'), (92, '    int total2 = 0;'), (93, '    int total3 = 0;'), (94, '    for (int j = 0; j < num_in; ++j) {'), (95, '      total0 += wi0[j] * u[j];'), (96, '      total1 += wi1[j] * u[j];'), (97, '      total2 += wi2[j] * u[j];'), (98, '      total3 += wi3[j] * u[j];'), (99, '    }'), (100, '    // Add in the bias and correct for integer values.'), (101, '    v[i + 0] = (total0 + wi0[num_in] * INT8_MAX) * scales[i + 0];'), (102, '    v[i + 1] = (total1 + wi1[num_in] * INT8_MAX) * scales[i + 1];'), (103, '    v[i + 2] = (total2 + wi2[num_in] * INT8_MAX) * scales[i + 2];'), (104, '    v[i + 3] = (total3 + wi3[num_in] * INT8_MAX) * scales[i + 3];'), (105, '  }'), (106, ''), (107, '  // Capture the remainder mod four'), (108, '  for (; i < num_out; ++i) {')], 'deleted': [(83, '  for (int i = 0; i < num_out; ++i) {')]}",yes
.gitignore,.gitignore,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -83,10 +83,6 @@ __pycache__
 *.traineddata
 tessdata_*
 
-# OpenCL
-tesseract_opencl_profile_devices.dat
-kernel*.bin
-
 # build dirs
 /build*
 /*.dll
","{'added': [], 'deleted': [(86, '# OpenCL'), (87, 'tesseract_opencl_profile_devices.dat'), (88, 'kernel*.bin'), (89, '')]}",yes
CMakeLists.txt,CMakeLists.txt,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -88,7 +88,6 @@ option(GRAPHICS_DISABLED ""Disable disable graphics (ScrollView)"" OFF)
 option(DISABLED_LEGACY_ENGINE ""Disable the legacy OCR engine"" OFF)
 option(ENABLE_LTO ""Enable link-time optimization"" OFF)
 option(FAST_FLOAT ""Enable float for LSTM"" ON)
-option(ENABLE_OPENCL ""Enable unsupported experimental OpenCL support"" OFF)
 option(ENABLE_NATIVE
        ""Enable optimization for host CPU (could break HW compatibility)"" OFF)
 # see
@@ -460,18 +459,6 @@ else()
   endif(DISABLE_CURL)
 endif()
 
-if(ENABLE_OPENCL)
-  find_package(OpenCL)
-  if(OpenCL_FOUND)
-    include_directories(${OpenCL_INCLUDE_DIRS})
-    message(STATUS ""OpenCL_INCLUDE_DIRS: ${OpenCL_INCLUDE_DIRS}"")
-    message(STATUS ""OpenCL_LIBRARY: ${OpenCL_LIBRARY}"")
-    set(USE_OPENCL ON)
-  else()
-    set(USE_OPENCL OFF)
-  endif(OpenCL_FOUND)
-endif(ENABLE_OPENCL)
-
 # ##############################################################################
 #
 # configure
@@ -565,11 +552,6 @@ message(STATUS ""Disable the legacy OCR engine [DISABLED_LEGACY_ENGINE]: ""
 message(STATUS ""Build training tools [BUILD_TRAINING_TOOLS]: ""
                ""${BUILD_TRAINING_TOOLS}"")
 message(STATUS ""Build tests [BUILD_TESTS]: ${BUILD_TESTS}"")
-if(ENABLE_OPENCL)
-  message(
-    STATUS
-      ""Enable unsupported experimental OpenCL [ENABLE_OPENCL]: ${USE_OPENCL}"")
-endif(ENABLE_OPENCL)
 message(STATUS ""Use system ICU Library [USE_SYSTEM_ICU]: ${USE_SYSTEM_ICU}"")
 message(
   STATUS ""Install tesseract configs [INSTALL_CONFIGS]: ${INSTALL_CONFIGS}"")
@@ -608,7 +590,6 @@ file(
   src/cutil/*.cpp
   src/dict/*.cpp
   src/lstm/*.cpp
-  src/opencl/*.cpp
   src/textord/*.cpp
   src/viewer/*.cpp
   src/wordrec/*.cpp)
@@ -749,7 +730,6 @@ file(
   src/cutil/*.h
   src/dict/*.h
   src/lstm/*.h
-  src/opencl/*.h
   src/textord/*.h
   src/viewer/*.h
   src/wordrec/*.h)
@@ -816,7 +796,6 @@ target_include_directories(
          $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/cutil>
          $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/dict>
          $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/lstm>
-         $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/opencl>
          $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/textord>
          $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/viewer>
          $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/wordrec>
@@ -832,9 +811,6 @@ target_link_libraries(libtesseract PRIVATE ${LIB_Ws2_32} ${LIB_pthread})
 if(OpenMP_CXX_FOUND)
   target_link_libraries(libtesseract PUBLIC OpenMP::OpenMP_CXX)
 endif()
-if(OpenCL_FOUND)
-  target_link_libraries(libtesseract PUBLIC OpenCL::OpenCL)
-endif()
 if(LibArchive_FOUND)
   target_link_libraries(libtesseract PUBLIC ${LibArchive_LIBRARIES})
 endif(LibArchive_FOUND)
","{'added': [], 'deleted': [(91, 'option(ENABLE_OPENCL ""Enable unsupported experimental OpenCL support"" OFF)'), (463, 'if(ENABLE_OPENCL)'), (464, '  find_package(OpenCL)'), (465, '  if(OpenCL_FOUND)'), (466, '    include_directories(${OpenCL_INCLUDE_DIRS})'), (467, '    message(STATUS ""OpenCL_INCLUDE_DIRS: ${OpenCL_INCLUDE_DIRS}"")'), (468, '    message(STATUS ""OpenCL_LIBRARY: ${OpenCL_LIBRARY}"")'), (469, '    set(USE_OPENCL ON)'), (470, '  else()'), (471, '    set(USE_OPENCL OFF)'), (472, '  endif(OpenCL_FOUND)'), (473, 'endif(ENABLE_OPENCL)'), (474, ''), (568, 'if(ENABLE_OPENCL)'), (569, '  message('), (570, '    STATUS'), (571, '      ""Enable unsupported experimental OpenCL [ENABLE_OPENCL]: ${USE_OPENCL}"")'), (572, 'endif(ENABLE_OPENCL)'), (611, '  src/opencl/*.cpp'), (752, '  src/opencl/*.h'), (819, '         $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/opencl>'), (835, 'if(OpenCL_FOUND)'), (836, '  target_link_libraries(libtesseract PUBLIC OpenCL::OpenCL)'), (837, 'endif()')]}",yes
Makefile.am,Makefile.am,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -78,7 +78,6 @@ if VISIBILITY
 AM_CPPFLAGS += -DTESS_EXPORTS
 AM_CPPFLAGS += -fvisibility=hidden -fvisibility-inlines-hidden -fPIC
 endif
-AM_CPPFLAGS += $(OPENCL_CPPFLAGS)
 
 AM_CXXFLAGS = $(OPENMP_CXXFLAGS)
 
@@ -94,9 +93,6 @@ libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/classify
 libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/cutil
 libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/dict
 libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/lstm
-if OPENCL
-libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/opencl
-endif
 libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/textord
 libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/training/common
 libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/viewer
@@ -104,7 +100,7 @@ libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/wordrec
 libtesseract_la_CPPFLAGS += $(libcurl_CFLAGS)
 
 lib_LTLIBRARIES = libtesseract.la
-libtesseract_la_LDFLAGS = $(LEPTONICA_LIBS) $(OPENCL_LDFLAGS)
+libtesseract_la_LDFLAGS = $(LEPTONICA_LIBS)
 libtesseract_la_LDFLAGS += $(libarchive_LIBS)
 libtesseract_la_LDFLAGS += $(libcurl_LIBS)
 libtesseract_la_LDFLAGS += $(TENSORFLOW_LIBS)
@@ -127,9 +123,6 @@ libtesseract_la_SOURCES += src/api/wordstrboxrenderer.cpp
 libtesseract_la_LIBADD = libtesseract_ccutil.la
 libtesseract_la_LIBADD += libtesseract_lstm.la
 libtesseract_la_LIBADD += libtesseract_native.la
-if OPENCL
-libtesseract_la_LIBADD += libtesseract_opencl.la
-endif
 
 # Rules for src/arch.
 
@@ -561,23 +554,6 @@ if TENSORFLOW
 libtesseract_lstm_la_SOURCES += src/lstm/tfnetwork.pb.cc
 endif
 
-# Rules for src/opencl.
-
-if OPENCL
-libtesseract_opencl_la_CPPFLAGS = $(AM_CPPFLAGS)
-libtesseract_opencl_la_CPPFLAGS += $(OPENCL_CFLAGS)
-libtesseract_opencl_la_CPPFLAGS += -I$(top_srcdir)/src/ccutil
-libtesseract_opencl_la_CPPFLAGS += -I$(top_srcdir)/src/ccstruct
-libtesseract_opencl_la_CPPFLAGS += -I$(top_srcdir)/src/ccmain
-
-noinst_HEADERS += src/opencl/openclwrapper.h
-noinst_HEADERS += src/opencl/oclkernels.h
-
-noinst_LTLIBRARIES += libtesseract_opencl.la
-
-libtesseract_opencl_la_SOURCES = src/opencl/openclwrapper.cpp
-endif
-
 # Rules for src/textord.
 
 noinst_HEADERS += src/textord/alignedblob.h
@@ -743,16 +719,12 @@ tesseract_CPPFLAGS += -I$(top_srcdir)/src/dict
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/textord
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/viewer
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/wordrec
-if OPENCL
-tesseract_CPPFLAGS += -I$(top_srcdir)/src/opencl
-endif
 tesseract_CPPFLAGS += $(AM_CPPFLAGS)
 if VISIBILITY
 tesseract_CPPFLAGS += -DTESS_IMPORTS
 endif
 
-tesseract_LDFLAGS = $(OPENCL_LDFLAGS)
-tesseract_LDFLAGS += $(OPENMP_CXXFLAGS)
+tesseract_LDFLAGS = $(OPENMP_CXXFLAGS)
 
 tesseract_LDADD = libtesseract.la
 tesseract_LDADD += $(LEPTONICA_LIBS)
@@ -927,7 +899,6 @@ EXTRA_PROGRAMS += $(trainingtools)
 extralib = libtesseract.la
 extralib += $(libarchive_LIBS)
 extralib += $(LEPTONICA_LIBS)
-extralib += $(OPENCL_LDFLAGS)
 extralib += $(TENSORFLOW_LIBS)
 if T_WIN
 extralib += -lws2_32
@@ -1308,7 +1279,7 @@ TESTS = $(check_PROGRAMS)
 
 apiexample_test_SOURCES = unittest/apiexample_test.cc
 apiexample_test_CPPFLAGS = $(unittest_CPPFLAGS)
-apiexample_test_LDFLAGS = $(OPENCL_LDFLAGS) $(LEPTONICA_LIBS)
+apiexample_test_LDFLAGS = $(LEPTONICA_LIBS)
 apiexample_test_LDADD = $(TESS_LIBS) $(LEPTONICA_LIBS)
 
 if !DISABLED_LEGACY_ENGINE
@@ -1494,7 +1465,7 @@ endif # !DISABLED_LEGACY_ENGINE
 
 progress_test_SOURCES = unittest/progress_test.cc
 progress_test_CPPFLAGS = $(unittest_CPPFLAGS)
-progress_test_LDFLAGS = $(OPENCL_LDFLAGS) $(LEPTONICA_LIBS)
+progress_test_LDFLAGS = $(LEPTONICA_LIBS)
 progress_test_LDADD = $(GTEST_LIBS) $(GMOCK_LIBS) $(TESS_LIBS) $(LEPTONICA_LIBS)
 
 qrsequence_test_SOURCES = unittest/qrsequence_test.cc
","{'added': [(103, 'libtesseract_la_LDFLAGS = $(LEPTONICA_LIBS)'), (727, 'tesseract_LDFLAGS = $(OPENMP_CXXFLAGS)'), (1282, 'apiexample_test_LDFLAGS = $(LEPTONICA_LIBS)'), (1468, 'progress_test_LDFLAGS = $(LEPTONICA_LIBS)')], 'deleted': [(81, 'AM_CPPFLAGS += $(OPENCL_CPPFLAGS)'), (97, 'if OPENCL'), (98, 'libtesseract_la_CPPFLAGS += -I$(top_srcdir)/src/opencl'), (99, 'endif'), (107, 'libtesseract_la_LDFLAGS = $(LEPTONICA_LIBS) $(OPENCL_LDFLAGS)'), (130, 'if OPENCL'), (131, 'libtesseract_la_LIBADD += libtesseract_opencl.la'), (132, 'endif'), (564, '# Rules for src/opencl.'), (565, ''), (566, 'if OPENCL'), (567, 'libtesseract_opencl_la_CPPFLAGS = $(AM_CPPFLAGS)'), (568, 'libtesseract_opencl_la_CPPFLAGS += $(OPENCL_CFLAGS)'), (569, 'libtesseract_opencl_la_CPPFLAGS += -I$(top_srcdir)/src/ccutil'), (570, 'libtesseract_opencl_la_CPPFLAGS += -I$(top_srcdir)/src/ccstruct'), (571, 'libtesseract_opencl_la_CPPFLAGS += -I$(top_srcdir)/src/ccmain'), (572, ''), (573, 'noinst_HEADERS += src/opencl/openclwrapper.h'), (574, 'noinst_HEADERS += src/opencl/oclkernels.h'), (575, ''), (576, 'noinst_LTLIBRARIES += libtesseract_opencl.la'), (577, ''), (578, 'libtesseract_opencl_la_SOURCES = src/opencl/openclwrapper.cpp'), (579, 'endif'), (580, ''), (746, 'if OPENCL'), (747, 'tesseract_CPPFLAGS += -I$(top_srcdir)/src/opencl'), (748, 'endif'), (754, 'tesseract_LDFLAGS = $(OPENCL_LDFLAGS)'), (755, 'tesseract_LDFLAGS += $(OPENMP_CXXFLAGS)'), (930, 'extralib += $(OPENCL_LDFLAGS)'), (1311, 'apiexample_test_LDFLAGS = $(OPENCL_LDFLAGS) $(LEPTONICA_LIBS)'), (1497, 'progress_test_LDFLAGS = $(OPENCL_LDFLAGS) $(LEPTONICA_LIBS)')]}",yes
cmake\Configure.cmake,cmake\Configure.cmake,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -91,8 +91,6 @@ set(include_files_list
     unistd.h
 
     cairo/cairo-version.h
-    CL/cl.h
-    OpenCL/cl.h
     pango-1.0/pango/pango-features.h
     unicode/uchar.h
 )
@@ -121,7 +119,6 @@ file(APPEND ${AUTOCONFIG_SRC} ""
 #cmakedefine HAVE_NEON ${HAVE_NEON}
 #cmakedefine HAVE_LIBARCHIVE ${HAVE_LIBARCHIVE}
 #cmakedefine HAVE_LIBCURL ${HAVE_LIBCURL}
-#cmakedefine USE_OPENCL ${USE_OPENCL}
 "")
 
 if(TESSDATA_PREFIX)
","{'added': [], 'deleted': [(94, '    CL/cl.h'), (95, '    OpenCL/cl.h'), (124, '#cmakedefine USE_OPENCL ${USE_OPENCL}')]}",yes
cmake\SourceGroups.cmake,cmake\SourceGroups.cmake,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -31,7 +31,6 @@ source_group(""classify""     ""${SSRC}/classify/${H_CPP}"")
 source_group(""cutil""        ""${SSRC}/cutil/${H_CPP}"")
 source_group(""dict""         ""${SSRC}/dict/${H_CPP}"")
 source_group(""lstm""         ""${SSRC}/lstm/${H_CPP}"")
-source_group(""opencl""       ""${SSRC}/opencl/${H_CPP}"")
 source_group(""textord""      ""${SSRC}/textord/${H_CPP}"")
 source_group(""viewer""       ""${SSRC}/viewer/${H_CPP}"")
 source_group(""wordrec""      ""${SSRC}/wordrec/${H_CPP}"")
","{'added': [], 'deleted': [(34, 'source_group(""opencl""       ""${SSRC}/opencl/${H_CPP}"")')]}",yes
configure.ac,configure.ac,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -79,8 +79,6 @@ AC_SUBST([AM_CPPFLAGS])
 # Can be overridden with `configure --disable-silent-rules` or with `make V=1`.
 AM_SILENT_RULES([yes])
 
-OPENCL_INC=""/opt/AMDAPP/include""
-OPENCL_LIBS=""-lOpenCL""
 #############################
 #
 # Platform specific setup
@@ -102,15 +100,12 @@ case ""${host_os}"" in
         AM_CONDITIONAL([ADD_RT], true)
         ;;
     *darwin*)
-        OPENCL_LIBS=""""
-        OPENCL_INC=""""
         AM_CONDITIONAL([ADD_RT], false)
         ;;
     *android*|openbsd*)
         AM_CONDITIONAL([ADD_RT], false)
         ;;
     powerpc-*-darwin*)
-        OPENCL_LIBS=""""
         ;;
     *)
         # default
@@ -263,19 +258,6 @@ have_tiff=false
 # Note that the first usage of AC_CHECK_HEADERS must be unconditional.
 AC_CHECK_HEADERS([tiffio.h], [have_tiff=true], [have_tiff=false])
 
-# check whether to build opencl version
-AC_MSG_CHECKING([--enable-opencl argument])
-AC_ARG_ENABLE([opencl],
-    AS_HELP_STRING([--enable-opencl], [enable opencl build [default=no]]))
-AC_MSG_RESULT([$enable_opencl])
-# check for opencl header
-have_opencl=false
-if test ""$enable_opencl"" = ""yes""; then
-  AC_CHECK_HEADERS([CL/cl.h], [have_opencl=true], [
-    AC_CHECK_HEADERS(OpenCL/cl.h, [have_opencl=true], [have_opencl=false])
-  ])
-fi
-
 # Configure arguments which allow disabling some optional libraries.
 AC_ARG_WITH([archive],
             AS_HELP_STRING([--with-archive],
@@ -323,9 +305,6 @@ m4_define([MY_CHECK_FRAMEWORK],
    fi]
 )
 
-have_opencl_lib=false
-OPENCL_CPPFLAGS=''
-OPENCL_LDFLAGS=''
 case ""${host_os}"" in
   *darwin* | *-macos10*)
     MY_CHECK_FRAMEWORK([Accelerate])
@@ -333,36 +312,11 @@ case ""${host_os}"" in
       AM_CPPFLAGS=""-DHAVE_FRAMEWORK_ACCELERATE $AM_CPPFLAGS""
       AM_LDFLAGS=""$AM_LDFLAGS -framework Accelerate""
     fi
-    MY_CHECK_FRAMEWORK([OpenCL])
-    if test ""$enable_opencl"" = ""yes""; then
-      if test $my_cv_framework_OpenCL = no; then
-        AC_MSG_ERROR([Required OpenCL library not found!])
-      fi
-      AM_CPPFLAGS=""-DUSE_OPENCL $AM_CPPFLAGS""
-      OPENCL_CPPFLAGS=""""
-      OPENCL_LDFLAGS=""-framework OpenCL""
-    fi
     ;;
   *)
     # default
-    if test ""$enable_opencl"" = ""yes""; then
-        AC_CHECK_LIB([OpenCL], [clGetPlatformIDs],
-                     [have_opencl_lib=true], [have_opencl_lib=false])
-        if !($have_opencl); then
-            AC_MSG_ERROR([Required OpenCL headers not found!])
-        fi
-        if !($have_opencl_lib); then
-            AC_MSG_ERROR([Required OpenCL library not found!])
-        fi
-        AM_CPPFLAGS=""-DUSE_OPENCL $AM_CPPFLAGS""
-        OPENCL_CPPFLAGS=""-I${OPENCL_INC}""
-        OPENCL_LDFLAGS=""${OPENCL_LIBS}""
-    fi
     ;;
 esac
-AM_CONDITIONAL([OPENCL], [test ""$enable_opencl"" = ""yes""])
-AC_SUBST([OPENCL_CPPFLAGS])
-AC_SUBST([OPENCL_LDFLAGS])
 
 # check whether to build tesseract with -fvisibility=hidden -fvisibility-inlines-hidden
 # http://gcc.gnu.org/wiki/Visibility
","{'added': [], 'deleted': [(82, 'OPENCL_INC=""/opt/AMDAPP/include""'), (83, 'OPENCL_LIBS=""-lOpenCL""'), (105, '        OPENCL_LIBS=""""'), (106, '        OPENCL_INC=""""'), (113, '        OPENCL_LIBS=""""'), (266, '# check whether to build opencl version'), (267, 'AC_MSG_CHECKING([--enable-opencl argument])'), (268, 'AC_ARG_ENABLE([opencl],'), (269, '    AS_HELP_STRING([--enable-opencl], [enable opencl build [default=no]]))'), (270, 'AC_MSG_RESULT([$enable_opencl])'), (271, '# check for opencl header'), (272, 'have_opencl=false'), (273, 'if test ""$enable_opencl"" = ""yes""; then'), (274, '  AC_CHECK_HEADERS([CL/cl.h], [have_opencl=true], ['), (275, '    AC_CHECK_HEADERS(OpenCL/cl.h, [have_opencl=true], [have_opencl=false])'), (276, '  ])'), (277, 'fi'), (278, ''), (326, 'have_opencl_lib=false'), (327, ""OPENCL_CPPFLAGS=''""), (328, ""OPENCL_LDFLAGS=''""), (336, '    MY_CHECK_FRAMEWORK([OpenCL])'), (337, '    if test ""$enable_opencl"" = ""yes""; then'), (338, '      if test $my_cv_framework_OpenCL = no; then'), (339, '        AC_MSG_ERROR([Required OpenCL library not found!])'), (340, '      fi'), (341, '      AM_CPPFLAGS=""-DUSE_OPENCL $AM_CPPFLAGS""'), (342, '      OPENCL_CPPFLAGS=""""'), (343, '      OPENCL_LDFLAGS=""-framework OpenCL""'), (344, '    fi'), (348, '    if test ""$enable_opencl"" = ""yes""; then'), (349, '        AC_CHECK_LIB([OpenCL], [clGetPlatformIDs],'), (350, '                     [have_opencl_lib=true], [have_opencl_lib=false])'), (351, '        if !($have_opencl); then'), (352, '            AC_MSG_ERROR([Required OpenCL headers not found!])'), (353, '        fi'), (354, '        if !($have_opencl_lib); then'), (355, '            AC_MSG_ERROR([Required OpenCL library not found!])'), (356, '        fi'), (357, '        AM_CPPFLAGS=""-DUSE_OPENCL $AM_CPPFLAGS""'), (358, '        OPENCL_CPPFLAGS=""-I${OPENCL_INC}""'), (359, '        OPENCL_LDFLAGS=""${OPENCL_LIBS}""'), (360, '    fi'), (363, 'AM_CONDITIONAL([OPENCL], [test ""$enable_opencl"" = ""yes""])'), (364, 'AC_SUBST([OPENCL_CPPFLAGS])'), (365, 'AC_SUBST([OPENCL_LDFLAGS])')]}",yes
include\tesseract\baseapi.h,include\tesseract\baseapi.h,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -86,15 +86,6 @@ public:
    */
   static const char *Version();
 
-  /**
-   * If compiled with OpenCL AND an available OpenCL
-   * device is deemed faster than serial code, then
-   * ""device"" is populated with the cl_device_id
-   * and returns sizeof(cl_device_id)
-   * otherwise *device=nullptr and returns 0.
-   */
-  static size_t getOpenCLDevice(void **device);
-
   /**
    * Set the name of the input file. Needed for training and
    * reading a UNLV zone file, and for searchable PDF output.
","{'added': [], 'deleted': [(89, '  /**'), (90, '   * If compiled with OpenCL AND an available OpenCL'), (91, '   * device is deemed faster than serial code, then'), (92, '   * ""device"" is populated with the cl_device_id'), (93, '   * and returns sizeof(cl_device_id)'), (94, '   * otherwise *device=nullptr and returns 0.'), (95, '   */'), (96, '  static size_t getOpenCLDevice(void **device);'), (97, '')]}",yes
include\tesseract\capi.h,include\tesseract\capi.h,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -186,8 +186,6 @@ TESS_API int TessResultRendererImageNum(TessResultRenderer *renderer);
 TESS_API TessBaseAPI *TessBaseAPICreate();
 TESS_API void TessBaseAPIDelete(TessBaseAPI *handle);
 
-TESS_API size_t TessBaseAPIGetOpenCLDevice(TessBaseAPI *handle, void **device);
-
 TESS_API void TessBaseAPISetInputName(TessBaseAPI *handle, const char *name);
 TESS_API const char *TessBaseAPIGetInputName(TessBaseAPI *handle);
 
","{'added': [], 'deleted': [(189, 'TESS_API size_t TessBaseAPIGetOpenCLDevice(TessBaseAPI *handle, void **device);'), (190, '')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -41,9 +41,6 @@
 #endif
 #include ""mutableiterator.h"" // for MutableIterator
 #include ""normalis.h""        // for kBlnBaselineOffset, kBlnXHeight
-#if defined(USE_OPENCL)
-#  include ""openclwrapper.h"" // for OpenclDevice
-#endif
 #include ""pageres.h""         // for PAGE_RES_IT, WERD_RES, PAGE_RES, CR_DE...
 #include ""paragraphs.h""      // for DetectParagraphs
 #include ""params.h""          // for BoolParam, IntParam, DoubleParam, Stri...
@@ -243,27 +240,6 @@ const char *TessBaseAPI::Version() {
   return TESSERACT_VERSION_STR;
 }
 
-/**
- * If compiled with OpenCL AND an available OpenCL
- * device is deemed faster than serial code, then
- * ""device"" is populated with the cl_device_id
- * and returns sizeof(cl_device_id)
- * otherwise *device=nullptr and returns 0.
- */
-size_t TessBaseAPI::getOpenCLDevice(void **data) {
-#ifdef USE_OPENCL
-  ds_device device = OpenclDevice::getDeviceSelection();
-  if (device.type == DS_DEVICE_OPENCL_DEVICE) {
-    *data = new cl_device_id;
-    memcpy(*data, &device.oclDeviceID, sizeof(cl_device_id));
-    return sizeof(cl_device_id);
-  }
-#endif
-
-  *data = nullptr;
-  return 0;
-}
-
 /**
  * Set the name of the input file. Needed only for training and
  * loading a UNLV zone file.
@@ -398,10 +374,6 @@ int TessBaseAPI::Init(const char *data, int data_size, const char *language, Ocr
     delete tesseract_;
     tesseract_ = nullptr;
   }
-#ifdef USE_OPENCL
-  OpenclDevice od;
-  od.InitEnv();
-#endif
   bool reset_classifier = true;
   if (tesseract_ == nullptr) {
     reset_classifier = false;
","{'added': [], 'deleted': [(44, '#if defined(USE_OPENCL)'), (45, '#  include ""openclwrapper.h"" // for OpenclDevice'), (46, '#endif'), (246, '/**'), (247, ' * If compiled with OpenCL AND an available OpenCL'), (248, ' * device is deemed faster than serial code, then'), (249, ' * ""device"" is populated with the cl_device_id'), (250, ' * and returns sizeof(cl_device_id)'), (251, ' * otherwise *device=nullptr and returns 0.'), (252, ' */'), (253, 'size_t TessBaseAPI::getOpenCLDevice(void **data) {'), (254, '#ifdef USE_OPENCL'), (255, '  ds_device device = OpenclDevice::getDeviceSelection();'), (256, '  if (device.type == DS_DEVICE_OPENCL_DEVICE) {'), (257, '    *data = new cl_device_id;'), (258, '    memcpy(*data, &device.oclDeviceID, sizeof(cl_device_id));'), (259, '    return sizeof(cl_device_id);'), (260, '  }'), (261, '#endif'), (262, ''), (263, '  *data = nullptr;'), (264, '  return 0;'), (265, '}'), (266, ''), (401, '#ifdef USE_OPENCL'), (402, '  OpenclDevice od;'), (403, '  od.InitEnv();'), (404, '#endif')]}",yes
src\api\capi.cpp,src\api\capi.cpp,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -137,10 +137,6 @@ void TessBaseAPIDelete(TessBaseAPI *handle) {
   delete handle;
 }
 
-size_t TessBaseAPIGetOpenCLDevice(TessBaseAPI * /*handle*/, void **device) {
-  return TessBaseAPI::getOpenCLDevice(device);
-}
-
 void TessBaseAPISetInputName(TessBaseAPI *handle, const char *name) {
   handle->SetInputName(name);
 }
","{'added': [], 'deleted': [(140, 'size_t TessBaseAPIGetOpenCLDevice(TessBaseAPI * /*handle*/, void **device) {'), (141, '  return TessBaseAPI::getOpenCLDevice(device);'), (142, '}'), (143, '')]}",yes
src\ccmain\thresholder.cpp,src\ccmain\thresholder.cpp,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -25,10 +25,6 @@
 #include ""thresholder.h""
 #include ""tprintf.h"" // for tprintf
 
-#if defined(USE_OPENCL)
-#  include ""openclwrapper.h"" // for OpenclDevice
-#endif
-
 #include <allheaders.h>
 #include <tesseract/baseapi.h> // for api->GetIntVariable()
 
@@ -388,19 +384,7 @@ void ImageThresholder::OtsuThresholdRectToPix(Image src_pix, Image *out_pix) con
 
   int num_channels = OtsuThreshold(src_pix, rect_left_, rect_top_, rect_width_, rect_height_,
                                    thresholds, hi_values);
-  // only use opencl if compiled w/ OpenCL and selected device is opencl
-#ifdef USE_OPENCL
-  OpenclDevice od;
-  if (num_channels == 4 && od.selectedDeviceIsOpenCL() && rect_top_ == 0 && rect_left_ == 0) {
-    od.ThresholdRectToPixOCL((unsigned char *)pixGetData(src_pix), num_channels,
-                             pixGetWpl(src_pix) * 4, &thresholds[0], &hi_values[0], out_pix /*pix_OCL*/,
-                             rect_height_, rect_width_, rect_top_, rect_left_);
-  } else {
-#endif
-    ThresholdRectToPix(src_pix, num_channels, thresholds, hi_values, out_pix);
-#ifdef USE_OPENCL
-  }
-#endif
+  ThresholdRectToPix(src_pix, num_channels, thresholds, hi_values, out_pix);
 }
 
 /// Threshold the rectangle, taking everything except the src_pix
","{'added': [(387, '  ThresholdRectToPix(src_pix, num_channels, thresholds, hi_values, out_pix);')], 'deleted': [(28, '#if defined(USE_OPENCL)'), (29, '#  include ""openclwrapper.h"" // for OpenclDevice'), (30, '#endif'), (31, ''), (391, '  // only use opencl if compiled w/ OpenCL and selected device is opencl'), (392, '#ifdef USE_OPENCL'), (393, '  OpenclDevice od;'), (394, '  if (num_channels == 4 && od.selectedDeviceIsOpenCL() && rect_top_ == 0 && rect_left_ == 0) {'), (395, '    od.ThresholdRectToPixOCL((unsigned char *)pixGetData(src_pix), num_channels,'), (396, '                             pixGetWpl(src_pix) * 4, &thresholds[0], &hi_values[0], out_pix /*pix_OCL*/,'), (397, '                             rect_height_, rect_width_, rect_top_, rect_left_);'), (398, '  } else {'), (399, '#endif'), (400, '    ThresholdRectToPix(src_pix, num_channels, thresholds, hi_values, out_pix);'), (401, '#ifdef USE_OPENCL'), (402, '  }'), (403, '#endif')]}",yes
src\ccstruct\otsuthr.cpp,src\ccstruct\otsuthr.cpp,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -21,9 +21,6 @@
 #include <allheaders.h>
 #include <cstring>
 #include ""helpers.h""
-#if defined(USE_OPENCL)
-#  include ""openclwrapper.h"" // for OpenclDevice
-#endif
 
 namespace tesseract {
 
@@ -47,90 +44,40 @@ int OtsuThreshold(Image src_pix, int left, int top, int width, int height, std::
   thresholds.resize(num_channels);
   hi_values.resize(num_channels);
 
-  // only use opencl if compiled w/ OpenCL and selected device is opencl
-#ifdef USE_OPENCL
-  // all of channel 0 then all of channel 1...
-  std::vector<int> histogramAllChannels(kHistogramSize * num_channels);
-
-  // Calculate Histogram on GPU
-  OpenclDevice od;
-  if (od.selectedDeviceIsOpenCL() && (num_channels == 1 || num_channels == 4) && top == 0 &&
-      left == 0) {
-    od.HistogramRectOCL(pixGetData(src_pix), num_channels, pixGetWpl(src_pix) * 4, left, top, width,
-                        height, kHistogramSize, &histogramAllChannels[0]);
-
-    // Calculate Threshold from Histogram on cpu
-    for (int ch = 0; ch < num_channels; ++ch) {
-      thresholds[ch] = -1;
-      hi_values[ch] = -1;
-      int *histogram = &histogramAllChannels[kHistogramSize * ch];
-      int H;
-      int best_omega_0;
-      int best_t = OtsuStats(histogram, &H, &best_omega_0);
-      if (best_omega_0 == 0 || best_omega_0 == H) {
-        // This channel is empty.
-        continue;
-      }
-      // To be a convincing foreground we must have a small fraction of H
-      // or to be a convincing background we must have a large fraction of H.
-      // In between we assume this channel contains no thresholding information.
-      int hi_value = best_omega_0 < H * 0.5;
-      thresholds[ch] = best_t;
-      if (best_omega_0 > H * 0.75) {
-        any_good_hivalue = true;
-        hi_values[ch] = 0;
-      } else if (best_omega_0 < H * 0.25) {
-        any_good_hivalue = true;
-        hi_values[ch] = 1;
-      } else {
-        // In case all channels are like this, keep the best of the bad lot.
-        double hi_dist = hi_value ? (H - best_omega_0) : best_omega_0;
-        if (hi_dist > best_hi_dist) {
-          best_hi_dist = hi_dist;
-          best_hi_value = hi_value;
-          best_hi_index = ch;
-        }
-      }
+  for (int ch = 0; ch < num_channels; ++ch) {
+    thresholds[ch] = -1;
+    hi_values[ch] = -1;
+    // Compute the histogram of the image rectangle.
+    int histogram[kHistogramSize];
+    HistogramRect(src_pix, ch, left, top, width, height, histogram);
+    int H;
+    int best_omega_0;
+    int best_t = OtsuStats(histogram, &H, &best_omega_0);
+    if (best_omega_0 == 0 || best_omega_0 == H) {
+      // This channel is empty.
+      continue;
     }
-  } else {
-#endif
-    for (int ch = 0; ch < num_channels; ++ch) {
-      thresholds[ch] = -1;
-      hi_values[ch] = -1;
-      // Compute the histogram of the image rectangle.
-      int histogram[kHistogramSize];
-      HistogramRect(src_pix, ch, left, top, width, height, histogram);
-      int H;
-      int best_omega_0;
-      int best_t = OtsuStats(histogram, &H, &best_omega_0);
-      if (best_omega_0 == 0 || best_omega_0 == H) {
-        // This channel is empty.
-        continue;
-      }
-      // To be a convincing foreground we must have a small fraction of H
-      // or to be a convincing background we must have a large fraction of H.
-      // In between we assume this channel contains no thresholding information.
-      int hi_value = best_omega_0 < H * 0.5;
-      thresholds[ch] = best_t;
-      if (best_omega_0 > H * 0.75) {
-        any_good_hivalue = true;
-        hi_values[ch] = 0;
-      } else if (best_omega_0 < H * 0.25) {
-        any_good_hivalue = true;
-        hi_values[ch] = 1;
-      } else {
-        // In case all channels are like this, keep the best of the bad lot.
-        double hi_dist = hi_value ? (H - best_omega_0) : best_omega_0;
-        if (hi_dist > best_hi_dist) {
-          best_hi_dist = hi_dist;
-          best_hi_value = hi_value;
-          best_hi_index = ch;
-        }
+    // To be a convincing foreground we must have a small fraction of H
+    // or to be a convincing background we must have a large fraction of H.
+    // In between we assume this channel contains no thresholding information.
+    int hi_value = best_omega_0 < H * 0.5;
+    thresholds[ch] = best_t;
+    if (best_omega_0 > H * 0.75) {
+      any_good_hivalue = true;
+      hi_values[ch] = 0;
+    } else if (best_omega_0 < H * 0.25) {
+      any_good_hivalue = true;
+      hi_values[ch] = 1;
+    } else {
+      // In case all channels are like this, keep the best of the bad lot.
+      double hi_dist = hi_value ? (H - best_omega_0) : best_omega_0;
+      if (hi_dist > best_hi_dist) {
+        best_hi_dist = hi_dist;
+        best_hi_value = hi_value;
+        best_hi_index = ch;
       }
     }
-#ifdef USE_OPENCL
   }
-#endif // USE_OPENCL
 
   if (!any_good_hivalue) {
     // Use the best of the ones that were not good enough.
","{'added': [(47, '  for (int ch = 0; ch < num_channels; ++ch) {'), (48, '    thresholds[ch] = -1;'), (49, '    hi_values[ch] = -1;'), (50, '    // Compute the histogram of the image rectangle.'), (51, '    int histogram[kHistogramSize];'), (52, '    HistogramRect(src_pix, ch, left, top, width, height, histogram);'), (53, '    int H;'), (54, '    int best_omega_0;'), (55, '    int best_t = OtsuStats(histogram, &H, &best_omega_0);'), (56, '    if (best_omega_0 == 0 || best_omega_0 == H) {'), (57, '      // This channel is empty.'), (58, '      continue;'), (60, '    // To be a convincing foreground we must have a small fraction of H'), (61, '    // or to be a convincing background we must have a large fraction of H.'), (62, '    // In between we assume this channel contains no thresholding information.'), (63, '    int hi_value = best_omega_0 < H * 0.5;'), (64, '    thresholds[ch] = best_t;'), (65, '    if (best_omega_0 > H * 0.75) {'), (66, '      any_good_hivalue = true;'), (67, '      hi_values[ch] = 0;'), (68, '    } else if (best_omega_0 < H * 0.25) {'), (69, '      any_good_hivalue = true;'), (70, '      hi_values[ch] = 1;'), (71, '    } else {'), (72, '      // In case all channels are like this, keep the best of the bad lot.'), (73, '      double hi_dist = hi_value ? (H - best_omega_0) : best_omega_0;'), (74, '      if (hi_dist > best_hi_dist) {'), (75, '        best_hi_dist = hi_dist;'), (76, '        best_hi_value = hi_value;'), (77, '        best_hi_index = ch;')], 'deleted': [(24, '#if defined(USE_OPENCL)'), (25, '#  include ""openclwrapper.h"" // for OpenclDevice'), (26, '#endif'), (50, '  // only use opencl if compiled w/ OpenCL and selected device is opencl'), (51, '#ifdef USE_OPENCL'), (52, '  // all of channel 0 then all of channel 1...'), (53, '  std::vector<int> histogramAllChannels(kHistogramSize * num_channels);'), (54, ''), (55, '  // Calculate Histogram on GPU'), (56, '  OpenclDevice od;'), (57, '  if (od.selectedDeviceIsOpenCL() && (num_channels == 1 || num_channels == 4) && top == 0 &&'), (58, '      left == 0) {'), (59, '    od.HistogramRectOCL(pixGetData(src_pix), num_channels, pixGetWpl(src_pix) * 4, left, top, width,'), (60, '                        height, kHistogramSize, &histogramAllChannels[0]);'), (61, ''), (62, '    // Calculate Threshold from Histogram on cpu'), (63, '    for (int ch = 0; ch < num_channels; ++ch) {'), (64, '      thresholds[ch] = -1;'), (65, '      hi_values[ch] = -1;'), (66, '      int *histogram = &histogramAllChannels[kHistogramSize * ch];'), (67, '      int H;'), (68, '      int best_omega_0;'), (69, '      int best_t = OtsuStats(histogram, &H, &best_omega_0);'), (70, '      if (best_omega_0 == 0 || best_omega_0 == H) {'), (71, '        // This channel is empty.'), (72, '        continue;'), (73, '      }'), (74, '      // To be a convincing foreground we must have a small fraction of H'), (75, '      // or to be a convincing background we must have a large fraction of H.'), (76, '      // In between we assume this channel contains no thresholding information.'), (77, '      int hi_value = best_omega_0 < H * 0.5;'), (78, '      thresholds[ch] = best_t;'), (79, '      if (best_omega_0 > H * 0.75) {'), (80, '        any_good_hivalue = true;'), (81, '        hi_values[ch] = 0;'), (82, '      } else if (best_omega_0 < H * 0.25) {'), (83, '        any_good_hivalue = true;'), (84, '        hi_values[ch] = 1;'), (85, '      } else {'), (86, '        // In case all channels are like this, keep the best of the bad lot.'), (87, '        double hi_dist = hi_value ? (H - best_omega_0) : best_omega_0;'), (88, '        if (hi_dist > best_hi_dist) {'), (89, '          best_hi_dist = hi_dist;'), (90, '          best_hi_value = hi_value;'), (91, '          best_hi_index = ch;'), (92, '        }'), (93, '      }'), (95, '  } else {'), (96, '#endif'), (97, '    for (int ch = 0; ch < num_channels; ++ch) {'), (98, '      thresholds[ch] = -1;'), (99, '      hi_values[ch] = -1;'), (100, '      // Compute the histogram of the image rectangle.'), (101, '      int histogram[kHistogramSize];'), (102, '      HistogramRect(src_pix, ch, left, top, width, height, histogram);'), (103, '      int H;'), (104, '      int best_omega_0;'), (105, '      int best_t = OtsuStats(histogram, &H, &best_omega_0);'), (106, '      if (best_omega_0 == 0 || best_omega_0 == H) {'), (107, '        // This channel is empty.'), (108, '        continue;'), (109, '      }'), (110, '      // To be a convincing foreground we must have a small fraction of H'), (111, '      // or to be a convincing background we must have a large fraction of H.'), (112, '      // In between we assume this channel contains no thresholding information.'), (113, '      int hi_value = best_omega_0 < H * 0.5;'), (114, '      thresholds[ch] = best_t;'), (115, '      if (best_omega_0 > H * 0.75) {'), (116, '        any_good_hivalue = true;'), (117, '        hi_values[ch] = 0;'), (118, '      } else if (best_omega_0 < H * 0.25) {'), (119, '        any_good_hivalue = true;'), (120, '        hi_values[ch] = 1;'), (121, '      } else {'), (122, '        // In case all channels are like this, keep the best of the bad lot.'), (123, '        double hi_dist = hi_value ? (H - best_omega_0) : best_omega_0;'), (124, '        if (hi_dist > best_hi_dist) {'), (125, '          best_hi_dist = hi_dist;'), (126, '          best_hi_value = hi_value;'), (127, '          best_hi_index = ch;'), (128, '        }'), (131, '#ifdef USE_OPENCL'), (133, '#endif // USE_OPENCL')]}",yes
src\opencl\oclkernels.h,,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,926 +0,0 @@
-// Licensed under the Apache License, Version 2.0 (the ""License"");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-// http://www.apache.org/licenses/LICENSE-2.0
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an ""AS IS"" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-#ifndef TESSERACT_OPENCL_OCLKERNELS_H_
-#  define TESSERACT_OPENCL_OCLKERNELS_H_
-
-#  ifndef USE_EXTERNAL_KERNEL
-#    define KERNEL(...) #    __VA_ARGS__ ""\n""
-// Double precision is a default of spreadsheets
-// cl_khr_fp64: Khronos extension
-// cl_amd_fp64: AMD extension
-// use build option outside to define fp_t
-/////////////////////////////////////////////
-static const char *kernel_src = KERNEL(
-\n #ifdef KHR_DP_EXTENSION\n
-\n #pragma OPENCL EXTENSION cl_khr_fp64
-    : enable\n
-\n #elif AMD_DP_EXTENSION\n
-\n #pragma OPENCL EXTENSION cl_amd_fp64
-    : enable\n
-\n #else \n
-\n #endif \n
-        __kernel void composeRGBPixel(__global uint *tiffdata, int w, int h, int wpl, __global uint *output) {
-            int i = get_global_id(1);
-            int j = get_global_id(0);
-            int tiffword, rval, gval, bval;
-
-            //Ignore the excess
-            if ((i >= h) || (j >= w))
-                return;
-
-            tiffword = tiffdata[i * w + j];
-            rval = ((tiffword)&0xff);
-            gval = (((tiffword) >> 8) & 0xff);
-            bval = (((tiffword) >> 16) & 0xff);
-            output[i * wpl + j] = (rval << (8 * (sizeof(uint) - 1 - 0))) | (gval << (8 * (sizeof(uint) - 1 - 1))) | (bval << (8 * (sizeof(uint) - 1 - 2)));
-        })
-
-    KERNEL(
-\n__kernel void pixSubtract_inplace(__global int *dword, __global int *sword, const int wpl, const int h) {
-        const unsigned int row = get_global_id(1);
-        const unsigned int col = get_global_id(0);
-        const unsigned int pos = row * wpl + col;
-
-        //Ignore the execss
-        if (row >= h || col >= wpl)
-            return;
-
-        *(dword + pos) &= ~(*(sword + pos));
-    }\n)
-
-        KERNEL(
-\n__kernel void morphoDilateHor_5x5(__global int *sword, __global int *dword, const int wpl, const int h) {
-            const unsigned int pos = get_global_id(0);
-            unsigned int prevword, nextword, currword, tempword;
-            unsigned int destword;
-            const int col = pos % wpl;
-
-            //Ignore the execss
-            if (pos >= (wpl * h))
-                return;
-
-            currword = *(sword + pos);
-            destword = currword;
-
-            //Handle boundary conditions
-            if (col == 0)
-                prevword = 0;
-            else
-                prevword = *(sword + pos - 1);
-
-            if (col == (wpl - 1))
-                nextword = 0;
-            else
-                nextword = *(sword + pos + 1);
-
-            //Loop unrolled
-
-            //1 bit to left and 1 bit to right
-            //Get the max value on LHS of every pixel
-            tempword = (prevword << (31)) | ((currword >> 1));
-            destword |= tempword;
-            //Get max value on RHS of every pixel
-            tempword = (currword << 1) | (nextword >> (31));
-            destword |= tempword;
-
-            //2 bit to left and 2 bit to right
-            //Get the max value on LHS of every pixel
-            tempword = (prevword << (30)) | ((currword >> 2));
-            destword |= tempword;
-            //Get max value on RHS of every pixel
-            tempword = (currword << 2) | (nextword >> (30));
-            destword |= tempword;
-
-            *(dword + pos) = destword;
-        }\n)
-
-            KERNEL(
-\n__kernel void morphoDilateVer_5x5(__global int *sword, __global int *dword, const int wpl, const int h) {
-                const int col = get_global_id(0);
-                const int row = get_global_id(1);
-                const unsigned int pos = row * wpl + col;
-                unsigned int tempword;
-                unsigned int destword;
-                int i;
-
-                //Ignore the execss
-                if (row >= h || col >= wpl)
-                    return;
-
-                destword = *(sword + pos);
-
-                //2 words above
-                i = (row - 2) < 0 ? row : (row - 2);
-                tempword = *(sword + i * wpl + col);
-                destword |= tempword;
-
-                //1 word above
-                i = (row - 1) < 0 ? row : (row - 1);
-                tempword = *(sword + i * wpl + col);
-                destword |= tempword;
-
-                //1 word below
-                i = (row >= (h - 1)) ? row : (row + 1);
-                tempword = *(sword + i * wpl + col);
-                destword |= tempword;
-
-                //2 words below
-                i = (row >= (h - 2)) ? row : (row + 2);
-                tempword = *(sword + i * wpl + col);
-                destword |= tempword;
-
-                *(dword + pos) = destword;
-            }\n)
-
-                KERNEL(
-\n__kernel void morphoDilateHor(__global int *sword, __global int *dword, const int xp, const int xn, const int wpl, const int h) {
-                    const int col = get_global_id(0);
-                    const int row = get_global_id(1);
-                    const unsigned int pos = row * wpl + col;
-                    unsigned int parbitsxp, parbitsxn, nwords;
-                    unsigned int destword, tempword, lastword, currword;
-                    unsigned int lnextword, lprevword, rnextword, rprevword, firstword, secondword;
-                    int i, j, siter, eiter;
-
-                    //Ignore the execss
-                    if (pos >= (wpl * h) || (xn < 1 && xp < 1))
-                        return;
-
-                    currword = *(sword + pos);
-                    destword = currword;
-
-                    parbitsxp = xp & 31;
-                    parbitsxn = xn & 31;
-                    nwords = xp >> 5;
-
-                    if (parbitsxp > 0)
-                        nwords += 1;
-                    else
-                        parbitsxp = 31;
-
-                    siter = (col - nwords);
-                    eiter = (col + nwords);
-
-                    //Get prev word
-                    if (col == 0)
-                        firstword = 0x0;
-                    else
-                        firstword = *(sword + pos - 1);
-
-                    //Get next word
-                    if (col == (wpl - 1))
-                        secondword = 0x0;
-                    else
-                        secondword = *(sword + pos + 1);
-
-                    //Last partial bits on either side
-                    for (i = 1; i <= parbitsxp; i++) {
-                        //Get the max value on LHS of every pixel
-                        tempword = ((i == parbitsxp) && (parbitsxp != parbitsxn)) ? 0x0 : (firstword << (32 - i)) | ((currword >> i));
-
-                        destword |= tempword;
-
-                        //Get max value on RHS of every pixel
-                        tempword = (currword << i) | (secondword >> (32 - i));
-                        destword |= tempword;
-                    }
-
-                    //Return if halfwidth <= 1 word
-                    if (nwords == 1) {
-                        if (xn == 32) {
-                            destword |= firstword;
-                        }
-                        if (xp == 32) {
-                            destword |= secondword;
-                        }
-
-                        *(dword + pos) = destword;
-                        return;
-                    }
-
-                    if (siter < 0)
-                        firstword = 0x0;
-                    else
-                        firstword = *(sword + row * wpl + siter);
-
-                    if (eiter >= wpl)
-                        lastword = 0x0;
-                    else
-                        lastword = *(sword + row * wpl + eiter);
-
-                    for (i = 1; i < nwords; i++) {
-                        //Gets LHS words
-                        if ((siter + i) < 0)
-                            secondword = 0x0;
-                        else
-                            secondword = *(sword + row * wpl + siter + i);
-
-                        lprevword = firstword << (32 - parbitsxn) | secondword >> parbitsxn;
-
-                        firstword = secondword;
-
-                        if ((siter + i + 1) < 0)
-                            secondword = 0x0;
-                        else
-                            secondword = *(sword + row * wpl + siter + i + 1);
-
-                        lnextword = firstword << (32 - parbitsxn) | secondword >> parbitsxn;
-
-                        //Gets RHS words
-                        if ((eiter - i) >= wpl)
-                            firstword = 0x0;
-                        else
-                            firstword = *(sword + row * wpl + eiter - i);
-
-                        rnextword = firstword << parbitsxp | lastword >> (32 - parbitsxp);
-
-                        lastword = firstword;
-                        if ((eiter - i - 1) >= wpl)
-                            firstword = 0x0;
-                        else
-                            firstword = *(sword + row * wpl + eiter - i - 1);
-
-                        rprevword = firstword << parbitsxp | lastword >> (32 - parbitsxp);
-
-                        for (j = 1; j < 32; j++) {
-                            //OR LHS full words
-                            tempword = (lprevword << j) | (lnextword >> (32 - j));
-                            destword |= tempword;
-
-                            //OR RHS full words
-                            tempword = (rprevword << j) | (rnextword >> (32 - j));
-                            destword |= tempword;
-                        }
-
-                        destword |= lprevword;
-                        destword |= lnextword;
-                        destword |= rprevword;
-                        destword |= rnextword;
-
-                        lastword = firstword;
-                        firstword = secondword;
-                    }
-
-                    *(dword + pos) = destword;
-                }\n)
-
-                    KERNEL(
-\n__kernel void morphoDilateHor_32word(__global int *sword, __global int *dword, const int halfwidth, const int wpl, const int h, const char isEven) {
-                        const int col = get_global_id(0);
-                        const int row = get_global_id(1);
-                        const unsigned int pos = row * wpl + col;
-                        unsigned int prevword, nextword, currword, tempword;
-                        unsigned int destword;
-                        int i;
-
-                        //Ignore the execss
-                        if (pos >= (wpl * h))
-                            return;
-
-                        currword = *(sword + pos);
-                        destword = currword;
-
-                        //Handle boundary conditions
-                        if (col == 0)
-                            prevword = 0;
-                        else
-                            prevword = *(sword + pos - 1);
-
-                        if (col == (wpl - 1))
-                            nextword = 0;
-                        else
-                            nextword = *(sword + pos + 1);
-
-                        for (i = 1; i <= halfwidth; i++) {
-                            //Get the max value on LHS of every pixel
-                            if (i == halfwidth && isEven) {
-                                tempword = 0x0;
-                            } else {
-                                tempword = (prevword << (32 - i)) | ((currword >> i));
-                            }
-
-                            destword |= tempword;
-
-                            //Get max value on RHS of every pixel
-                            tempword = (currword << i) | (nextword >> (32 - i));
-
-                            destword |= tempword;
-                        }
-
-                        *(dword + pos) = destword;
-                    }\n)
-
-                        KERNEL(
-\n__kernel void morphoDilateVer(__global int *sword, __global int *dword, const int yp, const int wpl, const int h, const int yn) {
-                            const int col = get_global_id(0);
-                            const int row = get_global_id(1);
-                            const unsigned int pos = row * wpl + col;
-                            unsigned int tempword;
-                            unsigned int destword;
-                            int i, siter, eiter;
-
-                            //Ignore the execss
-                            if (row >= h || col >= wpl)
-                                return;
-
-                            destword = *(sword + pos);
-
-                            //Set start position and end position considering the boundary conditions
-                            siter = (row - yn) < 0 ? 0 : (row - yn);
-                            eiter = (row >= (h - yp)) ? (h - 1) : (row + yp);
-
-                            for (i = siter; i <= eiter; i++) {
-                                tempword = *(sword + i * wpl + col);
-
-                                destword |= tempword;
-                            }
-
-                            *(dword + pos) = destword;
-                        }\n)
-
-                            KERNEL(
-\n__kernel void morphoErodeHor_5x5(__global int *sword, __global int *dword, const int wpl, const int h) {
-                                const unsigned int pos = get_global_id(0);
-                                unsigned int prevword, nextword, currword, tempword;
-                                unsigned int destword;
-                                const int col = pos % wpl;
-
-                                //Ignore the execss
-                                if (pos >= (wpl * h))
-                                    return;
-
-                                currword = *(sword + pos);
-                                destword = currword;
-
-                                //Handle boundary conditions
-                                if (col == 0)
-                                    prevword = 0xffffffff;
-                                else
-                                    prevword = *(sword + pos - 1);
-
-                                if (col == (wpl - 1))
-                                    nextword = 0xffffffff;
-                                else
-                                    nextword = *(sword + pos + 1);
-
-                                //Loop unrolled
-
-                                //1 bit to left and 1 bit to right
-                                //Get the min value on LHS of every pixel
-                                tempword = (prevword << (31)) | ((currword >> 1));
-                                destword &= tempword;
-                                //Get min value on RHS of every pixel
-                                tempword = (currword << 1) | (nextword >> (31));
-                                destword &= tempword;
-
-                                //2 bit to left and 2 bit to right
-                                //Get the min value on LHS of every pixel
-                                tempword = (prevword << (30)) | ((currword >> 2));
-                                destword &= tempword;
-                                //Get min value on RHS of every pixel
-                                tempword = (currword << 2) | (nextword >> (30));
-                                destword &= tempword;
-
-                                *(dword + pos) = destword;
-                            }\n)
-
-                                KERNEL(
-\n__kernel void morphoErodeVer_5x5(__global int *sword, __global int *dword, const int wpl, const int h, const int fwmask, const int lwmask) {
-                                    const int col = get_global_id(0);
-                                    const int row = get_global_id(1);
-                                    const unsigned int pos = row * wpl + col;
-                                    unsigned int tempword;
-                                    unsigned int destword;
-                                    int i;
-
-                                    //Ignore the execss
-                                    if (row >= h || col >= wpl)
-                                        return;
-
-                                    destword = *(sword + pos);
-
-                                    if (row < 2 || row >= (h - 2)) {
-                                        destword = 0x0;
-                                    } else {
-                                        //2 words above
-                                        //i = (row - 2) < 0 ? row : (row - 2);
-                                        i = (row - 2);
-                                        tempword = *(sword + i * wpl + col);
-                                        destword &= tempword;
-
-                                        //1 word above
-                                        //i = (row - 1) < 0 ? row  : (row - 1);
-                                        i = (row - 1);
-                                        tempword = *(sword + i * wpl + col);
-                                        destword &= tempword;
-
-                                        //1 word below
-                                        //i = (row >= (h - 1)) ? row : (row + 1);
-                                        i = (row + 1);
-                                        tempword = *(sword + i * wpl + col);
-                                        destword &= tempword;
-
-                                        //2 words below
-                                        //i = (row >= (h - 2)) ? row : (row + 2);
-                                        i = (row + 2);
-                                        tempword = *(sword + i * wpl + col);
-                                        destword &= tempword;
-
-                                        if (col == 0) {
-                                            destword &= fwmask;
-                                        }
-                                        if (col == (wpl - 1)) {
-                                            destword &= lwmask;
-                                        }
-                                    }
-
-                                    *(dword + pos) = destword;
-                                }\n)
-
-                                    KERNEL(
-\n__kernel void morphoErodeHor(__global int *sword, __global int *dword, const int xp, const int xn, const int wpl, const int h, const char isAsymmetric, const int rwmask, const int lwmask) {
-                                        const int col = get_global_id(0);
-                                        const int row = get_global_id(1);
-                                        const unsigned int pos = row * wpl + col;
-                                        unsigned int parbitsxp, parbitsxn, nwords;
-                                        unsigned int destword, tempword, lastword, currword;
-                                        unsigned int lnextword, lprevword, rnextword, rprevword, firstword, secondword;
-                                        int i, j, siter, eiter;
-
-                                        //Ignore the execss
-                                        if (pos >= (wpl * h) || (xn < 1 && xp < 1))
-                                            return;
-
-                                        currword = *(sword + pos);
-                                        destword = currword;
-
-                                        parbitsxp = xp & 31;
-                                        parbitsxn = xn & 31;
-                                        nwords = xp >> 5;
-
-                                        if (parbitsxp > 0)
-                                            nwords += 1;
-                                        else
-                                            parbitsxp = 31;
-
-                                        siter = (col - nwords);
-                                        eiter = (col + nwords);
-
-                                        //Get prev word
-                                        if (col == 0)
-                                            firstword = 0xffffffff;
-                                        else
-                                            firstword = *(sword + pos - 1);
-
-                                        //Get next word
-                                        if (col == (wpl - 1))
-                                            secondword = 0xffffffff;
-                                        else
-                                            secondword = *(sword + pos + 1);
-
-                                        //Last partial bits on either side
-                                        for (i = 1; i <= parbitsxp; i++) {
-                                            //Get the max value on LHS of every pixel
-                                            tempword = (firstword << (32 - i)) | ((currword >> i));
-                                            destword &= tempword;
-
-                                            //Get max value on RHS of every pixel
-                                            tempword = ((i == parbitsxp) && (parbitsxp != parbitsxn)) ? 0xffffffff : (currword << i) | (secondword >> (32 - i));
-
-                                            //tempword = (currword << i) | (secondword >> (32 - i));
-                                            destword &= tempword;
-                                        }
-
-                                        //Return if halfwidth <= 1 word
-                                        if (nwords == 1) {
-                                            if (xp == 32) {
-                                                destword &= firstword;
-                                            }
-                                            if (xn == 32) {
-                                                destword &= secondword;
-                                            }
-
-                                            //Clear boundary pixels
-                                            if (isAsymmetric) {
-                                                if (col == 0)
-                                                    destword &= rwmask;
-                                                if (col == (wpl - 1))
-                                                    destword &= lwmask;
-                                            }
-
-                                            *(dword + pos) = destword;
-                                            return;
-                                        }
-
-                                        if (siter < 0)
-                                            firstword = 0xffffffff;
-                                        else
-                                            firstword = *(sword + row * wpl + siter);
-
-                                        if (eiter >= wpl)
-                                            lastword = 0xffffffff;
-                                        else
-                                            lastword = *(sword + row * wpl + eiter);
-
-                                        for (i = 1; i < nwords; i++) {
-                                            //Gets LHS words
-                                            if ((siter + i) < 0)
-                                                secondword = 0xffffffff;
-                                            else
-                                                secondword = *(sword + row * wpl + siter + i);
-
-                                            lprevword = firstword << (32 - parbitsxp) | secondword >> (parbitsxp);
-
-                                            firstword = secondword;
-
-                                            if ((siter + i + 1) < 0)
-                                                secondword = 0xffffffff;
-                                            else
-                                                secondword = *(sword + row * wpl + siter + i + 1);
-
-                                            lnextword = firstword << (32 - parbitsxp) | secondword >> (parbitsxp);
-
-                                            //Gets RHS words
-                                            if ((eiter - i) >= wpl)
-                                                firstword = 0xffffffff;
-                                            else
-                                                firstword = *(sword + row * wpl + eiter - i);
-
-                                            rnextword = firstword << parbitsxn | lastword >> (32 - parbitsxn);
-
-                                            lastword = firstword;
-                                            if ((eiter - i - 1) >= wpl)
-                                                firstword = 0xffffffff;
-                                            else
-                                                firstword = *(sword + row * wpl + eiter - i - 1);
-
-                                            rprevword = firstword << parbitsxn | lastword >> (32 - parbitsxn);
-
-                                            for (j = 0; j < 32; j++) {
-                                                //OR LHS full words
-                                                tempword = (lprevword << j) | (lnextword >> (32 - j));
-                                                destword &= tempword;
-
-                                                //OR RHS full words
-                                                tempword = (rprevword << j) | (rnextword >> (32 - j));
-                                                destword &= tempword;
-                                            }
-
-                                            destword &= lprevword;
-                                            destword &= lnextword;
-                                            destword &= rprevword;
-                                            destword &= rnextword;
-
-                                            lastword = firstword;
-                                            firstword = secondword;
-                                        }
-
-                                        if (isAsymmetric) {
-                                            //Clear boundary pixels
-                                            if (col < (nwords - 1))
-                                                destword = 0x0;
-                                            else if (col == (nwords - 1))
-                                                destword &= rwmask;
-                                            else if (col > (wpl - nwords))
-                                                destword = 0x0;
-                                            else if (col == (wpl - nwords))
-                                                destword &= lwmask;
-                                        }
-
-                                        *(dword + pos) = destword;
-                                    }\n)
-
-                                        KERNEL(
-\n__kernel void morphoErodeHor_32word(__global int *sword, __global int *dword, const int halfwidth, const int wpl, const int h, const char clearBoundPixH, const int rwmask, const int lwmask, const char isEven) {
-                                            const int col = get_global_id(0);
-                                            const int row = get_global_id(1);
-                                            const unsigned int pos = row * wpl + col;
-                                            unsigned int prevword, nextword, currword, tempword, destword;
-                                            int i;
-
-                                            //Ignore the execss
-                                            if (pos >= (wpl * h))
-                                                return;
-
-                                            currword = *(sword + pos);
-                                            destword = currword;
-
-                                            //Handle boundary conditions
-                                            if (col == 0)
-                                                prevword = 0xffffffff;
-                                            else
-                                                prevword = *(sword + pos - 1);
-
-                                            if (col == (wpl - 1))
-                                                nextword = 0xffffffff;
-                                            else
-                                                nextword = *(sword + pos + 1);
-
-                                            for (i = 1; i <= halfwidth; i++) {
-                                                //Get the min value on LHS of every pixel
-                                                tempword = (prevword << (32 - i)) | ((currword >> i));
-
-                                                destword &= tempword;
-
-                                                //Get min value on RHS of every pixel
-                                                if (i == halfwidth && isEven) {
-                                                    tempword = 0xffffffff;
-                                                } else {
-                                                    tempword = (currword << i) | (nextword >> (32 - i));
-                                                }
-
-                                                destword &= tempword;
-                                            }
-
-                                            if (clearBoundPixH) {
-                                                if (col == 0) {
-                                                    destword &= rwmask;
-                                                } else if (col == (wpl - 1)) {
-                                                    destword &= lwmask;
-                                                }
-                                            }
-
-                                            *(dword + pos) = destword;
-                                        }\n)
-
-                                            KERNEL(
-\n__kernel void morphoErodeVer(__global int *sword, __global int *dword, const int yp, const int wpl, const int h, const char clearBoundPixV, const int yn) {
-                                                const int col = get_global_id(0);
-                                                const int row = get_global_id(1);
-                                                const unsigned int pos = row * wpl + col;
-                                                unsigned int tempword, destword;
-                                                int i, siter, eiter;
-
-                                                //Ignore the execss
-                                                if (row >= h || col >= wpl)
-                                                    return;
-
-                                                destword = *(sword + pos);
-
-                                                //Set start position and end position considering the boundary conditions
-                                                siter = (row - yp) < 0 ? 0 : (row - yp);
-                                                eiter = (row >= (h - yn)) ? (h - 1) : (row + yn);
-
-                                                for (i = siter; i <= eiter; i++) {
-                                                    tempword = *(sword + i * wpl + col);
-
-                                                    destword &= tempword;
-                                                }
-
-                                                //Clear boundary pixels
-                                                if (clearBoundPixV && ((row < yp) || ((h - row) <= yn))) {
-                                                    destword = 0x0;
-                                                }
-
-                                                *(dword + pos) = destword;
-                                            }\n)
-
-    // HistogramRect Kernel: Accumulate
-    // assumes 4 channels, i.e., bytes_per_pixel = 4
-    // assumes number of pixels is multiple of 8
-    // data is laid out as
-    // ch0                                           ch1 ...
-    // bin0          bin1            bin2...         bin0...
-    // rpt0,1,2...256  rpt0,1,2...
-    KERNEL(
-\n #define HIST_REDUNDANCY 256\n
-\n #define GROUP_SIZE 256\n
-\n #define HIST_SIZE 256\n
-\n #define NUM_CHANNELS 4\n
-\n #define HR_UNROLL_SIZE 8 \n
-\n #define HR_UNROLL_TYPE uchar8 \n
-
-        __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_HistogramRectAllChannels(__global const uchar8 *data, uint numPixels, __global uint *histBuffer) {
-            // declare variables
-            uchar8 pixels;
-            int threadOffset = get_global_id(0) % HIST_REDUNDANCY;
-
-            // for each pixel/channel, accumulate in global memory
-            for (uint pc = get_global_id(0); pc < numPixels * NUM_CHANNELS / HR_UNROLL_SIZE; pc += get_global_size(0)) {
-                pixels = data[pc];
-                //                       channel                        bin                         thread
-                atomic_inc(&histBuffer[0 * HIST_SIZE * HIST_REDUNDANCY + pixels.s0 * HIST_REDUNDANCY + threadOffset]);  // ch0
-                atomic_inc(&histBuffer[0 * HIST_SIZE * HIST_REDUNDANCY + pixels.s4 * HIST_REDUNDANCY + threadOffset]);  // ch0
-                atomic_inc(&histBuffer[1 * HIST_SIZE * HIST_REDUNDANCY + pixels.s1 * HIST_REDUNDANCY + threadOffset]);  // ch1
-                atomic_inc(&histBuffer[1 * HIST_SIZE * HIST_REDUNDANCY + pixels.s5 * HIST_REDUNDANCY + threadOffset]);  // ch1
-                atomic_inc(&histBuffer[2 * HIST_SIZE * HIST_REDUNDANCY + pixels.s2 * HIST_REDUNDANCY + threadOffset]);  // ch2
-                atomic_inc(&histBuffer[2 * HIST_SIZE * HIST_REDUNDANCY + pixels.s6 * HIST_REDUNDANCY + threadOffset]);  // ch2
-                atomic_inc(&histBuffer[3 * HIST_SIZE * HIST_REDUNDANCY + pixels.s3 * HIST_REDUNDANCY + threadOffset]);  // ch3
-                atomic_inc(&histBuffer[3 * HIST_SIZE * HIST_REDUNDANCY + pixels.s7 * HIST_REDUNDANCY + threadOffset]);  // ch3
-            }
-        })
-
-        KERNEL(
-            // NUM_CHANNELS = 1
-            __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_HistogramRectOneChannel(__global const uchar8 *data, uint numPixels, __global uint *histBuffer) {
-                // declare variables
-                uchar8 pixels;
-                int threadOffset = get_global_id(0) % HIST_REDUNDANCY;
-
-                // for each pixel/channel, accumulate in global memory
-                for (uint pc = get_global_id(0); pc < numPixels / HR_UNROLL_SIZE; pc += get_global_size(0)) {
-                    pixels = data[pc];
-                    //                        bin                         thread
-                    atomic_inc(&histBuffer[pixels.s0 * HIST_REDUNDANCY + threadOffset]);
-                    atomic_inc(&histBuffer[pixels.s1 * HIST_REDUNDANCY + threadOffset]);
-                    atomic_inc(&histBuffer[pixels.s2 * HIST_REDUNDANCY + threadOffset]);
-                    atomic_inc(&histBuffer[pixels.s3 * HIST_REDUNDANCY + threadOffset]);
-                    atomic_inc(&histBuffer[pixels.s4 * HIST_REDUNDANCY + threadOffset]);
-                    atomic_inc(&histBuffer[pixels.s5 * HIST_REDUNDANCY + threadOffset]);
-                    atomic_inc(&histBuffer[pixels.s6 * HIST_REDUNDANCY + threadOffset]);
-                    atomic_inc(&histBuffer[pixels.s7 * HIST_REDUNDANCY + threadOffset]);
-                }
-            })
-
-    // HistogramRect Kernel: Reduction
-    // only supports 4 channels
-    // each work group handles a single channel of a single histogram bin
-    KERNEL(__attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_HistogramRectAllChannelsReduction(int n,  // unused pixel redundancy
-                                                                                                                   __global uint *histBuffer, __global int *histResult) {
-        // declare variables
-        int channel = get_group_id(0) / HIST_SIZE;
-        int bin = get_group_id(0) % HIST_SIZE;
-        int value = 0;
-
-        // accumulate in register
-        for (uint i = get_local_id(0); i < HIST_REDUNDANCY; i += GROUP_SIZE) {
-            value += histBuffer[channel * HIST_SIZE * HIST_REDUNDANCY + bin * HIST_REDUNDANCY + i];
-        }
-
-        // reduction in local memory
-        __local int localHist[GROUP_SIZE];
-        localHist[get_local_id(0)] = value;
-        barrier(CLK_LOCAL_MEM_FENCE);
-        for (int stride = GROUP_SIZE / 2; stride >= 1; stride /= 2) {
-            if (get_local_id(0) < stride) {
-                value = localHist[get_local_id(0) + stride];
-            }
-            barrier(CLK_LOCAL_MEM_FENCE);
-            if (get_local_id(0) < stride) {
-                localHist[get_local_id(0)] += value;
-            }
-            barrier(CLK_LOCAL_MEM_FENCE);
-        }
-
-        // write reduction to final result
-        if (get_local_id(0) == 0) {
-            histResult[get_group_id(0)] = localHist[0];
-        }
-    }  // kernel_HistogramRectAllChannels
-           )
-
-        KERNEL(
-            // NUM_CHANNELS = 1
-            __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_HistogramRectOneChannelReduction(int n,  // unused pixel redundancy
-                                                                                                                   __global uint *histBuffer, __global int *histResult) {
-                // declare variables
-                // int channel = get_group_id(0)/HIST_SIZE;
-                int bin = get_group_id(0) % HIST_SIZE;
-                int value = 0;
-
-                // accumulate in register
-                for (int i = get_local_id(0); i < HIST_REDUNDANCY; i += GROUP_SIZE) {
-                    value += histBuffer[bin * HIST_REDUNDANCY + i];
-                }
-
-                // reduction in local memory
-                __local int localHist[GROUP_SIZE];
-                localHist[get_local_id(0)] = value;
-                barrier(CLK_LOCAL_MEM_FENCE);
-                for (int stride = GROUP_SIZE / 2; stride >= 1; stride /= 2) {
-                    if (get_local_id(0) < stride) {
-                        value = localHist[get_local_id(0) + stride];
-                    }
-                    barrier(CLK_LOCAL_MEM_FENCE);
-                    if (get_local_id(0) < stride) {
-                        localHist[get_local_id(0)] += value;
-                    }
-                    barrier(CLK_LOCAL_MEM_FENCE);
-                }
-
-                // write reduction to final result
-                if (get_local_id(0) == 0) {
-                    histResult[get_group_id(0)] = localHist[0];
-                }
-            }  // kernel_HistogramRectOneChannelReduction
-            )
-
-    // ThresholdRectToPix Kernel
-    // only supports 4 channels
-    // imageData is input image (24-bits/pixel)
-    // pix is output image (1-bit/pixel)
-    KERNEL(
-\n #define CHAR_VEC_WIDTH 4 \n
-\n #define PIXELS_PER_WORD 32 \n
-\n #define PIXELS_PER_BURST 8 \n
-\n #define BURSTS_PER_WORD (PIXELS_PER_WORD)/(PIXELS_PER_BURST) \n
-\n typedef union {
-        uchar s[PIXELS_PER_BURST * NUM_CHANNELS];
-        uchar4 v[(PIXELS_PER_BURST * NUM_CHANNELS) / CHAR_VEC_WIDTH];
-    } charVec;
-
-        __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_ThresholdRectToPix(__global const uchar4 *imageData, int height, int width,
-                                                                                                 int wpl,  // words per line
-                                                                                                 __global int *thresholds, __global int *hi_values, __global int *pix) {
-            // declare variables
-            int pThresholds[NUM_CHANNELS];
-            int pHi_Values[NUM_CHANNELS];
-            for (int i = 0; i < NUM_CHANNELS; i++) {
-                pThresholds[i] = thresholds[i];
-                pHi_Values[i] = hi_values[i];
-            }
-
-            // for each word (32 pixels) in output image
-            for (uint w = get_global_id(0); w < wpl * height; w += get_global_size(0)) {
-                unsigned int word = 0;  // all bits start at zero
-                // for each burst in word
-                for (int b = 0; b < BURSTS_PER_WORD; b++) {
-                    // load burst
-                    charVec pixels;
-                    int offset = (w / wpl) * width;
-                    offset += (w % wpl) * PIXELS_PER_WORD;
-                    offset += b * PIXELS_PER_BURST;
-
-                    for (int i = 0; i < PIXELS_PER_BURST; ++i)
-                        pixels.v[i] = imageData[offset + i];
-
-                    // for each pixel in burst
-                    for (int p = 0; p < PIXELS_PER_BURST; p++) {
-                        for (int c = 0; c < NUM_CHANNELS; c++) {
-                            unsigned char pixChan = pixels.s[p * NUM_CHANNELS + c];
-                            if (pHi_Values[c] >= 0 && (pixChan > pThresholds[c]) == (pHi_Values[c] == 0)) {
-                                const uint kTopBit = 0x80000000;
-                                word |= (kTopBit >> ((b * PIXELS_PER_BURST + p) & 31));
-                            }
-                        }
-                    }
-                }
-                pix[w] = word;
-            }
-        }
-
-\n #define CHAR_VEC_WIDTH 8 \n
-\n #define PIXELS_PER_WORD 32 \n
-\n #define PIXELS_PER_BURST 8 \n
-\n #define BURSTS_PER_WORD (PIXELS_PER_WORD) / (PIXELS_PER_BURST) \n
-\n typedef union {
-            uchar s[PIXELS_PER_BURST * 1];
-            uchar8 v[(PIXELS_PER_BURST * 1) / CHAR_VEC_WIDTH];
-        } charVec1;
-
-        __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_ThresholdRectToPix_OneChan(__global const uchar8 *imageData, int height, int width,
-                                                                                                         int wpl,  // words per line of output image
-                                                                                                         __global int *thresholds, __global int *hi_values, __global int *pix) {
-            // declare variables
-            int pThresholds[1];
-            int pHi_Values[1];
-            for (int i = 0; i < 1; i++) {
-                pThresholds[i] = thresholds[i];
-                pHi_Values[i] = hi_values[i];
-            }
-
-            // for each word (32 pixels) in output image
-            for (uint w = get_global_id(0); w < wpl * height; w += get_global_size(0)) {
-                unsigned int word = 0;  // all bits start at zero
-
-                // for each burst in word
-                for (int b = 0; b < BURSTS_PER_WORD; b++) {
-                    // load burst
-                    charVec1 pixels;
-                    // for each char8 in burst
-                    pixels.v[0] = imageData[w * BURSTS_PER_WORD + b + 0];
-
-                    // for each pixel in burst
-                    for (int p = 0; p < PIXELS_PER_BURST; p++) {
-                        //int littleEndianIdx = p ^ 3;
-                        //int bigEndianIdx = p;
-                        int idx =
-\n #ifdef __ENDIAN_LITTLE__\n
-                            p ^
-                            3;
-                        \n #else \n
-                            p;
-                        \n #endif \n unsigned char pixChan = pixels.s[idx];
-                        if (pHi_Values[0] >= 0 && (pixChan > pThresholds[0]) == (pHi_Values[0] == 0)) {
-                            const uint kTopBit = 0x80000000;
-                            word |= (kTopBit >> ((b * PIXELS_PER_BURST + p) & 31));
-                        }
-                    }
-                }
-                pix[w] = word;
-            }
-        })
-
-    ;  // close char*
-
-#  endif // USE_EXTERNAL_KERNEL
-#endif   // TESSERACT_OPENCL_OCLKERNELS_H_
-/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
","{'added': [], 'deleted': [(1, '// Licensed under the Apache License, Version 2.0 (the ""License"");'), (2, '// you may not use this file except in compliance with the License.'), (3, '// You may obtain a copy of the License at'), (4, '// http://www.apache.org/licenses/LICENSE-2.0'), (5, '// Unless required by applicable law or agreed to in writing, software'), (6, '// distributed under the License is distributed on an ""AS IS"" BASIS,'), (7, '// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (8, '// See the License for the specific language governing permissions and'), (9, '// limitations under the License.'), (10, ''), (11, '#ifndef TESSERACT_OPENCL_OCLKERNELS_H_'), (12, '#  define TESSERACT_OPENCL_OCLKERNELS_H_'), (13, ''), (14, '#  ifndef USE_EXTERNAL_KERNEL'), (15, '#    define KERNEL(...) #    __VA_ARGS__ ""\\n""'), (16, '// Double precision is a default of spreadsheets'), (17, '// cl_khr_fp64: Khronos extension'), (18, '// cl_amd_fp64: AMD extension'), (19, '// use build option outside to define fp_t'), (20, '/////////////////////////////////////////////'), (21, 'static const char *kernel_src = KERNEL('), (22, '\\n #ifdef KHR_DP_EXTENSION\\n'), (23, '\\n #pragma OPENCL EXTENSION cl_khr_fp64'), (24, '    : enable\\n'), (25, '\\n #elif AMD_DP_EXTENSION\\n'), (26, '\\n #pragma OPENCL EXTENSION cl_amd_fp64'), (27, '    : enable\\n'), (28, '\\n #else \\n'), (29, '\\n #endif \\n'), (30, '        __kernel void composeRGBPixel(__global uint *tiffdata, int w, int h, int wpl, __global uint *output) {'), (31, '            int i = get_global_id(1);'), (32, '            int j = get_global_id(0);'), (33, '            int tiffword, rval, gval, bval;'), (34, ''), (35, '            //Ignore the excess'), (36, '            if ((i >= h) || (j >= w))'), (37, '                return;'), (38, ''), (39, '            tiffword = tiffdata[i * w + j];'), (40, '            rval = ((tiffword)&0xff);'), (41, '            gval = (((tiffword) >> 8) & 0xff);'), (42, '            bval = (((tiffword) >> 16) & 0xff);'), (43, '            output[i * wpl + j] = (rval << (8 * (sizeof(uint) - 1 - 0))) | (gval << (8 * (sizeof(uint) - 1 - 1))) | (bval << (8 * (sizeof(uint) - 1 - 2)));'), (44, '        })'), (45, ''), (46, '    KERNEL('), (47, '\\n__kernel void pixSubtract_inplace(__global int *dword, __global int *sword, const int wpl, const int h) {'), (48, '        const unsigned int row = get_global_id(1);'), (49, '        const unsigned int col = get_global_id(0);'), (50, '        const unsigned int pos = row * wpl + col;'), (51, ''), (52, '        //Ignore the execss'), (53, '        if (row >= h || col >= wpl)'), (54, '            return;'), (55, ''), (56, '        *(dword + pos) &= ~(*(sword + pos));'), (57, '    }\\n)'), (58, ''), (59, '        KERNEL('), (60, '\\n__kernel void morphoDilateHor_5x5(__global int *sword, __global int *dword, const int wpl, const int h) {'), (61, '            const unsigned int pos = get_global_id(0);'), (62, '            unsigned int prevword, nextword, currword, tempword;'), (63, '            unsigned int destword;'), (64, '            const int col = pos % wpl;'), (65, ''), (66, '            //Ignore the execss'), (67, '            if (pos >= (wpl * h))'), (68, '                return;'), (69, ''), (70, '            currword = *(sword + pos);'), (71, '            destword = currword;'), (72, ''), (73, '            //Handle boundary conditions'), (74, '            if (col == 0)'), (75, '                prevword = 0;'), (76, '            else'), (77, '                prevword = *(sword + pos - 1);'), (78, ''), (79, '            if (col == (wpl - 1))'), (80, '                nextword = 0;'), (81, '            else'), (82, '                nextword = *(sword + pos + 1);'), (83, ''), (84, '            //Loop unrolled'), (85, ''), (86, '            //1 bit to left and 1 bit to right'), (87, '            //Get the max value on LHS of every pixel'), (88, '            tempword = (prevword << (31)) | ((currword >> 1));'), (89, '            destword |= tempword;'), (90, '            //Get max value on RHS of every pixel'), (91, '            tempword = (currword << 1) | (nextword >> (31));'), (92, '            destword |= tempword;'), (93, ''), (94, '            //2 bit to left and 2 bit to right'), (95, '            //Get the max value on LHS of every pixel'), (96, '            tempword = (prevword << (30)) | ((currword >> 2));'), (97, '            destword |= tempword;'), (98, '            //Get max value on RHS of every pixel'), (99, '            tempword = (currword << 2) | (nextword >> (30));'), (100, '            destword |= tempword;'), (101, ''), (102, '            *(dword + pos) = destword;'), (103, '        }\\n)'), (104, ''), (105, '            KERNEL('), (106, '\\n__kernel void morphoDilateVer_5x5(__global int *sword, __global int *dword, const int wpl, const int h) {'), (107, '                const int col = get_global_id(0);'), (108, '                const int row = get_global_id(1);'), (109, '                const unsigned int pos = row * wpl + col;'), (110, '                unsigned int tempword;'), (111, '                unsigned int destword;'), (112, '                int i;'), (113, ''), (114, '                //Ignore the execss'), (115, '                if (row >= h || col >= wpl)'), (116, '                    return;'), (117, ''), (118, '                destword = *(sword + pos);'), (119, ''), (120, '                //2 words above'), (121, '                i = (row - 2) < 0 ? row : (row - 2);'), (122, '                tempword = *(sword + i * wpl + col);'), (123, '                destword |= tempword;'), (124, ''), (125, '                //1 word above'), (126, '                i = (row - 1) < 0 ? row : (row - 1);'), (127, '                tempword = *(sword + i * wpl + col);'), (128, '                destword |= tempword;'), (129, ''), (130, '                //1 word below'), (131, '                i = (row >= (h - 1)) ? row : (row + 1);'), (132, '                tempword = *(sword + i * wpl + col);'), (133, '                destword |= tempword;'), (134, ''), (135, '                //2 words below'), (136, '                i = (row >= (h - 2)) ? row : (row + 2);'), (137, '                tempword = *(sword + i * wpl + col);'), (138, '                destword |= tempword;'), (139, ''), (140, '                *(dword + pos) = destword;'), (141, '            }\\n)'), (142, ''), (143, '                KERNEL('), (144, '\\n__kernel void morphoDilateHor(__global int *sword, __global int *dword, const int xp, const int xn, const int wpl, const int h) {'), (145, '                    const int col = get_global_id(0);'), (146, '                    const int row = get_global_id(1);'), (147, '                    const unsigned int pos = row * wpl + col;'), (148, '                    unsigned int parbitsxp, parbitsxn, nwords;'), (149, '                    unsigned int destword, tempword, lastword, currword;'), (150, '                    unsigned int lnextword, lprevword, rnextword, rprevword, firstword, secondword;'), (151, '                    int i, j, siter, eiter;'), (152, ''), (153, '                    //Ignore the execss'), (154, '                    if (pos >= (wpl * h) || (xn < 1 && xp < 1))'), (155, '                        return;'), (156, ''), (157, '                    currword = *(sword + pos);'), (158, '                    destword = currword;'), (159, ''), (160, '                    parbitsxp = xp & 31;'), (161, '                    parbitsxn = xn & 31;'), (162, '                    nwords = xp >> 5;'), (163, ''), (164, '                    if (parbitsxp > 0)'), (165, '                        nwords += 1;'), (166, '                    else'), (167, '                        parbitsxp = 31;'), (168, ''), (169, '                    siter = (col - nwords);'), (170, '                    eiter = (col + nwords);'), (171, ''), (172, '                    //Get prev word'), (173, '                    if (col == 0)'), (174, '                        firstword = 0x0;'), (175, '                    else'), (176, '                        firstword = *(sword + pos - 1);'), (177, ''), (178, '                    //Get next word'), (179, '                    if (col == (wpl - 1))'), (180, '                        secondword = 0x0;'), (181, '                    else'), (182, '                        secondword = *(sword + pos + 1);'), (183, ''), (184, '                    //Last partial bits on either side'), (185, '                    for (i = 1; i <= parbitsxp; i++) {'), (186, '                        //Get the max value on LHS of every pixel'), (187, '                        tempword = ((i == parbitsxp) && (parbitsxp != parbitsxn)) ? 0x0 : (firstword << (32 - i)) | ((currword >> i));'), (188, ''), (189, '                        destword |= tempword;'), (190, ''), (191, '                        //Get max value on RHS of every pixel'), (192, '                        tempword = (currword << i) | (secondword >> (32 - i));'), (193, '                        destword |= tempword;'), (194, '                    }'), (195, ''), (196, '                    //Return if halfwidth <= 1 word'), (197, '                    if (nwords == 1) {'), (198, '                        if (xn == 32) {'), (199, '                            destword |= firstword;'), (200, '                        }'), (201, '                        if (xp == 32) {'), (202, '                            destword |= secondword;'), (203, '                        }'), (204, ''), (205, '                        *(dword + pos) = destword;'), (206, '                        return;'), (207, '                    }'), (208, ''), (209, '                    if (siter < 0)'), (210, '                        firstword = 0x0;'), (211, '                    else'), (212, '                        firstword = *(sword + row * wpl + siter);'), (213, ''), (214, '                    if (eiter >= wpl)'), (215, '                        lastword = 0x0;'), (216, '                    else'), (217, '                        lastword = *(sword + row * wpl + eiter);'), (218, ''), (219, '                    for (i = 1; i < nwords; i++) {'), (220, '                        //Gets LHS words'), (221, '                        if ((siter + i) < 0)'), (222, '                            secondword = 0x0;'), (223, '                        else'), (224, '                            secondword = *(sword + row * wpl + siter + i);'), (225, ''), (226, '                        lprevword = firstword << (32 - parbitsxn) | secondword >> parbitsxn;'), (227, ''), (228, '                        firstword = secondword;'), (229, ''), (230, '                        if ((siter + i + 1) < 0)'), (231, '                            secondword = 0x0;'), (232, '                        else'), (233, '                            secondword = *(sword + row * wpl + siter + i + 1);'), (234, ''), (235, '                        lnextword = firstword << (32 - parbitsxn) | secondword >> parbitsxn;'), (236, ''), (237, '                        //Gets RHS words'), (238, '                        if ((eiter - i) >= wpl)'), (239, '                            firstword = 0x0;'), (240, '                        else'), (241, '                            firstword = *(sword + row * wpl + eiter - i);'), (242, ''), (243, '                        rnextword = firstword << parbitsxp | lastword >> (32 - parbitsxp);'), (244, ''), (245, '                        lastword = firstword;'), (246, '                        if ((eiter - i - 1) >= wpl)'), (247, '                            firstword = 0x0;'), (248, '                        else'), (249, '                            firstword = *(sword + row * wpl + eiter - i - 1);'), (250, ''), (251, '                        rprevword = firstword << parbitsxp | lastword >> (32 - parbitsxp);'), (252, ''), (253, '                        for (j = 1; j < 32; j++) {'), (254, '                            //OR LHS full words'), (255, '                            tempword = (lprevword << j) | (lnextword >> (32 - j));'), (256, '                            destword |= tempword;'), (257, ''), (258, '                            //OR RHS full words'), (259, '                            tempword = (rprevword << j) | (rnextword >> (32 - j));'), (260, '                            destword |= tempword;'), (261, '                        }'), (262, ''), (263, '                        destword |= lprevword;'), (264, '                        destword |= lnextword;'), (265, '                        destword |= rprevword;'), (266, '                        destword |= rnextword;'), (267, ''), (268, '                        lastword = firstword;'), (269, '                        firstword = secondword;'), (270, '                    }'), (271, ''), (272, '                    *(dword + pos) = destword;'), (273, '                }\\n)'), (274, ''), (275, '                    KERNEL('), (276, '\\n__kernel void morphoDilateHor_32word(__global int *sword, __global int *dword, const int halfwidth, const int wpl, const int h, const char isEven) {'), (277, '                        const int col = get_global_id(0);'), (278, '                        const int row = get_global_id(1);'), (279, '                        const unsigned int pos = row * wpl + col;'), (280, '                        unsigned int prevword, nextword, currword, tempword;'), (281, '                        unsigned int destword;'), (282, '                        int i;'), (283, ''), (284, '                        //Ignore the execss'), (285, '                        if (pos >= (wpl * h))'), (286, '                            return;'), (287, ''), (288, '                        currword = *(sword + pos);'), (289, '                        destword = currword;'), (290, ''), (291, '                        //Handle boundary conditions'), (292, '                        if (col == 0)'), (293, '                            prevword = 0;'), (294, '                        else'), (295, '                            prevword = *(sword + pos - 1);'), (296, ''), (297, '                        if (col == (wpl - 1))'), (298, '                            nextword = 0;'), (299, '                        else'), (300, '                            nextword = *(sword + pos + 1);'), (301, ''), (302, '                        for (i = 1; i <= halfwidth; i++) {'), (303, '                            //Get the max value on LHS of every pixel'), (304, '                            if (i == halfwidth && isEven) {'), (305, '                                tempword = 0x0;'), (306, '                            } else {'), (307, '                                tempword = (prevword << (32 - i)) | ((currword >> i));'), (308, '                            }'), (309, ''), (310, '                            destword |= tempword;'), (311, ''), (312, '                            //Get max value on RHS of every pixel'), (313, '                            tempword = (currword << i) | (nextword >> (32 - i));'), (314, ''), (315, '                            destword |= tempword;'), (316, '                        }'), (317, ''), (318, '                        *(dword + pos) = destword;'), (319, '                    }\\n)'), (320, ''), (321, '                        KERNEL('), (322, '\\n__kernel void morphoDilateVer(__global int *sword, __global int *dword, const int yp, const int wpl, const int h, const int yn) {'), (323, '                            const int col = get_global_id(0);'), (324, '                            const int row = get_global_id(1);'), (325, '                            const unsigned int pos = row * wpl + col;'), (326, '                            unsigned int tempword;'), (327, '                            unsigned int destword;'), (328, '                            int i, siter, eiter;'), (329, ''), (330, '                            //Ignore the execss'), (331, '                            if (row >= h || col >= wpl)'), (332, '                                return;'), (333, ''), (334, '                            destword = *(sword + pos);'), (335, ''), (336, '                            //Set start position and end position considering the boundary conditions'), (337, '                            siter = (row - yn) < 0 ? 0 : (row - yn);'), (338, '                            eiter = (row >= (h - yp)) ? (h - 1) : (row + yp);'), (339, ''), (340, '                            for (i = siter; i <= eiter; i++) {'), (341, '                                tempword = *(sword + i * wpl + col);'), (342, ''), (343, '                                destword |= tempword;'), (344, '                            }'), (345, ''), (346, '                            *(dword + pos) = destword;'), (347, '                        }\\n)'), (348, ''), (349, '                            KERNEL('), (350, '\\n__kernel void morphoErodeHor_5x5(__global int *sword, __global int *dword, const int wpl, const int h) {'), (351, '                                const unsigned int pos = get_global_id(0);'), (352, '                                unsigned int prevword, nextword, currword, tempword;'), (353, '                                unsigned int destword;'), (354, '                                const int col = pos % wpl;'), (355, ''), (356, '                                //Ignore the execss'), (357, '                                if (pos >= (wpl * h))'), (358, '                                    return;'), (359, ''), (360, '                                currword = *(sword + pos);'), (361, '                                destword = currword;'), (362, ''), (363, '                                //Handle boundary conditions'), (364, '                                if (col == 0)'), (365, '                                    prevword = 0xffffffff;'), (366, '                                else'), (367, '                                    prevword = *(sword + pos - 1);'), (368, ''), (369, '                                if (col == (wpl - 1))'), (370, '                                    nextword = 0xffffffff;'), (371, '                                else'), (372, '                                    nextword = *(sword + pos + 1);'), (373, ''), (374, '                                //Loop unrolled'), (375, ''), (376, '                                //1 bit to left and 1 bit to right'), (377, '                                //Get the min value on LHS of every pixel'), (378, '                                tempword = (prevword << (31)) | ((currword >> 1));'), (379, '                                destword &= tempword;'), (380, '                                //Get min value on RHS of every pixel'), (381, '                                tempword = (currword << 1) | (nextword >> (31));'), (382, '                                destword &= tempword;'), (383, ''), (384, '                                //2 bit to left and 2 bit to right'), (385, '                                //Get the min value on LHS of every pixel'), (386, '                                tempword = (prevword << (30)) | ((currword >> 2));'), (387, '                                destword &= tempword;'), (388, '                                //Get min value on RHS of every pixel'), (389, '                                tempword = (currword << 2) | (nextword >> (30));'), (390, '                                destword &= tempword;'), (391, ''), (392, '                                *(dword + pos) = destword;'), (393, '                            }\\n)'), (394, ''), (395, '                                KERNEL('), (396, '\\n__kernel void morphoErodeVer_5x5(__global int *sword, __global int *dword, const int wpl, const int h, const int fwmask, const int lwmask) {'), (397, '                                    const int col = get_global_id(0);'), (398, '                                    const int row = get_global_id(1);'), (399, '                                    const unsigned int pos = row * wpl + col;'), (400, '                                    unsigned int tempword;'), (401, '                                    unsigned int destword;'), (402, '                                    int i;'), (403, ''), (404, '                                    //Ignore the execss'), (405, '                                    if (row >= h || col >= wpl)'), (406, '                                        return;'), (407, ''), (408, '                                    destword = *(sword + pos);'), (409, ''), (410, '                                    if (row < 2 || row >= (h - 2)) {'), (411, '                                        destword = 0x0;'), (412, '                                    } else {'), (413, '                                        //2 words above'), (414, '                                        //i = (row - 2) < 0 ? row : (row - 2);'), (415, '                                        i = (row - 2);'), (416, '                                        tempword = *(sword + i * wpl + col);'), (417, '                                        destword &= tempword;'), (418, ''), (419, '                                        //1 word above'), (420, '                                        //i = (row - 1) < 0 ? row  : (row - 1);'), (421, '                                        i = (row - 1);'), (422, '                                        tempword = *(sword + i * wpl + col);'), (423, '                                        destword &= tempword;'), (424, ''), (425, '                                        //1 word below'), (426, '                                        //i = (row >= (h - 1)) ? row : (row + 1);'), (427, '                                        i = (row + 1);'), (428, '                                        tempword = *(sword + i * wpl + col);'), (429, '                                        destword &= tempword;'), (430, ''), (431, '                                        //2 words below'), (432, '                                        //i = (row >= (h - 2)) ? row : (row + 2);'), (433, '                                        i = (row + 2);'), (434, '                                        tempword = *(sword + i * wpl + col);'), (435, '                                        destword &= tempword;'), (436, ''), (437, '                                        if (col == 0) {'), (438, '                                            destword &= fwmask;'), (439, '                                        }'), (440, '                                        if (col == (wpl - 1)) {'), (441, '                                            destword &= lwmask;'), (442, '                                        }'), (443, '                                    }'), (444, ''), (445, '                                    *(dword + pos) = destword;'), (446, '                                }\\n)'), (447, ''), (448, '                                    KERNEL('), (449, '\\n__kernel void morphoErodeHor(__global int *sword, __global int *dword, const int xp, const int xn, const int wpl, const int h, const char isAsymmetric, const int rwmask, const int lwmask) {'), (450, '                                        const int col = get_global_id(0);'), (451, '                                        const int row = get_global_id(1);'), (452, '                                        const unsigned int pos = row * wpl + col;'), (453, '                                        unsigned int parbitsxp, parbitsxn, nwords;'), (454, '                                        unsigned int destword, tempword, lastword, currword;'), (455, '                                        unsigned int lnextword, lprevword, rnextword, rprevword, firstword, secondword;'), (456, '                                        int i, j, siter, eiter;'), (457, ''), (458, '                                        //Ignore the execss'), (459, '                                        if (pos >= (wpl * h) || (xn < 1 && xp < 1))'), (460, '                                            return;'), (461, ''), (462, '                                        currword = *(sword + pos);'), (463, '                                        destword = currword;'), (464, ''), (465, '                                        parbitsxp = xp & 31;'), (466, '                                        parbitsxn = xn & 31;'), (467, '                                        nwords = xp >> 5;'), (468, ''), (469, '                                        if (parbitsxp > 0)'), (470, '                                            nwords += 1;'), (471, '                                        else'), (472, '                                            parbitsxp = 31;'), (473, ''), (474, '                                        siter = (col - nwords);'), (475, '                                        eiter = (col + nwords);'), (476, ''), (477, '                                        //Get prev word'), (478, '                                        if (col == 0)'), (479, '                                            firstword = 0xffffffff;'), (480, '                                        else'), (481, '                                            firstword = *(sword + pos - 1);'), (482, ''), (483, '                                        //Get next word'), (484, '                                        if (col == (wpl - 1))'), (485, '                                            secondword = 0xffffffff;'), (486, '                                        else'), (487, '                                            secondword = *(sword + pos + 1);'), (488, ''), (489, '                                        //Last partial bits on either side'), (490, '                                        for (i = 1; i <= parbitsxp; i++) {'), (491, '                                            //Get the max value on LHS of every pixel'), (492, '                                            tempword = (firstword << (32 - i)) | ((currword >> i));'), (493, '                                            destword &= tempword;'), (494, ''), (495, '                                            //Get max value on RHS of every pixel'), (496, '                                            tempword = ((i == parbitsxp) && (parbitsxp != parbitsxn)) ? 0xffffffff : (currword << i) | (secondword >> (32 - i));'), (497, ''), (498, '                                            //tempword = (currword << i) | (secondword >> (32 - i));'), (499, '                                            destword &= tempword;'), (500, '                                        }'), (501, ''), (502, '                                        //Return if halfwidth <= 1 word'), (503, '                                        if (nwords == 1) {'), (504, '                                            if (xp == 32) {'), (505, '                                                destword &= firstword;'), (506, '                                            }'), (507, '                                            if (xn == 32) {'), (508, '                                                destword &= secondword;'), (509, '                                            }'), (510, ''), (511, '                                            //Clear boundary pixels'), (512, '                                            if (isAsymmetric) {'), (513, '                                                if (col == 0)'), (514, '                                                    destword &= rwmask;'), (515, '                                                if (col == (wpl - 1))'), (516, '                                                    destword &= lwmask;'), (517, '                                            }'), (518, ''), (519, '                                            *(dword + pos) = destword;'), (520, '                                            return;'), (521, '                                        }'), (522, ''), (523, '                                        if (siter < 0)'), (524, '                                            firstword = 0xffffffff;'), (525, '                                        else'), (526, '                                            firstword = *(sword + row * wpl + siter);'), (527, ''), (528, '                                        if (eiter >= wpl)'), (529, '                                            lastword = 0xffffffff;'), (530, '                                        else'), (531, '                                            lastword = *(sword + row * wpl + eiter);'), (532, ''), (533, '                                        for (i = 1; i < nwords; i++) {'), (534, '                                            //Gets LHS words'), (535, '                                            if ((siter + i) < 0)'), (536, '                                                secondword = 0xffffffff;'), (537, '                                            else'), (538, '                                                secondword = *(sword + row * wpl + siter + i);'), (539, ''), (540, '                                            lprevword = firstword << (32 - parbitsxp) | secondword >> (parbitsxp);'), (541, ''), (542, '                                            firstword = secondword;'), (543, ''), (544, '                                            if ((siter + i + 1) < 0)'), (545, '                                                secondword = 0xffffffff;'), (546, '                                            else'), (547, '                                                secondword = *(sword + row * wpl + siter + i + 1);'), (548, ''), (549, '                                            lnextword = firstword << (32 - parbitsxp) | secondword >> (parbitsxp);'), (550, ''), (551, '                                            //Gets RHS words'), (552, '                                            if ((eiter - i) >= wpl)'), (553, '                                                firstword = 0xffffffff;'), (554, '                                            else'), (555, '                                                firstword = *(sword + row * wpl + eiter - i);'), (556, ''), (557, '                                            rnextword = firstword << parbitsxn | lastword >> (32 - parbitsxn);'), (558, ''), (559, '                                            lastword = firstword;'), (560, '                                            if ((eiter - i - 1) >= wpl)'), (561, '                                                firstword = 0xffffffff;'), (562, '                                            else'), (563, '                                                firstword = *(sword + row * wpl + eiter - i - 1);'), (564, ''), (565, '                                            rprevword = firstword << parbitsxn | lastword >> (32 - parbitsxn);'), (566, ''), (567, '                                            for (j = 0; j < 32; j++) {'), (568, '                                                //OR LHS full words'), (569, '                                                tempword = (lprevword << j) | (lnextword >> (32 - j));'), (570, '                                                destword &= tempword;'), (571, ''), (572, '                                                //OR RHS full words'), (573, '                                                tempword = (rprevword << j) | (rnextword >> (32 - j));'), (574, '                                                destword &= tempword;'), (575, '                                            }'), (576, ''), (577, '                                            destword &= lprevword;'), (578, '                                            destword &= lnextword;'), (579, '                                            destword &= rprevword;'), (580, '                                            destword &= rnextword;'), (581, ''), (582, '                                            lastword = firstword;'), (583, '                                            firstword = secondword;'), (584, '                                        }'), (585, ''), (586, '                                        if (isAsymmetric) {'), (587, '                                            //Clear boundary pixels'), (588, '                                            if (col < (nwords - 1))'), (589, '                                                destword = 0x0;'), (590, '                                            else if (col == (nwords - 1))'), (591, '                                                destword &= rwmask;'), (592, '                                            else if (col > (wpl - nwords))'), (593, '                                                destword = 0x0;'), (594, '                                            else if (col == (wpl - nwords))'), (595, '                                                destword &= lwmask;'), (596, '                                        }'), (597, ''), (598, '                                        *(dword + pos) = destword;'), (599, '                                    }\\n)'), (600, ''), (601, '                                        KERNEL('), (602, '\\n__kernel void morphoErodeHor_32word(__global int *sword, __global int *dword, const int halfwidth, const int wpl, const int h, const char clearBoundPixH, const int rwmask, const int lwmask, const char isEven) {'), (603, '                                            const int col = get_global_id(0);'), (604, '                                            const int row = get_global_id(1);'), (605, '                                            const unsigned int pos = row * wpl + col;'), (606, '                                            unsigned int prevword, nextword, currword, tempword, destword;'), (607, '                                            int i;'), (608, ''), (609, '                                            //Ignore the execss'), (610, '                                            if (pos >= (wpl * h))'), (611, '                                                return;'), (612, ''), (613, '                                            currword = *(sword + pos);'), (614, '                                            destword = currword;'), (615, ''), (616, '                                            //Handle boundary conditions'), (617, '                                            if (col == 0)'), (618, '                                                prevword = 0xffffffff;'), (619, '                                            else'), (620, '                                                prevword = *(sword + pos - 1);'), (621, ''), (622, '                                            if (col == (wpl - 1))'), (623, '                                                nextword = 0xffffffff;'), (624, '                                            else'), (625, '                                                nextword = *(sword + pos + 1);'), (626, ''), (627, '                                            for (i = 1; i <= halfwidth; i++) {'), (628, '                                                //Get the min value on LHS of every pixel'), (629, '                                                tempword = (prevword << (32 - i)) | ((currword >> i));'), (630, ''), (631, '                                                destword &= tempword;'), (632, ''), (633, '                                                //Get min value on RHS of every pixel'), (634, '                                                if (i == halfwidth && isEven) {'), (635, '                                                    tempword = 0xffffffff;'), (636, '                                                } else {'), (637, '                                                    tempword = (currword << i) | (nextword >> (32 - i));'), (638, '                                                }'), (639, ''), (640, '                                                destword &= tempword;'), (641, '                                            }'), (642, ''), (643, '                                            if (clearBoundPixH) {'), (644, '                                                if (col == 0) {'), (645, '                                                    destword &= rwmask;'), (646, '                                                } else if (col == (wpl - 1)) {'), (647, '                                                    destword &= lwmask;'), (648, '                                                }'), (649, '                                            }'), (650, ''), (651, '                                            *(dword + pos) = destword;'), (652, '                                        }\\n)'), (653, ''), (654, '                                            KERNEL('), (655, '\\n__kernel void morphoErodeVer(__global int *sword, __global int *dword, const int yp, const int wpl, const int h, const char clearBoundPixV, const int yn) {'), (656, '                                                const int col = get_global_id(0);'), (657, '                                                const int row = get_global_id(1);'), (658, '                                                const unsigned int pos = row * wpl + col;'), (659, '                                                unsigned int tempword, destword;'), (660, '                                                int i, siter, eiter;'), (661, ''), (662, '                                                //Ignore the execss'), (663, '                                                if (row >= h || col >= wpl)'), (664, '                                                    return;'), (665, ''), (666, '                                                destword = *(sword + pos);'), (667, ''), (668, '                                                //Set start position and end position considering the boundary conditions'), (669, '                                                siter = (row - yp) < 0 ? 0 : (row - yp);'), (670, '                                                eiter = (row >= (h - yn)) ? (h - 1) : (row + yn);'), (671, ''), (672, '                                                for (i = siter; i <= eiter; i++) {'), (673, '                                                    tempword = *(sword + i * wpl + col);'), (674, ''), (675, '                                                    destword &= tempword;'), (676, '                                                }'), (677, ''), (678, '                                                //Clear boundary pixels'), (679, '                                                if (clearBoundPixV && ((row < yp) || ((h - row) <= yn))) {'), (680, '                                                    destword = 0x0;'), (681, '                                                }'), (682, ''), (683, '                                                *(dword + pos) = destword;'), (684, '                                            }\\n)'), (685, ''), (686, '    // HistogramRect Kernel: Accumulate'), (687, '    // assumes 4 channels, i.e., bytes_per_pixel = 4'), (688, '    // assumes number of pixels is multiple of 8'), (689, '    // data is laid out as'), (690, '    // ch0                                           ch1 ...'), (691, '    // bin0          bin1            bin2...         bin0...'), (692, '    // rpt0,1,2...256  rpt0,1,2...'), (693, '    KERNEL('), (694, '\\n #define HIST_REDUNDANCY 256\\n'), (695, '\\n #define GROUP_SIZE 256\\n'), (696, '\\n #define HIST_SIZE 256\\n'), (697, '\\n #define NUM_CHANNELS 4\\n'), (698, '\\n #define HR_UNROLL_SIZE 8 \\n'), (699, '\\n #define HR_UNROLL_TYPE uchar8 \\n'), (700, ''), (701, '        __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_HistogramRectAllChannels(__global const uchar8 *data, uint numPixels, __global uint *histBuffer) {'), (702, '            // declare variables'), (703, '            uchar8 pixels;'), (704, '            int threadOffset = get_global_id(0) % HIST_REDUNDANCY;'), (705, ''), (706, '            // for each pixel/channel, accumulate in global memory'), (707, '            for (uint pc = get_global_id(0); pc < numPixels * NUM_CHANNELS / HR_UNROLL_SIZE; pc += get_global_size(0)) {'), (708, '                pixels = data[pc];'), (709, '                //                       channel                        bin                         thread'), (710, '                atomic_inc(&histBuffer[0 * HIST_SIZE * HIST_REDUNDANCY + pixels.s0 * HIST_REDUNDANCY + threadOffset]);  // ch0'), (711, '                atomic_inc(&histBuffer[0 * HIST_SIZE * HIST_REDUNDANCY + pixels.s4 * HIST_REDUNDANCY + threadOffset]);  // ch0'), (712, '                atomic_inc(&histBuffer[1 * HIST_SIZE * HIST_REDUNDANCY + pixels.s1 * HIST_REDUNDANCY + threadOffset]);  // ch1'), (713, '                atomic_inc(&histBuffer[1 * HIST_SIZE * HIST_REDUNDANCY + pixels.s5 * HIST_REDUNDANCY + threadOffset]);  // ch1'), (714, '                atomic_inc(&histBuffer[2 * HIST_SIZE * HIST_REDUNDANCY + pixels.s2 * HIST_REDUNDANCY + threadOffset]);  // ch2'), (715, '                atomic_inc(&histBuffer[2 * HIST_SIZE * HIST_REDUNDANCY + pixels.s6 * HIST_REDUNDANCY + threadOffset]);  // ch2'), (716, '                atomic_inc(&histBuffer[3 * HIST_SIZE * HIST_REDUNDANCY + pixels.s3 * HIST_REDUNDANCY + threadOffset]);  // ch3'), (717, '                atomic_inc(&histBuffer[3 * HIST_SIZE * HIST_REDUNDANCY + pixels.s7 * HIST_REDUNDANCY + threadOffset]);  // ch3'), (718, '            }'), (719, '        })'), (720, ''), (721, '        KERNEL('), (722, '            // NUM_CHANNELS = 1'), (723, '            __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_HistogramRectOneChannel(__global const uchar8 *data, uint numPixels, __global uint *histBuffer) {'), (724, '                // declare variables'), (725, '                uchar8 pixels;'), (726, '                int threadOffset = get_global_id(0) % HIST_REDUNDANCY;'), (727, ''), (728, '                // for each pixel/channel, accumulate in global memory'), (729, '                for (uint pc = get_global_id(0); pc < numPixels / HR_UNROLL_SIZE; pc += get_global_size(0)) {'), (730, '                    pixels = data[pc];'), (731, '                    //                        bin                         thread'), (732, '                    atomic_inc(&histBuffer[pixels.s0 * HIST_REDUNDANCY + threadOffset]);'), (733, '                    atomic_inc(&histBuffer[pixels.s1 * HIST_REDUNDANCY + threadOffset]);'), (734, '                    atomic_inc(&histBuffer[pixels.s2 * HIST_REDUNDANCY + threadOffset]);'), (735, '                    atomic_inc(&histBuffer[pixels.s3 * HIST_REDUNDANCY + threadOffset]);'), (736, '                    atomic_inc(&histBuffer[pixels.s4 * HIST_REDUNDANCY + threadOffset]);'), (737, '                    atomic_inc(&histBuffer[pixels.s5 * HIST_REDUNDANCY + threadOffset]);'), (738, '                    atomic_inc(&histBuffer[pixels.s6 * HIST_REDUNDANCY + threadOffset]);'), (739, '                    atomic_inc(&histBuffer[pixels.s7 * HIST_REDUNDANCY + threadOffset]);'), (740, '                }'), (741, '            })'), (742, ''), (743, '    // HistogramRect Kernel: Reduction'), (744, '    // only supports 4 channels'), (745, '    // each work group handles a single channel of a single histogram bin'), (746, '    KERNEL(__attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_HistogramRectAllChannelsReduction(int n,  // unused pixel redundancy'), (747, '                                                                                                                   __global uint *histBuffer, __global int *histResult) {'), (748, '        // declare variables'), (749, '        int channel = get_group_id(0) / HIST_SIZE;'), (750, '        int bin = get_group_id(0) % HIST_SIZE;'), (751, '        int value = 0;'), (752, ''), (753, '        // accumulate in register'), (754, '        for (uint i = get_local_id(0); i < HIST_REDUNDANCY; i += GROUP_SIZE) {'), (755, '            value += histBuffer[channel * HIST_SIZE * HIST_REDUNDANCY + bin * HIST_REDUNDANCY + i];'), (756, '        }'), (757, ''), (758, '        // reduction in local memory'), (759, '        __local int localHist[GROUP_SIZE];'), (760, '        localHist[get_local_id(0)] = value;'), (761, '        barrier(CLK_LOCAL_MEM_FENCE);'), (762, '        for (int stride = GROUP_SIZE / 2; stride >= 1; stride /= 2) {'), (763, '            if (get_local_id(0) < stride) {'), (764, '                value = localHist[get_local_id(0) + stride];'), (765, '            }'), (766, '            barrier(CLK_LOCAL_MEM_FENCE);'), (767, '            if (get_local_id(0) < stride) {'), (768, '                localHist[get_local_id(0)] += value;'), (769, '            }'), (770, '            barrier(CLK_LOCAL_MEM_FENCE);'), (771, '        }'), (772, ''), (773, '        // write reduction to final result'), (774, '        if (get_local_id(0) == 0) {'), (775, '            histResult[get_group_id(0)] = localHist[0];'), (776, '        }'), (777, '    }  // kernel_HistogramRectAllChannels'), (778, '           )'), (779, ''), (780, '        KERNEL('), (781, '            // NUM_CHANNELS = 1'), (782, '            __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_HistogramRectOneChannelReduction(int n,  // unused pixel redundancy'), (783, '                                                                                                                   __global uint *histBuffer, __global int *histResult) {'), (784, '                // declare variables'), (785, '                // int channel = get_group_id(0)/HIST_SIZE;'), (786, '                int bin = get_group_id(0) % HIST_SIZE;'), (787, '                int value = 0;'), (788, ''), (789, '                // accumulate in register'), (790, '                for (int i = get_local_id(0); i < HIST_REDUNDANCY; i += GROUP_SIZE) {'), (791, '                    value += histBuffer[bin * HIST_REDUNDANCY + i];'), (792, '                }'), (793, ''), (794, '                // reduction in local memory'), (795, '                __local int localHist[GROUP_SIZE];'), (796, '                localHist[get_local_id(0)] = value;'), (797, '                barrier(CLK_LOCAL_MEM_FENCE);'), (798, '                for (int stride = GROUP_SIZE / 2; stride >= 1; stride /= 2) {'), (799, '                    if (get_local_id(0) < stride) {'), (800, '                        value = localHist[get_local_id(0) + stride];'), (801, '                    }'), (802, '                    barrier(CLK_LOCAL_MEM_FENCE);'), (803, '                    if (get_local_id(0) < stride) {'), (804, '                        localHist[get_local_id(0)] += value;'), (805, '                    }'), (806, '                    barrier(CLK_LOCAL_MEM_FENCE);'), (807, '                }'), (808, ''), (809, '                // write reduction to final result'), (810, '                if (get_local_id(0) == 0) {'), (811, '                    histResult[get_group_id(0)] = localHist[0];'), (812, '                }'), (813, '            }  // kernel_HistogramRectOneChannelReduction'), (814, '            )'), (815, ''), (816, '    // ThresholdRectToPix Kernel'), (817, '    // only supports 4 channels'), (818, '    // imageData is input image (24-bits/pixel)'), (819, '    // pix is output image (1-bit/pixel)'), (820, '    KERNEL('), (821, '\\n #define CHAR_VEC_WIDTH 4 \\n'), (822, '\\n #define PIXELS_PER_WORD 32 \\n'), (823, '\\n #define PIXELS_PER_BURST 8 \\n'), (824, '\\n #define BURSTS_PER_WORD (PIXELS_PER_WORD)/(PIXELS_PER_BURST) \\n'), (825, '\\n typedef union {'), (826, '        uchar s[PIXELS_PER_BURST * NUM_CHANNELS];'), (827, '        uchar4 v[(PIXELS_PER_BURST * NUM_CHANNELS) / CHAR_VEC_WIDTH];'), (828, '    } charVec;'), (829, ''), (830, '        __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_ThresholdRectToPix(__global const uchar4 *imageData, int height, int width,'), (831, '                                                                                                 int wpl,  // words per line'), (832, '                                                                                                 __global int *thresholds, __global int *hi_values, __global int *pix) {'), (833, '            // declare variables'), (834, '            int pThresholds[NUM_CHANNELS];'), (835, '            int pHi_Values[NUM_CHANNELS];'), (836, '            for (int i = 0; i < NUM_CHANNELS; i++) {'), (837, '                pThresholds[i] = thresholds[i];'), (838, '                pHi_Values[i] = hi_values[i];'), (839, '            }'), (840, ''), (841, '            // for each word (32 pixels) in output image'), (842, '            for (uint w = get_global_id(0); w < wpl * height; w += get_global_size(0)) {'), (843, '                unsigned int word = 0;  // all bits start at zero'), (844, '                // for each burst in word'), (845, '                for (int b = 0; b < BURSTS_PER_WORD; b++) {'), (846, '                    // load burst'), (847, '                    charVec pixels;'), (848, '                    int offset = (w / wpl) * width;'), (849, '                    offset += (w % wpl) * PIXELS_PER_WORD;'), (850, '                    offset += b * PIXELS_PER_BURST;'), (851, ''), (852, '                    for (int i = 0; i < PIXELS_PER_BURST; ++i)'), (853, '                        pixels.v[i] = imageData[offset + i];'), (854, ''), (855, '                    // for each pixel in burst'), (856, '                    for (int p = 0; p < PIXELS_PER_BURST; p++) {'), (857, '                        for (int c = 0; c < NUM_CHANNELS; c++) {'), (858, '                            unsigned char pixChan = pixels.s[p * NUM_CHANNELS + c];'), (859, '                            if (pHi_Values[c] >= 0 && (pixChan > pThresholds[c]) == (pHi_Values[c] == 0)) {'), (860, '                                const uint kTopBit = 0x80000000;'), (861, '                                word |= (kTopBit >> ((b * PIXELS_PER_BURST + p) & 31));'), (862, '                            }'), (863, '                        }'), (864, '                    }'), (865, '                }'), (866, '                pix[w] = word;'), (867, '            }'), (868, '        }'), (869, ''), (870, '\\n #define CHAR_VEC_WIDTH 8 \\n'), (871, '\\n #define PIXELS_PER_WORD 32 \\n'), (872, '\\n #define PIXELS_PER_BURST 8 \\n'), (873, '\\n #define BURSTS_PER_WORD (PIXELS_PER_WORD) / (PIXELS_PER_BURST) \\n'), (874, '\\n typedef union {'), (875, '            uchar s[PIXELS_PER_BURST * 1];'), (876, '            uchar8 v[(PIXELS_PER_BURST * 1) / CHAR_VEC_WIDTH];'), (877, '        } charVec1;'), (878, ''), (879, '        __attribute__((reqd_work_group_size(256, 1, 1))) __kernel void kernel_ThresholdRectToPix_OneChan(__global const uchar8 *imageData, int height, int width,'), (880, '                                                                                                         int wpl,  // words per line of output image'), (881, '                                                                                                         __global int *thresholds, __global int *hi_values, __global int *pix) {'), (882, '            // declare variables'), (883, '            int pThresholds[1];'), (884, '            int pHi_Values[1];'), (885, '            for (int i = 0; i < 1; i++) {'), (886, '                pThresholds[i] = thresholds[i];'), (887, '                pHi_Values[i] = hi_values[i];'), (888, '            }'), (889, ''), (890, '            // for each word (32 pixels) in output image'), (891, '            for (uint w = get_global_id(0); w < wpl * height; w += get_global_size(0)) {'), (892, '                unsigned int word = 0;  // all bits start at zero'), (893, ''), (894, '                // for each burst in word'), (895, '                for (int b = 0; b < BURSTS_PER_WORD; b++) {'), (896, '                    // load burst'), (897, '                    charVec1 pixels;'), (898, '                    // for each char8 in burst'), (899, '                    pixels.v[0] = imageData[w * BURSTS_PER_WORD + b + 0];'), (900, ''), (901, '                    // for each pixel in burst'), (902, '                    for (int p = 0; p < PIXELS_PER_BURST; p++) {'), (903, '                        //int littleEndianIdx = p ^ 3;'), (904, '                        //int bigEndianIdx = p;'), (905, '                        int idx ='), (906, '\\n #ifdef __ENDIAN_LITTLE__\\n'), (907, '                            p ^'), (908, '                            3;'), (909, '                        \\n #else \\n'), (910, '                            p;'), (911, '                        \\n #endif \\n unsigned char pixChan = pixels.s[idx];'), (912, '                        if (pHi_Values[0] >= 0 && (pixChan > pThresholds[0]) == (pHi_Values[0] == 0)) {'), (913, '                            const uint kTopBit = 0x80000000;'), (914, '                            word |= (kTopBit >> ((b * PIXELS_PER_BURST + p) & 31));'), (915, '                        }'), (916, '                    }'), (917, '                }'), (918, '                pix[w] = word;'), (919, '            }'), (920, '        })'), (921, ''), (922, '    ;  // close char*'), (923, ''), (924, '#  endif // USE_EXTERNAL_KERNEL'), (925, '#endif   // TESSERACT_OPENCL_OCLKERNELS_H_'), (926, '/* vim:set shiftwidth=4 softtabstop=4 expandtab: */')]}",yes
src\opencl\openclwrapper.cpp,,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,2466 +0,0 @@
-// Licensed under the Apache License, Version 2.0 (the ""License"");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-// http://www.apache.org/licenses/LICENSE-2.0
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an ""AS IS"" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-// Include automatically generated configuration file
-#ifdef HAVE_CONFIG_H
-#  include ""config_auto.h""
-#endif
-
-#ifdef USE_OPENCL
-
-#  ifdef _WIN32
-#    include <io.h>
-#    include <windows.h>
-#  else
-#    include <sys/types.h>
-#    include <unistd.h>
-#  endif
-#  include <cfloat>
-#  include <ctime> // for clock_gettime
-
-#  include ""oclkernels.h""
-#  include ""openclwrapper.h""
-
-// for micro-benchmark
-#  include ""otsuthr.h""
-#  include ""thresholder.h""
-
-// platform preprocessor commands
-#  if defined(WIN32) || defined(__WIN32__) || defined(_WIN32) || defined(__CYGWIN__) || \
-      defined(__MINGW32__)
-#    define ON_WINDOWS 1
-#    define ON_APPLE 0
-#  elif defined(__linux__)
-#    define ON_WINDOWS 0
-#    define ON_APPLE 0
-#  elif defined(__APPLE__)
-#    define ON_WINDOWS 0
-#    define ON_APPLE 1
-#  else
-#    define ON_WINDOWS 0
-#    define ON_APPLE 0
-#  endif
-
-#  if ON_APPLE
-#    include <mach/mach_time.h>
-#  endif
-
-#  include <cstdio>
-#  include <cstdlib>
-#  include <cstring> // for memset, strcpy, ...
-#  include <vector>
-
-#  include ""errcode.h"" // for ASSERT_HOST
-#  include ""image.h""   // for Image
-
-namespace tesseract {
-
-GPUEnv OpenclDevice::gpuEnv;
-
-bool OpenclDevice::deviceIsSelected = false;
-ds_device OpenclDevice::selectedDevice;
-
-int OpenclDevice::isInited = 0;
-
-static l_int32 MORPH_BC = ASYMMETRIC_MORPH_BC;
-
-static const l_uint32 lmask32[] = {
-    0x80000000, 0xc0000000, 0xe0000000, 0xf0000000, 0xf8000000, 0xfc000000, 0xfe000000, 0xff000000,
-    0xff800000, 0xffc00000, 0xffe00000, 0xfff00000, 0xfff80000, 0xfffc0000, 0xfffe0000, 0xffff0000,
-    0xffff8000, 0xffffc000, 0xffffe000, 0xfffff000, 0xfffff800, 0xfffffc00, 0xfffffe00, 0xffffff00,
-    0xffffff80, 0xffffffc0, 0xffffffe0, 0xfffffff0, 0xfffffff8, 0xfffffffc, 0xfffffffe, 0xffffffff};
-
-static const l_uint32 rmask32[] = {
-    0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff,
-    0x000001ff, 0x000003ff, 0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff,
-    0x0001ffff, 0x0003ffff, 0x0007ffff, 0x000fffff, 0x001fffff, 0x003fffff, 0x007fffff, 0x00ffffff,
-    0x01ffffff, 0x03ffffff, 0x07ffffff, 0x0fffffff, 0x1fffffff, 0x3fffffff, 0x7fffffff, 0xffffffff};
-
-static cl_mem pixsCLBuffer, pixdCLBuffer,
-    pixdCLIntermediate;    // Morph operations buffers
-static cl_mem pixThBuffer; // output from thresholdtopix calculation
-static cl_int clStatus;
-static KernelEnv rEnv;
-
-#  define DS_TAG_VERSION ""<version>""
-#  define DS_TAG_VERSION_END ""</version>""
-#  define DS_TAG_DEVICE ""<device>""
-#  define DS_TAG_DEVICE_END ""</device>""
-#  define DS_TAG_SCORE ""<score>""
-#  define DS_TAG_SCORE_END ""</score>""
-#  define DS_TAG_DEVICE_TYPE ""<type>""
-#  define DS_TAG_DEVICE_TYPE_END ""</type>""
-#  define DS_TAG_DEVICE_NAME ""<name>""
-#  define DS_TAG_DEVICE_NAME_END ""</name>""
-#  define DS_TAG_DEVICE_DRIVER_VERSION ""<driver>""
-#  define DS_TAG_DEVICE_DRIVER_VERSION_END ""</driver>""
-
-#  define DS_DEVICE_NATIVE_CPU_STRING ""native_cpu""
-
-#  define DS_DEVICE_NAME_LENGTH 256
-
-enum ds_evaluation_type { DS_EVALUATE_ALL, DS_EVALUATE_NEW_ONLY };
-
-struct ds_profile {
-  std::vector<ds_device> devices;
-  unsigned int numDevices;
-  const char *version;
-};
-
-enum ds_status {
-  DS_SUCCESS = 0,
-  DS_INVALID_PROFILE = 1000,
-  DS_MEMORY_ERROR,
-  DS_INVALID_PERF_EVALUATOR_TYPE,
-  DS_INVALID_PERF_EVALUATOR,
-  DS_PERF_EVALUATOR_ERROR,
-  DS_FILE_ERROR,
-  DS_UNKNOWN_DEVICE_TYPE,
-  DS_PROFILE_FILE_ERROR,
-  DS_SCORE_SERIALIZER_ERROR,
-  DS_SCORE_DESERIALIZER_ERROR
-};
-
-// Pointer to a function that calculates the score of a device (ex:
-// device->score) update the data size of score. The encoding and the format
-// of the score data is implementation defined. The function should return
-// DS_SUCCESS if there's no error to be reported.
-typedef ds_status (*ds_perf_evaluator)(ds_device *device, void *data);
-
-// deallocate memory used by score
-typedef ds_status (*ds_score_release)(TessDeviceScore *score);
-
-static ds_status releaseDSProfile(ds_profile *profile, ds_score_release sr) {
-  ds_status status = DS_SUCCESS;
-  if (profile != nullptr) {
-    if (sr != nullptr) {
-      unsigned int i;
-      for (i = 0; i < profile->numDevices; i++) {
-        free(profile->devices[i].oclDeviceName);
-        free(profile->devices[i].oclDriverVersion);
-        status = sr(profile->devices[i].score);
-        if (status != DS_SUCCESS)
-          break;
-      }
-    }
-    delete profile;
-  }
-  return status;
-}
-
-static ds_status initDSProfile(ds_profile **p, const char *version) {
-  int numDevices;
-  cl_uint numPlatforms;
-  std::vector<cl_platform_id> platforms;
-  std::vector<cl_device_id> devices;
-  ds_status status = DS_SUCCESS;
-  unsigned int next;
-  unsigned int i;
-
-  if (p == nullptr)
-    return DS_INVALID_PROFILE;
-
-  ds_profile *profile = new ds_profile;
-
-  memset(profile, 0, sizeof(ds_profile));
-
-  clGetPlatformIDs(0, nullptr, &numPlatforms);
-
-  if (numPlatforms > 0) {
-    platforms.resize(numPlatforms);
-    clGetPlatformIDs(numPlatforms, platforms.data(), nullptr);
-  }
-
-  numDevices = 0;
-  for (i = 0; i < numPlatforms; i++) {
-    cl_uint num;
-    clGetDeviceIDs(platforms[i], CL_DEVICE_TYPE_ALL, 0, nullptr, &num);
-    numDevices += num;
-  }
-
-  if (numDevices > 0) {
-    devices.resize(numDevices);
-  }
-
-  profile->numDevices = numDevices + 1; // +1 to numDevices to include the native CPU
-  profile->devices.resize(profile->numDevices);
-
-  next = 0;
-  for (i = 0; i < numPlatforms; i++) {
-    cl_uint num;
-    unsigned j;
-    clGetDeviceIDs(platforms[i], CL_DEVICE_TYPE_ALL, numDevices, &devices[0], &num);
-    for (j = 0; j < num; j++, next++) {
-      char buffer[DS_DEVICE_NAME_LENGTH];
-      size_t length;
-
-      profile->devices[next].type = DS_DEVICE_OPENCL_DEVICE;
-      profile->devices[next].oclDeviceID = devices[j];
-
-      clGetDeviceInfo(profile->devices[next].oclDeviceID, CL_DEVICE_NAME, DS_DEVICE_NAME_LENGTH,
-                      &buffer, nullptr);
-      length = strlen(buffer);
-      profile->devices[next].oclDeviceName = (char *)malloc(length + 1);
-      memcpy(profile->devices[next].oclDeviceName, buffer, length + 1);
-
-      clGetDeviceInfo(profile->devices[next].oclDeviceID, CL_DRIVER_VERSION, DS_DEVICE_NAME_LENGTH,
-                      &buffer, nullptr);
-      length = strlen(buffer);
-      profile->devices[next].oclDriverVersion = (char *)malloc(length + 1);
-      memcpy(profile->devices[next].oclDriverVersion, buffer, length + 1);
-    }
-  }
-  profile->devices[next].type = DS_DEVICE_NATIVE_CPU;
-  profile->version = version;
-
-  *p = profile;
-  return status;
-}
-
-static ds_status profileDevices(ds_profile *profile, const ds_evaluation_type type,
-                                ds_perf_evaluator evaluator, void *evaluatorData,
-                                unsigned int *numUpdates) {
-  ds_status status = DS_SUCCESS;
-  unsigned int i;
-  unsigned int updates = 0;
-
-  if (profile == nullptr) {
-    return DS_INVALID_PROFILE;
-  }
-  if (evaluator == nullptr) {
-    return DS_INVALID_PERF_EVALUATOR;
-  }
-
-  for (i = 0; i < profile->numDevices; i++) {
-    ds_status evaluatorStatus;
-
-    switch (type) {
-      case DS_EVALUATE_NEW_ONLY:
-        if (profile->devices[i].score != nullptr)
-          break;
-      //  else fall through
-      case DS_EVALUATE_ALL:
-        evaluatorStatus = evaluator(&profile->devices[i], evaluatorData);
-        if (evaluatorStatus != DS_SUCCESS) {
-          status = evaluatorStatus;
-          return status;
-        }
-        updates++;
-        break;
-      default:
-        return DS_INVALID_PERF_EVALUATOR_TYPE;
-        break;
-    };
-  }
-  if (numUpdates)
-    *numUpdates = updates;
-  return status;
-}
-
-static const char *findString(const char *contentStart, const char *contentEnd,
-                              const char *string) {
-  size_t stringLength;
-  const char *currentPosition;
-  const char *found = nullptr;
-  stringLength = strlen(string);
-  currentPosition = contentStart;
-  for (currentPosition = contentStart; currentPosition < contentEnd; currentPosition++) {
-    if (*currentPosition == string[0]) {
-      if (currentPosition + stringLength < contentEnd) {
-        if (strncmp(currentPosition, string, stringLength) == 0) {
-          found = currentPosition;
-          break;
-        }
-      }
-    }
-  }
-  return found;
-}
-
-static ds_status readProFile(const char *fileName, char **content, size_t *contentSize) {
-  *contentSize = 0;
-  *content = nullptr;
-  ds_status status = DS_SUCCESS;
-  FILE *input = fopen(fileName, ""rb"");
-  if (input == nullptr) {
-    status = DS_FILE_ERROR;
-  } else {
-    fseek(input, 0L, SEEK_END);
-    auto pos = std::ftell(input);
-    rewind(input);
-    if (pos > 0) {
-      size_t size = pos;
-      char *binary = new char[size];
-      if (fread(binary, sizeof(char), size, input) != size) {
-        status = DS_FILE_ERROR;
-        delete[] binary;
-      } else {
-        *contentSize = size;
-        *content = binary;
-      }
-    }
-    fclose(input);
-  }
-  return status;
-}
-
-typedef ds_status (*ds_score_deserializer)(ds_device *device, const uint8_t *serializedScore,
-                                           unsigned int serializedScoreSize);
-
-static ds_status readProfileFromFile(ds_profile *profile, ds_score_deserializer deserializer,
-                                     const char *file) {
-  ds_status status = DS_SUCCESS;
-  char *contentStart;
-  size_t contentSize;
-
-  if (profile == nullptr)
-    return DS_INVALID_PROFILE;
-
-  status = readProFile(file, &contentStart, &contentSize);
-  if (status == DS_SUCCESS) {
-    const char *currentPosition;
-    const char *dataStart;
-    const char *dataEnd;
-
-    const char *contentEnd = contentStart + contentSize;
-    currentPosition = contentStart;
-
-    // parse the version string
-    dataStart = findString(currentPosition, contentEnd, DS_TAG_VERSION);
-    if (dataStart == nullptr) {
-      status = DS_PROFILE_FILE_ERROR;
-      goto cleanup;
-    }
-    dataStart += strlen(DS_TAG_VERSION);
-
-    dataEnd = findString(dataStart, contentEnd, DS_TAG_VERSION_END);
-    if (dataEnd == nullptr) {
-      status = DS_PROFILE_FILE_ERROR;
-      goto cleanup;
-    }
-
-    size_t versionStringLength = strlen(profile->version);
-    if (versionStringLength + dataStart != dataEnd ||
-        strncmp(profile->version, dataStart, versionStringLength) != 0) {
-      // version mismatch
-      status = DS_PROFILE_FILE_ERROR;
-      goto cleanup;
-    }
-    currentPosition = dataEnd + strlen(DS_TAG_VERSION_END);
-
-    // parse the device information
-    while (1) {
-      unsigned int i;
-
-      const char *deviceTypeStart;
-      const char *deviceTypeEnd;
-      ds_device_type deviceType;
-
-      const char *deviceNameStart;
-      const char *deviceNameEnd;
-
-      const char *deviceScoreStart;
-      const char *deviceScoreEnd;
-
-      const char *deviceDriverStart;
-      const char *deviceDriverEnd;
-
-      dataStart = findString(currentPosition, contentEnd, DS_TAG_DEVICE);
-      if (dataStart == nullptr) {
-        // nothing useful remain, quit...
-        break;
-      }
-      dataStart += strlen(DS_TAG_DEVICE);
-      dataEnd = findString(dataStart, contentEnd, DS_TAG_DEVICE_END);
-      if (dataEnd == nullptr) {
-        status = DS_PROFILE_FILE_ERROR;
-        goto cleanup;
-      }
-
-      // parse the device type
-      deviceTypeStart = findString(dataStart, contentEnd, DS_TAG_DEVICE_TYPE);
-      if (deviceTypeStart == nullptr) {
-        status = DS_PROFILE_FILE_ERROR;
-        goto cleanup;
-      }
-      deviceTypeStart += strlen(DS_TAG_DEVICE_TYPE);
-      deviceTypeEnd = findString(deviceTypeStart, contentEnd, DS_TAG_DEVICE_TYPE_END);
-      if (deviceTypeEnd == nullptr) {
-        status = DS_PROFILE_FILE_ERROR;
-        goto cleanup;
-      }
-      memcpy(&deviceType, deviceTypeStart, sizeof(ds_device_type));
-
-      // parse the device name
-      if (deviceType == DS_DEVICE_OPENCL_DEVICE) {
-        deviceNameStart = findString(dataStart, contentEnd, DS_TAG_DEVICE_NAME);
-        if (deviceNameStart == nullptr) {
-          status = DS_PROFILE_FILE_ERROR;
-          goto cleanup;
-        }
-        deviceNameStart += strlen(DS_TAG_DEVICE_NAME);
-        deviceNameEnd = findString(deviceNameStart, contentEnd, DS_TAG_DEVICE_NAME_END);
-        if (deviceNameEnd == nullptr) {
-          status = DS_PROFILE_FILE_ERROR;
-          goto cleanup;
-        }
-
-        deviceDriverStart = findString(dataStart, contentEnd, DS_TAG_DEVICE_DRIVER_VERSION);
-        if (deviceDriverStart == nullptr) {
-          status = DS_PROFILE_FILE_ERROR;
-          goto cleanup;
-        }
-        deviceDriverStart += strlen(DS_TAG_DEVICE_DRIVER_VERSION);
-        deviceDriverEnd =
-            findString(deviceDriverStart, contentEnd, DS_TAG_DEVICE_DRIVER_VERSION_END);
-        if (deviceDriverEnd == nullptr) {
-          status = DS_PROFILE_FILE_ERROR;
-          goto cleanup;
-        }
-
-        // check if this device is on the system
-        for (i = 0; i < profile->numDevices; i++) {
-          if (profile->devices[i].type == DS_DEVICE_OPENCL_DEVICE) {
-            size_t actualDeviceNameLength;
-            size_t driverVersionLength;
-
-            actualDeviceNameLength = strlen(profile->devices[i].oclDeviceName);
-            driverVersionLength = strlen(profile->devices[i].oclDriverVersion);
-            if (deviceNameStart + actualDeviceNameLength == deviceNameEnd &&
-                deviceDriverStart + driverVersionLength == deviceDriverEnd &&
-                strncmp(profile->devices[i].oclDeviceName, deviceNameStart,
-                        actualDeviceNameLength) == 0 &&
-                strncmp(profile->devices[i].oclDriverVersion, deviceDriverStart,
-                        driverVersionLength) == 0) {
-              deviceScoreStart = findString(dataStart, contentEnd, DS_TAG_SCORE);
-              deviceScoreStart += strlen(DS_TAG_SCORE);
-              deviceScoreEnd = findString(deviceScoreStart, contentEnd, DS_TAG_SCORE_END);
-              status = deserializer(&profile->devices[i], (const unsigned char *)deviceScoreStart,
-                                    deviceScoreEnd - deviceScoreStart);
-              if (status != DS_SUCCESS) {
-                goto cleanup;
-              }
-            }
-          }
-        }
-      } else if (deviceType == DS_DEVICE_NATIVE_CPU) {
-        for (i = 0; i < profile->numDevices; i++) {
-          if (profile->devices[i].type == DS_DEVICE_NATIVE_CPU) {
-            deviceScoreStart = findString(dataStart, contentEnd, DS_TAG_SCORE);
-            if (deviceScoreStart == nullptr) {
-              status = DS_PROFILE_FILE_ERROR;
-              goto cleanup;
-            }
-            deviceScoreStart += strlen(DS_TAG_SCORE);
-            deviceScoreEnd = findString(deviceScoreStart, contentEnd, DS_TAG_SCORE_END);
-            status = deserializer(&profile->devices[i], (const unsigned char *)deviceScoreStart,
-                                  deviceScoreEnd - deviceScoreStart);
-            if (status != DS_SUCCESS) {
-              goto cleanup;
-            }
-          }
-        }
-      }
-
-      // skip over the current one to find the next device
-      currentPosition = dataEnd + strlen(DS_TAG_DEVICE_END);
-    }
-  }
-cleanup:
-  delete[] contentStart;
-  return status;
-}
-
-typedef ds_status (*ds_score_serializer)(ds_device *device, uint8_t **serializedScore,
-                                         unsigned int *serializedScoreSize);
-static ds_status writeProfileToFile(ds_profile *profile, ds_score_serializer serializer,
-                                    const char *file) {
-  ds_status status = DS_SUCCESS;
-
-  if (profile == nullptr)
-    return DS_INVALID_PROFILE;
-
-  FILE *profileFile = fopen(file, ""wb"");
-  if (profileFile == nullptr) {
-    status = DS_FILE_ERROR;
-  } else {
-    unsigned int i;
-
-    // write version string
-    fwrite(DS_TAG_VERSION, sizeof(char), strlen(DS_TAG_VERSION), profileFile);
-    fwrite(profile->version, sizeof(char), strlen(profile->version), profileFile);
-    fwrite(DS_TAG_VERSION_END, sizeof(char), strlen(DS_TAG_VERSION_END), profileFile);
-    fwrite(""\n"", sizeof(char), 1, profileFile);
-
-    for (i = 0; i < profile->numDevices && status == DS_SUCCESS; i++) {
-      uint8_t *serializedScore;
-      unsigned int serializedScoreSize;
-
-      fwrite(DS_TAG_DEVICE, sizeof(char), strlen(DS_TAG_DEVICE), profileFile);
-
-      fwrite(DS_TAG_DEVICE_TYPE, sizeof(char), strlen(DS_TAG_DEVICE_TYPE), profileFile);
-      fwrite(&profile->devices[i].type, sizeof(ds_device_type), 1, profileFile);
-      fwrite(DS_TAG_DEVICE_TYPE_END, sizeof(char), strlen(DS_TAG_DEVICE_TYPE_END), profileFile);
-
-      switch (profile->devices[i].type) {
-        case DS_DEVICE_NATIVE_CPU: {
-          // There's no need to emit a device name for the native CPU device.
-          /*
-fwrite(DS_TAG_DEVICE_NAME, sizeof(char), strlen(DS_TAG_DEVICE_NAME),
-       profileFile);
-fwrite(DS_DEVICE_NATIVE_CPU_STRING,sizeof(char),
-       strlen(DS_DEVICE_NATIVE_CPU_STRING), profileFile);
-fwrite(DS_TAG_DEVICE_NAME_END, sizeof(char),
-       strlen(DS_TAG_DEVICE_NAME_END), profileFile);
-*/
-        } break;
-        case DS_DEVICE_OPENCL_DEVICE: {
-          fwrite(DS_TAG_DEVICE_NAME, sizeof(char), strlen(DS_TAG_DEVICE_NAME), profileFile);
-          fwrite(profile->devices[i].oclDeviceName, sizeof(char),
-                 strlen(profile->devices[i].oclDeviceName), profileFile);
-          fwrite(DS_TAG_DEVICE_NAME_END, sizeof(char), strlen(DS_TAG_DEVICE_NAME_END), profileFile);
-
-          fwrite(DS_TAG_DEVICE_DRIVER_VERSION, sizeof(char), strlen(DS_TAG_DEVICE_DRIVER_VERSION),
-                 profileFile);
-          fwrite(profile->devices[i].oclDriverVersion, sizeof(char),
-                 strlen(profile->devices[i].oclDriverVersion), profileFile);
-          fwrite(DS_TAG_DEVICE_DRIVER_VERSION_END, sizeof(char),
-                 strlen(DS_TAG_DEVICE_DRIVER_VERSION_END), profileFile);
-        } break;
-        default:
-          status = DS_UNKNOWN_DEVICE_TYPE;
-          continue;
-      };
-
-      fwrite(DS_TAG_SCORE, sizeof(char), strlen(DS_TAG_SCORE), profileFile);
-      status = serializer(&profile->devices[i], &serializedScore, &serializedScoreSize);
-      if (status == DS_SUCCESS && serializedScore != nullptr && serializedScoreSize > 0) {
-        fwrite(serializedScore, sizeof(char), serializedScoreSize, profileFile);
-        delete[] serializedScore;
-      }
-      fwrite(DS_TAG_SCORE_END, sizeof(char), strlen(DS_TAG_SCORE_END), profileFile);
-      fwrite(DS_TAG_DEVICE_END, sizeof(char), strlen(DS_TAG_DEVICE_END), profileFile);
-      fwrite(""\n"", sizeof(char), 1, profileFile);
-    }
-    fclose(profileFile);
-  }
-  return status;
-}
-
-// substitute invalid characters in device name with _
-static void legalizeFileName(char *fileName) {
-  // tprintf(""fileName: %s\n"", fileName);
-  const char *invalidChars = ""/\?:*\""><| ""; // space is valid but can cause headaches
-  // for each invalid char
-  for (unsigned i = 0; i < strlen(invalidChars); i++) {
-    char invalidStr[4];
-    invalidStr[0] = invalidChars[i];
-    invalidStr[1] = '\0';
-    // tprintf(""eliminating %s\n"", invalidStr);
-    // char *pos = strstr(fileName, invalidStr);
-    // initial ./ is valid for present directory
-    // if (*pos == '.') pos++;
-    // if (*pos == '/') pos++;
-    for (char *pos = strstr(fileName, invalidStr); pos != nullptr;
-         pos = strstr(pos + 1, invalidStr)) {
-      // tprintf(""\tfound: %s, "", pos);
-      pos[0] = '_';
-      // tprintf(""fileName: %s\n"", fileName);
-    }
-  }
-}
-
-static void populateGPUEnvFromDevice(GPUEnv *gpuInfo, cl_device_id device) {
-  // tprintf(""[DS] populateGPUEnvFromDevice\n"");
-  size_t size;
-  gpuInfo->mnIsUserCreated = 1;
-  // device
-  gpuInfo->mpDevID = device;
-  gpuInfo->mpArryDevsID = new cl_device_id[1];
-  gpuInfo->mpArryDevsID[0] = gpuInfo->mpDevID;
-  clStatus = clGetDeviceInfo(gpuInfo->mpDevID, CL_DEVICE_TYPE, sizeof(cl_device_type),
-                             &gpuInfo->mDevType, &size);
-  CHECK_OPENCL(clStatus, ""populateGPUEnv::getDeviceInfo(TYPE)"");
-  // platform
-  clStatus = clGetDeviceInfo(gpuInfo->mpDevID, CL_DEVICE_PLATFORM, sizeof(cl_platform_id),
-                             &gpuInfo->mpPlatformID, &size);
-  CHECK_OPENCL(clStatus, ""populateGPUEnv::getDeviceInfo(PLATFORM)"");
-  // context
-  cl_context_properties props[3];
-  props[0] = CL_CONTEXT_PLATFORM;
-  props[1] = (cl_context_properties)gpuInfo->mpPlatformID;
-  props[2] = 0;
-  gpuInfo->mpContext = clCreateContext(props, 1, &gpuInfo->mpDevID, nullptr, nullptr, &clStatus);
-  CHECK_OPENCL(clStatus, ""populateGPUEnv::createContext"");
-  // queue
-  cl_command_queue_properties queueProperties = 0;
-  gpuInfo->mpCmdQueue =
-      clCreateCommandQueue(gpuInfo->mpContext, gpuInfo->mpDevID, queueProperties, &clStatus);
-  CHECK_OPENCL(clStatus, ""populateGPUEnv::createCommandQueue"");
-}
-
-int OpenclDevice::LoadOpencl() {
-#  ifdef WIN32
-  HINSTANCE HOpenclDll = nullptr;
-  void *OpenclDll = nullptr;
-  // fprintf(stderr, "" LoadOpenclDllxx... \n"");
-  OpenclDll = static_cast<HINSTANCE>(HOpenclDll);
-  OpenclDll = LoadLibrary(""openCL.dll"");
-  if (!static_cast<HINSTANCE>(OpenclDll)) {
-    fprintf(stderr, ""[OD] Load opencl.dll failed!\n"");
-    FreeLibrary(static_cast<HINSTANCE>(OpenclDll));
-    return 0;
-  }
-  fprintf(stderr, ""[OD] Load opencl.dll successful!\n"");
-#  endif
-  return 1;
-}
-int OpenclDevice::SetKernelEnv(KernelEnv *envInfo) {
-  envInfo->mpkContext = gpuEnv.mpContext;
-  envInfo->mpkCmdQueue = gpuEnv.mpCmdQueue;
-  envInfo->mpkProgram = gpuEnv.mpArryPrograms[0];
-
-  return 1;
-}
-
-static cl_mem allocateZeroCopyBuffer(const KernelEnv &rEnv, l_uint32 *hostbuffer, size_t nElements,
-                                     cl_mem_flags flags, cl_int *pStatus) {
-  cl_mem membuffer = clCreateBuffer(rEnv.mpkContext, (cl_mem_flags)(flags),
-                                    nElements * sizeof(l_uint32), hostbuffer, pStatus);
-
-  return membuffer;
-}
-
-static Image mapOutputCLBuffer(const KernelEnv &rEnv, cl_mem clbuffer, Image pixd, Image pixs,
-                              int elements, cl_mem_flags flags, bool memcopy = false,
-                              bool sync = true) {
-  if (!pixd) {
-    if (memcopy) {
-      if ((pixd = pixCreateTemplate(pixs)) == nullptr)
-        tprintf(""pixd not made\n"");
-    } else {
-      if ((pixd = pixCreateHeader(pixGetWidth(pixs), pixGetHeight(pixs), pixGetDepth(pixs))) ==
-          nullptr)
-        tprintf(""pixd not made\n"");
-    }
-  }
-  l_uint32 *pValues =
-      (l_uint32 *)clEnqueueMapBuffer(rEnv.mpkCmdQueue, clbuffer, CL_TRUE, flags, 0,
-                                     elements * sizeof(l_uint32), 0, nullptr, nullptr, nullptr);
-
-  if (memcopy) {
-    memcpy(pixGetData(pixd), pValues, elements * sizeof(l_uint32));
-  } else {
-    pixSetData(pixd, pValues);
-  }
-
-  clEnqueueUnmapMemObject(rEnv.mpkCmdQueue, clbuffer, pValues, 0, nullptr, nullptr);
-
-  if (sync) {
-    clFinish(rEnv.mpkCmdQueue);
-  }
-
-  return pixd;
-}
-
-void OpenclDevice::releaseMorphCLBuffers() {
-  if (pixdCLIntermediate != nullptr)
-    clReleaseMemObject(pixdCLIntermediate);
-  if (pixsCLBuffer != nullptr)
-    clReleaseMemObject(pixsCLBuffer);
-  if (pixdCLBuffer != nullptr)
-    clReleaseMemObject(pixdCLBuffer);
-  if (pixThBuffer != nullptr)
-    clReleaseMemObject(pixThBuffer);
-  pixdCLIntermediate = pixsCLBuffer = pixdCLBuffer = pixThBuffer = nullptr;
-}
-
-int OpenclDevice::initMorphCLAllocations(l_int32 wpl, l_int32 h, Image pixs) {
-  SetKernelEnv(&rEnv);
-
-  if (pixThBuffer != nullptr) {
-    pixsCLBuffer = allocateZeroCopyBuffer(rEnv, nullptr, wpl * h, CL_MEM_ALLOC_HOST_PTR, &clStatus);
-
-    // Get the output from ThresholdToPix operation
-    clStatus = clEnqueueCopyBuffer(rEnv.mpkCmdQueue, pixThBuffer, pixsCLBuffer, 0, 0,
-                                   sizeof(l_uint32) * wpl * h, 0, nullptr, nullptr);
-  } else {
-    // Get data from the source image
-    l_uint32 *srcdata = reinterpret_cast<l_uint32 *>(malloc(wpl * h * sizeof(l_uint32)));
-    memcpy(srcdata, pixGetData(pixs), wpl * h * sizeof(l_uint32));
-
-    pixsCLBuffer = allocateZeroCopyBuffer(rEnv, srcdata, wpl * h, CL_MEM_USE_HOST_PTR, &clStatus);
-  }
-
-  pixdCLBuffer = allocateZeroCopyBuffer(rEnv, nullptr, wpl * h, CL_MEM_ALLOC_HOST_PTR, &clStatus);
-
-  pixdCLIntermediate =
-      allocateZeroCopyBuffer(rEnv, nullptr, wpl * h, CL_MEM_ALLOC_HOST_PTR, &clStatus);
-
-  return (int)clStatus;
-}
-
-int OpenclDevice::InitEnv() {
-//    tprintf(""[OD] OpenclDevice::InitEnv()\n"");
-#  ifdef SAL_WIN32
-  while (1) {
-    if (1 == LoadOpencl())
-      break;
-  }
-#  endif
-  // sets up environment, compiles programs
-
-  InitOpenclRunEnv_DeviceSelection(0);
-  return 1;
-}
-
-int OpenclDevice::ReleaseOpenclRunEnv() {
-  ReleaseOpenclEnv(&gpuEnv);
-#  ifdef SAL_WIN32
-  FreeOpenclDll();
-#  endif
-  return 1;
-}
-
-inline int OpenclDevice::AddKernelConfig(int kCount, const char *kName) {
-  ASSERT_HOST(kCount > 0);
-  ASSERT_HOST(strlen(kName) < sizeof(gpuEnv.mArrykernelNames[kCount - 1]));
-  strcpy(gpuEnv.mArrykernelNames[kCount - 1], kName);
-  gpuEnv.mnKernelCount++;
-  return 0;
-}
-
-int OpenclDevice::RegistOpenclKernel() {
-  if (!gpuEnv.mnIsUserCreated)
-    memset(&gpuEnv, 0, sizeof(gpuEnv));
-
-  gpuEnv.mnFileCount = 0; // argc;
-  gpuEnv.mnKernelCount = 0UL;
-
-  AddKernelConfig(1, ""oclAverageSub1"");
-  return 0;
-}
-
-int OpenclDevice::InitOpenclRunEnv_DeviceSelection(int argc) {
-  if (!isInited) {
-    // after programs compiled, selects best device
-    ds_device bestDevice_DS = getDeviceSelection();
-    cl_device_id bestDevice = bestDevice_DS.oclDeviceID;
-    // overwrite global static GPUEnv with new device
-    if (selectedDeviceIsOpenCL()) {
-      // tprintf(""[DS] InitOpenclRunEnv_DS::Calling populateGPUEnvFromDevice()
-      // for selected device\n"");
-      populateGPUEnvFromDevice(&gpuEnv, bestDevice);
-      gpuEnv.mnFileCount = 0; // argc;
-      gpuEnv.mnKernelCount = 0UL;
-      CompileKernelFile(&gpuEnv, """");
-    } else {
-      // tprintf(""[DS] InitOpenclRunEnv_DS::Skipping populateGPUEnvFromDevice()
-      // b/c native cpu selected\n"");
-    }
-    isInited = 1;
-  }
-  return 0;
-}
-
-OpenclDevice::OpenclDevice() {
-  // InitEnv();
-}
-
-OpenclDevice::~OpenclDevice() {
-  // ReleaseOpenclRunEnv();
-}
-
-int OpenclDevice::ReleaseOpenclEnv(GPUEnv *gpuInfo) {
-  int i = 0;
-  int clStatus = 0;
-
-  if (!isInited) {
-    return 1;
-  }
-
-  for (i = 0; i < gpuEnv.mnFileCount; i++) {
-    if (gpuEnv.mpArryPrograms[i]) {
-      clStatus = clReleaseProgram(gpuEnv.mpArryPrograms[i]);
-      CHECK_OPENCL(clStatus, ""clReleaseProgram"");
-      gpuEnv.mpArryPrograms[i] = nullptr;
-    }
-  }
-  if (gpuEnv.mpCmdQueue) {
-    clReleaseCommandQueue(gpuEnv.mpCmdQueue);
-    gpuEnv.mpCmdQueue = nullptr;
-  }
-  if (gpuEnv.mpContext) {
-    clReleaseContext(gpuEnv.mpContext);
-    gpuEnv.mpContext = nullptr;
-  }
-  isInited = 0;
-  gpuInfo->mnIsUserCreated = 0;
-  delete[] gpuInfo->mpArryDevsID;
-  return 1;
-}
-int OpenclDevice::BinaryGenerated(const char *clFileName, FILE **fhandle) {
-  unsigned int i = 0;
-  cl_int clStatus;
-  int status = 0;
-  FILE *fd = nullptr;
-  char fileName[256];
-  char cl_name[128];
-  char deviceName[1024];
-  clStatus = clGetDeviceInfo(gpuEnv.mpArryDevsID[i], CL_DEVICE_NAME, sizeof(deviceName), deviceName,
-                             nullptr);
-  CHECK_OPENCL(clStatus, ""clGetDeviceInfo"");
-  const char *str = strstr(clFileName, "".cl"");
-  memcpy(cl_name, clFileName, str - clFileName);
-  cl_name[str - clFileName] = '\0';
-  snprintf(fileName, sizeof(fileName), ""%s-%s.bin"", cl_name, deviceName);
-  legalizeFileName(fileName);
-  fd = fopen(fileName, ""rb"");
-  status = (fd != nullptr) ? 1 : 0;
-  if (fd != nullptr) {
-    *fhandle = fd;
-  }
-  return status;
-}
-int OpenclDevice::CachedOfKernerPrg(const GPUEnv *gpuEnvCached, const char *clFileName) {
-  int i;
-  for (i = 0; i < gpuEnvCached->mnFileCount; i++) {
-    if (strcasecmp(gpuEnvCached->mArryKnelSrcFile[i], clFileName) == 0) {
-      if (gpuEnvCached->mpArryPrograms[i] != nullptr) {
-        return 1;
-      }
-    }
-  }
-
-  return 0;
-}
-int OpenclDevice::WriteBinaryToFile(const char *fileName, const char *birary, size_t numBytes) {
-  FILE *output = nullptr;
-  output = fopen(fileName, ""wb"");
-  if (output == nullptr) {
-    return 0;
-  }
-
-  fwrite(birary, sizeof(char), numBytes, output);
-  fclose(output);
-
-  return 1;
-}
-
-int OpenclDevice::GeneratBinFromKernelSource(cl_program program, const char *clFileName) {
-  unsigned int i = 0;
-  cl_int clStatus;
-  cl_uint numDevices;
-
-  clStatus =
-      clGetProgramInfo(program, CL_PROGRAM_NUM_DEVICES, sizeof(numDevices), &numDevices, nullptr);
-  CHECK_OPENCL(clStatus, ""clGetProgramInfo"");
-
-  std::vector<cl_device_id> mpArryDevsID(numDevices);
-
-  /* grab the handles to all of the devices in the program. */
-  clStatus = clGetProgramInfo(program, CL_PROGRAM_DEVICES, sizeof(cl_device_id) * numDevices,
-                              &mpArryDevsID[0], nullptr);
-  CHECK_OPENCL(clStatus, ""clGetProgramInfo"");
-
-  /* figure out the sizes of each of the binaries. */
-  std::vector<size_t> binarySizes(numDevices);
-
-  clStatus = clGetProgramInfo(program, CL_PROGRAM_BINARY_SIZES, sizeof(size_t) * numDevices,
-                              &binarySizes[0], nullptr);
-  CHECK_OPENCL(clStatus, ""clGetProgramInfo"");
-
-  /* copy over all of the generated binaries. */
-  std::vector<char *> binaries(numDevices);
-
-  for (i = 0; i < numDevices; i++) {
-    if (binarySizes[i] != 0) {
-      binaries[i] = new char[binarySizes[i]];
-    } else {
-      binaries[i] = nullptr;
-    }
-  }
-
-  clStatus = clGetProgramInfo(program, CL_PROGRAM_BINARIES, sizeof(char *) * numDevices,
-                              &binaries[0], nullptr);
-  CHECK_OPENCL(clStatus, ""clGetProgramInfo"");
-
-  /* dump out each binary into its own separate file. */
-  for (i = 0; i < numDevices; i++) {
-    if (binarySizes[i] != 0) {
-      char fileName[256];
-      char cl_name[128];
-      char deviceName[1024];
-      clStatus =
-          clGetDeviceInfo(mpArryDevsID[i], CL_DEVICE_NAME, sizeof(deviceName), deviceName, nullptr);
-      CHECK_OPENCL(clStatus, ""clGetDeviceInfo"");
-
-      const char *str = strstr(clFileName, "".cl"");
-      memcpy(cl_name, clFileName, str - clFileName);
-      cl_name[str - clFileName] = '\0';
-      snprintf(fileName, sizeof(fileName), ""%s-%s.bin"", cl_name, deviceName);
-      legalizeFileName(fileName);
-      if (!WriteBinaryToFile(fileName, binaries[i], binarySizes[i])) {
-        tprintf(""[OD] write binary[%s] failed\n"", fileName);
-        return 0;
-      } // else
-      tprintf(""[OD] write binary[%s] successfully\n"", fileName);
-    }
-  }
-
-  // Release all resources and memory
-  for (i = 0; i < numDevices; i++) {
-    delete[] binaries[i];
-  }
-
-  return 1;
-}
-
-int OpenclDevice::CompileKernelFile(GPUEnv *gpuInfo, const char *buildOption) {
-  cl_int clStatus = 0;
-  const char *source;
-  size_t source_size[1];
-  int binary_status, binaryExisted, idx;
-  cl_uint numDevices;
-  FILE *fd, *fd1;
-  const char *filename = ""kernel.cl"";
-  // fprintf(stderr, ""[OD] CompileKernelFile ... \n"");
-  if (CachedOfKernerPrg(gpuInfo, filename) == 1) {
-    return 1;
-  }
-
-  idx = gpuInfo->mnFileCount;
-
-  source = kernel_src;
-
-  source_size[0] = strlen(source);
-  binaryExisted = 0;
-  binaryExisted = BinaryGenerated(filename, &fd); // don't check for binary during microbenchmark
-  if (binaryExisted == 1) {
-    clStatus = clGetContextInfo(gpuInfo->mpContext, CL_CONTEXT_NUM_DEVICES, sizeof(numDevices),
-                                &numDevices, nullptr);
-    CHECK_OPENCL(clStatus, ""clGetContextInfo"");
-
-    std::vector<cl_device_id> mpArryDevsID(numDevices);
-    bool b_error = fseek(fd, 0, SEEK_END) < 0;
-    auto pos = std::ftell(fd);
-    b_error |= (pos <= 0);
-    size_t length = pos;
-    b_error |= fseek(fd, 0, SEEK_SET) < 0;
-    if (b_error) {
-      fclose(fd);
-      return 0;
-    }
-
-    std::vector<uint8_t> binary(length + 2);
-
-    memset(&binary[0], 0, length + 2);
-    b_error |= fread(&binary[0], 1, length, fd) != length;
-
-    fclose(fd);
-    fd = nullptr;
-    // grab the handles to all of the devices in the context.
-    clStatus = clGetContextInfo(gpuInfo->mpContext, CL_CONTEXT_DEVICES,
-                                sizeof(cl_device_id) * numDevices, &mpArryDevsID[0], nullptr);
-    CHECK_OPENCL(clStatus, ""clGetContextInfo"");
-    // fprintf(stderr, ""[OD] Create kernel from binary\n"");
-    const uint8_t *c_binary = &binary[0];
-    gpuInfo->mpArryPrograms[idx] =
-        clCreateProgramWithBinary(gpuInfo->mpContext, numDevices, &mpArryDevsID[0], &length,
-                                  &c_binary, &binary_status, &clStatus);
-    CHECK_OPENCL(clStatus, ""clCreateProgramWithBinary"");
-  } else {
-    // create a CL program using the kernel source
-    // fprintf(stderr, ""[OD] Create kernel from source\n"");
-    gpuInfo->mpArryPrograms[idx] =
-        clCreateProgramWithSource(gpuInfo->mpContext, 1, &source, source_size, &clStatus);
-    CHECK_OPENCL(clStatus, ""clCreateProgramWithSource"");
-  }
-
-  if (gpuInfo->mpArryPrograms[idx] == (cl_program) nullptr) {
-    return 0;
-  }
-
-  // char options[512];
-  // create a cl program executable for all the devices specified
-  // tprintf(""[OD] BuildProgram.\n"");
-  if (!gpuInfo->mnIsUserCreated) {
-    clStatus = clBuildProgram(gpuInfo->mpArryPrograms[idx], 1, gpuInfo->mpArryDevsID, buildOption,
-                              nullptr, nullptr);
-  } else {
-    clStatus = clBuildProgram(gpuInfo->mpArryPrograms[idx], 1, &(gpuInfo->mpDevID), buildOption,
-                              nullptr, nullptr);
-  }
-  if (clStatus != CL_SUCCESS) {
-    tprintf(""BuildProgram error!\n"");
-    size_t length;
-    if (!gpuInfo->mnIsUserCreated) {
-      clStatus = clGetProgramBuildInfo(gpuInfo->mpArryPrograms[idx], gpuInfo->mpArryDevsID[0],
-                                       CL_PROGRAM_BUILD_LOG, 0, nullptr, &length);
-    } else {
-      clStatus = clGetProgramBuildInfo(gpuInfo->mpArryPrograms[idx], gpuInfo->mpDevID,
-                                       CL_PROGRAM_BUILD_LOG, 0, nullptr, &length);
-    }
-    if (clStatus != CL_SUCCESS) {
-      tprintf(""opencl create build log fail\n"");
-      return 0;
-    }
-    std::vector<char> buildLog(length);
-    if (!gpuInfo->mnIsUserCreated) {
-      clStatus = clGetProgramBuildInfo(gpuInfo->mpArryPrograms[idx], gpuInfo->mpArryDevsID[0],
-                                       CL_PROGRAM_BUILD_LOG, length, &buildLog[0], &length);
-    } else {
-      clStatus = clGetProgramBuildInfo(gpuInfo->mpArryPrograms[idx], gpuInfo->mpDevID,
-                                       CL_PROGRAM_BUILD_LOG, length, &buildLog[0], &length);
-    }
-    if (clStatus != CL_SUCCESS) {
-      tprintf(""opencl program build info fail\n"");
-      return 0;
-    }
-
-    fd1 = fopen(""kernel-build.log"", ""w+"");
-    if (fd1 != nullptr) {
-      fwrite(&buildLog[0], sizeof(char), length, fd1);
-      fclose(fd1);
-    }
-
-    return 0;
-  }
-
-  strcpy(gpuInfo->mArryKnelSrcFile[idx], filename);
-  if (binaryExisted == 0) {
-    GeneratBinFromKernelSource(gpuInfo->mpArryPrograms[idx], filename);
-  }
-
-  gpuInfo->mnFileCount += 1;
-  return 1;
-}
-
-l_uint32 *OpenclDevice::pixReadFromTiffKernel(l_uint32 *tiffdata, l_int32 w, l_int32 h, l_int32 wpl,
-                                              l_uint32 *line) {
-  cl_int clStatus;
-  KernelEnv rEnv;
-  size_t globalThreads[2];
-  size_t localThreads[2];
-  int gsize;
-  cl_mem valuesCl;
-  cl_mem outputCl;
-
-  // global and local work dimensions for Horizontal pass
-  gsize = (w + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;
-  globalThreads[0] = gsize;
-  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;
-  globalThreads[1] = gsize;
-  localThreads[0] = GROUPSIZE_X;
-  localThreads[1] = GROUPSIZE_Y;
-
-  SetKernelEnv(&rEnv);
-
-  l_uint32 *pResult = (l_uint32 *)malloc(w * h * sizeof(l_uint32));
-  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""composeRGBPixel"", &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateKernel composeRGBPixel"");
-
-  // Allocate input and output OCL buffers
-  valuesCl = allocateZeroCopyBuffer(rEnv, tiffdata, w * h, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,
-                                    &clStatus);
-  outputCl = allocateZeroCopyBuffer(rEnv, pResult, w * h, CL_MEM_WRITE_ONLY | CL_MEM_USE_HOST_PTR,
-                                    &clStatus);
-
-  // Kernel arguments
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &valuesCl);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(w), &w);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(h), &h);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(cl_mem), &outputCl);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg"");
-
-  // Kernel enqueue
-  clStatus = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                    localThreads, 0, nullptr, nullptr);
-  CHECK_OPENCL(clStatus, ""clEnqueueNDRangeKernel"");
-
-  /* map results back from gpu */
-  void *ptr = clEnqueueMapBuffer(rEnv.mpkCmdQueue, outputCl, CL_TRUE, CL_MAP_READ, 0,
-                                 w * h * sizeof(l_uint32), 0, nullptr, nullptr, &clStatus);
-  CHECK_OPENCL(clStatus, ""clEnqueueMapBuffer outputCl"");
-  clEnqueueUnmapMemObject(rEnv.mpkCmdQueue, outputCl, ptr, 0, nullptr, nullptr);
-
-  // Sync
-  clFinish(rEnv.mpkCmdQueue);
-  return pResult;
-}
-
-// Morphology Dilate operation for 5x5 structuring element. Invokes the relevant
-// OpenCL kernels
-static cl_int pixDilateCL_55(l_int32 wpl, l_int32 h) {
-  size_t globalThreads[2];
-  cl_mem pixtemp;
-  cl_int status;
-  int gsize;
-  size_t localThreads[2];
-
-  // Horizontal pass
-  gsize = (wpl * h + GROUPSIZE_HMORX - 1) / GROUPSIZE_HMORX * GROUPSIZE_HMORX;
-  globalThreads[0] = gsize;
-  globalThreads[1] = GROUPSIZE_HMORY;
-  localThreads[0] = GROUPSIZE_HMORX;
-  localThreads[1] = GROUPSIZE_HMORY;
-
-  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateHor_5x5"", &status);
-  CHECK_OPENCL(status, ""clCreateKernel morphoDilateHor_5x5"");
-
-  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);
-  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);
-
-  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                  localThreads, 0, nullptr, nullptr);
-
-  // Swap source and dest buffers
-  pixtemp = pixsCLBuffer;
-  pixsCLBuffer = pixdCLBuffer;
-  pixdCLBuffer = pixtemp;
-
-  // Vertical
-  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;
-  globalThreads[0] = gsize;
-  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;
-  globalThreads[1] = gsize;
-  localThreads[0] = GROUPSIZE_X;
-  localThreads[1] = GROUPSIZE_Y;
-
-  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateVer_5x5"", &status);
-  CHECK_OPENCL(status, ""clCreateKernel morphoDilateVer_5x5"");
-
-  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);
-  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);
-  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                  localThreads, 0, nullptr, nullptr);
-
-  return status;
-}
-
-// Morphology Erode operation for 5x5 structuring element. Invokes the relevant
-// OpenCL kernels
-static cl_int pixErodeCL_55(l_int32 wpl, l_int32 h) {
-  size_t globalThreads[2];
-  cl_mem pixtemp;
-  cl_int status;
-  int gsize;
-  l_uint32 fwmask, lwmask;
-  size_t localThreads[2];
-
-  lwmask = lmask32[31 - 2];
-  fwmask = rmask32[31 - 2];
-
-  // Horizontal pass
-  gsize = (wpl * h + GROUPSIZE_HMORX - 1) / GROUPSIZE_HMORX * GROUPSIZE_HMORX;
-  globalThreads[0] = gsize;
-  globalThreads[1] = GROUPSIZE_HMORY;
-  localThreads[0] = GROUPSIZE_HMORX;
-  localThreads[1] = GROUPSIZE_HMORY;
-
-  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeHor_5x5"", &status);
-  CHECK_OPENCL(status, ""clCreateKernel morphoErodeHor_5x5"");
-
-  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);
-  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);
-
-  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                  localThreads, 0, nullptr, nullptr);
-
-  // Swap source and dest buffers
-  pixtemp = pixsCLBuffer;
-  pixsCLBuffer = pixdCLBuffer;
-  pixdCLBuffer = pixtemp;
-
-  // Vertical
-  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;
-  globalThreads[0] = gsize;
-  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;
-  globalThreads[1] = gsize;
-  localThreads[0] = GROUPSIZE_X;
-  localThreads[1] = GROUPSIZE_Y;
-
-  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeVer_5x5"", &status);
-  CHECK_OPENCL(status, ""clCreateKernel morphoErodeVer_5x5"");
-
-  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);
-  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);
-  status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(fwmask), &fwmask);
-  status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(lwmask), &lwmask);
-  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                  localThreads, 0, nullptr, nullptr);
-
-  return status;
-}
-
-// Morphology Dilate operation. Invokes the relevant OpenCL kernels
-static cl_int pixDilateCL(l_int32 hsize, l_int32 vsize, l_int32 wpl, l_int32 h) {
-  l_int32 xp, yp, xn, yn;
-  SEL *sel;
-  size_t globalThreads[2];
-  cl_mem pixtemp;
-  cl_int status = 0;
-  int gsize;
-  size_t localThreads[2];
-  char isEven;
-
-  OpenclDevice::SetKernelEnv(&rEnv);
-
-  if (hsize == 5 && vsize == 5) {
-    // Specific case for 5x5
-    status = pixDilateCL_55(wpl, h);
-    return status;
-  }
-
-  sel = selCreateBrick(vsize, hsize, vsize / 2, hsize / 2, SEL_HIT);
-
-  selFindMaxTranslations(sel, &xp, &yp, &xn, &yn);
-  selDestroy(&sel);
-  // global and local work dimensions for Horizontal pass
-  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;
-  globalThreads[0] = gsize;
-  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;
-  globalThreads[1] = gsize;
-  localThreads[0] = GROUPSIZE_X;
-  localThreads[1] = GROUPSIZE_Y;
-
-  if (xp > 31 || xn > 31) {
-    // Generic case.
-    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateHor"", &status);
-    CHECK_OPENCL(status, ""clCreateKernel morphoDilateHor"");
-
-    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(xp), &xp);
-    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(xn), &xn);
-    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(wpl), &wpl);
-    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(h), &h);
-    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                    localThreads, 0, nullptr, nullptr);
-
-    if (yp > 0 || yn > 0) {
-      pixtemp = pixsCLBuffer;
-      pixsCLBuffer = pixdCLBuffer;
-      pixdCLBuffer = pixtemp;
-    }
-  } else if (xp > 0 || xn > 0) {
-    // Specific Horizontal pass kernel for half width < 32
-    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateHor_32word"", &status);
-    CHECK_OPENCL(status, ""clCreateKernel morphoDilateHor_32word"");
-    isEven = (xp != xn);
-
-    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(xp), &xp);
-    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);
-    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(h), &h);
-    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(isEven), &isEven);
-    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                    localThreads, 0, nullptr, nullptr);
-
-    if (yp > 0 || yn > 0) {
-      pixtemp = pixsCLBuffer;
-      pixsCLBuffer = pixdCLBuffer;
-      pixdCLBuffer = pixtemp;
-    }
-  }
-
-  if (yp > 0 || yn > 0) {
-    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateVer"", &status);
-    CHECK_OPENCL(status, ""clCreateKernel morphoDilateVer"");
-
-    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(yp), &yp);
-    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);
-    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(h), &h);
-    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(yn), &yn);
-    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                    localThreads, 0, nullptr, nullptr);
-  }
-
-  return status;
-}
-
-// Morphology Erode operation. Invokes the relevant OpenCL kernels
-static cl_int pixErodeCL(l_int32 hsize, l_int32 vsize, l_uint32 wpl, l_uint32 h) {
-  l_int32 xp, yp, xn, yn;
-  SEL *sel;
-  size_t globalThreads[2];
-  size_t localThreads[2];
-  cl_mem pixtemp;
-  cl_int status = 0;
-  int gsize;
-  char isAsymmetric = (MORPH_BC == ASYMMETRIC_MORPH_BC);
-  l_uint32 rwmask, lwmask;
-  char isEven;
-
-  sel = selCreateBrick(vsize, hsize, vsize / 2, hsize / 2, SEL_HIT);
-
-  selFindMaxTranslations(sel, &xp, &yp, &xn, &yn);
-  selDestroy(&sel);
-  OpenclDevice::SetKernelEnv(&rEnv);
-
-  if (hsize == 5 && vsize == 5 && isAsymmetric) {
-    // Specific kernel for 5x5
-    status = pixErodeCL_55(wpl, h);
-    return status;
-  }
-
-  lwmask = lmask32[31 - (xn & 31)];
-  rwmask = rmask32[31 - (xp & 31)];
-
-  // global and local work dimensions for Horizontal pass
-  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;
-  globalThreads[0] = gsize;
-  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;
-  globalThreads[1] = gsize;
-  localThreads[0] = GROUPSIZE_X;
-  localThreads[1] = GROUPSIZE_Y;
-
-  // Horizontal Pass
-  if (xp > 31 || xn > 31) {
-    // Generic case.
-    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeHor"", &status);
-
-    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(xp), &xp);
-    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(xn), &xn);
-    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(wpl), &wpl);
-    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(h), &h);
-    status = clSetKernelArg(rEnv.mpkKernel, 6, sizeof(isAsymmetric), &isAsymmetric);
-    status = clSetKernelArg(rEnv.mpkKernel, 7, sizeof(rwmask), &rwmask);
-    status = clSetKernelArg(rEnv.mpkKernel, 8, sizeof(lwmask), &lwmask);
-    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                    localThreads, 0, nullptr, nullptr);
-
-    if (yp > 0 || yn > 0) {
-      pixtemp = pixsCLBuffer;
-      pixsCLBuffer = pixdCLBuffer;
-      pixdCLBuffer = pixtemp;
-    }
-  } else if (xp > 0 || xn > 0) {
-    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeHor_32word"", &status);
-    isEven = (xp != xn);
-
-    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(xp), &xp);
-    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);
-    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(h), &h);
-    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(isAsymmetric), &isAsymmetric);
-    status = clSetKernelArg(rEnv.mpkKernel, 6, sizeof(rwmask), &rwmask);
-    status = clSetKernelArg(rEnv.mpkKernel, 7, sizeof(lwmask), &lwmask);
-    status = clSetKernelArg(rEnv.mpkKernel, 8, sizeof(isEven), &isEven);
-    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                    localThreads, 0, nullptr, nullptr);
-
-    if (yp > 0 || yn > 0) {
-      pixtemp = pixsCLBuffer;
-      pixsCLBuffer = pixdCLBuffer;
-      pixdCLBuffer = pixtemp;
-    }
-  }
-
-  // Vertical Pass
-  if (yp > 0 || yn > 0) {
-    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeVer"", &status);
-    CHECK_OPENCL(status, ""clCreateKernel morphoErodeVer"");
-
-    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);
-    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(yp), &yp);
-    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);
-    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(h), &h);
-    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(isAsymmetric), &isAsymmetric);
-    status = clSetKernelArg(rEnv.mpkKernel, 6, sizeof(yn), &yn);
-    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                    localThreads, 0, nullptr, nullptr);
-  }
-
-  return status;
-}
-
-// Morphology Open operation. Invokes the relevant OpenCL kernels
-static cl_int pixOpenCL(l_int32 hsize, l_int32 vsize, l_int32 wpl, l_int32 h) {
-  cl_int status;
-  cl_mem pixtemp;
-
-  // Erode followed by Dilate
-  status = pixErodeCL(hsize, vsize, wpl, h);
-
-  pixtemp = pixsCLBuffer;
-  pixsCLBuffer = pixdCLBuffer;
-  pixdCLBuffer = pixtemp;
-
-  status = pixDilateCL(hsize, vsize, wpl, h);
-
-  return status;
-}
-
-// Morphology Close operation. Invokes the relevant OpenCL kernels
-static cl_int pixCloseCL(l_int32 hsize, l_int32 vsize, l_int32 wpl, l_int32 h) {
-  cl_int status;
-  cl_mem pixtemp;
-
-  // Dilate followed by Erode
-  status = pixDilateCL(hsize, vsize, wpl, h);
-
-  pixtemp = pixsCLBuffer;
-  pixsCLBuffer = pixdCLBuffer;
-  pixdCLBuffer = pixtemp;
-
-  status = pixErodeCL(hsize, vsize, wpl, h);
-
-  return status;
-}
-
-// output = buffer1 & ~(buffer2)
-static cl_int pixSubtractCL_work(l_uint32 wpl, l_uint32 h, cl_mem buffer1, cl_mem buffer2) {
-  cl_int status;
-  size_t globalThreads[2];
-  int gsize;
-  size_t localThreads[] = {GROUPSIZE_X, GROUPSIZE_Y};
-
-  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;
-  globalThreads[0] = gsize;
-  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;
-  globalThreads[1] = gsize;
-
-  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""pixSubtract_inplace"", &status);
-  CHECK_OPENCL(status, ""clCreateKernel pixSubtract_inplace"");
-
-  // Enqueue a kernel run call.
-  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &buffer1);
-  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &buffer2);
-  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);
-  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);
-  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,
-                                  localThreads, 0, nullptr, nullptr);
-
-  return status;
-}
-
-// OpenCL implementation of Get Lines from pix function
-// Note: Assumes the source and dest opencl buffer are initialized. No check
-// done
-void OpenclDevice::pixGetLinesCL(Image pixd, Image pixs, Image *pix_vline, Image *pix_hline,
-                                 Image *pixClosed, bool getpixClosed, l_int32 close_hsize,
-                                 l_int32 close_vsize, l_int32 open_hsize, l_int32 open_vsize,
-                                 l_int32 line_hsize, l_int32 line_vsize) {
-  l_uint32 wpl, h;
-  cl_mem pixtemp;
-
-  wpl = pixGetWpl(pixs);
-  h = pixGetHeight(pixs);
-
-  // First step : Close Morph operation: Dilate followed by Erode
-  clStatus = pixCloseCL(close_hsize, close_vsize, wpl, h);
-
-  // Copy the Close output to CPU buffer
-  if (getpixClosed) {
-    *pixClosed =
-        mapOutputCLBuffer(rEnv, pixdCLBuffer, *pixClosed, pixs, wpl * h, CL_MAP_READ, true, false);
-  }
-
-  // Store the output of close operation in an intermediate buffer
-  // this will be later used for pixsubtract
-  clStatus = clEnqueueCopyBuffer(rEnv.mpkCmdQueue, pixdCLBuffer, pixdCLIntermediate, 0, 0,
-                                 sizeof(int) * wpl * h, 0, nullptr, nullptr);
-
-  // Second step: Open Operation - Erode followed by Dilate
-  pixtemp = pixsCLBuffer;
-  pixsCLBuffer = pixdCLBuffer;
-  pixdCLBuffer = pixtemp;
-
-  clStatus = pixOpenCL(open_hsize, open_vsize, wpl, h);
-
-  // Third step: Subtract : (Close - Open)
-  pixtemp = pixsCLBuffer;
-  pixsCLBuffer = pixdCLBuffer;
-  pixdCLBuffer = pixdCLIntermediate;
-  pixdCLIntermediate = pixtemp;
-
-  clStatus = pixSubtractCL_work(wpl, h, pixdCLBuffer, pixsCLBuffer);
-
-  // Store the output of Hollow operation in an intermediate buffer
-  // this will be later used
-  clStatus = clEnqueueCopyBuffer(rEnv.mpkCmdQueue, pixdCLBuffer, pixdCLIntermediate, 0, 0,
-                                 sizeof(int) * wpl * h, 0, nullptr, nullptr);
-
-  pixtemp = pixsCLBuffer;
-  pixsCLBuffer = pixdCLBuffer;
-  pixdCLBuffer = pixtemp;
-
-  // Fourth step: Get vertical line
-  // pixOpenBrick(nullptr, pix_hollow, 1, min_line_length);
-  clStatus = pixOpenCL(1, line_vsize, wpl, h);
-
-  // Copy the vertical line output to CPU buffer
-  *pix_vline =
-      mapOutputCLBuffer(rEnv, pixdCLBuffer, *pix_vline, pixs, wpl * h, CL_MAP_READ, true, false);
-
-  pixtemp = pixsCLBuffer;
-  pixsCLBuffer = pixdCLIntermediate;
-  pixdCLIntermediate = pixtemp;
-
-  // Fifth step: Get horizontal line
-  // pixOpenBrick(nullptr, pix_hollow, min_line_length, 1);
-  clStatus = pixOpenCL(line_hsize, 1, wpl, h);
-
-  // Copy the horizontal line output to CPU buffer
-  *pix_hline =
-      mapOutputCLBuffer(rEnv, pixdCLBuffer, *pix_hline, pixs, wpl * h, CL_MAP_READ, true, true);
-
-  return;
-}
-
-/*************************************************************************
- *  HistogramRect
- *  Otsu Thresholding Operations
- *  histogramAllChannels is laid out as all channel 0, then all channel 1...
- *  only supports 1 or 4 channels (bytes_per_pixel)
- ************************************************************************/
-int OpenclDevice::HistogramRectOCL(void *imageData, int bytes_per_pixel, int bytes_per_line,
-                                   int left, // always 0
-                                   int top,  // always 0
-                                   int width, int height, int kHistogramSize,
-                                   int *histogramAllChannels) {
-  cl_int clStatus;
-  int retVal = 0;
-  KernelEnv histKern;
-  SetKernelEnv(&histKern);
-  KernelEnv histRedKern;
-  SetKernelEnv(&histRedKern);
-  /* map imagedata to device as read only */
-  // USE_HOST_PTR uses onion+ bus which is slowest option; also happens to be
-  // coherent which we don't need.
-  // faster option would be to allocate initial image buffer
-  // using a garlic bus memory type
-  cl_mem imageBuffer =
-      clCreateBuffer(histKern.mpkContext, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,
-                     width * height * bytes_per_pixel * sizeof(char), imageData, &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer imageBuffer"");
-
-  /* setup work group size parameters */
-  int block_size = 256;
-  cl_uint numCUs;
-  clStatus = clGetDeviceInfo(gpuEnv.mpDevID, CL_DEVICE_MAX_COMPUTE_UNITS, sizeof(numCUs), &numCUs,
-                             nullptr);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer imageBuffer"");
-
-  int requestedOccupancy = 10;
-  int numWorkGroups = numCUs * requestedOccupancy;
-  int numThreads = block_size * numWorkGroups;
-  size_t local_work_size[] = {static_cast<size_t>(block_size)};
-  size_t global_work_size[] = {static_cast<size_t>(numThreads)};
-  size_t red_global_work_size[] = {
-      static_cast<size_t>(block_size * kHistogramSize * bytes_per_pixel)};
-
-  /* map histogramAllChannels as write only */
-
-  cl_mem histogramBuffer = clCreateBuffer(
-      histKern.mpkContext, CL_MEM_READ_WRITE | CL_MEM_USE_HOST_PTR,
-      kHistogramSize * bytes_per_pixel * sizeof(int), histogramAllChannels, &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer histogramBuffer"");
-
-  /* intermediate histogram buffer */
-  int histRed = 256;
-  int tmpHistogramBins = kHistogramSize * bytes_per_pixel * histRed;
-
-  cl_mem tmpHistogramBuffer =
-      clCreateBuffer(histKern.mpkContext, CL_MEM_READ_WRITE, tmpHistogramBins * sizeof(cl_uint),
-                     nullptr, &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer tmpHistogramBuffer"");
-
-  /* atomic sync buffer */
-  int *zeroBuffer = new int[1];
-  zeroBuffer[0] = 0;
-  cl_mem atomicSyncBuffer =
-      clCreateBuffer(histKern.mpkContext, CL_MEM_READ_WRITE | CL_MEM_COPY_HOST_PTR, sizeof(cl_int),
-                     zeroBuffer, &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer atomicSyncBuffer"");
-  delete[] zeroBuffer;
-  // Create kernel objects based on bytes_per_pixel
-  if (bytes_per_pixel == 1) {
-    histKern.mpkKernel =
-        clCreateKernel(histKern.mpkProgram, ""kernel_HistogramRectOneChannel"", &clStatus);
-    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_HistogramRectOneChannel"");
-
-    histRedKern.mpkKernel = clCreateKernel(histRedKern.mpkProgram,
-                                           ""kernel_HistogramRectOneChannelReduction"", &clStatus);
-    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_HistogramRectOneChannelReduction"");
-  } else {
-    histKern.mpkKernel =
-        clCreateKernel(histKern.mpkProgram, ""kernel_HistogramRectAllChannels"", &clStatus);
-    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_HistogramRectAllChannels"");
-
-    histRedKern.mpkKernel = clCreateKernel(histRedKern.mpkProgram,
-                                           ""kernel_HistogramRectAllChannelsReduction"", &clStatus);
-    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_HistogramRectAllChannelsReduction"");
-  }
-
-  void *ptr;
-
-  // Initialize tmpHistogramBuffer buffer
-  ptr = clEnqueueMapBuffer(histKern.mpkCmdQueue, tmpHistogramBuffer, CL_TRUE, CL_MAP_WRITE, 0,
-                           tmpHistogramBins * sizeof(cl_uint), 0, nullptr, nullptr, &clStatus);
-  CHECK_OPENCL(clStatus, ""clEnqueueMapBuffer tmpHistogramBuffer"");
-
-  memset(ptr, 0, tmpHistogramBins * sizeof(cl_uint));
-  clEnqueueUnmapMemObject(histKern.mpkCmdQueue, tmpHistogramBuffer, ptr, 0, nullptr, nullptr);
-
-  /* set kernel 1 arguments */
-  clStatus = clSetKernelArg(histKern.mpkKernel, 0, sizeof(cl_mem), &imageBuffer);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg imageBuffer"");
-  cl_uint numPixels = width * height;
-  clStatus = clSetKernelArg(histKern.mpkKernel, 1, sizeof(cl_uint), &numPixels);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg numPixels"");
-  clStatus = clSetKernelArg(histKern.mpkKernel, 2, sizeof(cl_mem), &tmpHistogramBuffer);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg tmpHistogramBuffer"");
-
-  /* set kernel 2 arguments */
-  int n = numThreads / bytes_per_pixel;
-  clStatus = clSetKernelArg(histRedKern.mpkKernel, 0, sizeof(cl_int), &n);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg imageBuffer"");
-  clStatus = clSetKernelArg(histRedKern.mpkKernel, 1, sizeof(cl_mem), &tmpHistogramBuffer);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg tmpHistogramBuffer"");
-  clStatus = clSetKernelArg(histRedKern.mpkKernel, 2, sizeof(cl_mem), &histogramBuffer);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg histogramBuffer"");
-
-  /* launch histogram */
-  clStatus = clEnqueueNDRangeKernel(histKern.mpkCmdQueue, histKern.mpkKernel, 1, nullptr,
-                                    global_work_size, local_work_size, 0, nullptr, nullptr);
-  CHECK_OPENCL(clStatus, ""clEnqueueNDRangeKernel kernel_HistogramRectAllChannels"");
-  clFinish(histKern.mpkCmdQueue);
-  if (clStatus != 0) {
-    retVal = -1;
-  }
-  /* launch histogram */
-  clStatus = clEnqueueNDRangeKernel(histRedKern.mpkCmdQueue, histRedKern.mpkKernel, 1, nullptr,
-                                    red_global_work_size, local_work_size, 0, nullptr, nullptr);
-  CHECK_OPENCL(clStatus, ""clEnqueueNDRangeKernel kernel_HistogramRectAllChannelsReduction"");
-  clFinish(histRedKern.mpkCmdQueue);
-  if (clStatus != 0) {
-    retVal = -1;
-  }
-
-  /* map results back from gpu */
-  ptr = clEnqueueMapBuffer(histRedKern.mpkCmdQueue, histogramBuffer, CL_TRUE, CL_MAP_READ, 0,
-                           kHistogramSize * bytes_per_pixel * sizeof(int), 0, nullptr, nullptr,
-                           &clStatus);
-  CHECK_OPENCL(clStatus, ""clEnqueueMapBuffer histogramBuffer"");
-  if (clStatus != 0) {
-    retVal = -1;
-  }
-  clEnqueueUnmapMemObject(histRedKern.mpkCmdQueue, histogramBuffer, ptr, 0, nullptr, nullptr);
-
-  clReleaseMemObject(histogramBuffer);
-  clReleaseMemObject(imageBuffer);
-  return retVal;
-}
-
-/*************************************************************************
- * Threshold the rectangle, taking everything except the image buffer pointer
- * from the class, using thresholds/hi_values to the output IMAGE.
- * only supports 1 or 4 channels
- ************************************************************************/
-int OpenclDevice::ThresholdRectToPixOCL(unsigned char *imageData, int bytes_per_pixel,
-                                        int bytes_per_line, int *thresholds, int *hi_values,
-                                        Image *pix, int height, int width, int top, int left) {
-  int retVal = 0;
-  /* create pix result buffer */
-  *pix = pixCreate(width, height, 1);
-  uint32_t *pixData = pixGetData(*pix);
-  int wpl = pixGetWpl(*pix);
-  int pixSize = wpl * height * sizeof(uint32_t); // number of pixels
-
-  cl_int clStatus;
-  KernelEnv rEnv;
-  SetKernelEnv(&rEnv);
-
-  /* setup work group size parameters */
-  int block_size = 256;
-  cl_uint numCUs = 6;
-  clStatus = clGetDeviceInfo(gpuEnv.mpDevID, CL_DEVICE_MAX_COMPUTE_UNITS, sizeof(numCUs), &numCUs,
-                             nullptr);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer imageBuffer"");
-
-  int requestedOccupancy = 10;
-  int numWorkGroups = numCUs * requestedOccupancy;
-  int numThreads = block_size * numWorkGroups;
-  size_t local_work_size[] = {(size_t)block_size};
-  size_t global_work_size[] = {(size_t)numThreads};
-
-  /* map imagedata to device as read only */
-  // USE_HOST_PTR uses onion+ bus which is slowest option; also happens to be
-  // coherent which we don't need.
-  // faster option would be to allocate initial image buffer
-  // using a garlic bus memory type
-  cl_mem imageBuffer =
-      clCreateBuffer(rEnv.mpkContext, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,
-                     width * height * bytes_per_pixel * sizeof(char), imageData, &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer imageBuffer"");
-
-  /* map pix as write only */
-  pixThBuffer = clCreateBuffer(rEnv.mpkContext, CL_MEM_READ_WRITE | CL_MEM_USE_HOST_PTR, pixSize,
-                               pixData, &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer pix"");
-
-  /* map thresholds and hi_values */
-  cl_mem thresholdsBuffer = clCreateBuffer(rEnv.mpkContext, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,
-                                           bytes_per_pixel * sizeof(int), thresholds, &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer thresholdBuffer"");
-  cl_mem hiValuesBuffer = clCreateBuffer(rEnv.mpkContext, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,
-                                         bytes_per_pixel * sizeof(int), hi_values, &clStatus);
-  CHECK_OPENCL(clStatus, ""clCreateBuffer hiValuesBuffer"");
-
-  /* compile kernel */
-  if (bytes_per_pixel == 4) {
-    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""kernel_ThresholdRectToPix"", &clStatus);
-    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_ThresholdRectToPix"");
-  } else {
-    rEnv.mpkKernel =
-        clCreateKernel(rEnv.mpkProgram, ""kernel_ThresholdRectToPix_OneChan"", &clStatus);
-    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_ThresholdRectToPix_OneChan"");
-  }
-
-  /* set kernel arguments */
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &imageBuffer);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg imageBuffer"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(int), &height);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg height"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(int), &width);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg width"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(int), &wpl);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg wpl"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(cl_mem), &thresholdsBuffer);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg thresholdsBuffer"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(cl_mem), &hiValuesBuffer);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg hiValuesBuffer"");
-  clStatus = clSetKernelArg(rEnv.mpkKernel, 6, sizeof(cl_mem), &pixThBuffer);
-  CHECK_OPENCL(clStatus, ""clSetKernelArg pixThBuffer"");
-
-  /* launch kernel & wait */
-  clStatus = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 1, nullptr, global_work_size,
-                                    local_work_size, 0, nullptr, nullptr);
-  CHECK_OPENCL(clStatus, ""clEnqueueNDRangeKernel kernel_ThresholdRectToPix"");
-  clFinish(rEnv.mpkCmdQueue);
-  if (clStatus != 0) {
-    tprintf(""Setting return value to -1\n"");
-    retVal = -1;
-  }
-  /* map results back from gpu */
-  void *ptr = clEnqueueMapBuffer(rEnv.mpkCmdQueue, pixThBuffer, CL_TRUE, CL_MAP_READ, 0, pixSize, 0,
-                                 nullptr, nullptr, &clStatus);
-  CHECK_OPENCL(clStatus, ""clEnqueueMapBuffer histogramBuffer"");
-  clEnqueueUnmapMemObject(rEnv.mpkCmdQueue, pixThBuffer, ptr, 0, nullptr, nullptr);
-
-  clReleaseMemObject(imageBuffer);
-  clReleaseMemObject(thresholdsBuffer);
-  clReleaseMemObject(hiValuesBuffer);
-
-  return retVal;
-}
-
-/******************************************************************************
- * Data Types for Device Selection
- *****************************************************************************/
-
-struct TessScoreEvaluationInputData {
-  int height;
-  int width;
-  int numChannels;
-  unsigned char *imageData;
-  Image pix;
-};
-
-static void populateTessScoreEvaluationInputData(TessScoreEvaluationInputData *input) {
-  srand(1);
-  // 8.5x11 inches @ 300dpi rounded to clean multiples
-  int height = 3328; // %256
-  int width = 2560;  // %512
-  int numChannels = 4;
-  input->height = height;
-  input->width = width;
-  input->numChannels = numChannels;
-  unsigned char(*imageData4)[4] = (unsigned char(*)[4])malloc(
-      height * width * numChannels * sizeof(unsigned char)); // new unsigned char[4][height*width];
-  input->imageData = (unsigned char *)&imageData4[0];
-
-  // zero out image
-  unsigned char pixelWhite[4] = {0, 0, 0, 255};
-  unsigned char pixelBlack[4] = {255, 255, 255, 255};
-  for (int p = 0; p < height * width; p++) {
-    // unsigned char tmp[4] = imageData4[0];
-    imageData4[p][0] = pixelWhite[0];
-    imageData4[p][1] = pixelWhite[1];
-    imageData4[p][2] = pixelWhite[2];
-    imageData4[p][3] = pixelWhite[3];
-  }
-  // random lines to be eliminated
-  int maxLineWidth = 64; // pixels wide
-  int numLines = 10;
-  // vertical lines
-  for (int i = 0; i < numLines; i++) {
-    int lineWidth = rand() % maxLineWidth;
-    int vertLinePos = lineWidth + rand() % (width - 2 * lineWidth);
-    // tprintf(""[PI] VerticalLine @ %i (w=%i)\n"", vertLinePos, lineWidth);
-    for (int row = vertLinePos - lineWidth / 2; row < vertLinePos + lineWidth / 2; row++) {
-      for (int col = 0; col < height; col++) {
-        // imageData4[row*width+col] = pixelBlack;
-        imageData4[row * width + col][0] = pixelBlack[0];
-        imageData4[row * width + col][1] = pixelBlack[1];
-        imageData4[row * width + col][2] = pixelBlack[2];
-        imageData4[row * width + col][3] = pixelBlack[3];
-      }
-    }
-  }
-  // horizontal lines
-  for (int i = 0; i < numLines; i++) {
-    int lineWidth = rand() % maxLineWidth;
-    int horLinePos = lineWidth + rand() % (height - 2 * lineWidth);
-    // tprintf(""[PI] HorizontalLine @ %i (w=%i)\n"", horLinePos, lineWidth);
-    for (int row = 0; row < width; row++) {
-      for (int col = horLinePos - lineWidth / 2; col < horLinePos + lineWidth / 2;
-           col++) { // for (int row = vertLinePos-lineWidth/2; row <
-                    // vertLinePos+lineWidth/2; row++) {
-        // tprintf(""[PI] HoizLine pix @ (%3i, %3i)\n"", row, col);
-        // imageData4[row*width+col] = pixelBlack;
-        imageData4[row * width + col][0] = pixelBlack[0];
-        imageData4[row * width + col][1] = pixelBlack[1];
-        imageData4[row * width + col][2] = pixelBlack[2];
-        imageData4[row * width + col][3] = pixelBlack[3];
-      }
-    }
-  }
-  // spots (noise, squares)
-  float fractionBlack = 0.1; // how much of the image should be blackened
-  int numSpots = (height * width) * fractionBlack / (maxLineWidth * maxLineWidth / 2 / 2);
-  for (int i = 0; i < numSpots; i++) {
-    int lineWidth = rand() % maxLineWidth;
-    int col = lineWidth + rand() % (width - 2 * lineWidth);
-    int row = lineWidth + rand() % (height - 2 * lineWidth);
-    // tprintf(""[PI] Spot[%i/%i] @ (%3i, %3i)\n"", i, numSpots, row, col );
-    for (int r = row - lineWidth / 2; r < row + lineWidth / 2; r++) {
-      for (int c = col - lineWidth / 2; c < col + lineWidth / 2; c++) {
-        // tprintf(""[PI] \tSpot[%i/%i] @ (%3i, %3i)\n"", i, numSpots, r, c );
-        // imageData4[row*width+col] = pixelBlack;
-        imageData4[r * width + c][0] = pixelBlack[0];
-        imageData4[r * width + c][1] = pixelBlack[1];
-        imageData4[r * width + c][2] = pixelBlack[2];
-        imageData4[r * width + c][3] = pixelBlack[3];
-      }
-    }
-  }
-
-  input->pix = pixCreate(input->width, input->height, 8 * input->numChannels);
-}
-
-struct TessDeviceScore {
-  float time;   // small time means faster device
-  bool clError; // were there any opencl errors
-  bool valid;   // was the correct response generated
-};
-
-/******************************************************************************
- * Micro Benchmarks for Device Selection
- *****************************************************************************/
-
-static double composeRGBPixelMicroBench(GPUEnv *env, TessScoreEvaluationInputData input,
-                                        ds_device_type type) {
-  double time = 0;
-#  if ON_WINDOWS
-  LARGE_INTEGER freq, time_funct_start, time_funct_end;
-  QueryPerformanceFrequency(&freq);
-#  elif ON_APPLE
-  mach_timebase_info_data_t info = {0, 0};
-  mach_timebase_info(&info);
-  long long start, stop;
-#  else
-  timespec time_funct_start, time_funct_end;
-#  endif
-  // input data
-  l_uint32 *tiffdata = (l_uint32 *)input.imageData; // same size and random data; data doesn't
-                                                    // change workload
-
-  // function call
-  if (type == DS_DEVICE_OPENCL_DEVICE) {
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_start);
-#  elif ON_APPLE
-    start = mach_absolute_time();
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);
-#  endif
-
-    OpenclDevice::gpuEnv = *env;
-    int wpl = pixGetWpl(input.pix);
-    OpenclDevice::pixReadFromTiffKernel(tiffdata, input.width, input.height, wpl, nullptr);
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_end);
-    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);
-#  elif ON_APPLE
-    stop = mach_absolute_time();
-    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);
-    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +
-           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;
-#  endif
-
-  } else {
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_start);
-#  elif ON_APPLE
-    start = mach_absolute_time();
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);
-#  endif
-    Image pix = pixCreate(input.width, input.height, 32);
-    l_uint32 *pixData = pixGetData(pix);
-    int i, j;
-    int idx = 0;
-    for (i = 0; i < input.height; i++) {
-      for (j = 0; j < input.width; j++) {
-        l_uint32 tiffword = tiffdata[i * input.width + j];
-        l_int32 rval = ((tiffword)&0xff);
-        l_int32 gval = (((tiffword) >> 8) & 0xff);
-        l_int32 bval = (((tiffword) >> 16) & 0xff);
-        l_uint32 value = (rval << 24) | (gval << 16) | (bval << 8);
-        pixData[idx] = value;
-        idx++;
-      }
-    }
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_end);
-    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);
-#  elif ON_APPLE
-    stop = mach_absolute_time();
-    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);
-    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +
-           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;
-#  endif
-    pix.destroy();
-  }
-
-  return time;
-}
-
-static double histogramRectMicroBench(GPUEnv *env, TessScoreEvaluationInputData input,
-                                      ds_device_type type) {
-  double time;
-#  if ON_WINDOWS
-  LARGE_INTEGER freq, time_funct_start, time_funct_end;
-  QueryPerformanceFrequency(&freq);
-#  elif ON_APPLE
-  mach_timebase_info_data_t info = {0, 0};
-  mach_timebase_info(&info);
-  long long start, stop;
-#  else
-  timespec time_funct_start, time_funct_end;
-#  endif
-
-  const int left = 0;
-  const int top = 0;
-  int kHistogramSize = 256;
-  int bytes_per_line = input.width * input.numChannels;
-  int *histogramAllChannels = new int[kHistogramSize * input.numChannels];
-  // function call
-  if (type == DS_DEVICE_OPENCL_DEVICE) {
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_start);
-#  elif ON_APPLE
-    start = mach_absolute_time();
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);
-#  endif
-
-    OpenclDevice::gpuEnv = *env;
-    int retVal = OpenclDevice::HistogramRectOCL(input.imageData, input.numChannels, bytes_per_line,
-                                                left, top, input.width, input.height,
-                                                kHistogramSize, histogramAllChannels);
-
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_end);
-    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);
-#  elif ON_APPLE
-    stop = mach_absolute_time();
-    if (retVal == 0) {
-      time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;
-    } else {
-      time = FLT_MAX;
-    }
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);
-    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +
-           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;
-#  endif
-  } else {
-    int *histogram = new int[kHistogramSize];
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_start);
-#  elif ON_APPLE
-    start = mach_absolute_time();
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);
-#  endif
-    for (int ch = 0; ch < input.numChannels; ++ch) {
-      tesseract::HistogramRect(input.pix, input.numChannels, left, top, input.width, input.height,
-                               histogram);
-    }
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_end);
-    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);
-#  elif ON_APPLE
-    stop = mach_absolute_time();
-    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);
-    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +
-           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;
-#  endif
-    delete[] histogram;
-  }
-
-  // cleanup
-  delete[] histogramAllChannels;
-  return time;
-}
-
-// Reproducing the ThresholdRectToPix native version
-static void ThresholdRectToPix_Native(const unsigned char *imagedata, int bytes_per_pixel,
-                                      int bytes_per_line, const int *thresholds,
-                                      const int *hi_values, Image *pix) {
-  int top = 0;
-  int left = 0;
-  int width = pixGetWidth(*pix);
-  int height = pixGetHeight(*pix);
-
-  *pix = pixCreate(width, height, 1);
-  uint32_t *pixdata = pixGetData(*pix);
-  int wpl = pixGetWpl(*pix);
-  const unsigned char *srcdata = imagedata + top * bytes_per_line + left * bytes_per_pixel;
-  for (int y = 0; y < height; ++y) {
-    const uint8_t *linedata = srcdata;
-    uint32_t *pixline = pixdata + y * wpl;
-    for (int x = 0; x < width; ++x, linedata += bytes_per_pixel) {
-      bool white_result = true;
-      for (int ch = 0; ch < bytes_per_pixel; ++ch) {
-        if (hi_values[ch] >= 0 && (linedata[ch] > thresholds[ch]) == (hi_values[ch] == 0)) {
-          white_result = false;
-          break;
-        }
-      }
-      if (white_result)
-        CLEAR_DATA_BIT(pixline, x);
-      else
-        SET_DATA_BIT(pixline, x);
-    }
-    srcdata += bytes_per_line;
-  }
-}
-
-static double thresholdRectToPixMicroBench(GPUEnv *env, TessScoreEvaluationInputData input,
-                                           ds_device_type type) {
-  double time;
-#  if ON_WINDOWS
-  LARGE_INTEGER freq, time_funct_start, time_funct_end;
-  QueryPerformanceFrequency(&freq);
-#  elif ON_APPLE
-  mach_timebase_info_data_t info = {0, 0};
-  mach_timebase_info(&info);
-  long long start, stop;
-#  else
-  timespec time_funct_start, time_funct_end;
-#  endif
-
-  // input data
-  unsigned char pixelHi = (unsigned char)255;
-  int thresholds[4] = {pixelHi, pixelHi, pixelHi, pixelHi};
-
-  // Pix* pix = pixCreate(width, height, 1);
-  int top = 0;
-  int left = 0;
-  int bytes_per_line = input.width * input.numChannels;
-
-  // function call
-  if (type == DS_DEVICE_OPENCL_DEVICE) {
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_start);
-#  elif ON_APPLE
-    start = mach_absolute_time();
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);
-#  endif
-
-    OpenclDevice::gpuEnv = *env;
-    int hi_values[4];
-    int retVal = OpenclDevice::ThresholdRectToPixOCL(
-        input.imageData, input.numChannels, bytes_per_line, thresholds, hi_values, &input.pix,
-        input.height, input.width, top, left);
-
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_end);
-    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);
-#  elif ON_APPLE
-    stop = mach_absolute_time();
-    if (retVal == 0) {
-      time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;
-    } else {
-      time = FLT_MAX;
-    }
-
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);
-    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +
-           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;
-#  endif
-  } else {
-    tesseract::ImageThresholder thresholder;
-    thresholder.SetImage(input.pix);
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_start);
-#  elif ON_APPLE
-    start = mach_absolute_time();
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);
-#  endif
-    int hi_values[4] = {};
-    ThresholdRectToPix_Native(input.imageData, input.numChannels, bytes_per_line, thresholds,
-                              hi_values, &input.pix);
-
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_end);
-    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);
-#  elif ON_APPLE
-    stop = mach_absolute_time();
-    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);
-    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +
-           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;
-#  endif
-  }
-
-  return time;
-}
-
-static double getLineMasksMorphMicroBench(GPUEnv *env, TessScoreEvaluationInputData input,
-                                          ds_device_type type) {
-  double time = 0;
-#  if ON_WINDOWS
-  LARGE_INTEGER freq, time_funct_start, time_funct_end;
-  QueryPerformanceFrequency(&freq);
-#  elif ON_APPLE
-  mach_timebase_info_data_t info = {0, 0};
-  mach_timebase_info(&info);
-  long long start, stop;
-#  else
-  timespec time_funct_start, time_funct_end;
-#  endif
-
-  // input data
-  int resolution = 300;
-  int wpl = pixGetWpl(input.pix);
-  int kThinLineFraction = 20;     // tess constant
-  int kMinLineLengthFraction = 4; // tess constant
-  int max_line_width = resolution / kThinLineFraction;
-  int min_line_length = resolution / kMinLineLengthFraction;
-  int closing_brick = max_line_width / 3;
-
-  // function call
-  if (type == DS_DEVICE_OPENCL_DEVICE) {
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_start);
-#  elif ON_APPLE
-    start = mach_absolute_time();
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);
-#  endif
-    OpenclDevice::gpuEnv = *env;
-    OpenclDevice::initMorphCLAllocations(wpl, input.height, input.pix);
-    Image pix_vline = nullptr, pix_hline = nullptr, pix_closed = nullptr;
-    OpenclDevice::pixGetLinesCL(nullptr, input.pix, &pix_vline, &pix_hline, &pix_closed, true,
-                                closing_brick, closing_brick, max_line_width, max_line_width,
-                                min_line_length, min_line_length);
-
-    OpenclDevice::releaseMorphCLBuffers();
-
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_end);
-    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);
-#  elif ON_APPLE
-    stop = mach_absolute_time();
-    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);
-    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +
-           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;
-#  endif
-  } else {
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_start);
-#  elif ON_APPLE
-    start = mach_absolute_time();
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);
-#  endif
-
-    // native serial code
-    Image src_pix = input.pix;
-    Image pix_closed = pixCloseBrick(nullptr, src_pix, closing_brick, closing_brick);
-    Image pix_solid = pixOpenBrick(nullptr, pix_closed, max_line_width, max_line_width);
-    Image pix_hollow = pixSubtract(nullptr, pix_closed, pix_solid);
-    pix_solid.destroy();
-    Image pix_vline = pixOpenBrick(nullptr, pix_hollow, 1, min_line_length);
-    Image pix_hline = pixOpenBrick(nullptr, pix_hollow, min_line_length, 1);
-    pix_hline.destroy();
-    pix_vline.destroy();
-    pix_hollow.destroy();
-
-#  if ON_WINDOWS
-    QueryPerformanceCounter(&time_funct_end);
-    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);
-#  elif ON_APPLE
-    stop = mach_absolute_time();
-    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;
-#  else
-    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);
-    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +
-           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;
-#  endif
-  }
-
-  return time;
-}
-
-/******************************************************************************
- * Device Selection
- *****************************************************************************/
-
-// encode score object as byte string
-static ds_status serializeScore(ds_device *device, uint8_t **serializedScore,
-                                unsigned int *serializedScoreSize) {
-  *serializedScoreSize = sizeof(TessDeviceScore);
-  *serializedScore = new uint8_t[*serializedScoreSize];
-  memcpy(*serializedScore, device->score, *serializedScoreSize);
-  return DS_SUCCESS;
-}
-
-// parses byte string and stores in score object
-static ds_status deserializeScore(ds_device *device, const uint8_t *serializedScore,
-                                  unsigned int serializedScoreSize) {
-  // check that serializedScoreSize == sizeof(TessDeviceScore);
-  device->score = new TessDeviceScore;
-  memcpy(device->score, serializedScore, serializedScoreSize);
-  return DS_SUCCESS;
-}
-
-static ds_status releaseScore(TessDeviceScore *score) {
-  delete score;
-  return DS_SUCCESS;
-}
-
-// evaluate devices
-static ds_status evaluateScoreForDevice(ds_device *device, void *inputData) {
-  // overwrite statuc gpuEnv w/ current device
-  // so native opencl calls can be used; they use static gpuEnv
-  tprintf(""\n[DS] Device: \""%s\"" (%s) evaluation...\n"", device->oclDeviceName,
-          device->type == DS_DEVICE_OPENCL_DEVICE ? ""OpenCL"" : ""Native"");
-  GPUEnv *env = nullptr;
-  if (device->type == DS_DEVICE_OPENCL_DEVICE) {
-    env = &OpenclDevice::gpuEnv;
-    memset(env, 0, sizeof(*env));
-    // tprintf(""[DS] populating tmp GPUEnv from device\n"");
-    populateGPUEnvFromDevice(env, device->oclDeviceID);
-    env->mnFileCount = 0; // argc;
-    env->mnKernelCount = 0UL;
-    // tprintf(""[DS] compiling kernels for tmp GPUEnv\n"");
-    OpenclDevice::CompileKernelFile(env, """");
-  }
-
-  TessScoreEvaluationInputData *input = static_cast<TessScoreEvaluationInputData *>(inputData);
-
-  // pixReadTiff
-  double composeRGBPixelTime = composeRGBPixelMicroBench(env, *input, device->type);
-
-  // HistogramRect
-  double histogramRectTime = histogramRectMicroBench(env, *input, device->type);
-
-  // ThresholdRectToPix
-  double thresholdRectToPixTime = thresholdRectToPixMicroBench(env, *input, device->type);
-
-  // getLineMasks
-  double getLineMasksMorphTime = getLineMasksMorphMicroBench(env, *input, device->type);
-
-  // weigh times (% of cpu time)
-  // these weights should be the % execution time that the native cpu code took
-  float composeRGBPixelWeight = 1.2f;
-  float histogramRectWeight = 2.4f;
-  float thresholdRectToPixWeight = 4.5f;
-  float getLineMasksMorphWeight = 5.0f;
-
-  float weightedTime = composeRGBPixelWeight * composeRGBPixelTime +
-                       histogramRectWeight * histogramRectTime +
-                       thresholdRectToPixWeight * thresholdRectToPixTime +
-                       getLineMasksMorphWeight * getLineMasksMorphTime;
-  device->score = new TessDeviceScore;
-  device->score->time = weightedTime;
-
-  tprintf(""[DS] Device: \""%s\"" (%s) evaluated\n"", device->oclDeviceName,
-          device->type == DS_DEVICE_OPENCL_DEVICE ? ""OpenCL"" : ""Native"");
-  tprintf(""[DS]%25s: %f (w=%.1f)\n"", ""composeRGBPixel"", composeRGBPixelTime, composeRGBPixelWeight);
-  tprintf(""[DS]%25s: %f (w=%.1f)\n"", ""HistogramRect"", histogramRectTime, histogramRectWeight);
-  tprintf(""[DS]%25s: %f (w=%.1f)\n"", ""ThresholdRectToPix"", thresholdRectToPixTime,
-          thresholdRectToPixWeight);
-  tprintf(""[DS]%25s: %f (w=%.1f)\n"", ""getLineMasksMorph"", getLineMasksMorphTime,
-          getLineMasksMorphWeight);
-  tprintf(""[DS]%25s: %f\n"", ""Score"", device->score->time);
-  return DS_SUCCESS;
-}
-
-// initial call to select device
-ds_device OpenclDevice::getDeviceSelection() {
-  if (!deviceIsSelected) {
-    // check if opencl is available at runtime
-    if (1 == LoadOpencl()) {
-      // opencl is available
-      // setup devices
-      ds_status status;
-      ds_profile *profile;
-      status = initDSProfile(&profile, ""v0.1"");
-      // try reading scores from file
-      const char *fileName = ""tesseract_opencl_profile_devices.dat"";
-      status = readProfileFromFile(profile, deserializeScore, fileName);
-      if (status != DS_SUCCESS) {
-        // need to run evaluation
-        tprintf(""[DS] Profile file not available (%s); performing profiling.\n"", fileName);
-
-        // create input data
-        TessScoreEvaluationInputData input;
-        populateTessScoreEvaluationInputData(&input);
-        // perform evaluations
-        unsigned int numUpdates;
-        status =
-            profileDevices(profile, DS_EVALUATE_ALL, evaluateScoreForDevice, &input, &numUpdates);
-        // write scores to file
-        if (status == DS_SUCCESS) {
-          status = writeProfileToFile(profile, serializeScore, fileName);
-          if (status == DS_SUCCESS) {
-            tprintf(""[DS] Scores written to file (%s).\n"", fileName);
-          } else {
-            tprintf(
-                ""[DS] Error saving scores to file (%s); scores not written to ""
-                ""file.\n"",
-                fileName);
-          }
-        } else {
-          tprintf(
-              ""[DS] Unable to evaluate performance; scores not written to ""
-              ""file.\n"");
-        }
-      } else {
-        tprintf(""[DS] Profile read from file (%s).\n"", fileName);
-      }
-
-      // we now have device scores either from file or evaluation
-      // select fastest using custom Tesseract selection algorithm
-      float bestTime = FLT_MAX; // begin search with worst possible time
-      int bestDeviceIdx = -1;
-      for (unsigned d = 0; d < profile->numDevices; d++) {
-        ds_device device = profile->devices[d];
-        if (device.score == nullptr)
-          continue;
-        TessDeviceScore score = *device.score;
-
-        float time = score.time;
-        tprintf(""[DS] Device[%u] %i:%s score is %f\n"", d + 1, device.type, device.oclDeviceName,
-                time);
-        if (time < bestTime) {
-          bestTime = time;
-          bestDeviceIdx = d;
-        }
-      }
-      if (bestDeviceIdx >= 0) {
-        tprintf(
-            ""[DS] Selected Device[%i]: \""%s\"" (%s)\n"", bestDeviceIdx + 1,
-            profile->devices[bestDeviceIdx].oclDeviceName,
-            profile->devices[bestDeviceIdx].type == DS_DEVICE_OPENCL_DEVICE ? ""OpenCL"" : ""Native"");
-      }
-      // cleanup
-      // TODO: call destructor for profile object?
-
-      bool overridden = false;
-      char *overrideDeviceStr = getenv(""TESSERACT_OPENCL_DEVICE"");
-      if (overrideDeviceStr != nullptr) {
-        int overrideDeviceIdx = atoi(overrideDeviceStr);
-        if (overrideDeviceIdx > 0 && overrideDeviceIdx <= profile->numDevices) {
-          tprintf(
-              ""[DS] Overriding Device Selection (TESSERACT_OPENCL_DEVICE=%s, ""
-              ""%i)\n"",
-              overrideDeviceStr, overrideDeviceIdx);
-          bestDeviceIdx = overrideDeviceIdx - 1;
-          overridden = true;
-        } else {
-          tprintf(
-              ""[DS] Ignoring invalid TESSERACT_OPENCL_DEVICE=%s ([1,%i] are ""
-              ""valid devices).\n"",
-              overrideDeviceStr, profile->numDevices);
-        }
-      }
-
-      if (overridden) {
-        tprintf(
-            ""[DS] Overridden Device[%i]: \""%s\"" (%s)\n"", bestDeviceIdx + 1,
-            profile->devices[bestDeviceIdx].oclDeviceName,
-            profile->devices[bestDeviceIdx].type == DS_DEVICE_OPENCL_DEVICE ? ""OpenCL"" : ""Native"");
-      }
-      selectedDevice = profile->devices[bestDeviceIdx];
-      // cleanup
-      releaseDSProfile(profile, releaseScore);
-    } else {
-      // opencl isn't available at runtime, select native cpu device
-      tprintf(""[DS] OpenCL runtime not available.\n"");
-      selectedDevice.type = DS_DEVICE_NATIVE_CPU;
-      selectedDevice.oclDeviceName = ""(null)"";
-      selectedDevice.score = nullptr;
-      selectedDevice.oclDeviceID = nullptr;
-      selectedDevice.oclDriverVersion = nullptr;
-    }
-    deviceIsSelected = true;
-  }
-  return selectedDevice;
-}
-
-bool OpenclDevice::selectedDeviceIsOpenCL() {
-  ds_device device = getDeviceSelection();
-  return (device.type == DS_DEVICE_OPENCL_DEVICE);
-}
-
-} // namespace
-
-#endif
","{'added': [], 'deleted': [(1, '// Licensed under the Apache License, Version 2.0 (the ""License"");'), (2, '// you may not use this file except in compliance with the License.'), (3, '// You may obtain a copy of the License at'), (4, '// http://www.apache.org/licenses/LICENSE-2.0'), (5, '// Unless required by applicable law or agreed to in writing, software'), (6, '// distributed under the License is distributed on an ""AS IS"" BASIS,'), (7, '// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (8, '// See the License for the specific language governing permissions and'), (9, '// limitations under the License.'), (10, ''), (11, '// Include automatically generated configuration file'), (12, '#ifdef HAVE_CONFIG_H'), (13, '#  include ""config_auto.h""'), (14, '#endif'), (15, ''), (16, '#ifdef USE_OPENCL'), (17, ''), (18, '#  ifdef _WIN32'), (19, '#    include <io.h>'), (20, '#    include <windows.h>'), (21, '#  else'), (22, '#    include <sys/types.h>'), (23, '#    include <unistd.h>'), (24, '#  endif'), (25, '#  include <cfloat>'), (26, '#  include <ctime> // for clock_gettime'), (27, ''), (28, '#  include ""oclkernels.h""'), (29, '#  include ""openclwrapper.h""'), (30, ''), (31, '// for micro-benchmark'), (32, '#  include ""otsuthr.h""'), (33, '#  include ""thresholder.h""'), (34, ''), (35, '// platform preprocessor commands'), (36, '#  if defined(WIN32) || defined(__WIN32__) || defined(_WIN32) || defined(__CYGWIN__) || \\'), (37, '      defined(__MINGW32__)'), (38, '#    define ON_WINDOWS 1'), (39, '#    define ON_APPLE 0'), (40, '#  elif defined(__linux__)'), (41, '#    define ON_WINDOWS 0'), (42, '#    define ON_APPLE 0'), (43, '#  elif defined(__APPLE__)'), (44, '#    define ON_WINDOWS 0'), (45, '#    define ON_APPLE 1'), (46, '#  else'), (47, '#    define ON_WINDOWS 0'), (48, '#    define ON_APPLE 0'), (49, '#  endif'), (50, ''), (51, '#  if ON_APPLE'), (52, '#    include <mach/mach_time.h>'), (53, '#  endif'), (54, ''), (55, '#  include <cstdio>'), (56, '#  include <cstdlib>'), (57, '#  include <cstring> // for memset, strcpy, ...'), (58, '#  include <vector>'), (59, ''), (60, '#  include ""errcode.h"" // for ASSERT_HOST'), (61, '#  include ""image.h""   // for Image'), (62, ''), (63, 'namespace tesseract {'), (64, ''), (65, 'GPUEnv OpenclDevice::gpuEnv;'), (66, ''), (67, 'bool OpenclDevice::deviceIsSelected = false;'), (68, 'ds_device OpenclDevice::selectedDevice;'), (69, ''), (70, 'int OpenclDevice::isInited = 0;'), (71, ''), (72, 'static l_int32 MORPH_BC = ASYMMETRIC_MORPH_BC;'), (73, ''), (74, 'static const l_uint32 lmask32[] = {'), (75, '    0x80000000, 0xc0000000, 0xe0000000, 0xf0000000, 0xf8000000, 0xfc000000, 0xfe000000, 0xff000000,'), (76, '    0xff800000, 0xffc00000, 0xffe00000, 0xfff00000, 0xfff80000, 0xfffc0000, 0xfffe0000, 0xffff0000,'), (77, '    0xffff8000, 0xffffc000, 0xffffe000, 0xfffff000, 0xfffff800, 0xfffffc00, 0xfffffe00, 0xffffff00,'), (78, '    0xffffff80, 0xffffffc0, 0xffffffe0, 0xfffffff0, 0xfffffff8, 0xfffffffc, 0xfffffffe, 0xffffffff};'), (79, ''), (80, 'static const l_uint32 rmask32[] = {'), (81, '    0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff,'), (82, '    0x000001ff, 0x000003ff, 0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff,'), (83, '    0x0001ffff, 0x0003ffff, 0x0007ffff, 0x000fffff, 0x001fffff, 0x003fffff, 0x007fffff, 0x00ffffff,'), (84, '    0x01ffffff, 0x03ffffff, 0x07ffffff, 0x0fffffff, 0x1fffffff, 0x3fffffff, 0x7fffffff, 0xffffffff};'), (85, ''), (86, 'static cl_mem pixsCLBuffer, pixdCLBuffer,'), (87, '    pixdCLIntermediate;    // Morph operations buffers'), (88, 'static cl_mem pixThBuffer; // output from thresholdtopix calculation'), (89, 'static cl_int clStatus;'), (90, 'static KernelEnv rEnv;'), (91, ''), (92, '#  define DS_TAG_VERSION ""<version>""'), (93, '#  define DS_TAG_VERSION_END ""</version>""'), (94, '#  define DS_TAG_DEVICE ""<device>""'), (95, '#  define DS_TAG_DEVICE_END ""</device>""'), (96, '#  define DS_TAG_SCORE ""<score>""'), (97, '#  define DS_TAG_SCORE_END ""</score>""'), (98, '#  define DS_TAG_DEVICE_TYPE ""<type>""'), (99, '#  define DS_TAG_DEVICE_TYPE_END ""</type>""'), (100, '#  define DS_TAG_DEVICE_NAME ""<name>""'), (101, '#  define DS_TAG_DEVICE_NAME_END ""</name>""'), (102, '#  define DS_TAG_DEVICE_DRIVER_VERSION ""<driver>""'), (103, '#  define DS_TAG_DEVICE_DRIVER_VERSION_END ""</driver>""'), (104, ''), (105, '#  define DS_DEVICE_NATIVE_CPU_STRING ""native_cpu""'), (106, ''), (107, '#  define DS_DEVICE_NAME_LENGTH 256'), (108, ''), (109, 'enum ds_evaluation_type { DS_EVALUATE_ALL, DS_EVALUATE_NEW_ONLY };'), (110, ''), (111, 'struct ds_profile {'), (112, '  std::vector<ds_device> devices;'), (113, '  unsigned int numDevices;'), (114, '  const char *version;'), (115, '};'), (116, ''), (117, 'enum ds_status {'), (118, '  DS_SUCCESS = 0,'), (119, '  DS_INVALID_PROFILE = 1000,'), (120, '  DS_MEMORY_ERROR,'), (121, '  DS_INVALID_PERF_EVALUATOR_TYPE,'), (122, '  DS_INVALID_PERF_EVALUATOR,'), (123, '  DS_PERF_EVALUATOR_ERROR,'), (124, '  DS_FILE_ERROR,'), (125, '  DS_UNKNOWN_DEVICE_TYPE,'), (126, '  DS_PROFILE_FILE_ERROR,'), (127, '  DS_SCORE_SERIALIZER_ERROR,'), (128, '  DS_SCORE_DESERIALIZER_ERROR'), (129, '};'), (130, ''), (131, '// Pointer to a function that calculates the score of a device (ex:'), (132, '// device->score) update the data size of score. The encoding and the format'), (133, '// of the score data is implementation defined. The function should return'), (134, ""// DS_SUCCESS if there's no error to be reported.""), (135, 'typedef ds_status (*ds_perf_evaluator)(ds_device *device, void *data);'), (136, ''), (137, '// deallocate memory used by score'), (138, 'typedef ds_status (*ds_score_release)(TessDeviceScore *score);'), (139, ''), (140, 'static ds_status releaseDSProfile(ds_profile *profile, ds_score_release sr) {'), (141, '  ds_status status = DS_SUCCESS;'), (142, '  if (profile != nullptr) {'), (143, '    if (sr != nullptr) {'), (144, '      unsigned int i;'), (145, '      for (i = 0; i < profile->numDevices; i++) {'), (146, '        free(profile->devices[i].oclDeviceName);'), (147, '        free(profile->devices[i].oclDriverVersion);'), (148, '        status = sr(profile->devices[i].score);'), (149, '        if (status != DS_SUCCESS)'), (150, '          break;'), (151, '      }'), (152, '    }'), (153, '    delete profile;'), (154, '  }'), (155, '  return status;'), (156, '}'), (157, ''), (158, 'static ds_status initDSProfile(ds_profile **p, const char *version) {'), (159, '  int numDevices;'), (160, '  cl_uint numPlatforms;'), (161, '  std::vector<cl_platform_id> platforms;'), (162, '  std::vector<cl_device_id> devices;'), (163, '  ds_status status = DS_SUCCESS;'), (164, '  unsigned int next;'), (165, '  unsigned int i;'), (166, ''), (167, '  if (p == nullptr)'), (168, '    return DS_INVALID_PROFILE;'), (169, ''), (170, '  ds_profile *profile = new ds_profile;'), (171, ''), (172, '  memset(profile, 0, sizeof(ds_profile));'), (173, ''), (174, '  clGetPlatformIDs(0, nullptr, &numPlatforms);'), (175, ''), (176, '  if (numPlatforms > 0) {'), (177, '    platforms.resize(numPlatforms);'), (178, '    clGetPlatformIDs(numPlatforms, platforms.data(), nullptr);'), (179, '  }'), (180, ''), (181, '  numDevices = 0;'), (182, '  for (i = 0; i < numPlatforms; i++) {'), (183, '    cl_uint num;'), (184, '    clGetDeviceIDs(platforms[i], CL_DEVICE_TYPE_ALL, 0, nullptr, &num);'), (185, '    numDevices += num;'), (186, '  }'), (187, ''), (188, '  if (numDevices > 0) {'), (189, '    devices.resize(numDevices);'), (190, '  }'), (191, ''), (192, '  profile->numDevices = numDevices + 1; // +1 to numDevices to include the native CPU'), (193, '  profile->devices.resize(profile->numDevices);'), (194, ''), (195, '  next = 0;'), (196, '  for (i = 0; i < numPlatforms; i++) {'), (197, '    cl_uint num;'), (198, '    unsigned j;'), (199, '    clGetDeviceIDs(platforms[i], CL_DEVICE_TYPE_ALL, numDevices, &devices[0], &num);'), (200, '    for (j = 0; j < num; j++, next++) {'), (201, '      char buffer[DS_DEVICE_NAME_LENGTH];'), (202, '      size_t length;'), (203, ''), (204, '      profile->devices[next].type = DS_DEVICE_OPENCL_DEVICE;'), (205, '      profile->devices[next].oclDeviceID = devices[j];'), (206, ''), (207, '      clGetDeviceInfo(profile->devices[next].oclDeviceID, CL_DEVICE_NAME, DS_DEVICE_NAME_LENGTH,'), (208, '                      &buffer, nullptr);'), (209, '      length = strlen(buffer);'), (210, '      profile->devices[next].oclDeviceName = (char *)malloc(length + 1);'), (211, '      memcpy(profile->devices[next].oclDeviceName, buffer, length + 1);'), (212, ''), (213, '      clGetDeviceInfo(profile->devices[next].oclDeviceID, CL_DRIVER_VERSION, DS_DEVICE_NAME_LENGTH,'), (214, '                      &buffer, nullptr);'), (215, '      length = strlen(buffer);'), (216, '      profile->devices[next].oclDriverVersion = (char *)malloc(length + 1);'), (217, '      memcpy(profile->devices[next].oclDriverVersion, buffer, length + 1);'), (218, '    }'), (219, '  }'), (220, '  profile->devices[next].type = DS_DEVICE_NATIVE_CPU;'), (221, '  profile->version = version;'), (222, ''), (223, '  *p = profile;'), (224, '  return status;'), (225, '}'), (226, ''), (227, 'static ds_status profileDevices(ds_profile *profile, const ds_evaluation_type type,'), (228, '                                ds_perf_evaluator evaluator, void *evaluatorData,'), (229, '                                unsigned int *numUpdates) {'), (230, '  ds_status status = DS_SUCCESS;'), (231, '  unsigned int i;'), (232, '  unsigned int updates = 0;'), (233, ''), (234, '  if (profile == nullptr) {'), (235, '    return DS_INVALID_PROFILE;'), (236, '  }'), (237, '  if (evaluator == nullptr) {'), (238, '    return DS_INVALID_PERF_EVALUATOR;'), (239, '  }'), (240, ''), (241, '  for (i = 0; i < profile->numDevices; i++) {'), (242, '    ds_status evaluatorStatus;'), (243, ''), (244, '    switch (type) {'), (245, '      case DS_EVALUATE_NEW_ONLY:'), (246, '        if (profile->devices[i].score != nullptr)'), (247, '          break;'), (248, '      //  else fall through'), (249, '      case DS_EVALUATE_ALL:'), (250, '        evaluatorStatus = evaluator(&profile->devices[i], evaluatorData);'), (251, '        if (evaluatorStatus != DS_SUCCESS) {'), (252, '          status = evaluatorStatus;'), (253, '          return status;'), (254, '        }'), (255, '        updates++;'), (256, '        break;'), (257, '      default:'), (258, '        return DS_INVALID_PERF_EVALUATOR_TYPE;'), (259, '        break;'), (260, '    };'), (261, '  }'), (262, '  if (numUpdates)'), (263, '    *numUpdates = updates;'), (264, '  return status;'), (265, '}'), (266, ''), (267, 'static const char *findString(const char *contentStart, const char *contentEnd,'), (268, '                              const char *string) {'), (269, '  size_t stringLength;'), (270, '  const char *currentPosition;'), (271, '  const char *found = nullptr;'), (272, '  stringLength = strlen(string);'), (273, '  currentPosition = contentStart;'), (274, '  for (currentPosition = contentStart; currentPosition < contentEnd; currentPosition++) {'), (275, '    if (*currentPosition == string[0]) {'), (276, '      if (currentPosition + stringLength < contentEnd) {'), (277, '        if (strncmp(currentPosition, string, stringLength) == 0) {'), (278, '          found = currentPosition;'), (279, '          break;'), (280, '        }'), (281, '      }'), (282, '    }'), (283, '  }'), (284, '  return found;'), (285, '}'), (286, ''), (287, 'static ds_status readProFile(const char *fileName, char **content, size_t *contentSize) {'), (288, '  *contentSize = 0;'), (289, '  *content = nullptr;'), (290, '  ds_status status = DS_SUCCESS;'), (291, '  FILE *input = fopen(fileName, ""rb"");'), (292, '  if (input == nullptr) {'), (293, '    status = DS_FILE_ERROR;'), (294, '  } else {'), (295, '    fseek(input, 0L, SEEK_END);'), (296, '    auto pos = std::ftell(input);'), (297, '    rewind(input);'), (298, '    if (pos > 0) {'), (299, '      size_t size = pos;'), (300, '      char *binary = new char[size];'), (301, '      if (fread(binary, sizeof(char), size, input) != size) {'), (302, '        status = DS_FILE_ERROR;'), (303, '        delete[] binary;'), (304, '      } else {'), (305, '        *contentSize = size;'), (306, '        *content = binary;'), (307, '      }'), (308, '    }'), (309, '    fclose(input);'), (310, '  }'), (311, '  return status;'), (312, '}'), (313, ''), (314, 'typedef ds_status (*ds_score_deserializer)(ds_device *device, const uint8_t *serializedScore,'), (315, '                                           unsigned int serializedScoreSize);'), (316, ''), (317, 'static ds_status readProfileFromFile(ds_profile *profile, ds_score_deserializer deserializer,'), (318, '                                     const char *file) {'), (319, '  ds_status status = DS_SUCCESS;'), (320, '  char *contentStart;'), (321, '  size_t contentSize;'), (322, ''), (323, '  if (profile == nullptr)'), (324, '    return DS_INVALID_PROFILE;'), (325, ''), (326, '  status = readProFile(file, &contentStart, &contentSize);'), (327, '  if (status == DS_SUCCESS) {'), (328, '    const char *currentPosition;'), (329, '    const char *dataStart;'), (330, '    const char *dataEnd;'), (331, ''), (332, '    const char *contentEnd = contentStart + contentSize;'), (333, '    currentPosition = contentStart;'), (334, ''), (335, '    // parse the version string'), (336, '    dataStart = findString(currentPosition, contentEnd, DS_TAG_VERSION);'), (337, '    if (dataStart == nullptr) {'), (338, '      status = DS_PROFILE_FILE_ERROR;'), (339, '      goto cleanup;'), (340, '    }'), (341, '    dataStart += strlen(DS_TAG_VERSION);'), (342, ''), (343, '    dataEnd = findString(dataStart, contentEnd, DS_TAG_VERSION_END);'), (344, '    if (dataEnd == nullptr) {'), (345, '      status = DS_PROFILE_FILE_ERROR;'), (346, '      goto cleanup;'), (347, '    }'), (348, ''), (349, '    size_t versionStringLength = strlen(profile->version);'), (350, '    if (versionStringLength + dataStart != dataEnd ||'), (351, '        strncmp(profile->version, dataStart, versionStringLength) != 0) {'), (352, '      // version mismatch'), (353, '      status = DS_PROFILE_FILE_ERROR;'), (354, '      goto cleanup;'), (355, '    }'), (356, '    currentPosition = dataEnd + strlen(DS_TAG_VERSION_END);'), (357, ''), (358, '    // parse the device information'), (359, '    while (1) {'), (360, '      unsigned int i;'), (361, ''), (362, '      const char *deviceTypeStart;'), (363, '      const char *deviceTypeEnd;'), (364, '      ds_device_type deviceType;'), (365, ''), (366, '      const char *deviceNameStart;'), (367, '      const char *deviceNameEnd;'), (368, ''), (369, '      const char *deviceScoreStart;'), (370, '      const char *deviceScoreEnd;'), (371, ''), (372, '      const char *deviceDriverStart;'), (373, '      const char *deviceDriverEnd;'), (374, ''), (375, '      dataStart = findString(currentPosition, contentEnd, DS_TAG_DEVICE);'), (376, '      if (dataStart == nullptr) {'), (377, '        // nothing useful remain, quit...'), (378, '        break;'), (379, '      }'), (380, '      dataStart += strlen(DS_TAG_DEVICE);'), (381, '      dataEnd = findString(dataStart, contentEnd, DS_TAG_DEVICE_END);'), (382, '      if (dataEnd == nullptr) {'), (383, '        status = DS_PROFILE_FILE_ERROR;'), (384, '        goto cleanup;'), (385, '      }'), (386, ''), (387, '      // parse the device type'), (388, '      deviceTypeStart = findString(dataStart, contentEnd, DS_TAG_DEVICE_TYPE);'), (389, '      if (deviceTypeStart == nullptr) {'), (390, '        status = DS_PROFILE_FILE_ERROR;'), (391, '        goto cleanup;'), (392, '      }'), (393, '      deviceTypeStart += strlen(DS_TAG_DEVICE_TYPE);'), (394, '      deviceTypeEnd = findString(deviceTypeStart, contentEnd, DS_TAG_DEVICE_TYPE_END);'), (395, '      if (deviceTypeEnd == nullptr) {'), (396, '        status = DS_PROFILE_FILE_ERROR;'), (397, '        goto cleanup;'), (398, '      }'), (399, '      memcpy(&deviceType, deviceTypeStart, sizeof(ds_device_type));'), (400, ''), (401, '      // parse the device name'), (402, '      if (deviceType == DS_DEVICE_OPENCL_DEVICE) {'), (403, '        deviceNameStart = findString(dataStart, contentEnd, DS_TAG_DEVICE_NAME);'), (404, '        if (deviceNameStart == nullptr) {'), (405, '          status = DS_PROFILE_FILE_ERROR;'), (406, '          goto cleanup;'), (407, '        }'), (408, '        deviceNameStart += strlen(DS_TAG_DEVICE_NAME);'), (409, '        deviceNameEnd = findString(deviceNameStart, contentEnd, DS_TAG_DEVICE_NAME_END);'), (410, '        if (deviceNameEnd == nullptr) {'), (411, '          status = DS_PROFILE_FILE_ERROR;'), (412, '          goto cleanup;'), (413, '        }'), (414, ''), (415, '        deviceDriverStart = findString(dataStart, contentEnd, DS_TAG_DEVICE_DRIVER_VERSION);'), (416, '        if (deviceDriverStart == nullptr) {'), (417, '          status = DS_PROFILE_FILE_ERROR;'), (418, '          goto cleanup;'), (419, '        }'), (420, '        deviceDriverStart += strlen(DS_TAG_DEVICE_DRIVER_VERSION);'), (421, '        deviceDriverEnd ='), (422, '            findString(deviceDriverStart, contentEnd, DS_TAG_DEVICE_DRIVER_VERSION_END);'), (423, '        if (deviceDriverEnd == nullptr) {'), (424, '          status = DS_PROFILE_FILE_ERROR;'), (425, '          goto cleanup;'), (426, '        }'), (427, ''), (428, '        // check if this device is on the system'), (429, '        for (i = 0; i < profile->numDevices; i++) {'), (430, '          if (profile->devices[i].type == DS_DEVICE_OPENCL_DEVICE) {'), (431, '            size_t actualDeviceNameLength;'), (432, '            size_t driverVersionLength;'), (433, ''), (434, '            actualDeviceNameLength = strlen(profile->devices[i].oclDeviceName);'), (435, '            driverVersionLength = strlen(profile->devices[i].oclDriverVersion);'), (436, '            if (deviceNameStart + actualDeviceNameLength == deviceNameEnd &&'), (437, '                deviceDriverStart + driverVersionLength == deviceDriverEnd &&'), (438, '                strncmp(profile->devices[i].oclDeviceName, deviceNameStart,'), (439, '                        actualDeviceNameLength) == 0 &&'), (440, '                strncmp(profile->devices[i].oclDriverVersion, deviceDriverStart,'), (441, '                        driverVersionLength) == 0) {'), (442, '              deviceScoreStart = findString(dataStart, contentEnd, DS_TAG_SCORE);'), (443, '              deviceScoreStart += strlen(DS_TAG_SCORE);'), (444, '              deviceScoreEnd = findString(deviceScoreStart, contentEnd, DS_TAG_SCORE_END);'), (445, '              status = deserializer(&profile->devices[i], (const unsigned char *)deviceScoreStart,'), (446, '                                    deviceScoreEnd - deviceScoreStart);'), (447, '              if (status != DS_SUCCESS) {'), (448, '                goto cleanup;'), (449, '              }'), (450, '            }'), (451, '          }'), (452, '        }'), (453, '      } else if (deviceType == DS_DEVICE_NATIVE_CPU) {'), (454, '        for (i = 0; i < profile->numDevices; i++) {'), (455, '          if (profile->devices[i].type == DS_DEVICE_NATIVE_CPU) {'), (456, '            deviceScoreStart = findString(dataStart, contentEnd, DS_TAG_SCORE);'), (457, '            if (deviceScoreStart == nullptr) {'), (458, '              status = DS_PROFILE_FILE_ERROR;'), (459, '              goto cleanup;'), (460, '            }'), (461, '            deviceScoreStart += strlen(DS_TAG_SCORE);'), (462, '            deviceScoreEnd = findString(deviceScoreStart, contentEnd, DS_TAG_SCORE_END);'), (463, '            status = deserializer(&profile->devices[i], (const unsigned char *)deviceScoreStart,'), (464, '                                  deviceScoreEnd - deviceScoreStart);'), (465, '            if (status != DS_SUCCESS) {'), (466, '              goto cleanup;'), (467, '            }'), (468, '          }'), (469, '        }'), (470, '      }'), (471, ''), (472, '      // skip over the current one to find the next device'), (473, '      currentPosition = dataEnd + strlen(DS_TAG_DEVICE_END);'), (474, '    }'), (475, '  }'), (476, 'cleanup:'), (477, '  delete[] contentStart;'), (478, '  return status;'), (479, '}'), (480, ''), (481, 'typedef ds_status (*ds_score_serializer)(ds_device *device, uint8_t **serializedScore,'), (482, '                                         unsigned int *serializedScoreSize);'), (483, 'static ds_status writeProfileToFile(ds_profile *profile, ds_score_serializer serializer,'), (484, '                                    const char *file) {'), (485, '  ds_status status = DS_SUCCESS;'), (486, ''), (487, '  if (profile == nullptr)'), (488, '    return DS_INVALID_PROFILE;'), (489, ''), (490, '  FILE *profileFile = fopen(file, ""wb"");'), (491, '  if (profileFile == nullptr) {'), (492, '    status = DS_FILE_ERROR;'), (493, '  } else {'), (494, '    unsigned int i;'), (495, ''), (496, '    // write version string'), (497, '    fwrite(DS_TAG_VERSION, sizeof(char), strlen(DS_TAG_VERSION), profileFile);'), (498, '    fwrite(profile->version, sizeof(char), strlen(profile->version), profileFile);'), (499, '    fwrite(DS_TAG_VERSION_END, sizeof(char), strlen(DS_TAG_VERSION_END), profileFile);'), (500, '    fwrite(""\\n"", sizeof(char), 1, profileFile);'), (501, ''), (502, '    for (i = 0; i < profile->numDevices && status == DS_SUCCESS; i++) {'), (503, '      uint8_t *serializedScore;'), (504, '      unsigned int serializedScoreSize;'), (505, ''), (506, '      fwrite(DS_TAG_DEVICE, sizeof(char), strlen(DS_TAG_DEVICE), profileFile);'), (507, ''), (508, '      fwrite(DS_TAG_DEVICE_TYPE, sizeof(char), strlen(DS_TAG_DEVICE_TYPE), profileFile);'), (509, '      fwrite(&profile->devices[i].type, sizeof(ds_device_type), 1, profileFile);'), (510, '      fwrite(DS_TAG_DEVICE_TYPE_END, sizeof(char), strlen(DS_TAG_DEVICE_TYPE_END), profileFile);'), (511, ''), (512, '      switch (profile->devices[i].type) {'), (513, '        case DS_DEVICE_NATIVE_CPU: {'), (514, ""          // There's no need to emit a device name for the native CPU device.""), (515, '          /*'), (516, 'fwrite(DS_TAG_DEVICE_NAME, sizeof(char), strlen(DS_TAG_DEVICE_NAME),'), (517, '       profileFile);'), (518, 'fwrite(DS_DEVICE_NATIVE_CPU_STRING,sizeof(char),'), (519, '       strlen(DS_DEVICE_NATIVE_CPU_STRING), profileFile);'), (520, 'fwrite(DS_TAG_DEVICE_NAME_END, sizeof(char),'), (521, '       strlen(DS_TAG_DEVICE_NAME_END), profileFile);'), (522, '*/'), (523, '        } break;'), (524, '        case DS_DEVICE_OPENCL_DEVICE: {'), (525, '          fwrite(DS_TAG_DEVICE_NAME, sizeof(char), strlen(DS_TAG_DEVICE_NAME), profileFile);'), (526, '          fwrite(profile->devices[i].oclDeviceName, sizeof(char),'), (527, '                 strlen(profile->devices[i].oclDeviceName), profileFile);'), (528, '          fwrite(DS_TAG_DEVICE_NAME_END, sizeof(char), strlen(DS_TAG_DEVICE_NAME_END), profileFile);'), (529, ''), (530, '          fwrite(DS_TAG_DEVICE_DRIVER_VERSION, sizeof(char), strlen(DS_TAG_DEVICE_DRIVER_VERSION),'), (531, '                 profileFile);'), (532, '          fwrite(profile->devices[i].oclDriverVersion, sizeof(char),'), (533, '                 strlen(profile->devices[i].oclDriverVersion), profileFile);'), (534, '          fwrite(DS_TAG_DEVICE_DRIVER_VERSION_END, sizeof(char),'), (535, '                 strlen(DS_TAG_DEVICE_DRIVER_VERSION_END), profileFile);'), (536, '        } break;'), (537, '        default:'), (538, '          status = DS_UNKNOWN_DEVICE_TYPE;'), (539, '          continue;'), (540, '      };'), (541, ''), (542, '      fwrite(DS_TAG_SCORE, sizeof(char), strlen(DS_TAG_SCORE), profileFile);'), (543, '      status = serializer(&profile->devices[i], &serializedScore, &serializedScoreSize);'), (544, '      if (status == DS_SUCCESS && serializedScore != nullptr && serializedScoreSize > 0) {'), (545, '        fwrite(serializedScore, sizeof(char), serializedScoreSize, profileFile);'), (546, '        delete[] serializedScore;'), (547, '      }'), (548, '      fwrite(DS_TAG_SCORE_END, sizeof(char), strlen(DS_TAG_SCORE_END), profileFile);'), (549, '      fwrite(DS_TAG_DEVICE_END, sizeof(char), strlen(DS_TAG_DEVICE_END), profileFile);'), (550, '      fwrite(""\\n"", sizeof(char), 1, profileFile);'), (551, '    }'), (552, '    fclose(profileFile);'), (553, '  }'), (554, '  return status;'), (555, '}'), (556, ''), (557, '// substitute invalid characters in device name with _'), (558, 'static void legalizeFileName(char *fileName) {'), (559, '  // tprintf(""fileName: %s\\n"", fileName);'), (560, '  const char *invalidChars = ""/\\?:*\\""><| ""; // space is valid but can cause headaches'), (561, '  // for each invalid char'), (562, '  for (unsigned i = 0; i < strlen(invalidChars); i++) {'), (563, '    char invalidStr[4];'), (564, '    invalidStr[0] = invalidChars[i];'), (565, ""    invalidStr[1] = '\\0';""), (566, '    // tprintf(""eliminating %s\\n"", invalidStr);'), (567, '    // char *pos = strstr(fileName, invalidStr);'), (568, '    // initial ./ is valid for present directory'), (569, ""    // if (*pos == '.') pos++;""), (570, ""    // if (*pos == '/') pos++;""), (571, '    for (char *pos = strstr(fileName, invalidStr); pos != nullptr;'), (572, '         pos = strstr(pos + 1, invalidStr)) {'), (573, '      // tprintf(""\\tfound: %s, "", pos);'), (574, ""      pos[0] = '_';""), (575, '      // tprintf(""fileName: %s\\n"", fileName);'), (576, '    }'), (577, '  }'), (578, '}'), (579, ''), (580, 'static void populateGPUEnvFromDevice(GPUEnv *gpuInfo, cl_device_id device) {'), (581, '  // tprintf(""[DS] populateGPUEnvFromDevice\\n"");'), (582, '  size_t size;'), (583, '  gpuInfo->mnIsUserCreated = 1;'), (584, '  // device'), (585, '  gpuInfo->mpDevID = device;'), (586, '  gpuInfo->mpArryDevsID = new cl_device_id[1];'), (587, '  gpuInfo->mpArryDevsID[0] = gpuInfo->mpDevID;'), (588, '  clStatus = clGetDeviceInfo(gpuInfo->mpDevID, CL_DEVICE_TYPE, sizeof(cl_device_type),'), (589, '                             &gpuInfo->mDevType, &size);'), (590, '  CHECK_OPENCL(clStatus, ""populateGPUEnv::getDeviceInfo(TYPE)"");'), (591, '  // platform'), (592, '  clStatus = clGetDeviceInfo(gpuInfo->mpDevID, CL_DEVICE_PLATFORM, sizeof(cl_platform_id),'), (593, '                             &gpuInfo->mpPlatformID, &size);'), (594, '  CHECK_OPENCL(clStatus, ""populateGPUEnv::getDeviceInfo(PLATFORM)"");'), (595, '  // context'), (596, '  cl_context_properties props[3];'), (597, '  props[0] = CL_CONTEXT_PLATFORM;'), (598, '  props[1] = (cl_context_properties)gpuInfo->mpPlatformID;'), (599, '  props[2] = 0;'), (600, '  gpuInfo->mpContext = clCreateContext(props, 1, &gpuInfo->mpDevID, nullptr, nullptr, &clStatus);'), (601, '  CHECK_OPENCL(clStatus, ""populateGPUEnv::createContext"");'), (602, '  // queue'), (603, '  cl_command_queue_properties queueProperties = 0;'), (604, '  gpuInfo->mpCmdQueue ='), (605, '      clCreateCommandQueue(gpuInfo->mpContext, gpuInfo->mpDevID, queueProperties, &clStatus);'), (606, '  CHECK_OPENCL(clStatus, ""populateGPUEnv::createCommandQueue"");'), (607, '}'), (608, ''), (609, 'int OpenclDevice::LoadOpencl() {'), (610, '#  ifdef WIN32'), (611, '  HINSTANCE HOpenclDll = nullptr;'), (612, '  void *OpenclDll = nullptr;'), (613, '  // fprintf(stderr, "" LoadOpenclDllxx... \\n"");'), (614, '  OpenclDll = static_cast<HINSTANCE>(HOpenclDll);'), (615, '  OpenclDll = LoadLibrary(""openCL.dll"");'), (616, '  if (!static_cast<HINSTANCE>(OpenclDll)) {'), (617, '    fprintf(stderr, ""[OD] Load opencl.dll failed!\\n"");'), (618, '    FreeLibrary(static_cast<HINSTANCE>(OpenclDll));'), (619, '    return 0;'), (620, '  }'), (621, '  fprintf(stderr, ""[OD] Load opencl.dll successful!\\n"");'), (622, '#  endif'), (623, '  return 1;'), (624, '}'), (625, 'int OpenclDevice::SetKernelEnv(KernelEnv *envInfo) {'), (626, '  envInfo->mpkContext = gpuEnv.mpContext;'), (627, '  envInfo->mpkCmdQueue = gpuEnv.mpCmdQueue;'), (628, '  envInfo->mpkProgram = gpuEnv.mpArryPrograms[0];'), (629, ''), (630, '  return 1;'), (631, '}'), (632, ''), (633, 'static cl_mem allocateZeroCopyBuffer(const KernelEnv &rEnv, l_uint32 *hostbuffer, size_t nElements,'), (634, '                                     cl_mem_flags flags, cl_int *pStatus) {'), (635, '  cl_mem membuffer = clCreateBuffer(rEnv.mpkContext, (cl_mem_flags)(flags),'), (636, '                                    nElements * sizeof(l_uint32), hostbuffer, pStatus);'), (637, ''), (638, '  return membuffer;'), (639, '}'), (640, ''), (641, 'static Image mapOutputCLBuffer(const KernelEnv &rEnv, cl_mem clbuffer, Image pixd, Image pixs,'), (642, '                              int elements, cl_mem_flags flags, bool memcopy = false,'), (643, '                              bool sync = true) {'), (644, '  if (!pixd) {'), (645, '    if (memcopy) {'), (646, '      if ((pixd = pixCreateTemplate(pixs)) == nullptr)'), (647, '        tprintf(""pixd not made\\n"");'), (648, '    } else {'), (649, '      if ((pixd = pixCreateHeader(pixGetWidth(pixs), pixGetHeight(pixs), pixGetDepth(pixs))) =='), (650, '          nullptr)'), (651, '        tprintf(""pixd not made\\n"");'), (652, '    }'), (653, '  }'), (654, '  l_uint32 *pValues ='), (655, '      (l_uint32 *)clEnqueueMapBuffer(rEnv.mpkCmdQueue, clbuffer, CL_TRUE, flags, 0,'), (656, '                                     elements * sizeof(l_uint32), 0, nullptr, nullptr, nullptr);'), (657, ''), (658, '  if (memcopy) {'), (659, '    memcpy(pixGetData(pixd), pValues, elements * sizeof(l_uint32));'), (660, '  } else {'), (661, '    pixSetData(pixd, pValues);'), (662, '  }'), (663, ''), (664, '  clEnqueueUnmapMemObject(rEnv.mpkCmdQueue, clbuffer, pValues, 0, nullptr, nullptr);'), (665, ''), (666, '  if (sync) {'), (667, '    clFinish(rEnv.mpkCmdQueue);'), (668, '  }'), (669, ''), (670, '  return pixd;'), (671, '}'), (672, ''), (673, 'void OpenclDevice::releaseMorphCLBuffers() {'), (674, '  if (pixdCLIntermediate != nullptr)'), (675, '    clReleaseMemObject(pixdCLIntermediate);'), (676, '  if (pixsCLBuffer != nullptr)'), (677, '    clReleaseMemObject(pixsCLBuffer);'), (678, '  if (pixdCLBuffer != nullptr)'), (679, '    clReleaseMemObject(pixdCLBuffer);'), (680, '  if (pixThBuffer != nullptr)'), (681, '    clReleaseMemObject(pixThBuffer);'), (682, '  pixdCLIntermediate = pixsCLBuffer = pixdCLBuffer = pixThBuffer = nullptr;'), (683, '}'), (684, ''), (685, 'int OpenclDevice::initMorphCLAllocations(l_int32 wpl, l_int32 h, Image pixs) {'), (686, '  SetKernelEnv(&rEnv);'), (687, ''), (688, '  if (pixThBuffer != nullptr) {'), (689, '    pixsCLBuffer = allocateZeroCopyBuffer(rEnv, nullptr, wpl * h, CL_MEM_ALLOC_HOST_PTR, &clStatus);'), (690, ''), (691, '    // Get the output from ThresholdToPix operation'), (692, '    clStatus = clEnqueueCopyBuffer(rEnv.mpkCmdQueue, pixThBuffer, pixsCLBuffer, 0, 0,'), (693, '                                   sizeof(l_uint32) * wpl * h, 0, nullptr, nullptr);'), (694, '  } else {'), (695, '    // Get data from the source image'), (696, '    l_uint32 *srcdata = reinterpret_cast<l_uint32 *>(malloc(wpl * h * sizeof(l_uint32)));'), (697, '    memcpy(srcdata, pixGetData(pixs), wpl * h * sizeof(l_uint32));'), (698, ''), (699, '    pixsCLBuffer = allocateZeroCopyBuffer(rEnv, srcdata, wpl * h, CL_MEM_USE_HOST_PTR, &clStatus);'), (700, '  }'), (701, ''), (702, '  pixdCLBuffer = allocateZeroCopyBuffer(rEnv, nullptr, wpl * h, CL_MEM_ALLOC_HOST_PTR, &clStatus);'), (703, ''), (704, '  pixdCLIntermediate ='), (705, '      allocateZeroCopyBuffer(rEnv, nullptr, wpl * h, CL_MEM_ALLOC_HOST_PTR, &clStatus);'), (706, ''), (707, '  return (int)clStatus;'), (708, '}'), (709, ''), (710, 'int OpenclDevice::InitEnv() {'), (711, '//    tprintf(""[OD] OpenclDevice::InitEnv()\\n"");'), (712, '#  ifdef SAL_WIN32'), (713, '  while (1) {'), (714, '    if (1 == LoadOpencl())'), (715, '      break;'), (716, '  }'), (717, '#  endif'), (718, '  // sets up environment, compiles programs'), (719, ''), (720, '  InitOpenclRunEnv_DeviceSelection(0);'), (721, '  return 1;'), (722, '}'), (723, ''), (724, 'int OpenclDevice::ReleaseOpenclRunEnv() {'), (725, '  ReleaseOpenclEnv(&gpuEnv);'), (726, '#  ifdef SAL_WIN32'), (727, '  FreeOpenclDll();'), (728, '#  endif'), (729, '  return 1;'), (730, '}'), (731, ''), (732, 'inline int OpenclDevice::AddKernelConfig(int kCount, const char *kName) {'), (733, '  ASSERT_HOST(kCount > 0);'), (734, '  ASSERT_HOST(strlen(kName) < sizeof(gpuEnv.mArrykernelNames[kCount - 1]));'), (735, '  strcpy(gpuEnv.mArrykernelNames[kCount - 1], kName);'), (736, '  gpuEnv.mnKernelCount++;'), (737, '  return 0;'), (738, '}'), (739, ''), (740, 'int OpenclDevice::RegistOpenclKernel() {'), (741, '  if (!gpuEnv.mnIsUserCreated)'), (742, '    memset(&gpuEnv, 0, sizeof(gpuEnv));'), (743, ''), (744, '  gpuEnv.mnFileCount = 0; // argc;'), (745, '  gpuEnv.mnKernelCount = 0UL;'), (746, ''), (747, '  AddKernelConfig(1, ""oclAverageSub1"");'), (748, '  return 0;'), (749, '}'), (750, ''), (751, 'int OpenclDevice::InitOpenclRunEnv_DeviceSelection(int argc) {'), (752, '  if (!isInited) {'), (753, '    // after programs compiled, selects best device'), (754, '    ds_device bestDevice_DS = getDeviceSelection();'), (755, '    cl_device_id bestDevice = bestDevice_DS.oclDeviceID;'), (756, '    // overwrite global static GPUEnv with new device'), (757, '    if (selectedDeviceIsOpenCL()) {'), (758, '      // tprintf(""[DS] InitOpenclRunEnv_DS::Calling populateGPUEnvFromDevice()'), (759, '      // for selected device\\n"");'), (760, '      populateGPUEnvFromDevice(&gpuEnv, bestDevice);'), (761, '      gpuEnv.mnFileCount = 0; // argc;'), (762, '      gpuEnv.mnKernelCount = 0UL;'), (763, '      CompileKernelFile(&gpuEnv, """");'), (764, '    } else {'), (765, '      // tprintf(""[DS] InitOpenclRunEnv_DS::Skipping populateGPUEnvFromDevice()'), (766, '      // b/c native cpu selected\\n"");'), (767, '    }'), (768, '    isInited = 1;'), (769, '  }'), (770, '  return 0;'), (771, '}'), (772, ''), (773, 'OpenclDevice::OpenclDevice() {'), (774, '  // InitEnv();'), (775, '}'), (776, ''), (777, 'OpenclDevice::~OpenclDevice() {'), (778, '  // ReleaseOpenclRunEnv();'), (779, '}'), (780, ''), (781, 'int OpenclDevice::ReleaseOpenclEnv(GPUEnv *gpuInfo) {'), (782, '  int i = 0;'), (783, '  int clStatus = 0;'), (784, ''), (785, '  if (!isInited) {'), (786, '    return 1;'), (787, '  }'), (788, ''), (789, '  for (i = 0; i < gpuEnv.mnFileCount; i++) {'), (790, '    if (gpuEnv.mpArryPrograms[i]) {'), (791, '      clStatus = clReleaseProgram(gpuEnv.mpArryPrograms[i]);'), (792, '      CHECK_OPENCL(clStatus, ""clReleaseProgram"");'), (793, '      gpuEnv.mpArryPrograms[i] = nullptr;'), (794, '    }'), (795, '  }'), (796, '  if (gpuEnv.mpCmdQueue) {'), (797, '    clReleaseCommandQueue(gpuEnv.mpCmdQueue);'), (798, '    gpuEnv.mpCmdQueue = nullptr;'), (799, '  }'), (800, '  if (gpuEnv.mpContext) {'), (801, '    clReleaseContext(gpuEnv.mpContext);'), (802, '    gpuEnv.mpContext = nullptr;'), (803, '  }'), (804, '  isInited = 0;'), (805, '  gpuInfo->mnIsUserCreated = 0;'), (806, '  delete[] gpuInfo->mpArryDevsID;'), (807, '  return 1;'), (808, '}'), (809, 'int OpenclDevice::BinaryGenerated(const char *clFileName, FILE **fhandle) {'), (810, '  unsigned int i = 0;'), (811, '  cl_int clStatus;'), (812, '  int status = 0;'), (813, '  FILE *fd = nullptr;'), (814, '  char fileName[256];'), (815, '  char cl_name[128];'), (816, '  char deviceName[1024];'), (817, '  clStatus = clGetDeviceInfo(gpuEnv.mpArryDevsID[i], CL_DEVICE_NAME, sizeof(deviceName), deviceName,'), (818, '                             nullptr);'), (819, '  CHECK_OPENCL(clStatus, ""clGetDeviceInfo"");'), (820, '  const char *str = strstr(clFileName, "".cl"");'), (821, '  memcpy(cl_name, clFileName, str - clFileName);'), (822, ""  cl_name[str - clFileName] = '\\0';""), (823, '  snprintf(fileName, sizeof(fileName), ""%s-%s.bin"", cl_name, deviceName);'), (824, '  legalizeFileName(fileName);'), (825, '  fd = fopen(fileName, ""rb"");'), (826, '  status = (fd != nullptr) ? 1 : 0;'), (827, '  if (fd != nullptr) {'), (828, '    *fhandle = fd;'), (829, '  }'), (830, '  return status;'), (831, '}'), (832, 'int OpenclDevice::CachedOfKernerPrg(const GPUEnv *gpuEnvCached, const char *clFileName) {'), (833, '  int i;'), (834, '  for (i = 0; i < gpuEnvCached->mnFileCount; i++) {'), (835, '    if (strcasecmp(gpuEnvCached->mArryKnelSrcFile[i], clFileName) == 0) {'), (836, '      if (gpuEnvCached->mpArryPrograms[i] != nullptr) {'), (837, '        return 1;'), (838, '      }'), (839, '    }'), (840, '  }'), (841, ''), (842, '  return 0;'), (843, '}'), (844, 'int OpenclDevice::WriteBinaryToFile(const char *fileName, const char *birary, size_t numBytes) {'), (845, '  FILE *output = nullptr;'), (846, '  output = fopen(fileName, ""wb"");'), (847, '  if (output == nullptr) {'), (848, '    return 0;'), (849, '  }'), (850, ''), (851, '  fwrite(birary, sizeof(char), numBytes, output);'), (852, '  fclose(output);'), (853, ''), (854, '  return 1;'), (855, '}'), (856, ''), (857, 'int OpenclDevice::GeneratBinFromKernelSource(cl_program program, const char *clFileName) {'), (858, '  unsigned int i = 0;'), (859, '  cl_int clStatus;'), (860, '  cl_uint numDevices;'), (861, ''), (862, '  clStatus ='), (863, '      clGetProgramInfo(program, CL_PROGRAM_NUM_DEVICES, sizeof(numDevices), &numDevices, nullptr);'), (864, '  CHECK_OPENCL(clStatus, ""clGetProgramInfo"");'), (865, ''), (866, '  std::vector<cl_device_id> mpArryDevsID(numDevices);'), (867, ''), (868, '  /* grab the handles to all of the devices in the program. */'), (869, '  clStatus = clGetProgramInfo(program, CL_PROGRAM_DEVICES, sizeof(cl_device_id) * numDevices,'), (870, '                              &mpArryDevsID[0], nullptr);'), (871, '  CHECK_OPENCL(clStatus, ""clGetProgramInfo"");'), (872, ''), (873, '  /* figure out the sizes of each of the binaries. */'), (874, '  std::vector<size_t> binarySizes(numDevices);'), (875, ''), (876, '  clStatus = clGetProgramInfo(program, CL_PROGRAM_BINARY_SIZES, sizeof(size_t) * numDevices,'), (877, '                              &binarySizes[0], nullptr);'), (878, '  CHECK_OPENCL(clStatus, ""clGetProgramInfo"");'), (879, ''), (880, '  /* copy over all of the generated binaries. */'), (881, '  std::vector<char *> binaries(numDevices);'), (882, ''), (883, '  for (i = 0; i < numDevices; i++) {'), (884, '    if (binarySizes[i] != 0) {'), (885, '      binaries[i] = new char[binarySizes[i]];'), (886, '    } else {'), (887, '      binaries[i] = nullptr;'), (888, '    }'), (889, '  }'), (890, ''), (891, '  clStatus = clGetProgramInfo(program, CL_PROGRAM_BINARIES, sizeof(char *) * numDevices,'), (892, '                              &binaries[0], nullptr);'), (893, '  CHECK_OPENCL(clStatus, ""clGetProgramInfo"");'), (894, ''), (895, '  /* dump out each binary into its own separate file. */'), (896, '  for (i = 0; i < numDevices; i++) {'), (897, '    if (binarySizes[i] != 0) {'), (898, '      char fileName[256];'), (899, '      char cl_name[128];'), (900, '      char deviceName[1024];'), (901, '      clStatus ='), (902, '          clGetDeviceInfo(mpArryDevsID[i], CL_DEVICE_NAME, sizeof(deviceName), deviceName, nullptr);'), (903, '      CHECK_OPENCL(clStatus, ""clGetDeviceInfo"");'), (904, ''), (905, '      const char *str = strstr(clFileName, "".cl"");'), (906, '      memcpy(cl_name, clFileName, str - clFileName);'), (907, ""      cl_name[str - clFileName] = '\\0';""), (908, '      snprintf(fileName, sizeof(fileName), ""%s-%s.bin"", cl_name, deviceName);'), (909, '      legalizeFileName(fileName);'), (910, '      if (!WriteBinaryToFile(fileName, binaries[i], binarySizes[i])) {'), (911, '        tprintf(""[OD] write binary[%s] failed\\n"", fileName);'), (912, '        return 0;'), (913, '      } // else'), (914, '      tprintf(""[OD] write binary[%s] successfully\\n"", fileName);'), (915, '    }'), (916, '  }'), (917, ''), (918, '  // Release all resources and memory'), (919, '  for (i = 0; i < numDevices; i++) {'), (920, '    delete[] binaries[i];'), (921, '  }'), (922, ''), (923, '  return 1;'), (924, '}'), (925, ''), (926, 'int OpenclDevice::CompileKernelFile(GPUEnv *gpuInfo, const char *buildOption) {'), (927, '  cl_int clStatus = 0;'), (928, '  const char *source;'), (929, '  size_t source_size[1];'), (930, '  int binary_status, binaryExisted, idx;'), (931, '  cl_uint numDevices;'), (932, '  FILE *fd, *fd1;'), (933, '  const char *filename = ""kernel.cl"";'), (934, '  // fprintf(stderr, ""[OD] CompileKernelFile ... \\n"");'), (935, '  if (CachedOfKernerPrg(gpuInfo, filename) == 1) {'), (936, '    return 1;'), (937, '  }'), (938, ''), (939, '  idx = gpuInfo->mnFileCount;'), (940, ''), (941, '  source = kernel_src;'), (942, ''), (943, '  source_size[0] = strlen(source);'), (944, '  binaryExisted = 0;'), (945, ""  binaryExisted = BinaryGenerated(filename, &fd); // don't check for binary during microbenchmark""), (946, '  if (binaryExisted == 1) {'), (947, '    clStatus = clGetContextInfo(gpuInfo->mpContext, CL_CONTEXT_NUM_DEVICES, sizeof(numDevices),'), (948, '                                &numDevices, nullptr);'), (949, '    CHECK_OPENCL(clStatus, ""clGetContextInfo"");'), (950, ''), (951, '    std::vector<cl_device_id> mpArryDevsID(numDevices);'), (952, '    bool b_error = fseek(fd, 0, SEEK_END) < 0;'), (953, '    auto pos = std::ftell(fd);'), (954, '    b_error |= (pos <= 0);'), (955, '    size_t length = pos;'), (956, '    b_error |= fseek(fd, 0, SEEK_SET) < 0;'), (957, '    if (b_error) {'), (958, '      fclose(fd);'), (959, '      return 0;'), (960, '    }'), (961, ''), (962, '    std::vector<uint8_t> binary(length + 2);'), (963, ''), (964, '    memset(&binary[0], 0, length + 2);'), (965, '    b_error |= fread(&binary[0], 1, length, fd) != length;'), (966, ''), (967, '    fclose(fd);'), (968, '    fd = nullptr;'), (969, '    // grab the handles to all of the devices in the context.'), (970, '    clStatus = clGetContextInfo(gpuInfo->mpContext, CL_CONTEXT_DEVICES,'), (971, '                                sizeof(cl_device_id) * numDevices, &mpArryDevsID[0], nullptr);'), (972, '    CHECK_OPENCL(clStatus, ""clGetContextInfo"");'), (973, '    // fprintf(stderr, ""[OD] Create kernel from binary\\n"");'), (974, '    const uint8_t *c_binary = &binary[0];'), (975, '    gpuInfo->mpArryPrograms[idx] ='), (976, '        clCreateProgramWithBinary(gpuInfo->mpContext, numDevices, &mpArryDevsID[0], &length,'), (977, '                                  &c_binary, &binary_status, &clStatus);'), (978, '    CHECK_OPENCL(clStatus, ""clCreateProgramWithBinary"");'), (979, '  } else {'), (980, '    // create a CL program using the kernel source'), (981, '    // fprintf(stderr, ""[OD] Create kernel from source\\n"");'), (982, '    gpuInfo->mpArryPrograms[idx] ='), (983, '        clCreateProgramWithSource(gpuInfo->mpContext, 1, &source, source_size, &clStatus);'), (984, '    CHECK_OPENCL(clStatus, ""clCreateProgramWithSource"");'), (985, '  }'), (986, ''), (987, '  if (gpuInfo->mpArryPrograms[idx] == (cl_program) nullptr) {'), (988, '    return 0;'), (989, '  }'), (990, ''), (991, '  // char options[512];'), (992, '  // create a cl program executable for all the devices specified'), (993, '  // tprintf(""[OD] BuildProgram.\\n"");'), (994, '  if (!gpuInfo->mnIsUserCreated) {'), (995, '    clStatus = clBuildProgram(gpuInfo->mpArryPrograms[idx], 1, gpuInfo->mpArryDevsID, buildOption,'), (996, '                              nullptr, nullptr);'), (997, '  } else {'), (998, '    clStatus = clBuildProgram(gpuInfo->mpArryPrograms[idx], 1, &(gpuInfo->mpDevID), buildOption,'), (999, '                              nullptr, nullptr);'), (1000, '  }'), (1001, '  if (clStatus != CL_SUCCESS) {'), (1002, '    tprintf(""BuildProgram error!\\n"");'), (1003, '    size_t length;'), (1004, '    if (!gpuInfo->mnIsUserCreated) {'), (1005, '      clStatus = clGetProgramBuildInfo(gpuInfo->mpArryPrograms[idx], gpuInfo->mpArryDevsID[0],'), (1006, '                                       CL_PROGRAM_BUILD_LOG, 0, nullptr, &length);'), (1007, '    } else {'), (1008, '      clStatus = clGetProgramBuildInfo(gpuInfo->mpArryPrograms[idx], gpuInfo->mpDevID,'), (1009, '                                       CL_PROGRAM_BUILD_LOG, 0, nullptr, &length);'), (1010, '    }'), (1011, '    if (clStatus != CL_SUCCESS) {'), (1012, '      tprintf(""opencl create build log fail\\n"");'), (1013, '      return 0;'), (1014, '    }'), (1015, '    std::vector<char> buildLog(length);'), (1016, '    if (!gpuInfo->mnIsUserCreated) {'), (1017, '      clStatus = clGetProgramBuildInfo(gpuInfo->mpArryPrograms[idx], gpuInfo->mpArryDevsID[0],'), (1018, '                                       CL_PROGRAM_BUILD_LOG, length, &buildLog[0], &length);'), (1019, '    } else {'), (1020, '      clStatus = clGetProgramBuildInfo(gpuInfo->mpArryPrograms[idx], gpuInfo->mpDevID,'), (1021, '                                       CL_PROGRAM_BUILD_LOG, length, &buildLog[0], &length);'), (1022, '    }'), (1023, '    if (clStatus != CL_SUCCESS) {'), (1024, '      tprintf(""opencl program build info fail\\n"");'), (1025, '      return 0;'), (1026, '    }'), (1027, ''), (1028, '    fd1 = fopen(""kernel-build.log"", ""w+"");'), (1029, '    if (fd1 != nullptr) {'), (1030, '      fwrite(&buildLog[0], sizeof(char), length, fd1);'), (1031, '      fclose(fd1);'), (1032, '    }'), (1033, ''), (1034, '    return 0;'), (1035, '  }'), (1036, ''), (1037, '  strcpy(gpuInfo->mArryKnelSrcFile[idx], filename);'), (1038, '  if (binaryExisted == 0) {'), (1039, '    GeneratBinFromKernelSource(gpuInfo->mpArryPrograms[idx], filename);'), (1040, '  }'), (1041, ''), (1042, '  gpuInfo->mnFileCount += 1;'), (1043, '  return 1;'), (1044, '}'), (1045, ''), (1046, 'l_uint32 *OpenclDevice::pixReadFromTiffKernel(l_uint32 *tiffdata, l_int32 w, l_int32 h, l_int32 wpl,'), (1047, '                                              l_uint32 *line) {'), (1048, '  cl_int clStatus;'), (1049, '  KernelEnv rEnv;'), (1050, '  size_t globalThreads[2];'), (1051, '  size_t localThreads[2];'), (1052, '  int gsize;'), (1053, '  cl_mem valuesCl;'), (1054, '  cl_mem outputCl;'), (1055, ''), (1056, '  // global and local work dimensions for Horizontal pass'), (1057, '  gsize = (w + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;'), (1058, '  globalThreads[0] = gsize;'), (1059, '  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;'), (1060, '  globalThreads[1] = gsize;'), (1061, '  localThreads[0] = GROUPSIZE_X;'), (1062, '  localThreads[1] = GROUPSIZE_Y;'), (1063, ''), (1064, '  SetKernelEnv(&rEnv);'), (1065, ''), (1066, '  l_uint32 *pResult = (l_uint32 *)malloc(w * h * sizeof(l_uint32));'), (1067, '  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""composeRGBPixel"", &clStatus);'), (1068, '  CHECK_OPENCL(clStatus, ""clCreateKernel composeRGBPixel"");'), (1069, ''), (1070, '  // Allocate input and output OCL buffers'), (1071, '  valuesCl = allocateZeroCopyBuffer(rEnv, tiffdata, w * h, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,'), (1072, '                                    &clStatus);'), (1073, '  outputCl = allocateZeroCopyBuffer(rEnv, pResult, w * h, CL_MEM_WRITE_ONLY | CL_MEM_USE_HOST_PTR,'), (1074, '                                    &clStatus);'), (1075, ''), (1076, '  // Kernel arguments'), (1077, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &valuesCl);'), (1078, '  CHECK_OPENCL(clStatus, ""clSetKernelArg"");'), (1079, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(w), &w);'), (1080, '  CHECK_OPENCL(clStatus, ""clSetKernelArg"");'), (1081, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(h), &h);'), (1082, '  CHECK_OPENCL(clStatus, ""clSetKernelArg"");'), (1083, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);'), (1084, '  CHECK_OPENCL(clStatus, ""clSetKernelArg"");'), (1085, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(cl_mem), &outputCl);'), (1086, '  CHECK_OPENCL(clStatus, ""clSetKernelArg"");'), (1087, ''), (1088, '  // Kernel enqueue'), (1089, '  clStatus = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1090, '                                    localThreads, 0, nullptr, nullptr);'), (1091, '  CHECK_OPENCL(clStatus, ""clEnqueueNDRangeKernel"");'), (1092, ''), (1093, '  /* map results back from gpu */'), (1094, '  void *ptr = clEnqueueMapBuffer(rEnv.mpkCmdQueue, outputCl, CL_TRUE, CL_MAP_READ, 0,'), (1095, '                                 w * h * sizeof(l_uint32), 0, nullptr, nullptr, &clStatus);'), (1096, '  CHECK_OPENCL(clStatus, ""clEnqueueMapBuffer outputCl"");'), (1097, '  clEnqueueUnmapMemObject(rEnv.mpkCmdQueue, outputCl, ptr, 0, nullptr, nullptr);'), (1098, ''), (1099, '  // Sync'), (1100, '  clFinish(rEnv.mpkCmdQueue);'), (1101, '  return pResult;'), (1102, '}'), (1103, ''), (1104, '// Morphology Dilate operation for 5x5 structuring element. Invokes the relevant'), (1105, '// OpenCL kernels'), (1106, 'static cl_int pixDilateCL_55(l_int32 wpl, l_int32 h) {'), (1107, '  size_t globalThreads[2];'), (1108, '  cl_mem pixtemp;'), (1109, '  cl_int status;'), (1110, '  int gsize;'), (1111, '  size_t localThreads[2];'), (1112, ''), (1113, '  // Horizontal pass'), (1114, '  gsize = (wpl * h + GROUPSIZE_HMORX - 1) / GROUPSIZE_HMORX * GROUPSIZE_HMORX;'), (1115, '  globalThreads[0] = gsize;'), (1116, '  globalThreads[1] = GROUPSIZE_HMORY;'), (1117, '  localThreads[0] = GROUPSIZE_HMORX;'), (1118, '  localThreads[1] = GROUPSIZE_HMORY;'), (1119, ''), (1120, '  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateHor_5x5"", &status);'), (1121, '  CHECK_OPENCL(status, ""clCreateKernel morphoDilateHor_5x5"");'), (1122, ''), (1123, '  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1124, '  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1125, '  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);'), (1126, '  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);'), (1127, ''), (1128, '  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1129, '                                  localThreads, 0, nullptr, nullptr);'), (1130, ''), (1131, '  // Swap source and dest buffers'), (1132, '  pixtemp = pixsCLBuffer;'), (1133, '  pixsCLBuffer = pixdCLBuffer;'), (1134, '  pixdCLBuffer = pixtemp;'), (1135, ''), (1136, '  // Vertical'), (1137, '  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;'), (1138, '  globalThreads[0] = gsize;'), (1139, '  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;'), (1140, '  globalThreads[1] = gsize;'), (1141, '  localThreads[0] = GROUPSIZE_X;'), (1142, '  localThreads[1] = GROUPSIZE_Y;'), (1143, ''), (1144, '  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateVer_5x5"", &status);'), (1145, '  CHECK_OPENCL(status, ""clCreateKernel morphoDilateVer_5x5"");'), (1146, ''), (1147, '  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1148, '  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1149, '  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);'), (1150, '  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);'), (1151, '  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1152, '                                  localThreads, 0, nullptr, nullptr);'), (1153, ''), (1154, '  return status;'), (1155, '}'), (1156, ''), (1157, '// Morphology Erode operation for 5x5 structuring element. Invokes the relevant'), (1158, '// OpenCL kernels'), (1159, 'static cl_int pixErodeCL_55(l_int32 wpl, l_int32 h) {'), (1160, '  size_t globalThreads[2];'), (1161, '  cl_mem pixtemp;'), (1162, '  cl_int status;'), (1163, '  int gsize;'), (1164, '  l_uint32 fwmask, lwmask;'), (1165, '  size_t localThreads[2];'), (1166, ''), (1167, '  lwmask = lmask32[31 - 2];'), (1168, '  fwmask = rmask32[31 - 2];'), (1169, ''), (1170, '  // Horizontal pass'), (1171, '  gsize = (wpl * h + GROUPSIZE_HMORX - 1) / GROUPSIZE_HMORX * GROUPSIZE_HMORX;'), (1172, '  globalThreads[0] = gsize;'), (1173, '  globalThreads[1] = GROUPSIZE_HMORY;'), (1174, '  localThreads[0] = GROUPSIZE_HMORX;'), (1175, '  localThreads[1] = GROUPSIZE_HMORY;'), (1176, ''), (1177, '  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeHor_5x5"", &status);'), (1178, '  CHECK_OPENCL(status, ""clCreateKernel morphoErodeHor_5x5"");'), (1179, ''), (1180, '  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1181, '  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1182, '  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);'), (1183, '  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);'), (1184, ''), (1185, '  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1186, '                                  localThreads, 0, nullptr, nullptr);'), (1187, ''), (1188, '  // Swap source and dest buffers'), (1189, '  pixtemp = pixsCLBuffer;'), (1190, '  pixsCLBuffer = pixdCLBuffer;'), (1191, '  pixdCLBuffer = pixtemp;'), (1192, ''), (1193, '  // Vertical'), (1194, '  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;'), (1195, '  globalThreads[0] = gsize;'), (1196, '  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;'), (1197, '  globalThreads[1] = gsize;'), (1198, '  localThreads[0] = GROUPSIZE_X;'), (1199, '  localThreads[1] = GROUPSIZE_Y;'), (1200, ''), (1201, '  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeVer_5x5"", &status);'), (1202, '  CHECK_OPENCL(status, ""clCreateKernel morphoErodeVer_5x5"");'), (1203, ''), (1204, '  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1205, '  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1206, '  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);'), (1207, '  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);'), (1208, '  status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(fwmask), &fwmask);'), (1209, '  status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(lwmask), &lwmask);'), (1210, '  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1211, '                                  localThreads, 0, nullptr, nullptr);'), (1212, ''), (1213, '  return status;'), (1214, '}'), (1215, ''), (1216, '// Morphology Dilate operation. Invokes the relevant OpenCL kernels'), (1217, 'static cl_int pixDilateCL(l_int32 hsize, l_int32 vsize, l_int32 wpl, l_int32 h) {'), (1218, '  l_int32 xp, yp, xn, yn;'), (1219, '  SEL *sel;'), (1220, '  size_t globalThreads[2];'), (1221, '  cl_mem pixtemp;'), (1222, '  cl_int status = 0;'), (1223, '  int gsize;'), (1224, '  size_t localThreads[2];'), (1225, '  char isEven;'), (1226, ''), (1227, '  OpenclDevice::SetKernelEnv(&rEnv);'), (1228, ''), (1229, '  if (hsize == 5 && vsize == 5) {'), (1230, '    // Specific case for 5x5'), (1231, '    status = pixDilateCL_55(wpl, h);'), (1232, '    return status;'), (1233, '  }'), (1234, ''), (1235, '  sel = selCreateBrick(vsize, hsize, vsize / 2, hsize / 2, SEL_HIT);'), (1236, ''), (1237, '  selFindMaxTranslations(sel, &xp, &yp, &xn, &yn);'), (1238, '  selDestroy(&sel);'), (1239, '  // global and local work dimensions for Horizontal pass'), (1240, '  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;'), (1241, '  globalThreads[0] = gsize;'), (1242, '  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;'), (1243, '  globalThreads[1] = gsize;'), (1244, '  localThreads[0] = GROUPSIZE_X;'), (1245, '  localThreads[1] = GROUPSIZE_Y;'), (1246, ''), (1247, '  if (xp > 31 || xn > 31) {'), (1248, '    // Generic case.'), (1249, '    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateHor"", &status);'), (1250, '    CHECK_OPENCL(status, ""clCreateKernel morphoDilateHor"");'), (1251, ''), (1252, '    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1253, '    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1254, '    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(xp), &xp);'), (1255, '    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(xn), &xn);'), (1256, '    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(wpl), &wpl);'), (1257, '    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(h), &h);'), (1258, '    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1259, '                                    localThreads, 0, nullptr, nullptr);'), (1260, ''), (1261, '    if (yp > 0 || yn > 0) {'), (1262, '      pixtemp = pixsCLBuffer;'), (1263, '      pixsCLBuffer = pixdCLBuffer;'), (1264, '      pixdCLBuffer = pixtemp;'), (1265, '    }'), (1266, '  } else if (xp > 0 || xn > 0) {'), (1267, '    // Specific Horizontal pass kernel for half width < 32'), (1268, '    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateHor_32word"", &status);'), (1269, '    CHECK_OPENCL(status, ""clCreateKernel morphoDilateHor_32word"");'), (1270, '    isEven = (xp != xn);'), (1271, ''), (1272, '    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1273, '    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1274, '    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(xp), &xp);'), (1275, '    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);'), (1276, '    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(h), &h);'), (1277, '    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(isEven), &isEven);'), (1278, '    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1279, '                                    localThreads, 0, nullptr, nullptr);'), (1280, ''), (1281, '    if (yp > 0 || yn > 0) {'), (1282, '      pixtemp = pixsCLBuffer;'), (1283, '      pixsCLBuffer = pixdCLBuffer;'), (1284, '      pixdCLBuffer = pixtemp;'), (1285, '    }'), (1286, '  }'), (1287, ''), (1288, '  if (yp > 0 || yn > 0) {'), (1289, '    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoDilateVer"", &status);'), (1290, '    CHECK_OPENCL(status, ""clCreateKernel morphoDilateVer"");'), (1291, ''), (1292, '    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1293, '    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1294, '    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(yp), &yp);'), (1295, '    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);'), (1296, '    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(h), &h);'), (1297, '    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(yn), &yn);'), (1298, '    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1299, '                                    localThreads, 0, nullptr, nullptr);'), (1300, '  }'), (1301, ''), (1302, '  return status;'), (1303, '}'), (1304, ''), (1305, '// Morphology Erode operation. Invokes the relevant OpenCL kernels'), (1306, 'static cl_int pixErodeCL(l_int32 hsize, l_int32 vsize, l_uint32 wpl, l_uint32 h) {'), (1307, '  l_int32 xp, yp, xn, yn;'), (1308, '  SEL *sel;'), (1309, '  size_t globalThreads[2];'), (1310, '  size_t localThreads[2];'), (1311, '  cl_mem pixtemp;'), (1312, '  cl_int status = 0;'), (1313, '  int gsize;'), (1314, '  char isAsymmetric = (MORPH_BC == ASYMMETRIC_MORPH_BC);'), (1315, '  l_uint32 rwmask, lwmask;'), (1316, '  char isEven;'), (1317, ''), (1318, '  sel = selCreateBrick(vsize, hsize, vsize / 2, hsize / 2, SEL_HIT);'), (1319, ''), (1320, '  selFindMaxTranslations(sel, &xp, &yp, &xn, &yn);'), (1321, '  selDestroy(&sel);'), (1322, '  OpenclDevice::SetKernelEnv(&rEnv);'), (1323, ''), (1324, '  if (hsize == 5 && vsize == 5 && isAsymmetric) {'), (1325, '    // Specific kernel for 5x5'), (1326, '    status = pixErodeCL_55(wpl, h);'), (1327, '    return status;'), (1328, '  }'), (1329, ''), (1330, '  lwmask = lmask32[31 - (xn & 31)];'), (1331, '  rwmask = rmask32[31 - (xp & 31)];'), (1332, ''), (1333, '  // global and local work dimensions for Horizontal pass'), (1334, '  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;'), (1335, '  globalThreads[0] = gsize;'), (1336, '  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;'), (1337, '  globalThreads[1] = gsize;'), (1338, '  localThreads[0] = GROUPSIZE_X;'), (1339, '  localThreads[1] = GROUPSIZE_Y;'), (1340, ''), (1341, '  // Horizontal Pass'), (1342, '  if (xp > 31 || xn > 31) {'), (1343, '    // Generic case.'), (1344, '    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeHor"", &status);'), (1345, ''), (1346, '    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1347, '    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1348, '    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(xp), &xp);'), (1349, '    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(xn), &xn);'), (1350, '    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(wpl), &wpl);'), (1351, '    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(h), &h);'), (1352, '    status = clSetKernelArg(rEnv.mpkKernel, 6, sizeof(isAsymmetric), &isAsymmetric);'), (1353, '    status = clSetKernelArg(rEnv.mpkKernel, 7, sizeof(rwmask), &rwmask);'), (1354, '    status = clSetKernelArg(rEnv.mpkKernel, 8, sizeof(lwmask), &lwmask);'), (1355, '    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1356, '                                    localThreads, 0, nullptr, nullptr);'), (1357, ''), (1358, '    if (yp > 0 || yn > 0) {'), (1359, '      pixtemp = pixsCLBuffer;'), (1360, '      pixsCLBuffer = pixdCLBuffer;'), (1361, '      pixdCLBuffer = pixtemp;'), (1362, '    }'), (1363, '  } else if (xp > 0 || xn > 0) {'), (1364, '    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeHor_32word"", &status);'), (1365, '    isEven = (xp != xn);'), (1366, ''), (1367, '    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1368, '    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1369, '    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(xp), &xp);'), (1370, '    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);'), (1371, '    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(h), &h);'), (1372, '    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(isAsymmetric), &isAsymmetric);'), (1373, '    status = clSetKernelArg(rEnv.mpkKernel, 6, sizeof(rwmask), &rwmask);'), (1374, '    status = clSetKernelArg(rEnv.mpkKernel, 7, sizeof(lwmask), &lwmask);'), (1375, '    status = clSetKernelArg(rEnv.mpkKernel, 8, sizeof(isEven), &isEven);'), (1376, '    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1377, '                                    localThreads, 0, nullptr, nullptr);'), (1378, ''), (1379, '    if (yp > 0 || yn > 0) {'), (1380, '      pixtemp = pixsCLBuffer;'), (1381, '      pixsCLBuffer = pixdCLBuffer;'), (1382, '      pixdCLBuffer = pixtemp;'), (1383, '    }'), (1384, '  }'), (1385, ''), (1386, '  // Vertical Pass'), (1387, '  if (yp > 0 || yn > 0) {'), (1388, '    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""morphoErodeVer"", &status);'), (1389, '    CHECK_OPENCL(status, ""clCreateKernel morphoErodeVer"");'), (1390, ''), (1391, '    status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &pixsCLBuffer);'), (1392, '    status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &pixdCLBuffer);'), (1393, '    status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(yp), &yp);'), (1394, '    status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(wpl), &wpl);'), (1395, '    status = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(h), &h);'), (1396, '    status = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(isAsymmetric), &isAsymmetric);'), (1397, '    status = clSetKernelArg(rEnv.mpkKernel, 6, sizeof(yn), &yn);'), (1398, '    status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1399, '                                    localThreads, 0, nullptr, nullptr);'), (1400, '  }'), (1401, ''), (1402, '  return status;'), (1403, '}'), (1404, ''), (1405, '// Morphology Open operation. Invokes the relevant OpenCL kernels'), (1406, 'static cl_int pixOpenCL(l_int32 hsize, l_int32 vsize, l_int32 wpl, l_int32 h) {'), (1407, '  cl_int status;'), (1408, '  cl_mem pixtemp;'), (1409, ''), (1410, '  // Erode followed by Dilate'), (1411, '  status = pixErodeCL(hsize, vsize, wpl, h);'), (1412, ''), (1413, '  pixtemp = pixsCLBuffer;'), (1414, '  pixsCLBuffer = pixdCLBuffer;'), (1415, '  pixdCLBuffer = pixtemp;'), (1416, ''), (1417, '  status = pixDilateCL(hsize, vsize, wpl, h);'), (1418, ''), (1419, '  return status;'), (1420, '}'), (1421, ''), (1422, '// Morphology Close operation. Invokes the relevant OpenCL kernels'), (1423, 'static cl_int pixCloseCL(l_int32 hsize, l_int32 vsize, l_int32 wpl, l_int32 h) {'), (1424, '  cl_int status;'), (1425, '  cl_mem pixtemp;'), (1426, ''), (1427, '  // Dilate followed by Erode'), (1428, '  status = pixDilateCL(hsize, vsize, wpl, h);'), (1429, ''), (1430, '  pixtemp = pixsCLBuffer;'), (1431, '  pixsCLBuffer = pixdCLBuffer;'), (1432, '  pixdCLBuffer = pixtemp;'), (1433, ''), (1434, '  status = pixErodeCL(hsize, vsize, wpl, h);'), (1435, ''), (1436, '  return status;'), (1437, '}'), (1438, ''), (1439, '// output = buffer1 & ~(buffer2)'), (1440, 'static cl_int pixSubtractCL_work(l_uint32 wpl, l_uint32 h, cl_mem buffer1, cl_mem buffer2) {'), (1441, '  cl_int status;'), (1442, '  size_t globalThreads[2];'), (1443, '  int gsize;'), (1444, '  size_t localThreads[] = {GROUPSIZE_X, GROUPSIZE_Y};'), (1445, ''), (1446, '  gsize = (wpl + GROUPSIZE_X - 1) / GROUPSIZE_X * GROUPSIZE_X;'), (1447, '  globalThreads[0] = gsize;'), (1448, '  gsize = (h + GROUPSIZE_Y - 1) / GROUPSIZE_Y * GROUPSIZE_Y;'), (1449, '  globalThreads[1] = gsize;'), (1450, ''), (1451, '  rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""pixSubtract_inplace"", &status);'), (1452, '  CHECK_OPENCL(status, ""clCreateKernel pixSubtract_inplace"");'), (1453, ''), (1454, '  // Enqueue a kernel run call.'), (1455, '  status = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &buffer1);'), (1456, '  status = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(cl_mem), &buffer2);'), (1457, '  status = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(wpl), &wpl);'), (1458, '  status = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(h), &h);'), (1459, '  status = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 2, nullptr, globalThreads,'), (1460, '                                  localThreads, 0, nullptr, nullptr);'), (1461, ''), (1462, '  return status;'), (1463, '}'), (1464, ''), (1465, '// OpenCL implementation of Get Lines from pix function'), (1466, '// Note: Assumes the source and dest opencl buffer are initialized. No check'), (1467, '// done'), (1468, 'void OpenclDevice::pixGetLinesCL(Image pixd, Image pixs, Image *pix_vline, Image *pix_hline,'), (1469, '                                 Image *pixClosed, bool getpixClosed, l_int32 close_hsize,'), (1470, '                                 l_int32 close_vsize, l_int32 open_hsize, l_int32 open_vsize,'), (1471, '                                 l_int32 line_hsize, l_int32 line_vsize) {'), (1472, '  l_uint32 wpl, h;'), (1473, '  cl_mem pixtemp;'), (1474, ''), (1475, '  wpl = pixGetWpl(pixs);'), (1476, '  h = pixGetHeight(pixs);'), (1477, ''), (1478, '  // First step : Close Morph operation: Dilate followed by Erode'), (1479, '  clStatus = pixCloseCL(close_hsize, close_vsize, wpl, h);'), (1480, ''), (1481, '  // Copy the Close output to CPU buffer'), (1482, '  if (getpixClosed) {'), (1483, '    *pixClosed ='), (1484, '        mapOutputCLBuffer(rEnv, pixdCLBuffer, *pixClosed, pixs, wpl * h, CL_MAP_READ, true, false);'), (1485, '  }'), (1486, ''), (1487, '  // Store the output of close operation in an intermediate buffer'), (1488, '  // this will be later used for pixsubtract'), (1489, '  clStatus = clEnqueueCopyBuffer(rEnv.mpkCmdQueue, pixdCLBuffer, pixdCLIntermediate, 0, 0,'), (1490, '                                 sizeof(int) * wpl * h, 0, nullptr, nullptr);'), (1491, ''), (1492, '  // Second step: Open Operation - Erode followed by Dilate'), (1493, '  pixtemp = pixsCLBuffer;'), (1494, '  pixsCLBuffer = pixdCLBuffer;'), (1495, '  pixdCLBuffer = pixtemp;'), (1496, ''), (1497, '  clStatus = pixOpenCL(open_hsize, open_vsize, wpl, h);'), (1498, ''), (1499, '  // Third step: Subtract : (Close - Open)'), (1500, '  pixtemp = pixsCLBuffer;'), (1501, '  pixsCLBuffer = pixdCLBuffer;'), (1502, '  pixdCLBuffer = pixdCLIntermediate;'), (1503, '  pixdCLIntermediate = pixtemp;'), (1504, ''), (1505, '  clStatus = pixSubtractCL_work(wpl, h, pixdCLBuffer, pixsCLBuffer);'), (1506, ''), (1507, '  // Store the output of Hollow operation in an intermediate buffer'), (1508, '  // this will be later used'), (1509, '  clStatus = clEnqueueCopyBuffer(rEnv.mpkCmdQueue, pixdCLBuffer, pixdCLIntermediate, 0, 0,'), (1510, '                                 sizeof(int) * wpl * h, 0, nullptr, nullptr);'), (1511, ''), (1512, '  pixtemp = pixsCLBuffer;'), (1513, '  pixsCLBuffer = pixdCLBuffer;'), (1514, '  pixdCLBuffer = pixtemp;'), (1515, ''), (1516, '  // Fourth step: Get vertical line'), (1517, '  // pixOpenBrick(nullptr, pix_hollow, 1, min_line_length);'), (1518, '  clStatus = pixOpenCL(1, line_vsize, wpl, h);'), (1519, ''), (1520, '  // Copy the vertical line output to CPU buffer'), (1521, '  *pix_vline ='), (1522, '      mapOutputCLBuffer(rEnv, pixdCLBuffer, *pix_vline, pixs, wpl * h, CL_MAP_READ, true, false);'), (1523, ''), (1524, '  pixtemp = pixsCLBuffer;'), (1525, '  pixsCLBuffer = pixdCLIntermediate;'), (1526, '  pixdCLIntermediate = pixtemp;'), (1527, ''), (1528, '  // Fifth step: Get horizontal line'), (1529, '  // pixOpenBrick(nullptr, pix_hollow, min_line_length, 1);'), (1530, '  clStatus = pixOpenCL(line_hsize, 1, wpl, h);'), (1531, ''), (1532, '  // Copy the horizontal line output to CPU buffer'), (1533, '  *pix_hline ='), (1534, '      mapOutputCLBuffer(rEnv, pixdCLBuffer, *pix_hline, pixs, wpl * h, CL_MAP_READ, true, true);'), (1535, ''), (1536, '  return;'), (1537, '}'), (1538, ''), (1539, '/*************************************************************************'), (1540, ' *  HistogramRect'), (1541, ' *  Otsu Thresholding Operations'), (1542, ' *  histogramAllChannels is laid out as all channel 0, then all channel 1...'), (1543, ' *  only supports 1 or 4 channels (bytes_per_pixel)'), (1544, ' ************************************************************************/'), (1545, 'int OpenclDevice::HistogramRectOCL(void *imageData, int bytes_per_pixel, int bytes_per_line,'), (1546, '                                   int left, // always 0'), (1547, '                                   int top,  // always 0'), (1548, '                                   int width, int height, int kHistogramSize,'), (1549, '                                   int *histogramAllChannels) {'), (1550, '  cl_int clStatus;'), (1551, '  int retVal = 0;'), (1552, '  KernelEnv histKern;'), (1553, '  SetKernelEnv(&histKern);'), (1554, '  KernelEnv histRedKern;'), (1555, '  SetKernelEnv(&histRedKern);'), (1556, '  /* map imagedata to device as read only */'), (1557, '  // USE_HOST_PTR uses onion+ bus which is slowest option; also happens to be'), (1558, ""  // coherent which we don't need.""), (1559, '  // faster option would be to allocate initial image buffer'), (1560, '  // using a garlic bus memory type'), (1561, '  cl_mem imageBuffer ='), (1562, '      clCreateBuffer(histKern.mpkContext, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,'), (1563, '                     width * height * bytes_per_pixel * sizeof(char), imageData, &clStatus);'), (1564, '  CHECK_OPENCL(clStatus, ""clCreateBuffer imageBuffer"");'), (1565, ''), (1566, '  /* setup work group size parameters */'), (1567, '  int block_size = 256;'), (1568, '  cl_uint numCUs;'), (1569, '  clStatus = clGetDeviceInfo(gpuEnv.mpDevID, CL_DEVICE_MAX_COMPUTE_UNITS, sizeof(numCUs), &numCUs,'), (1570, '                             nullptr);'), (1571, '  CHECK_OPENCL(clStatus, ""clCreateBuffer imageBuffer"");'), (1572, ''), (1573, '  int requestedOccupancy = 10;'), (1574, '  int numWorkGroups = numCUs * requestedOccupancy;'), (1575, '  int numThreads = block_size * numWorkGroups;'), (1576, '  size_t local_work_size[] = {static_cast<size_t>(block_size)};'), (1577, '  size_t global_work_size[] = {static_cast<size_t>(numThreads)};'), (1578, '  size_t red_global_work_size[] = {'), (1579, '      static_cast<size_t>(block_size * kHistogramSize * bytes_per_pixel)};'), (1580, ''), (1581, '  /* map histogramAllChannels as write only */'), (1582, ''), (1583, '  cl_mem histogramBuffer = clCreateBuffer('), (1584, '      histKern.mpkContext, CL_MEM_READ_WRITE | CL_MEM_USE_HOST_PTR,'), (1585, '      kHistogramSize * bytes_per_pixel * sizeof(int), histogramAllChannels, &clStatus);'), (1586, '  CHECK_OPENCL(clStatus, ""clCreateBuffer histogramBuffer"");'), (1587, ''), (1588, '  /* intermediate histogram buffer */'), (1589, '  int histRed = 256;'), (1590, '  int tmpHistogramBins = kHistogramSize * bytes_per_pixel * histRed;'), (1591, ''), (1592, '  cl_mem tmpHistogramBuffer ='), (1593, '      clCreateBuffer(histKern.mpkContext, CL_MEM_READ_WRITE, tmpHistogramBins * sizeof(cl_uint),'), (1594, '                     nullptr, &clStatus);'), (1595, '  CHECK_OPENCL(clStatus, ""clCreateBuffer tmpHistogramBuffer"");'), (1596, ''), (1597, '  /* atomic sync buffer */'), (1598, '  int *zeroBuffer = new int[1];'), (1599, '  zeroBuffer[0] = 0;'), (1600, '  cl_mem atomicSyncBuffer ='), (1601, '      clCreateBuffer(histKern.mpkContext, CL_MEM_READ_WRITE | CL_MEM_COPY_HOST_PTR, sizeof(cl_int),'), (1602, '                     zeroBuffer, &clStatus);'), (1603, '  CHECK_OPENCL(clStatus, ""clCreateBuffer atomicSyncBuffer"");'), (1604, '  delete[] zeroBuffer;'), (1605, '  // Create kernel objects based on bytes_per_pixel'), (1606, '  if (bytes_per_pixel == 1) {'), (1607, '    histKern.mpkKernel ='), (1608, '        clCreateKernel(histKern.mpkProgram, ""kernel_HistogramRectOneChannel"", &clStatus);'), (1609, '    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_HistogramRectOneChannel"");'), (1610, ''), (1611, '    histRedKern.mpkKernel = clCreateKernel(histRedKern.mpkProgram,'), (1612, '                                           ""kernel_HistogramRectOneChannelReduction"", &clStatus);'), (1613, '    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_HistogramRectOneChannelReduction"");'), (1614, '  } else {'), (1615, '    histKern.mpkKernel ='), (1616, '        clCreateKernel(histKern.mpkProgram, ""kernel_HistogramRectAllChannels"", &clStatus);'), (1617, '    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_HistogramRectAllChannels"");'), (1618, ''), (1619, '    histRedKern.mpkKernel = clCreateKernel(histRedKern.mpkProgram,'), (1620, '                                           ""kernel_HistogramRectAllChannelsReduction"", &clStatus);'), (1621, '    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_HistogramRectAllChannelsReduction"");'), (1622, '  }'), (1623, ''), (1624, '  void *ptr;'), (1625, ''), (1626, '  // Initialize tmpHistogramBuffer buffer'), (1627, '  ptr = clEnqueueMapBuffer(histKern.mpkCmdQueue, tmpHistogramBuffer, CL_TRUE, CL_MAP_WRITE, 0,'), (1628, '                           tmpHistogramBins * sizeof(cl_uint), 0, nullptr, nullptr, &clStatus);'), (1629, '  CHECK_OPENCL(clStatus, ""clEnqueueMapBuffer tmpHistogramBuffer"");'), (1630, ''), (1631, '  memset(ptr, 0, tmpHistogramBins * sizeof(cl_uint));'), (1632, '  clEnqueueUnmapMemObject(histKern.mpkCmdQueue, tmpHistogramBuffer, ptr, 0, nullptr, nullptr);'), (1633, ''), (1634, '  /* set kernel 1 arguments */'), (1635, '  clStatus = clSetKernelArg(histKern.mpkKernel, 0, sizeof(cl_mem), &imageBuffer);'), (1636, '  CHECK_OPENCL(clStatus, ""clSetKernelArg imageBuffer"");'), (1637, '  cl_uint numPixels = width * height;'), (1638, '  clStatus = clSetKernelArg(histKern.mpkKernel, 1, sizeof(cl_uint), &numPixels);'), (1639, '  CHECK_OPENCL(clStatus, ""clSetKernelArg numPixels"");'), (1640, '  clStatus = clSetKernelArg(histKern.mpkKernel, 2, sizeof(cl_mem), &tmpHistogramBuffer);'), (1641, '  CHECK_OPENCL(clStatus, ""clSetKernelArg tmpHistogramBuffer"");'), (1642, ''), (1643, '  /* set kernel 2 arguments */'), (1644, '  int n = numThreads / bytes_per_pixel;'), (1645, '  clStatus = clSetKernelArg(histRedKern.mpkKernel, 0, sizeof(cl_int), &n);'), (1646, '  CHECK_OPENCL(clStatus, ""clSetKernelArg imageBuffer"");'), (1647, '  clStatus = clSetKernelArg(histRedKern.mpkKernel, 1, sizeof(cl_mem), &tmpHistogramBuffer);'), (1648, '  CHECK_OPENCL(clStatus, ""clSetKernelArg tmpHistogramBuffer"");'), (1649, '  clStatus = clSetKernelArg(histRedKern.mpkKernel, 2, sizeof(cl_mem), &histogramBuffer);'), (1650, '  CHECK_OPENCL(clStatus, ""clSetKernelArg histogramBuffer"");'), (1651, ''), (1652, '  /* launch histogram */'), (1653, '  clStatus = clEnqueueNDRangeKernel(histKern.mpkCmdQueue, histKern.mpkKernel, 1, nullptr,'), (1654, '                                    global_work_size, local_work_size, 0, nullptr, nullptr);'), (1655, '  CHECK_OPENCL(clStatus, ""clEnqueueNDRangeKernel kernel_HistogramRectAllChannels"");'), (1656, '  clFinish(histKern.mpkCmdQueue);'), (1657, '  if (clStatus != 0) {'), (1658, '    retVal = -1;'), (1659, '  }'), (1660, '  /* launch histogram */'), (1661, '  clStatus = clEnqueueNDRangeKernel(histRedKern.mpkCmdQueue, histRedKern.mpkKernel, 1, nullptr,'), (1662, '                                    red_global_work_size, local_work_size, 0, nullptr, nullptr);'), (1663, '  CHECK_OPENCL(clStatus, ""clEnqueueNDRangeKernel kernel_HistogramRectAllChannelsReduction"");'), (1664, '  clFinish(histRedKern.mpkCmdQueue);'), (1665, '  if (clStatus != 0) {'), (1666, '    retVal = -1;'), (1667, '  }'), (1668, ''), (1669, '  /* map results back from gpu */'), (1670, '  ptr = clEnqueueMapBuffer(histRedKern.mpkCmdQueue, histogramBuffer, CL_TRUE, CL_MAP_READ, 0,'), (1671, '                           kHistogramSize * bytes_per_pixel * sizeof(int), 0, nullptr, nullptr,'), (1672, '                           &clStatus);'), (1673, '  CHECK_OPENCL(clStatus, ""clEnqueueMapBuffer histogramBuffer"");'), (1674, '  if (clStatus != 0) {'), (1675, '    retVal = -1;'), (1676, '  }'), (1677, '  clEnqueueUnmapMemObject(histRedKern.mpkCmdQueue, histogramBuffer, ptr, 0, nullptr, nullptr);'), (1678, ''), (1679, '  clReleaseMemObject(histogramBuffer);'), (1680, '  clReleaseMemObject(imageBuffer);'), (1681, '  return retVal;'), (1682, '}'), (1683, ''), (1684, '/*************************************************************************'), (1685, ' * Threshold the rectangle, taking everything except the image buffer pointer'), (1686, ' * from the class, using thresholds/hi_values to the output IMAGE.'), (1687, ' * only supports 1 or 4 channels'), (1688, ' ************************************************************************/'), (1689, 'int OpenclDevice::ThresholdRectToPixOCL(unsigned char *imageData, int bytes_per_pixel,'), (1690, '                                        int bytes_per_line, int *thresholds, int *hi_values,'), (1691, '                                        Image *pix, int height, int width, int top, int left) {'), (1692, '  int retVal = 0;'), (1693, '  /* create pix result buffer */'), (1694, '  *pix = pixCreate(width, height, 1);'), (1695, '  uint32_t *pixData = pixGetData(*pix);'), (1696, '  int wpl = pixGetWpl(*pix);'), (1697, '  int pixSize = wpl * height * sizeof(uint32_t); // number of pixels'), (1698, ''), (1699, '  cl_int clStatus;'), (1700, '  KernelEnv rEnv;'), (1701, '  SetKernelEnv(&rEnv);'), (1702, ''), (1703, '  /* setup work group size parameters */'), (1704, '  int block_size = 256;'), (1705, '  cl_uint numCUs = 6;'), (1706, '  clStatus = clGetDeviceInfo(gpuEnv.mpDevID, CL_DEVICE_MAX_COMPUTE_UNITS, sizeof(numCUs), &numCUs,'), (1707, '                             nullptr);'), (1708, '  CHECK_OPENCL(clStatus, ""clCreateBuffer imageBuffer"");'), (1709, ''), (1710, '  int requestedOccupancy = 10;'), (1711, '  int numWorkGroups = numCUs * requestedOccupancy;'), (1712, '  int numThreads = block_size * numWorkGroups;'), (1713, '  size_t local_work_size[] = {(size_t)block_size};'), (1714, '  size_t global_work_size[] = {(size_t)numThreads};'), (1715, ''), (1716, '  /* map imagedata to device as read only */'), (1717, '  // USE_HOST_PTR uses onion+ bus which is slowest option; also happens to be'), (1718, ""  // coherent which we don't need.""), (1719, '  // faster option would be to allocate initial image buffer'), (1720, '  // using a garlic bus memory type'), (1721, '  cl_mem imageBuffer ='), (1722, '      clCreateBuffer(rEnv.mpkContext, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,'), (1723, '                     width * height * bytes_per_pixel * sizeof(char), imageData, &clStatus);'), (1724, '  CHECK_OPENCL(clStatus, ""clCreateBuffer imageBuffer"");'), (1725, ''), (1726, '  /* map pix as write only */'), (1727, '  pixThBuffer = clCreateBuffer(rEnv.mpkContext, CL_MEM_READ_WRITE | CL_MEM_USE_HOST_PTR, pixSize,'), (1728, '                               pixData, &clStatus);'), (1729, '  CHECK_OPENCL(clStatus, ""clCreateBuffer pix"");'), (1730, ''), (1731, '  /* map thresholds and hi_values */'), (1732, '  cl_mem thresholdsBuffer = clCreateBuffer(rEnv.mpkContext, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,'), (1733, '                                           bytes_per_pixel * sizeof(int), thresholds, &clStatus);'), (1734, '  CHECK_OPENCL(clStatus, ""clCreateBuffer thresholdBuffer"");'), (1735, '  cl_mem hiValuesBuffer = clCreateBuffer(rEnv.mpkContext, CL_MEM_READ_ONLY | CL_MEM_USE_HOST_PTR,'), (1736, '                                         bytes_per_pixel * sizeof(int), hi_values, &clStatus);'), (1737, '  CHECK_OPENCL(clStatus, ""clCreateBuffer hiValuesBuffer"");'), (1738, ''), (1739, '  /* compile kernel */'), (1740, '  if (bytes_per_pixel == 4) {'), (1741, '    rEnv.mpkKernel = clCreateKernel(rEnv.mpkProgram, ""kernel_ThresholdRectToPix"", &clStatus);'), (1742, '    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_ThresholdRectToPix"");'), (1743, '  } else {'), (1744, '    rEnv.mpkKernel ='), (1745, '        clCreateKernel(rEnv.mpkProgram, ""kernel_ThresholdRectToPix_OneChan"", &clStatus);'), (1746, '    CHECK_OPENCL(clStatus, ""clCreateKernel kernel_ThresholdRectToPix_OneChan"");'), (1747, '  }'), (1748, ''), (1749, '  /* set kernel arguments */'), (1750, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 0, sizeof(cl_mem), &imageBuffer);'), (1751, '  CHECK_OPENCL(clStatus, ""clSetKernelArg imageBuffer"");'), (1752, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 1, sizeof(int), &height);'), (1753, '  CHECK_OPENCL(clStatus, ""clSetKernelArg height"");'), (1754, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 2, sizeof(int), &width);'), (1755, '  CHECK_OPENCL(clStatus, ""clSetKernelArg width"");'), (1756, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 3, sizeof(int), &wpl);'), (1757, '  CHECK_OPENCL(clStatus, ""clSetKernelArg wpl"");'), (1758, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 4, sizeof(cl_mem), &thresholdsBuffer);'), (1759, '  CHECK_OPENCL(clStatus, ""clSetKernelArg thresholdsBuffer"");'), (1760, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 5, sizeof(cl_mem), &hiValuesBuffer);'), (1761, '  CHECK_OPENCL(clStatus, ""clSetKernelArg hiValuesBuffer"");'), (1762, '  clStatus = clSetKernelArg(rEnv.mpkKernel, 6, sizeof(cl_mem), &pixThBuffer);'), (1763, '  CHECK_OPENCL(clStatus, ""clSetKernelArg pixThBuffer"");'), (1764, ''), (1765, '  /* launch kernel & wait */'), (1766, '  clStatus = clEnqueueNDRangeKernel(rEnv.mpkCmdQueue, rEnv.mpkKernel, 1, nullptr, global_work_size,'), (1767, '                                    local_work_size, 0, nullptr, nullptr);'), (1768, '  CHECK_OPENCL(clStatus, ""clEnqueueNDRangeKernel kernel_ThresholdRectToPix"");'), (1769, '  clFinish(rEnv.mpkCmdQueue);'), (1770, '  if (clStatus != 0) {'), (1771, '    tprintf(""Setting return value to -1\\n"");'), (1772, '    retVal = -1;'), (1773, '  }'), (1774, '  /* map results back from gpu */'), (1775, '  void *ptr = clEnqueueMapBuffer(rEnv.mpkCmdQueue, pixThBuffer, CL_TRUE, CL_MAP_READ, 0, pixSize, 0,'), (1776, '                                 nullptr, nullptr, &clStatus);'), (1777, '  CHECK_OPENCL(clStatus, ""clEnqueueMapBuffer histogramBuffer"");'), (1778, '  clEnqueueUnmapMemObject(rEnv.mpkCmdQueue, pixThBuffer, ptr, 0, nullptr, nullptr);'), (1779, ''), (1780, '  clReleaseMemObject(imageBuffer);'), (1781, '  clReleaseMemObject(thresholdsBuffer);'), (1782, '  clReleaseMemObject(hiValuesBuffer);'), (1783, ''), (1784, '  return retVal;'), (1785, '}'), (1786, ''), (1787, '/******************************************************************************'), (1788, ' * Data Types for Device Selection'), (1789, ' *****************************************************************************/'), (1790, ''), (1791, 'struct TessScoreEvaluationInputData {'), (1792, '  int height;'), (1793, '  int width;'), (1794, '  int numChannels;'), (1795, '  unsigned char *imageData;'), (1796, '  Image pix;'), (1797, '};'), (1798, ''), (1799, 'static void populateTessScoreEvaluationInputData(TessScoreEvaluationInputData *input) {'), (1800, '  srand(1);'), (1801, '  // 8.5x11 inches @ 300dpi rounded to clean multiples'), (1802, '  int height = 3328; // %256'), (1803, '  int width = 2560;  // %512'), (1804, '  int numChannels = 4;'), (1805, '  input->height = height;'), (1806, '  input->width = width;'), (1807, '  input->numChannels = numChannels;'), (1808, '  unsigned char(*imageData4)[4] = (unsigned char(*)[4])malloc('), (1809, '      height * width * numChannels * sizeof(unsigned char)); // new unsigned char[4][height*width];'), (1810, '  input->imageData = (unsigned char *)&imageData4[0];'), (1811, ''), (1812, '  // zero out image'), (1813, '  unsigned char pixelWhite[4] = {0, 0, 0, 255};'), (1814, '  unsigned char pixelBlack[4] = {255, 255, 255, 255};'), (1815, '  for (int p = 0; p < height * width; p++) {'), (1816, '    // unsigned char tmp[4] = imageData4[0];'), (1817, '    imageData4[p][0] = pixelWhite[0];'), (1818, '    imageData4[p][1] = pixelWhite[1];'), (1819, '    imageData4[p][2] = pixelWhite[2];'), (1820, '    imageData4[p][3] = pixelWhite[3];'), (1821, '  }'), (1822, '  // random lines to be eliminated'), (1823, '  int maxLineWidth = 64; // pixels wide'), (1824, '  int numLines = 10;'), (1825, '  // vertical lines'), (1826, '  for (int i = 0; i < numLines; i++) {'), (1827, '    int lineWidth = rand() % maxLineWidth;'), (1828, '    int vertLinePos = lineWidth + rand() % (width - 2 * lineWidth);'), (1829, '    // tprintf(""[PI] VerticalLine @ %i (w=%i)\\n"", vertLinePos, lineWidth);'), (1830, '    for (int row = vertLinePos - lineWidth / 2; row < vertLinePos + lineWidth / 2; row++) {'), (1831, '      for (int col = 0; col < height; col++) {'), (1832, '        // imageData4[row*width+col] = pixelBlack;'), (1833, '        imageData4[row * width + col][0] = pixelBlack[0];'), (1834, '        imageData4[row * width + col][1] = pixelBlack[1];'), (1835, '        imageData4[row * width + col][2] = pixelBlack[2];'), (1836, '        imageData4[row * width + col][3] = pixelBlack[3];'), (1837, '      }'), (1838, '    }'), (1839, '  }'), (1840, '  // horizontal lines'), (1841, '  for (int i = 0; i < numLines; i++) {'), (1842, '    int lineWidth = rand() % maxLineWidth;'), (1843, '    int horLinePos = lineWidth + rand() % (height - 2 * lineWidth);'), (1844, '    // tprintf(""[PI] HorizontalLine @ %i (w=%i)\\n"", horLinePos, lineWidth);'), (1845, '    for (int row = 0; row < width; row++) {'), (1846, '      for (int col = horLinePos - lineWidth / 2; col < horLinePos + lineWidth / 2;'), (1847, '           col++) { // for (int row = vertLinePos-lineWidth/2; row <'), (1848, '                    // vertLinePos+lineWidth/2; row++) {'), (1849, '        // tprintf(""[PI] HoizLine pix @ (%3i, %3i)\\n"", row, col);'), (1850, '        // imageData4[row*width+col] = pixelBlack;'), (1851, '        imageData4[row * width + col][0] = pixelBlack[0];'), (1852, '        imageData4[row * width + col][1] = pixelBlack[1];'), (1853, '        imageData4[row * width + col][2] = pixelBlack[2];'), (1854, '        imageData4[row * width + col][3] = pixelBlack[3];'), (1855, '      }'), (1856, '    }'), (1857, '  }'), (1858, '  // spots (noise, squares)'), (1859, '  float fractionBlack = 0.1; // how much of the image should be blackened'), (1860, '  int numSpots = (height * width) * fractionBlack / (maxLineWidth * maxLineWidth / 2 / 2);'), (1861, '  for (int i = 0; i < numSpots; i++) {'), (1862, '    int lineWidth = rand() % maxLineWidth;'), (1863, '    int col = lineWidth + rand() % (width - 2 * lineWidth);'), (1864, '    int row = lineWidth + rand() % (height - 2 * lineWidth);'), (1865, '    // tprintf(""[PI] Spot[%i/%i] @ (%3i, %3i)\\n"", i, numSpots, row, col );'), (1866, '    for (int r = row - lineWidth / 2; r < row + lineWidth / 2; r++) {'), (1867, '      for (int c = col - lineWidth / 2; c < col + lineWidth / 2; c++) {'), (1868, '        // tprintf(""[PI] \\tSpot[%i/%i] @ (%3i, %3i)\\n"", i, numSpots, r, c );'), (1869, '        // imageData4[row*width+col] = pixelBlack;'), (1870, '        imageData4[r * width + c][0] = pixelBlack[0];'), (1871, '        imageData4[r * width + c][1] = pixelBlack[1];'), (1872, '        imageData4[r * width + c][2] = pixelBlack[2];'), (1873, '        imageData4[r * width + c][3] = pixelBlack[3];'), (1874, '      }'), (1875, '    }'), (1876, '  }'), (1877, ''), (1878, '  input->pix = pixCreate(input->width, input->height, 8 * input->numChannels);'), (1879, '}'), (1880, ''), (1881, 'struct TessDeviceScore {'), (1882, '  float time;   // small time means faster device'), (1883, '  bool clError; // were there any opencl errors'), (1884, '  bool valid;   // was the correct response generated'), (1885, '};'), (1886, ''), (1887, '/******************************************************************************'), (1888, ' * Micro Benchmarks for Device Selection'), (1889, ' *****************************************************************************/'), (1890, ''), (1891, 'static double composeRGBPixelMicroBench(GPUEnv *env, TessScoreEvaluationInputData input,'), (1892, '                                        ds_device_type type) {'), (1893, '  double time = 0;'), (1894, '#  if ON_WINDOWS'), (1895, '  LARGE_INTEGER freq, time_funct_start, time_funct_end;'), (1896, '  QueryPerformanceFrequency(&freq);'), (1897, '#  elif ON_APPLE'), (1898, '  mach_timebase_info_data_t info = {0, 0};'), (1899, '  mach_timebase_info(&info);'), (1900, '  long long start, stop;'), (1901, '#  else'), (1902, '  timespec time_funct_start, time_funct_end;'), (1903, '#  endif'), (1904, '  // input data'), (1905, ""  l_uint32 *tiffdata = (l_uint32 *)input.imageData; // same size and random data; data doesn't""), (1906, '                                                    // change workload'), (1907, ''), (1908, '  // function call'), (1909, '  if (type == DS_DEVICE_OPENCL_DEVICE) {'), (1910, '#  if ON_WINDOWS'), (1911, '    QueryPerformanceCounter(&time_funct_start);'), (1912, '#  elif ON_APPLE'), (1913, '    start = mach_absolute_time();'), (1914, '#  else'), (1915, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);'), (1916, '#  endif'), (1917, ''), (1918, '    OpenclDevice::gpuEnv = *env;'), (1919, '    int wpl = pixGetWpl(input.pix);'), (1920, '    OpenclDevice::pixReadFromTiffKernel(tiffdata, input.width, input.height, wpl, nullptr);'), (1921, '#  if ON_WINDOWS'), (1922, '    QueryPerformanceCounter(&time_funct_end);'), (1923, '    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);'), (1924, '#  elif ON_APPLE'), (1925, '    stop = mach_absolute_time();'), (1926, '    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;'), (1927, '#  else'), (1928, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);'), (1929, '    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +'), (1930, '           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;'), (1931, '#  endif'), (1932, ''), (1933, '  } else {'), (1934, '#  if ON_WINDOWS'), (1935, '    QueryPerformanceCounter(&time_funct_start);'), (1936, '#  elif ON_APPLE'), (1937, '    start = mach_absolute_time();'), (1938, '#  else'), (1939, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);'), (1940, '#  endif'), (1941, '    Image pix = pixCreate(input.width, input.height, 32);'), (1942, '    l_uint32 *pixData = pixGetData(pix);'), (1943, '    int i, j;'), (1944, '    int idx = 0;'), (1945, '    for (i = 0; i < input.height; i++) {'), (1946, '      for (j = 0; j < input.width; j++) {'), (1947, '        l_uint32 tiffword = tiffdata[i * input.width + j];'), (1948, '        l_int32 rval = ((tiffword)&0xff);'), (1949, '        l_int32 gval = (((tiffword) >> 8) & 0xff);'), (1950, '        l_int32 bval = (((tiffword) >> 16) & 0xff);'), (1951, '        l_uint32 value = (rval << 24) | (gval << 16) | (bval << 8);'), (1952, '        pixData[idx] = value;'), (1953, '        idx++;'), (1954, '      }'), (1955, '    }'), (1956, '#  if ON_WINDOWS'), (1957, '    QueryPerformanceCounter(&time_funct_end);'), (1958, '    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);'), (1959, '#  elif ON_APPLE'), (1960, '    stop = mach_absolute_time();'), (1961, '    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;'), (1962, '#  else'), (1963, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);'), (1964, '    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +'), (1965, '           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;'), (1966, '#  endif'), (1967, '    pix.destroy();'), (1968, '  }'), (1969, ''), (1970, '  return time;'), (1971, '}'), (1972, ''), (1973, 'static double histogramRectMicroBench(GPUEnv *env, TessScoreEvaluationInputData input,'), (1974, '                                      ds_device_type type) {'), (1975, '  double time;'), (1976, '#  if ON_WINDOWS'), (1977, '  LARGE_INTEGER freq, time_funct_start, time_funct_end;'), (1978, '  QueryPerformanceFrequency(&freq);'), (1979, '#  elif ON_APPLE'), (1980, '  mach_timebase_info_data_t info = {0, 0};'), (1981, '  mach_timebase_info(&info);'), (1982, '  long long start, stop;'), (1983, '#  else'), (1984, '  timespec time_funct_start, time_funct_end;'), (1985, '#  endif'), (1986, ''), (1987, '  const int left = 0;'), (1988, '  const int top = 0;'), (1989, '  int kHistogramSize = 256;'), (1990, '  int bytes_per_line = input.width * input.numChannels;'), (1991, '  int *histogramAllChannels = new int[kHistogramSize * input.numChannels];'), (1992, '  // function call'), (1993, '  if (type == DS_DEVICE_OPENCL_DEVICE) {'), (1994, '#  if ON_WINDOWS'), (1995, '    QueryPerformanceCounter(&time_funct_start);'), (1996, '#  elif ON_APPLE'), (1997, '    start = mach_absolute_time();'), (1998, '#  else'), (1999, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);'), (2000, '#  endif'), (2001, ''), (2002, '    OpenclDevice::gpuEnv = *env;'), (2003, '    int retVal = OpenclDevice::HistogramRectOCL(input.imageData, input.numChannels, bytes_per_line,'), (2004, '                                                left, top, input.width, input.height,'), (2005, '                                                kHistogramSize, histogramAllChannels);'), (2006, ''), (2007, '#  if ON_WINDOWS'), (2008, '    QueryPerformanceCounter(&time_funct_end);'), (2009, '    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);'), (2010, '#  elif ON_APPLE'), (2011, '    stop = mach_absolute_time();'), (2012, '    if (retVal == 0) {'), (2013, '      time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;'), (2014, '    } else {'), (2015, '      time = FLT_MAX;'), (2016, '    }'), (2017, '#  else'), (2018, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);'), (2019, '    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +'), (2020, '           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;'), (2021, '#  endif'), (2022, '  } else {'), (2023, '    int *histogram = new int[kHistogramSize];'), (2024, '#  if ON_WINDOWS'), (2025, '    QueryPerformanceCounter(&time_funct_start);'), (2026, '#  elif ON_APPLE'), (2027, '    start = mach_absolute_time();'), (2028, '#  else'), (2029, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);'), (2030, '#  endif'), (2031, '    for (int ch = 0; ch < input.numChannels; ++ch) {'), (2032, '      tesseract::HistogramRect(input.pix, input.numChannels, left, top, input.width, input.height,'), (2033, '                               histogram);'), (2034, '    }'), (2035, '#  if ON_WINDOWS'), (2036, '    QueryPerformanceCounter(&time_funct_end);'), (2037, '    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);'), (2038, '#  elif ON_APPLE'), (2039, '    stop = mach_absolute_time();'), (2040, '    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;'), (2041, '#  else'), (2042, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);'), (2043, '    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +'), (2044, '           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;'), (2045, '#  endif'), (2046, '    delete[] histogram;'), (2047, '  }'), (2048, ''), (2049, '  // cleanup'), (2050, '  delete[] histogramAllChannels;'), (2051, '  return time;'), (2052, '}'), (2053, ''), (2054, '// Reproducing the ThresholdRectToPix native version'), (2055, 'static void ThresholdRectToPix_Native(const unsigned char *imagedata, int bytes_per_pixel,'), (2056, '                                      int bytes_per_line, const int *thresholds,'), (2057, '                                      const int *hi_values, Image *pix) {'), (2058, '  int top = 0;'), (2059, '  int left = 0;'), (2060, '  int width = pixGetWidth(*pix);'), (2061, '  int height = pixGetHeight(*pix);'), (2062, ''), (2063, '  *pix = pixCreate(width, height, 1);'), (2064, '  uint32_t *pixdata = pixGetData(*pix);'), (2065, '  int wpl = pixGetWpl(*pix);'), (2066, '  const unsigned char *srcdata = imagedata + top * bytes_per_line + left * bytes_per_pixel;'), (2067, '  for (int y = 0; y < height; ++y) {'), (2068, '    const uint8_t *linedata = srcdata;'), (2069, '    uint32_t *pixline = pixdata + y * wpl;'), (2070, '    for (int x = 0; x < width; ++x, linedata += bytes_per_pixel) {'), (2071, '      bool white_result = true;'), (2072, '      for (int ch = 0; ch < bytes_per_pixel; ++ch) {'), (2073, '        if (hi_values[ch] >= 0 && (linedata[ch] > thresholds[ch]) == (hi_values[ch] == 0)) {'), (2074, '          white_result = false;'), (2075, '          break;'), (2076, '        }'), (2077, '      }'), (2078, '      if (white_result)'), (2079, '        CLEAR_DATA_BIT(pixline, x);'), (2080, '      else'), (2081, '        SET_DATA_BIT(pixline, x);'), (2082, '    }'), (2083, '    srcdata += bytes_per_line;'), (2084, '  }'), (2085, '}'), (2086, ''), (2087, 'static double thresholdRectToPixMicroBench(GPUEnv *env, TessScoreEvaluationInputData input,'), (2088, '                                           ds_device_type type) {'), (2089, '  double time;'), (2090, '#  if ON_WINDOWS'), (2091, '  LARGE_INTEGER freq, time_funct_start, time_funct_end;'), (2092, '  QueryPerformanceFrequency(&freq);'), (2093, '#  elif ON_APPLE'), (2094, '  mach_timebase_info_data_t info = {0, 0};'), (2095, '  mach_timebase_info(&info);'), (2096, '  long long start, stop;'), (2097, '#  else'), (2098, '  timespec time_funct_start, time_funct_end;'), (2099, '#  endif'), (2100, ''), (2101, '  // input data'), (2102, '  unsigned char pixelHi = (unsigned char)255;'), (2103, '  int thresholds[4] = {pixelHi, pixelHi, pixelHi, pixelHi};'), (2104, ''), (2105, '  // Pix* pix = pixCreate(width, height, 1);'), (2106, '  int top = 0;'), (2107, '  int left = 0;'), (2108, '  int bytes_per_line = input.width * input.numChannels;'), (2109, ''), (2110, '  // function call'), (2111, '  if (type == DS_DEVICE_OPENCL_DEVICE) {'), (2112, '#  if ON_WINDOWS'), (2113, '    QueryPerformanceCounter(&time_funct_start);'), (2114, '#  elif ON_APPLE'), (2115, '    start = mach_absolute_time();'), (2116, '#  else'), (2117, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);'), (2118, '#  endif'), (2119, ''), (2120, '    OpenclDevice::gpuEnv = *env;'), (2121, '    int hi_values[4];'), (2122, '    int retVal = OpenclDevice::ThresholdRectToPixOCL('), (2123, '        input.imageData, input.numChannels, bytes_per_line, thresholds, hi_values, &input.pix,'), (2124, '        input.height, input.width, top, left);'), (2125, ''), (2126, '#  if ON_WINDOWS'), (2127, '    QueryPerformanceCounter(&time_funct_end);'), (2128, '    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);'), (2129, '#  elif ON_APPLE'), (2130, '    stop = mach_absolute_time();'), (2131, '    if (retVal == 0) {'), (2132, '      time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;'), (2133, '    } else {'), (2134, '      time = FLT_MAX;'), (2135, '    }'), (2136, ''), (2137, '#  else'), (2138, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);'), (2139, '    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +'), (2140, '           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;'), (2141, '#  endif'), (2142, '  } else {'), (2143, '    tesseract::ImageThresholder thresholder;'), (2144, '    thresholder.SetImage(input.pix);'), (2145, '#  if ON_WINDOWS'), (2146, '    QueryPerformanceCounter(&time_funct_start);'), (2147, '#  elif ON_APPLE'), (2148, '    start = mach_absolute_time();'), (2149, '#  else'), (2150, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);'), (2151, '#  endif'), (2152, '    int hi_values[4] = {};'), (2153, '    ThresholdRectToPix_Native(input.imageData, input.numChannels, bytes_per_line, thresholds,'), (2154, '                              hi_values, &input.pix);'), (2155, ''), (2156, '#  if ON_WINDOWS'), (2157, '    QueryPerformanceCounter(&time_funct_end);'), (2158, '    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);'), (2159, '#  elif ON_APPLE'), (2160, '    stop = mach_absolute_time();'), (2161, '    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;'), (2162, '#  else'), (2163, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);'), (2164, '    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +'), (2165, '           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;'), (2166, '#  endif'), (2167, '  }'), (2168, ''), (2169, '  return time;'), (2170, '}'), (2171, ''), (2172, 'static double getLineMasksMorphMicroBench(GPUEnv *env, TessScoreEvaluationInputData input,'), (2173, '                                          ds_device_type type) {'), (2174, '  double time = 0;'), (2175, '#  if ON_WINDOWS'), (2176, '  LARGE_INTEGER freq, time_funct_start, time_funct_end;'), (2177, '  QueryPerformanceFrequency(&freq);'), (2178, '#  elif ON_APPLE'), (2179, '  mach_timebase_info_data_t info = {0, 0};'), (2180, '  mach_timebase_info(&info);'), (2181, '  long long start, stop;'), (2182, '#  else'), (2183, '  timespec time_funct_start, time_funct_end;'), (2184, '#  endif'), (2185, ''), (2186, '  // input data'), (2187, '  int resolution = 300;'), (2188, '  int wpl = pixGetWpl(input.pix);'), (2189, '  int kThinLineFraction = 20;     // tess constant'), (2190, '  int kMinLineLengthFraction = 4; // tess constant'), (2191, '  int max_line_width = resolution / kThinLineFraction;'), (2192, '  int min_line_length = resolution / kMinLineLengthFraction;'), (2193, '  int closing_brick = max_line_width / 3;'), (2194, ''), (2195, '  // function call'), (2196, '  if (type == DS_DEVICE_OPENCL_DEVICE) {'), (2197, '#  if ON_WINDOWS'), (2198, '    QueryPerformanceCounter(&time_funct_start);'), (2199, '#  elif ON_APPLE'), (2200, '    start = mach_absolute_time();'), (2201, '#  else'), (2202, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);'), (2203, '#  endif'), (2204, '    OpenclDevice::gpuEnv = *env;'), (2205, '    OpenclDevice::initMorphCLAllocations(wpl, input.height, input.pix);'), (2206, '    Image pix_vline = nullptr, pix_hline = nullptr, pix_closed = nullptr;'), (2207, '    OpenclDevice::pixGetLinesCL(nullptr, input.pix, &pix_vline, &pix_hline, &pix_closed, true,'), (2208, '                                closing_brick, closing_brick, max_line_width, max_line_width,'), (2209, '                                min_line_length, min_line_length);'), (2210, ''), (2211, '    OpenclDevice::releaseMorphCLBuffers();'), (2212, ''), (2213, '#  if ON_WINDOWS'), (2214, '    QueryPerformanceCounter(&time_funct_end);'), (2215, '    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);'), (2216, '#  elif ON_APPLE'), (2217, '    stop = mach_absolute_time();'), (2218, '    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;'), (2219, '#  else'), (2220, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);'), (2221, '    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +'), (2222, '           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;'), (2223, '#  endif'), (2224, '  } else {'), (2225, '#  if ON_WINDOWS'), (2226, '    QueryPerformanceCounter(&time_funct_start);'), (2227, '#  elif ON_APPLE'), (2228, '    start = mach_absolute_time();'), (2229, '#  else'), (2230, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_start);'), (2231, '#  endif'), (2232, ''), (2233, '    // native serial code'), (2234, '    Image src_pix = input.pix;'), (2235, '    Image pix_closed = pixCloseBrick(nullptr, src_pix, closing_brick, closing_brick);'), (2236, '    Image pix_solid = pixOpenBrick(nullptr, pix_closed, max_line_width, max_line_width);'), (2237, '    Image pix_hollow = pixSubtract(nullptr, pix_closed, pix_solid);'), (2238, '    pix_solid.destroy();'), (2239, '    Image pix_vline = pixOpenBrick(nullptr, pix_hollow, 1, min_line_length);'), (2240, '    Image pix_hline = pixOpenBrick(nullptr, pix_hollow, min_line_length, 1);'), (2241, '    pix_hline.destroy();'), (2242, '    pix_vline.destroy();'), (2243, '    pix_hollow.destroy();'), (2244, ''), (2245, '#  if ON_WINDOWS'), (2246, '    QueryPerformanceCounter(&time_funct_end);'), (2247, '    time = (time_funct_end.QuadPart - time_funct_start.QuadPart) / (double)(freq.QuadPart);'), (2248, '#  elif ON_APPLE'), (2249, '    stop = mach_absolute_time();'), (2250, '    time = ((stop - start) * (double)info.numer / info.denom) / 1.0E9;'), (2251, '#  else'), (2252, '    clock_gettime(CLOCK_MONOTONIC, &time_funct_end);'), (2253, '    time = (time_funct_end.tv_sec - time_funct_start.tv_sec) * 1.0 +'), (2254, '           (time_funct_end.tv_nsec - time_funct_start.tv_nsec) / 1000000000.0;'), (2255, '#  endif'), (2256, '  }'), (2257, ''), (2258, '  return time;'), (2259, '}'), (2260, ''), (2261, '/******************************************************************************'), (2262, ' * Device Selection'), (2263, ' *****************************************************************************/'), (2264, ''), (2265, '// encode score object as byte string'), (2266, 'static ds_status serializeScore(ds_device *device, uint8_t **serializedScore,'), (2267, '                                unsigned int *serializedScoreSize) {'), (2268, '  *serializedScoreSize = sizeof(TessDeviceScore);'), (2269, '  *serializedScore = new uint8_t[*serializedScoreSize];'), (2270, '  memcpy(*serializedScore, device->score, *serializedScoreSize);'), (2271, '  return DS_SUCCESS;'), (2272, '}'), (2273, ''), (2274, '// parses byte string and stores in score object'), (2275, 'static ds_status deserializeScore(ds_device *device, const uint8_t *serializedScore,'), (2276, '                                  unsigned int serializedScoreSize) {'), (2277, '  // check that serializedScoreSize == sizeof(TessDeviceScore);'), (2278, '  device->score = new TessDeviceScore;'), (2279, '  memcpy(device->score, serializedScore, serializedScoreSize);'), (2280, '  return DS_SUCCESS;'), (2281, '}'), (2282, ''), (2283, 'static ds_status releaseScore(TessDeviceScore *score) {'), (2284, '  delete score;'), (2285, '  return DS_SUCCESS;'), (2286, '}'), (2287, ''), (2288, '// evaluate devices'), (2289, 'static ds_status evaluateScoreForDevice(ds_device *device, void *inputData) {'), (2290, '  // overwrite statuc gpuEnv w/ current device'), (2291, '  // so native opencl calls can be used; they use static gpuEnv'), (2292, '  tprintf(""\\n[DS] Device: \\""%s\\"" (%s) evaluation...\\n"", device->oclDeviceName,'), (2293, '          device->type == DS_DEVICE_OPENCL_DEVICE ? ""OpenCL"" : ""Native"");'), (2294, '  GPUEnv *env = nullptr;'), (2295, '  if (device->type == DS_DEVICE_OPENCL_DEVICE) {'), (2296, '    env = &OpenclDevice::gpuEnv;'), (2297, '    memset(env, 0, sizeof(*env));'), (2298, '    // tprintf(""[DS] populating tmp GPUEnv from device\\n"");'), (2299, '    populateGPUEnvFromDevice(env, device->oclDeviceID);'), (2300, '    env->mnFileCount = 0; // argc;'), (2301, '    env->mnKernelCount = 0UL;'), (2302, '    // tprintf(""[DS] compiling kernels for tmp GPUEnv\\n"");'), (2303, '    OpenclDevice::CompileKernelFile(env, """");'), (2304, '  }'), (2305, ''), (2306, '  TessScoreEvaluationInputData *input = static_cast<TessScoreEvaluationInputData *>(inputData);'), (2307, ''), (2308, '  // pixReadTiff'), (2309, '  double composeRGBPixelTime = composeRGBPixelMicroBench(env, *input, device->type);'), (2310, ''), (2311, '  // HistogramRect'), (2312, '  double histogramRectTime = histogramRectMicroBench(env, *input, device->type);'), (2313, ''), (2314, '  // ThresholdRectToPix'), (2315, '  double thresholdRectToPixTime = thresholdRectToPixMicroBench(env, *input, device->type);'), (2316, ''), (2317, '  // getLineMasks'), (2318, '  double getLineMasksMorphTime = getLineMasksMorphMicroBench(env, *input, device->type);'), (2319, ''), (2320, '  // weigh times (% of cpu time)'), (2321, '  // these weights should be the % execution time that the native cpu code took'), (2322, '  float composeRGBPixelWeight = 1.2f;'), (2323, '  float histogramRectWeight = 2.4f;'), (2324, '  float thresholdRectToPixWeight = 4.5f;'), (2325, '  float getLineMasksMorphWeight = 5.0f;'), (2326, ''), (2327, '  float weightedTime = composeRGBPixelWeight * composeRGBPixelTime +'), (2328, '                       histogramRectWeight * histogramRectTime +'), (2329, '                       thresholdRectToPixWeight * thresholdRectToPixTime +'), (2330, '                       getLineMasksMorphWeight * getLineMasksMorphTime;'), (2331, '  device->score = new TessDeviceScore;'), (2332, '  device->score->time = weightedTime;'), (2333, ''), (2334, '  tprintf(""[DS] Device: \\""%s\\"" (%s) evaluated\\n"", device->oclDeviceName,'), (2335, '          device->type == DS_DEVICE_OPENCL_DEVICE ? ""OpenCL"" : ""Native"");'), (2336, '  tprintf(""[DS]%25s: %f (w=%.1f)\\n"", ""composeRGBPixel"", composeRGBPixelTime, composeRGBPixelWeight);'), (2337, '  tprintf(""[DS]%25s: %f (w=%.1f)\\n"", ""HistogramRect"", histogramRectTime, histogramRectWeight);'), (2338, '  tprintf(""[DS]%25s: %f (w=%.1f)\\n"", ""ThresholdRectToPix"", thresholdRectToPixTime,'), (2339, '          thresholdRectToPixWeight);'), (2340, '  tprintf(""[DS]%25s: %f (w=%.1f)\\n"", ""getLineMasksMorph"", getLineMasksMorphTime,'), (2341, '          getLineMasksMorphWeight);'), (2342, '  tprintf(""[DS]%25s: %f\\n"", ""Score"", device->score->time);'), (2343, '  return DS_SUCCESS;'), (2344, '}'), (2345, ''), (2346, '// initial call to select device'), (2347, 'ds_device OpenclDevice::getDeviceSelection() {'), (2348, '  if (!deviceIsSelected) {'), (2349, '    // check if opencl is available at runtime'), (2350, '    if (1 == LoadOpencl()) {'), (2351, '      // opencl is available'), (2352, '      // setup devices'), (2353, '      ds_status status;'), (2354, '      ds_profile *profile;'), (2355, '      status = initDSProfile(&profile, ""v0.1"");'), (2356, '      // try reading scores from file'), (2357, '      const char *fileName = ""tesseract_opencl_profile_devices.dat"";'), (2358, '      status = readProfileFromFile(profile, deserializeScore, fileName);'), (2359, '      if (status != DS_SUCCESS) {'), (2360, '        // need to run evaluation'), (2361, '        tprintf(""[DS] Profile file not available (%s); performing profiling.\\n"", fileName);'), (2362, ''), (2363, '        // create input data'), (2364, '        TessScoreEvaluationInputData input;'), (2365, '        populateTessScoreEvaluationInputData(&input);'), (2366, '        // perform evaluations'), (2367, '        unsigned int numUpdates;'), (2368, '        status ='), (2369, '            profileDevices(profile, DS_EVALUATE_ALL, evaluateScoreForDevice, &input, &numUpdates);'), (2370, '        // write scores to file'), (2371, '        if (status == DS_SUCCESS) {'), (2372, '          status = writeProfileToFile(profile, serializeScore, fileName);'), (2373, '          if (status == DS_SUCCESS) {'), (2374, '            tprintf(""[DS] Scores written to file (%s).\\n"", fileName);'), (2375, '          } else {'), (2376, '            tprintf('), (2377, '                ""[DS] Error saving scores to file (%s); scores not written to ""'), (2378, '                ""file.\\n"",'), (2379, '                fileName);'), (2380, '          }'), (2381, '        } else {'), (2382, '          tprintf('), (2383, '              ""[DS] Unable to evaluate performance; scores not written to ""'), (2384, '              ""file.\\n"");'), (2385, '        }'), (2386, '      } else {'), (2387, '        tprintf(""[DS] Profile read from file (%s).\\n"", fileName);'), (2388, '      }'), (2389, ''), (2390, '      // we now have device scores either from file or evaluation'), (2391, '      // select fastest using custom Tesseract selection algorithm'), (2392, '      float bestTime = FLT_MAX; // begin search with worst possible time'), (2393, '      int bestDeviceIdx = -1;'), (2394, '      for (unsigned d = 0; d < profile->numDevices; d++) {'), (2395, '        ds_device device = profile->devices[d];'), (2396, '        if (device.score == nullptr)'), (2397, '          continue;'), (2398, '        TessDeviceScore score = *device.score;'), (2399, ''), (2400, '        float time = score.time;'), (2401, '        tprintf(""[DS] Device[%u] %i:%s score is %f\\n"", d + 1, device.type, device.oclDeviceName,'), (2402, '                time);'), (2403, '        if (time < bestTime) {'), (2404, '          bestTime = time;'), (2405, '          bestDeviceIdx = d;'), (2406, '        }'), (2407, '      }'), (2408, '      if (bestDeviceIdx >= 0) {'), (2409, '        tprintf('), (2410, '            ""[DS] Selected Device[%i]: \\""%s\\"" (%s)\\n"", bestDeviceIdx + 1,'), (2411, '            profile->devices[bestDeviceIdx].oclDeviceName,'), (2412, '            profile->devices[bestDeviceIdx].type == DS_DEVICE_OPENCL_DEVICE ? ""OpenCL"" : ""Native"");'), (2413, '      }'), (2414, '      // cleanup'), (2415, '      // TODO: call destructor for profile object?'), (2416, ''), (2417, '      bool overridden = false;'), (2418, '      char *overrideDeviceStr = getenv(""TESSERACT_OPENCL_DEVICE"");'), (2419, '      if (overrideDeviceStr != nullptr) {'), (2420, '        int overrideDeviceIdx = atoi(overrideDeviceStr);'), (2421, '        if (overrideDeviceIdx > 0 && overrideDeviceIdx <= profile->numDevices) {'), (2422, '          tprintf('), (2423, '              ""[DS] Overriding Device Selection (TESSERACT_OPENCL_DEVICE=%s, ""'), (2424, '              ""%i)\\n"",'), (2425, '              overrideDeviceStr, overrideDeviceIdx);'), (2426, '          bestDeviceIdx = overrideDeviceIdx - 1;'), (2427, '          overridden = true;'), (2428, '        } else {'), (2429, '          tprintf('), (2430, '              ""[DS] Ignoring invalid TESSERACT_OPENCL_DEVICE=%s ([1,%i] are ""'), (2431, '              ""valid devices).\\n"",'), (2432, '              overrideDeviceStr, profile->numDevices);'), (2433, '        }'), (2434, '      }'), (2435, ''), (2436, '      if (overridden) {'), (2437, '        tprintf('), (2438, '            ""[DS] Overridden Device[%i]: \\""%s\\"" (%s)\\n"", bestDeviceIdx + 1,'), (2439, '            profile->devices[bestDeviceIdx].oclDeviceName,'), (2440, '            profile->devices[bestDeviceIdx].type == DS_DEVICE_OPENCL_DEVICE ? ""OpenCL"" : ""Native"");'), (2441, '      }'), (2442, '      selectedDevice = profile->devices[bestDeviceIdx];'), (2443, '      // cleanup'), (2444, '      releaseDSProfile(profile, releaseScore);'), (2445, '    } else {'), (2446, ""      // opencl isn't available at runtime, select native cpu device""), (2447, '      tprintf(""[DS] OpenCL runtime not available.\\n"");'), (2448, '      selectedDevice.type = DS_DEVICE_NATIVE_CPU;'), (2449, '      selectedDevice.oclDeviceName = ""(null)"";'), (2450, '      selectedDevice.score = nullptr;'), (2451, '      selectedDevice.oclDeviceID = nullptr;'), (2452, '      selectedDevice.oclDriverVersion = nullptr;'), (2453, '    }'), (2454, '    deviceIsSelected = true;'), (2455, '  }'), (2456, '  return selectedDevice;'), (2457, '}'), (2458, ''), (2459, 'bool OpenclDevice::selectedDeviceIsOpenCL() {'), (2460, '  ds_device device = getDeviceSelection();'), (2461, '  return (device.type == DS_DEVICE_OPENCL_DEVICE);'), (2462, '}'), (2463, ''), (2464, '} // namespace'), (2465, ''), (2466, '#endif')]}",yes
src\opencl\openclwrapper.h,,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,179 +0,0 @@
-// Licensed under the Apache License, Version 2.0 (the ""License"");
-// you may not use this file except in compliance with the License.
-// You may obtain a copy of the License at
-// http://www.apache.org/licenses/LICENSE-2.0
-// Unless required by applicable law or agreed to in writing, software
-// distributed under the License is distributed on an ""AS IS"" BASIS,
-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-// See the License for the specific language governing permissions and
-// limitations under the License.
-
-#ifndef TESSERACT_OPENCL_OPENCLWRAPPER_H_
-#define TESSERACT_OPENCL_OPENCLWRAPPER_H_
-
-#include <allheaders.h>
-#include <cstdio>
-#include ""pix.h""
-#include ""tprintf.h""
-
-// including CL/cl.h doesn't occur until USE_OPENCL defined below
-
-/**************************************************************************
- * enable/disable use of OpenCL
- **************************************************************************/
-
-#ifdef USE_OPENCL
-
-#  ifdef __APPLE__
-#    include <OpenCL/cl.h>
-#  else
-#    include <CL/cl.h>
-#  endif
-
-namespace tesseract {
-
-class Image;
-struct TessDeviceScore;
-
-// device type
-enum ds_device_type { DS_DEVICE_NATIVE_CPU = 0, DS_DEVICE_OPENCL_DEVICE };
-
-struct ds_device {
-  ds_device_type type;
-  cl_device_id oclDeviceID;
-  char *oclDeviceName;
-  char *oclDriverVersion;
-  // a pointer to the score data, the content/format is application defined.
-  TessDeviceScore *score;
-};
-
-#  ifndef strcasecmp
-#    define strcasecmp strcmp
-#  endif
-
-#  define MAX_KERNEL_STRING_LEN 64
-#  define MAX_CLFILE_NUM 50
-#  define MAX_CLKERNEL_NUM 200
-#  define MAX_KERNEL_NAME_LEN 64
-#  define CL_QUEUE_THREAD_HANDLE_AMD 0x403E
-#  define GROUPSIZE_X 16
-#  define GROUPSIZE_Y 16
-#  define GROUPSIZE_HMORX 256
-#  define GROUPSIZE_HMORY 1
-
-struct KernelEnv {
-  cl_context mpkContext;
-  cl_command_queue mpkCmdQueue;
-  cl_program mpkProgram;
-  cl_kernel mpkKernel;
-  char mckKernelName[150];
-};
-
-struct OpenCLEnv {
-  cl_platform_id mpOclPlatformID;
-  cl_context mpOclContext;
-  cl_device_id mpOclDevsID;
-  cl_command_queue mpOclCmdQueue;
-};
-typedef int (*cl_kernel_function)(void **userdata, KernelEnv *kenv);
-
-#  define CHECK_OPENCL(status, name)                                     \
-    if (status != CL_SUCCESS) {                                          \
-      tprintf(""OpenCL error code is %d at   when %s .\n"", status, name); \
-    }
-
-struct GPUEnv {
-  // share vb in all modules in hb library
-  cl_platform_id mpPlatformID;
-  cl_device_type mDevType;
-  cl_context mpContext;
-  cl_device_id *mpArryDevsID;
-  cl_device_id mpDevID;
-  cl_command_queue mpCmdQueue;
-  cl_kernel mpArryKernels[MAX_CLFILE_NUM];
-  cl_program mpArryPrograms[MAX_CLFILE_NUM];  // one program object maps one
-                                              // kernel source file
-  char mArryKnelSrcFile[MAX_CLFILE_NUM][256], // the max len of kernel file name is 256
-      mArrykernelNames[MAX_CLKERNEL_NUM][MAX_KERNEL_STRING_LEN + 1];
-  cl_kernel_function mpArryKnelFuncs[MAX_CLKERNEL_NUM];
-  int mnKernelCount, mnFileCount, // only one kernel file
-      mnIsUserCreated;            // 1: created , 0:no create and needed to create by
-                                  // opencl wrapper
-  int mnKhrFp64Flag;
-  int mnAmdFp64Flag;
-};
-
-class OpenclDevice {
-public:
-  static GPUEnv gpuEnv;
-  static int isInited;
-  OpenclDevice();
-  ~OpenclDevice();
-  static int InitEnv();                  // load dll, call InitOpenclRunEnv(0)
-  static int InitOpenclRunEnv(int argc); // RegistOpenclKernel, double flags, compile kernels
-  static int InitOpenclRunEnv_DeviceSelection(
-      int argc); // RegistOpenclKernel, double flags, compile kernels
-  static int RegistOpenclKernel();
-  static int ReleaseOpenclRunEnv();
-  static int ReleaseOpenclEnv(GPUEnv *gpuInfo);
-  static int CompileKernelFile(GPUEnv *gpuInfo, const char *buildOption);
-  static int CachedOfKernerPrg(const GPUEnv *gpuEnvCached, const char *clFileName);
-  static int GeneratBinFromKernelSource(cl_program program, const char *clFileName);
-  static int WriteBinaryToFile(const char *fileName, const char *birary, size_t numBytes);
-  static int BinaryGenerated(const char *clFileName, FILE **fhandle);
-  // static int CompileKernelFile( const char *filename, GPUEnv *gpuInfo, const
-  // char *buildOption );
-  static l_uint32 *pixReadFromTiffKernel(l_uint32 *tiffdata, l_int32 w, l_int32 h, l_int32 wpl,
-                                         l_uint32 *line);
-  static int composeRGBPixelCl(int *tiffdata, int *line, int h, int w);
-
-  /* OpenCL implementations of Morphological operations*/
-
-  // Initialization of OCL buffers used in Morph operations
-  static int initMorphCLAllocations(l_int32 wpl, l_int32 h, Image pixs);
-  static void releaseMorphCLBuffers();
-
-  static void pixGetLinesCL(Image pixd, Image pixs, Image *pix_vline, Image *pix_hline, Image *pixClosed,
-                            bool getpixClosed, l_int32 close_hsize, l_int32 close_vsize,
-                            l_int32 open_hsize, l_int32 open_vsize, l_int32 line_hsize,
-                            l_int32 line_vsize);
-
-  // int InitOpenclAttr( OpenCLEnv * env );
-  // int ReleaseKernel( KernelEnv * env );
-  static int SetKernelEnv(KernelEnv *envInfo);
-  // int CreateKernel( char * kernelname, KernelEnv * env );
-  // int RunKernel( const char *kernelName, void **userdata );
-  // int ConvertToString( const char *filename, char **source );
-  // int CheckKernelName( KernelEnv *envInfo, const char *kernelName );
-  // int RegisterKernelWrapper( const char *kernelName, cl_kernel_function
-  // function ); int RunKernelWrapper( cl_kernel_function function, const char *
-  // kernelName, void **usrdata ); int GetKernelEnvAndFunc( const char
-  // *kernelName, KernelEnv *env, cl_kernel_function *function );
-
-  static int LoadOpencl();
-#  ifdef WIN32
-  // static int OpenclInite();
-  static void FreeOpenclDll();
-#  endif
-
-  inline static int AddKernelConfig(int kCount, const char *kName);
-
-  /* for binarization */
-  static int HistogramRectOCL(void *imagedata, int bytes_per_pixel, int bytes_per_line, int left,
-                              int top, int width, int height, int kHistogramSize,
-                              int *histogramAllChannels);
-
-  static int ThresholdRectToPixOCL(unsigned char *imagedata, int bytes_per_pixel,
-                                   int bytes_per_line, int *thresholds, int *hi_values, Image *pix,
-                                   int rect_height, int rect_width, int rect_top, int rect_left);
-
-  static ds_device getDeviceSelection();
-  static ds_device selectedDevice;
-  static bool deviceIsSelected;
-  static bool selectedDeviceIsOpenCL();
-};
-
-}
-
-#endif // USE_OPENCL
-#endif // TESSERACT_OPENCL_OPENCLWRAPPER_H_
","{'added': [], 'deleted': [(1, '// Licensed under the Apache License, Version 2.0 (the ""License"");'), (2, '// you may not use this file except in compliance with the License.'), (3, '// You may obtain a copy of the License at'), (4, '// http://www.apache.org/licenses/LICENSE-2.0'), (5, '// Unless required by applicable law or agreed to in writing, software'), (6, '// distributed under the License is distributed on an ""AS IS"" BASIS,'), (7, '// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (8, '// See the License for the specific language governing permissions and'), (9, '// limitations under the License.'), (10, ''), (11, '#ifndef TESSERACT_OPENCL_OPENCLWRAPPER_H_'), (12, '#define TESSERACT_OPENCL_OPENCLWRAPPER_H_'), (13, ''), (14, '#include <allheaders.h>'), (15, '#include <cstdio>'), (16, '#include ""pix.h""'), (17, '#include ""tprintf.h""'), (18, ''), (19, ""// including CL/cl.h doesn't occur until USE_OPENCL defined below""), (20, ''), (21, '/**************************************************************************'), (22, ' * enable/disable use of OpenCL'), (23, ' **************************************************************************/'), (24, ''), (25, '#ifdef USE_OPENCL'), (26, ''), (27, '#  ifdef __APPLE__'), (28, '#    include <OpenCL/cl.h>'), (29, '#  else'), (30, '#    include <CL/cl.h>'), (31, '#  endif'), (32, ''), (33, 'namespace tesseract {'), (34, ''), (35, 'class Image;'), (36, 'struct TessDeviceScore;'), (37, ''), (38, '// device type'), (39, 'enum ds_device_type { DS_DEVICE_NATIVE_CPU = 0, DS_DEVICE_OPENCL_DEVICE };'), (40, ''), (41, 'struct ds_device {'), (42, '  ds_device_type type;'), (43, '  cl_device_id oclDeviceID;'), (44, '  char *oclDeviceName;'), (45, '  char *oclDriverVersion;'), (46, '  // a pointer to the score data, the content/format is application defined.'), (47, '  TessDeviceScore *score;'), (48, '};'), (49, ''), (50, '#  ifndef strcasecmp'), (51, '#    define strcasecmp strcmp'), (52, '#  endif'), (53, ''), (54, '#  define MAX_KERNEL_STRING_LEN 64'), (55, '#  define MAX_CLFILE_NUM 50'), (56, '#  define MAX_CLKERNEL_NUM 200'), (57, '#  define MAX_KERNEL_NAME_LEN 64'), (58, '#  define CL_QUEUE_THREAD_HANDLE_AMD 0x403E'), (59, '#  define GROUPSIZE_X 16'), (60, '#  define GROUPSIZE_Y 16'), (61, '#  define GROUPSIZE_HMORX 256'), (62, '#  define GROUPSIZE_HMORY 1'), (63, ''), (64, 'struct KernelEnv {'), (65, '  cl_context mpkContext;'), (66, '  cl_command_queue mpkCmdQueue;'), (67, '  cl_program mpkProgram;'), (68, '  cl_kernel mpkKernel;'), (69, '  char mckKernelName[150];'), (70, '};'), (71, ''), (72, 'struct OpenCLEnv {'), (73, '  cl_platform_id mpOclPlatformID;'), (74, '  cl_context mpOclContext;'), (75, '  cl_device_id mpOclDevsID;'), (76, '  cl_command_queue mpOclCmdQueue;'), (77, '};'), (78, 'typedef int (*cl_kernel_function)(void **userdata, KernelEnv *kenv);'), (79, ''), (80, '#  define CHECK_OPENCL(status, name)                                     \\'), (81, '    if (status != CL_SUCCESS) {                                          \\'), (82, '      tprintf(""OpenCL error code is %d at   when %s .\\n"", status, name); \\'), (83, '    }'), (84, ''), (85, 'struct GPUEnv {'), (86, '  // share vb in all modules in hb library'), (87, '  cl_platform_id mpPlatformID;'), (88, '  cl_device_type mDevType;'), (89, '  cl_context mpContext;'), (90, '  cl_device_id *mpArryDevsID;'), (91, '  cl_device_id mpDevID;'), (92, '  cl_command_queue mpCmdQueue;'), (93, '  cl_kernel mpArryKernels[MAX_CLFILE_NUM];'), (94, '  cl_program mpArryPrograms[MAX_CLFILE_NUM];  // one program object maps one'), (95, '                                              // kernel source file'), (96, '  char mArryKnelSrcFile[MAX_CLFILE_NUM][256], // the max len of kernel file name is 256'), (97, '      mArrykernelNames[MAX_CLKERNEL_NUM][MAX_KERNEL_STRING_LEN + 1];'), (98, '  cl_kernel_function mpArryKnelFuncs[MAX_CLKERNEL_NUM];'), (99, '  int mnKernelCount, mnFileCount, // only one kernel file'), (100, '      mnIsUserCreated;            // 1: created , 0:no create and needed to create by'), (101, '                                  // opencl wrapper'), (102, '  int mnKhrFp64Flag;'), (103, '  int mnAmdFp64Flag;'), (104, '};'), (105, ''), (106, 'class OpenclDevice {'), (107, 'public:'), (108, '  static GPUEnv gpuEnv;'), (109, '  static int isInited;'), (110, '  OpenclDevice();'), (111, '  ~OpenclDevice();'), (112, '  static int InitEnv();                  // load dll, call InitOpenclRunEnv(0)'), (113, '  static int InitOpenclRunEnv(int argc); // RegistOpenclKernel, double flags, compile kernels'), (114, '  static int InitOpenclRunEnv_DeviceSelection('), (115, '      int argc); // RegistOpenclKernel, double flags, compile kernels'), (116, '  static int RegistOpenclKernel();'), (117, '  static int ReleaseOpenclRunEnv();'), (118, '  static int ReleaseOpenclEnv(GPUEnv *gpuInfo);'), (119, '  static int CompileKernelFile(GPUEnv *gpuInfo, const char *buildOption);'), (120, '  static int CachedOfKernerPrg(const GPUEnv *gpuEnvCached, const char *clFileName);'), (121, '  static int GeneratBinFromKernelSource(cl_program program, const char *clFileName);'), (122, '  static int WriteBinaryToFile(const char *fileName, const char *birary, size_t numBytes);'), (123, '  static int BinaryGenerated(const char *clFileName, FILE **fhandle);'), (124, '  // static int CompileKernelFile( const char *filename, GPUEnv *gpuInfo, const'), (125, '  // char *buildOption );'), (126, '  static l_uint32 *pixReadFromTiffKernel(l_uint32 *tiffdata, l_int32 w, l_int32 h, l_int32 wpl,'), (127, '                                         l_uint32 *line);'), (128, '  static int composeRGBPixelCl(int *tiffdata, int *line, int h, int w);'), (129, ''), (130, '  /* OpenCL implementations of Morphological operations*/'), (131, ''), (132, '  // Initialization of OCL buffers used in Morph operations'), (133, '  static int initMorphCLAllocations(l_int32 wpl, l_int32 h, Image pixs);'), (134, '  static void releaseMorphCLBuffers();'), (135, ''), (136, '  static void pixGetLinesCL(Image pixd, Image pixs, Image *pix_vline, Image *pix_hline, Image *pixClosed,'), (137, '                            bool getpixClosed, l_int32 close_hsize, l_int32 close_vsize,'), (138, '                            l_int32 open_hsize, l_int32 open_vsize, l_int32 line_hsize,'), (139, '                            l_int32 line_vsize);'), (140, ''), (141, '  // int InitOpenclAttr( OpenCLEnv * env );'), (142, '  // int ReleaseKernel( KernelEnv * env );'), (143, '  static int SetKernelEnv(KernelEnv *envInfo);'), (144, '  // int CreateKernel( char * kernelname, KernelEnv * env );'), (145, '  // int RunKernel( const char *kernelName, void **userdata );'), (146, '  // int ConvertToString( const char *filename, char **source );'), (147, '  // int CheckKernelName( KernelEnv *envInfo, const char *kernelName );'), (148, '  // int RegisterKernelWrapper( const char *kernelName, cl_kernel_function'), (149, '  // function ); int RunKernelWrapper( cl_kernel_function function, const char *'), (150, '  // kernelName, void **usrdata ); int GetKernelEnvAndFunc( const char'), (151, '  // *kernelName, KernelEnv *env, cl_kernel_function *function );'), (152, ''), (153, '  static int LoadOpencl();'), (154, '#  ifdef WIN32'), (155, '  // static int OpenclInite();'), (156, '  static void FreeOpenclDll();'), (157, '#  endif'), (158, ''), (159, '  inline static int AddKernelConfig(int kCount, const char *kName);'), (160, ''), (161, '  /* for binarization */'), (162, '  static int HistogramRectOCL(void *imagedata, int bytes_per_pixel, int bytes_per_line, int left,'), (163, '                              int top, int width, int height, int kHistogramSize,'), (164, '                              int *histogramAllChannels);'), (165, ''), (166, '  static int ThresholdRectToPixOCL(unsigned char *imagedata, int bytes_per_pixel,'), (167, '                                   int bytes_per_line, int *thresholds, int *hi_values, Image *pix,'), (168, '                                   int rect_height, int rect_width, int rect_top, int rect_left);'), (169, ''), (170, '  static ds_device getDeviceSelection();'), (171, '  static ds_device selectedDevice;'), (172, '  static bool deviceIsSelected;'), (173, '  static bool selectedDeviceIsOpenCL();'), (174, '};'), (175, ''), (176, '}'), (177, ''), (178, '#endif // USE_OPENCL'), (179, '#endif // TESSERACT_OPENCL_OPENCLWRAPPER_H_')]}",yes
src\tesseract.cpp,src\tesseract.cpp,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -34,9 +34,6 @@
 #include <allheaders.h>
 #include <tesseract/baseapi.h>
 #include ""dict.h""
-#if defined(USE_OPENCL)
-#  include ""openclwrapper.h"" // for OpenclDevice
-#endif
 #include <tesseract/renderer.h>
 #include ""simddetect.h""
 #include ""tesseractclass.h"" // for AnyTessLang
@@ -112,34 +109,6 @@ static void PrintVersionInfo() {
   printf(""  %s\n"", versionStrP);
   lept_free(versionStrP);
 
-#ifdef USE_OPENCL
-  cl_platform_id platform[4];
-  cl_uint num_platforms;
-
-  printf("" OpenCL info:\n"");
-  if (clGetPlatformIDs(4, platform, &num_platforms) == CL_SUCCESS) {
-    printf(""  Found %u platform(s).\n"", num_platforms);
-    for (unsigned n = 0; n < num_platforms; n++) {
-      char info[256];
-      if (clGetPlatformInfo(platform[n], CL_PLATFORM_NAME, 256, info, 0) == CL_SUCCESS) {
-        printf(""  Platform %u name: %s.\n"", n + 1, info);
-      }
-      if (clGetPlatformInfo(platform[n], CL_PLATFORM_VERSION, 256, info, 0) == CL_SUCCESS) {
-        printf(""  Version: %s.\n"", info);
-      }
-      cl_device_id devices[2];
-      cl_uint num_devices;
-      if (clGetDeviceIDs(platform[n], CL_DEVICE_TYPE_ALL, 2, devices, &num_devices) == CL_SUCCESS) {
-        printf(""  Found %u device(s).\n"", num_devices);
-        for (unsigned i = 0; i < num_devices; ++i) {
-          if (clGetDeviceInfo(devices[i], CL_DEVICE_NAME, 256, info, 0) == CL_SUCCESS) {
-            printf(""    Device %u name: %s.\n"", i + 1, info);
-          }
-        }
-      }
-    }
-  }
-#endif
 #if defined(HAVE_NEON) || defined(__aarch64__)
   if (tesseract::SIMDDetect::IsNEONAvailable())
     printf("" Found NEON\n"");
","{'added': [], 'deleted': [(37, '#if defined(USE_OPENCL)'), (38, '#  include ""openclwrapper.h"" // for OpenclDevice'), (39, '#endif'), (115, '#ifdef USE_OPENCL'), (116, '  cl_platform_id platform[4];'), (117, '  cl_uint num_platforms;'), (118, ''), (119, '  printf("" OpenCL info:\\n"");'), (120, '  if (clGetPlatformIDs(4, platform, &num_platforms) == CL_SUCCESS) {'), (121, '    printf(""  Found %u platform(s).\\n"", num_platforms);'), (122, '    for (unsigned n = 0; n < num_platforms; n++) {'), (123, '      char info[256];'), (124, '      if (clGetPlatformInfo(platform[n], CL_PLATFORM_NAME, 256, info, 0) == CL_SUCCESS) {'), (125, '        printf(""  Platform %u name: %s.\\n"", n + 1, info);'), (126, '      }'), (127, '      if (clGetPlatformInfo(platform[n], CL_PLATFORM_VERSION, 256, info, 0) == CL_SUCCESS) {'), (128, '        printf(""  Version: %s.\\n"", info);'), (129, '      }'), (130, '      cl_device_id devices[2];'), (131, '      cl_uint num_devices;'), (132, '      if (clGetDeviceIDs(platform[n], CL_DEVICE_TYPE_ALL, 2, devices, &num_devices) == CL_SUCCESS) {'), (133, '        printf(""  Found %u device(s).\\n"", num_devices);'), (134, '        for (unsigned i = 0; i < num_devices; ++i) {'), (135, '          if (clGetDeviceInfo(devices[i], CL_DEVICE_NAME, 256, info, 0) == CL_SUCCESS) {'), (136, '            printf(""    Device %u name: %s.\\n"", i + 1, info);'), (137, '          }'), (138, '        }'), (139, '      }'), (140, '    }'), (141, '  }'), (142, '#endif')]}",yes
src\textord\linefind.cpp,src\textord\linefind.cpp,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -27,9 +27,6 @@
 #include ""edgblob.h""
 #include ""linefind.h""
 #include ""tabvector.h""
-#if defined(USE_OPENCL)
-#  include ""openclwrapper.h"" // for OpenclDevice
-#endif
 
 #include <algorithm>
 
@@ -469,48 +466,33 @@ static void GetLineMasks(int resolution, Image src_pix, Image *pix_vline, Image
   }
   int closing_brick = max_line_width / 3;
 
-// only use opencl if compiled w/ OpenCL and selected device is opencl
-#ifdef USE_OPENCL
-  if (OpenclDevice::selectedDeviceIsOpenCL()) {
-    // OpenCL pixGetLines Operation
-    int clStatus =
-        OpenclDevice::initMorphCLAllocations(pixGetWpl(src_pix), pixGetHeight(src_pix), src_pix);
-    bool getpixclosed = pix_music_mask != nullptr;
-    OpenclDevice::pixGetLinesCL(nullptr, src_pix, pix_vline, pix_hline, &pix_closed, getpixclosed,
-                                closing_brick, closing_brick, max_line_width, max_line_width,
-                                min_line_length, min_line_length);
-  } else {
-#endif
-    // Close up small holes, making it less likely that false alarms are found
-    // in thickened text (as it will become more solid) and also smoothing over
-    // some line breaks and nicks in the edges of the lines.
-    pix_closed = pixCloseBrick(nullptr, src_pix, closing_brick, closing_brick);
-    if (pixa_display != nullptr) {
-      pixaAddPix(pixa_display, pix_closed, L_CLONE);
-    }
-    // Open up with a big box to detect solid areas, which can then be
-    // subtracted. This is very generous and will leave in even quite wide
-    // lines.
-    Image pix_solid = pixOpenBrick(nullptr, pix_closed, max_line_width, max_line_width);
-    if (pixa_display != nullptr) {
-      pixaAddPix(pixa_display, pix_solid, L_CLONE);
-    }
-    pix_hollow = pixSubtract(nullptr, pix_closed, pix_solid);
-
-    pix_solid.destroy();
+  // Close up small holes, making it less likely that false alarms are found
+  // in thickened text (as it will become more solid) and also smoothing over
+  // some line breaks and nicks in the edges of the lines.
+  pix_closed = pixCloseBrick(nullptr, src_pix, closing_brick, closing_brick);
+  if (pixa_display != nullptr) {
+    pixaAddPix(pixa_display, pix_closed, L_CLONE);
+  }
+  // Open up with a big box to detect solid areas, which can then be
+  // subtracted. This is very generous and will leave in even quite wide
+  // lines.
+  Image pix_solid = pixOpenBrick(nullptr, pix_closed, max_line_width, max_line_width);
+  if (pixa_display != nullptr) {
+    pixaAddPix(pixa_display, pix_solid, L_CLONE);
+  }
+  pix_hollow = pixSubtract(nullptr, pix_closed, pix_solid);
 
-    // Now open up in both directions independently to find lines of at least
-    // 1 inch/kMinLineLengthFraction in length.
-    if (pixa_display != nullptr) {
-      pixaAddPix(pixa_display, pix_hollow, L_CLONE);
-    }
-    *pix_vline = pixOpenBrick(nullptr, pix_hollow, 1, min_line_length);
-    *pix_hline = pixOpenBrick(nullptr, pix_hollow, min_line_length, 1);
+  pix_solid.destroy();
 
-    pix_hollow.destroy();
-#ifdef USE_OPENCL
+  // Now open up in both directions independently to find lines of at least
+  // 1 inch/kMinLineLengthFraction in length.
+  if (pixa_display != nullptr) {
+    pixaAddPix(pixa_display, pix_hollow, L_CLONE);
   }
-#endif
+  *pix_vline = pixOpenBrick(nullptr, pix_hollow, 1, min_line_length);
+  *pix_hline = pixOpenBrick(nullptr, pix_hollow, min_line_length, 1);
+
+  pix_hollow.destroy();
 
   // Lines are sufficiently rare, that it is worth checking for a zero image.
   bool v_empty = pix_vline->isZero();
","{'added': [(469, '  // Close up small holes, making it less likely that false alarms are found'), (470, '  // in thickened text (as it will become more solid) and also smoothing over'), (471, '  // some line breaks and nicks in the edges of the lines.'), (472, '  pix_closed = pixCloseBrick(nullptr, src_pix, closing_brick, closing_brick);'), (473, '  if (pixa_display != nullptr) {'), (474, '    pixaAddPix(pixa_display, pix_closed, L_CLONE);'), (475, '  }'), (476, '  // Open up with a big box to detect solid areas, which can then be'), (477, '  // subtracted. This is very generous and will leave in even quite wide'), (478, '  // lines.'), (479, '  Image pix_solid = pixOpenBrick(nullptr, pix_closed, max_line_width, max_line_width);'), (480, '  if (pixa_display != nullptr) {'), (481, '    pixaAddPix(pixa_display, pix_solid, L_CLONE);'), (482, '  }'), (483, '  pix_hollow = pixSubtract(nullptr, pix_closed, pix_solid);'), (485, '  pix_solid.destroy();'), (487, '  // Now open up in both directions independently to find lines of at least'), (488, '  // 1 inch/kMinLineLengthFraction in length.'), (489, '  if (pixa_display != nullptr) {'), (490, '    pixaAddPix(pixa_display, pix_hollow, L_CLONE);'), (492, '  *pix_vline = pixOpenBrick(nullptr, pix_hollow, 1, min_line_length);'), (493, '  *pix_hline = pixOpenBrick(nullptr, pix_hollow, min_line_length, 1);'), (494, ''), (495, '  pix_hollow.destroy();')], 'deleted': [(30, '#if defined(USE_OPENCL)'), (31, '#  include ""openclwrapper.h"" // for OpenclDevice'), (32, '#endif'), (472, '// only use opencl if compiled w/ OpenCL and selected device is opencl'), (473, '#ifdef USE_OPENCL'), (474, '  if (OpenclDevice::selectedDeviceIsOpenCL()) {'), (475, '    // OpenCL pixGetLines Operation'), (476, '    int clStatus ='), (477, '        OpenclDevice::initMorphCLAllocations(pixGetWpl(src_pix), pixGetHeight(src_pix), src_pix);'), (478, '    bool getpixclosed = pix_music_mask != nullptr;'), (479, '    OpenclDevice::pixGetLinesCL(nullptr, src_pix, pix_vline, pix_hline, &pix_closed, getpixclosed,'), (480, '                                closing_brick, closing_brick, max_line_width, max_line_width,'), (481, '                                min_line_length, min_line_length);'), (482, '  } else {'), (483, '#endif'), (484, '    // Close up small holes, making it less likely that false alarms are found'), (485, '    // in thickened text (as it will become more solid) and also smoothing over'), (486, '    // some line breaks and nicks in the edges of the lines.'), (487, '    pix_closed = pixCloseBrick(nullptr, src_pix, closing_brick, closing_brick);'), (488, '    if (pixa_display != nullptr) {'), (489, '      pixaAddPix(pixa_display, pix_closed, L_CLONE);'), (490, '    }'), (491, '    // Open up with a big box to detect solid areas, which can then be'), (492, '    // subtracted. This is very generous and will leave in even quite wide'), (493, '    // lines.'), (494, '    Image pix_solid = pixOpenBrick(nullptr, pix_closed, max_line_width, max_line_width);'), (495, '    if (pixa_display != nullptr) {'), (496, '      pixaAddPix(pixa_display, pix_solid, L_CLONE);'), (497, '    }'), (498, '    pix_hollow = pixSubtract(nullptr, pix_closed, pix_solid);'), (499, ''), (500, '    pix_solid.destroy();'), (502, '    // Now open up in both directions independently to find lines of at least'), (503, '    // 1 inch/kMinLineLengthFraction in length.'), (504, '    if (pixa_display != nullptr) {'), (505, '      pixaAddPix(pixa_display, pix_hollow, L_CLONE);'), (506, '    }'), (507, '    *pix_vline = pixOpenBrick(nullptr, pix_hollow, 1, min_line_length);'), (508, '    *pix_hline = pixOpenBrick(nullptr, pix_hollow, min_line_length, 1);'), (510, '    pix_hollow.destroy();'), (511, '#ifdef USE_OPENCL'), (513, '#endif')]}",yes
sw.cpp,sw.cpp,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -21,7 +21,6 @@ void build(Solution &s)
 
         libtesseract.Public += ""include""_idir;
         libtesseract.Protected +=
-            ""src/opencl""_id,
             ""src/ccmain""_id,
             ""src/api""_id,
             ""src/dict""_id,
","{'added': [], 'deleted': [(24, '            ""src/opencl""_id,')]}",yes
tesseract.pc.in,tesseract.pc.in,d5e000bc58c50c807e9423290feace3f31a77de0,912deb3978bdda57db8fe10890e7a62ade3b1f5b,"Remove unsupported OpenCL code and related API functions (#4220)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -12,5 +12,5 @@ URL: https://github.com/tesseract-ocr/tesseract
 Version: @VERSION@
 Requires.private: lept
 Libs: -L${libdir} -ltesseract @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
-Libs.private: -lpthread @OPENCL_LDFLAGS@
+Libs.private: -lpthread
 Cflags: -I${includedir}
","{'added': [(15, 'Libs.private: -lpthread')], 'deleted': [(15, 'Libs.private: -lpthread @OPENCL_LDFLAGS@')]}",yes
src\ccstruct\imagedata.cpp,src\ccstruct\imagedata.cpp,912deb3978bdda57db8fe10890e7a62ade3b1f5b,87a152c0ebd523ffe1e9c30d2b2facc9bf3204d2,"Fix comments for function ReCachePages

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -534,7 +534,7 @@ void DocumentData::Shuffle() {
   }
 }
 
-// Locks the pages_mutex_ and Loads as many pages can fit in max_memory_
+// Locks the pages_mutex_ and loads as many pages as will fit into max_memory_
 // starting at index pages_offset_.
 bool DocumentData::ReCachePages() {
   std::lock_guard<std::mutex> lock(pages_mutex_);
","{'added': [(537, '// Locks the pages_mutex_ and loads as many pages as will fit into max_memory_')], 'deleted': [(537, '// Locks the pages_mutex_ and Loads as many pages can fit in max_memory_')]}",yes
src\ccstruct\imagedata.h,src\ccstruct\imagedata.h,912deb3978bdda57db8fe10890e7a62ade3b1f5b,87a152c0ebd523ffe1e9c30d2b2facc9bf3204d2,"Fix comments for function ReCachePages

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -250,7 +250,7 @@ private:
     std::lock_guard<std::mutex> lock(general_mutex_);
     memory_used_ = memory_used;
   }
-  // Locks the pages_mutex_ and Loads as many pages can fit in max_memory_
+  // Locks the pages_mutex_ and loads as many pages as will fit into max_memory_
   // starting at index pages_offset_.
   bool ReCachePages();
 
","{'added': [(253, '  // Locks the pages_mutex_ and loads as many pages as will fit into max_memory_')], 'deleted': [(253, '  // Locks the pages_mutex_ and Loads as many pages can fit in max_memory_')]}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,87a152c0ebd523ffe1e9c30d2b2facc9bf3204d2,2b07505e0e86026ae7c10767b334c337ccf06576,cmake: target_compile_features instead of  set_property,"@@ -346,7 +346,7 @@ if(ICU_FOUND)
   # ############################################################################
 
   add_executable(unicharset_extractor unicharset_extractor.cpp)
-  set_property(TARGET unicharset_extractor PROPERTY CXX_STANDARD 17)
+  target_compile_features(unicharset_extractor PRIVATE cxx_std_17)
   target_link_libraries(unicharset_extractor unicharset_training)
   project_group(unicharset_extractor ""Training Tools"")
   install(
","{'added': [(349, '  target_compile_features(unicharset_extractor PRIVATE cxx_std_17)')], 'deleted': [(349, '  set_property(TARGET unicharset_extractor PROPERTY CXX_STANDARD 17)')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,2b07505e0e86026ae7c10767b334c337ccf06576,cc3c5070030ed383e99ffd77ad46e0ff616e458f,issue-bug.yml: Add a link to Supported Operating Systems page,"@@ -11,13 +11,13 @@ body:
         Please use [our forum](https://groups.google.com/g/tesseract-ocr).
 
         Please follow these rules:
+        * Check that your Operating Systems is [supported](https://tesseract-ocr.github.io/tessdoc/supported-operating-systems.html).
         * Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).
         * Don't open an issue which involves 3rd party tools that use Tesseract as a library. Only report about an issue with the Tesseract command line tool or the C/C++ API.
         * Please provide the input image.
         * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.
         * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report.
 
-        Windows versions 7, 8, 8.1 are not supported.
   - type: textarea
     attributes:
       label: Current Behavior
","{'added': [(14, '        * Check that your Operating Systems is [supported](https://tesseract-ocr.github.io/tessdoc/supported-operating-systems.html).')], 'deleted': [(20, '        Windows versions 7, 8, 8.1 are not supported.')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,cc3c5070030ed383e99ffd77ad46e0ff616e458f,872ca6db7387ac7d51fd8fbb11f4a1319dc81bbd,"Update autotools.yml

Remove the gcc-8 job.","@@ -19,7 +19,6 @@ jobs:
           - { name: ubuntu-22.04-gcc-11-autotools, os: ubuntu-22.04, cxx: g++-11 } #installed
           - { name: ubuntu-20.04-gcc-10-autotools, os: ubuntu-20.04, cxx: g++-10 } #installed
           - { name: ubuntu-20.04-gcc-9-autotools, os: ubuntu-20.04, cxx: g++-9 } #installed
-          - { name: ubuntu-20.04-gcc-8-autotools, os: ubuntu-20.04, cxx: g++-8 }
 
     steps:
     - uses: actions/checkout@v4
","{'added': [], 'deleted': [(22, '          - { name: ubuntu-20.04-gcc-8-autotools, os: ubuntu-20.04, cxx: g++-8 }')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,872ca6db7387ac7d51fd8fbb11f4a1319dc81bbd,d9ae5c356b74c1590ecd267e80d222ff12818ea7,"Update cmake.yml

Remove the gcc-8 job","@@ -26,7 +26,6 @@ jobs:
           - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed
           - { name: ubuntu-20.04-gcc-10-cmake, os: ubuntu-20.04, cxx: g++-10 } #installed
           - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed
-          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 }
 
     steps:
       - name: Install compilers on Linux
","{'added': [], 'deleted': [(29, '          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 }')]}",yes
Dockerfile,,398ea8a86f4f14cf5e00adad53efeac76760f36c,baf8e80068b98fe7a69598565ac8e7edcd1d5212,"Remove broken Dockerfile

It was used for Travis CI which is no longer supported.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,17 +0,0 @@
-# Dockerfile for local Travis build test
-
-FROM ubuntu
-LABEL maintainer=""Ian Blenke <ian@blenke.com>""
-
-RUN apt-get update
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y cmake curl git ruby bundler wget unzip \
-  && apt-get clean \
-  && rm -rf /var/lib/apt/lists/*
-RUN gem install bundler travis -no-ri -no-rdoc
-RUN git clone --depth 1 https://github.com/travis-ci/travis-build ~/.travis/travis-build
-RUN bundle install --gemfile ~/.travis/travis-build/Gemfile
-
-ADD . /tesseract
-WORKDIR /tesseract
-
-RUN travis compile | sed -e ""s/--branch\\\=\\\'\\\'/--branch=master/g"" | bash
","{'added': [], 'deleted': [(1, '# Dockerfile for local Travis build test'), (2, ''), (3, 'FROM ubuntu'), (4, 'LABEL maintainer=""Ian Blenke <ian@blenke.com>""'), (5, ''), (6, 'RUN apt-get update'), (7, 'RUN DEBIAN_FRONTEND=noninteractive apt-get install -y cmake curl git ruby bundler wget unzip \\'), (8, '  && apt-get clean \\'), (9, '  && rm -rf /var/lib/apt/lists/*'), (10, 'RUN gem install bundler travis -no-ri -no-rdoc'), (11, 'RUN git clone --depth 1 https://github.com/travis-ci/travis-build ~/.travis/travis-build'), (12, 'RUN bundle install --gemfile ~/.travis/travis-build/Gemfile'), (13, ''), (14, 'ADD . /tesseract'), (15, 'WORKDIR /tesseract'), (16, ''), (17, 'RUN travis compile | sed -e ""s/--branch\\\\\\=\\\\\\\'\\\\\\\'/--branch=master/g"" | bash')]}",yes
src\training\pango\stringrenderer.cpp,src\training\pango\stringrenderer.cpp,baf8e80068b98fe7a69598565ac8e7edcd1d5212,4c0f911092106d15a44a39aef92f18f8ecfdc166,"Fix CID 1534954 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -386,7 +386,7 @@ bool StringRenderer::GetClusterStrings(std::vector<std::string> *cluster_text) {
         // decided to use an unmapped glyph.
         text = LigatureTable::Get()->AddLigatures(text, nullptr);
       }
-      start_byte_to_text[start_byte_index] = text;
+      start_byte_to_text[start_byte_index] = std::move(text);
     }
   } while (pango_layout_iter_next_run(run_iter));
   pango_layout_iter_free(run_iter);
","{'added': [(389, '      start_byte_to_text[start_byte_index] = std::move(text);')], 'deleted': [(389, '      start_byte_to_text[start_byte_index] = text;')]}",yes
src\training\pango\ligature_table.cpp,src\training\pango\ligature_table.cpp,4c0f911092106d15a44a39aef92f18f8ecfdc166,151cf0708630b6670c9a00fdb5166ec96885e4ff,"Fix CID 1534957 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -75,7 +75,7 @@ void LigatureTable::Init() {
       int norm_length = normed8.size();
       if (normed8 != lig8 && lig_length > 1 && norm_length > 1) {
         norm_to_lig_table_[normed8] = lig8;
-        lig_to_norm_table_[lig8] = normed8;
+        lig_to_norm_table_[lig8] = std::move(normed8);
         if (min_lig_length_ == 0 || lig_length < min_lig_length_) {
           min_lig_length_ = lig_length;
         }
","{'added': [(78, '        lig_to_norm_table_[lig8] = std::move(normed8);')], 'deleted': [(78, '        lig_to_norm_table_[lig8] = normed8;')]}",yes
src\training\mftraining.cpp,src\training\mftraining.cpp,151cf0708630b6670c9a00fdb5166ec96885e4ff,f00d4b22dc9e4d61e115ef1ac90ec3015cbd53c7,"Fix CID 1534940 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -249,7 +249,7 @@ int main(int argc, char **argv) {
   }
   std::string inttemp_file = file_prefix;
   inttemp_file += ""inttemp"";
-  std::string pffmtable_file = file_prefix;
+  std::string pffmtable_file = std::move(file_prefix);
   pffmtable_file += ""pffmtable"";
   CLASS_STRUCT *float_classes = SetUpForFloat2Int(*unicharset, mf_classes);
   // Now write the inttemp and pffmtable.
","{'added': [(252, '  std::string pffmtable_file = std::move(file_prefix);')], 'deleted': [(252, '  std::string pffmtable_file = file_prefix;')]}",yes
src\lstm\lstmrecognizer.cpp,src\lstm\lstmrecognizer.cpp,f00d4b22dc9e4d61e115ef1ac90ec3015cbd53c7,479789b37917ab6f61779f4f3d3b1c45427a81ea,"Fix CID 1534933, 1534937 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -366,8 +366,8 @@ bool LSTMRecognizer::RecognizeLine(const ImageData &image_data,
           tprintf(""Inverting image: old min=%g, mean=%g, sd=%g, inv %g,%g,%g\n"", pos_min, pos_mean,
                   pos_sd, inv_min, inv_mean, inv_sd);
         }
-        *outputs = inv_outputs;
-        *inputs = inv_inputs;
+        *outputs = std::move(inv_outputs);
+        *inputs = std::move(inv_inputs);
       } else if (re_invert) {
         // Inverting was not an improvement, so undo and run again, so the
         // outputs match the best forward result.
","{'added': [(369, '        *outputs = std::move(inv_outputs);'), (370, '        *inputs = std::move(inv_inputs);')], 'deleted': [(369, '        *outputs = inv_outputs;'), (370, '        *inputs = inv_inputs;')]}",yes
src\classify\shapeclassifier.cpp,src\classify\shapeclassifier.cpp,479789b37917ab6f61779f4f3d3b1c45427a81ea,d172f9b802cabdc681eb5c5de679da6c0ee9bed3,"Fix CID 1534948 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -225,7 +225,7 @@ void ShapeClassifier::FilterDuplicateUnichars(std::vector<ShapeRating> *results)
     }
     filtered_results.push_back((*results)[r]);
   }
-  *results = filtered_results;
+  *results = std::move(filtered_results);
 }
 
 } // namespace tesseract.
","{'added': [(228, '  *results = std::move(filtered_results);')], 'deleted': [(228, '  *results = filtered_results;')]}",yes
src\ccutil\unicharset.cpp,src\ccutil\unicharset.cpp,d172f9b802cabdc681eb5c5de679da6c0ee9bed3,ddd2ec24a87a3b6169363ec73fe3d3e47fdfabd5,"Fix CID 1534956 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -268,7 +268,7 @@ bool UNICHARSET::encode_string(const char *str, bool give_up_on_failure,
     }
   }
   if (lengths != nullptr) {
-    *lengths = best_lengths;
+    *lengths = std::move(best_lengths);
   }
   if (encoded_length != nullptr) {
     *encoded_length = str_pos;
","{'added': [(271, '    *lengths = std::move(best_lengths);')], 'deleted': [(271, '    *lengths = best_lengths;')]}",yes
src\ccutil\genericheap.h,src\ccutil\genericheap.h,ddd2ec24a87a3b6169363ec73fe3d3e47fdfabd5,7465da90588017e3e21ed87cb63178a12203f793,"Fix CID 1534932, 1534942 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -131,7 +131,7 @@ public:
       Pair hole_pair = heap_[new_size];
       heap_.resize(new_size);
       int hole_index = SiftDown(0, hole_pair);
-      heap_[hole_index] = hole_pair;
+      heap_[hole_index] = std::move(hole_pair);
     } else {
       heap_.resize(new_size);
     }
@@ -195,7 +195,7 @@ public:
     Pair hole_pair = heap_[index];
     index = SiftDown(index, hole_pair);
     index = SiftUp(index, hole_pair);
-    heap_[index] = hole_pair;
+    heap_[index] = std::move(hole_pair);
   }
 
 private:
","{'added': [(134, '      heap_[hole_index] = std::move(hole_pair);'), (198, '    heap_[index] = std::move(hole_pair);')], 'deleted': [(134, '      heap_[hole_index] = hole_pair;'), (198, '    heap_[index] = hole_pair;')]}",yes
src\ccmain\tessedit.cpp,src\ccmain\tessedit.cpp,7465da90588017e3e21ed87cb63178a12203f793,aa02fb300bfebd89da033191d27005bc3e5e01fd,"Fix CID 1510987 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -272,7 +272,7 @@ void Tesseract::ParseLanguageString(const std::string &lang_str, std::vector<std
     std::string lang_code(start);
     lang_code.resize(end);
     std::string next(start + end);
-    remains = next;
+    remains = std::move(next);
     lang_code = prefix + lang_code;
     // Check whether lang_code is already in the target vector and add.
     if (!IsStrInList(lang_code, *target)) {
","{'added': [(275, '    remains = std::move(next);')], 'deleted': [(275, '    remains = next;')]}",yes
src\ccmain\paragraphs.cpp,src\ccmain\paragraphs.cpp,aa02fb300bfebd89da033191d27005bc3e5e01fd,5a9a841f4029932879dc9f9922a7fff7c0d0dae6,"Fix CID 1534944 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1402,7 +1402,7 @@ void ParagraphModelSmearer::CalculateOpenModels(int row_start, int row_end) {
           push_back_new(still_open, m);
         }
       }
-      OpenModels(row + 1) = still_open;
+      OpenModels(row + 1) = std::move(still_open);
     }
   }
 }
","{'added': [(1405, '      OpenModels(row + 1) = std::move(still_open);')], 'deleted': [(1405, '      OpenModels(row + 1) = still_open;')]}",yes
src\ccmain\equationdetect.cpp,src\ccmain\equationdetect.cpp,5a9a841f4029932879dc9f9922a7fff7c0d0dae6,bee3b01619adfbcf533e714e29da2c0c6977a084,"Fix CID 1534941, 1534950, 1534952 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -391,7 +391,7 @@ int EquationDetect::FindEquationParts(ColPartitionGrid *part_grid, ColPartitionS
     for (auto &i : seeds_expanded) {
       InsertPartAfterAbsorb(i);
     }
-    cp_seeds_ = seeds_expanded;
+    cp_seeds_ = std::move(seeds_expanded);
   }
 
   // Pass 4: find math block satellite text partitions and merge them.
@@ -823,7 +823,7 @@ void EquationDetect::IdentifyInlinePartsHorizontal() {
   }
 
   // Reset the cp_seeds_ using the new_seeds.
-  cp_seeds_ = new_seeds;
+  cp_seeds_ = std::move(new_seeds);
 }
 
 int EquationDetect::EstimateTextPartLineSpacing() {
@@ -891,7 +891,7 @@ void EquationDetect::IdentifyInlinePartsVertical(const bool top_to_bottom,
       new_seeds.push_back(part);
     }
   }
-  cp_seeds_ = new_seeds;
+  cp_seeds_ = std::move(new_seeds);
 }
 
 bool EquationDetect::IsInline(const bool search_bottom, const int textparts_linespacing,
","{'added': [(394, '    cp_seeds_ = std::move(seeds_expanded);'), (826, '  cp_seeds_ = std::move(new_seeds);'), (894, '  cp_seeds_ = std::move(new_seeds);')], 'deleted': [(394, '    cp_seeds_ = seeds_expanded;'), (826, '  cp_seeds_ = new_seeds;'), (894, '  cp_seeds_ = new_seeds;')]}",yes
src\ccmain\control.cpp,src\ccmain\control.cpp,bee3b01619adfbcf533e714e29da2c0c6977a084,8dfa2dee860c9cfbf9c4732606ff9f6a90538e91,"Fix CID 1534943, 1534947, 1534949, 1534955 (Use of auto that causes a copy)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -480,8 +480,8 @@ void Tesseract::bigram_correction_pass(PAGE_RES *page_res) {
     std::vector<WERD_CHOICE *> overrides_word1;
     std::vector<WERD_CHOICE *> overrides_word2;
 
-    const auto orig_w1_str = w_prev->best_choice->unichar_string();
-    const auto orig_w2_str = w->best_choice->unichar_string();
+    const auto &orig_w1_str = w_prev->best_choice->unichar_string();
+    const auto &orig_w2_str = w->best_choice->unichar_string();
     WERD_CHOICE prev_best(w->uch_set);
     {
       int w1start, w1end;
@@ -555,8 +555,8 @@ void Tesseract::bigram_correction_pass(PAGE_RES *page_res) {
         }
         continue;
       }
-      const auto new_w1_str = overrides_word1[best_idx]->unichar_string();
-      const auto new_w2_str = overrides_word2[best_idx]->unichar_string();
+      const auto &new_w1_str = overrides_word1[best_idx]->unichar_string();
+      const auto &new_w2_str = overrides_word2[best_idx]->unichar_string();
       if (new_w1_str != orig_w1_str) {
         w_prev->ReplaceBestChoice(overrides_word1[best_idx]);
       }
","{'added': [(483, '    const auto &orig_w1_str = w_prev->best_choice->unichar_string();'), (484, '    const auto &orig_w2_str = w->best_choice->unichar_string();'), (558, '      const auto &new_w1_str = overrides_word1[best_idx]->unichar_string();'), (559, '      const auto &new_w2_str = overrides_word2[best_idx]->unichar_string();')], 'deleted': [(483, '    const auto orig_w1_str = w_prev->best_choice->unichar_string();'), (484, '    const auto orig_w2_str = w->best_choice->unichar_string();'), (558, '      const auto new_w1_str = overrides_word1[best_idx]->unichar_string();'), (559, '      const auto new_w2_str = overrides_word2[best_idx]->unichar_string();')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,8dfa2dee860c9cfbf9c4732606ff9f6a90538e91,77fc53c579293de2f233864942ccd7e834bbbd25,"Fix CID 1534953 (COPY_INSTEAD_OF_MOVE)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -421,7 +421,7 @@ int TessBaseAPI::Init(const char *data, int data_size, const char *language, Ocr
   }
 
   // Update datapath and language requested for the last valid initialization.
-  datapath_ = datapath;
+  datapath_ = std::move(datapath);
   if (datapath_.empty() && !tesseract_->datadir.empty()) {
     datapath_ = tesseract_->datadir;
   }
","{'added': [(424, '  datapath_ = std::move(datapath);')], 'deleted': [(424, '  datapath_ = datapath;')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,77fc53c579293de2f233864942ccd7e834bbbd25,bcc1a3b45b9186f9cde640a7e3fe6cf99bec98f6,"unittest-macos.yml: Install libtool (fixes macos-arm-14-clang-unittest)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -26,7 +26,7 @@ jobs:
       run: |
            brew install autoconf automake libarchive
            brew install leptonica cairo pango
-           brew install cabextract
+           brew install cabextract libtool
 
     - name: Setup
       run: |
","{'added': [(29, '           brew install cabextract libtool')], 'deleted': [(29, '           brew install cabextract')]}",yes
doc\tesseract.1.asc,doc\tesseract.1.asc,bcc1a3b45b9186f9cde640a7e3fe6cf99bec98f6,a76ca9b54550e8cdbe5ef8d013b60c6ff9d92229,"Rename frk -> deu_latf (ISO 639-3, ISO 15924)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -195,6 +195,7 @@ following languages:
 *cym* (Welsh),
 *dan* (Danish),
 *deu* (German),
+*deu_latf* (German Fraktur Latin),
 *div* (Dhivehi),
 *dzo* (Dzongkha),
 *ell* (Greek, Modern, 1453-),
@@ -209,7 +210,6 @@ following languages:
 *fil* (Filipino),
 *fin* (Finnish),
 *fra* (French),
-*frk* (Frankish),
 *frm* (French, Middle, ca.1400-1600),
 *fry* (West Frisian),
 *gla* (Scottish Gaelic),
","{'added': [(198, '*deu_latf* (German Fraktur Latin),')], 'deleted': [(212, '*frk* (Frankish),')]}",yes
unittest\loadlang_test.cc,unittest\loadlang_test.cc,bcc1a3b45b9186f9cde640a7e3fe6cf99bec98f6,a76ca9b54550e8cdbe5ef8d013b60c6ff9d92229,"Rename frk -> deu_latf (ISO 639-3, ISO 15924)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -118,6 +118,9 @@ TEST_P(LoadLanguage, dan) {
 TEST_P(LoadLanguage, deu) {
   LangLoader(""deu"", GetParam());
 }
+TEST_P(LoadLanguage, deu_latf) {
+  LangLoader(""deu_latf"", GetParam());
+}
 TEST_P(LoadLanguage, div) {
   LangLoader(""div"", GetParam());
 }
@@ -157,9 +160,6 @@ TEST_P(LoadLanguage, fin) {
 TEST_P(LoadLanguage, fra) {
   LangLoader(""fra"", GetParam());
 }
-TEST_P(LoadLanguage, frk) {
-  LangLoader(""frk"", GetParam());
-}
 TEST_P(LoadLanguage, frm) {
   LangLoader(""frm"", GetParam());
 }
","{'added': [(121, 'TEST_P(LoadLanguage, deu_latf) {'), (122, '  LangLoader(""deu_latf"", GetParam());'), (123, '}')], 'deleted': [(160, 'TEST_P(LoadLanguage, frk) {'), (161, '  LangLoader(""frk"", GetParam());'), (162, '}')]}",yes
README.md,README.md,a76ca9b54550e8cdbe5ef8d013b60c6ff9d92229,6cce24fad85bf081dc3b281dafea19291eba9808,README.md: Add a link to the 'supported compilers' page,"@@ -65,7 +65,7 @@ and **[Change Log](https://github.com/tesseract-ocr/tesseract/blob/main/ChangeLo
 You can either [Install Tesseract via pre-built binary package](https://tesseract-ocr.github.io/tessdoc/Installation.html)
 or [build it from source](https://tesseract-ocr.github.io/tessdoc/Compiling.html).
 
-A C++ compiler with good C++17 support is required for building Tesseract from source.
+Before building Tesseract from source, please check that your system has a compiler which is one of the [supported compilers](https://tesseract-ocr.github.io/tessdoc/supported-compilers.html).
 
 ## Running Tesseract
 
","{'added': [(68, 'Before building Tesseract from source, please check that your system has a compiler which is one of the [supported compilers](https://tesseract-ocr.github.io/tessdoc/supported-compilers.html).')], 'deleted': [(68, 'A C++ compiler with good C++17 support is required for building Tesseract from source.')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,6cce24fad85bf081dc3b281dafea19291eba9808,8f667335da722e94bc0b4cf5cfcfdb2dd91167eb,"unittest-macos.yml: Add a job that will run on Apple silicon

https://github.com/actions/runner-images/issues/9254","@@ -13,6 +13,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
+          - { name: macos-arm-14-clang-unittest, os: macos-14, cxx: clang++ } # Apple silicon
           - { name: macos-12-clang-unittest, os: macos-12, cxx: clang++ }
           - { name: macos-12-gcc-unittest, os: macos-12, cxx: g++ }
 
","{'added': [(16, '          - { name: macos-arm-14-clang-unittest, os: macos-14, cxx: clang++ } # Apple silicon')], 'deleted': []}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,8f667335da722e94bc0b4cf5cfcfdb2dd91167eb,bd3c1a2ae059547bb24f5cbd8950e496fec082d4,Update unittest-disablelegacy.yml,"@@ -10,7 +10,7 @@ on:
 jobs:
   linux:
     runs-on: ${{ matrix.os }}
-    timout-minutes: 150
+    timeout-minutes: 150
     strategy:
       fail-fast: false
       matrix:
","{'added': [(13, '    timeout-minutes: 150')], 'deleted': [(13, '    timout-minutes: 150')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,bd3c1a2ae059547bb24f5cbd8950e496fec082d4,cdd783eca2a0ab5c70e23ea2ef33ae0eca8a7e5f,Update unittest-disablelegacy.yml,"@@ -40,7 +40,7 @@ jobs:
 
     - name: Make and Install Tesseract
       run: |
-           make -j 8
+           make
            sudo make install install
 
     - name: Make and Install Training Tools
@@ -69,7 +69,7 @@ jobs:
 
     - name: Make and run Unit Tests
       run: |
-           make check -j 4
+           make check
 
     - name: Display Unit Tests Report
       run: |
","{'added': [(43, '           make'), (72, '           make check')], 'deleted': [(43, '           make -j 8'), (72, '           make check -j 4')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,cdd783eca2a0ab5c70e23ea2ef33ae0eca8a7e5f,8690d5ac371dd196572f6a87ae303616e9f40b24,Update unittest-disablelegacy.yml,"@@ -10,10 +10,11 @@ on:
 jobs:
   linux:
     runs-on: ${{ matrix.os }}
+    timout-minutes: 150
     strategy:
       fail-fast: false
       matrix:
-        compiler: [ g++, clang++ ]
+        compiler: [ g++, clang++-15 ]
         os: [ ubuntu-22.04 ]
 
     steps:
@@ -44,7 +45,7 @@ jobs:
 
     - name: Make and Install Training Tools
       run: |
-           make training -j 8
+           make training
            sudo make install training-install
 
     - name: Display Version
","{'added': [(13, '    timout-minutes: 150'), (17, '        compiler: [ g++, clang++-15 ]'), (48, '           make training')], 'deleted': [(16, '        compiler: [ g++, clang++ ]'), (47, '           make training -j 8')]}",yes
src\training\unicharset\normstrngs.cpp,src\training\unicharset\normstrngs.cpp,8690d5ac371dd196572f6a87ae303616e9f40b24,6a608e52511e764bf2c489520b4abc65315e7513,"Remove unneeded constant kNumSingleQuoteUnicodes

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -62,8 +62,7 @@ static bool is_hyphen_punc(const char32 ch) {
 }
 
 static bool is_single_quote(const char32 ch) {
-  static const int kNumSingleQuoteUnicodes = 8;
-  static const char32 kSingleQuoteUnicodes[kNumSingleQuoteUnicodes] = {
+  static const char32 kSingleQuoteUnicodes[] = {
       '\'', '`',
       0x2018, // left single quotation mark (English, others)
       0x2019, // right single quotation mark (Danish, Finnish, Swedish, Norw.)
","{'added': [(65, '  static const char32 kSingleQuoteUnicodes[] = {')], 'deleted': [(65, '  static const int kNumSingleQuoteUnicodes = 8;'), (66, '  static const char32 kSingleQuoteUnicodes[kNumSingleQuoteUnicodes] = {')]}",yes
src\training\unicharset\normstrngs.cpp,src\training\unicharset\normstrngs.cpp,6a608e52511e764bf2c489520b4abc65315e7513,6b99ec616f87b6654b778c65ad234302b920af59,"Remove unneeded constant kNumDoubleQuoteUnicodes

Fixes: 2fbb81070fd5d5e0 (""normstrngs: add more hyphens and quotes"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -83,8 +83,7 @@ static bool is_single_quote(const char32 ch) {
 }
 
 static bool is_double_quote(const char32 ch) {
-  static const int kNumDoubleQuoteUnicodes = 8;
-  static const char32 kDoubleQuoteUnicodes[kNumDoubleQuoteUnicodes] = {
+  static const char32 kDoubleQuoteUnicodes[] = {
       '""',
       0x201C, // left double quotation mark (English, others)
       0x201D, // right double quotation mark (Danish, Finnish, Swedish, Norw.)
","{'added': [(86, '  static const char32 kDoubleQuoteUnicodes[] = {')], 'deleted': [(86, '  static const int kNumDoubleQuoteUnicodes = 8;'), (87, '  static const char32 kDoubleQuoteUnicodes[kNumDoubleQuoteUnicodes] = {')]}",yes
src\training\unicharset\normstrngs.cpp,src\training\unicharset\normstrngs.cpp,6b99ec616f87b6654b778c65ad234302b920af59,a08a6ac2179e60bef0f704118b20827c845c274a,"Remove unneeded constant kNumHyphenPuncUnicodes

Fixes: 2fbb81070fd5d5e0 (""normstrngs: add more hyphens and quotes"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -3,7 +3,6 @@
  * Description: Utilities to normalize and manipulate UTF-32 and
  *              UTF-8 strings.
  * Author:      Ranjith Unnikrishnan
- * Created:     Thu July 4 2013
  *
  * (C) Copyright 2013, Google Inc.
  * Licensed under the Apache License, Version 2.0 (the ""License"");
@@ -36,8 +35,7 @@
 namespace tesseract {
 
 static bool is_hyphen_punc(const char32 ch) {
-  static const int kNumHyphenPuncUnicodes = 13;
-  static const char32 kHyphenPuncUnicodes[kNumHyphenPuncUnicodes] = {
+  static const char32 kHyphenPuncUnicodes[] = {
       '-',
       0x2010, // hyphen
       0x2011, // non-breaking hyphen
","{'added': [(38, '  static const char32 kHyphenPuncUnicodes[] = {')], 'deleted': [(6, ' * Created:     Thu July 4 2013'), (39, '  static const int kNumHyphenPuncUnicodes = 13;'), (40, '  static const char32 kHyphenPuncUnicodes[kNumHyphenPuncUnicodes] = {')]}",yes
src\training\unicharset\normstrngs.cpp,src\training\unicharset\normstrngs.cpp,a08a6ac2179e60bef0f704118b20827c845c274a,2fbb81070fd5d5e0e37d7b93041b542797379e7e,fix initializer syntax,"@@ -53,7 +53,7 @@ static bool is_hyphen_punc(const char32 ch) {
       0xfe58, // small em dash
       0xfe63, // small hyphen-minus
       0xff0d, // fullwidth hyphen-minus
-      0x2e17, // double oblique hyphen (Fraktur)
+      0x2e17  // double oblique hyphen (Fraktur)
   };
   for (int kHyphenPuncUnicode : kHyphenPuncUnicodes) {
     if (kHyphenPuncUnicode == ch) {
@@ -74,7 +74,7 @@ static bool is_single_quote(const char32 ch) {
       0x201B, // single high-reversed-9 quotation mark (PropList.txt)
       0x2032, // prime
       0x300C, // left corner bracket (East Asian languages)
-      0xFF07, // fullwidth apostrophe
+      0xFF07  // fullwidth apostrophe
   };
   for (int kSingleQuoteUnicode : kSingleQuoteUnicodes) {
     if (kSingleQuoteUnicode == ch) {
@@ -96,7 +96,7 @@ static bool is_double_quote(const char32 ch) {
       0x301D, // reversed double prime quotation mark (East Asian langs,
               // horiz.)
       0x301E, // close double prime (East Asian languages written horizontally)
-      0xFF02, // fullwidth quotation mark
+      0xFF02  // fullwidth quotation mark
   };
   for (int kDoubleQuoteUnicode : kDoubleQuoteUnicodes) {
     if (kDoubleQuoteUnicode == ch) {
","{'added': [(56, '      0x2e17  // double oblique hyphen (Fraktur)'), (77, '      0xFF07  // fullwidth apostrophe'), (99, '      0xFF02  // fullwidth quotation mark')], 'deleted': [(56, '      0x2e17, // double oblique hyphen (Fraktur)'), (77, '      0xFF07, // fullwidth apostrophe'), (99, '      0xFF02, // fullwidth quotation mark')]}",yes
src\training\unicharset\normstrngs.cpp,src\training\unicharset\normstrngs.cpp,2fbb81070fd5d5e0e37d7b93041b542797379e7e,f7d4b3912577955012d36ca29b609a84e00b5832,normstrngs: add more hyphens and quotes,"@@ -38,13 +38,22 @@ namespace tesseract {
 static bool is_hyphen_punc(const char32 ch) {
   static const int kNumHyphenPuncUnicodes = 13;
   static const char32 kHyphenPuncUnicodes[kNumHyphenPuncUnicodes] = {
-      '-',    0x2010, 0x2011, 0x2012, 0x2013, 0x2014, 0x2015, // hyphen..horizontal bar
-      0x207b,                                                 // superscript minus
-      0x208b,                                                 // subscript minus
-      0x2212,                                                 // minus sign
-      0xfe58,                                                 // small em dash
-      0xfe63,                                                 // small hyphen-minus
-      0xff0d,                                                 // fullwidth hyphen-minus
+      '-',
+      0x2010, // hyphen
+      0x2011, // non-breaking hyphen
+      0x2012, // figure dash
+      0x2013, // en dash
+      0x2014, // em dash
+      0x2015, // horizontal bar
+      // how about 0x2043 hyphen bullet?
+      // how about 0x2500 box drawings light horizontal?
+      0x207b, // superscript minus
+      0x208b, // subscript minus
+      0x2212, // minus sign
+      0xfe58, // small em dash
+      0xfe63, // small hyphen-minus
+      0xff0d, // fullwidth hyphen-minus
+      0x2e17, // double oblique hyphen (Fraktur)
   };
   for (int kHyphenPuncUnicode : kHyphenPuncUnicodes) {
     if (kHyphenPuncUnicode == ch) {
@@ -61,6 +70,7 @@ static bool is_single_quote(const char32 ch) {
       0x2018, // left single quotation mark (English, others)
       0x2019, // right single quotation mark (Danish, Finnish, Swedish, Norw.)
               // We may have to introduce a comma set with 0x201a
+      0x201A, // single low-9 quotation mark (German)
       0x201B, // single high-reversed-9 quotation mark (PropList.txt)
       0x2032, // prime
       0x300C, // left corner bracket (East Asian languages)
@@ -82,6 +92,7 @@ static bool is_double_quote(const char32 ch) {
       0x201D, // right double quotation mark (Danish, Finnish, Swedish, Norw.)
       0x201F, // double high-reversed-9 quotation mark (PropList.txt)
       0x2033, // double prime
+      0x201E, // double low-9 quotation mark (German)
       0x301D, // reversed double prime quotation mark (East Asian langs,
               // horiz.)
       0x301E, // close double prime (East Asian languages written horizontally)
","{'added': [(41, ""      '-',""), (42, '      0x2010, // hyphen'), (43, '      0x2011, // non-breaking hyphen'), (44, '      0x2012, // figure dash'), (45, '      0x2013, // en dash'), (46, '      0x2014, // em dash'), (47, '      0x2015, // horizontal bar'), (48, '      // how about 0x2043 hyphen bullet?'), (49, '      // how about 0x2500 box drawings light horizontal?'), (50, '      0x207b, // superscript minus'), (51, '      0x208b, // subscript minus'), (52, '      0x2212, // minus sign'), (53, '      0xfe58, // small em dash'), (54, '      0xfe63, // small hyphen-minus'), (55, '      0xff0d, // fullwidth hyphen-minus'), (56, '      0x2e17, // double oblique hyphen (Fraktur)'), (73, '      0x201A, // single low-9 quotation mark (German)'), (95, '      0x201E, // double low-9 quotation mark (German)')], 'deleted': [(41, ""      '-',    0x2010, 0x2011, 0x2012, 0x2013, 0x2014, 0x2015, // hyphen..horizontal bar""), (42, '      0x207b,                                                 // superscript minus'), (43, '      0x208b,                                                 // subscript minus'), (44, '      0x2212,                                                 // minus sign'), (45, '      0xfe58,                                                 // small em dash'), (46, '      0xfe63,                                                 // small hyphen-minus'), (47, '      0xff0d,                                                 // fullwidth hyphen-minus')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,f7d4b3912577955012d36ca29b609a84e00b5832,6231549b429ce2f628af00e30cc5f0aca79c0cbc,Update unittest-disablelegacy.yml,"@@ -14,7 +14,7 @@ jobs:
       fail-fast: false
       matrix:
         compiler: [ g++, clang++ ]
-        os: [ ubuntu-20.04 ]
+        os: [ ubuntu-22.04 ]
 
     steps:
     - uses: actions/checkout@v4
","{'added': [(17, '        os: [ ubuntu-22.04 ]')], 'deleted': [(17, '        os: [ ubuntu-20.04 ]')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,6231549b429ce2f628af00e30cc5f0aca79c0cbc,cb9afbd85fbbae7cfe856658a161d1a5244fede0,cmake.yml: Remove the clang++ 14 on Linux job,"@@ -21,7 +21,6 @@ jobs:
           - { name: macos-11-gcc-12-cmake, os: macos-11, cxx: g++-12 } #installed
 
           - { name: ubuntu-22.04-clang-15-cmake, os: ubuntu-22.04, cxx: clang++-15 } #installed
-          - { name: ubuntu-22.04-clang-14-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed
 
           - { name: ubuntu-22.04-gcc-12-cmake, os: ubuntu-22.04, cxx: g++-12 } #installed
           - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed
","{'added': [], 'deleted': [(24, '          - { name: ubuntu-22.04-clang-14-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,cb9afbd85fbbae7cfe856658a161d1a5244fede0,dfb2b226bd1f6845a3af6ae93a1113fdbf695a84,autotools.yml: Remove the clang++ 14 on Linux job,"@@ -13,8 +13,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: ubuntu-22.04-clang-15-autotools, os: ubuntu-22.04, cxx: clang++-15 }
-          - { name: ubuntu-22.04-clang-14-autotools, os: ubuntu-22.04, cxx: clang++-14 } #installed
+          - { name: ubuntu-22.04-clang-15-autotools, os: ubuntu-22.04, cxx: clang++-15 } #installed
 
           - { name: ubuntu-22.04-gcc-12-autotools, os: ubuntu-22.04, cxx: g++-12 } #installed
           - { name: ubuntu-22.04-gcc-11-autotools, os: ubuntu-22.04, cxx: g++-11 } #installed
","{'added': [(16, '          - { name: ubuntu-22.04-clang-15-autotools, os: ubuntu-22.04, cxx: clang++-15 } #installed')], 'deleted': [(16, '          - { name: ubuntu-22.04-clang-15-autotools, os: ubuntu-22.04, cxx: clang++-15 }'), (17, '          - { name: ubuntu-22.04-clang-14-autotools, os: ubuntu-22.04, cxx: clang++-14 } #installed')]}",yes
.github\workflows\msys2.yml,.github\workflows\msys2.yml,dfb2b226bd1f6845a3af6ae93a1113fdbf695a84,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,Update msys2.yml: Drop the 32-bit job,"@@ -11,8 +11,6 @@ jobs:
       fail-fast: false
       matrix:
         include:
-          - msystem: MINGW32
-            mingw_package_prefix: mingw-w64-i686
           - msystem: MINGW64
             mingw_package_prefix: mingw-w64-x86_64
     defaults:
","{'added': [], 'deleted': [(14, '          - msystem: MINGW32'), (15, '            mingw_package_prefix: mingw-w64-i686')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -18,7 +18,7 @@ jobs:
           #- { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }
 
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
 
@@ -118,7 +118,7 @@ jobs:
           - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }
 
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
 
","{'added': [(21, '    - uses: actions/checkout@v4'), (121, '    - uses: actions/checkout@v4')], 'deleted': [(21, '    - uses: actions/checkout@v3'), (121, '    - uses: actions/checkout@v3')]}",yes
.github\workflows\autotools-openmp.yml,.github\workflows\autotools-openmp.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,7 +17,7 @@ jobs:
           - { name: 22.04-openmp, os: ubuntu-22.04 }
 
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
 
","{'added': [(20, '    - uses: actions/checkout@v4')], 'deleted': [(20, '    - uses: actions/checkout@v3')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -23,7 +23,7 @@ jobs:
           - { name: ubuntu-20.04-gcc-8-autotools, os: ubuntu-20.04, cxx: g++-8 }
 
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
 
","{'added': [(26, '    - uses: actions/checkout@v4')], 'deleted': [(26, '    - uses: actions/checkout@v3')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,7 +17,7 @@ jobs:
     steps:
       - uses: ilammy/setup-nasm@v1
       - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""
-        uses: actions/checkout@v3
+        uses: actions/checkout@v4
         with:
           submodules: recursive
       - run: git fetch --prune --unshallow --tags
","{'added': [(20, '        uses: actions/checkout@v4')], 'deleted': [(20, '        uses: actions/checkout@v3')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -60,7 +60,7 @@ jobs:
         if: runner.os == 'macOS'
 
       - name: Checkout Source
-        uses: actions/checkout@v3
+        uses: actions/checkout@v4
         with:
              submodules: recursive
 
","{'added': [(63, '        uses: actions/checkout@v4')], 'deleted': [(63, '        uses: actions/checkout@v3')]}",yes
.github\workflows\codeql-analysis.yml,.github\workflows\codeql-analysis.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -55,7 +55,7 @@ jobs:
 
     steps:
     - name: Checkout repository
-      uses: actions/checkout@v3
+      uses: actions/checkout@v4
 
     - name: Install dependencies
       run: |
","{'added': [(58, '      uses: actions/checkout@v4')], 'deleted': [(58, '      uses: actions/checkout@v3')]}",yes
.github\workflows\msys2.yml,.github\workflows\msys2.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -19,7 +19,7 @@ jobs:
       run:
         shell: msys2 {0}
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
     - uses: msys2/setup-msys2@v2
","{'added': [(22, '    - uses: actions/checkout@v4')], 'deleted': [(22, '    - uses: actions/checkout@v3')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,7 +17,7 @@ jobs:
         os: [ ubuntu-20.04 ]
 
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
 
","{'added': [(20, '    - uses: actions/checkout@v4')], 'deleted': [(20, '    - uses: actions/checkout@v3')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,7 +17,7 @@ jobs:
           - { name: macos-12-gcc-unittest, os: macos-12, cxx: g++ }
 
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
 
","{'added': [(20, '    - uses: actions/checkout@v4')], 'deleted': [(20, '    - uses: actions/checkout@v3')]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -18,7 +18,7 @@ jobs:
           - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++, cxxflags: '-g -O2 -fsanitize=address,undefined' }
           - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++, cxxflags: '-g -O2 -fsanitize=address,undefined -stdlib=libc++' }
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
 
","{'added': [(21, '    - uses: actions/checkout@v4')], 'deleted': [(21, '    - uses: actions/checkout@v3')]}",yes
.github\workflows\vcpkg.yml,.github\workflows\vcpkg.yml,aa7c34229720cfc7d1606bbf7bb53cae99a1a8de,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,"Update GitHub actions/checkout to v4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -16,7 +16,7 @@ jobs:
 
     steps:
       - name: Checkout Tesseract Source (--head from main branch)
-        uses: actions/checkout@v3
+        uses: actions/checkout@v4
         with:
           submodules: recursive
 
","{'added': [(19, '        uses: actions/checkout@v4')], 'deleted': [(19, '        uses: actions/checkout@v3')]}",yes
include\tesseract\renderer.h,include\tesseract\renderer.h,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,b8961a7375d54fc4e1a7f8fa2858705f1c13fe84,[pdfrenderer] Add some debugging capabilities. Do not compress symbol table and text data during debug.,"@@ -139,6 +139,12 @@ protected:
   // This method will grow the output buffer if needed.
   void AppendData(const char *s, int len);
 
+  template <typename T>
+  auto AppendData(T &&d) {
+    AppendData(d.data(), d.size());
+    return d.size();
+  }
+
 private:
   TessResultRenderer *next_;   // Can link multiple renderers together
   FILE *fout_;                 // output file pointer
","{'added': [(142, '  template <typename T>'), (143, '  auto AppendData(T &&d) {'), (144, '    AppendData(d.data(), d.size());'), (145, '    return d.size();'), (146, '  }'), (147, '')], 'deleted': []}",yes
src\api\pdfrenderer.cpp,src\api\pdfrenderer.cpp,94bd98b7ef8e05319301a4879fbc10d11d68ebc7,b8961a7375d54fc4e1a7f8fa2858705f1c13fe84,[pdfrenderer] Add some debugging capabilities. Do not compress symbol table and text data during debug.,"@@ -34,6 +34,16 @@
 #include <locale>    // for std::locale::classic
 #include <memory>    // std::unique_ptr
 #include <sstream>   // for std::stringstream
+#include <string_view>
+
+using namespace std::literals;
+
+#ifndef NDEBUG
+#define DEBUG_PDF
+#endif
+#ifdef DEBUG_PDF
+#define NO_PDF_COMPRESSION
+#endif
 
 /*
 
@@ -443,6 +453,9 @@ char *TessPDFRenderer::GetPDFTextObjects(TessBaseAPI *api, double width, double
       if (fontsize != old_fontsize) {
         pdf_str << ""/f-0-0 "" << fontsize << "" Tf "";
         old_fontsize = fontsize;
+#ifdef DEBUG_PDF
+        pdf_str << ""\n"";
+#endif
       }
     }
 
@@ -469,9 +482,13 @@ char *TessPDFRenderer::GetPDFTextObjects(TessBaseAPI *api, double width, double
     }
     if (word_length > 0 && pdf_word_len > 0) {
       double h_stretch = kCharWidth * prec(100.0 * word_length / (fontsize * pdf_word_len));
-      pdf_str << h_stretch << "" Tz"" // horizontal stretch
-              << "" [ <"" << pdf_word // UTF-16BE representation
-              << ""> ] TJ"";          // show the text
+      pdf_str << h_stretch << "" Tz""; // horizontal stretch
+      pdf_str
+          << "" [ <"" << pdf_word // UTF-16BE representation
+          << ""> ] TJ"";          // show the text
+#ifdef DEBUG_PDF
+      pdf_str << ""\n"";
+#endif
     }
     if (last_word_in_line) {
       pdf_str << "" \n"";
@@ -545,26 +562,36 @@ bool TessPDFRenderer::BeginDocumentHandler() {
   for (int i = 0; i < kCIDToGIDMapSize; i++) {
     cidtogidmap[i] = (i % 2) ? 1 : 0;
   }
-  size_t len;
-  unsigned char *comp = zlibCompress(cidtogidmap.get(), kCIDToGIDMapSize, &len);
+  size_t len = kCIDToGIDMapSize;
+#ifndef NO_PDF_COMPRESSION
+  auto comp = zlibCompress(cidtogidmap.get(), kCIDToGIDMapSize, &len);
+#endif
   stream.str("""");
   stream << ""5 0 obj\n""
             ""<<\n""
             ""  /Length ""
          << len
-         << "" /Filter /FlateDecode\n""
+         << """"
+#ifndef NO_PDF_COMPRESSION
+            "" /Filter /FlateDecode""
+#endif
+            ""\n""
             "">>\n""
-            ""stream\n"";
+            ""stream\n""
+            ;
   AppendString(stream.str().c_str());
   long objsize = stream.str().size();
+#ifndef NO_PDF_COMPRESSION
   AppendData(reinterpret_cast<char *>(comp), len);
+#else
+  AppendData(reinterpret_cast<char *>(cidtogidmap.get()), len);
+#endif
   objsize += len;
+#ifndef NO_PDF_COMPRESSION
   lept_free(comp);
-  const char *endstream_endobj =
-      ""endstream\n""
-      ""endobj\n"";
-  AppendString(endstream_endobj);
-  objsize += strlen(endstream_endobj);
+#endif
+  objsize += AppendData(""endstream\n""sv);
+  objsize += AppendData(""endobj\n""sv);
   AppendPDFObjectDIY(objsize);
 
   const char stream2[] =
@@ -654,8 +681,8 @@ bool TessPDFRenderer::BeginDocumentHandler() {
   objsize = stream.str().size();
   AppendData(reinterpret_cast<const char *>(font), size);
   objsize += size;
-  AppendString(endstream_endobj);
-  objsize += strlen(endstream_endobj);
+  objsize += AppendData(""endstream\n""sv);
+  objsize += AppendData(""endobj\n""sv);
   AppendPDFObjectDIY(objsize);
   return true;
 }
@@ -848,29 +875,37 @@ bool TessPDFRenderer::AddImageHandler(TessBaseAPI *api) {
   // CONTENTS
   const std::unique_ptr<char[]> pdftext(GetPDFTextObjects(api, width, height));
   const size_t pdftext_len = strlen(pdftext.get());
-  size_t len;
-  unsigned char *comp_pdftext =
-      zlibCompress(reinterpret_cast<unsigned char *>(pdftext.get()), pdftext_len, &len);
-  long comp_pdftext_len = len;
+  size_t len = pdftext_len;
+#ifndef NO_PDF_COMPRESSION
+  auto comp_pdftext = zlibCompress(reinterpret_cast<unsigned char *>(pdftext.get()), pdftext_len, &len);
+#endif
   stream.str("""");
   stream << obj_
          << "" 0 obj\n""
             ""<<\n""
             ""  /Length ""
-         << comp_pdftext_len
-         << "" /Filter /FlateDecode\n""
+         << len
+         << """"
+#ifndef NO_PDF_COMPRESSION
+            "" /Filter /FlateDecode""
+#endif
+            ""\n""
             "">>\n""
-            ""stream\n"";
+            ""stream\n""
+            ;
   AppendString(stream.str().c_str());
   long objsize = stream.str().size();
-  AppendData(reinterpret_cast<char *>(comp_pdftext), comp_pdftext_len);
-  objsize += comp_pdftext_len;
+#ifndef NO_PDF_COMPRESSION
+  AppendData(reinterpret_cast<char *>(comp_pdftext), len);
+#else
+  AppendData(reinterpret_cast<char *>(pdftext.get()), len);
+#endif
+  objsize += len;
+#ifndef NO_PDF_COMPRESSION
   lept_free(comp_pdftext);
-  const char *b2 =
-      ""endstream\n""
-      ""endobj\n"";
-  AppendString(b2);
-  objsize += strlen(b2);
+#endif
+  objsize += AppendData(""endstream\n""sv);
+  objsize += AppendData(""endobj\n""sv);
   AppendPDFObjectDIY(objsize);
 
   if (!textonly_) {
","{'added': [(37, '#include <string_view>'), (38, ''), (39, 'using namespace std::literals;'), (40, ''), (41, '#ifndef NDEBUG'), (42, '#define DEBUG_PDF'), (43, '#endif'), (44, '#ifdef DEBUG_PDF'), (45, '#define NO_PDF_COMPRESSION'), (46, '#endif'), (456, '#ifdef DEBUG_PDF'), (457, '        pdf_str << ""\\n"";'), (458, '#endif'), (485, '      pdf_str << h_stretch << "" Tz""; // horizontal stretch'), (486, '      pdf_str'), (487, '          << "" [ <"" << pdf_word // UTF-16BE representation'), (488, '          << ""> ] TJ"";          // show the text'), (489, '#ifdef DEBUG_PDF'), (490, '      pdf_str << ""\\n"";'), (491, '#endif'), (565, '  size_t len = kCIDToGIDMapSize;'), (566, '#ifndef NO_PDF_COMPRESSION'), (567, '  auto comp = zlibCompress(cidtogidmap.get(), kCIDToGIDMapSize, &len);'), (568, '#endif'), (574, '         << """"'), (575, '#ifndef NO_PDF_COMPRESSION'), (576, '            "" /Filter /FlateDecode""'), (577, '#endif'), (578, '            ""\\n""'), (580, '            ""stream\\n""'), (581, '            ;'), (584, '#ifndef NO_PDF_COMPRESSION'), (586, '#else'), (587, '  AppendData(reinterpret_cast<char *>(cidtogidmap.get()), len);'), (588, '#endif'), (590, '#ifndef NO_PDF_COMPRESSION'), (592, '#endif'), (593, '  objsize += AppendData(""endstream\\n""sv);'), (594, '  objsize += AppendData(""endobj\\n""sv);'), (684, '  objsize += AppendData(""endstream\\n""sv);'), (685, '  objsize += AppendData(""endobj\\n""sv);'), (878, '  size_t len = pdftext_len;'), (879, '#ifndef NO_PDF_COMPRESSION'), (880, '  auto comp_pdftext = zlibCompress(reinterpret_cast<unsigned char *>(pdftext.get()), pdftext_len, &len);'), (881, '#endif'), (887, '         << len'), (888, '         << """"'), (889, '#ifndef NO_PDF_COMPRESSION'), (890, '            "" /Filter /FlateDecode""'), (891, '#endif'), (892, '            ""\\n""'), (894, '            ""stream\\n""'), (895, '            ;'), (898, '#ifndef NO_PDF_COMPRESSION'), (899, '  AppendData(reinterpret_cast<char *>(comp_pdftext), len);'), (900, '#else'), (901, '  AppendData(reinterpret_cast<char *>(pdftext.get()), len);'), (902, '#endif'), (903, '  objsize += len;'), (904, '#ifndef NO_PDF_COMPRESSION'), (906, '#endif'), (907, '  objsize += AppendData(""endstream\\n""sv);'), (908, '  objsize += AppendData(""endobj\\n""sv);')], 'deleted': [(472, '      pdf_str << h_stretch << "" Tz"" // horizontal stretch'), (473, '              << "" [ <"" << pdf_word // UTF-16BE representation'), (474, '              << ""> ] TJ"";          // show the text'), (548, '  size_t len;'), (549, '  unsigned char *comp = zlibCompress(cidtogidmap.get(), kCIDToGIDMapSize, &len);'), (555, '         << "" /Filter /FlateDecode\\n""'), (557, '            ""stream\\n"";'), (563, '  const char *endstream_endobj ='), (564, '      ""endstream\\n""'), (565, '      ""endobj\\n"";'), (566, '  AppendString(endstream_endobj);'), (567, '  objsize += strlen(endstream_endobj);'), (657, '  AppendString(endstream_endobj);'), (658, '  objsize += strlen(endstream_endobj);'), (851, '  size_t len;'), (852, '  unsigned char *comp_pdftext ='), (853, '      zlibCompress(reinterpret_cast<unsigned char *>(pdftext.get()), pdftext_len, &len);'), (854, '  long comp_pdftext_len = len;'), (860, '         << comp_pdftext_len'), (861, '         << "" /Filter /FlateDecode\\n""'), (863, '            ""stream\\n"";'), (866, '  AppendData(reinterpret_cast<char *>(comp_pdftext), comp_pdftext_len);'), (867, '  objsize += comp_pdftext_len;'), (869, '  const char *b2 ='), (870, '      ""endstream\\n""'), (871, '      ""endobj\\n"";'), (872, '  AppendString(b2);'), (873, '  objsize += strlen(b2);')]}",yes
src\api\pdfrenderer.cpp,src\api\pdfrenderer.cpp,b8961a7375d54fc4e1a7f8fa2858705f1c13fe84,5f40a2e2909dad3b6f4fa29350f41d4f7eb89bc4,"[pdfrenderer] Do not include space symbol into the word pdf box.

See #2879.","@@ -466,7 +466,6 @@ char *TessPDFRenderer::GetPDFTextObjects(TessBaseAPI *api, double width, double
     } while (!res_it->Empty(RIL_BLOCK) && !res_it->IsAtBeginningOf(RIL_WORD));
     if (res_it->IsAtBeginningOf(RIL_WORD)) {
       pdf_word += ""0020"";
-      pdf_word_len++;
     }
     if (word_length > 0 && pdf_word_len > 0) {
       double h_stretch = kCharWidth * prec(100.0 * word_length / (fontsize * pdf_word_len));
","{'added': [], 'deleted': [(469, '      pdf_word_len++;')]}",yes
src\api\pdfrenderer.cpp,src\api\pdfrenderer.cpp,5f40a2e2909dad3b6f4fa29350f41d4f7eb89bc4,fbff9362ceab63d9026982da7abf7fb13c758583,Move include line.,"@@ -22,6 +22,7 @@
 
 #include ""pdf_ttf.h""
 #include ""tprintf.h""
+#include ""helpers.h"" // for Swap
 
 #include <allheaders.h>
 #include <tesseract/baseapi.h>
@@ -33,7 +34,6 @@
 #include <locale>    // for std::locale::classic
 #include <memory>    // std::unique_ptr
 #include <sstream>   // for std::stringstream
-#include ""helpers.h"" // for Swap
 
 /*
 
","{'added': [(25, '#include ""helpers.h"" // for Swap')], 'deleted': [(36, '#include ""helpers.h"" // for Swap')]}",yes
include\tesseract\baseapi.h,include\tesseract\baseapi.h,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -474,7 +474,7 @@ public:
    * timeout_millisec terminates processing if any single page
    * takes too long. Set to 0 for unlimited time.
    *
-   * renderer is responible for creating the output. For example,
+   * renderer is responsible for creating the output. For example,
    * use the TessTextRenderer if you want plaintext output, or
    * the TessPDFRender to produce searchable PDF.
    *
","{'added': [(477, '   * renderer is responsible for creating the output. For example,')], 'deleted': [(477, '   * renderer is responible for creating the output. For example,')]}",yes
src\ccmain\control.cpp,src\ccmain\control.cpp,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -960,7 +960,7 @@ bool Tesseract::ReassignDiacritics(int pass, PAGE_RES_IT *pr_it, bool *make_next
     }
   }
   if (debug_noise_removal) {
-    tprintf(""Used %d/%d overlapped %d/%d non-overlaped diacritics on word:"", num_overlapped_used,
+    tprintf(""Used %d/%d overlapped %d/%d non-overlapped diacritics on word:"", num_overlapped_used,
             num_overlapped, non_overlapped_used, non_overlapped);
     real_word->bounding_box().print();
   }
","{'added': [(963, '    tprintf(""Used %d/%d overlapped %d/%d non-overlapped diacritics on word:"", num_overlapped_used,')], 'deleted': [(963, '    tprintf(""Used %d/%d overlapped %d/%d non-overlaped diacritics on word:"", num_overlapped_used,')]}",yes
src\ccstruct\blobs.cpp,src\ccstruct\blobs.cpp,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -361,7 +361,7 @@ TBLOB *TBLOB::ClassifyNormalizeIfNeeded() const {
     rotated_blob = new TBLOB(*this);
     const FCOORD &rotation = denorm_.block()->classify_rotation();
     // Move the rotated blob back to the same y-position so that we
-    // can still distinguish similar glyphs with differeny y-position.
+    // can still distinguish similar glyphs with different y-position.
     float target_y =
         kBlnBaselineOffset + (rotation.y() > 0 ? x_middle - box.left() : box.right() - x_middle);
     rotated_blob->Normalize(nullptr, &rotation, &denorm_, x_middle, y_middle, 1.0f, 1.0f, 0.0f,
","{'added': [(364, '    // can still distinguish similar glyphs with different y-position.')], 'deleted': [(364, '    // can still distinguish similar glyphs with differeny y-position.')]}",yes
src\classify\shapetable.h,src\classify\shapetable.h,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -212,7 +212,7 @@ private:
   // Flag indicates that the unichars are sorted, allowing faster set
   // operations with another shape.
   bool unichars_sorted_ = false;
-  // If this Shape is part of a ShapeTable the destiation_index_ is the index
+  // If this Shape is part of a ShapeTable the destination_index_ is the index
   // of some other shape in the ShapeTable with which this shape is merged.
   int destination_index_ = 0;
   // Array of unichars, each with a set of fonts. Each unichar has at most
","{'added': [(215, '  // If this Shape is part of a ShapeTable the destination_index_ is the index')], 'deleted': [(215, '  // If this Shape is part of a ShapeTable the destiation_index_ is the index')]}",yes
src\textord\colpartitionset.cpp,src\textord\colpartitionset.cpp,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -646,7 +646,7 @@ void ColPartitionSet::AddPartition(ColPartition *new_part,
 // |        Double     width    heading                              |
 // |-----------------------------------------------------------------|
 // |-------------------------------| |-------------------------------|
-// |   Common width ColParition    | |  Common width ColPartition    |
+// |   Common width ColPartition   | |  Common width ColPartition    |
 // |-------------------------------| |-------------------------------|
 // the layout with two common-width columns has better coverage than the
 // double width heading, because the coverage is ""good,"" even though less in
","{'added': [(649, '// |   Common width ColPartition   | |  Common width ColPartition    |')], 'deleted': [(649, '// |   Common width ColParition    | |  Common width ColPartition    |')]}",yes
src\textord\colpartitionset.h,src\textord\colpartitionset.h,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -142,7 +142,7 @@ private:
   // |        Double     width    heading                              |
   // |-----------------------------------------------------------------|
   // |-------------------------------| |-------------------------------|
-  // |   Common width ColParition    | |  Common width ColPartition    |
+  // |   Common width ColPartition   | |  Common width ColPartition    |
   // |-------------------------------| |-------------------------------|
   // the layout with two common-width columns has better coverage than the
   // double width heading, because the coverage is ""good,"" even though less in
","{'added': [(145, '  // |   Common width ColPartition   | |  Common width ColPartition    |')], 'deleted': [(145, '  // |   Common width ColParition    | |  Common width ColPartition    |')]}",yes
src\textord\edgblob.cpp,src\textord\edgblob.cpp,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -120,7 +120,7 @@ C_OUTLINE_LIST *OL_BUCKETS::scan_next(decltype(buckets)::iterator in_it) {
 
 int32_t OL_BUCKETS::outline_complexity(C_OUTLINE *outline, // parent outline
                                        int32_t max_count,  // max output
-                                       int16_t depth       // recurion depth
+                                       int16_t depth       // recursion depth
 ) {
   TDimension xmin, xmax;    // coord limits
   TDimension ymin, ymax;
","{'added': [(123, '                                       int16_t depth       // recursion depth')], 'deleted': [(123, '                                       int16_t depth       // recurion depth')]}",yes
src\textord\strokewidth.h,src\textord\strokewidth.h,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -19,7 +19,7 @@
 #ifndef TESSERACT_TEXTORD_STROKEWIDTH_H_
 #define TESSERACT_TEXTORD_STROKEWIDTH_H_
 
-#include ""blobbox.h""  // BlobNeighourDir.
+#include ""blobbox.h""  // BlobNeighbourDir.
 #include ""blobgrid.h"" // Base class.
 #include ""colpartitiongrid.h""
 #include ""textlineprojection.h""
","{'added': [(22, '#include ""blobbox.h""  // BlobNeighbourDir.')], 'deleted': [(22, '#include ""blobbox.h""  // BlobNeighourDir.')]}",yes
src\textord\tablefind.cpp,src\textord\tablefind.cpp,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1653,7 +1653,7 @@ void TableFinder::GrowTableToIncludeLines(const TBOX &table_box,
 }
 
 // Checks whether the horizontal line belong to the table by looking at the
-// side spacing of extra ColParitions that will be included in the table
+// side spacing of extra ColPartitions that will be included in the table
 // due to expansion
 bool TableFinder::HLineBelongsToTable(const ColPartition &part,
                                       const TBOX &table_box) {
","{'added': [(1656, '// side spacing of extra ColPartitions that will be included in the table')], 'deleted': [(1656, '// side spacing of extra ColParitions that will be included in the table')]}",yes
src\textord\tablefind.h,src\textord\tablefind.h,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -329,7 +329,7 @@ protected:
   void GrowTableToIncludeLines(const TBOX &table_box, const TBOX &search_range,
                                TBOX *result_box);
   // Checks whether the horizontal line belong to the table by looking at the
-  // side spacing of extra ColParitions that will be included in the table
+  // side spacing of extra ColPartitions that will be included in the table
   // due to expansion
   bool HLineBelongsToTable(const ColPartition &part, const TBOX &table_box);
 
","{'added': [(332, '  // side spacing of extra ColPartitions that will be included in the table')], 'deleted': [(332, '  // side spacing of extra ColParitions that will be included in the table')]}",yes
src\textord\textlineprojection.cpp,src\textord\textlineprojection.cpp,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,7 +17,7 @@
 
 #include <allheaders.h>
 #include ""bbgrid.h""  // Base class.
-#include ""blobbox.h"" // BlobNeighourDir.
+#include ""blobbox.h"" // BlobNeighbourDir.
 #include ""blobs.h""
 #include ""colpartition.h""
 #include ""helpers.h"" // for IntCastRounded
","{'added': [(20, '#include ""blobbox.h"" // BlobNeighbourDir.')], 'deleted': [(20, '#include ""blobbox.h"" // BlobNeighourDir.')]}",yes
src\training\unicharset\normstrngs.cpp,src\training\unicharset\normstrngs.cpp,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -61,7 +61,7 @@ static bool is_single_quote(const char32 ch) {
       0x2018, // left single quotation mark (English, others)
       0x2019, // right single quotation mark (Danish, Finnish, Swedish, Norw.)
               // We may have to introduce a comma set with 0x201a
-      0x201B, // single high-reveresed-9 quotation mark (PropList.txt)
+      0x201B, // single high-reversed-9 quotation mark (PropList.txt)
       0x2032, // prime
       0x300C, // left corner bracket (East Asian languages)
       0xFF07, // fullwidth apostrophe
","{'added': [(64, '      0x201B, // single high-reversed-9 quotation mark (PropList.txt)')], 'deleted': [(64, '      0x201B, // single high-reveresed-9 quotation mark (PropList.txt)')]}",yes
src\wordrec\associate.h,src\wordrec\associate.h,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -32,7 +32,7 @@ namespace tesseract {
 
 class WERD_RES;
 
-// Statisitcs about character widths, gaps and seams.
+// Statistics about character widths, gaps and seams.
 struct AssociateStats {
   AssociateStats() {
     Clear();
","{'added': [(35, '// Statistics about character widths, gaps and seams.')], 'deleted': [(35, '// Statisitcs about character widths, gaps and seams.')]}",yes
src\wordrec\tface.cpp,src\wordrec\tface.cpp,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -70,7 +70,7 @@ int Wordrec::end_recog() {
  * This function holds any necessary post processing for the Wise Owl
  * program.
  */
-void Wordrec::program_editdown(int32_t elasped_time) {
+void Wordrec::program_editdown(int32_t elapsed_time) {
 #ifndef DISABLED_LEGACY_ENGINE
   EndAdaptiveClassifier();
 #endif // ndef DISABLED_LEGACY_ENGINE
","{'added': [(73, 'void Wordrec::program_editdown(int32_t elapsed_time) {')], 'deleted': [(73, 'void Wordrec::program_editdown(int32_t elasped_time) {')]}",yes
src\wordrec\wordrec.h,src\wordrec\wordrec.h,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -52,7 +52,7 @@ public:
   // tface.cpp
   void program_editup(const std::string &textbase, TessdataManager *init_classifier,
                       TessdataManager *init_dict);
-  void program_editdown(int32_t elasped_time);
+  void program_editdown(int32_t elapsed_time);
   int end_recog();
   int dict_word(const WERD_CHOICE &word);
 
@@ -246,7 +246,7 @@ public:
   void program_editup(const std::string &textbase, TessdataManager *init_classifier,
                       TessdataManager *init_dict);
   void cc_recog(WERD_RES *word);
-  void program_editdown(int32_t elasped_time);
+  void program_editdown(int32_t elapsed_time);
   void set_pass1();
   void set_pass2();
   int end_recog();
","{'added': [(55, '  void program_editdown(int32_t elapsed_time);'), (249, '  void program_editdown(int32_t elapsed_time);')], 'deleted': [(55, '  void program_editdown(int32_t elasped_time);'), (249, '  void program_editdown(int32_t elasped_time);')]}",yes
unittest\unicharcompress_test.cc,unittest\unicharcompress_test.cc,fbff9362ceab63d9026982da7abf7fb13c758583,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,"Fix some typos

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -210,7 +210,7 @@ TEST_F(UnicharcompressTest, DoesLigaturesWithDoubles) {
   LoadUnicharset(""por.unicharset"");
   ExpectCorrect(""por"");
   // Check that any unichar-id that is encoded with multiple codes has the
-  // correct encoded_nulll_char_ in between.
+  // correct encoded_null_char_ in between.
   for (int u = 0; u <= unicharset_.size(); ++u) {
     RecodedCharID code;
     int len = compressed_.EncodeUnichar(u, &code);
","{'added': [(213, '  // correct encoded_null_char_ in between.')], 'deleted': [(213, '  // correct encoded_nulll_char_ in between.')]}",yes
appveyor.yml,appveyor.yml,8e6af37da240c4abc764bf54d8eb70e85fe0b1e3,becd395490e01749e1a3f141e3c7c7a59856d7f2,[ci][appveyor] Switch to VS2022.,"@@ -1,13 +1,6 @@
 environment:
   matrix:
-    # does not work with sw at the moment
-    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
-      #platform: Win32
-    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
-      #platform: Win32
-    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
-      #platform: Win64
-    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
+    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
       platform: Win64
 
 configuration:
","{'added': [(3, '    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022')], 'deleted': [(3, '    # does not work with sw at the moment'), (4, '    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015'), (5, '      #platform: Win32'), (6, '    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017'), (7, '      #platform: Win32'), (8, '    #- APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017'), (9, '      #platform: Win64'), (10, '    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019')]}",yes
src\api\pdfrenderer.cpp,src\api\pdfrenderer.cpp,304014f28a0ceed781addd89d14238741ae4e3f4,209cf5c476e393d9f7f0876e0376d11a03dc87ab,Simplify variable declaration.,"@@ -664,8 +664,6 @@ bool TessPDFRenderer::BeginDocumentHandler() {
 bool TessPDFRenderer::imageToPDFObj(Pix *pix, const char *filename, long int objnum,
                                     char **pdf_object, long int *pdf_object_size,
                                     const int jpg_quality) {
-  int sad;
-
   if (!pdf_object_size || !pdf_object) {
     return false;
   }
@@ -676,7 +674,7 @@ bool TessPDFRenderer::imageToPDFObj(Pix *pix, const char *filename, long int obj
   }
 
   L_Compressed_Data *cid = nullptr;
-  sad = l_generateCIDataForPdf(filename, pix, jpg_quality, &cid);
+  auto sad = l_generateCIDataForPdf(filename, pix, jpg_quality, &cid);
 
   if (sad || !cid) {
     l_CIDataDestroy(&cid);
","{'added': [(677, '  auto sad = l_generateCIDataForPdf(filename, pix, jpg_quality, &cid);')], 'deleted': [(667, '  int sad;'), (668, ''), (679, '  sad = l_generateCIDataForPdf(filename, pix, jpg_quality, &cid);')]}",yes
src\api\pdfrenderer.cpp,src\api\pdfrenderer.cpp,209cf5c476e393d9f7f0876e0376d11a03dc87ab,a7f860a41786358ed27adc3061b857c03e548b2f,Fix grey result of indexed PNG in pdfrenderer.,"@@ -664,6 +664,8 @@ bool TessPDFRenderer::BeginDocumentHandler() {
 bool TessPDFRenderer::imageToPDFObj(Pix *pix, const char *filename, long int objnum,
                                     char **pdf_object, long int *pdf_object_size,
                                     const int jpg_quality) {
+  int sad;
+
   if (!pdf_object_size || !pdf_object) {
     return false;
   }
@@ -674,14 +676,7 @@ bool TessPDFRenderer::imageToPDFObj(Pix *pix, const char *filename, long int obj
   }
 
   L_Compressed_Data *cid = nullptr;
-
-  int sad = 0;
-  if (pixGetInputFormat(pix) == IFF_PNG) {
-    sad = pixGenerateCIData(pix, L_FLATE_ENCODE, 0, 0, &cid);
-  }
-  if (!cid) {
-    sad = l_generateCIDataForPdf(filename, pix, jpg_quality, &cid);
-  }
+  sad = l_generateCIDataForPdf(filename, pix, jpg_quality, &cid);
 
   if (sad || !cid) {
     l_CIDataDestroy(&cid);
","{'added': [(667, '  int sad;'), (668, ''), (679, '  sad = l_generateCIDataForPdf(filename, pix, jpg_quality, &cid);')], 'deleted': [(677, ''), (678, '  int sad = 0;'), (679, '  if (pixGetInputFormat(pix) == IFF_PNG) {'), (680, '    sad = pixGenerateCIData(pix, L_FLATE_ENCODE, 0, 0, &cid);'), (681, '  }'), (682, '  if (!cid) {'), (683, '    sad = l_generateCIDataForPdf(filename, pix, jpg_quality, &cid);'), (684, '  }')]}",yes
appveyor.yml,appveyor.yml,0b3b6e5c5470724093ca0b1ef4a87e736db4ffe4,8ee020e14cf5be4e3f0e9beb09b6b050a1871854,Update appveyor.yml,"@@ -26,7 +26,7 @@ only_commits:
 
 before_build:
   - git submodule update --init --recursive
-  - curl -fsS -L -o dl.zip https://github.com/SoftwareNetwork/binaries/raw/master/sw-master-windows-client.zip
+  - curl -fsS -L -o dl.zip https://software-network.org/client/sw-master-windows_x86_64-client.zip
   - 7z x dl.zip
   - set PATH=%PATH%;%cd%
 
","{'added': [(29, '  - curl -fsS -L -o dl.zip https://software-network.org/client/sw-master-windows_x86_64-client.zip')], 'deleted': [(29, '  - curl -fsS -L -o dl.zip https://github.com/SoftwareNetwork/binaries/raw/master/sw-master-windows-client.zip')]}",yes
ChangeLog,ChangeLog,8ee020e14cf5be4e3f0e9beb09b6b050a1871854,1bb72501dd6928f4a2f317120f49fd2a71db1fbf,"Create new release 5.3.4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,13 @@
+2024-01-18 - V5.3.4
+* Fixes for scrollview
+* Fixes for autoconf, clang and sw builds
+* Improve OCR for an image URL
+  * Fail on curl download errors
+  * New parameter curl_cookiefile
+  * Set User-Agent: header field in HTTP request for curl downloads
+* Output directory list from ""combine_tessdata -d"" to stdout
+* Other small improvements for code and documentation.
+
 2023-10-05 - V5.3.3
 * Small code fixes and improvements to fix Coverity Scan issues.
 * Disable -mfpu=neon for aarch64.
","{'added': [(1, '2024-01-18 - V5.3.4'), (2, '* Fixes for scrollview'), (3, '* Fixes for autoconf, clang and sw builds'), (4, '* Improve OCR for an image URL'), (5, '  * Fail on curl download errors'), (6, '  * New parameter curl_cookiefile'), (7, '  * Set User-Agent: header field in HTTP request for curl downloads'), (8, '* Output directory list from ""combine_tessdata -d"" to stdout'), (9, '* Other small improvements for code and documentation.'), (10, '')], 'deleted': []}",yes
VERSION,VERSION,8ee020e14cf5be4e3f0e9beb09b6b050a1871854,1bb72501dd6928f4a2f317120f49fd2a71db1fbf,"Create new release 5.3.4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.3.3
+5.3.4
","{'added': [(1, '5.3.4')], 'deleted': [(1, '5.3.3')]}",yes
configure.ac,configure.ac,8ee020e14cf5be4e3f0e9beb09b6b050a1871854,1bb72501dd6928f4a2f317120f49fd2a71db1fbf,"Create new release 5.3.4

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -28,8 +28,8 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
-PACKAGE_YEAR=2023
-PACKAGE_DATE=""10/05""
+PACKAGE_YEAR=2024
+PACKAGE_DATE=""01/18""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(31, 'PACKAGE_YEAR=2024'), (32, 'PACKAGE_DATE=""01/18""')], 'deleted': [(31, 'PACKAGE_YEAR=2023'), (32, 'PACKAGE_DATE=""10/05""')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,1bb72501dd6928f4a2f317120f49fd2a71db1fbf,bcd6144ca5b4e981a11df194bab66fc63e1512fa,"Set User-Agent: header field in HTTP request for curl downloads

Some servers (for example wikimedia.org) don't allow downloads
with the default user agent of libcurl and send HTTP status 403,
so OCR for images on such servers fails.

Setting the user agent to ""Tesseract OCR"" allows OCR for images
on those servers.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1184,6 +1184,10 @@ bool TessBaseAPI::ProcessPagesInternal(const char *filename, const char *retry_c
       if (curlcode != CURLE_OK) {
         return error(""curl_easy_setopt"");
       }
+      curlcode = curl_easy_setopt(curl, CURLOPT_USERAGENT, ""Tesseract OCR"");
+      if (curlcode != CURLE_OK) {
+        return error(""curl_easy_setopt"");
+      }
       curlcode = curl_easy_perform(curl);
       if (curlcode != CURLE_OK) {
         return error(""curl_easy_perform"");
","{'added': [(1187, '      curlcode = curl_easy_setopt(curl, CURLOPT_USERAGENT, ""Tesseract OCR"");'), (1188, '      if (curlcode != CURLE_OK) {'), (1189, '        return error(""curl_easy_setopt"");'), (1190, '      }')], 'deleted': []}",yes
include\tesseract\publictypes.h,include\tesseract\publictypes.h,10f1d95edd5edf25bcbb9ebfa5ec7d1148f9d69e,637be531f649832032fc477fd7f82249bb7d776b,Update publictypes.h,"@@ -67,7 +67,7 @@ enum PolyBlockType {
   PT_COUNT
 };
 
-/** Returns true if PolyBlockType is of horizontal line type */
+/** Returns true if PolyBlockType is of line type */
 inline bool PTIsLineType(PolyBlockType type) {
   return type == PT_HORZ_LINE || type == PT_VERT_LINE;
 }
","{'added': [(70, '/** Returns true if PolyBlockType is of line type */')], 'deleted': [(70, '/** Returns true if PolyBlockType is of horizontal line type */')]}",yes
src\ccstruct\boxread.cpp,src\ccstruct\boxread.cpp,4a6efcd9b773f5c3a75864f9cab46e49e4be0ec5,061e386125723d6b201777f653bba1a307292703,"Avoid unnecessary conversions from std::string to char pointer

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -76,7 +76,7 @@ FILE *OpenBoxFile(const char *fname) {
 bool ReadAllBoxes(int target_page, bool skip_blanks, const char *filename, std::vector<TBOX> *boxes,
                   std::vector<std::string> *texts, std::vector<std::string> *box_texts,
                   std::vector<int> *pages) {
-  std::ifstream input(BoxFileName(filename).c_str(), std::ios::in | std::ios::binary);
+  std::ifstream input(BoxFileName(filename), std::ios::in | std::ios::binary);
   if (input.fail()) {
     tprintf(""Cannot read box data from '%s'.\n"", BoxFileName(filename).c_str());
     tprintf(""Does it exists?\n"");
","{'added': [(79, '  std::ifstream input(BoxFileName(filename), std::ios::in | std::ios::binary);')], 'deleted': [(79, '  std::ifstream input(BoxFileName(filename).c_str(), std::ios::in | std::ios::binary);')]}",yes
src\training\lstmtraining.cpp,src\training\lstmtraining.cpp,4a6efcd9b773f5c3a75864f9cab46e49e4be0ec5,061e386125723d6b201777f653bba1a307292703,"Avoid unnecessary conversions from std::string to char pointer

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -92,7 +92,7 @@ int main(int argc, char **argv) {
   }
 
   // Check write permissions.
-  std::string test_file = FLAGS_model_output.c_str();
+  std::string test_file = FLAGS_model_output;
   test_file += ""_wtest"";
   FILE *f = fopen(test_file.c_str(), ""wb"");
   if (f != nullptr) {
@@ -107,10 +107,10 @@ int main(int argc, char **argv) {
   }
 
   // Setup the trainer.
-  std::string checkpoint_file = FLAGS_model_output.c_str();
+  std::string checkpoint_file = FLAGS_model_output;
   checkpoint_file += ""_checkpoint"";
   std::string checkpoint_bak = checkpoint_file + "".bak"";
-  tesseract::LSTMTrainer trainer(FLAGS_model_output.c_str(), checkpoint_file.c_str(),
+  tesseract::LSTMTrainer trainer(FLAGS_model_output, checkpoint_file,
                                  FLAGS_debug_interval,
                                  static_cast<int64_t>(FLAGS_max_image_MB) * 1048576);
   if (!trainer.InitCharSet(FLAGS_traineddata.c_str())) {
","{'added': [(95, '  std::string test_file = FLAGS_model_output;'), (110, '  std::string checkpoint_file = FLAGS_model_output;'), (113, '  tesseract::LSTMTrainer trainer(FLAGS_model_output, checkpoint_file,')], 'deleted': [(95, '  std::string test_file = FLAGS_model_output.c_str();'), (110, '  std::string checkpoint_file = FLAGS_model_output.c_str();'), (113, '  tesseract::LSTMTrainer trainer(FLAGS_model_output.c_str(), checkpoint_file.c_str(),')]}",yes
src\training\unicharset\lstmtrainer.cpp,src\training\unicharset\lstmtrainer.cpp,4a6efcd9b773f5c3a75864f9cab46e49e4be0ec5,061e386125723d6b201777f653bba1a307292703,"Avoid unnecessary conversions from std::string to char pointer

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -80,7 +80,7 @@ LSTMTrainer::LSTMTrainer()
   debug_interval_ = 0;
 }
 
-LSTMTrainer::LSTMTrainer(const char *model_base, const char *checkpoint_name,
+LSTMTrainer::LSTMTrainer(const std::string &model_base, const std::string &checkpoint_name,
                          int debug_interval, int64_t max_memory)
     : randomly_rotate_(false),
       training_data_(max_memory),
","{'added': [(83, 'LSTMTrainer::LSTMTrainer(const std::string &model_base, const std::string &checkpoint_name,')], 'deleted': [(83, 'LSTMTrainer::LSTMTrainer(const char *model_base, const char *checkpoint_name,')]}",yes
src\training\unicharset\lstmtrainer.h,src\training\unicharset\lstmtrainer.h,4a6efcd9b773f5c3a75864f9cab46e49e4be0ec5,061e386125723d6b201777f653bba1a307292703,"Avoid unnecessary conversions from std::string to char pointer

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -84,7 +84,8 @@ using TestCallback = std::function<std::string(int, const double *,
 class TESS_UNICHARSET_TRAINING_API LSTMTrainer : public LSTMRecognizer {
 public:
   LSTMTrainer();
-  LSTMTrainer(const char *model_base, const char *checkpoint_name,
+  LSTMTrainer(const std::string &model_base,
+              const std::string &checkpoint_name,
               int debug_interval, int64_t max_memory);
   virtual ~LSTMTrainer();
 
","{'added': [(87, '  LSTMTrainer(const std::string &model_base,'), (88, '              const std::string &checkpoint_name,')], 'deleted': [(87, '  LSTMTrainer(const char *model_base, const char *checkpoint_name,')]}",yes
src\textord\tospace.cpp,src\textord\tospace.cpp,061e386125723d6b201777f653bba1a307292703,04c330907db314e075262915f2cdd29bb179e214,"Fix compiler warnings

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -283,10 +283,8 @@ void Textord::row_spacing_stats(TO_ROW *row, GAPMAP *gapmap, int16_t block_idx,
   int16_t gap_width;
   int16_t real_space_threshold = 0;
   int16_t max = 0;
-  int16_t index;
   int16_t large_gap_count = 0;
   bool suspected_table;
-  int32_t max_max_nonspace; // upper bound
   bool good_block_space_estimate = block_space_gap_width > 0;
   int32_t end_of_row;
   int32_t row_length = 0;
@@ -479,11 +477,12 @@ number of samples can be taken as certain kerns.
   below the threshold.
 */
 
-    max_max_nonspace = int32_t((row->space_threshold + row->kern_size) / 2);
+    // upper bound
+    int32_t max_max_nonspace = int32_t((row->space_threshold + row->kern_size) / 2);
 
     // default
     row->max_nonspace = max_max_nonspace;
-    for (index = 0; index <= max_max_nonspace; index++) {
+    for (int32_t index = 0; index <= max_max_nonspace; index++) {
       if (all_gap_stats.pile_count(index) > max) {
         max = all_gap_stats.pile_count(index);
       }
","{'added': [(480, '    // upper bound'), (481, '    int32_t max_max_nonspace = int32_t((row->space_threshold + row->kern_size) / 2);'), (485, '    for (int32_t index = 0; index <= max_max_nonspace; index++) {')], 'deleted': [(286, '  int16_t index;'), (289, '  int32_t max_max_nonspace; // upper bound'), (482, '    max_max_nonspace = int32_t((row->space_threshold + row->kern_size) / 2);'), (486, '    for (index = 0; index <= max_max_nonspace; index++) {')]}",yes
src\textord\underlin.cpp,src\textord\underlin.cpp,061e386125723d6b201777f653bba1a307292703,04c330907db314e075262915f2cdd29bb179e214,"Fix compiler warnings

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -211,13 +211,11 @@ void vertical_cunderline_projection( // project outlines
   ICOORD pos;               // current point
   ICOORD step;              // edge step
   int16_t lower_y, upper_y; // region limits
-  int32_t length;           // of outline
-  int16_t stepindex;        // current step
   C_OUTLINE_IT out_it = outline->child();
 
   pos = outline->start_pos();
-  length = outline->pathlength();
-  for (stepindex = 0; stepindex < length; stepindex++) {
+  int16_t length = outline->pathlength();
+  for (int16_t stepindex = 0; stepindex < length; stepindex++) {
     step = outline->step(stepindex);
     if (step.x() > 0) {
       lower_y = static_cast<int16_t>(floor(baseline->y(pos.x()) + baseline_offset + 0.5));
","{'added': [(217, '  int16_t length = outline->pathlength();'), (218, '  for (int16_t stepindex = 0; stepindex < length; stepindex++) {')], 'deleted': [(214, '  int32_t length;           // of outline'), (215, '  int16_t stepindex;        // current step'), (219, '  length = outline->pathlength();'), (220, '  for (stepindex = 0; stepindex < length; stepindex++) {')]}",yes
src\textord\pithsync.cpp,src\textord\pithsync.cpp,04c330907db314e075262915f2cdd29bb179e214,ea0b245c43ee850f1e571d469b313b90d58d8b13,"Remove unused assignments (fix compiler warnings)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -316,9 +316,7 @@ double check_pitch_sync2(    // find segmentation
   TBOX this_box;                // bounding box
   TBOX next_box;                // box of next blob
   FPSEGPT *segpt;               // segment point
-  double best_cost;             // best path
   double mean_sum;              // computes result
-  FPCUTPT *best_end;            // end of best path
   int16_t best_fake;            // best fake level
   int16_t best_count;           // no of cuts
   BLOBNBOX_IT this_it;          // copy iterator
@@ -371,8 +369,6 @@ double check_pitch_sync2(    // find segmentation
   }
 
   this_it = *blob_it;
-  best_cost = FLT_MAX;
-  best_end = nullptr;
   this_box = box_next(&this_it); // first box
   next_box = box_next(&this_it); // second box
   blob_index = 1;
@@ -411,7 +407,8 @@ double check_pitch_sync2(    // find segmentation
   }
 
   best_fake = INT16_MAX;
-  best_cost = INT32_MAX;
+  // best path
+  double best_cost = INT32_MAX;
   best_count = INT16_MAX;
   while (x < right_edge + pitch) {
     offset = x < right_edge ? right_edge - x : 0;
@@ -438,7 +435,8 @@ double check_pitch_sync2(    // find segmentation
   }
   ASSERT_HOST(best_fake < INT16_MAX);
 
-  best_end = &cutpts[(best_left_x + best_right_x) / 2 - array_origin];
+  // end of best path
+  FPCUTPT *best_end = &cutpts[(best_left_x + best_right_x) / 2 - array_origin];
   if (this_box.right() == textord_test_x && this_box.top() == textord_test_y) {
     for (x = left_edge - pitch; x < right_edge + pitch; x++) {
       tprintf(""x=%d, C=%g, s=%g, sq=%g, prev=%d\n"", x, cutpts[x - array_origin].cost_function(),
@@ -509,9 +507,7 @@ double check_pitch_sync3(    // find segmentation
   FPSEGPT *segpt;               // segment point
   int minindex;                 // next input position
   int test_index;               // index to mins
-  double best_cost;             // best path
   double mean_sum;              // computes result
-  FPCUTPT *best_end;            // end of best path
   int16_t best_fake;            // best fake level
   int16_t best_count;           // no of cuts
   FPSEGPT_IT seg_it = seg_list; // output iterator
@@ -549,8 +545,6 @@ double check_pitch_sync3(    // find segmentation
                                    offset);
   }
 
-  best_cost = FLT_MAX;
-  best_end = nullptr;
   for (offset = -pitch_error, minindex = 0; offset < pitch_error; offset++, minindex++) {
     mins[minindex] = projection->local_min(x + offset);
   }
@@ -629,7 +623,8 @@ double check_pitch_sync3(    // find segmentation
   }
 
   best_fake = INT16_MAX;
-  best_cost = INT32_MAX;
+  // best path
+  double best_cost = INT32_MAX;
   best_count = INT16_MAX;
   while (x < right_edge + pitch) {
     offset = x < right_edge ? right_edge - x : 0;
@@ -656,7 +651,8 @@ double check_pitch_sync3(    // find segmentation
   }
   ASSERT_HOST(best_fake < INT16_MAX);
 
-  best_end = &cutpts[(best_left_x + best_right_x) / 2 - array_origin];
+  // end of best path
+  FPCUTPT *best_end = &cutpts[(best_left_x + best_right_x) / 2 - array_origin];
   //      for (x=left_edge-pitch;x<right_edge+pitch;x++)
   //      {
   //              tprintf(""x=%d, C=%g, s=%g, sq=%g, prev=%d\n"",
","{'added': [(410, '  // best path'), (411, '  double best_cost = INT32_MAX;'), (438, '  // end of best path'), (439, '  FPCUTPT *best_end = &cutpts[(best_left_x + best_right_x) / 2 - array_origin];'), (626, '  // best path'), (627, '  double best_cost = INT32_MAX;'), (654, '  // end of best path'), (655, '  FPCUTPT *best_end = &cutpts[(best_left_x + best_right_x) / 2 - array_origin];')], 'deleted': [(319, '  double best_cost;             // best path'), (321, '  FPCUTPT *best_end;            // end of best path'), (374, '  best_cost = FLT_MAX;'), (375, '  best_end = nullptr;'), (414, '  best_cost = INT32_MAX;'), (441, '  best_end = &cutpts[(best_left_x + best_right_x) / 2 - array_origin];'), (512, '  double best_cost;             // best path'), (514, '  FPCUTPT *best_end;            // end of best path'), (552, '  best_cost = FLT_MAX;'), (553, '  best_end = nullptr;'), (632, '  best_cost = INT32_MAX;'), (659, '  best_end = &cutpts[(best_left_x + best_right_x) / 2 - array_origin];')]}",yes
README.md,README.md,ea0b245c43ee850f1e571d469b313b90d58d8b13,35d3a9c3550b52fea86bc5c69da079283fde4b79,"Update status badge for GitHub workflow sw (add missing line break)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,7 +1,7 @@
 # Tesseract OCR
 
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
-[![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)
+[![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
 [![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/security/code-scanning)
 [![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)
","{'added': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\\')], 'deleted': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)')]}",yes
README.md,README.md,35d3a9c3550b52fea86bc5c69da079283fde4b79,7c178276d78fc4d2e55d531563275fd9631a72fb,"Update status badge for GitHub workflow sw

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,7 +1,7 @@
 # Tesseract OCR
 
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
-[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\
+[![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
 [![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/security/code-scanning)
 [![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)
","{'added': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)')], 'deleted': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\\')]}",yes
java\com\google\scrollview\events\SVEvent.java,java\com\google\scrollview\events\SVEvent.java,7c178276d78fc4d2e55d531563275fd9631a72fb,67438fad8b851f7e514924e64cee89789f425cf9,"Correct indefinite articles before vowels

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -53,7 +53,7 @@ public class SVEvent {
   }
 
   /**
-   * An event which issues a command (like clicking on a item in the menubar).
+   * An event which issues a command (like clicking on an item in the menubar).
    *
    * @param eventtype The type of the event as specified in SVEventType
    *        (usually SVET_MENU or SVET_POPUP)
","{'added': [(56, '   * An event which issues a command (like clicking on an item in the menubar).')], 'deleted': [(56, '   * An event which issues a command (like clicking on a item in the menubar).')]}",yes
java\com\google\scrollview\ui\SVWindow.java,java\com\google\scrollview\ui\SVWindow.java,7c178276d78fc4d2e55d531563275fd9631a72fb,67438fad8b851f7e514924e64cee89789f425cf9,"Correct indefinite articles before vowels

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -82,7 +82,7 @@ public class SVWindow extends JFrame {
   // This really needs to be a fixed width stroke as the basic stroke is
   // anti-aliased and gets too faint, but the piccolo fixed width stroke
   // is too buggy and generates missing initial moveto in path definition
-  // errors with a IllegalPathStateException that cannot be caught because
+  // errors with an IllegalPathStateException that cannot be caught because
   // it is in the automatic repaint function. If we can fix the exceptions
   // in piccolo, then we can use the following instead of BasicStroke:
   //   import edu.umd.cs.piccolox.util.PFixedWidthStroke;
","{'added': [(85, '  // errors with an IllegalPathStateException that cannot be caught because')], 'deleted': [(85, '  // errors with a IllegalPathStateException that cannot be caught because')]}",yes
src\textord\strokewidth.cpp,src\textord\strokewidth.cpp,7c178276d78fc4d2e55d531563275fd9631a72fb,67438fad8b851f7e514924e64cee89789f425cf9,"Correct indefinite articles before vowels

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1581,7 +1581,7 @@ bool StrokeWidth::DiacriticBlob(BlobGrid *small_grid, BLOBNBOX *blob) {
   // Setup a rectangle search to find its nearest base-character neighbour.
   // We keep 2 different best candidates:
   // best_x_overlap is a category of base characters that have an overlap in x
-  // (like a acute) in which we look for the least y-gap, computed using the
+  // (like an acute) in which we look for the least y-gap, computed using the
   // projection to favor base characters in the same textline.
   // best_y_overlap is a category of base characters that have no x overlap,
   // (nominally a y-overlap is preferrecd but not essential) in which we
","{'added': [(1584, '  // (like an acute) in which we look for the least y-gap, computed using the')], 'deleted': [(1584, '  // (like a acute) in which we look for the least y-gap, computed using the')]}",yes
src\textord\tablerecog.h,src\textord\tablerecog.h,7c178276d78fc4d2e55d531563275fd9631a72fb,67438fad8b851f7e514924e64cee89789f425cf9,"Correct indefinite articles before vowels

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -279,7 +279,7 @@ public:
   // nullptr is returned.
   //
   // Keep in mind, this may ""overgrow"" or ""undergrow"" the size of guess.
-  // Ideally, there is a either a one-to-one correspondence between
+  // Ideally, there is either a one-to-one correspondence between
   // the guess and table or no table at all. This is not the best of
   // assumptions right now, but was made to try to keep things simple in
   // the first pass.
","{'added': [(282, '  // Ideally, there is either a one-to-one correspondence between')], 'deleted': [(282, '  // Ideally, there is a either a one-to-one correspondence between')]}",yes
src\textord\underlin.cpp,src\textord\underlin.cpp,7c178276d78fc4d2e55d531563275fd9631a72fb,67438fad8b851f7e514924e64cee89789f425cf9,"Correct indefinite articles before vowels

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -195,7 +195,7 @@ void find_underlined_blobs(    // get chop points
 /**********************************************************************
  * vertical_cunderline_projection
  *
- * Compute the vertical projection of a outline from its outlines
+ * Compute the vertical projection of an outline from its outlines
  * and add to the given STATS.
  **********************************************************************/
 
","{'added': [(198, ' * Compute the vertical projection of an outline from its outlines')], 'deleted': [(198, ' * Compute the vertical projection of a outline from its outlines')]}",yes
src\wordrec\language_model.h,src\wordrec\language_model.h,7c178276d78fc4d2e55d531563275fd9631a72fb,67438fad8b851f7e514924e64cee89789f425cf9,"Correct indefinite articles before vowels

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -77,7 +77,7 @@ public:
                    float rating_cert_scale);
 
   // Updates language model state of the given BLOB_CHOICE_LIST (from
-  // the ratings matrix) a its parent. Updates pain_points if new
+  // the ratings matrix) and its parent. Updates pain_points if new
   // problematic points are found in the segmentation graph.
   //
   // At most language_model_viterbi_list_size are kept in each
","{'added': [(80, '  // the ratings matrix) and its parent. Updates pain_points if new')], 'deleted': [(80, '  // the ratings matrix) a its parent. Updates pain_points if new')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,67438fad8b851f7e514924e64cee89789f425cf9,317a274b1a968dd689e10fbce501ae47129a23f4,Update issue-bug.yml,"@@ -41,6 +41,7 @@ body:
       options:
         - Windows 11
         - Windows 10
+        - macOS 14 Sonoma
         - macOS 13 Ventura
         - macOS 12 Monterey
         - macOS 11 Big Sur
","{'added': [(44, '        - macOS 14 Sonoma')], 'deleted': []}",yes
src\viewer\svutil.cpp,src\viewer\svutil.cpp,994a4db33b55d12955268ecb5916ddbcf361c722,5530cb7f73680460cf7772e0d4a89e4d9f2fe595,"Force TCP v4 for socket to Java server. Fixes #3000

Without any hints, we can end up with a UDP socket which won't
work with the TCP socket that the Java display server is
listening on. Use hints for TCP v4 so that we get the right
kind of socket returned.

Also, delete some obsolete comments nearby.","@@ -244,15 +244,10 @@ static const char *ScrollViewProg() {
 
 // The arguments to the program to invoke to start ScrollView
 static std::string ScrollViewCommand(const std::string &scrollview_path) {
-  // The following ugly ifdef is to enable the output of the java runtime
-  // to be sent down a black hole on non-windows to ignore all the
-  // exceptions in piccolo. Ideally piccolo would be debugged to make
-  // this unnecessary.
-  // Also the path has to be separated by ; on windows and : otherwise.
+  // Quote our paths on Windows to deal with spaces
 #  ifdef _WIN32
   const char cmd_template[] =
       ""-Djava.library.path=\""%s\"" -jar \""%s/ScrollView.jar\"""";
-
 #  else
   const char cmd_template[] =
       ""-c \""trap 'kill %%1' 0 1 2 ; java ""
@@ -279,6 +274,7 @@ SVNetwork::SVNetwork(const char *hostname, int port) {
   buffer_ptr_ = nullptr;
 
   struct addrinfo *addr_info = nullptr;
+  struct addrinfo hints = {0, PF_INET, SOCK_STREAM};
   auto port_string = std::to_string(port);
 #  ifdef _WIN32
   // Initialize Winsock
@@ -289,7 +285,7 @@ SVNetwork::SVNetwork(const char *hostname, int port) {
   }
 #  endif // _WIN32
 
-  if (getaddrinfo(hostname, port_string.c_str(), nullptr, &addr_info) != 0) {
+  if (getaddrinfo(hostname, port_string.c_str(), &hints, &addr_info) != 0) {
     std::cerr << ""Error resolving name for ScrollView host ""
               << std::string(hostname) << "":"" << port << std::endl;
 #  ifdef _WIN32
","{'added': [(247, '  // Quote our paths on Windows to deal with spaces'), (277, '  struct addrinfo hints = {0, PF_INET, SOCK_STREAM};'), (288, '  if (getaddrinfo(hostname, port_string.c_str(), &hints, &addr_info) != 0) {')], 'deleted': [(247, '  // The following ugly ifdef is to enable the output of the java runtime'), (248, '  // to be sent down a black hole on non-windows to ignore all the'), (249, '  // exceptions in piccolo. Ideally piccolo would be debugged to make'), (250, '  // this unnecessary.'), (251, '  // Also the path has to be separated by ; on windows and : otherwise.'), (255, ''), (292, '  if (getaddrinfo(hostname, port_string.c_str(), nullptr, &addr_info) != 0) {')]}",yes
src\lstm\maxpool.cpp,src\lstm\maxpool.cpp,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -19,7 +19,7 @@
 
 namespace tesseract {
 
-Maxpool::Maxpool(const char *name, int ni, int x_scale, int y_scale)
+Maxpool::Maxpool(const std::string &name, int ni, int x_scale, int y_scale)
     : Reconfig(name, ni, x_scale, y_scale) {
   type_ = NT_MAXPOOL;
   no_ = ni;
","{'added': [(22, 'Maxpool::Maxpool(const std::string &name, int ni, int x_scale, int y_scale)')], 'deleted': [(22, 'Maxpool::Maxpool(const char *name, int ni, int x_scale, int y_scale)')]}",yes
src\lstm\maxpool.h,src\lstm\maxpool.h,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -2,7 +2,6 @@
 // File:        maxpool.h
 // Description: Standard Max-Pooling layer.
 // Author:      Ray Smith
-// Created:     Tue Mar 18 16:28:18 PST 2014
 //
 // (C) Copyright 2014, Google Inc.
 // Licensed under the Apache License, Version 2.0 (the ""License"");
@@ -29,7 +28,7 @@ namespace tesseract {
 class Maxpool : public Reconfig {
 public:
   TESS_API
-  Maxpool(const char *name, int ni, int x_scale, int y_scale);
+  Maxpool(const std::string &name, int ni, int x_scale, int y_scale);
   ~Maxpool() override = default;
 
   // Accessors.
","{'added': [(31, '  Maxpool(const std::string &name, int ni, int x_scale, int y_scale);')], 'deleted': [(5, '// Created:     Tue Mar 18 16:28:18 PST 2014'), (32, '  Maxpool(const char *name, int ni, int x_scale, int y_scale);')]}",yes
src\lstm\network.cpp,src\lstm\network.cpp,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -264,7 +264,7 @@ Network *Network::CreateFromFile(TFile *fp) {
       network = new LSTM(name, ni, no, no, false, type);
       break;
     case NT_MAXPOOL:
-      network = new Maxpool(name.c_str(), ni, 0, 0);
+      network = new Maxpool(name, ni, 0, 0);
       break;
     // All variants of Parallel.
     case NT_PARALLEL:
@@ -272,10 +272,10 @@ Network *Network::CreateFromFile(TFile *fp) {
     case NT_PAR_RL_LSTM:
     case NT_PAR_UD_LSTM:
     case NT_PAR_2D_LSTM:
-      network = new Parallel(name.c_str(), type);
+      network = new Parallel(name, type);
       break;
     case NT_RECONFIG:
-      network = new Reconfig(name.c_str(), ni, 0, 0);
+      network = new Reconfig(name, ni, 0, 0);
       break;
     // All variants of reversed.
     case NT_XREVERSED:
@@ -284,11 +284,11 @@ Network *Network::CreateFromFile(TFile *fp) {
       network = new Reversed(name, type);
       break;
     case NT_SERIES:
-      network = new Series(name.c_str());
+      network = new Series(name);
       break;
     case NT_TENSORFLOW:
 #ifdef INCLUDE_TENSORFLOW
-      network = new TFNetwork(name.c_str());
+      network = new TFNetwork(name);
 #else
       tprintf(""TensorFlow not compiled in! -DINCLUDE_TENSORFLOW\n"");
 #endif
@@ -302,7 +302,7 @@ Network *Network::CreateFromFile(TFile *fp) {
     case NT_LOGISTIC:
     case NT_POSCLIP:
     case NT_SYMCLIP:
-      network = new FullyConnected(name.c_str(), ni, no, type);
+      network = new FullyConnected(name, ni, no, type);
       break;
     default:
       break;
","{'added': [(267, '      network = new Maxpool(name, ni, 0, 0);'), (275, '      network = new Parallel(name, type);'), (278, '      network = new Reconfig(name, ni, 0, 0);'), (287, '      network = new Series(name);'), (291, '      network = new TFNetwork(name);'), (305, '      network = new FullyConnected(name, ni, no, type);')], 'deleted': [(267, '      network = new Maxpool(name.c_str(), ni, 0, 0);'), (275, '      network = new Parallel(name.c_str(), type);'), (278, '      network = new Reconfig(name.c_str(), ni, 0, 0);'), (287, '      network = new Series(name.c_str());'), (291, '      network = new TFNetwork(name.c_str());'), (305, '      network = new FullyConnected(name.c_str(), ni, no, type);')]}",yes
src\lstm\parallel.cpp,src\lstm\parallel.cpp,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -31,7 +31,7 @@
 namespace tesseract {
 
 // ni_ and no_ will be set by AddToStack.
-Parallel::Parallel(const char *name, NetworkType type) : Plumbing(name) {
+Parallel::Parallel(const std::string &name, NetworkType type) : Plumbing(name) {
   type_ = type;
 }
 
","{'added': [(34, 'Parallel::Parallel(const std::string &name, NetworkType type) : Plumbing(name) {')], 'deleted': [(34, 'Parallel::Parallel(const char *name, NetworkType type) : Plumbing(name) {')]}",yes
src\lstm\parallel.h,src\lstm\parallel.h,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -27,7 +27,7 @@ class Parallel : public Plumbing {
 public:
   // ni_ and no_ will be set by AddToStack.
   TESS_API
-  Parallel(const char *name, NetworkType type);
+  Parallel(const std::string &name, NetworkType type);
 
   // Returns the shape output from the network given an input shape (which may
   // be partially unknown ie zero).
","{'added': [(30, '  Parallel(const std::string &name, NetworkType type);')], 'deleted': [(30, '  Parallel(const char *name, NetworkType type);')]}",yes
src\lstm\reconfig.cpp,src\lstm\reconfig.cpp,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -20,7 +20,7 @@
 
 namespace tesseract {
 
-Reconfig::Reconfig(const char *name, int ni, int x_scale, int y_scale)
+Reconfig::Reconfig(const std::string &name, int ni, int x_scale, int y_scale)
     : Network(NT_RECONFIG, name, ni, ni * x_scale * y_scale)
     , x_scale_(x_scale)
     , y_scale_(y_scale) {}
","{'added': [(23, 'Reconfig::Reconfig(const std::string &name, int ni, int x_scale, int y_scale)')], 'deleted': [(23, 'Reconfig::Reconfig(const char *name, int ni, int x_scale, int y_scale)')]}",yes
src\lstm\reconfig.h,src\lstm\reconfig.h,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -31,7 +31,7 @@ namespace tesseract {
 class Reconfig : public Network {
 public:
   TESS_API
-  Reconfig(const char *name, int ni, int x_scale, int y_scale);
+  Reconfig(const std::string &name, int ni, int x_scale, int y_scale);
   ~Reconfig() override = default;
 
   // Returns the shape output from the network given an input shape (which may
","{'added': [(34, '  Reconfig(const std::string &name, int ni, int x_scale, int y_scale);')], 'deleted': [(34, '  Reconfig(const char *name, int ni, int x_scale, int y_scale);')]}",yes
src\lstm\series.cpp,src\lstm\series.cpp,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -25,7 +25,7 @@
 namespace tesseract {
 
 // ni_ and no_ will be set by AddToStack.
-Series::Series(const char *name) : Plumbing(name) {
+Series::Series(const std::string &name) : Plumbing(name) {
   type_ = NT_SERIES;
 }
 
","{'added': [(28, 'Series::Series(const std::string &name) : Plumbing(name) {')], 'deleted': [(28, 'Series::Series(const char *name) : Plumbing(name) {')]}",yes
src\lstm\series.h,src\lstm\series.h,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -27,7 +27,7 @@ class Series : public Plumbing {
 public:
   // ni_ and no_ will be set by AddToStack.
   TESS_API
-  explicit Series(const char *name);
+  explicit Series(const std::string &name);
   ~Series() override = default;
 
   // Returns the shape output from the network given an input shape (which may
","{'added': [(30, '  explicit Series(const std::string &name);')], 'deleted': [(30, '  explicit Series(const char *name);')]}",yes
src\lstm\tfnetwork.cpp,src\lstm\tfnetwork.cpp,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ using tensorflow::TensorShape;
 
 namespace tesseract {
 
-TFNetwork::TFNetwork(const char *name) : Network(NT_TENSORFLOW, name, 0, 0) {}
+TFNetwork::TFNetwork(const std::string &name) : Network(NT_TENSORFLOW, name, 0, 0) {}
 
 int TFNetwork::InitFromProtoStr(const std::string &proto_str) {
   if (!model_proto_.ParseFromString(proto_str))
","{'added': [(32, 'TFNetwork::TFNetwork(const std::string &name) : Network(NT_TENSORFLOW, name, 0, 0) {}')], 'deleted': [(32, 'TFNetwork::TFNetwork(const char *name) : Network(NT_TENSORFLOW, name, 0, 0) {}')]}",yes
src\lstm\tfnetwork.h,src\lstm\tfnetwork.h,d2d1ff565c1f89051aac518ce5639acb1a936c2f,c69065c36057a099356c13903f8cde236ffb8a32,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -34,7 +34,7 @@ namespace tesseract {
 
 class TFNetwork : public Network {
 public:
-  explicit TFNetwork(const char *name);
+  explicit TFNetwork(const std::string &name);
   virtual ~TFNetwork() = default;
 
   // Returns the required shape input to the network.
","{'added': [(37, '  explicit TFNetwork(const std::string &name);')], 'deleted': [(37, '  explicit TFNetwork(const char *name);')]}",yes
src\lstm\network.cpp,src\lstm\network.cpp,c69065c36057a099356c13903f8cde236ffb8a32,6518489c75cd0a29531c3b3d230c08a0666b5611,"Remove unnecessary conversions from std::string to C string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -252,16 +252,16 @@ Network *Network::CreateFromFile(TFile *fp) {
 
   switch (type) {
     case NT_CONVOLVE:
-      network = new Convolve(name.c_str(), ni, 0, 0);
+      network = new Convolve(name, ni, 0, 0);
       break;
     case NT_INPUT:
-      network = new Input(name.c_str(), ni, no);
+      network = new Input(name, ni, no);
       break;
     case NT_LSTM:
     case NT_LSTM_SOFTMAX:
     case NT_LSTM_SOFTMAX_ENCODED:
     case NT_LSTM_SUMMARY:
-      network = new LSTM(name.c_str(), ni, no, no, false, type);
+      network = new LSTM(name, ni, no, no, false, type);
       break;
     case NT_MAXPOOL:
       network = new Maxpool(name.c_str(), ni, 0, 0);
@@ -281,7 +281,7 @@ Network *Network::CreateFromFile(TFile *fp) {
     case NT_XREVERSED:
     case NT_YREVERSED:
     case NT_XYTRANSPOSE:
-      network = new Reversed(name.c_str(), type);
+      network = new Reversed(name, type);
       break;
     case NT_SERIES:
       network = new Series(name.c_str());
","{'added': [(255, '      network = new Convolve(name, ni, 0, 0);'), (258, '      network = new Input(name, ni, no);'), (264, '      network = new LSTM(name, ni, no, no, false, type);'), (284, '      network = new Reversed(name, type);')], 'deleted': [(255, '      network = new Convolve(name.c_str(), ni, 0, 0);'), (258, '      network = new Input(name.c_str(), ni, no);'), (264, '      network = new LSTM(name.c_str(), ni, no, no, false, type);'), (284, '      network = new Reversed(name.c_str(), type);')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,6518489c75cd0a29531c3b3d230c08a0666b5611,5530cb7f73680460cf7772e0d4a89e4d9f2fe595,"Remove whitespace at line endings

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -35,12 +35,12 @@ jobs:
     - name: packages
       if: matrix.os == 'ubuntu-22.04'
       run: sudo dnf -y install cmake gcc lld which flex bison clang clang-tools-extra git
-      
+
     - uses: actions/checkout@v4
       with:
         submodules: recursive
     - uses: egorpugin/sw-action@master
-      
+
     - name: build
       if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022')
       run: ./sw -static -shared -platform x86,x64 -config d,r build
","{'added': [(38, ''), (43, '')], 'deleted': [(38, ''), (43, '')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,5530cb7f73680460cf7772e0d4a89e4d9f2fe595,aa671beb57a812fbca9a1ee04f17eec98eeab68e,Update sw.yml,"@@ -67,7 +67,7 @@ jobs:
       shell: pwsh
 
     - name: test
-      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022')
+      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'macos-13')
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       continue-on-error: true
     - name: test
","{'added': [(70, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'macos-13')"")], 'deleted': [(70, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022')"")]}",yes
README.md,README.md,aa671beb57a812fbca9a1ee04f17eec98eeab68e,e97dfad171aa6b810cadd5269008cecf720254fc,Update README.md,"@@ -36,7 +36,7 @@ Tesseract has **unicode (UTF-8) support**, and can **recognize [more than 100 la
 
 Tesseract supports **[various image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.
 
-Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO (the last one - since version 4.1.0).
+Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO.
 
 You should note that in many cases, in order to get better OCR results, you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.
 
","{'added': [(39, 'Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO.')], 'deleted': [(39, 'Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO (the last one - since version 4.1.0).')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,e97dfad171aa6b810cadd5269008cecf720254fc,d522f3bd1c03fb8f831039f8392b397ae20546b1,Update sw.yml,"@@ -76,13 +76,13 @@ jobs:
       continue-on-error: true
 
     - name: test-nightly
-      if: matrix.os != 'windows-2022' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'
+      if: matrix.os != 'windows-2022' && matrix.os != 'macos-13' && github.event.schedule=='0 0 * * *'
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1
       continue-on-error: true
 
-    # windows and macos-12 tests hang here for some reason, investigate
+    # windows and macos-13 tests hang here for some reason, investigate
     #- name: test
-      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-12'
+      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-13'
       #run: ./sw test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       #continue-on-error: true
 
","{'added': [(79, ""      if: matrix.os != 'windows-2022' && matrix.os != 'macos-13' && github.event.schedule=='0 0 * * *'""), (83, '    # windows and macos-13 tests hang here for some reason, investigate'), (85, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-13'"")], 'deleted': [(79, ""      if: matrix.os != 'windows-2022' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'""), (83, '    # windows and macos-12 tests hang here for some reason, investigate'), (85, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-12'"")]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,d522f3bd1c03fb8f831039f8392b397ae20546b1,640a39bc03c4fb03cd08f56277648c6de86537c0,Update sw.yml,"@@ -34,13 +34,11 @@ jobs:
     steps:
     - name: packages
       if: matrix.os == 'ubuntu-22.04'
-      run: sudo dnf -y install cmake gcc lld which
+      run: sudo dnf -y install cmake gcc lld which flex bison clang clang-tools-extra git
       
-    - uses: actions/checkout@v4
     - uses: actions/checkout@v4
       with:
-        repository: tesseract-ocr/test
-        path: tesseract/test    
+        submodules: recursive
     - uses: egorpugin/sw-action@master
       
     - name: build
","{'added': [(37, '      run: sudo dnf -y install cmake gcc lld which flex bison clang clang-tools-extra git'), (41, '        submodules: recursive')], 'deleted': [(37, '      run: sudo dnf -y install cmake gcc lld which'), (39, '    - uses: actions/checkout@v4'), (42, '        repository: tesseract-ocr/test'), (43, '        path: tesseract/test')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,640a39bc03c4fb03cd08f56277648c6de86537c0,53da1170483ab95f6f98e5752090f309f5986a1b,Update sw.yml,"@@ -34,7 +34,7 @@ jobs:
     steps:
     - name: packages
       if: matrix.os == 'ubuntu-22.04'
-      run: sudo dnf -y install cmake gcc lld
+      run: sudo dnf -y install cmake gcc lld which
       
     - uses: actions/checkout@v4
     - uses: actions/checkout@v4
","{'added': [(37, '      run: sudo dnf -y install cmake gcc lld which')], 'deleted': [(37, '      run: sudo dnf -y install cmake gcc lld')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,53da1170483ab95f6f98e5752090f309f5986a1b,127292fa8ea29f5231b48f641f8fd91907e6d3a4,Update sw.yml,"@@ -34,7 +34,7 @@ jobs:
     steps:
     - name: packages
       if: matrix.os == 'ubuntu-22.04'
-      run: sudo dnf install cmake
+      run: sudo dnf -y install cmake gcc lld
       
     - uses: actions/checkout@v4
     - uses: actions/checkout@v4
","{'added': [(37, '      run: sudo dnf -y install cmake gcc lld')], 'deleted': [(37, '      run: sudo dnf install cmake')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,127292fa8ea29f5231b48f641f8fd91907e6d3a4,4dea21b1e8630f649d89234ba376def2a15765bc,Update sw.yml,"@@ -32,16 +32,16 @@ jobs:
             container: fedora:latest
 
     steps:
+    - name: packages
+      if: matrix.os == 'ubuntu-22.04'
+      run: sudo dnf install cmake
+      
     - uses: actions/checkout@v4
     - uses: actions/checkout@v4
       with:
         repository: tesseract-ocr/test
         path: tesseract/test    
     - uses: egorpugin/sw-action@master
-
-    - name: packages
-      if: matrix.os == 'ubuntu-22.04'
-      run: sudo dnf install cmake
       
     - name: build
       if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022')
","{'added': [(35, '    - name: packages'), (36, ""      if: matrix.os == 'ubuntu-22.04'""), (37, '      run: sudo dnf install cmake'), (38, '')], 'deleted': [(41, ''), (42, '    - name: packages'), (43, ""      if: matrix.os == 'ubuntu-22.04'""), (44, '      run: sudo dnf install cmake')]}",no
.github\workflows\sw.yml,.github\workflows\sw.yml,4dea21b1e8630f649d89234ba376def2a15765bc,764464e09821debc63f004f3a7786843de95c51e,Update sw.yml,"@@ -39,6 +39,10 @@ jobs:
         path: tesseract/test    
     - uses: egorpugin/sw-action@master
 
+    - name: packages
+      if: matrix.os == 'ubuntu-22.04'
+      run: sudo dnf install cmake
+      
     - name: build
       if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022')
       run: ./sw -static -shared -platform x86,x64 -config d,r build
","{'added': [(42, '    - name: packages'), (43, ""      if: matrix.os == 'ubuntu-22.04'""), (44, '      run: sudo dnf install cmake'), (45, '')], 'deleted': []}",no
.github\workflows\sw.yml,.github\workflows\sw.yml,764464e09821debc63f004f3a7786843de95c51e,87db4e26c4f478378a5d8373dc02f51f31f990fb,Update sw.yml,"@@ -35,7 +35,7 @@ jobs:
     - uses: actions/checkout@v4
     - uses: actions/checkout@v4
       with:
-        repository: https://github.com/tesseract-ocr/tesseract
+        repository: tesseract-ocr/test
         path: tesseract/test    
     - uses: egorpugin/sw-action@master
 
","{'added': [(38, '        repository: tesseract-ocr/test')], 'deleted': [(38, '        repository: https://github.com/tesseract-ocr/tesseract')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,87db4e26c4f478378a5d8373dc02f51f31f990fb,1ec39570033ef8dbd4767df838337b96f89fe80c,Update sw.yml,"@@ -32,9 +32,11 @@ jobs:
             container: fedora:latest
 
     steps:
+    - uses: actions/checkout@v4
     - uses: actions/checkout@v4
       with:
-        submodules: recursive
+        repository: https://github.com/tesseract-ocr/tesseract
+        path: tesseract/test    
     - uses: egorpugin/sw-action@master
 
     - name: build
","{'added': [(35, '    - uses: actions/checkout@v4'), (38, '        repository: https://github.com/tesseract-ocr/tesseract'), (39, '        path: tesseract/test')], 'deleted': [(37, '        submodules: recursive')]}",no
.github\workflows\sw.yml,.github\workflows\sw.yml,1ec39570033ef8dbd4767df838337b96f89fe80c,a3b627621f1d38a096c0c89e8ffa009eb6efc02e,Update sw.yml,"@@ -32,7 +32,7 @@ jobs:
             container: fedora:latest
 
     steps:
-    - uses: actions/checkout@v3
+    - uses: actions/checkout@v4
       with:
         submodules: recursive
     - uses: egorpugin/sw-action@master
","{'added': [(35, '    - uses: actions/checkout@v4')], 'deleted': [(35, '    - uses: actions/checkout@v3')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,a3b627621f1d38a096c0c89e8ffa009eb6efc02e,36f3efdfac742b221aaec5dd4328eaf0191d763d,Update sw.yml,"@@ -22,10 +22,14 @@ on:
 jobs:
   build:
     runs-on: ${{ matrix.os }}
+    container: ${{ matrix.container }}
     strategy:
       fail-fast: false
       matrix:
-        os: [windows-2022, ubuntu-22.04, macos-12]
+        os: [windows-2022, macos-13]
+        include:
+          - os: ubuntu-22.04
+            container: fedora:latest
 
     steps:
     - uses: actions/checkout@v3
","{'added': [(25, '    container: ${{ matrix.container }}'), (29, '        os: [windows-2022, macos-13]'), (30, '        include:'), (31, '          - os: ubuntu-22.04'), (32, '            container: fedora:latest')], 'deleted': [(28, '        os: [windows-2022, ubuntu-22.04, macos-12]')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,36f3efdfac742b221aaec5dd4328eaf0191d763d,dd1c85dc1e6ce27f6cd0240fe6510c8b729f10de,"Fail on curl download errors

Fail with an error message instead of trying to handle the text
from an HTML error page as an image and fail later for HTTP codes
equal or larger than 400.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1144,6 +1144,10 @@ bool TessBaseAPI::ProcessPagesInternal(const char *filename, const char *retry_c
       if (curlcode != CURLE_OK) {
         return error(""curl_easy_setopt"");
       }
+      curlcode = curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1L);
+      if (curlcode != CURLE_OK) {
+        return error(""curl_easy_setopt"");
+      }
       // Follow HTTP, HTTPS, FTP and FTPS redirects.
       curlcode = curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1);
       if (curlcode != CURLE_OK) {
","{'added': [(1147, '      curlcode = curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1L);'), (1148, '      if (curlcode != CURLE_OK) {'), (1149, '        return error(""curl_easy_setopt"");'), (1150, '      }')], 'deleted': []}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,dd1c85dc1e6ce27f6cd0240fe6510c8b729f10de,bb2af5705438d355317a02a92fc0902f795512ab,"Add new parameter curl_cookiefile for curl_easy_setopt

This allows OCR for URLs which require a session cookie.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -101,6 +101,7 @@ static BOOL_VAR(stream_filelist, false, ""Stream a filelist from stdin"");
 static STRING_VAR(document_title, """", ""Title of output document (used for hOCR and PDF output)"");
 #ifdef HAVE_LIBCURL
 static INT_VAR(curl_timeout, 0, ""Timeout for curl in seconds"");
+static STRING_VAR(curl_cookiefile, """", ""File with cookie data for curl"");
 #endif
 
 /** Minimum sensible image size to be worth running Tesseract. */
@@ -1164,6 +1165,13 @@ bool TessBaseAPI::ProcessPagesInternal(const char *filename, const char *retry_c
           return error(""curl_easy_setopt"");
         }
       }
+      std::string cookiefile = curl_cookiefile;
+      if (!cookiefile.empty()) {
+        curlcode = curl_easy_setopt(curl, CURLOPT_COOKIEFILE, cookiefile.c_str());
+        if (curlcode != CURLE_OK) {
+          return error(""curl_easy_setopt"");
+        }
+      }
       curlcode = curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteMemoryCallback);
       if (curlcode != CURLE_OK) {
         return error(""curl_easy_setopt"");
","{'added': [(104, 'static STRING_VAR(curl_cookiefile, """", ""File with cookie data for curl"");'), (1168, '      std::string cookiefile = curl_cookiefile;'), (1169, '      if (!cookiefile.empty()) {'), (1170, '        curlcode = curl_easy_setopt(curl, CURLOPT_COOKIEFILE, cookiefile.c_str());'), (1171, '        if (curlcode != CURLE_OK) {'), (1172, '          return error(""curl_easy_setopt"");'), (1173, '        }'), (1174, '      }')], 'deleted': []}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,bb2af5705438d355317a02a92fc0902f795512ab,3a40824561e3dded15c4cd89ba0f7faa6b78e93d,"ci: Fix clang build for Ubuntu 22.04

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -15,8 +15,8 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++ }
-          - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++ }
+          - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++, cxxflags: '-g -O2 -fsanitize=address,undefined' }
+          - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++, cxxflags: '-g -O2 -fsanitize=address,undefined -stdlib=libc++' }
     steps:
     - uses: actions/checkout@v3
       with:
@@ -43,7 +43,7 @@ jobs:
     - name: Configure (Linux)
       run: |
            ./configure '--disable-shared' 'CXX=${{ matrix.config.cxx }}' \
-               'CXXFLAGS=-g -O2 -fsanitize=address,undefined'
+               'CXXFLAGS=${{ matrix.config.cxxflags }}'
 
     - name: Make and Install Tesseract
       run: |
","{'added': [(18, ""          - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++, cxxflags: '-g -O2 -fsanitize=address,undefined' }""), (19, ""          - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++, cxxflags: '-g -O2 -fsanitize=address,undefined -stdlib=libc++' }""), (46, ""               'CXXFLAGS=${{ matrix.config.cxxflags }}'"")], 'deleted': [(18, '          - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++ }'), (19, '          - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++ }'), (46, ""               'CXXFLAGS=-g -O2 -fsanitize=address,undefined'"")]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,3a40824561e3dded15c4cd89ba0f7faa6b78e93d,670672d50be493b9e82a664083f082b2cf3468e7,"ci: Allow manual trigger of unittest

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -5,6 +5,7 @@ on:
   #push:
   schedule:
     - cron: 0 0 * * *
+  workflow_dispatch:
 
 jobs:
   sanitizers:
","{'added': [(8, '  workflow_dispatch:')], 'deleted': []}",yes
autogen.sh,autogen.sh,670672d50be493b9e82a664083f082b2cf3468e7,eb612f07868cc0b53d3aa0140982991f6aeb0f48,Move bail_out function before libtoolize check,"@@ -46,6 +46,14 @@ if [ ""$1"" = ""clean"" ]; then
     find . -iname ""Makefile.in"" -type f -exec rm '{}' +
 fi
 
+bail_out()
+{
+    echo
+    echo ""  Something went wrong, bailing out!""
+    echo
+    exit 1
+}
+
 # Prevent any errors that might result from failing to properly invoke
 # `libtoolize` or `glibtoolize,` whichever is present on your system,
 # from occurring by testing for its existence and capturing the absolute path to
@@ -59,14 +67,6 @@ else
   bail_out
 fi
 
-bail_out()
-{
-    echo
-    echo ""  Something went wrong, bailing out!""
-    echo
-    exit 1
-}
-
 # --- Step 1: Generate aclocal.m4 from:
 #             . acinclude.m4
 #             . config/*.m4 (these files are referenced in acinclude.m4)
","{'added': [(49, 'bail_out()'), (50, '{'), (51, '    echo'), (52, '    echo ""  Something went wrong, bailing out!""'), (53, '    echo'), (54, '    exit 1'), (55, '}'), (56, '')], 'deleted': [(62, 'bail_out()'), (63, '{'), (64, '    echo'), (65, '    echo ""  Something went wrong, bailing out!""'), (66, '    echo'), (67, '    exit 1'), (68, '}'), (69, '')]}",yes
src\training\combine_tessdata.cpp,src\training\combine_tessdata.cpp,07174708ff3ab8e64017e066b9d863d63b66f699,8cee06da5acb46124b1261e8122964637e3415e7,Document hidden combo flags,"@@ -265,6 +265,9 @@ int main(int argc, char **argv) {
         ""Usage for listing directory of components:\n""
         ""  %s -d traineddata_file\n\n"",
         argv[0]);
+    printf(
+        ""NOTE: Above two flags may combined as -dl or -ld to get both outputs""
+        );
     printf(
         ""Usage for compacting LSTM component to int:\n""
         ""  %s -c traineddata_file\n"",
","{'added': [(268, '    printf('), (269, '        ""NOTE: Above two flags may combined as -dl or -ld to get both outputs""'), (270, '        );')], 'deleted': []}",yes
src\ccutil\tessdatamanager.cpp,src\ccutil\tessdatamanager.cpp,8cee06da5acb46124b1261e8122964637e3415e7,dc228edc566a3788f26048f7f8300f6517229a3a,Output directory list to stdout. Fixes #4149,"@@ -211,11 +211,11 @@ void TessdataManager::Clear() {
 
 // Prints a directory of contents.
 void TessdataManager::Directory() const {
-  tprintf(""Version:%s\n"", VersionString().c_str());
+  printf(""Version:%s\n"", VersionString().c_str());
   auto offset = TESSDATA_NUM_ENTRIES * sizeof(int64_t);
   for (unsigned i = 0; i < TESSDATA_NUM_ENTRIES; ++i) {
     if (!entries_[i].empty()) {
-      tprintf(""%u:%s:size=%zu, offset=%zu\n"", i, kTessdataFileSuffixes[i], entries_[i].size(),
+      printf(""%u:%s:size=%zu, offset=%zu\n"", i, kTessdataFileSuffixes[i], entries_[i].size(),
               offset);
       offset += entries_[i].size();
     }
","{'added': [(214, '  printf(""Version:%s\\n"", VersionString().c_str());'), (218, '      printf(""%u:%s:size=%zu, offset=%zu\\n"", i, kTessdataFileSuffixes[i], entries_[i].size(),')], 'deleted': [(214, '  tprintf(""Version:%s\\n"", VersionString().c_str());'), (218, '      tprintf(""%u:%s:size=%zu, offset=%zu\\n"", i, kTessdataFileSuffixes[i], entries_[i].size(),')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,dc228edc566a3788f26048f7f8300f6517229a3a,e082522c248d3121e466959a8ba4fd4f7ad1a525,"Update cmake-win64.yml

use recent version of png (1.6.40) and tiff (4.6.0)","@@ -45,8 +45,8 @@ jobs:
       - name: Build and Install libpng
         shell: cmd
         run: |
-             curl -sSL -o lpng1639.zip https://download.sourceforge.net/libpng/lpng1639.zip
-             unzip.exe  -qq lpng1639.zip
+             curl -sSL -o lpng1639.zip https://download.sourceforge.net/libpng/lpng1640.zip
+             unzip.exe  -qq lpng1640.zip
              cd lpng1639
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF
              cmake --build build --config Release --target install
@@ -73,7 +73,7 @@ jobs:
       - name: Build and Install libtiff
         shell: cmd
         run: |
-             git clone -c advice.detachedHead=false -b ""v4.0.10"" --depth 1 https://gitlab.com/libtiff/libtiff.git
+             git clone -c advice.detachedHead=false -b ""v4.6.0"" --depth 1 https://gitlab.com/libtiff/libtiff.git
              cd libtiff
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF
              cmake --build build --config Release --target install
","{'added': [(48, '             curl -sSL -o lpng1639.zip https://download.sourceforge.net/libpng/lpng1640.zip'), (49, '             unzip.exe  -qq lpng1640.zip'), (76, '             git clone -c advice.detachedHead=false -b ""v4.6.0"" --depth 1 https://gitlab.com/libtiff/libtiff.git')], 'deleted': [(48, '             curl -sSL -o lpng1639.zip https://download.sourceforge.net/libpng/lpng1639.zip'), (49, '             unzip.exe  -qq lpng1639.zip'), (76, '             git clone -c advice.detachedHead=false -b ""v4.0.10"" --depth 1 https://gitlab.com/libtiff/libtiff.git')]}",yes
ChangeLog,ChangeLog,e082522c248d3121e466959a8ba4fd4f7ad1a525,d366e1e987e62ab6b3e1d71efb7f860d9ef09757,"Create new release 5.3.3

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,12 @@
+2023-10-05 - V5.3.3
+* Small code fixes and improvements to fix Coverity Scan issues.
+* Disable -mfpu=neon for aarch64.
+* Fix build without git clone in cloned directory (required for FreeBSD).
+* Other build fixes for autotools, cmake and sw.
+* Fix regression in layout detection which was introduced in release 5.0.0.
+* Fix regression which prevented loading of submodels, introduced in release 5.0.0-rc2.
+* Other small improvements for code and documentation.
+
 2023-07-11 - V5.3.2
 * Updates for snap package building.
 * Support for Sgaw and W Pwo Karen languages in the Myanmar validator (#4065).
@@ -264,7 +273,7 @@
   * Many other fixes, including the way in which the chopper finds chops and messes with the outline while it does so.
 
 2010-11-29 - V3.01
-  * Removed old/dead serialise/deserialze methods on *LISTIZED classes.
+  * Removed old/dead serialise/deserialize methods on *LISTIZED classes.
   * Total rewrite of DENORM to better encapsulate operation and make
     for potential to extract features from images.
   * Thread-safety! Moved all critical global and static variables to members of the appropriate class. Tesseract is now thread-safe (multiple instances can be used in parallel in multiple threads.) with the minor exception that some control parameters are still global and affect all threads.
","{'added': [(1, '2023-10-05 - V5.3.3'), (2, '* Small code fixes and improvements to fix Coverity Scan issues.'), (3, '* Disable -mfpu=neon for aarch64.'), (4, '* Fix build without git clone in cloned directory (required for FreeBSD).'), (5, '* Other build fixes for autotools, cmake and sw.'), (6, '* Fix regression in layout detection which was introduced in release 5.0.0.'), (7, '* Fix regression which prevented loading of submodels, introduced in release 5.0.0-rc2.'), (8, '* Other small improvements for code and documentation.'), (9, ''), (276, '  * Removed old/dead serialise/deserialize methods on *LISTIZED classes.')], 'deleted': [(267, '  * Removed old/dead serialise/deserialze methods on *LISTIZED classes.')]}",yes
VERSION,VERSION,e082522c248d3121e466959a8ba4fd4f7ad1a525,d366e1e987e62ab6b3e1d71efb7f860d9ef09757,"Create new release 5.3.3

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.3.2
+5.3.3
","{'added': [(1, '5.3.3')], 'deleted': [(1, '5.3.2')]}",yes
configure.ac,configure.ac,e082522c248d3121e466959a8ba4fd4f7ad1a525,d366e1e987e62ab6b3e1d71efb7f860d9ef09757,"Create new release 5.3.3

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2023
-PACKAGE_DATE=""07/11""
+PACKAGE_DATE=""10/05""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""10/05""')], 'deleted': [(32, 'PACKAGE_DATE=""07/11""')]}",yes
src\ccmain\tessedit.cpp,src\ccmain\tessedit.cpp,d366e1e987e62ab6b3e1d71efb7f860d9ef09757,dfcd4857259da53251e65e08c1de5777f3a6b945,"Fix loading of sublangs (regression)

Model files which where defined with tessedit_load_sublangs in another
model file where no longer loaded since Tesseract release 5.0.0-rc2.

Fixes: 9091055783ac8f03 (""Fix loading of additional model files"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -306,9 +306,10 @@ int Tesseract::init_tesseract(const std::string &arg0, const std::string &textba
   // Add any languages that this language requires
   bool loaded_primary = false;
   // Load the rest into sub_langs_.
-  // A range based for loop does not work here because langs_to_load
+  // WARNING: A range based for loop does not work here because langs_to_load
   // might be changed in the loop when a new submodel is found.
-  for (auto &lang_to_load : langs_to_load) {
+  for (size_t lang_index = 0; lang_index < langs_to_load.size(); ++lang_index) {
+    auto &lang_to_load = langs_to_load[lang_index];
     if (!IsStrInList(lang_to_load, langs_not_to_load)) {
       const char *lang_str = lang_to_load.c_str();
       Tesseract *tess_to_init;
","{'added': [(309, '  // WARNING: A range based for loop does not work here because langs_to_load'), (311, '  for (size_t lang_index = 0; lang_index < langs_to_load.size(); ++lang_index) {'), (312, '    auto &lang_to_load = langs_to_load[lang_index];')], 'deleted': [(309, '  // A range based for loop does not work here because langs_to_load'), (311, '  for (auto &lang_to_load : langs_to_load) {')]}",yes
java\com\google\scrollview\ui\SVPopupMenu.java,java\com\google\scrollview\ui\SVPopupMenu.java,dfcd4857259da53251e65e08c1de5777f3a6b945,4e3518a1d73f51791c973260b1e81fd5a6c7b62a,"Update SVPopupMenu.java

fixed typo","@@ -56,7 +56,7 @@ public class SVPopupMenu implements ActionListener {
    *
    * @param parent The menu we add our new entry to (should have been defined
    *        before). If the parent is """", we will add the entry to the root
-   *        (top-level)
+   *        (top-level).
    * @param name The caption of the new entry.
    * @param id The Id of the new entry. If it is -1, the entry will be treated
    *        as a menu.
@@ -64,14 +64,14 @@ public class SVPopupMenu implements ActionListener {
   public void add(String parent, String name, int id) {
     // A duplicate entry - we just throw it away, since its already in.
     if (items.get(name) != null) { return; }
-    // A new submenu at the top-level
+    // A new submenu at the top-level.
     if (parent.equals("""")) {
       JMenu jli = new JMenu(name);
       SVAbstractMenuItem mli = new SVSubMenuItem(name, jli);
       items.put(name, mli);
       root.add(jli);
     }
-    // A new sub-submenu
+    // A new sub-submenu.
     else if (id == -1) {
       SVAbstractMenuItem jmi = items.get(parent);
       JMenu jli = new JMenu(name);
@@ -101,7 +101,7 @@ public class SVPopupMenu implements ActionListener {
    *
    * @param parent The menu we add our new entry to (should have been defined
    *        before). If the parent is """", we will add the entry to the root
-   *        (top-level)
+   *        (top-level).
    * @param name The caption of the new entry.
    * @param id The Id of the new entry. If it is -1, the entry will be treated
    *        as a menu.
","{'added': [(59, '   *        (top-level).'), (67, '    // A new submenu at the top-level.'), (74, '    // A new sub-submenu.'), (104, '   *        (top-level).')], 'deleted': [(59, '   *        (top-level)'), (67, '    // A new submenu at the top-level'), (74, '    // A new sub-submenu'), (104, '   *        (top-level)')]}",yes
java\com\google\scrollview\ui\SVImageHandler.java,java\com\google\scrollview\ui\SVImageHandler.java,4e3518a1d73f51791c973260b1e81fd5a6c7b62a,834127c52479dd4a64222a29672eefeb6d2241b6,"Update SVImageHandler.java

fixed typo","@@ -27,7 +27,7 @@ import javax.xml.bind.DatatypeConverter;
  * @author wanke@google.com
  */
 public class SVImageHandler {
-  /* All methods are static, so we forbid to construct SVImageHandler objects */
+  /* All methods are static, so we forbid to construct SVImageHandler objects. */
   private SVImageHandler() {
   }
 
","{'added': [(30, '  /* All methods are static, so we forbid to construct SVImageHandler objects. */')], 'deleted': [(30, '  /* All methods are static, so we forbid to construct SVImageHandler objects */')]}",yes
java\com\google\scrollview\events\SVEventHandler.java,java\com\google\scrollview\events\SVEventHandler.java,834127c52479dd4a64222a29672eefeb6d2241b6,faa06cc787d3fa8319142870b9adf88982bede3c,"Update SVEventHandler.java

fixed typo","@@ -36,7 +36,7 @@ import javax.swing.Timer;
  * The ScrollViewEventHandler takes care of any events which might happen on the
  * canvas and converts them to an according SVEvent, which is (using the
  * processEvent method) then added to a message queue. All events from the
- * message queue get sent gradually
+ * message queue get sent gradually.
  *
  * @author wanke@google.com
  */
@@ -60,7 +60,7 @@ public class SVEventHandler extends PBasicInputEventHandler implements
   private int lastXMove = 0;
   private int lastYMove = 0;
 
-  /** For Drawing a rubber-band rectangle for selection */
+  /** For Drawing a rubber-band rectangle for selection. */
   private int startX = 0;
   private int startY = 0;
   private float rubberBandTransparency = 0.5f;
@@ -274,7 +274,7 @@ public class SVEventHandler extends PBasicInputEventHandler implements
     }
   }
 
-  /** These are all events we do not care about and throw away */
+  /** These are all events we do not care about and throw away. */
   public void keyReleased(KeyEvent e) {
   }
 
","{'added': [(39, ' * message queue get sent gradually.'), (63, '  /** For Drawing a rubber-band rectangle for selection. */'), (277, '  /** These are all events we do not care about and throw away. */')], 'deleted': [(39, ' * message queue get sent gradually'), (63, '  /** For Drawing a rubber-band rectangle for selection */'), (277, '  /** These are all events we do not care about and throw away */')]}",yes
java\com\google\scrollview\ScrollView.java,java\com\google\scrollview\ScrollView.java,faa06cc787d3fa8319142870b9adf88982bede3c,d26fbab6ce595ef6d12f0bd233daae66b138a093,"Update ScrollView.java

merged very short lines","@@ -390,8 +390,7 @@ public class ScrollView {
               ""UTF8""));
     } catch (IOException e) {
       // Something went wrong and we were unable to set up a connection. This is
-      // pretty
-      // much a fatal error.
+      // pretty much a fatal error.
       // Note: The server does not get restarted automatically if this happens.
       e.printStackTrace();
       System.exit(1);
","{'added': [(393, '      // pretty much a fatal error.')], 'deleted': [(393, '      // pretty'), (394, '      // much a fatal error.')]}",yes
java\com\google\scrollview\ScrollView.java,java\com\google\scrollview\ScrollView.java,d26fbab6ce595ef6d12f0bd233daae66b138a093,195045e602c6856ca03bde2460495fb891df58b3,"Update ScrollView.java

typo fixed","@@ -56,7 +56,7 @@ public class ScrollView {
   /** Prints all received messages to the console if true. */
   static boolean debugViewNetworkTraffic = false;
 
-  /** Add a new message to the outgoing queue */
+  /** Add a new message to the outgoing queue. */
   public static void addMessage(SVEvent e) {
     if (debugViewNetworkTraffic) {
       System.out.println(""(S->c) "" + e.toString());
","{'added': [(59, '  /** Add a new message to the outgoing queue. */')], 'deleted': [(59, '  /** Add a new message to the outgoing queue */')]}",yes
test,test,195045e602c6856ca03bde2460495fb891df58b3,063ad31a6018af928816ead25ffbb7584f667d22,"Update test submodule

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-Subproject commit 3ea1099664211958cb5c66c2bc69fb6652254a37
+Subproject commit 2761899921c08014cf9dbf3b63592237fb9e6ecb
","{'added': [(1, 'Subproject commit 2761899921c08014cf9dbf3b63592237fb9e6ecb')], 'deleted': [(1, 'Subproject commit 3ea1099664211958cb5c66c2bc69fb6652254a37')]}",yes
src\textord\colpartitiongrid.cpp,src\textord\colpartitiongrid.cpp,063ad31a6018af928816ead25ffbb7584f667d22,7e0c1d708bfb81d119f9cfff5750a2a278f3f9c0,"Fix regression in layout detection since 5.0.0 (fixes issue #4014)

""auto"" resulted in unsigned numbers, but htext_score and vtest_score
can be negative.

Fixes: 842cca1d49617dd8 (""Fix more signed/unsigned compiler warnings"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1609,10 +1609,10 @@ BlobRegionType ColPartitionGrid::SmoothInOneDirection(
     }
     // See if we have a decision yet.
     auto image_count = counts[NPT_IMAGE];
-    auto htext_score = counts[NPT_HTEXT] + counts[NPT_WEAK_HTEXT] -
-                       (image_count + counts[NPT_WEAK_VTEXT]);
-    auto vtext_score = counts[NPT_VTEXT] + counts[NPT_WEAK_VTEXT] -
-                       (image_count + counts[NPT_WEAK_HTEXT]);
+    int htext_score = counts[NPT_HTEXT] + counts[NPT_WEAK_HTEXT] -
+                      (image_count + counts[NPT_WEAK_VTEXT]);
+    int vtext_score = counts[NPT_VTEXT] + counts[NPT_WEAK_VTEXT] -
+                      (image_count + counts[NPT_WEAK_HTEXT]);
     if (image_count > 0 && image_bias - htext_score >= kSmoothDecisionMargin &&
         image_bias - vtext_score >= kSmoothDecisionMargin) {
       *best_distance = dists[NPT_IMAGE][0];
","{'added': [(1612, '    int htext_score = counts[NPT_HTEXT] + counts[NPT_WEAK_HTEXT] -'), (1613, '                      (image_count + counts[NPT_WEAK_VTEXT]);'), (1614, '    int vtext_score = counts[NPT_VTEXT] + counts[NPT_WEAK_VTEXT] -'), (1615, '                      (image_count + counts[NPT_WEAK_HTEXT]);')], 'deleted': [(1612, '    auto htext_score = counts[NPT_HTEXT] + counts[NPT_WEAK_HTEXT] -'), (1613, '                       (image_count + counts[NPT_WEAK_VTEXT]);'), (1614, '    auto vtext_score = counts[NPT_VTEXT] + counts[NPT_WEAK_VTEXT] -'), (1615, '                       (image_count + counts[NPT_WEAK_HTEXT]);')]}",yes
src\ccstruct\stepblob.h,src\ccstruct\stepblob.h,7e0c1d708bfb81d119f9cfff5750a2a278f3f9c0,39222a00e9232033c9eccd60a1168ad831ac6d8c,"Fix typo in stepblob.h

 repostion -> reposition","@@ -78,7 +78,7 @@ public:
   int32_t count_transitions( // count maxima
       int32_t threshold);    // size threshold
 
-  void move(const ICOORD vec);         // repostion blob by vector
+  void move(const ICOORD vec);         // reposition blob by vector
   void rotate(const FCOORD &rotation); // Rotate by given vector.
 
   // Adds sub-pixel resolution EdgeOffsets for the outlines using greyscale
","{'added': [(81, '  void move(const ICOORD vec);         // reposition blob by vector')], 'deleted': [(81, '  void move(const ICOORD vec);         // repostion blob by vector')]}",yes
src\opencl\openclwrapper.cpp,src\opencl\openclwrapper.cpp,39222a00e9232033c9eccd60a1168ad831ac6d8c,566f97a29a4afd8a2b81808080fc1402f82e67e8,"initDSProfile: correct std::vector usage (#4124)

Co-authored-by: Roman Savchenko <rsavchenko@alteryx.com>","@@ -174,8 +174,8 @@ static ds_status initDSProfile(ds_profile **p, const char *version) {
   clGetPlatformIDs(0, nullptr, &numPlatforms);
 
   if (numPlatforms > 0) {
-    platforms.reserve(numPlatforms);
-    clGetPlatformIDs(numPlatforms, &platforms[0], nullptr);
+    platforms.resize(numPlatforms);
+    clGetPlatformIDs(numPlatforms, platforms.data(), nullptr);
   }
 
   numDevices = 0;
@@ -186,12 +186,11 @@ static ds_status initDSProfile(ds_profile **p, const char *version) {
   }
 
   if (numDevices > 0) {
-    devices.reserve(numDevices);
+    devices.resize(numDevices);
   }
 
   profile->numDevices = numDevices + 1; // +1 to numDevices to include the native CPU
-  profile->devices.reserve(profile->numDevices);
-  memset(&profile->devices[0], 0, profile->numDevices * sizeof(ds_device));
+  profile->devices.resize(profile->numDevices);
 
   next = 0;
   for (i = 0; i < numPlatforms; i++) {
","{'added': [(177, '    platforms.resize(numPlatforms);'), (178, '    clGetPlatformIDs(numPlatforms, platforms.data(), nullptr);'), (189, '    devices.resize(numDevices);'), (193, '  profile->devices.resize(profile->numDevices);')], 'deleted': [(177, '    platforms.reserve(numPlatforms);'), (178, '    clGetPlatformIDs(numPlatforms, &platforms[0], nullptr);'), (189, '    devices.reserve(numDevices);'), (193, '  profile->devices.reserve(profile->numDevices);'), (194, '  memset(&profile->devices[0], 0, profile->numDevices * sizeof(ds_device));')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,566f97a29a4afd8a2b81808080fc1402f82e67e8,84318ed355d35400b5b79f484f3b146594c3d5d9,"sw.yml: Remove Ubuntu 20.04

SW is broken with the default compiler of Ubuntu 20.04.","@@ -25,7 +25,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [windows-2022, ubuntu-22.04, ubuntu-20.04, macos-12]
+        os: [windows-2022, ubuntu-22.04, macos-12]
 
     steps:
     - uses: actions/checkout@v3
","{'added': [(28, '        os: [windows-2022, ubuntu-22.04, macos-12]')], 'deleted': [(28, '        os: [windows-2022, ubuntu-22.04, ubuntu-20.04, macos-12]')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,84318ed355d35400b5b79f484f3b146594c3d5d9,74fa1c5bbf9f6771afb93491faa379cb78852452,Update autotools.yml,"@@ -13,11 +13,8 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: ubuntu-22.04-clang-14-autotools, os: ubuntu-22.04, cxx: clang++-14 }
-          - { name: ubuntu-22.04-clang-13-autotools, os: ubuntu-22.04, cxx: clang++-13 } #installed
-          - { name: ubuntu-22.04-clang-12-autotools, os: ubuntu-22.04, cxx: clang++-12 } #installed
-          - { name: ubuntu-20.04-clang-11-autotools, os: ubuntu-20.04, cxx: clang++-11 } #installed
-          - { name: ubuntu-20.04-clang-10-autotools, os: ubuntu-20.04, cxx: clang++-10 } #installed
+          - { name: ubuntu-22.04-clang-15-autotools, os: ubuntu-22.04, cxx: clang++-15 }
+          - { name: ubuntu-22.04-clang-14-autotools, os: ubuntu-22.04, cxx: clang++-14 } #installed
 
           - { name: ubuntu-22.04-gcc-12-autotools, os: ubuntu-22.04, cxx: g++-12 } #installed
           - { name: ubuntu-22.04-gcc-11-autotools, os: ubuntu-22.04, cxx: g++-11 } #installed
","{'added': [(16, '          - { name: ubuntu-22.04-clang-15-autotools, os: ubuntu-22.04, cxx: clang++-15 }'), (17, '          - { name: ubuntu-22.04-clang-14-autotools, os: ubuntu-22.04, cxx: clang++-14 } #installed')], 'deleted': [(16, '          - { name: ubuntu-22.04-clang-14-autotools, os: ubuntu-22.04, cxx: clang++-14 }'), (17, '          - { name: ubuntu-22.04-clang-13-autotools, os: ubuntu-22.04, cxx: clang++-13 } #installed'), (18, '          - { name: ubuntu-22.04-clang-12-autotools, os: ubuntu-22.04, cxx: clang++-12 } #installed'), (19, '          - { name: ubuntu-20.04-clang-11-autotools, os: ubuntu-20.04, cxx: clang++-11 } #installed'), (20, '          - { name: ubuntu-20.04-clang-10-autotools, os: ubuntu-20.04, cxx: clang++-10 } #installed')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,74fa1c5bbf9f6771afb93491faa379cb78852452,544dff4423604abc4f9f1ce129e0231760098c9d,Update cmake.yml,"@@ -19,13 +19,9 @@ jobs:
           - { name: macos-11-clang-13-cmake, os: macos-11, cxx: clang++ } # default
 
           - { name: macos-11-gcc-12-cmake, os: macos-11, cxx: g++-12 } #installed
-          - { name: macos-11-gcc-11-cmake, os: macos-11, cxx: g++-11 } #installed
 
+          - { name: ubuntu-22.04-clang-15-cmake, os: ubuntu-22.04, cxx: clang++-15 } #installed
           - { name: ubuntu-22.04-clang-14-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed
-          - { name: ubuntu-22.04-clang-13-cmake, os: ubuntu-22.04, cxx: clang++-13 } #installed
-          - { name: ubuntu-20.04-clang-12-cmake, os: ubuntu-20.04, cxx: clang++-12 } #installed
-          - { name: ubuntu-20.04-clang-11-cmake, os: ubuntu-20.04, cxx: clang++-11 } #installed
-          - { name: ubuntu-20.04-clang-10-cmake, os: ubuntu-20.04, cxx: clang++-10 } #installed
 
           - { name: ubuntu-22.04-gcc-12-cmake, os: ubuntu-22.04, cxx: g++-12 } #installed
           - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed
","{'added': [(23, '          - { name: ubuntu-22.04-clang-15-cmake, os: ubuntu-22.04, cxx: clang++-15 } #installed')], 'deleted': [(22, '          - { name: macos-11-gcc-11-cmake, os: macos-11, cxx: g++-11 } #installed'), (25, '          - { name: ubuntu-22.04-clang-13-cmake, os: ubuntu-22.04, cxx: clang++-13 } #installed'), (26, '          - { name: ubuntu-20.04-clang-12-cmake, os: ubuntu-20.04, cxx: clang++-12 } #installed'), (27, '          - { name: ubuntu-20.04-clang-11-cmake, os: ubuntu-20.04, cxx: clang++-11 } #installed'), (28, '          - { name: ubuntu-20.04-clang-10-cmake, os: ubuntu-20.04, cxx: clang++-10 } #installed')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,544dff4423604abc4f9f1ce129e0231760098c9d,8b4284d28bc5fb04afd744bbadbe10ffc3c79040,fix typos,"@@ -103,7 +103,7 @@ static STRING_VAR(document_title, """", ""Title of output document (used for hOCR a
 static INT_VAR(curl_timeout, 0, ""Timeout for curl in seconds"");
 #endif
 
-/** Minimum sensible image size to be worth running tesseract. */
+/** Minimum sensible image size to be worth running Tesseract. */
 const int kMinRectSize = 10;
 /** Character returned when Tesseract couldn't recognize as anything. */
 const char kTesseractReject = '~';
@@ -613,7 +613,7 @@ void TessBaseAPI::SetImage(Pix *pix) {
 
 /**
  * Restrict recognition to a sub-rectangle of the image. Call after SetImage.
- * Each SetRectangle clears the recogntion results so multiple rectangles
+ * Each SetRectangle clears the recognition results so multiple rectangles
  * can be recognized with the same image.
  */
 void TessBaseAPI::SetRectangle(int left, int top, int width, int height) {
","{'added': [(106, '/** Minimum sensible image size to be worth running Tesseract. */'), (616, ' * Each SetRectangle clears the recognition results so multiple rectangles')], 'deleted': [(106, '/** Minimum sensible image size to be worth running tesseract. */'), (616, ' * Each SetRectangle clears the recogntion results so multiple rectangles')]}",yes
CITATIONS.bib,CITATIONS.bib,8b4284d28bc5fb04afd744bbadbe10ffc3c79040,fa50115efcccc1d2e9717fda27959e4bf2c8cc58,add missing commas,"@@ -23,8 +23,8 @@
   url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35248.pdf},
   year = 2009,
   isbn = {978-1-60558-698-4},
-  date = {2009-07-25}
-  doi = {http://doi.acm.org/10/1145/1577802.1577804}
+  date = {2009-07-25},
+  doi = {http://doi.acm.org/10/1145/1577802.1577804},
   location = {Barcelona, Spain},
 }
 
@@ -33,7 +33,7 @@
   title = {Combined Orientation and Script Detection using the Tesseract OCR Engine},
   booktitle = {MOCR '09: Proceedings of the International Workshop on Multilingual OCR},
   editor = {Venu Govindaraju and Premkumar Natarajan and Santanu Chaudhury and Daniel P. Lopresti},
-  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35506.pdf}
+  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35506.pdf},
   year = {2009},
   isbn = {978-1-60558-698-4},
   pages = {1--7},
@@ -47,7 +47,7 @@
   author = {Ray Smith},
   title = {Hybrid Page Layout Analysis via Tab-Stop Detection},
   booktitle = {ICDAR '09: Proceedings of the 2009 10th International Conference on Document Analysis and Recognition},
-  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35094.pdf}
+  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35094.pdf},
   year = {2009},
   isbn = {978-0-7695-3725-2},
   pages = {241--245},
@@ -60,10 +60,11 @@
   author = {Ray Smith},
   title = {An Overview of the Tesseract OCR Engine},
   booktitle = {ICDAR '07: Proceedings of the Ninth International Conference on Document Analysis and Recognition},
-  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/33418.pdf}
+  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/33418.pdf},
   year = {2007},
   isbn = {0-7695-2822-8},
   pages = {629--633},
   publisher = {IEEE Computer Society},
   address = {Washington, DC, USA},
 }
+
","{'added': [(26, '  date = {2009-07-25},'), (27, '  doi = {http://doi.acm.org/10/1145/1577802.1577804},'), (36, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35506.pdf},'), (50, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35094.pdf},'), (63, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/33418.pdf},'), (70, '')], 'deleted': [(26, '  date = {2009-07-25}'), (27, '  doi = {http://doi.acm.org/10/1145/1577802.1577804}'), (36, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35506.pdf}'), (50, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35094.pdf}'), (63, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/33418.pdf}')]}",yes
CITATIONS.bib,CITATIONS.bib,fa50115efcccc1d2e9717fda27959e4bf2c8cc58,ce9369237022a3a16b880e2bd4ae2f4639284469,fix citation links,"@@ -20,7 +20,7 @@
   publisher = {ACM},
   series = {ACM International Conference Proceeding Series},
   title = {Adapting the Tesseract Open Source OCR Engine for Multilingual OCR.},
-  url = {http://www.google.de/research/pubs/archive/35248.pdf},
+  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35248.pdf},
   year = 2009,
   isbn = {978-1-60558-698-4},
   date = {2009-07-25}
@@ -33,7 +33,7 @@
   title = {Combined Orientation and Script Detection using the Tesseract OCR Engine},
   booktitle = {MOCR '09: Proceedings of the International Workshop on Multilingual OCR},
   editor = {Venu Govindaraju and Premkumar Natarajan and Santanu Chaudhury and Daniel P. Lopresti},
-  url = {http://www.google.de/research/pubs/archive/35506.pdf}
+  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35506.pdf}
   year = {2009},
   isbn = {978-1-60558-698-4},
   pages = {1--7},
@@ -47,7 +47,7 @@
   author = {Ray Smith},
   title = {Hybrid Page Layout Analysis via Tab-Stop Detection},
   booktitle = {ICDAR '09: Proceedings of the 2009 10th International Conference on Document Analysis and Recognition},
-  url = {http://www.google.de/research/pubs/archive/35094.pdf}
+  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35094.pdf}
   year = {2009},
   isbn = {978-0-7695-3725-2},
   pages = {241--245},
@@ -60,7 +60,7 @@
   author = {Ray Smith},
   title = {An Overview of the Tesseract OCR Engine},
   booktitle = {ICDAR '07: Proceedings of the Ninth International Conference on Document Analysis and Recognition},
-  url = {http://www.google.de/research/pubs/archive/33418.pdf}
+  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/33418.pdf}
   year = {2007},
   isbn = {0-7695-2822-8},
   pages = {629--633},
","{'added': [(23, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35248.pdf},'), (36, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35506.pdf}'), (50, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/35094.pdf}'), (63, '  url = {https://storage.googleapis.com/pub-tools-public-publication-data/pdf/33418.pdf}')], 'deleted': [(23, '  url = {http://www.google.de/research/pubs/archive/35248.pdf},'), (36, '  url = {http://www.google.de/research/pubs/archive/35506.pdf}'), (50, '  url = {http://www.google.de/research/pubs/archive/35094.pdf}'), (63, '  url = {http://www.google.de/research/pubs/archive/33418.pdf}')]}",yes
doc\tesseract.bib,CITATIONS.bib,7c7498c327b02b0dd7c0ba024523a9a37b98d94c,3852f4c8f6dec30211ee4f6c9cc5ae5ef82907cd,"Rename BibTex file to please GitHub

Signed-off-by: Stefan Weil <sw@weilnetz.de>",,"{'added': [], 'deleted': []}",yes
src\textord\imagefind.cpp,src\textord\imagefind.cpp,3852f4c8f6dec30211ee4f6c9cc5ae5ef82907cd,2b375fc3d6a54ae6436c91ba0cfad943ee5f291d,"Optimize function ImageFind::FindImages

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -250,9 +250,14 @@ static void ConnCompAndRectangularize(Image pix, DebugPixa *pixa_debug, Boxa **b
 // If not nullptr, it must be PixDestroyed by the caller.
 // If textord_tabfind_show_images, debug images are appended to pixa_debug.
 Image ImageFind::FindImages(Image pix, DebugPixa *pixa_debug) {
+  auto width = pixGetWidth(pix);
+  auto height = pixGetHeight(pix);
   // Not worth looking at small images.
-  if (pixGetWidth(pix) < kMinImageFindSize || pixGetHeight(pix) < kMinImageFindSize) {
-    return pixCreate(pixGetWidth(pix), pixGetHeight(pix), 1);
+  // Leptonica will print an error message and return nullptr if we call
+  // pixGenHalftoneMask(pixr, nullptr, ...) with width or height < 100
+  // for the reduced image, so we want to bypass that, too.
+  if (width / 2 < kMinImageFindSize || height / 2 < kMinImageFindSize) {
+    return pixCreate(width, height, 1);
   }
 
   // Reduce by factor 2.
@@ -262,15 +267,6 @@ Image ImageFind::FindImages(Image pix, DebugPixa *pixa_debug) {
   }
 
   // Get the halftone mask directly from Leptonica.
-  //
-  // Leptonica will print an error message and return nullptr if we call
-  // pixGenHalftoneMask(pixr, nullptr, ...) with too small image, so we
-  // want to bypass that.
-  if (pixGetWidth(pixr) < kMinImageFindSize || pixGetHeight(pixr) < kMinImageFindSize) {
-    pixr.destroy();
-    return pixCreate(pixGetWidth(pix), pixGetHeight(pix), 1);
-  }
-  // Get the halftone mask.
   l_int32 ht_found = 0;
   Pixa *pixadb = (textord_tabfind_show_images && pixa_debug != nullptr) ? pixaCreate(0) : nullptr;
   Image pixht2 = pixGenerateHalftoneMask(pixr, nullptr, &ht_found, pixadb);
@@ -287,7 +283,7 @@ Image ImageFind::FindImages(Image pix, DebugPixa *pixa_debug) {
     pixht2.destroy();
   }
   if (pixht2 == nullptr) {
-    return pixCreate(pixGetWidth(pix), pixGetHeight(pix), 1);
+    return pixCreate(width, height, 1);
   }
 
   // Expand back up again.
@@ -334,7 +330,7 @@ Image ImageFind::FindImages(Image pix, DebugPixa *pixa_debug) {
     pixa_debug->AddPix(pixht, ""FinalMask"");
   }
   // Make the result image the same size as the input.
-  Image result = pixCreate(pixGetWidth(pix), pixGetHeight(pix), 1);
+  Image result = pixCreate(width, height, 1);
   result |= pixht;
   pixht.destroy();
   return result;
","{'added': [(253, '  auto width = pixGetWidth(pix);'), (254, '  auto height = pixGetHeight(pix);'), (256, '  // Leptonica will print an error message and return nullptr if we call'), (257, '  // pixGenHalftoneMask(pixr, nullptr, ...) with width or height < 100'), (258, '  // for the reduced image, so we want to bypass that, too.'), (259, '  if (width / 2 < kMinImageFindSize || height / 2 < kMinImageFindSize) {'), (260, '    return pixCreate(width, height, 1);'), (286, '    return pixCreate(width, height, 1);'), (333, '  Image result = pixCreate(width, height, 1);')], 'deleted': [(254, '  if (pixGetWidth(pix) < kMinImageFindSize || pixGetHeight(pix) < kMinImageFindSize) {'), (255, '    return pixCreate(pixGetWidth(pix), pixGetHeight(pix), 1);'), (265, '  //'), (266, '  // Leptonica will print an error message and return nullptr if we call'), (267, '  // pixGenHalftoneMask(pixr, nullptr, ...) with too small image, so we'), (268, '  // want to bypass that.'), (269, '  if (pixGetWidth(pixr) < kMinImageFindSize || pixGetHeight(pixr) < kMinImageFindSize) {'), (270, '    pixr.destroy();'), (271, '    return pixCreate(pixGetWidth(pix), pixGetHeight(pix), 1);'), (272, '  }'), (273, '  // Get the halftone mask.'), (290, '    return pixCreate(pixGetWidth(pix), pixGetHeight(pix), 1);'), (337, '  Image result = pixCreate(pixGetWidth(pix), pixGetHeight(pix), 1);')]}",yes
src\ccutil\unicharset.cpp,src\ccutil\unicharset.cpp,2b375fc3d6a54ae6436c91ba0cfad943ee5f291d,77e4eab5658462ae45aa9b7c7558b11dc600dd4b,"Fix comment for function UNICHARSET::set_black_and_whitelist

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1000,7 +1000,7 @@ bool UNICHARSET::major_right_to_left() const {
 // Set a whitelist and/or blacklist of characters to recognize.
 // An empty or nullptr whitelist enables everything (minus any blacklist).
 // An empty or nullptr blacklist disables nothing.
-// An empty or nullptr blacklist has no effect.
+// An empty or nullptr unblacklist has no effect.
 void UNICHARSET::set_black_and_whitelist(const char *blacklist,
                                          const char *whitelist,
                                          const char *unblacklist) {
","{'added': [(1003, '// An empty or nullptr unblacklist has no effect.')], 'deleted': [(1003, '// An empty or nullptr blacklist has no effect.')]}",yes
include\tesseract\baseapi.h,include\tesseract\baseapi.h,77e4eab5658462ae45aa9b7c7558b11dc600dd4b,0768e4ff4c21aaf0b9beb297e6bb79ad8cb301b0,"Fix comment for function HOcrEscape

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -804,7 +804,7 @@ private:
                                  int tessedit_page_number);
 }; // class TessBaseAPI.
 
-/** Escape a char string - remove &<>""' with HTML codes. */
+/** Escape a char string - replace &<>""' with HTML codes. */
 std::string HOcrEscape(const char *text);
 
 } // namespace tesseract
","{'added': [(807, '/** Escape a char string - replace &<>""\' with HTML codes. */')], 'deleted': [(807, '/** Escape a char string - remove &<>""\' with HTML codes. */')]}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,77e4eab5658462ae45aa9b7c7558b11dc600dd4b,0768e4ff4c21aaf0b9beb297e6bb79ad8cb301b0,"Fix comment for function HOcrEscape

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -2374,7 +2374,7 @@ int TessBaseAPI::NumDawgs() const {
   return tesseract_ == nullptr ? 0 : tesseract_->getDict().NumDawgs();
 }
 
-/** Escape a char string - remove <>&""' with HTML codes. */
+/** Escape a char string - replace <>&""' with HTML codes. */
 std::string HOcrEscape(const char *text) {
   std::string ret;
   const char *ptr;
","{'added': [(2377, '/** Escape a char string - replace <>&""\' with HTML codes. */')], 'deleted': [(2377, '/** Escape a char string - remove <>&""\' with HTML codes. */')]}",yes
src\textord\tablefind.cpp,src\textord\tablefind.cpp,0768e4ff4c21aaf0b9beb297e6bb79ad8cb301b0,8fdf20342a7a3890becf600ce5e892062c31d6d9,"Fix comment

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -432,7 +432,7 @@ void TableFinder::InsertImagePartition(ColPartition *part) {
 // text lines on the page. The assumption is that a table
 // will have several lines with similar overlapping whitespace
 // whereas text will not have this type of property.
-// Note: The code Assumes that blobs are sorted by the left side x!
+// Note: The code assumes that blobs are sorted by the left side x!
 // This will not work (as well) if the blobs are sorted by center/right.
 void TableFinder::SplitAndInsertFragmentedTextPartition(ColPartition *part) {
   ASSERT_HOST(part != nullptr);
","{'added': [(435, '// Note: The code assumes that blobs are sorted by the left side x!')], 'deleted': [(435, '// Note: The code Assumes that blobs are sorted by the left side x!')]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,8fdf20342a7a3890becf600ce5e892062c31d6d9,a72602093697058e4ce9e82181d1b31353413ee4,"Provide more disk space for GitHub action unittest

ubuntu-20.04-gcc-unittest failed because it ran out of disk space.
Removing some unused directories adds more than 30 GiB free disk space.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -21,6 +21,13 @@ jobs:
       with:
         submodules: recursive
 
+    - name: Remove Homebrew, Android and .NET to provide more disk space
+      run: |
+           # https://github.com/actions/virtual-environments/issues/2606#issuecomment-772683150
+           sudo rm -rf /home/linuxbrew # will release Homebrew
+           sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
+           sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
+
     - name: Install dependencies (Linux)
       run: |
            sudo apt-get update
","{'added': [(24, '    - name: Remove Homebrew, Android and .NET to provide more disk space'), (25, '      run: |'), (26, '           # https://github.com/actions/virtual-environments/issues/2606#issuecomment-772683150'), (27, '           sudo rm -rf /home/linuxbrew # will release Homebrew'), (28, ""           sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android""), (29, ""           sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET""), (30, '')], 'deleted': []}",yes
java\com\google\scrollview\ScrollView.java,java\com\google\scrollview\ScrollView.java,a72602093697058e4ce9e82181d1b31353413ee4,54b9fe4de9f0aa3af15f52a6f27ffaf758b43769,"Update ScrollView.java

typo fixed","@@ -191,7 +191,7 @@ public class ScrollView {
           }
         }
         // If str is not null here, then we have a string with a comma in it.
-        // Append , and the next argument at the next iteration, but check
+        // Append, and the next argument at the next iteration, but check
         // that str is null after the loop terminates in case it was an
         // unterminated string.
       } else if (floatPattern.matcher(argStr).matches()) {
","{'added': [(194, '        // Append, and the next argument at the next iteration, but check')], 'deleted': [(194, '        // Append , and the next argument at the next iteration, but check')]}",yes
CMakeLists.txt,CMakeLists.txt,54b9fe4de9f0aa3af15f52a6f27ffaf758b43769,d1abdf353ad11b8fa7073ba7da707109b30995d9,cmake: check_leptonica_tiff_support() works with cmake>=3.25,"@@ -408,10 +408,10 @@ else()
   include_directories(${Leptonica_INCLUDE_DIRS})
 
   check_leptonica_tiff_support()
-  if (NOT LEPT_TIFF_RESULT EQUAL 0)
+  if ((NOT LEPT_TIFF_RESULT EQUAL 0) AND LEPT_TIFF_COMPILE_SUCCESS)
     message(NOTICE ""Leptonica was build without TIFF support! Disabling TIFF support..."")
     set(DISABLE_TIFF ON)
-  else()
+  elseif(NOT ${CMAKE_VERSION} VERSION_LESS ""3.25"")
     message(STATUS ""Leptonica was build with TIFF support."")
   endif()
 
","{'added': [(411, '  if ((NOT LEPT_TIFF_RESULT EQUAL 0) AND LEPT_TIFF_COMPILE_SUCCESS)'), (414, '  elseif(NOT ${CMAKE_VERSION} VERSION_LESS ""3.25"")')], 'deleted': [(411, '  if (NOT LEPT_TIFF_RESULT EQUAL 0)'), (414, '  else()')]}",yes
cmake\CheckFunctions.cmake,cmake\CheckFunctions.cmake,54b9fe4de9f0aa3af15f52a6f27ffaf758b43769,d1abdf353ad11b8fa7073ba7da707109b30995d9,cmake: check_leptonica_tiff_support() works with cmake>=3.25,"@@ -18,31 +18,35 @@ function(check_leptonica_tiff_support)
   # check if leptonica was build with tiff support set result to
   # LEPT_TIFF_RESULT
   set(TIFF_TEST
-      ""#include <leptonica/allheaders.h>\n""
-      ""int main() {\n""
-      ""  l_uint8 *data = NULL;\n""
-      ""  size_t size = 0;\n""
-      ""  PIX* pix = pixCreate(3, 3, 4);\n""
-      ""  l_int32 ret_val = pixWriteMemTiff(&data, &size, pix, IFF_TIFF_G3);\n""
-      ""  pixDestroy(&pix);\n""
-      ""  lept_free(data);\n""
-      ""  return ret_val;}\n"")
-  set(CMAKE_TRY_COMPILE_CONFIGURATION ${CMAKE_BUILD_TYPE})
-  try_run(
-    LEPT_TIFF_RESULT
-    LEPT_TIFF_COMPILE
-    SOURCE_FROM_CONTENT tiff_test.cpp ""${TIFF_TEST}""
-    CMAKE_FLAGS ""-DINCLUDE_DIRECTORIES=${Leptonica_INCLUDE_DIRS}""
-    LINK_LIBRARIES ${Leptonica_LIBRARIES}
-    COMPILE_OUTPUT_VARIABLE
-    COMPILE_OUTPUT)
-  if(NOT LEPT_TIFF_COMPILE)
-    message(STATUS ""COMPILE_OUTPUT: ${COMPILE_OUTPUT}"")
-    message(STATUS ""Leptonica_INCLUDE_DIRS: ${Leptonica_INCLUDE_DIRS}"")
-    message(STATUS ""Leptonica_LIBRARIES: ${Leptonica_LIBRARIES}"")
-    message(STATUS ""LEPT_TIFF_RESULT: ${LEPT_TIFF_RESULT}"")
-    message(STATUS ""LEPT_TIFF_COMPILE: ${LEPT_TIFF_COMPILE}"")
-    message(WARNING ""Failed to compile test"")
+  ""#include \""leptonica/allheaders.h\""\n""
+  ""int main() {\n""
+  ""  l_uint8 *data = NULL;\n""
+  ""  size_t size = 0;\n""
+  ""  PIX* pix = pixCreate(3, 3, 4);\n""
+  ""  l_int32 ret_val = pixWriteMemTiff(&data, &size, pix, IFF_TIFF_G3);\n""
+  ""  pixDestroy(&pix);\n""
+  ""  lept_free(data);\n""
+  ""  return ret_val;}\n"")
+  if(${CMAKE_VERSION} VERSION_LESS ""3.25"")
+    message(STATUS ""Testing TIFF support in Leptonica is available with CMake >= 3.25 (you have ${CMAKE_VERSION}))"")
+  else()
+    set(CMAKE_TRY_COMPILE_CONFIGURATION ${CMAKE_BUILD_TYPE})
+    try_run(
+      LEPT_TIFF_RESULT
+      LEPT_TIFF_COMPILE_SUCCESS
+      SOURCE_FROM_CONTENT tiff_test.cpp ""${TIFF_TEST}""
+      CMAKE_FLAGS ""-DINCLUDE_DIRECTORIES=${Leptonica_INCLUDE_DIRS}""
+      LINK_LIBRARIES ${Leptonica_LIBRARIES}
+      COMPILE_OUTPUT_VARIABLE
+      COMPILE_OUTPUT)
+    if(NOT LEPT_TIFF_COMPILE_SUCCESS)
+      message(STATUS ""COMPILE_OUTPUT: ${COMPILE_OUTPUT}"")
+      message(STATUS ""Leptonica_INCLUDE_DIRS: ${Leptonica_INCLUDE_DIRS}"")
+      message(STATUS ""Leptonica_LIBRARIES: ${Leptonica_LIBRARIES}"")
+      message(STATUS ""LEPT_TIFF_RESULT: ${LEPT_TIFF_RESULT}"")
+      message(STATUS ""LEPT_TIFF_COMPILE: ${LEPT_TIFF_COMPILE}"")
+      message(WARNING ""Failed to compile test"")
+    endif()
   endif()
 endfunction(check_leptonica_tiff_support)
 
","{'added': [(21, '  ""#include \\""leptonica/allheaders.h\\""\\n""'), (22, '  ""int main() {\\n""'), (23, '  ""  l_uint8 *data = NULL;\\n""'), (24, '  ""  size_t size = 0;\\n""'), (25, '  ""  PIX* pix = pixCreate(3, 3, 4);\\n""'), (26, '  ""  l_int32 ret_val = pixWriteMemTiff(&data, &size, pix, IFF_TIFF_G3);\\n""'), (27, '  ""  pixDestroy(&pix);\\n""'), (28, '  ""  lept_free(data);\\n""'), (29, '  ""  return ret_val;}\\n"")'), (30, '  if(${CMAKE_VERSION} VERSION_LESS ""3.25"")'), (31, '    message(STATUS ""Testing TIFF support in Leptonica is available with CMake >= 3.25 (you have ${CMAKE_VERSION}))"")'), (32, '  else()'), (33, '    set(CMAKE_TRY_COMPILE_CONFIGURATION ${CMAKE_BUILD_TYPE})'), (34, '    try_run('), (35, '      LEPT_TIFF_RESULT'), (36, '      LEPT_TIFF_COMPILE_SUCCESS'), (37, '      SOURCE_FROM_CONTENT tiff_test.cpp ""${TIFF_TEST}""'), (38, '      CMAKE_FLAGS ""-DINCLUDE_DIRECTORIES=${Leptonica_INCLUDE_DIRS}""'), (39, '      LINK_LIBRARIES ${Leptonica_LIBRARIES}'), (40, '      COMPILE_OUTPUT_VARIABLE'), (41, '      COMPILE_OUTPUT)'), (42, '    if(NOT LEPT_TIFF_COMPILE_SUCCESS)'), (43, '      message(STATUS ""COMPILE_OUTPUT: ${COMPILE_OUTPUT}"")'), (44, '      message(STATUS ""Leptonica_INCLUDE_DIRS: ${Leptonica_INCLUDE_DIRS}"")'), (45, '      message(STATUS ""Leptonica_LIBRARIES: ${Leptonica_LIBRARIES}"")'), (46, '      message(STATUS ""LEPT_TIFF_RESULT: ${LEPT_TIFF_RESULT}"")'), (47, '      message(STATUS ""LEPT_TIFF_COMPILE: ${LEPT_TIFF_COMPILE}"")'), (48, '      message(WARNING ""Failed to compile test"")'), (49, '    endif()')], 'deleted': [(21, '      ""#include <leptonica/allheaders.h>\\n""'), (22, '      ""int main() {\\n""'), (23, '      ""  l_uint8 *data = NULL;\\n""'), (24, '      ""  size_t size = 0;\\n""'), (25, '      ""  PIX* pix = pixCreate(3, 3, 4);\\n""'), (26, '      ""  l_int32 ret_val = pixWriteMemTiff(&data, &size, pix, IFF_TIFF_G3);\\n""'), (27, '      ""  pixDestroy(&pix);\\n""'), (28, '      ""  lept_free(data);\\n""'), (29, '      ""  return ret_val;}\\n"")'), (30, '  set(CMAKE_TRY_COMPILE_CONFIGURATION ${CMAKE_BUILD_TYPE})'), (31, '  try_run('), (32, '    LEPT_TIFF_RESULT'), (33, '    LEPT_TIFF_COMPILE'), (34, '    SOURCE_FROM_CONTENT tiff_test.cpp ""${TIFF_TEST}""'), (35, '    CMAKE_FLAGS ""-DINCLUDE_DIRECTORIES=${Leptonica_INCLUDE_DIRS}""'), (36, '    LINK_LIBRARIES ${Leptonica_LIBRARIES}'), (37, '    COMPILE_OUTPUT_VARIABLE'), (38, '    COMPILE_OUTPUT)'), (39, '  if(NOT LEPT_TIFF_COMPILE)'), (40, '    message(STATUS ""COMPILE_OUTPUT: ${COMPILE_OUTPUT}"")'), (41, '    message(STATUS ""Leptonica_INCLUDE_DIRS: ${Leptonica_INCLUDE_DIRS}"")'), (42, '    message(STATUS ""Leptonica_LIBRARIES: ${Leptonica_LIBRARIES}"")'), (43, '    message(STATUS ""LEPT_TIFF_RESULT: ${LEPT_TIFF_RESULT}"")'), (44, '    message(STATUS ""LEPT_TIFF_COMPILE: ${LEPT_TIFF_COMPILE}"")'), (45, '    message(WARNING ""Failed to compile test"")')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,d1abdf353ad11b8fa7073ba7da707109b30995d9,b86afd63cfd007b36f5b3bbc405c52c2389c8edb,"Remove whitespace at line endings

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -16,7 +16,7 @@ body:
         * Please provide the input image.
         * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.
         * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report.
-        
+
         Windows versions 7, 8, 8.1 are not supported.
   - type: textarea
     attributes:
","{'added': [(19, '')], 'deleted': [(19, '')]}",yes
cmake\CheckFunctions.cmake,cmake\CheckFunctions.cmake,d1abdf353ad11b8fa7073ba7da707109b30995d9,b86afd63cfd007b36f5b3bbc405c52c2389c8edb,"Remove whitespace at line endings

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -30,7 +30,7 @@ function(check_leptonica_tiff_support)
   set(CMAKE_TRY_COMPILE_CONFIGURATION ${CMAKE_BUILD_TYPE})
   try_run(
     LEPT_TIFF_RESULT
-    LEPT_TIFF_COMPILE 
+    LEPT_TIFF_COMPILE
     SOURCE_FROM_CONTENT tiff_test.cpp ""${TIFF_TEST}""
     CMAKE_FLAGS ""-DINCLUDE_DIRECTORIES=${Leptonica_INCLUDE_DIRS}""
     LINK_LIBRARIES ${Leptonica_LIBRARIES}
","{'added': [(33, '    LEPT_TIFF_COMPILE')], 'deleted': [(33, '    LEPT_TIFF_COMPILE')]}",yes
src\training\unicharset\validate_myanmar.cpp,src\training\unicharset\validate_myanmar.cpp,d1abdf353ad11b8fa7073ba7da707109b30995d9,b86afd63cfd007b36f5b3bbc405c52c2389c8edb,"Remove whitespace at line endings

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -149,7 +149,7 @@ bool ValidateMyanmar::ConsumeOptionalSignsIfPresent() {
   }
   // Sgaw tones 0x1062, 0x1063 must be followed by asat.
   // W Pwo tones 0x1069, 0x106a, and 0x106b may be followed by dot below or visarga (nasal).
-  ch = codes_[codes_used_].second; 
+  ch = codes_[codes_used_].second;
   if (ch == 0x103a || ch == 0x1037 || ch == 0x1038) {
     if (UseMultiCode(1)) {
       return true;
","{'added': [(152, '  ch = codes_[codes_used_].second;')], 'deleted': [(152, '  ch = codes_[codes_used_].second;')]}",yes
configure.ac,configure.ac,9bf4b310124a48c4f73c3418496c7412cc2c6592,f49b6e9f4de147ea34d68d77f3dc2b150f48729c,"Fix build without git clone in cloned directory

FreeBSD uses git to manage Ports Tree. Tesseract, when building from the Ports Tree, is built from a tarball that doesn't have .git and then git describe is ran on top of the Ports Tree.","@@ -7,7 +7,7 @@
 # ----------------------------------------
 AC_PREREQ([2.69])
 AC_INIT([tesseract],
-        [m4_esyscmd_s([git describe --abbrev=4 2>/dev/null || cat VERSION])],
+        [m4_esyscmd_s([test -d .git && git describe --abbrev=4 2>/dev/null || cat VERSION])],
         [https://github.com/tesseract-ocr/tesseract/issues],,
         [https://github.com/tesseract-ocr/tesseract/])
 
","{'added': [(10, '        [m4_esyscmd_s([test -d .git && git describe --abbrev=4 2>/dev/null || cat VERSION])],')], 'deleted': [(10, '        [m4_esyscmd_s([git describe --abbrev=4 2>/dev/null || cat VERSION])],')]}",yes
CMakeLists.txt,CMakeLists.txt,d7c071197e771263e923b731af05302a7e68efbd,489f101c7e2276c00490f3ab70e9e7926fc6b481,"Disable -mfpu=neon for aarch64

Disable -mfpu command line argument on aarch64, because it is not available in gcc (aarch64)","@@ -258,7 +258,11 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES ""arm.*"")
   set(HAVE_AVX512F FALSE)
   set(HAVE_FMA FALSE)
   set(HAVE_SSE4_1 FALSE)
+
   check_cxx_compiler_flag(""-mfpu=neon"" HAVE_NEON)
+  if(HAVE_NEON)
+    set(NEON_COMPILE_FLAGS ""-mfpu=neon"")
+  endif(HAVE_NEON)
 
 else()
 
@@ -272,7 +276,6 @@ else()
 endif(CMAKE_SYSTEM_PROCESSOR MATCHES ""x86|x86_64|AMD64|amd64|i386|i686"")
 
 if(HAVE_NEON)
-  set(NEON_COMPILE_FLAGS ""-mfpu=neon"")
   message(STATUS ""LTO build is not supported on arm/RBPi."")
   set(ENABLE_LTO FALSE)  # enable LTO cause fatal error on arm/RBPi
 endif()
","{'added': [(261, ''), (263, '  if(HAVE_NEON)'), (264, '    set(NEON_COMPILE_FLAGS ""-mfpu=neon"")'), (265, '  endif(HAVE_NEON)')], 'deleted': [(275, '  set(NEON_COMPILE_FLAGS ""-mfpu=neon"")')]}",yes
src\ccutil\genericvector.h,src\ccutil\genericvector.h,8df11a6af3ede14f29c1490878802a8bb4d3fe83,675b21cf89af9ba584989931364feef4a5afa68c,"Avoid passing objects by value

This fixes several Coverity Scan issues.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -123,7 +123,7 @@ public:
 
   // Add a callback to be called to delete the elements when the array took
   // their ownership.
-  void set_clear_callback(std::function<void(T)> cb) {
+  void set_clear_callback(const std::function<void(T)> &cb) {
     clear_cb_ = cb;
   }
 
@@ -148,8 +148,8 @@ public:
   // fread (and swapping)/fwrite.
   // Returns false on error or if the callback returns false.
   // DEPRECATED. Use [De]Serialize[Classes] instead.
-  bool write(FILE *f, std::function<bool(FILE *, const T &)> cb) const;
-  bool read(TFile *f, std::function<bool(TFile *, T *)> cb);
+  bool write(FILE *f, const std::function<bool(FILE *, const T &)> &cb) const;
+  bool read(TFile *f, const std::function<bool(TFile *, T *)> &cb);
   // Writes a vector of simple types to the given file. Assumes that bitwise
   // read/write of T will work. Returns false in case of error.
   // TODO(rays) Change all callers to use TFile and remove deprecated methods.
@@ -577,7 +577,7 @@ int GenericVector<T>::push_back(T object) {
     double_the_size();
   }
   index = size_used_++;
-  data_[index] = object;
+  data_[index] = std::move(object);
   return index;
 }
 
@@ -627,7 +627,7 @@ void GenericVector<T>::delete_data_pointers() {
 }
 
 template <typename T>
-bool GenericVector<T>::write(FILE *f, std::function<bool(FILE *, const T &)> cb) const {
+bool GenericVector<T>::write(FILE *f, const std::function<bool(FILE *, const T &)> &cb) const {
   if (fwrite(&size_reserved_, sizeof(size_reserved_), 1, f) != 1) {
     return false;
   }
@@ -649,7 +649,7 @@ bool GenericVector<T>::write(FILE *f, std::function<bool(FILE *, const T &)> cb)
 }
 
 template <typename T>
-bool GenericVector<T>::read(TFile *f, std::function<bool(TFile *, T *)> cb) {
+bool GenericVector<T>::read(TFile *f, const std::function<bool(TFile *, T *)> &cb) {
   int32_t reserved;
   if (f->FReadEndian(&reserved, sizeof(reserved), 1) != 1) {
     return false;
","{'added': [(126, '  void set_clear_callback(const std::function<void(T)> &cb) {'), (151, '  bool write(FILE *f, const std::function<bool(FILE *, const T &)> &cb) const;'), (152, '  bool read(TFile *f, const std::function<bool(TFile *, T *)> &cb);'), (580, '  data_[index] = std::move(object);'), (630, 'bool GenericVector<T>::write(FILE *f, const std::function<bool(FILE *, const T &)> &cb) const {'), (652, 'bool GenericVector<T>::read(TFile *f, const std::function<bool(TFile *, T *)> &cb) {')], 'deleted': [(126, '  void set_clear_callback(std::function<void(T)> cb) {'), (151, '  bool write(FILE *f, std::function<bool(FILE *, const T &)> cb) const;'), (152, '  bool read(TFile *f, std::function<bool(TFile *, T *)> cb);'), (580, '  data_[index] = object;'), (630, 'bool GenericVector<T>::write(FILE *f, std::function<bool(FILE *, const T &)> cb) const {'), (652, 'bool GenericVector<T>::read(TFile *f, std::function<bool(TFile *, T *)> cb) {')]}",yes
src\ccutil\unicity_table.h,src\ccutil\unicity_table.h,8df11a6af3ede14f29c1490878802a8bb4d3fe83,675b21cf89af9ba584989931364feef4a5afa68c,"Avoid passing objects by value

This fixes several Coverity Scan issues.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -87,7 +87,7 @@ public:
 
   /// Add a callback to be called to delete the elements when the table took
   /// their ownership.
-  void set_clear_callback(std::function<void(T)> cb) {
+  void set_clear_callback(const std::function<void(T)> &cb) {
     table_.set_clear_callback(cb);
   }
 
@@ -109,10 +109,10 @@ public:
   /// The Callback given must be permanent since they will be called more than
   /// once. The given callback will be deleted at the end.
   /// Returns false on read/write error.
-  bool write(FILE *f, std::function<bool(FILE *, const T &)> cb) const {
+  bool write(FILE *f, const std::function<bool(FILE *, const T &)> &cb) const {
     return table_.write(f, cb);
   }
-  bool read(tesseract::TFile *f, std::function<bool(tesseract::TFile *, T *)> cb) {
+  bool read(tesseract::TFile *f, const std::function<bool(tesseract::TFile *, T *)> &cb) {
     return table_.read(f, cb);
   }
 
","{'added': [(90, '  void set_clear_callback(const std::function<void(T)> &cb) {'), (112, '  bool write(FILE *f, const std::function<bool(FILE *, const T &)> &cb) const {'), (115, '  bool read(tesseract::TFile *f, const std::function<bool(tesseract::TFile *, T *)> &cb) {')], 'deleted': [(90, '  void set_clear_callback(std::function<void(T)> cb) {'), (112, '  bool write(FILE *f, std::function<bool(FILE *, const T &)> cb) const {'), (115, '  bool read(tesseract::TFile *f, std::function<bool(tesseract::TFile *, T *)> cb) {')]}",yes
src\ccstruct\normalis.cpp,src\ccstruct\normalis.cpp,675b21cf89af9ba584989931364feef4a5afa68c,489f101c7e2276c00490f3ab70e9e7926fc6b481,"Add missing initialisation in DENORM copy constructor

This fixes a Coverity Scan issue:

    1487976 Uninitialized pointer read

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -42,6 +42,8 @@ DENORM::DENORM() {
 
 DENORM::DENORM(const DENORM &src) {
   rotation_ = nullptr;
+  x_map_ = nullptr;
+  y_map_ = nullptr;
   *this = src;
 }
 
","{'added': [(45, '  x_map_ = nullptr;'), (46, '  y_map_ = nullptr;')], 'deleted': []}",yes
ChangeLog,ChangeLog,489f101c7e2276c00490f3ab70e9e7926fc6b481,cf235ccfed99c584a335b5be0f083cd58caf6b0a,"Create new release 5.3.2

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,20 @@
+2023-07-11 - V5.3.2
+* Updates for snap package building.
+* Support for Sgaw and W Pwo Karen languages in the Myanmar validator (#4065).
+* Improve format of logging from lstmtraining.
+* Use less digits in filenames of checkpoints written by lstmtraining.
+* Replace deprecated sprintf.
+* Remove unused code in function fix_rep_char.
+* Avoid 32 bit overflow in multiplication (fixes 3 CodeQL CI alerts).
+* Avoid conversions from std::string to char* to std::string.
+* Abort with error message if OSD is requested with LSTM-only model.
+* cmake: allow to disable tiff (-DDISABLE_TIFF=ON).
+* cmake: provide info about disabled LibArchive and CURL.
+* cmake: check if leptonica was build with tiff support.
+* Remove old broken GitHub action vcpkg-4.1.1 (fixes issue #4078).
+* Create config.yml.
+* Fix typos.
+
 2023-04-01 - V5.3.1
  * Bug fixes for some special scenarios:
    * Fix issue #4010.
","{'added': [(1, '2023-07-11 - V5.3.2'), (2, '* Updates for snap package building.'), (3, '* Support for Sgaw and W Pwo Karen languages in the Myanmar validator (#4065).'), (4, '* Improve format of logging from lstmtraining.'), (5, '* Use less digits in filenames of checkpoints written by lstmtraining.'), (6, '* Replace deprecated sprintf.'), (7, '* Remove unused code in function fix_rep_char.'), (8, '* Avoid 32 bit overflow in multiplication (fixes 3 CodeQL CI alerts).'), (9, '* Avoid conversions from std::string to char* to std::string.'), (10, '* Abort with error message if OSD is requested with LSTM-only model.'), (11, '* cmake: allow to disable tiff (-DDISABLE_TIFF=ON).'), (12, '* cmake: provide info about disabled LibArchive and CURL.'), (13, '* cmake: check if leptonica was build with tiff support.'), (14, '* Remove old broken GitHub action vcpkg-4.1.1 (fixes issue #4078).'), (15, '* Create config.yml.'), (16, '* Fix typos.'), (17, '')], 'deleted': []}",yes
VERSION,VERSION,489f101c7e2276c00490f3ab70e9e7926fc6b481,cf235ccfed99c584a335b5be0f083cd58caf6b0a,"Create new release 5.3.2

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.3.1
+5.3.2
","{'added': [(1, '5.3.2')], 'deleted': [(1, '5.3.1')]}",yes
configure.ac,configure.ac,489f101c7e2276c00490f3ab70e9e7926fc6b481,cf235ccfed99c584a335b5be0f083cd58caf6b0a,"Create new release 5.3.2

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2023
-PACKAGE_DATE=""04/01""
+PACKAGE_DATE=""07/11""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""07/11""')], 'deleted': [(32, 'PACKAGE_DATE=""04/01""')]}",yes
CMakeLists.txt,CMakeLists.txt,cf235ccfed99c584a335b5be0f083cd58caf6b0a,63639750701206cd77a5b5834653abca5b6c02fc,"Fix typos

Found via `codespell -q 3 -L bu,eiter,fo,fpr,inout,numer,pixes,thisy`","@@ -324,7 +324,7 @@ if(OPENMP_BUILD)
   if(NOT OpenMP_FOUND
      AND CLANG
      AND WIN32)
-    # workaroung because find_package(OpenMP) does not work for clang-cl
+    # workaround because find_package(OpenMP) does not work for clang-cl
     # https://gitlab.kitware.com/cmake/cmake/issues/19404
     check_include_file_cxx(omp.h HAVE_OMP_H_INCLUDE)
     find_library(OpenMP_LIBRARY NAMES omp libomp.lib)
","{'added': [(327, '    # workaround because find_package(OpenMP) does not work for clang-cl')], 'deleted': [(327, '    # workaroung because find_package(OpenMP) does not work for clang-cl')]}",yes
src\textord\edgblob.cpp,src\textord\edgblob.cpp,cf235ccfed99c584a335b5be0f083cd58caf6b0a,63639750701206cd77a5b5834653abca5b6c02fc,"Fix typos

Found via `codespell -q 3 -L bu,eiter,fo,fpr,inout,numer,pixes,thisy`","@@ -174,7 +174,7 @@ int32_t OL_BUCKETS::outline_complexity(C_OUTLINE *outline, // parent outline
         if (child_count + grandchild_count > max_count) { // too complex
           if (edges_debug) {
             tprintf(
-                ""Disgard outline on child_count=%d + grandchild_count=%d ""
+                ""Discard outline on child_count=%d + grandchild_count=%d ""
                 ""> max_count=%d\n"",
                 child_count, grandchild_count, max_count);
           }
","{'added': [(177, '                ""Discard outline on child_count=%d + grandchild_count=%d ""')], 'deleted': [(177, '                ""Disgard outline on child_count=%d + grandchild_count=%d ""')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,63639750701206cd77a5b5834653abca5b6c02fc,bb8803aa03d0602db77574d9b74314aadfe3311f,"Update issue-bug.yml

Debian 12 Bookworm was recently released.","@@ -46,7 +46,7 @@ body:
         - macOS 11 Big Sur
         - Ubuntu 22.04 Jammy
         - Ubuntu 20.04 Focal
-        - Debian Testing Bookworm
+        - Debian 12 Bookworm
         - Debian 11 Bullseye
         - RHEL 9
         - RHEL 8
","{'added': [(49, '        - Debian 12 Bookworm')], 'deleted': [(49, '        - Debian Testing Bookworm')]}",yes
.mailmap,.mailmap,bb8803aa03d0602db77574d9b74314aadfe3311f,24da4c714bed158db8ab6e979293ee76e1bb6a37,Update .mailmap,"@@ -2,6 +2,9 @@ Amit Dovev <amitdev2222@gmail.com>
 
 Egor Pugin <egor.pugin@gmail.com>
 
+Jeff Breidenbach <breidenbach@gmail.com>
+Jeff Breidenbach <breidenbach@gmail.com> <jbreiden@google.com>
+
 Jim O'Regan <joregan@gmail.com>
 Jim O'Regan <joregan@gmail.com> <joregan@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
 Jim O'Regan <joregan@gmail.com> <joregan@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
","{'added': [(5, 'Jeff Breidenbach <breidenbach@gmail.com>'), (6, 'Jeff Breidenbach <breidenbach@gmail.com> <jbreiden@google.com>'), (7, '')], 'deleted': []}",yes
,.github\ISSUE_TEMPLATE\config.yml,24da4c714bed158db8ab6e979293ee76e1bb6a37,c8abff8df0969ea3f96a484291db2bcc8aee704e,Create config.yml,"@@ -0,0 +1,5 @@
+blank_issues_enabled: false
+contact_links:
+  - name: Question
+    url: https://groups.google.com/g/tesseract-ocr
+    about: Please ask questions in our forum
","{'added': [(1, 'blank_issues_enabled: false'), (2, 'contact_links:'), (3, '  - name: Question'), (4, '    url: https://groups.google.com/g/tesseract-ocr'), (5, '    about: Please ask questions in our forum')], 'deleted': []}",yes
.github\workflows\vcpkg-4.1.1.yml,,c8abff8df0969ea3f96a484291db2bcc8aee704e,58b75b3fd96d92ddb41086cd432798eecfdc95d2,"Remove old broken GitHub action vcpkg-4.1.1 (fixes issue #4078)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,109 +0,0 @@
-name: vcpkg-4.1.1
-# build tesseract 4.1 using vcpkg and cmake on ubuntu and windows.
-# build and run basicapitest on windows.
-# macos fails on leptonica build - https://github.com/microsoft/vcpkg/issues/16116
-on:
-  #push:
-  schedule:
-    - cron: 0 22 1 * *
-
-jobs:
-  build:
-    runs-on: ${{ matrix.os }}
-    strategy:
-      fail-fast: false
-      matrix:
-        os: [ubuntu-latest, windows-latest]
-
-    steps:
-      - name: Checkout Tesseract Source (for test images)
-        uses: actions/checkout@v3
-        with:
-          submodules: recursive
-
-      - name: Install vcpkg (Linux)
-        run: |
-             git clone https://github.com/microsoft/vcpkg
-             vcpkg/bootstrap-vcpkg.sh
-             vcpkg/vcpkg integrate install
-        if: runner.os == 'Linux'
-
-      - name: Build Tesseract 4.1.1 (Linux)
-        run: |
-             vcpkg/vcpkg install tesseract:x64-linux
-        if: runner.os == 'Linux'
-
-      - name: Visual Studio Setup (Windows)
-        shell: cmd
-        run: |
-             call ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat""
-        if: runner.os == 'Windows'
-
-      - name: Install vcpkg (Windows)
-        run: |
-             git clone https://github.com/microsoft/vcpkg
-             vcpkg/bootstrap-vcpkg.bat
-             vcpkg/vcpkg integrate install
-        if: runner.os == 'Windows'
-
-      - name: Build and Install Tesseract and dependencies using vcpkg (Windows)
-        run: |
-            vcpkg/vcpkg install tesseract:x64-windows
-        if: runner.os == 'Windows'
-
-      - name: Download tessdata used for tests
-        run: |
-             git clone https://github.com/egorpugin/tessdata tessdata_unittest
-             mv tessdata_unittest/* ../
-        if: runner.os == 'Windows'
-
-      - name: Create CMakeLists.txt file for basicapitest
-        shell: bash
-        run: |
-             cd test
-             cat << ""EOF"" > CMakeLists.txt
-             cmake_minimum_required(VERSION 3.19)
-             project( basicapitest )
-             find_package( Tesseract REQUIRED )
-             find_package( Leptonica REQUIRED )
-             include_directories(${Tesseract_INCLUDE_DIRS})
-             include_directories(${Leptonica_INCLUDE_DIRS})
-             add_executable( basicapitest testing/basicapitest.cpp )
-             target_link_libraries(basicapitest ${Leptonica_LIBRARIES})
-             target_link_libraries(basicapitest ${Tesseract_LIBRARIES})
-             target_link_libraries(basicapitest libtesseract)
-             EOF
-             cat CMakeLists.txt
-        if: runner.os == 'Windows'
-
-      - name: Configure basicapitest
-        run: |
-             cd test
-             cmake . ""-DCMAKE_TOOLCHAIN_FILE=${env:GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake""
-        if: runner.os == 'Windows'
-
-      - name: Build basicapitest
-        run: |
-             cd test
-             cmake --build .  --config Release
-        if: runner.os == 'Windows'
-
-      - name: Run basicapitest (Windows)
-        run: |
-             cd test
-             D:\a\tesseract\tesseract\test\Release\basicapitest.exe
-        if: runner.os == 'Windows'
-
-      - name: Build Tesseract 4.1.1 (macOS) Leptonica build fails
-        run: |
-             git clone https://github.com/microsoft/vcpkg
-             vcpkg/bootstrap-vcpkg.sh
-             vcpkg/vcpkg integrate install
-             vcpkg install leptonica:x64-osx
-             vcpkg install tesseract:x64-osx
-        if: runner.os == 'macOS'
-
-      - name: Display Leptonica error log (macOS) Fails
-        run: |
-             cat /usr/local/share/vcpkg/buildtrees/leptonica/install-x64-osx-dbg-out.log
-        if: ${{ runner.os == 'macOS' && always() }}
","{'added': [], 'deleted': [(1, 'name: vcpkg-4.1.1'), (2, '# build tesseract 4.1 using vcpkg and cmake on ubuntu and windows.'), (3, '# build and run basicapitest on windows.'), (4, '# macos fails on leptonica build - https://github.com/microsoft/vcpkg/issues/16116'), (5, 'on:'), (6, '  #push:'), (7, '  schedule:'), (8, '    - cron: 0 22 1 * *'), (9, ''), (10, 'jobs:'), (11, '  build:'), (12, '    runs-on: ${{ matrix.os }}'), (13, '    strategy:'), (14, '      fail-fast: false'), (15, '      matrix:'), (16, '        os: [ubuntu-latest, windows-latest]'), (17, ''), (18, '    steps:'), (19, '      - name: Checkout Tesseract Source (for test images)'), (20, '        uses: actions/checkout@v3'), (21, '        with:'), (22, '          submodules: recursive'), (23, ''), (24, '      - name: Install vcpkg (Linux)'), (25, '        run: |'), (26, '             git clone https://github.com/microsoft/vcpkg'), (27, '             vcpkg/bootstrap-vcpkg.sh'), (28, '             vcpkg/vcpkg integrate install'), (29, ""        if: runner.os == 'Linux'""), (30, ''), (31, '      - name: Build Tesseract 4.1.1 (Linux)'), (32, '        run: |'), (33, '             vcpkg/vcpkg install tesseract:x64-linux'), (34, ""        if: runner.os == 'Linux'""), (35, ''), (36, '      - name: Visual Studio Setup (Windows)'), (37, '        shell: cmd'), (38, '        run: |'), (39, '             call ""C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat""'), (40, ""        if: runner.os == 'Windows'""), (41, ''), (42, '      - name: Install vcpkg (Windows)'), (43, '        run: |'), (44, '             git clone https://github.com/microsoft/vcpkg'), (45, '             vcpkg/bootstrap-vcpkg.bat'), (46, '             vcpkg/vcpkg integrate install'), (47, ""        if: runner.os == 'Windows'""), (48, ''), (49, '      - name: Build and Install Tesseract and dependencies using vcpkg (Windows)'), (50, '        run: |'), (51, '            vcpkg/vcpkg install tesseract:x64-windows'), (52, ""        if: runner.os == 'Windows'""), (53, ''), (54, '      - name: Download tessdata used for tests'), (55, '        run: |'), (56, '             git clone https://github.com/egorpugin/tessdata tessdata_unittest'), (57, '             mv tessdata_unittest/* ../'), (58, ""        if: runner.os == 'Windows'""), (59, ''), (60, '      - name: Create CMakeLists.txt file for basicapitest'), (61, '        shell: bash'), (62, '        run: |'), (63, '             cd test'), (64, '             cat << ""EOF"" > CMakeLists.txt'), (65, '             cmake_minimum_required(VERSION 3.19)'), (66, '             project( basicapitest )'), (67, '             find_package( Tesseract REQUIRED )'), (68, '             find_package( Leptonica REQUIRED )'), (69, '             include_directories(${Tesseract_INCLUDE_DIRS})'), (70, '             include_directories(${Leptonica_INCLUDE_DIRS})'), (71, '             add_executable( basicapitest testing/basicapitest.cpp )'), (72, '             target_link_libraries(basicapitest ${Leptonica_LIBRARIES})'), (73, '             target_link_libraries(basicapitest ${Tesseract_LIBRARIES})'), (74, '             target_link_libraries(basicapitest libtesseract)'), (75, '             EOF'), (76, '             cat CMakeLists.txt'), (77, ""        if: runner.os == 'Windows'""), (78, ''), (79, '      - name: Configure basicapitest'), (80, '        run: |'), (81, '             cd test'), (82, '             cmake . ""-DCMAKE_TOOLCHAIN_FILE=${env:GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake""'), (83, ""        if: runner.os == 'Windows'""), (84, ''), (85, '      - name: Build basicapitest'), (86, '        run: |'), (87, '             cd test'), (88, '             cmake --build .  --config Release'), (89, ""        if: runner.os == 'Windows'""), (90, ''), (91, '      - name: Run basicapitest (Windows)'), (92, '        run: |'), (93, '             cd test'), (94, '             D:\\a\\tesseract\\tesseract\\test\\Release\\basicapitest.exe'), (95, ""        if: runner.os == 'Windows'""), (96, ''), (97, '      - name: Build Tesseract 4.1.1 (macOS) Leptonica build fails'), (98, '        run: |'), (99, '             git clone https://github.com/microsoft/vcpkg'), (100, '             vcpkg/bootstrap-vcpkg.sh'), (101, '             vcpkg/vcpkg integrate install'), (102, '             vcpkg install leptonica:x64-osx'), (103, '             vcpkg install tesseract:x64-osx'), (104, ""        if: runner.os == 'macOS'""), (105, ''), (106, '      - name: Display Leptonica error log (macOS) Fails'), (107, '        run: |'), (108, '             cat /usr/local/share/vcpkg/buildtrees/leptonica/install-x64-osx-dbg-out.log'), (109, ""        if: ${{ runner.os == 'macOS' && always() }}"")]}",yes
CMakeLists.txt,CMakeLists.txt,58b75b3fd96d92ddb41086cd432798eecfdc95d2,d999957fae0cc991c669bfd331fe005cadfd9879,cmake: check if leptonica was build with tiff support,"@@ -372,6 +372,7 @@ add_definitions(""-DCMAKE_BUILD"")
 # packages
 #
 # ##############################################################################
+include(CheckFunctions)
 
 if(SW_BUILD)
   find_package(SW REQUIRED)
@@ -398,9 +399,19 @@ else()
   endif()
   if(NOT Leptonica_FOUND)
     message(FATAL_ERROR ""Cannot find required library Leptonica. Quitting!"")
+  else()
+    message(STATUS ""Found leptonica version: ${Leptonica_VERSION}"")
   endif(NOT Leptonica_FOUND)
   include_directories(${Leptonica_INCLUDE_DIRS})
 
+  check_leptonica_tiff_support()
+  if (NOT LEPT_TIFF_RESULT EQUAL 0)
+    message(NOTICE ""Leptonica was build without TIFF support! Disabling TIFF support..."")
+    set(DISABLE_TIFF ON)
+  else()
+    message(STATUS ""Leptonica was build with TIFF support."")
+  endif()
+
   # Check for optional libraries.
   if(DISABLE_TIFF)
     set(HAVE_TIFFIO_H OFF)
","{'added': [(375, 'include(CheckFunctions)'), (402, '  else()'), (403, '    message(STATUS ""Found leptonica version: ${Leptonica_VERSION}"")'), (407, '  check_leptonica_tiff_support()'), (408, '  if (NOT LEPT_TIFF_RESULT EQUAL 0)'), (409, '    message(NOTICE ""Leptonica was build without TIFF support! Disabling TIFF support..."")'), (410, '    set(DISABLE_TIFF ON)'), (411, '  else()'), (412, '    message(STATUS ""Leptonica was build with TIFF support."")'), (413, '  endif()'), (414, '')], 'deleted': []}",yes
,cmake\CheckFunctions.cmake,58b75b3fd96d92ddb41086cd432798eecfdc95d2,d999957fae0cc991c669bfd331fe005cadfd9879,cmake: check if leptonica was build with tiff support,"@@ -0,0 +1,49 @@
+# Licensed under the Apache License, Version 2.0 (the ""License""); you may not
+# use this file except in compliance with the License. You may obtain a copy of
+# the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by
+# applicable law or agreed to in writing, software distributed under the License
+# is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied. See the License for the specific language
+# governing permissions and limitations under the License.
+# ##############################################################################
+#
+# macros and functions
+#
+# ##############################################################################
+
+# ##############################################################################
+# FUNCTION check_leptonica_tiff_support
+# ##############################################################################
+function(check_leptonica_tiff_support)
+  # check if leptonica was build with tiff support set result to
+  # LEPT_TIFF_RESULT
+  set(TIFF_TEST
+      ""#include <leptonica/allheaders.h>\n""
+      ""int main() {\n""
+      ""  l_uint8 *data = NULL;\n""
+      ""  size_t size = 0;\n""
+      ""  PIX* pix = pixCreate(3, 3, 4);\n""
+      ""  l_int32 ret_val = pixWriteMemTiff(&data, &size, pix, IFF_TIFF_G3);\n""
+      ""  pixDestroy(&pix);\n""
+      ""  lept_free(data);\n""
+      ""  return ret_val;}\n"")
+  set(CMAKE_TRY_COMPILE_CONFIGURATION ${CMAKE_BUILD_TYPE})
+  try_run(
+    LEPT_TIFF_RESULT
+    LEPT_TIFF_COMPILE 
+    SOURCE_FROM_CONTENT tiff_test.cpp ""${TIFF_TEST}""
+    CMAKE_FLAGS ""-DINCLUDE_DIRECTORIES=${Leptonica_INCLUDE_DIRS}""
+    LINK_LIBRARIES ${Leptonica_LIBRARIES}
+    COMPILE_OUTPUT_VARIABLE
+    COMPILE_OUTPUT)
+  if(NOT LEPT_TIFF_COMPILE)
+    message(STATUS ""COMPILE_OUTPUT: ${COMPILE_OUTPUT}"")
+    message(STATUS ""Leptonica_INCLUDE_DIRS: ${Leptonica_INCLUDE_DIRS}"")
+    message(STATUS ""Leptonica_LIBRARIES: ${Leptonica_LIBRARIES}"")
+    message(STATUS ""LEPT_TIFF_RESULT: ${LEPT_TIFF_RESULT}"")
+    message(STATUS ""LEPT_TIFF_COMPILE: ${LEPT_TIFF_COMPILE}"")
+    message(WARNING ""Failed to compile test"")
+  endif()
+endfunction(check_leptonica_tiff_support)
+
+# ##############################################################################
","{'added': [(1, '# Licensed under the Apache License, Version 2.0 (the ""License""); you may not'), (2, '# use this file except in compliance with the License. You may obtain a copy of'), (3, '# the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by'), (4, '# applicable law or agreed to in writing, software distributed under the License'), (5, '# is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY'), (6, '# KIND, either express or implied. See the License for the specific language'), (7, '# governing permissions and limitations under the License.'), (8, '# ##############################################################################'), (9, '#'), (10, '# macros and functions'), (11, '#'), (12, '# ##############################################################################'), (13, ''), (14, '# ##############################################################################'), (15, '# FUNCTION check_leptonica_tiff_support'), (16, '# ##############################################################################'), (17, 'function(check_leptonica_tiff_support)'), (18, '  # check if leptonica was build with tiff support set result to'), (19, '  # LEPT_TIFF_RESULT'), (20, '  set(TIFF_TEST'), (21, '      ""#include <leptonica/allheaders.h>\\n""'), (22, '      ""int main() {\\n""'), (23, '      ""  l_uint8 *data = NULL;\\n""'), (24, '      ""  size_t size = 0;\\n""'), (25, '      ""  PIX* pix = pixCreate(3, 3, 4);\\n""'), (26, '      ""  l_int32 ret_val = pixWriteMemTiff(&data, &size, pix, IFF_TIFF_G3);\\n""'), (27, '      ""  pixDestroy(&pix);\\n""'), (28, '      ""  lept_free(data);\\n""'), (29, '      ""  return ret_val;}\\n"")'), (30, '  set(CMAKE_TRY_COMPILE_CONFIGURATION ${CMAKE_BUILD_TYPE})'), (31, '  try_run('), (32, '    LEPT_TIFF_RESULT'), (33, '    LEPT_TIFF_COMPILE'), (34, '    SOURCE_FROM_CONTENT tiff_test.cpp ""${TIFF_TEST}""'), (35, '    CMAKE_FLAGS ""-DINCLUDE_DIRECTORIES=${Leptonica_INCLUDE_DIRS}""'), (36, '    LINK_LIBRARIES ${Leptonica_LIBRARIES}'), (37, '    COMPILE_OUTPUT_VARIABLE'), (38, '    COMPILE_OUTPUT)'), (39, '  if(NOT LEPT_TIFF_COMPILE)'), (40, '    message(STATUS ""COMPILE_OUTPUT: ${COMPILE_OUTPUT}"")'), (41, '    message(STATUS ""Leptonica_INCLUDE_DIRS: ${Leptonica_INCLUDE_DIRS}"")'), (42, '    message(STATUS ""Leptonica_LIBRARIES: ${Leptonica_LIBRARIES}"")'), (43, '    message(STATUS ""LEPT_TIFF_RESULT: ${LEPT_TIFF_RESULT}"")'), (44, '    message(STATUS ""LEPT_TIFF_COMPILE: ${LEPT_TIFF_COMPILE}"")'), (45, '    message(WARNING ""Failed to compile test"")'), (46, '  endif()'), (47, 'endfunction(check_leptonica_tiff_support)'), (48, ''), (49, '# ##############################################################################')], 'deleted': []}",no
CMakeLists.txt,CMakeLists.txt,d999957fae0cc991c669bfd331fe005cadfd9879,37a9fa95505e9dfa7c3af61088e4aeadfb9c8691,cmake: provide info about disabled LibArchive and CURL,"@@ -418,6 +418,7 @@ else()
   endif(DISABLE_TIFF)
   if(DISABLE_ARCHIVE)
     set(HAVE_LIBARCHIVE OFF)
+    message(STATUS ""LibArchive support disabled."")
   else(DISABLE_ARCHIVE)
     find_package(LibArchive)
     if(NOT LibArchive_FOUND AND PKG_CONFIG_EXECUTABLE)
@@ -431,6 +432,7 @@ else()
   endif(DISABLE_ARCHIVE)
   if(DISABLE_CURL)
     set(HAVE_LIBCURL OFF)
+    message(STATUS ""CURL support disabled."")
   else(DISABLE_CURL)
     find_package(CURL)
     if(NOT CURL_FOUND AND PKG_CONFIG_EXECUTABLE)
","{'added': [(421, '    message(STATUS ""LibArchive support disabled."")'), (435, '    message(STATUS ""CURL support disabled."")')], 'deleted': []}",yes
CMakeLists.txt,CMakeLists.txt,37a9fa95505e9dfa7c3af61088e4aeadfb9c8691,3e911e4cf5cdcd3184e56520a7682a84be3dc57a,cmake: allow to disable tiff (-DDISABLE_TIFF=ON),"@@ -96,6 +96,7 @@ option(ENABLE_NATIVE
 option(BUILD_TRAINING_TOOLS ""Build training tools"" ON)
 option(BUILD_TESTS ""Build tests"" OFF)
 option(USE_SYSTEM_ICU ""Use system ICU"" OFF)
+option(DISABLE_TIFF ""Disable build with libtiff (if available)"" OFF)
 option(DISABLE_ARCHIVE ""Disable build with libarchive (if available)"" OFF)
 option(DISABLE_CURL ""Disable build with libcurl (if available)"" OFF)
 option(INSTALL_CONFIGS ""Install tesseract configs"" ON)
@@ -401,15 +402,20 @@ else()
   include_directories(${Leptonica_INCLUDE_DIRS})
 
   # Check for optional libraries.
-  find_package(TIFF) # for tesseract
-  if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)
-    # try PKG_CONFIG to find libtiff if cmake failed
-    pkg_check_modules(TIFF libtiff-4)
-  endif()
-  if(TIFF_FOUND)
-    set(HAVE_TIFFIO_H ON)
-    include_directories(${TIFF_INCLUDE_DIRS})
-  endif(TIFF_FOUND)
+  if(DISABLE_TIFF)
+    set(HAVE_TIFFIO_H OFF)
+    message(STATUS ""TIFF support disabled."")
+  else(DISABLE_TIFF)
+    find_package(TIFF) # for tesseract
+    if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)
+      # try PKG_CONFIG to find libtiff if cmake failed
+      pkg_check_modules(TIFF libtiff-4)
+    endif()
+    if(TIFF_FOUND)
+      set(HAVE_TIFFIO_H ON)
+      include_directories(${TIFF_INCLUDE_DIRS})
+    endif(TIFF_FOUND)
+  endif(DISABLE_TIFF)
   if(DISABLE_ARCHIVE)
     set(HAVE_LIBARCHIVE OFF)
   else(DISABLE_ARCHIVE)
","{'added': [(99, 'option(DISABLE_TIFF ""Disable build with libtiff (if available)"" OFF)'), (405, '  if(DISABLE_TIFF)'), (406, '    set(HAVE_TIFFIO_H OFF)'), (407, '    message(STATUS ""TIFF support disabled."")'), (408, '  else(DISABLE_TIFF)'), (409, '    find_package(TIFF) # for tesseract'), (410, '    if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)'), (411, '      # try PKG_CONFIG to find libtiff if cmake failed'), (412, '      pkg_check_modules(TIFF libtiff-4)'), (413, '    endif()'), (414, '    if(TIFF_FOUND)'), (415, '      set(HAVE_TIFFIO_H ON)'), (416, '      include_directories(${TIFF_INCLUDE_DIRS})'), (417, '    endif(TIFF_FOUND)'), (418, '  endif(DISABLE_TIFF)')], 'deleted': [(404, '  find_package(TIFF) # for tesseract'), (405, '  if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)'), (406, '    # try PKG_CONFIG to find libtiff if cmake failed'), (407, '    pkg_check_modules(TIFF libtiff-4)'), (408, '  endif()'), (409, '  if(TIFF_FOUND)'), (410, '    set(HAVE_TIFFIO_H ON)'), (411, '    include_directories(${TIFF_INCLUDE_DIRS})'), (412, '  endif(TIFF_FOUND)')]}",yes
Makefile.am,Makefile.am,92999505eeb5bee591bb578d5ea0948f152aa1ed,c9895dbad439e5ff42f45ef1d03fe5e8572f2e89,"Abort with error message if OSD is requested with LSTM-only model

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -734,10 +734,15 @@ bin_PROGRAMS = tesseract
 tesseract_SOURCES = src/tesseract.cpp
 tesseract_CPPFLAGS =
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/arch
+tesseract_CPPFLAGS += -I$(top_srcdir)/src/ccmain
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/ccstruct
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/ccutil
+tesseract_CPPFLAGS += -I$(top_srcdir)/src/classify
+tesseract_CPPFLAGS += -I$(top_srcdir)/src/cutil
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/dict
+tesseract_CPPFLAGS += -I$(top_srcdir)/src/textord
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/viewer
+tesseract_CPPFLAGS += -I$(top_srcdir)/src/wordrec
 if OPENCL
 tesseract_CPPFLAGS += -I$(top_srcdir)/src/opencl
 endif
","{'added': [(737, 'tesseract_CPPFLAGS += -I$(top_srcdir)/src/ccmain'), (740, 'tesseract_CPPFLAGS += -I$(top_srcdir)/src/classify'), (741, 'tesseract_CPPFLAGS += -I$(top_srcdir)/src/cutil'), (743, 'tesseract_CPPFLAGS += -I$(top_srcdir)/src/textord'), (745, 'tesseract_CPPFLAGS += -I$(top_srcdir)/src/wordrec')], 'deleted': []}",yes
src\tesseract.cpp,src\tesseract.cpp,92999505eeb5bee591bb578d5ea0948f152aa1ed,c9895dbad439e5ff42f45ef1d03fe5e8572f2e89,"Abort with error message if OSD is requested with LSTM-only model

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -39,6 +39,7 @@
 #endif
 #include <tesseract/renderer.h>
 #include ""simddetect.h""
+#include ""tesseractclass.h"" // for AnyTessLang
 #include ""tprintf.h"" // for tprintf
 
 #ifdef _OPENMP
@@ -787,6 +788,12 @@ int main(int argc, char **argv) {
                           (api.GetBoolVariable(""tessedit_make_boxes_from_boxes"", &b) && b) ||
                           (api.GetBoolVariable(""tessedit_train_line_recognizer"", &b) && b);
 
+  if (api.GetPageSegMode() == tesseract::PSM_OSD_ONLY) {
+    if (!api.tesseract()->AnyTessLang()) {
+      fprintf(stderr, ""Error, OSD requires a model for the legacy engine\n"");
+      return EXIT_FAILURE;
+    }
+  }
 #ifdef DISABLED_LEGACY_ENGINE
   auto cur_psm = api.GetPageSegMode();
   auto osd_warning = std::string("""");
","{'added': [(42, '#include ""tesseractclass.h"" // for AnyTessLang'), (791, '  if (api.GetPageSegMode() == tesseract::PSM_OSD_ONLY) {'), (792, '    if (!api.tesseract()->AnyTessLang()) {'), (793, '      fprintf(stderr, ""Error, OSD requires a model for the legacy engine\\n"");'), (794, '      return EXIT_FAILURE;'), (795, '    }'), (796, '  }')], 'deleted': []}",yes
src\api\baseapi.cpp,src\api\baseapi.cpp,a9ad3601b8dcffbfb59cd353775d7c2ed9a29dfd,6cb82d8b1d0cc5a136942b20aa091b33adac7425,"Avoid conversions from std::string to char* to std::string

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -412,7 +412,7 @@ int TessBaseAPI::Init(const char *data, int data_size, const char *language, Ocr
     if (data_size != 0) {
       mgr.LoadMemBuffer(language, data, data_size);
     }
-    if (tesseract_->init_tesseract(datapath.c_str(), output_file_.c_str(), language, oem, configs,
+    if (tesseract_->init_tesseract(datapath, output_file_, language, oem, configs,
                                    configs_size, vars_vec, vars_values, set_only_non_debug_params,
                                    &mgr) != 0) {
       return -1;
@@ -2176,7 +2176,7 @@ int TessBaseAPI::FindLines() {
             "" but data path is undefined\n"");
         delete osd_tesseract_;
         osd_tesseract_ = nullptr;
-      } else if (osd_tesseract_->init_tesseract(datapath_.c_str(), """", ""osd"", OEM_TESSERACT_ONLY,
+      } else if (osd_tesseract_->init_tesseract(datapath_, """", ""osd"", OEM_TESSERACT_ONLY,
                                                 nullptr, 0, nullptr, nullptr, false, &mgr) == 0) {
         osd_tess = osd_tesseract_;
         osd_tesseract_->set_source_resolution(thresholder_->GetSourceYResolution());
","{'added': [(415, '    if (tesseract_->init_tesseract(datapath, output_file_, language, oem, configs,'), (2179, '      } else if (osd_tesseract_->init_tesseract(datapath_, """", ""osd"", OEM_TESSERACT_ONLY,')], 'deleted': [(415, '    if (tesseract_->init_tesseract(datapath.c_str(), output_file_.c_str(), language, oem, configs,'), (2179, '      } else if (osd_tesseract_->init_tesseract(datapath_.c_str(), """", ""osd"", OEM_TESSERACT_ONLY,')]}",yes
src\ccstruct\dppoint.cpp,src\ccstruct\dppoint.cpp,6cb82d8b1d0cc5a136942b20aa091b33adac7425,c9895dbad439e5ff42f45ef1d03fe5e8572f2e89,"Avoid 32 bit overflow in multiplication (fixes 3 CodeQL CI alerts)

The CodeQL CI reports ""Multiplication result converted to larger type"".

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -76,7 +76,7 @@ int64_t DPPoint::CostWithVariance(const DPPoint *prev) {
   int delta = this - prev;
   int32_t n = prev->n_ + 1;
   int32_t sig_x = prev->sig_x_ + delta;
-  int64_t sig_xsq = prev->sig_xsq_ + delta * delta;
+  int64_t sig_xsq = prev->sig_xsq_ + static_cast<int64_t>(delta) * delta;
   int64_t cost = (sig_xsq - sig_x * sig_x / n) / n;
   cost += prev->total_cost_;
   UpdateIfBetter(cost, prev->total_steps_ + 1, prev, n, sig_x, sig_xsq);
","{'added': [(79, '  int64_t sig_xsq = prev->sig_xsq_ + static_cast<int64_t>(delta) * delta;')], 'deleted': [(79, '  int64_t sig_xsq = prev->sig_xsq_ + delta * delta;')]}",yes
src\training\pango\boxchar.cpp,src\training\pango\boxchar.cpp,6cb82d8b1d0cc5a136942b20aa091b33adac7425,c9895dbad439e5ff42f45ef1d03fe5e8572f2e89,"Avoid 32 bit overflow in multiplication (fixes 3 CodeQL CI alerts)

The CodeQL CI reports ""Multiplication result converted to larger type"".

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -278,8 +278,8 @@ bool BoxChar::MostlyVertical(const std::vector<BoxChar *> &boxes) {
       int dx = boxes[i]->box_->x - boxes[i - 1]->box_->x;
       int dy = boxes[i]->box_->y - boxes[i - 1]->box_->y;
       if (abs(dx) > abs(dy) * kMinNewlineRatio || abs(dy) > abs(dx) * kMinNewlineRatio) {
-        total_dx += dx * dx;
-        total_dy += dy * dy;
+        total_dx += static_cast<int64_t>(dx) * dx;
+        total_dy += static_cast<int64_t>(dy) * dy;
       }
     }
   }
","{'added': [(281, '        total_dx += static_cast<int64_t>(dx) * dx;'), (282, '        total_dy += static_cast<int64_t>(dy) * dy;')], 'deleted': [(281, '        total_dx += dx * dx;'), (282, '        total_dy += dy * dy;')]}",yes
src\ccmain\control.cpp,src\ccmain\control.cpp,6b4eb8cf929d1321aa961a342d8bf3c99f5c206d,7cc215c9c2ea788941ee1fe68572293129d02232,"Remove unused code in function fix_rep_char

This also fixes a compiler warning:

    src/ccmain/control.cpp:1694:9: warning: variable 'gap' set but not used [-Wunused-but-set-variable]

Fixes: dbf61974711b5074 (""Major refactor of control.cpp to enable line recognition"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1684,18 +1684,6 @@ void Tesseract::fix_rep_char(PAGE_RES_IT *page_res_it) {
   }
   word_res->done = true;
 
-  // Measure the mean space.
-  int gap_count = 0;
-  WERD *werd = word_res->word;
-  C_BLOB_IT blob_it(werd->cblob_list());
-  C_BLOB *prev_blob = blob_it.data();
-  for (blob_it.forward(); !blob_it.at_first(); blob_it.forward()) {
-    C_BLOB *blob = blob_it.data();
-    int gap = blob->bounding_box().left();
-    gap -= prev_blob->bounding_box().right();
-    ++gap_count;
-    prev_blob = blob;
-  }
   // Just correct existing classification.
   CorrectRepcharChoices(best_choice, word_res);
   word_res->reject_map.initialise(word.length());
","{'added': [], 'deleted': [(1687, '  // Measure the mean space.'), (1688, '  int gap_count = 0;'), (1689, '  WERD *werd = word_res->word;'), (1690, '  C_BLOB_IT blob_it(werd->cblob_list());'), (1691, '  C_BLOB *prev_blob = blob_it.data();'), (1692, '  for (blob_it.forward(); !blob_it.at_first(); blob_it.forward()) {'), (1693, '    C_BLOB *blob = blob_it.data();'), (1694, '    int gap = blob->bounding_box().left();'), (1695, '    gap -= prev_blob->bounding_box().right();'), (1696, '    ++gap_count;'), (1697, '    prev_blob = blob;'), (1698, '  }')]}",yes
src\ccmain\paramsd.cpp,src\ccmain\paramsd.cpp,f2452a68ada27ebee36156daad2971375cba2224,7cc215c9c2ea788941ee1fe68572293129d02232,"Replace deprecated sprintf

Either use snprintf or std::stringstream.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -32,7 +32,7 @@
 #  include ""svmnode.h""        // for SVMenuNode
 #  include ""tesseractclass.h"" // for Tesseract
 
-#  include <cstdio>  // for fclose, fopen, fprintf, sprintf, FILE
+#  include <cstdio>  // for fclose, fopen, fprintf, FILE
 #  include <cstdlib> // for atoi
 #  include <cstring> // for strcmp, strcspn, strlen, strncpy
 #  include <locale>  // for std::locale::classic
@@ -319,16 +319,12 @@ ParamsEditor::ParamsEditor(tesseract::Tesseract *tess, ScrollView *sv) {
 // Write all (changed_) parameters to a config file.
 void ParamsEditor::WriteParams(char *filename, bool changes_only) {
   FILE *fp; // input file
-  char msg_str[255];
   // if file exists
   if ((fp = fopen(filename, ""rb"")) != nullptr) {
     fclose(fp);
-    sprintf(msg_str,
-            ""Overwrite file ""
-            ""%s""
-            ""? (Y/N)"",
-            filename);
-    int a = sv_window_->ShowYesNoDialog(msg_str);
+    std::stringstream msg;
+    msg << ""Overwrite file "" << filename << ""? (Y/N)"";
+    int a = sv_window_->ShowYesNoDialog(msg.str().c_str());
     if (a == 'n') {
       return;
     } // don't write
","{'added': [(35, '#  include <cstdio>  // for fclose, fopen, fprintf, FILE'), (325, '    std::stringstream msg;'), (326, '    msg << ""Overwrite file "" << filename << ""? (Y/N)"";'), (327, '    int a = sv_window_->ShowYesNoDialog(msg.str().c_str());')], 'deleted': [(35, '#  include <cstdio>  // for fclose, fopen, fprintf, sprintf, FILE'), (322, '  char msg_str[255];'), (326, '    sprintf(msg_str,'), (327, '            ""Overwrite file ""'), (328, '            ""%s""'), (329, '            ""? (Y/N)"",'), (330, '            filename);'), (331, '    int a = sv_window_->ShowYesNoDialog(msg_str);')]}",yes
src\ccmain\pgedit.cpp,src\ccmain\pgedit.cpp,f2452a68ada27ebee36156daad2971375cba2224,7cc215c9c2ea788941ee1fe68572293129d02232,"Replace deprecated sprintf

Either use snprintf or std::stringstream.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -36,6 +36,9 @@
 
 #include <cctype>
 #include <cmath>
+#include <iomanip> // for std::setprecision
+#include <locale>  // for std::locale::classic
+#include <sstream> // for std::stringstream
 
 #ifndef GRAPHICS_DISABLED
 namespace tesseract {
@@ -140,32 +143,30 @@ static void show_point(PAGE_RES *page_res, float x, float y) {
   FCOORD pt(x, y);
   PAGE_RES_IT pr_it(page_res);
 
-  const int kBufsize = 512;
-  char msg[kBufsize];
-  char *msg_ptr = msg;
-
-  msg_ptr += sprintf(msg_ptr, ""Pt:(%0.3f, %0.3f) "", x, y);
+  std::stringstream msg;
+  msg.imbue(std::locale::classic());
+  msg << std::fixed << std::setprecision(3) << ""Pt:("" << x << "", "" << y << "") "";
 
   for (WERD_RES *word = pr_it.word(); word != nullptr; word = pr_it.forward()) {
     if (pr_it.row() != pr_it.prev_row() && pr_it.row()->row->bounding_box().contains(pt)) {
-      msg_ptr += sprintf(msg_ptr, ""BL(x)=%0.3f "", pr_it.row()->row->base_line(x));
+      msg << ""BL(x)="" << pr_it.row()->row->base_line(x) << ' ';
     }
     if (word->word->bounding_box().contains(pt)) {
       TBOX box = word->word->bounding_box();
-      msg_ptr += sprintf(msg_ptr, ""Wd(%d, %d)/(%d, %d) "", box.left(), box.bottom(), box.right(),
-                         box.top());
+      msg << ""Wd("" << box.left() << "", "" << box.bottom() << "")/(""
+          << box.right() << "", "" << box.top() << "") "";
       C_BLOB_IT cblob_it(word->word->cblob_list());
       for (cblob_it.mark_cycle_pt(); !cblob_it.cycled_list(); cblob_it.forward()) {
         C_BLOB *cblob = cblob_it.data();
         box = cblob->bounding_box();
         if (box.contains(pt)) {
-          msg_ptr += sprintf(msg_ptr, ""CBlb(%d, %d)/(%d, %d) "", box.left(), box.bottom(),
-                             box.right(), box.top());
+          msg << ""CBlb("" << box.left() << "", "" << box.bottom() << "")/(""
+              << box.right() << "", "" << box.top() << "") "";
         }
       }
     }
   }
-  image_win->AddMessage(msg);
+  image_win->AddMessage(msg.str().c_str());
 }
 
 /**
@@ -622,7 +623,7 @@ void Tesseract::process_image_event( // action in image win
           break;
 
         default:
-          sprintf(msg, ""Mode %d not yet implemented"", mode);
+          snprintf(msg, sizeof(msg), ""Mode %d not yet implemented"", mode);
           image_win->AddMessage(msg);
           break;
       }
","{'added': [(39, '#include <iomanip> // for std::setprecision'), (40, '#include <locale>  // for std::locale::classic'), (41, '#include <sstream> // for std::stringstream'), (146, '  std::stringstream msg;'), (147, '  msg.imbue(std::locale::classic());'), (148, '  msg << std::fixed << std::setprecision(3) << ""Pt:("" << x << "", "" << y << "") "";'), (152, '      msg << ""BL(x)="" << pr_it.row()->row->base_line(x) << \' \';'), (156, '      msg << ""Wd("" << box.left() << "", "" << box.bottom() << "")/(""'), (157, '          << box.right() << "", "" << box.top() << "") "";'), (163, '          msg << ""CBlb("" << box.left() << "", "" << box.bottom() << "")/(""'), (164, '              << box.right() << "", "" << box.top() << "") "";'), (169, '  image_win->AddMessage(msg.str().c_str());'), (626, '          snprintf(msg, sizeof(msg), ""Mode %d not yet implemented"", mode);')], 'deleted': [(143, '  const int kBufsize = 512;'), (144, '  char msg[kBufsize];'), (145, '  char *msg_ptr = msg;'), (146, ''), (147, '  msg_ptr += sprintf(msg_ptr, ""Pt:(%0.3f, %0.3f) "", x, y);'), (151, '      msg_ptr += sprintf(msg_ptr, ""BL(x)=%0.3f "", pr_it.row()->row->base_line(x));'), (155, '      msg_ptr += sprintf(msg_ptr, ""Wd(%d, %d)/(%d, %d) "", box.left(), box.bottom(), box.right(),'), (156, '                         box.top());'), (162, '          msg_ptr += sprintf(msg_ptr, ""CBlb(%d, %d)/(%d, %d) "", box.left(), box.bottom(),'), (163, '                             box.right(), box.top());'), (168, '  image_win->AddMessage(msg);'), (625, '          sprintf(msg, ""Mode %d not yet implemented"", mode);')]}",yes
src\ccutil\errcode.cpp,src\ccutil\errcode.cpp,f2452a68ada27ebee36156daad2971375cba2224,7cc215c9c2ea788941ee1fe68572293129d02232,"Replace deprecated sprintf

Either use snprintf or std::stringstream.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -22,6 +22,8 @@
 #include <cstdio>
 #include <cstdlib>
 #include <cstring>
+#include <iostream> // for std::cerr
+#include <sstream>  // for std::stringstream
 
 namespace tesseract {
 
@@ -41,37 +43,26 @@ void ERRCODE::error(         // handle error
     const char *format, ...  // special message
     ) const {
   va_list args; // variable args
-  char msg[MAX_MSG];
-  char *msgptr = msg;
+  std::stringstream msg;
 
   if (caller != nullptr) {
     // name of caller
-    msgptr += sprintf(msgptr, ""%s:"", caller);
+    msg << caller << ':';
   }
   // actual message
-  msgptr += sprintf(msgptr, ""Error:%s"", message);
+  msg << ""Error:"" << message;
   if (format != nullptr) {
-    msgptr += sprintf(msgptr, "":"");
+    char str[MAX_MSG];
     va_start(args, format); // variable list
-#ifdef _WIN32
-                            // print remainder
-    msgptr += _vsnprintf(msgptr, MAX_MSG - 2 - (msgptr - msg), format, args);
-    msg[MAX_MSG - 2] = '\0'; // ensure termination
-    strcat(msg, ""\n"");
-#else
-                            // print remainder
-    msgptr += vsprintf(msgptr, format, args);
-    // no specific
-    msgptr += sprintf(msgptr, ""\n"");
-#endif
+    // print remainder
+    std::vsnprintf(str, sizeof(str), format, args);
+    // ensure termination
+    str[sizeof(str) - 1] = '\0';
     va_end(args);
-  } else {
-    // no specific
-    msgptr += sprintf(msgptr, ""\n"");
+    msg << ':' << str;
   }
 
-  // %s is needed here so msg is printed correctly!
-  fprintf(stderr, ""%s"", msg);
+  std::cerr << msg.str() << '\n';
 
   switch (action) {
     case DBG:
","{'added': [(25, '#include <iostream> // for std::cerr'), (26, '#include <sstream>  // for std::stringstream'), (46, '  std::stringstream msg;'), (50, ""    msg << caller << ':';""), (53, '  msg << ""Error:"" << message;'), (55, '    char str[MAX_MSG];'), (57, '    // print remainder'), (58, '    std::vsnprintf(str, sizeof(str), format, args);'), (59, '    // ensure termination'), (60, ""    str[sizeof(str) - 1] = '\\0';""), (62, ""    msg << ':' << str;""), (65, ""  std::cerr << msg.str() << '\\n';"")], 'deleted': [(44, '  char msg[MAX_MSG];'), (45, '  char *msgptr = msg;'), (49, '    msgptr += sprintf(msgptr, ""%s:"", caller);'), (52, '  msgptr += sprintf(msgptr, ""Error:%s"", message);'), (54, '    msgptr += sprintf(msgptr, "":"");'), (56, '#ifdef _WIN32'), (57, '                            // print remainder'), (58, '    msgptr += _vsnprintf(msgptr, MAX_MSG - 2 - (msgptr - msg), format, args);'), (59, ""    msg[MAX_MSG - 2] = '\\0'; // ensure termination""), (60, '    strcat(msg, ""\\n"");'), (61, '#else'), (62, '                            // print remainder'), (63, '    msgptr += vsprintf(msgptr, format, args);'), (64, '    // no specific'), (65, '    msgptr += sprintf(msgptr, ""\\n"");'), (66, '#endif'), (68, '  } else {'), (69, '    // no specific'), (70, '    msgptr += sprintf(msgptr, ""\\n"");'), (73, '  // %s is needed here so msg is printed correctly!'), (74, '  fprintf(stderr, ""%s"", msg);')]}",yes
src\ccutil\unicharset.cpp,src\ccutil\unicharset.cpp,f2452a68ada27ebee36156daad2971375cba2224,7cc215c9c2ea788941ee1fe68572293129d02232,"Replace deprecated sprintf

Either use snprintf or std::stringstream.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -314,10 +314,10 @@ std::string UNICHARSET::debug_utf8_str(const char *str) {
     step = UNICHAR::utf8_step(str + i);
     if (step == 0) {
       step = 1;
-      sprintf(hex, ""%x"", str[i]);
+      snprintf(hex, sizeof(hex), ""%x"", str[i]);
     } else {
       UNICHAR ch(str + i, step);
-      sprintf(hex, ""%x"", ch.first_uni());
+      snprintf(hex, sizeof(hex), ""%x"", ch.first_uni());
     }
     result += hex;
     result += "" "";
","{'added': [(317, '      snprintf(hex, sizeof(hex), ""%x"", str[i]);'), (320, '      snprintf(hex, sizeof(hex), ""%x"", ch.first_uni());')], 'deleted': [(317, '      sprintf(hex, ""%x"", str[i]);'), (320, '      sprintf(hex, ""%x"", ch.first_uni());')]}",yes
src\opencl\openclwrapper.cpp,src\opencl\openclwrapper.cpp,f2452a68ada27ebee36156daad2971375cba2224,7cc215c9c2ea788941ee1fe68572293129d02232,"Replace deprecated sprintf

Either use snprintf or std::stringstream.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -812,7 +812,8 @@ int OpenclDevice::BinaryGenerated(const char *clFileName, FILE **fhandle) {
   cl_int clStatus;
   int status = 0;
   FILE *fd = nullptr;
-  char fileName[256] = {0}, cl_name[128] = {0};
+  char fileName[256];
+  char cl_name[128];
   char deviceName[1024];
   clStatus = clGetDeviceInfo(gpuEnv.mpArryDevsID[i], CL_DEVICE_NAME, sizeof(deviceName), deviceName,
                              nullptr);
@@ -820,7 +821,7 @@ int OpenclDevice::BinaryGenerated(const char *clFileName, FILE **fhandle) {
   const char *str = strstr(clFileName, "".cl"");
   memcpy(cl_name, clFileName, str - clFileName);
   cl_name[str - clFileName] = '\0';
-  sprintf(fileName, ""%s-%s.bin"", cl_name, deviceName);
+  snprintf(fileName, sizeof(fileName), ""%s-%s.bin"", cl_name, deviceName);
   legalizeFileName(fileName);
   fd = fopen(fileName, ""rb"");
   status = (fd != nullptr) ? 1 : 0;
@@ -894,9 +895,9 @@ int OpenclDevice::GeneratBinFromKernelSource(cl_program program, const char *clF
 
   /* dump out each binary into its own separate file. */
   for (i = 0; i < numDevices; i++) {
-    char fileName[256] = {0}, cl_name[128] = {0};
-
     if (binarySizes[i] != 0) {
+      char fileName[256];
+      char cl_name[128];
       char deviceName[1024];
       clStatus =
           clGetDeviceInfo(mpArryDevsID[i], CL_DEVICE_NAME, sizeof(deviceName), deviceName, nullptr);
@@ -905,7 +906,7 @@ int OpenclDevice::GeneratBinFromKernelSource(cl_program program, const char *clF
       const char *str = strstr(clFileName, "".cl"");
       memcpy(cl_name, clFileName, str - clFileName);
       cl_name[str - clFileName] = '\0';
-      sprintf(fileName, ""%s-%s.bin"", cl_name, deviceName);
+      snprintf(fileName, sizeof(fileName), ""%s-%s.bin"", cl_name, deviceName);
       legalizeFileName(fileName);
       if (!WriteBinaryToFile(fileName, binaries[i], binarySizes[i])) {
         tprintf(""[OD] write binary[%s] failed\n"", fileName);
","{'added': [(815, '  char fileName[256];'), (816, '  char cl_name[128];'), (824, '  snprintf(fileName, sizeof(fileName), ""%s-%s.bin"", cl_name, deviceName);'), (899, '      char fileName[256];'), (900, '      char cl_name[128];'), (909, '      snprintf(fileName, sizeof(fileName), ""%s-%s.bin"", cl_name, deviceName);')], 'deleted': [(815, '  char fileName[256] = {0}, cl_name[128] = {0};'), (823, '  sprintf(fileName, ""%s-%s.bin"", cl_name, deviceName);'), (897, '    char fileName[256] = {0}, cl_name[128] = {0};'), (898, ''), (908, '      sprintf(fileName, ""%s-%s.bin"", cl_name, deviceName);')]}",yes
src\wordrec\findseam.cpp,src\wordrec\findseam.cpp,f2452a68ada27ebee36156daad2971375cba2224,7cc215c9c2ea788941ee1fe68572293129d02232,"Replace deprecated sprintf

Either use snprintf or std::stringstream.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -103,7 +103,6 @@ void Wordrec::add_seam_to_queue(float new_priority, SEAM *new_seam, SeamQueue *s
 void Wordrec::choose_best_seam(SeamQueue *seam_queue, const SPLIT *split, PRIORITY priority,
                                SEAM **seam_result, TBLOB *blob, SeamPile *seam_pile) {
   SEAM *seam;
-  char str[80];
   float my_priority;
   /* Add seam of split */
   my_priority = priority;
@@ -133,7 +132,8 @@ void Wordrec::choose_best_seam(SeamQueue *seam_queue, const SPLIT *split, PRIORI
         seam->FullPriority(bbox.left(), bbox.right(), chop_overlap_knob, chop_centered_maxwidth,
                            chop_center_knob, chop_width_change_knob);
     if (chop_debug) {
-      sprintf(str, ""Full my_priority %0.0f,  "", my_priority);
+      char str[80];
+      snprintf(str, sizeof(str), ""Full my_priority %0.0f,  "", my_priority);
       seam->Print(str);
     }
 
","{'added': [(135, '      char str[80];'), (136, '      snprintf(str, sizeof(str), ""Full my_priority %0.0f,  "", my_priority);')], 'deleted': [(106, '  char str[80];'), (136, '      sprintf(str, ""Full my_priority %0.0f,  "", my_priority);')]}",yes
src\training\unicharset\lstmtrainer.cpp,src\training\unicharset\lstmtrainer.cpp,38a49e45b4483280e39e055c5099afaf7f5a9ccc,0f5634015167b315a8d3ddfc8601abf26e1187f6,"Use less digits in filenames of checkpoints written by lstmtraining

lstmtraining had written checkpoints using names like ONB_68.852000_6368_6500.checkpoint.
Now the superfluous '000' is omitted and the name will be ONB_68.852_6368_6500.checkpoint.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1051,13 +1051,14 @@ void LSTMTrainer::SaveRecognitionDump(std::vector<char> *data) const {
 // Returns a suitable filename for a training dump, based on the model_base_,
 // best_error_rate_, best_iteration_ and training_iteration_.
 std::string LSTMTrainer::DumpFilename() const {
-  std::string filename;
-  filename += model_base_.c_str();
-  filename += ""_"" + std::to_string(best_error_rate_);
-  filename += ""_"" + std::to_string(best_iteration_);
-  filename += ""_"" + std::to_string(training_iteration_);
-  filename += "".checkpoint"";
-  return filename;
+  std::stringstream filename;
+  filename.imbue(std::locale::classic());
+  filename << model_base_ << std::fixed << std::setprecision(3)
+           << ""_"" << best_error_rate_
+           << ""_"" << best_iteration_
+           << ""_"" << training_iteration_
+           << "".checkpoint"";
+  return filename.str();
 }
 
 // Fills the whole error buffer of the given type with the given value.
","{'added': [(1054, '  std::stringstream filename;'), (1055, '  filename.imbue(std::locale::classic());'), (1056, '  filename << model_base_ << std::fixed << std::setprecision(3)'), (1057, '           << ""_"" << best_error_rate_'), (1058, '           << ""_"" << best_iteration_'), (1059, '           << ""_"" << training_iteration_'), (1060, '           << "".checkpoint"";'), (1061, '  return filename.str();')], 'deleted': [(1054, '  std::string filename;'), (1055, '  filename += model_base_.c_str();'), (1056, '  filename += ""_"" + std::to_string(best_error_rate_);'), (1057, '  filename += ""_"" + std::to_string(best_iteration_);'), (1058, '  filename += ""_"" + std::to_string(training_iteration_);'), (1059, '  filename += "".checkpoint"";'), (1060, '  return filename;')]}",yes
src\ccmain\osdetect.cpp,src\ccmain\osdetect.cpp,41c5db90743eeca48dece28651a8c131f1ba0d18,ed69e574a9dad13114a38c9efedc90a70523609f,"Replace bool array by more compact vector

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -460,7 +460,7 @@ ScriptDetector::ScriptDetector(const std::vector<int> *allowed_scripts, OSResult
 // adding this blob.
 void ScriptDetector::detect_blob(BLOB_CHOICE_LIST *scores) {
   for (int i = 0; i < 4; ++i) {
-    bool done[kMaxNumberOfScripts] = {false};
+    std::vector<bool> done(kMaxNumberOfScripts);
 
     BLOB_CHOICE_IT choice_it;
     choice_it.set_to_list(scores + i);
@@ -488,7 +488,7 @@ void ScriptDetector::detect_blob(BLOB_CHOICE_LIST *scores) {
         }
       }
       // Script already processed before.
-      if (done[id]) {
+      if (done.at(id)) {
         continue;
       }
       done[id] = true;
","{'added': [(463, '    std::vector<bool> done(kMaxNumberOfScripts);'), (491, '      if (done.at(id)) {')], 'deleted': [(463, '    bool done[kMaxNumberOfScripts] = {false};'), (491, '      if (done[id]) {')]}",yes
src\training\lstmtraining.cpp,src\training\lstmtraining.cpp,0f5634015167b315a8d3ddfc8601abf26e1187f6,ed69e574a9dad13114a38c9efedc90a70523609f,"Improve format of logging from lstmtraining

- always use C (""classic"") locale
- limit output of floating point values to 3 digits
- remove unneeded linefeed after log message ""wrote checkpoint""

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -16,6 +16,7 @@
 ///////////////////////////////////////////////////////////////////////
 
 #include <cerrno>
+#include <locale> // for std::locale::classic
 #if defined(__USE_GNU)
 #  include <cfenv> // for feenableexcept
 #endif
@@ -222,9 +223,10 @@ int main(int argc, char **argv) {
          iteration = trainer.training_iteration()) {
       trainer.TrainOnLine(&trainer, false);
     }
-    std::string log_str;
+    std::stringstream log_str;
+    log_str.imbue(std::locale::classic());
     trainer.MaintainCheckpoints(tester_callback, log_str);
-    tprintf(""%s\n"", log_str.c_str());
+    tprintf(""%s\n"", log_str.str().c_str());
   } while (trainer.best_error_rate() > FLAGS_target_error_rate &&
            (trainer.training_iteration() < max_iterations));
   tprintf(""Finished! Selected model with minimal training error rate (BCER) = %g\n"",
","{'added': [(19, '#include <locale> // for std::locale::classic'), (226, '    std::stringstream log_str;'), (227, '    log_str.imbue(std::locale::classic());'), (229, '    tprintf(""%s\\n"", log_str.str().c_str());')], 'deleted': [(225, '    std::string log_str;'), (227, '    tprintf(""%s\\n"", log_str.c_str());')]}",yes
src\training\unicharset\lstmtester.cpp,src\training\unicharset\lstmtester.cpp,0f5634015167b315a8d3ddfc8601abf26e1187f6,ed69e574a9dad13114a38c9efedc90a70523609f,"Improve format of logging from lstmtraining

- always use C (""classic"") locale
- limit output of floating point values to 3 digits
- remove unneeded linefeed after log message ""wrote checkpoint""

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -16,6 +16,7 @@
 ///////////////////////////////////////////////////////////////////////
 
 #include ""lstmtester.h""
+#include <iomanip>  // for std::setprecision
 #include <thread>   // for std::thread
 #include ""fileio.h"" // for LoadFileLinesToStrings
 
@@ -115,14 +116,15 @@ std::string LSTMTester::RunEvalSync(int iteration, const double *training_errors
   }
   char_error *= 100.0 / total_pages_;
   word_error *= 100.0 / total_pages_;
-  std::string result;
+  std::stringstream result;
+  result.imbue(std::locale::classic());
+  result << std::fixed << std::setprecision(3);
   if (iteration != 0 || training_stage != 0) {
-    result += ""At iteration "" + std::to_string(iteration);
-    result += "", stage "" + std::to_string(training_stage) + "", "";
+    result << ""At iteration "" << iteration
+           << "", stage "" << training_stage << "", "";
   }
-  result += ""BCER eval="" + std::to_string(char_error);
-  result += "", BWER eval="" + std::to_string(word_error);
-  return result;
+  result << ""BCER eval="" << char_error << "", BWER eval="" << word_error;
+  return result.str();
 }
 
 // Helper thread function for RunEvalAsync.
","{'added': [(19, '#include <iomanip>  // for std::setprecision'), (119, '  std::stringstream result;'), (120, '  result.imbue(std::locale::classic());'), (121, '  result << std::fixed << std::setprecision(3);'), (123, '    result << ""At iteration "" << iteration'), (124, '           << "", stage "" << training_stage << "", "";'), (126, '  result << ""BCER eval="" << char_error << "", BWER eval="" << word_error;'), (127, '  return result.str();')], 'deleted': [(118, '  std::string result;'), (120, '    result += ""At iteration "" + std::to_string(iteration);'), (121, '    result += "", stage "" + std::to_string(training_stage) + "", "";'), (123, '  result += ""BCER eval="" + std::to_string(char_error);'), (124, '  result += "", BWER eval="" + std::to_string(word_error);'), (125, '  return result;')]}",yes
src\training\unicharset\lstmtrainer.cpp,src\training\unicharset\lstmtrainer.cpp,0f5634015167b315a8d3ddfc8601abf26e1187f6,ed69e574a9dad13114a38c9efedc90a70523609f,"Improve format of logging from lstmtraining

- always use C (""classic"") locale
- limit output of floating point values to 3 digits
- remove unneeded linefeed after log message ""wrote checkpoint""

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -23,6 +23,8 @@
 #endif
 
 #include <cmath>
+#include <iomanip>             // for std::setprecision
+#include <locale>              // for std::locale::classic
 #include <string>
 #include ""lstmtrainer.h""
 
@@ -305,7 +307,7 @@ bool LSTMTrainer::LoadAllTrainingData(const std::vector<std::string> &filenames,
 // Writes checkpoints at appropriate times and builds and returns a log message
 // to indicate progress. Returns false if nothing interesting happened.
 bool LSTMTrainer::MaintainCheckpoints(const TestCallback &tester,
-                                      std::string &log_msg) {
+                                      std::stringstream &log_msg) {
   PrepareLogMsg(log_msg);
   double error_rate = CharError();
   int iteration = learning_iteration();
@@ -330,35 +332,34 @@ bool LSTMTrainer::MaintainCheckpoints(const TestCallback &tester,
   std::vector<char> rec_model_data;
   if (error_rate < best_error_rate_) {
     SaveRecognitionDump(&rec_model_data);
-    log_msg += "" New best BCER = "" + std::to_string(error_rate);
-    log_msg += UpdateErrorGraph(iteration, error_rate, rec_model_data, tester);
+    log_msg << "" New best BCER = "" << error_rate;
+    log_msg << UpdateErrorGraph(iteration, error_rate, rec_model_data, tester);
     // If sub_trainer_ is not nullptr, either *this beat it to a new best, or it
     // just overwrote *this. In either case, we have finished with it.
     sub_trainer_.reset();
     stall_iteration_ = learning_iteration() + kMinStallIterations;
     if (TransitionTrainingStage(kStageTransitionThreshold)) {
-      log_msg +=
-          "" Transitioned to stage "" + std::to_string(CurrentTrainingStage());
+      log_msg << "" Transitioned to stage "" << CurrentTrainingStage();
     }
     SaveTrainingDump(NO_BEST_TRAINER, *this, &best_trainer_);
     if (error_rate < error_rate_of_last_saved_best_ * kBestCheckpointFraction) {
       std::string best_model_name = DumpFilename();
       if (!SaveDataToFile(best_trainer_, best_model_name.c_str())) {
-        log_msg += "" failed to write best model:"";
+        log_msg << "" failed to write best model:"";
       } else {
-        log_msg += "" wrote best model:"";
+        log_msg << "" wrote best model:"";
         error_rate_of_last_saved_best_ = best_error_rate_;
       }
-      log_msg += best_model_name;
+      log_msg << best_model_name;
     }
   } else if (error_rate > worst_error_rate_) {
     SaveRecognitionDump(&rec_model_data);
-    log_msg += "" New worst BCER = "" + std::to_string(error_rate);
-    log_msg += UpdateErrorGraph(iteration, error_rate, rec_model_data, tester);
+    log_msg << "" New worst BCER = "" << error_rate;
+    log_msg << UpdateErrorGraph(iteration, error_rate, rec_model_data, tester);
     if (worst_error_rate_ > best_error_rate_ + kMinDivergenceRate &&
         best_error_rate_ < kMinStartedErrorRate && !best_trainer_.empty()) {
       // Error rate has ballooned. Go back to the best model.
-      log_msg += ""\nDivergence! "";
+      log_msg << ""\nDivergence! "";
       // Copy best_trainer_ before reading it, as it will get overwritten.
       std::vector<char> revert_data(best_trainer_);
       if (ReadTrainingDump(revert_data, *this)) {
@@ -382,34 +383,33 @@ bool LSTMTrainer::MaintainCheckpoints(const TestCallback &tester,
     std::vector<char> checkpoint;
     if (!SaveTrainingDump(FULL, *this, &checkpoint) ||
         !SaveDataToFile(checkpoint, checkpoint_name_.c_str())) {
-      log_msg += "" failed to write checkpoint."";
+      log_msg << "" failed to write checkpoint."";
     } else {
-      log_msg += "" wrote checkpoint."";
+      log_msg << "" wrote checkpoint."";
     }
   }
-  log_msg += ""\n"";
   return result;
 }
 
 // Builds a string containing a progress message with current error rates.
-void LSTMTrainer::PrepareLogMsg(std::string &log_msg) const {
+void LSTMTrainer::PrepareLogMsg(std::stringstream &log_msg) const {
   LogIterations(""At"", log_msg);
-  log_msg += "", Mean rms="" + std::to_string(error_rates_[ET_RMS]);
-  log_msg += ""%, delta="" + std::to_string(error_rates_[ET_DELTA]);
-  log_msg += ""%, BCER train="" + std::to_string(error_rates_[ET_CHAR_ERROR]);
-  log_msg += ""%, BWER train="" + std::to_string(error_rates_[ET_WORD_RECERR]);
-  log_msg += ""%, skip ratio="" + std::to_string(error_rates_[ET_SKIP_RATIO]);
-  log_msg += ""%, "";
+  log_msg << std::fixed << std::setprecision(3)
+          << "", mean rms="" << error_rates_[ET_RMS]
+          << ""%, delta="" << error_rates_[ET_DELTA]
+          << ""%, BCER train="" << error_rates_[ET_CHAR_ERROR]
+          << ""%, BWER train="" << error_rates_[ET_WORD_RECERR]
+          << ""%, skip ratio="" << error_rates_[ET_SKIP_RATIO] << ""%,"";
 }
 
 // Appends <intro_str> iteration learning_iteration()/training_iteration()/
 // sample_iteration() to the log_msg.
 void LSTMTrainer::LogIterations(const char *intro_str,
-                                std::string &log_msg) const {
-  log_msg += intro_str;
-  log_msg += "" iteration "" + std::to_string(learning_iteration());
-  log_msg += ""/"" + std::to_string(training_iteration());
-  log_msg += ""/"" + std::to_string(sample_iteration());
+                                std::stringstream &log_msg) const {
+  log_msg << intro_str
+          << "" iteration "" << learning_iteration()
+          << ""/"" << training_iteration()
+          << ""/"" << sample_iteration();
 }
 
 // Returns true and increments the training_stage_ if the error rate has just
@@ -602,14 +602,14 @@ bool LSTMTrainer::DeSerialize(const TessdataManager *mgr, TFile *fp) {
 // De-serializes the saved best_trainer_ into sub_trainer_, and adjusts the
 // learning rates (by scaling reduction, or layer specific, according to
 // NF_LAYER_SPECIFIC_LR).
-void LSTMTrainer::StartSubtrainer(std::string &log_msg) {
+void LSTMTrainer::StartSubtrainer(std::stringstream &log_msg) {
   sub_trainer_ = std::make_unique<LSTMTrainer>();
   if (!ReadTrainingDump(best_trainer_, *sub_trainer_)) {
-    log_msg += "" Failed to revert to previous best for trial!"";
+    log_msg << "" Failed to revert to previous best for trial!"";
     sub_trainer_.reset();
   } else {
-    log_msg += "" Trial sub_trainer_ from iteration "" +
-               std::to_string(sub_trainer_->training_iteration());
+    log_msg << "" Trial sub_trainer_ from iteration ""
+            << sub_trainer_->training_iteration();
     // Reduce learning rate so it doesn't diverge this time.
     sub_trainer_->ReduceLearningRates(this, log_msg);
     // If it fails again, we will wait twice as long before reverting again.
@@ -630,14 +630,13 @@ void LSTMTrainer::StartSubtrainer(std::string &log_msg) {
 // trainer in *this is replaced with sub_trainer_, and STR_REPLACED is
 // returned. STR_NONE is returned if the subtrainer wasn't good enough to
 // receive any training iterations.
-SubTrainerResult LSTMTrainer::UpdateSubtrainer(std::string &log_msg) {
+SubTrainerResult LSTMTrainer::UpdateSubtrainer(std::stringstream &log_msg) {
   double training_error = CharError();
   double sub_error = sub_trainer_->CharError();
   double sub_margin = (training_error - sub_error) / sub_error;
   if (sub_margin >= kSubTrainerMarginFraction) {
-    log_msg += "" sub_trainer="" + std::to_string(sub_error);
-    log_msg += "" margin="" + std::to_string(100.0 * sub_margin);
-    log_msg += ""\n"";
+    log_msg << "" sub_trainer="" << sub_error
+            << "" margin="" << 100.0 * sub_margin << ""\n"";
     // Catch up to current iteration.
     int end_iteration = training_iteration();
     while (sub_trainer_->training_iteration() < end_iteration &&
@@ -647,11 +646,12 @@ SubTrainerResult LSTMTrainer::UpdateSubtrainer(std::string &log_msg) {
       while (sub_trainer_->training_iteration() < target_iteration) {
         sub_trainer_->TrainOnLine(this, false);
       }
-      std::string batch_log = ""Sub:"";
+      std::stringstream batch_log(""Sub:"");
+      batch_log.imbue(std::locale::classic());
       sub_trainer_->PrepareLogMsg(batch_log);
-      batch_log += ""\n"";
-      tprintf(""UpdateSubtrainer:%s"", batch_log.c_str());
-      log_msg += batch_log;
+      batch_log << ""\n"";
+      tprintf(""UpdateSubtrainer:%s"", batch_log.str().c_str());
+      log_msg << batch_log.str();
       sub_error = sub_trainer_->CharError();
       sub_margin = (training_error - sub_error) / sub_error;
     }
@@ -661,9 +661,8 @@ SubTrainerResult LSTMTrainer::UpdateSubtrainer(std::string &log_msg) {
       std::vector<char> updated_trainer;
       SaveTrainingDump(LIGHT, *sub_trainer_, &updated_trainer);
       ReadTrainingDump(updated_trainer, *this);
-      log_msg += "" Sub trainer wins at iteration "" +
-                 std::to_string(training_iteration());
-      log_msg += ""\n"";
+      log_msg << "" Sub trainer wins at iteration ""
+              << training_iteration() << ""\n"";
       return STR_REPLACED;
     }
     return STR_UPDATED;
@@ -674,17 +673,16 @@ SubTrainerResult LSTMTrainer::UpdateSubtrainer(std::string &log_msg) {
 // Reduces network learning rates, either for everything, or for layers
 // independently, according to NF_LAYER_SPECIFIC_LR.
 void LSTMTrainer::ReduceLearningRates(LSTMTrainer *samples_trainer,
-                                      std::string &log_msg) {
+                                      std::stringstream &log_msg) {
   if (network_->TestFlag(NF_LAYER_SPECIFIC_LR)) {
     int num_reduced = ReduceLayerLearningRates(
         kLearningRateDecay, kNumAdjustmentIterations, samples_trainer);
-    log_msg +=
-        ""\nReduced learning rate on layers: "" + std::to_string(num_reduced);
+    log_msg << ""\nReduced learning rate on layers: "" << num_reduced;
   } else {
     ScaleLearningRate(kLearningRateDecay);
-    log_msg += ""\nReduced learning rate to :"" + std::to_string(learning_rate_);
+    log_msg << ""\nReduced learning rate to :"" << learning_rate_;
   }
-  log_msg += ""\n"";
+  log_msg << ""\n"";
 }
 
 // Considers reducing the learning rate independently for each layer down by
","{'added': [(26, '#include <iomanip>             // for std::setprecision'), (27, '#include <locale>              // for std::locale::classic'), (310, '                                      std::stringstream &log_msg) {'), (335, '    log_msg << "" New best BCER = "" << error_rate;'), (336, '    log_msg << UpdateErrorGraph(iteration, error_rate, rec_model_data, tester);'), (342, '      log_msg << "" Transitioned to stage "" << CurrentTrainingStage();'), (348, '        log_msg << "" failed to write best model:"";'), (350, '        log_msg << "" wrote best model:"";'), (353, '      log_msg << best_model_name;'), (357, '    log_msg << "" New worst BCER = "" << error_rate;'), (358, '    log_msg << UpdateErrorGraph(iteration, error_rate, rec_model_data, tester);'), (362, '      log_msg << ""\\nDivergence! "";'), (386, '      log_msg << "" failed to write checkpoint."";'), (388, '      log_msg << "" wrote checkpoint."";'), (395, 'void LSTMTrainer::PrepareLogMsg(std::stringstream &log_msg) const {'), (397, '  log_msg << std::fixed << std::setprecision(3)'), (398, '          << "", mean rms="" << error_rates_[ET_RMS]'), (399, '          << ""%, delta="" << error_rates_[ET_DELTA]'), (400, '          << ""%, BCER train="" << error_rates_[ET_CHAR_ERROR]'), (401, '          << ""%, BWER train="" << error_rates_[ET_WORD_RECERR]'), (402, '          << ""%, skip ratio="" << error_rates_[ET_SKIP_RATIO] << ""%,"";'), (408, '                                std::stringstream &log_msg) const {'), (409, '  log_msg << intro_str'), (410, '          << "" iteration "" << learning_iteration()'), (411, '          << ""/"" << training_iteration()'), (412, '          << ""/"" << sample_iteration();'), (605, 'void LSTMTrainer::StartSubtrainer(std::stringstream &log_msg) {'), (608, '    log_msg << "" Failed to revert to previous best for trial!"";'), (611, '    log_msg << "" Trial sub_trainer_ from iteration ""'), (612, '            << sub_trainer_->training_iteration();'), (633, 'SubTrainerResult LSTMTrainer::UpdateSubtrainer(std::stringstream &log_msg) {'), (638, '    log_msg << "" sub_trainer="" << sub_error'), (639, '            << "" margin="" << 100.0 * sub_margin << ""\\n"";'), (649, '      std::stringstream batch_log(""Sub:"");'), (650, '      batch_log.imbue(std::locale::classic());'), (652, '      batch_log << ""\\n"";'), (653, '      tprintf(""UpdateSubtrainer:%s"", batch_log.str().c_str());'), (654, '      log_msg << batch_log.str();'), (664, '      log_msg << "" Sub trainer wins at iteration ""'), (665, '              << training_iteration() << ""\\n"";'), (676, '                                      std::stringstream &log_msg) {'), (680, '    log_msg << ""\\nReduced learning rate on layers: "" << num_reduced;'), (683, '    log_msg << ""\\nReduced learning rate to :"" << learning_rate_;'), (685, '  log_msg << ""\\n"";')], 'deleted': [(308, '                                      std::string &log_msg) {'), (333, '    log_msg += "" New best BCER = "" + std::to_string(error_rate);'), (334, '    log_msg += UpdateErrorGraph(iteration, error_rate, rec_model_data, tester);'), (340, '      log_msg +='), (341, '          "" Transitioned to stage "" + std::to_string(CurrentTrainingStage());'), (347, '        log_msg += "" failed to write best model:"";'), (349, '        log_msg += "" wrote best model:"";'), (352, '      log_msg += best_model_name;'), (356, '    log_msg += "" New worst BCER = "" + std::to_string(error_rate);'), (357, '    log_msg += UpdateErrorGraph(iteration, error_rate, rec_model_data, tester);'), (361, '      log_msg += ""\\nDivergence! "";'), (385, '      log_msg += "" failed to write checkpoint."";'), (387, '      log_msg += "" wrote checkpoint."";'), (390, '  log_msg += ""\\n"";'), (395, 'void LSTMTrainer::PrepareLogMsg(std::string &log_msg) const {'), (397, '  log_msg += "", Mean rms="" + std::to_string(error_rates_[ET_RMS]);'), (398, '  log_msg += ""%, delta="" + std::to_string(error_rates_[ET_DELTA]);'), (399, '  log_msg += ""%, BCER train="" + std::to_string(error_rates_[ET_CHAR_ERROR]);'), (400, '  log_msg += ""%, BWER train="" + std::to_string(error_rates_[ET_WORD_RECERR]);'), (401, '  log_msg += ""%, skip ratio="" + std::to_string(error_rates_[ET_SKIP_RATIO]);'), (402, '  log_msg += ""%, "";'), (408, '                                std::string &log_msg) const {'), (409, '  log_msg += intro_str;'), (410, '  log_msg += "" iteration "" + std::to_string(learning_iteration());'), (411, '  log_msg += ""/"" + std::to_string(training_iteration());'), (412, '  log_msg += ""/"" + std::to_string(sample_iteration());'), (605, 'void LSTMTrainer::StartSubtrainer(std::string &log_msg) {'), (608, '    log_msg += "" Failed to revert to previous best for trial!"";'), (611, '    log_msg += "" Trial sub_trainer_ from iteration "" +'), (612, '               std::to_string(sub_trainer_->training_iteration());'), (633, 'SubTrainerResult LSTMTrainer::UpdateSubtrainer(std::string &log_msg) {'), (638, '    log_msg += "" sub_trainer="" + std::to_string(sub_error);'), (639, '    log_msg += "" margin="" + std::to_string(100.0 * sub_margin);'), (640, '    log_msg += ""\\n"";'), (650, '      std::string batch_log = ""Sub:"";'), (652, '      batch_log += ""\\n"";'), (653, '      tprintf(""UpdateSubtrainer:%s"", batch_log.c_str());'), (654, '      log_msg += batch_log;'), (664, '      log_msg += "" Sub trainer wins at iteration "" +'), (665, '                 std::to_string(training_iteration());'), (666, '      log_msg += ""\\n"";'), (677, '                                      std::string &log_msg) {'), (681, '    log_msg +='), (682, '        ""\\nReduced learning rate on layers: "" + std::to_string(num_reduced);'), (685, '    log_msg += ""\\nReduced learning rate to :"" + std::to_string(learning_rate_);'), (687, '  log_msg += ""\\n"";')]}",yes
src\training\unicharset\lstmtrainer.h,src\training\unicharset\lstmtrainer.h,0f5634015167b315a8d3ddfc8601abf26e1187f6,ed69e574a9dad13114a38c9efedc90a70523609f,"Improve format of logging from lstmtraining

- always use C (""classic"") locale
- limit output of floating point values to 3 digits
- remove unneeded linefeed after log message ""wrote checkpoint""

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -25,6 +25,7 @@
 #include ""rect.h""
 
 #include <functional> // for std::function
+#include <sstream>    // for std::stringstream
 
 namespace tesseract {
 
@@ -192,7 +193,7 @@ public:
 
   // Keeps track of best and locally worst error rate, using internally computed
   // values. See MaintainCheckpointsSpecific for more detail.
-  bool MaintainCheckpoints(const TestCallback &tester, std::string &log_msg);
+  bool MaintainCheckpoints(const TestCallback &tester, std::stringstream &log_msg);
   // Keeps track of best and locally worst error_rate (whatever it is) and
   // launches tests using rec_model, when a new min or max is reached.
   // Writes checkpoints using train_model at appropriate times and builds and
@@ -201,12 +202,12 @@ public:
   bool MaintainCheckpointsSpecific(int iteration,
                                    const std::vector<char> *train_model,
                                    const std::vector<char> *rec_model,
-                                   TestCallback tester, std::string &log_msg);
-  // Builds a string containing a progress message with current error rates.
-  void PrepareLogMsg(std::string &log_msg) const;
+                                   TestCallback tester, std::stringstream &log_msg);
+  // Builds a progress message with current error rates.
+  void PrepareLogMsg(std::stringstream &log_msg) const;
   // Appends <intro_str> iteration learning_iteration()/training_iteration()/
   // sample_iteration() to the log_msg.
-  void LogIterations(const char *intro_str, std::string &log_msg) const;
+  void LogIterations(const char *intro_str, std::stringstream &log_msg) const;
 
   // TODO(rays) Add curriculum learning.
   // Returns true and increments the training_stage_ if the error rate has just
@@ -226,7 +227,7 @@ public:
   // De-serializes the saved best_trainer_ into sub_trainer_, and adjusts the
   // learning rates (by scaling reduction, or layer specific, according to
   // NF_LAYER_SPECIFIC_LR).
-  void StartSubtrainer(std::string &log_msg);
+  void StartSubtrainer(std::stringstream &log_msg);
   // While the sub_trainer_ is behind the current training iteration and its
   // training error is at least kSubTrainerMarginFraction better than the
   // current training error, trains the sub_trainer_, and returns STR_UPDATED if
@@ -235,10 +236,10 @@ public:
   // trainer in *this is replaced with sub_trainer_, and STR_REPLACED is
   // returned. STR_NONE is returned if the subtrainer wasn't good enough to
   // receive any training iterations.
-  SubTrainerResult UpdateSubtrainer(std::string &log_msg);
+  SubTrainerResult UpdateSubtrainer(std::stringstream &log_msg);
   // Reduces network learning rates, either for everything, or for layers
   // independently, according to NF_LAYER_SPECIFIC_LR.
-  void ReduceLearningRates(LSTMTrainer *samples_trainer, std::string &log_msg);
+  void ReduceLearningRates(LSTMTrainer *samples_trainer, std::stringstream &log_msg);
   // Considers reducing the learning rate independently for each layer down by
   // factor(<1), or leaving it the same, by double-training the given number of
   // samples and minimizing the amount of changing of sign of weight updates.
","{'added': [(28, '#include <sstream>    // for std::stringstream'), (196, '  bool MaintainCheckpoints(const TestCallback &tester, std::stringstream &log_msg);'), (205, '                                   TestCallback tester, std::stringstream &log_msg);'), (206, '  // Builds a progress message with current error rates.'), (207, '  void PrepareLogMsg(std::stringstream &log_msg) const;'), (210, '  void LogIterations(const char *intro_str, std::stringstream &log_msg) const;'), (230, '  void StartSubtrainer(std::stringstream &log_msg);'), (239, '  SubTrainerResult UpdateSubtrainer(std::stringstream &log_msg);'), (242, '  void ReduceLearningRates(LSTMTrainer *samples_trainer, std::stringstream &log_msg);')], 'deleted': [(195, '  bool MaintainCheckpoints(const TestCallback &tester, std::string &log_msg);'), (204, '                                   TestCallback tester, std::string &log_msg);'), (205, '  // Builds a string containing a progress message with current error rates.'), (206, '  void PrepareLogMsg(std::string &log_msg) const;'), (209, '  void LogIterations(const char *intro_str, std::string &log_msg) const;'), (229, '  void StartSubtrainer(std::string &log_msg);'), (238, '  SubTrainerResult UpdateSubtrainer(std::string &log_msg);'), (241, '  void ReduceLearningRates(LSTMTrainer *samples_trainer, std::string &log_msg);')]}",yes
unittest\lstm_test.h,unittest\lstm_test.h,0f5634015167b315a8d3ddfc8601abf26e1187f6,ed69e574a9dad13114a38c9efedc90a70523609f,"Improve format of logging from lstmtraining

- always use C (""classic"") locale
- limit output of floating point values to 3 digits
- remove unneeded linefeed after log message ""wrote checkpoint""

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -103,7 +103,7 @@ protected:
     int iteration_limit = iteration + max_iterations;
     double best_error = 100.0;
     do {
-      std::string log_str;
+      std::stringstream log_str;
       int target_iteration = iteration + kBatchIterations;
       // Train a few.
       double mean_error = 0.0;
","{'added': [(106, '      std::stringstream log_str;')], 'deleted': [(106, '      std::string log_str;')]}",yes
src\training\unicharset\validate_myanmar.cpp,src\training\unicharset\validate_myanmar.cpp,ed69e574a9dad13114a38c9efedc90a70523609f,9422915eb777f1df063838f9a2b4f72ce3aa6e46,"Support for Sgaw and W Pwo Karen languages in the Myanmar validator. (#4065)

1. Added 0x102c and 0x1062 in the tone mark section, in Karen these can
be tones too.

2. Added the optional 0x103a, 0x1037, and 0x1038 after the tones. Asat
is part of the Sgaw tone mark and dot below and visarga are used as
nasal marks following the Pwo tones.","@@ -140,13 +140,21 @@ bool ValidateMyanmar::ConsumeOptionalSignsIfPresent() {
   }
   // Tone mark extensions.
   ch = codes_[codes_used_].second;
-  if (ch == 0x1038 || ch == kMyanmarAsat || ch == 0x1063 || ch == 0x1064 ||
+  if (ch == 0x102c || ch == 0x1038 || ch == kMyanmarAsat || (0x1062 <= ch && ch <= 0x1064) ||
       (0x1069 <= ch && ch <= 0x106d) || (0x1087 <= ch && ch <= 0x108d) || ch == 0x108f ||
       ch == 0x109a || ch == 0x109b || (0xaa7b <= ch && ch <= 0xaa7d)) {
     if (UseMultiCode(1)) {
       return true;
     }
   }
+  // Sgaw tones 0x1062, 0x1063 must be followed by asat.
+  // W Pwo tones 0x1069, 0x106a, and 0x106b may be followed by dot below or visarga (nasal).
+  ch = codes_[codes_used_].second; 
+  if (ch == 0x103a || ch == 0x1037 || ch == 0x1038) {
+    if (UseMultiCode(1)) {
+      return true;
+    }
+  }
   return false;
 }
 
","{'added': [(143, '  if (ch == 0x102c || ch == 0x1038 || ch == kMyanmarAsat || (0x1062 <= ch && ch <= 0x1064) ||'), (150, '  // Sgaw tones 0x1062, 0x1063 must be followed by asat.'), (151, '  // W Pwo tones 0x1069, 0x106a, and 0x106b may be followed by dot below or visarga (nasal).'), (152, '  ch = codes_[codes_used_].second;'), (153, '  if (ch == 0x103a || ch == 0x1037 || ch == 0x1038) {'), (154, '    if (UseMultiCode(1)) {'), (155, '      return true;'), (156, '    }'), (157, '  }')], 'deleted': [(143, '  if (ch == 0x1038 || ch == kMyanmarAsat || ch == 0x1063 || ch == 0x1064 ||')]}",no
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,9422915eb777f1df063838f9a2b4f72ce3aa6e46,b48f08e20c656b2fcd602c0731fd39ac3377fff2,"issue-bug.yml:  Windows versions 7, 8, 8.1 are not supported anymore","@@ -16,6 +16,8 @@ body:
         * Please provide the input image.
         * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.
         * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report.
+        
+        Windows versions 7, 8, 8.1 are not supported.
   - type: textarea
     attributes:
       label: Current Behavior
","{'added': [(19, ''), (20, '        Windows versions 7, 8, 8.1 are not supported.')], 'deleted': []}",no
snap\snapcraft.yaml,snap\snapcraft.yaml,b48f08e20c656b2fcd602c0731fd39ac3377fff2,7b05f9478e596ff6777ba3cb294e66c947f26f71,"snap: Update from leptonica 1.74.2 to latest 1.83.1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -41,7 +41,7 @@ parts:
       - libgomp1
     after: [leptonica]
   leptonica:
-    source: https://github.com/DanBloomberg/leptonica/archive/1.74.2.tar.gz
+    source: https://github.com/DanBloomberg/leptonica/archive/1.83.1.tar.gz
     plugin: autotools
     stage-packages:
       - libjbig0
","{'added': [(44, '    source: https://github.com/DanBloomberg/leptonica/archive/1.83.1.tar.gz')], 'deleted': [(44, '    source: https://github.com/DanBloomberg/leptonica/archive/1.74.2.tar.gz')]}",yes
snap\snapcraft.yaml,snap\snapcraft.yaml,7b05f9478e596ff6777ba3cb294e66c947f26f71,71af4542990adae6d9f31d6657068bc0139c6ec4,"fix: Fix snap package building

This patch fixes the outdated snap package recipe to make the snap
buildable with the current Snapcraft release(7.3.1).

Signed-off-by: 林博仁(Buo-ren Lin) <Buo.Ren.Lin@gmail.com>","@@ -13,13 +13,13 @@ description: |
 
 grade: stable # must be 'stable' to release into candidate/stable channels
 confinement: strict
+base: core22
 
 apps:
   tesseract:
-    command: >
-      env
-      TESSDATA_PREFIX=$SNAP_USER_COMMON
-      tesseract
+    command: usr/local/bin/tesseract
+    environment:
+      TESSDATA_PREFIX: $SNAP_USER_COMMON
     plugs:
       - home
       - removable-media
@@ -30,9 +30,9 @@ parts:
     plugin: autotools
     build-packages:
       - pkg-config
-      - libpng12-dev
-      - libjpeg8-dev
-      - libtiff5-dev
+      - libpng-dev
+      - libjpeg-dev
+      - libtiff-dev
       - zlib1g-dev
       - libicu-dev
       - libpango1.0-dev
","{'added': [(16, 'base: core22'), (20, '    command: usr/local/bin/tesseract'), (21, '    environment:'), (22, '      TESSDATA_PREFIX: $SNAP_USER_COMMON'), (33, '      - libpng-dev'), (34, '      - libjpeg-dev'), (35, '      - libtiff-dev')], 'deleted': [(19, '    command: >'), (20, '      env'), (21, '      TESSDATA_PREFIX=$SNAP_USER_COMMON'), (22, '      tesseract'), (33, '      - libpng12-dev'), (34, '      - libjpeg8-dev'), (35, '      - libtiff5-dev')]}",yes
ChangeLog,ChangeLog,71af4542990adae6d9f31d6657068bc0139c6ec4,f833491ddbadf90fd340bf79df1883fdd976a32c,"Create new release 5.3.1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,11 @@
+2023-04-01 - V5.3.1
+ * Bug fixes for some special scenarios:
+   * Fix issue #4010.
+   * textord: Catch empty rows in block iterator (fixes #4039).
+   * Fix FP division by zero (issue #3995).
+ * Improve documentation and log messages.
+ * Build fixes and improvements (mainly for cmake).
+
 2022-12-22 - V5.3.0
  * Minor updates for documentation and cmake builds.
 
","{'added': [(1, '2023-04-01 - V5.3.1'), (2, ' * Bug fixes for some special scenarios:'), (3, '   * Fix issue #4010.'), (4, '   * textord: Catch empty rows in block iterator (fixes #4039).'), (5, '   * Fix FP division by zero (issue #3995).'), (6, ' * Improve documentation and log messages.'), (7, ' * Build fixes and improvements (mainly for cmake).'), (8, '')], 'deleted': []}",yes
VERSION,VERSION,71af4542990adae6d9f31d6657068bc0139c6ec4,f833491ddbadf90fd340bf79df1883fdd976a32c,"Create new release 5.3.1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.3.0
+5.3.1
","{'added': [(1, '5.3.1')], 'deleted': [(1, '5.3.0')]}",yes
configure.ac,configure.ac,71af4542990adae6d9f31d6657068bc0139c6ec4,f833491ddbadf90fd340bf79df1883fdd976a32c,"Create new release 5.3.1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -28,8 +28,8 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
-PACKAGE_YEAR=2022
-PACKAGE_DATE=""12/22""
+PACKAGE_YEAR=2023
+PACKAGE_DATE=""04/01""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(31, 'PACKAGE_YEAR=2023'), (32, 'PACKAGE_DATE=""04/01""')], 'deleted': [(31, 'PACKAGE_YEAR=2022'), (32, 'PACKAGE_DATE=""12/22""')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,f833491ddbadf90fd340bf79df1883fdd976a32c,fa4d4449c50a68634a3ac2d6d67b5198b38e6287,"Remove whitespace at line endings

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -14,7 +14,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-        
+
           - { name: macos-12-clang-14-cmake, os: macos-12, cxx: clang++ } # default
           - { name: macos-11-clang-13-cmake, os: macos-11, cxx: clang++ } # default
 
","{'added': [(17, '')], 'deleted': [(17, '')]}",yes
src\ccmain\pagesegmain.cpp,src\ccmain\pagesegmain.cpp,f833491ddbadf90fd340bf79df1883fdd976a32c,fa4d4449c50a68634a3ac2d6d67b5198b38e6287,"Remove whitespace at line endings

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -350,7 +350,7 @@ ColumnFinder *Tesseract::SetupPageSegAndDetectOrientation(PageSegMode pageseg_mo
       vertical_text = finder->IsVerticallyAlignedText(textord_tabfind_vertical_text_ratio, to_block,
                                                       &osd_blobs);
     }
-    
+
   #ifndef DISABLED_LEGACY_ENGINE
     if (PSM_OSD_ENABLED(pageseg_mode) && osd_tess != nullptr && osr != nullptr) {
       std::vector<int> osd_scripts;
","{'added': [(353, '')], 'deleted': [(353, '')]}",yes
src\ccmain\pagesegmain.cpp,src\ccmain\pagesegmain.cpp,fa4d4449c50a68634a3ac2d6d67b5198b38e6287,bbc2dfcfe1a38503ce9df9f369e52d4145109c11,"Fix issue #4010 (#4041)

Enable some code blocks that were wrongly disabled when the legacy engine is disabled at compile time.","@@ -332,11 +332,11 @@ ColumnFinder *Tesseract::SetupPageSegAndDetectOrientation(PageSegMode pageseg_mo
 
     finder->SetupAndFilterNoise(pageseg_mode, *photo_mask_pix, to_block);
 
-#ifndef DISABLED_LEGACY_ENGINE
-
+  #ifndef DISABLED_LEGACY_ENGINE
     if (equ_detect_) {
       equ_detect_->LabelSpecialText(to_block);
     }
+  #endif
 
     BLOBNBOX_CLIST osd_blobs;
     // osd_orientation is the number of 90 degree rotations to make the
@@ -350,6 +350,8 @@ ColumnFinder *Tesseract::SetupPageSegAndDetectOrientation(PageSegMode pageseg_mo
       vertical_text = finder->IsVerticallyAlignedText(textord_tabfind_vertical_text_ratio, to_block,
                                                       &osd_blobs);
     }
+    
+  #ifndef DISABLED_LEGACY_ENGINE
     if (PSM_OSD_ENABLED(pageseg_mode) && osd_tess != nullptr && osr != nullptr) {
       std::vector<int> osd_scripts;
       if (osd_tess != this) {
@@ -400,10 +402,10 @@ ColumnFinder *Tesseract::SetupPageSegAndDetectOrientation(PageSegMode pageseg_mo
         }
       }
     }
+  #endif // ndef DISABLED_LEGACY_ENGINE
+
     osd_blobs.shallow_clear();
     finder->CorrectOrientation(to_block, vertical_text, osd_orientation);
-
-#endif // ndef DISABLED_LEGACY_ENGINE
   }
 
   return finder;
","{'added': [(335, '  #ifndef DISABLED_LEGACY_ENGINE'), (339, '  #endif'), (353, ''), (354, '  #ifndef DISABLED_LEGACY_ENGINE'), (405, '  #endif // ndef DISABLED_LEGACY_ENGINE'), (406, '')], 'deleted': [(335, '#ifndef DISABLED_LEGACY_ENGINE'), (336, ''), (405, ''), (406, '#endif // ndef DISABLED_LEGACY_ENGINE')]}",no
cmake\Configure.cmake,cmake\Configure.cmake,bbc2dfcfe1a38503ce9df9f369e52d4145109c11,de6d99db7d24e66b3d678a4592e95e4f76c31332,cmake: add missing HAVE_NEON to config_auto.h,"@@ -118,6 +118,7 @@ file(APPEND ${AUTOCONFIG_SRC} ""
 #cmakedefine FAST_FLOAT ${FAST_FLOAT}
 #cmakedefine DISABLED_LEGACY_ENGINE ${DISABLED_LEGACY_ENGINE}
 #cmakedefine HAVE_TIFFIO_H ${HAVE_TIFFIO_H}
+#cmakedefine HAVE_NEON ${HAVE_NEON}
 #cmakedefine HAVE_LIBARCHIVE ${HAVE_LIBARCHIVE}
 #cmakedefine HAVE_LIBCURL ${HAVE_LIBCURL}
 #cmakedefine USE_OPENCL ${USE_OPENCL}
","{'added': [(121, '#cmakedefine HAVE_NEON ${HAVE_NEON}')], 'deleted': []}",yes
CMakeLists.txt,CMakeLists.txt,8045cbb7c90e542a853b49126d16a2c824bf5fc7,a0708eaff25c0662526f7541aaa91ba163e9da70,cmake: adjust build to autotool settings,"@@ -127,6 +127,9 @@ endif()
 include(CheckCXXCompilerFlag)
 
 set(CMAKE_CXX_STANDARD 17)
+if(""cxx_std_20"" IN_LIST CMAKE_CXX_COMPILE_FEATURES)
+  set(CMAKE_CXX_STANDARD 20)
+endif()
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 if(NOT CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"")
   # cygwin gnu c++ needs to use -std=gnu++17 instead of -std=c++17
@@ -340,8 +343,6 @@ if(OPENMP_BUILD)
     # https://devblogs.microsoft.com/cppblog/openmp-updates-and-fixes-for-cpp-in-visual-studio-2019-16-10/
     if(""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")
       set(OpenMP_CXX_FLAGS ""-openmp:llvm"")
-      set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /wd9025"") # overriding '/openmp'
-                                                        # with '/openmp:llvm'
     endif()
   endif()
   if(OpenMP_FOUND)
@@ -400,17 +401,15 @@ else()
   include_directories(${Leptonica_INCLUDE_DIRS})
 
   # Check for optional libraries.
-  if(WIN32)
-    find_package(TIFF) # for tesseract
-    if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)
-      # try PKG_CONFIG to find libtiff if cmake failed
-      pkg_check_modules(TIFF libtiff-4)
-    endif()
-    if(TIFF_FOUND)
-      set(HAVE_TIFFIO_H ON)
-      include_directories(${TIFF_INCLUDE_DIRS})
-    endif(TIFF_FOUND)
-  endif(WIN32)
+  find_package(TIFF) # for tesseract
+  if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)
+    # try PKG_CONFIG to find libtiff if cmake failed
+    pkg_check_modules(TIFF libtiff-4)
+  endif()
+  if(TIFF_FOUND)
+    set(HAVE_TIFFIO_H ON)
+    include_directories(${TIFF_INCLUDE_DIRS})
+  endif(TIFF_FOUND)
   if(DISABLE_ARCHIVE)
     set(HAVE_LIBARCHIVE OFF)
   else(DISABLE_ARCHIVE)
","{'added': [(130, 'if(""cxx_std_20"" IN_LIST CMAKE_CXX_COMPILE_FEATURES)'), (131, '  set(CMAKE_CXX_STANDARD 20)'), (132, 'endif()'), (404, '  find_package(TIFF) # for tesseract'), (405, '  if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)'), (406, '    # try PKG_CONFIG to find libtiff if cmake failed'), (407, '    pkg_check_modules(TIFF libtiff-4)'), (408, '  endif()'), (409, '  if(TIFF_FOUND)'), (410, '    set(HAVE_TIFFIO_H ON)'), (411, '    include_directories(${TIFF_INCLUDE_DIRS})'), (412, '  endif(TIFF_FOUND)')], 'deleted': [(343, '      set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /wd9025"") # overriding \'/openmp\''), (344, ""                                                        # with '/openmp:llvm'""), (403, '  if(WIN32)'), (404, '    find_package(TIFF) # for tesseract'), (405, '    if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)'), (406, '      # try PKG_CONFIG to find libtiff if cmake failed'), (407, '      pkg_check_modules(TIFF libtiff-4)'), (408, '    endif()'), (409, '    if(TIFF_FOUND)'), (410, '      set(HAVE_TIFFIO_H ON)'), (411, '      include_directories(${TIFF_INCLUDE_DIRS})'), (412, '    endif(TIFF_FOUND)'), (413, '  endif(WIN32)')]}",yes
CMakeLists.txt,CMakeLists.txt,4c59535e4812c676fb312cf448e3b4c5b5cbe7e6,a0708eaff25c0662526f7541aaa91ba163e9da70,cmake: adjust build to autotool settings,"@@ -127,6 +127,9 @@ endif()
 include(CheckCXXCompilerFlag)
 
 set(CMAKE_CXX_STANDARD 17)
+if(""cxx_std_20"" IN_LIST CMAKE_CXX_COMPILE_FEATURES)
+  set(CMAKE_CXX_STANDARD 20)
+endif()
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 if(NOT CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"")
   # cygwin gnu c++ needs to use -std=gnu++17 instead of -std=c++17
@@ -340,8 +343,6 @@ if(OPENMP_BUILD)
     # https://devblogs.microsoft.com/cppblog/openmp-updates-and-fixes-for-cpp-in-visual-studio-2019-16-10/
     if(""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")
       set(OpenMP_CXX_FLAGS ""-openmp:llvm"")
-      set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /wd9025"") # overriding '/openmp'
-                                                        # with '/openmp:llvm'
     endif()
   endif()
   if(OpenMP_FOUND)
@@ -400,17 +401,15 @@ else()
   include_directories(${Leptonica_INCLUDE_DIRS})
 
   # Check for optional libraries.
-  if(WIN32)
-    find_package(TIFF) # for tesseract
-    if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)
-      # try PKG_CONFIG to find libtiff if cmake failed
-      pkg_check_modules(TIFF libtiff-4)
-    endif()
-    if(TIFF_FOUND)
-      set(HAVE_TIFFIO_H ON)
-      include_directories(${TIFF_INCLUDE_DIRS})
-    endif(TIFF_FOUND)
-  endif(WIN32)
+  find_package(TIFF) # for tesseract
+  if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)
+    # try PKG_CONFIG to find libtiff if cmake failed
+    pkg_check_modules(TIFF libtiff-4)
+  endif()
+  if(TIFF_FOUND)
+    set(HAVE_TIFFIO_H ON)
+    include_directories(${TIFF_INCLUDE_DIRS})
+  endif(TIFF_FOUND)
   if(DISABLE_ARCHIVE)
     set(HAVE_LIBARCHIVE OFF)
   else(DISABLE_ARCHIVE)
","{'added': [(130, 'if(""cxx_std_20"" IN_LIST CMAKE_CXX_COMPILE_FEATURES)'), (131, '  set(CMAKE_CXX_STANDARD 20)'), (132, 'endif()'), (404, '  find_package(TIFF) # for tesseract'), (405, '  if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)'), (406, '    # try PKG_CONFIG to find libtiff if cmake failed'), (407, '    pkg_check_modules(TIFF libtiff-4)'), (408, '  endif()'), (409, '  if(TIFF_FOUND)'), (410, '    set(HAVE_TIFFIO_H ON)'), (411, '    include_directories(${TIFF_INCLUDE_DIRS})'), (412, '  endif(TIFF_FOUND)')], 'deleted': [(343, '      set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /wd9025"") # overriding \'/openmp\''), (344, ""                                                        # with '/openmp:llvm'""), (403, '  if(WIN32)'), (404, '    find_package(TIFF) # for tesseract'), (405, '    if(NOT TIFF_FOUND AND PKG_CONFIG_EXECUTABLE)'), (406, '      # try PKG_CONFIG to find libtiff if cmake failed'), (407, '      pkg_check_modules(TIFF libtiff-4)'), (408, '    endif()'), (409, '    if(TIFF_FOUND)'), (410, '      set(HAVE_TIFFIO_H ON)'), (411, '      include_directories(${TIFF_INCLUDE_DIRS})'), (412, '    endif(TIFF_FOUND)'), (413, '  endif(WIN32)')]}",yes
CMakeLists.txt,CMakeLists.txt,426ed87c97a948978777c3c494beb5afdbe60604,691de2b945512c90ffc1a55db47c84a2497d497d,cmake: improve NEON build,"@@ -245,8 +245,6 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES ""arm64|aarch64.*|AARCH64.*"")
   set(HAVE_AVX512F FALSE)
   set(HAVE_FMA FALSE)
   set(HAVE_SSE4_1 FALSE)
-
-  add_definitions(""-DHAVE_NEON"")
   set(HAVE_NEON TRUE)
 
 elseif(CMAKE_SYSTEM_PROCESSOR MATCHES ""arm.*"")
@@ -256,12 +254,7 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES ""arm.*"")
   set(HAVE_AVX512F FALSE)
   set(HAVE_FMA FALSE)
   set(HAVE_SSE4_1 FALSE)
-
   check_cxx_compiler_flag(""-mfpu=neon"" HAVE_NEON)
-  if(HAVE_NEON)
-    set(NEON_COMPILE_FLAGS ""-mfpu=neon"")
-    add_definitions(""-DHAVE_NEON"")
-  endif()
 
 else()
 
@@ -274,7 +267,13 @@ else()
 
 endif(CMAKE_SYSTEM_PROCESSOR MATCHES ""x86|x86_64|AMD64|amd64|i386|i686"")
 
-# Compiler specific environments
+if(HAVE_NEON)
+  set(NEON_COMPILE_FLAGS ""-mfpu=neon"")
+  message(STATUS ""LTO build is not supported on arm/RBPi."")
+  set(ENABLE_LTO FALSE)  # enable LTO cause fatal error on arm/RBPi
+endif()
+
+# Compiler specific environment
 if(CMAKE_COMPILER_IS_GNUCXX OR MINGW)
   set(CMAKE_CXX_FLAGS_DEBUG
       ""${CMAKE_CXX_FLAGS_DEBUG} -Wall -DDEBUG -pedantic -Og"")
","{'added': [(270, 'if(HAVE_NEON)'), (271, '  set(NEON_COMPILE_FLAGS ""-mfpu=neon"")'), (272, '  message(STATUS ""LTO build is not supported on arm/RBPi."")'), (273, '  set(ENABLE_LTO FALSE)  # enable LTO cause fatal error on arm/RBPi'), (274, 'endif()'), (275, ''), (276, '# Compiler specific environment')], 'deleted': [(248, ''), (249, '  add_definitions(""-DHAVE_NEON"")'), (259, ''), (261, '  if(HAVE_NEON)'), (262, '    set(NEON_COMPILE_FLAGS ""-mfpu=neon"")'), (263, '    add_definitions(""-DHAVE_NEON"")'), (264, '  endif()'), (277, '# Compiler specific environments')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,c7a55c1ec1b7c859ea33b0ca332613aebcb15a90,1569e5080810f4652b720bcd344026a9b236ec50,"Fix some typos (partially found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -26,7 +26,7 @@ jobs:
         run: |
              $git_info=$(git describe --tags HEAD)
              echo ""version=${git_info}"" >> $env:GITHUB_OUTPUT
-      - name: Setup Instalation Location
+      - name: Setup Installation Location
         run: |
              mkdir ${{env.ILOC}}
       - name: Uninstall Perl
","{'added': [(29, '      - name: Setup Installation Location')], 'deleted': [(29, '      - name: Setup Instalation Location')]}",yes
include\tesseract\ocrclass.h,include\tesseract\ocrclass.h,c7a55c1ec1b7c859ea33b0ca332613aebcb15a90,1569e5080810f4652b720bcd344026a9b236ec50,"Fix some typos (partially found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -61,7 +61,7 @@ struct EANYCODE_CHAR { /*single character */
   // is UTF8 which means that ASCII characters will come out as one structure
   // but other characters will be returned in two or more instances of this
   // structure with a single byte of the  UTF8 code in each, but each will have
-  // the same bounding box. Programs which want to handle languagues with
+  // the same bounding box. Programs which want to handle languages with
   // different characters sets will need to handle extended characters
   // appropriately, but *all* code needs to be prepared to receive UTF8 coded
   // characters for characters such as bullet and fancy quotes.
","{'added': [(64, '  // the same bounding box. Programs which want to handle languages with')], 'deleted': [(64, '  // the same bounding box. Programs which want to handle languagues with')]}",yes
src\ccmain\resultiterator.cpp,src\ccmain\resultiterator.cpp,c7a55c1ec1b7c859ea33b0ca332613aebcb15a90,1569e5080810f4652b720bcd344026a9b236ec50,"Fix some typos (partially found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -149,7 +149,7 @@ void ResultIterator::CalculateBlobOrder(std::vector<int> *blob_indices) const {
   for (int i = 0; i < word_length_; i++) {
     letter_types.push_back(it_->word()->SymbolDirection(i));
   }
-  // Convert a single separtor sandwiched between two EN's into an EN.
+  // Convert a single separator sandwiched between two ENs into an EN.
   for (int i = 0; i + 2 < word_length_; i++) {
     if (letter_types[i] == U_EURO_NUM && letter_types[i + 2] == U_EURO_NUM &&
         (letter_types[i + 1] == U_EURO_NUM_SEP || letter_types[i + 1] == U_COMMON_NUM_SEP)) {
","{'added': [(152, '  // Convert a single separator sandwiched between two ENs into an EN.')], 'deleted': [(152, ""  // Convert a single separtor sandwiched between two EN's into an EN."")]}",yes
src\ccstruct\stepblob.cpp,src\ccstruct\stepblob.cpp,c7a55c1ec1b7c859ea33b0ca332613aebcb15a90,1569e5080810f4652b720bcd344026a9b236ec50,"Fix some typos (partially found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -314,7 +314,7 @@ int32_t C_BLOB::outer_area() { // area
  * C_BLOB::count_transitions
  *
  * Return the total x and y maxes and mins in the blob.
- * Chlid outlines are not counted.
+ * Child outlines are not counted.
  **********************************************************************/
 
 int32_t C_BLOB::count_transitions( // area
","{'added': [(317, ' * Child outlines are not counted.')], 'deleted': [(317, ' * Chlid outlines are not counted.')]}",yes
src\dict\dict.cpp,src\dict\dict.cpp,c7a55c1ec1b7c859ea33b0ca332613aebcb15a90,1569e5080810f4652b720bcd344026a9b236ec50,"Fix some typos (partially found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -114,7 +114,7 @@ Dict::Dict(CCUtil *ccutil)
                     "" for each dict char above small word size."",
                     getCCUtil()->params())
     , double_MEMBER(stopper_allowable_character_badness, 3.0,
-                    ""Max certaintly variation allowed in a word (in sigma)"", getCCUtil()->params())
+                    ""Max certainty variation allowed in a word (in sigma)"", getCCUtil()->params())
     , INT_MEMBER(stopper_debug_level, 0, ""Stopper debug level"", getCCUtil()->params())
     , BOOL_MEMBER(stopper_no_acceptable_choices, false,
                   ""Make AcceptableChoice() always return false. Useful""
@@ -171,7 +171,7 @@ Dict::~Dict() {
 
 DawgCache *Dict::GlobalDawgCache() {
   // This global cache (a singleton) will outlive every Tesseract instance
-  // (even those that someone else might declare as global statics).
+  // (even those that someone else might declare as global static variables).
   static DawgCache cache;
   return &cache;
 }
","{'added': [(117, '                    ""Max certainty variation allowed in a word (in sigma)"", getCCUtil()->params())'), (174, '  // (even those that someone else might declare as global static variables).')], 'deleted': [(117, '                    ""Max certaintly variation allowed in a word (in sigma)"", getCCUtil()->params())'), (174, '  // (even those that someone else might declare as global statics).')]}",yes
src\textord\topitch.cpp,src\textord\topitch.cpp,1569e5080810f4652b720bcd344026a9b236ec50,691de2b945512c90ffc1a55db47c84a2497d497d,"textord: Catch empty rows in block iterator (fixes #4039)

When textord_blockndoc_fixed was set to 1 empty rows caused a segmentation
fault. Test also textord_blockndoc_fixed first because it is typically 0.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -398,9 +398,8 @@ bool try_doc_fixed(             // determine pitch
   int16_t mid_cuts; // no of cheap cuts
   float pitch_sd;   // sync rating
 
-  if (block_it.empty()
-      //      || block_it.data()==block_it.data_relative(1)
-      || !textord_blockndoc_fixed) {
+  if (!textord_blockndoc_fixed ||
+      block_it.empty() || block_it.data()->get_rows()->empty()) {
     return false;
   }
   shift_factor = gradient / (gradient * gradient + 1);
","{'added': [(401, '  if (!textord_blockndoc_fixed ||'), (402, '      block_it.empty() || block_it.data()->get_rows()->empty()) {')], 'deleted': [(401, '  if (block_it.empty()'), (402, '      //      || block_it.data()==block_it.data_relative(1)'), (403, '      || !textord_blockndoc_fixed) {')]}",yes
CMakeLists.txt,CMakeLists.txt,691de2b945512c90ffc1a55db47c84a2497d497d,484d427c6723fed9365704335bf88364545af3cc,"cmake: sync with autotools (OPENMP_SIMD, fast-math)","@@ -185,6 +185,10 @@ if(CMAKE_SYSTEM_PROCESSOR MATCHES ""x86|x86_64|AMD64|amd64|i386|i686"")
     set(HAVE_SSE4_1 ON)
     set(SSE4_1_COMPILE_FLAGS ""-D__SSE4_1__"")
     add_definitions(""-DHAVE_SSE4_1"")
+
+    set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -openmp:experimental"")
+    add_definitions(""-DOPENMP_SIMD"")
+
     # clang with MSVC compatibility
     if(CLANG)
       set(CMAKE_CXX_FLAGS
@@ -226,6 +230,12 @@ if(CMAKE_SYSTEM_PROCESSOR MATCHES ""x86|x86_64|AMD64|amd64|i386|i686"")
       set(SSE4_1_COMPILE_FLAGS ""-msse4.1"")
       add_definitions(""-DHAVE_SSE4_1"")
     endif()
+
+    check_cxx_compiler_flag(""-fopenmp-simd"" OPENMP_SIMD)
+    if(OPENMP_SIMD)
+      set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -fopenmp-simd"")
+      add_definitions(""-DOPENMP_SIMD"")
+    endif(OPENMP_SIMD)
   endif(MSVC)
 
 elseif(CMAKE_SYSTEM_PROCESSOR MATCHES ""arm64|aarch64.*|AARCH64.*"")
@@ -331,10 +341,9 @@ if(OPENMP_BUILD)
     # https://devblogs.microsoft.com/cppblog/openmp-updates-and-fixes-for-cpp-in-visual-studio-2019-16-10/
     if(""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")
       set(OpenMP_CXX_FLAGS ""-openmp:llvm"")
+      set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /wd9025"") # overriding '/openmp'
+                                                        # with '/openmp:llvm'
     endif()
-    # 'simd': requires '-openmp:experimental'
-    set_source_files_properties(src/arch/dotproduct.cpp
-                              PROPERTIES COMPILE_FLAGS ""-openmp:experimental"")
   endif()
   if(OpenMP_FOUND)
     message("">> OpenMP_FOUND ${OpenMP_FOUND} version: ${OpenMP_CXX_VERSION}"")
@@ -449,7 +458,9 @@ endif(ENABLE_OPENCL)
 #
 # ##############################################################################
 
-if(NOT MSVC)
+if(MSVC)
+  set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} /fp:fast"")
+else()
   set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -O3 -ffast-math"")
 endif()
 
","{'added': [(188, ''), (189, '    set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -openmp:experimental"")'), (190, '    add_definitions(""-DOPENMP_SIMD"")'), (191, ''), (233, ''), (234, '    check_cxx_compiler_flag(""-fopenmp-simd"" OPENMP_SIMD)'), (235, '    if(OPENMP_SIMD)'), (236, '      set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -fopenmp-simd"")'), (237, '      add_definitions(""-DOPENMP_SIMD"")'), (238, '    endif(OPENMP_SIMD)'), (344, '      set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} /wd9025"") # overriding \'/openmp\''), (345, ""                                                        # with '/openmp:llvm'""), (461, 'if(MSVC)'), (462, '  set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} /fp:fast"")'), (463, 'else()')], 'deleted': [(335, ""    # 'simd': requires '-openmp:experimental'""), (336, '    set_source_files_properties(src/arch/dotproduct.cpp'), (337, '                              PROPERTIES COMPILE_FLAGS ""-openmp:experimental"")'), (452, 'if(NOT MSVC)')]}",yes
CMakeLists.txt,CMakeLists.txt,484d427c6723fed9365704335bf88364545af3cc,f779c434b0370a005b3c49f35f3f38810a781ca5,cmake: improve style,"@@ -151,10 +151,10 @@ set(MARCH_NATIVE_OPT OFF)
 if(ENABLE_NATIVE)
   check_cxx_compiler_flag(""-march=native"" COMPILER_SUPPORTS_MARCH_NATIVE)
   if(COMPILER_SUPPORTS_MARCH_NATIVE)
-    set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -march=native"")
+    set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -march=native"")
     if(NOT CLANG AND MSVC)
       # clang-cl does not know this argument
-      set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -mtune=native"")
+      set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -mtune=native"")
     endif()
     set(MARCH_NATIVE_OPT ON)
   endif(COMPILER_SUPPORTS_MARCH_NATIVE)
@@ -196,7 +196,7 @@ if(CMAKE_SYSTEM_PROCESSOR MATCHES ""x86|x86_64|AMD64|amd64|i386|i686"")
         set(SSE4_1_COMPILE_FLAGS ""-msse4.1 ${SSE4_1_COMPILE_FLAGS}"")
       endif(HAVE_SSE4_1)
     endif(CLANG)
-  else()  # if not MSVC
+  else() # if not MSVC
     check_cxx_compiler_flag(""-mavx"" HAVE_AVX)
     if(HAVE_AVX)
       set(AVX_COMPILE_FLAGS ""-mavx"")
@@ -281,9 +281,9 @@ elseif(MSVC)
   # loss of data wd4275 non dll-interface class wd4305 ...truncation from
   # 'double' to 'float'
   set(CMAKE_CXX_FLAGS_RELEASE
-      ""${CMAKE_CXX_FLAGS_RELEASE} /wd4244 /wd4305 /wd4267 /wd4251 /wd4275 /wd4005"")
-  set(CMAKE_CXX_FLAGS_RELEASE
-      ""${CMAKE_CXX_FLAGS_RELEASE} /wd4068"")
+      ""${CMAKE_CXX_FLAGS_RELEASE} /wd4244 /wd4305 /wd4267 /wd4251 /wd4275 /wd4005""
+  )
+  set(CMAKE_CXX_FLAGS_RELEASE ""${CMAKE_CXX_FLAGS_RELEASE} /wd4068"")
   # Don't use /Wall because it generates too many warnings.
   set(CMAKE_CXX_FLAGS_DEBUG ""${CMAKE_CXX_FLAGS_DEBUG} /W0 /bigobj"")
   # MT flag
@@ -326,10 +326,10 @@ if(OPENMP_BUILD)
     add_definitions(-D_OPENMP=201107)
   endif()
   if(MSVC)
-    # Note: -openmp:llvm is available for X64 from MSVC 16.9
-    # from MSVC 16.10 Preview 2 there is support also for x86 and arm64
+    # Note: -openmp:llvm is available for X64 from MSVC 16.9 from MSVC 16.10
+    # Preview 2 there is support also for x86 and arm64
     # https://devblogs.microsoft.com/cppblog/openmp-updates-and-fixes-for-cpp-in-visual-studio-2019-16-10/
-    if (""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")
+    if(""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")
       set(OpenMP_CXX_FLAGS ""-openmp:llvm"")
     endif()
     # 'simd': requires '-openmp:experimental'
@@ -339,7 +339,7 @@ if(OPENMP_BUILD)
   if(OpenMP_FOUND)
     message("">> OpenMP_FOUND ${OpenMP_FOUND} version: ${OpenMP_CXX_VERSION}"")
     set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}"")
-    if (NOT TARGET OpenMP::OpenMP_CXX)
+    if(NOT TARGET OpenMP::OpenMP_CXX)
       add_library(OpenMP::OpenMP_CXX IMPORTED INTERFACE)
     endif()
   endif()
@@ -431,9 +431,9 @@ else()
   endif(DISABLE_CURL)
 endif()
 
-IF(ENABLE_OPENCL)
+if(ENABLE_OPENCL)
   find_package(OpenCL)
-  if (OpenCL_FOUND)
+  if(OpenCL_FOUND)
     include_directories(${OpenCL_INCLUDE_DIRS})
     message(STATUS ""OpenCL_INCLUDE_DIRS: ${OpenCL_INCLUDE_DIRS}"")
     message(STATUS ""OpenCL_LIBRARY: ${OpenCL_LIBRARY}"")
@@ -450,7 +450,7 @@ endif(ENABLE_OPENCL)
 # ##############################################################################
 
 if(NOT MSVC)
-  set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -O3 -ffast-math"")
+  set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -O3 -ffast-math"")
 endif()
 
 if(NOT DEFINED CMAKE_INSTALL_LIBDIR)
@@ -535,10 +535,13 @@ message(STATUS ""Build training tools [BUILD_TRAINING_TOOLS]: ""
                ""${BUILD_TRAINING_TOOLS}"")
 message(STATUS ""Build tests [BUILD_TESTS]: ${BUILD_TESTS}"")
 if(ENABLE_OPENCL)
-  message(STATUS ""Enable unsupported experimental OpenCL [ENABLE_OPENCL]: ${USE_OPENCL}"")
+  message(
+    STATUS
+      ""Enable unsupported experimental OpenCL [ENABLE_OPENCL]: ${USE_OPENCL}"")
 endif(ENABLE_OPENCL)
 message(STATUS ""Use system ICU Library [USE_SYSTEM_ICU]: ${USE_SYSTEM_ICU}"")
-message(STATUS ""Install tesseract configs [INSTALL_CONFIGS]: ${INSTALL_CONFIGS}"")
+message(
+  STATUS ""Install tesseract configs [INSTALL_CONFIGS]: ${INSTALL_CONFIGS}"")
 message(STATUS ""--------------------------------------------------------"")
 message(STATUS)
 
@@ -591,7 +594,7 @@ if(DISABLED_LEGACY_ENGINE)
         PARENT_SCOPE)
   endfunction()
 
-set(TESSERACT_SRC_LEGACY
+  set(TESSERACT_SRC_LEGACY
       src/ccmain/adaptions.cpp
       src/ccmain/docqual.cpp
       src/ccmain/equationdetect.cpp
@@ -661,10 +664,10 @@ endif(DISABLED_LEGACY_ENGINE)
 list(APPEND arch_files src/arch/dotproduct.cpp src/arch/simddetect.cpp
      src/arch/intsimdmatrix.cpp)
 
-if(MARCH_NATIVE_FLAGS)
+if(DOTPRODUCT_FLAGS)
   set_source_files_properties(src/arch/dotproduct.cpp
-                              PROPERTIES COMPILE_FLAGS ${MARCH_NATIVE_FLAGS})
-endif(MARCH_NATIVE_FLAGS)
+                              PROPERTIES COMPILE_FLAGS ${DOTPRODUCT_FLAGS})
+endif(DOTPRODUCT_FLAGS)
 if(HAVE_AVX)
   list(APPEND arch_files_opt src/arch/dotproductavx.cpp)
   set_source_files_properties(src/arch/dotproductavx.cpp
@@ -732,40 +735,37 @@ set(TESSERACT_SRC
     src/api/wordstrboxrenderer.cpp)
 
 set(TESSERACT_CONFIGS
-  tessdata/configs/alto
-  tessdata/configs/ambigs.train
-  tessdata/configs/api_config
-  tessdata/configs/bazaar
-  tessdata/configs/bigram
-  tessdata/configs/box.train
-  tessdata/configs/box.train.stderr
-  tessdata/configs/digits
-  tessdata/configs/get.images
-  tessdata/configs/hocr
-  tessdata/configs/inter
-  tessdata/configs/kannada
-  tessdata/configs/linebox
-  tessdata/configs/logfile
-  tessdata/configs/lstm.train
-  tessdata/configs/lstmbox
-  tessdata/configs/lstmdebug
-  tessdata/configs/makebox
-  tessdata/configs/pdf
-  tessdata/configs/quiet
-  tessdata/configs/rebox
-  tessdata/configs/strokewidth
-  tessdata/configs/tsv
-  tessdata/configs/txt
-  tessdata/configs/unlv
-  tessdata/configs/wordstrbox)
+    tessdata/configs/alto
+    tessdata/configs/ambigs.train
+    tessdata/configs/api_config
+    tessdata/configs/bazaar
+    tessdata/configs/bigram
+    tessdata/configs/box.train
+    tessdata/configs/box.train.stderr
+    tessdata/configs/digits
+    tessdata/configs/get.images
+    tessdata/configs/hocr
+    tessdata/configs/inter
+    tessdata/configs/kannada
+    tessdata/configs/linebox
+    tessdata/configs/logfile
+    tessdata/configs/lstm.train
+    tessdata/configs/lstmbox
+    tessdata/configs/lstmdebug
+    tessdata/configs/makebox
+    tessdata/configs/pdf
+    tessdata/configs/quiet
+    tessdata/configs/rebox
+    tessdata/configs/strokewidth
+    tessdata/configs/tsv
+    tessdata/configs/txt
+    tessdata/configs/unlv
+    tessdata/configs/wordstrbox)
 
 set(TESSERACT_TESSCONFIGS
-  tessdata/tessconfigs/batch
-  tessdata/tessconfigs/batch.nochop
-  tessdata/tessconfigs/matdemo
-  tessdata/tessconfigs/msdemo
-  tessdata/tessconfigs/nobatch
-  tessdata/tessconfigs/segdemo)
+    tessdata/tessconfigs/batch tessdata/tessconfigs/batch.nochop
+    tessdata/tessconfigs/matdemo tessdata/tessconfigs/msdemo
+    tessdata/tessconfigs/nobatch tessdata/tessconfigs/segdemo)
 
 set(LIBTESSFILES ${TESSERACT_SRC} ${arch_files} ${arch_files_opt}
                  ${TESSERACT_HDR})
@@ -774,8 +774,7 @@ source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${LIBTESSFILES})
 
 add_library(libtesseract ${LIBTESSFILES})
 target_include_directories(
-  libtesseract
-  BEFORE
+  libtesseract BEFORE
   PRIVATE src
   PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
          $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/arch>
@@ -816,13 +815,19 @@ if(CURL_FOUND)
   endif()
 endif(CURL_FOUND)
 
-set_target_properties(libtesseract
-  PROPERTIES VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
-set_target_properties(libtesseract
-  PROPERTIES SOVERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
+set_target_properties(
+  libtesseract PROPERTIES VERSION
+                          ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
+set_target_properties(
+  libtesseract PROPERTIES SOVERSION
+                          ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
 
-set_target_properties(libtesseract
-  PROPERTIES OUTPUT_NAME tesseract$<$<BOOL:${WIN32}>:${VERSION_MAJOR}${VERSION_MINOR}$<$<CONFIG:DEBUG>:d>>)
+set_target_properties(
+  libtesseract
+  PROPERTIES
+    OUTPUT_NAME
+    tesseract$<$<BOOL:${WIN32}>:${VERSION_MAJOR}${VERSION_MINOR}$<$<CONFIG:DEBUG>:d>>
+)
 
 if(SW_BUILD)
   target_link_libraries(libtesseract PUBLIC org.sw.demo.danbloomberg.leptonica
@@ -850,11 +855,13 @@ if(WIN32
   target_link_libraries(libtesseract PRIVATE ${OpenMP_LIBRARY})
 endif()
 
-if (ANDROID)
-    add_definitions(-DANDROID)
-    find_package(CpuFeaturesNdkCompat REQUIRED)
-    target_include_directories(libtesseract PRIVATE ""${CpuFeaturesNdkCompat_DIR}/../../../include/ndk_compat"")
-    target_link_libraries     (libtesseract PRIVATE CpuFeatures::ndk_compat)
+if(ANDROID)
+  add_definitions(-DANDROID)
+  find_package(CpuFeaturesNdkCompat REQUIRED)
+  target_include_directories(
+    libtesseract
+    PRIVATE ""${CpuFeaturesNdkCompat_DIR}/../../../include/ndk_compat"")
+  target_link_libraries(libtesseract PRIVATE CpuFeatures::ndk_compat)
 endif()
 
 # ##############################################################################
@@ -873,8 +880,9 @@ endif()
 
 # ##############################################################################
 
-if(BUILD_TESTS AND EXISTS
-     ${CMAKE_CURRENT_SOURCE_DIR}/unittest/third_party/googletest/CMakeLists.txt
+if(BUILD_TESTS
+   AND EXISTS
+       ${CMAKE_CURRENT_SOURCE_DIR}/unittest/third_party/googletest/CMakeLists.txt
 )
   add_subdirectory(unittest/third_party/googletest)
 endif()
@@ -890,7 +898,10 @@ get_target_property(tesseract_OUTPUT_NAME libtesseract OUTPUT_NAME)
 configure_file(tesseract.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in
                @ONLY)
 # to resolve generator expression in OUTPUT_NAME
-file(GENERATE OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc INPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in)
+file(
+  GENERATE
+  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc
+  INPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in)
 
 configure_package_config_file(
   cmake/templates/TesseractConfig.cmake.in
@@ -902,8 +913,10 @@ write_basic_package_version_file(
   VERSION ${PACKAGE_VERSION}
   COMPATIBILITY SameMajorVersion)
 
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc
-        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig RENAME tesseract.pc)
+install(
+  FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc
+  DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
+  RENAME tesseract.pc)
 install(TARGETS tesseract DESTINATION bin)
 install(
   TARGETS libtesseract
@@ -935,10 +948,10 @@ install(
   DESTINATION include/tesseract)
 
 if(INSTALL_CONFIGS)
-install(FILES ${TESSERACT_CONFIGS}
-        DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/configs)
-install(FILES ${TESSERACT_TESSCONFIGS}
-        DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/tessconfigs)
+  install(FILES ${TESSERACT_CONFIGS}
+          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/configs)
+  install(FILES ${TESSERACT_TESSCONFIGS}
+          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/tessconfigs)
 endif()
 
 # ##############################################################################
","{'added': [(154, '    set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -march=native"")'), (157, '      set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -mtune=native"")'), (199, '  else() # if not MSVC'), (284, '      ""${CMAKE_CXX_FLAGS_RELEASE} /wd4244 /wd4305 /wd4267 /wd4251 /wd4275 /wd4005""'), (285, '  )'), (286, '  set(CMAKE_CXX_FLAGS_RELEASE ""${CMAKE_CXX_FLAGS_RELEASE} /wd4068"")'), (329, '    # Note: -openmp:llvm is available for X64 from MSVC 16.9 from MSVC 16.10'), (330, '    # Preview 2 there is support also for x86 and arm64'), (332, '    if(""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")'), (342, '    if(NOT TARGET OpenMP::OpenMP_CXX)'), (434, 'if(ENABLE_OPENCL)'), (436, '  if(OpenCL_FOUND)'), (453, '  set(DOTPRODUCT_FLAGS ""${DOTPRODUCT_FLAGS} -O3 -ffast-math"")'), (538, '  message('), (539, '    STATUS'), (540, '      ""Enable unsupported experimental OpenCL [ENABLE_OPENCL]: ${USE_OPENCL}"")'), (543, 'message('), (544, '  STATUS ""Install tesseract configs [INSTALL_CONFIGS]: ${INSTALL_CONFIGS}"")'), (597, '  set(TESSERACT_SRC_LEGACY'), (667, 'if(DOTPRODUCT_FLAGS)'), (669, '                              PROPERTIES COMPILE_FLAGS ${DOTPRODUCT_FLAGS})'), (670, 'endif(DOTPRODUCT_FLAGS)'), (738, '    tessdata/configs/alto'), (739, '    tessdata/configs/ambigs.train'), (740, '    tessdata/configs/api_config'), (741, '    tessdata/configs/bazaar'), (742, '    tessdata/configs/bigram'), (743, '    tessdata/configs/box.train'), (744, '    tessdata/configs/box.train.stderr'), (745, '    tessdata/configs/digits'), (746, '    tessdata/configs/get.images'), (747, '    tessdata/configs/hocr'), (748, '    tessdata/configs/inter'), (749, '    tessdata/configs/kannada'), (750, '    tessdata/configs/linebox'), (751, '    tessdata/configs/logfile'), (752, '    tessdata/configs/lstm.train'), (753, '    tessdata/configs/lstmbox'), (754, '    tessdata/configs/lstmdebug'), (755, '    tessdata/configs/makebox'), (756, '    tessdata/configs/pdf'), (757, '    tessdata/configs/quiet'), (758, '    tessdata/configs/rebox'), (759, '    tessdata/configs/strokewidth'), (760, '    tessdata/configs/tsv'), (761, '    tessdata/configs/txt'), (762, '    tessdata/configs/unlv'), (763, '    tessdata/configs/wordstrbox)'), (766, '    tessdata/tessconfigs/batch tessdata/tessconfigs/batch.nochop'), (767, '    tessdata/tessconfigs/matdemo tessdata/tessconfigs/msdemo'), (768, '    tessdata/tessconfigs/nobatch tessdata/tessconfigs/segdemo)'), (777, '  libtesseract BEFORE'), (818, 'set_target_properties('), (819, '  libtesseract PROPERTIES VERSION'), (820, '                          ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})'), (821, 'set_target_properties('), (822, '  libtesseract PROPERTIES SOVERSION'), (823, '                          ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})'), (825, 'set_target_properties('), (826, '  libtesseract'), (827, '  PROPERTIES'), (828, '    OUTPUT_NAME'), (829, '    tesseract$<$<BOOL:${WIN32}>:${VERSION_MAJOR}${VERSION_MINOR}$<$<CONFIG:DEBUG>:d>>'), (830, ')'), (858, 'if(ANDROID)'), (859, '  add_definitions(-DANDROID)'), (860, '  find_package(CpuFeaturesNdkCompat REQUIRED)'), (861, '  target_include_directories('), (862, '    libtesseract'), (863, '    PRIVATE ""${CpuFeaturesNdkCompat_DIR}/../../../include/ndk_compat"")'), (864, '  target_link_libraries(libtesseract PRIVATE CpuFeatures::ndk_compat)'), (883, 'if(BUILD_TESTS'), (884, '   AND EXISTS'), (885, '       ${CMAKE_CURRENT_SOURCE_DIR}/unittest/third_party/googletest/CMakeLists.txt'), (901, 'file('), (902, '  GENERATE'), (903, '  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc'), (904, '  INPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in)'), (916, 'install('), (917, '  FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc'), (918, '  DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig'), (919, '  RENAME tesseract.pc)'), (951, '  install(FILES ${TESSERACT_CONFIGS}'), (952, '          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/configs)'), (953, '  install(FILES ${TESSERACT_TESSCONFIGS}'), (954, '          DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/tessconfigs)')], 'deleted': [(154, '    set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -march=native"")'), (157, '      set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -mtune=native"")'), (199, '  else()  # if not MSVC'), (284, '      ""${CMAKE_CXX_FLAGS_RELEASE} /wd4244 /wd4305 /wd4267 /wd4251 /wd4275 /wd4005"")'), (285, '  set(CMAKE_CXX_FLAGS_RELEASE'), (286, '      ""${CMAKE_CXX_FLAGS_RELEASE} /wd4068"")'), (329, '    # Note: -openmp:llvm is available for X64 from MSVC 16.9'), (330, '    # from MSVC 16.10 Preview 2 there is support also for x86 and arm64'), (332, '    if (""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")'), (342, '    if (NOT TARGET OpenMP::OpenMP_CXX)'), (434, 'IF(ENABLE_OPENCL)'), (436, '  if (OpenCL_FOUND)'), (453, '  set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -O3 -ffast-math"")'), (538, '  message(STATUS ""Enable unsupported experimental OpenCL [ENABLE_OPENCL]: ${USE_OPENCL}"")'), (541, 'message(STATUS ""Install tesseract configs [INSTALL_CONFIGS]: ${INSTALL_CONFIGS}"")'), (594, 'set(TESSERACT_SRC_LEGACY'), (664, 'if(MARCH_NATIVE_FLAGS)'), (666, '                              PROPERTIES COMPILE_FLAGS ${MARCH_NATIVE_FLAGS})'), (667, 'endif(MARCH_NATIVE_FLAGS)'), (735, '  tessdata/configs/alto'), (736, '  tessdata/configs/ambigs.train'), (737, '  tessdata/configs/api_config'), (738, '  tessdata/configs/bazaar'), (739, '  tessdata/configs/bigram'), (740, '  tessdata/configs/box.train'), (741, '  tessdata/configs/box.train.stderr'), (742, '  tessdata/configs/digits'), (743, '  tessdata/configs/get.images'), (744, '  tessdata/configs/hocr'), (745, '  tessdata/configs/inter'), (746, '  tessdata/configs/kannada'), (747, '  tessdata/configs/linebox'), (748, '  tessdata/configs/logfile'), (749, '  tessdata/configs/lstm.train'), (750, '  tessdata/configs/lstmbox'), (751, '  tessdata/configs/lstmdebug'), (752, '  tessdata/configs/makebox'), (753, '  tessdata/configs/pdf'), (754, '  tessdata/configs/quiet'), (755, '  tessdata/configs/rebox'), (756, '  tessdata/configs/strokewidth'), (757, '  tessdata/configs/tsv'), (758, '  tessdata/configs/txt'), (759, '  tessdata/configs/unlv'), (760, '  tessdata/configs/wordstrbox)'), (763, '  tessdata/tessconfigs/batch'), (764, '  tessdata/tessconfigs/batch.nochop'), (765, '  tessdata/tessconfigs/matdemo'), (766, '  tessdata/tessconfigs/msdemo'), (767, '  tessdata/tessconfigs/nobatch'), (768, '  tessdata/tessconfigs/segdemo)'), (777, '  libtesseract'), (778, '  BEFORE'), (819, 'set_target_properties(libtesseract'), (820, '  PROPERTIES VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})'), (821, 'set_target_properties(libtesseract'), (822, '  PROPERTIES SOVERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})'), (824, 'set_target_properties(libtesseract'), (825, '  PROPERTIES OUTPUT_NAME tesseract$<$<BOOL:${WIN32}>:${VERSION_MAJOR}${VERSION_MINOR}$<$<CONFIG:DEBUG>:d>>)'), (853, 'if (ANDROID)'), (854, '    add_definitions(-DANDROID)'), (855, '    find_package(CpuFeaturesNdkCompat REQUIRED)'), (856, '    target_include_directories(libtesseract PRIVATE ""${CpuFeaturesNdkCompat_DIR}/../../../include/ndk_compat"")'), (857, '    target_link_libraries     (libtesseract PRIVATE CpuFeatures::ndk_compat)'), (876, 'if(BUILD_TESTS AND EXISTS'), (877, '     ${CMAKE_CURRENT_SOURCE_DIR}/unittest/third_party/googletest/CMakeLists.txt'), (893, 'file(GENERATE OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc INPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in)'), (905, 'install(FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc'), (906, '        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig RENAME tesseract.pc)'), (938, 'install(FILES ${TESSERACT_CONFIGS}'), (939, '        DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/configs)'), (940, 'install(FILES ${TESSERACT_TESSCONFIGS}'), (941, '        DESTINATION ${CMAKE_INSTALL_PREFIX}/share/tessdata/tessconfigs)')]}",yes
CMakeLists.txt,CMakeLists.txt,f779c434b0370a005b3c49f35f3f38810a781ca5,a6e0aa7f4810ff7c7a47f74403a6ffbf182b2d59,"cmake: disable ""-march=native"" by default","@@ -89,6 +89,10 @@ option(DISABLED_LEGACY_ENGINE ""Disable the legacy OCR engine"" OFF)
 option(ENABLE_LTO ""Enable link-time optimization"" OFF)
 option(FAST_FLOAT ""Enable float for LSTM"" ON)
 option(ENABLE_OPENCL ""Enable unsupported experimental OpenCL support"" OFF)
+option(ENABLE_NATIVE
+       ""Enable optimization for host CPU (could break HW compatibility)"" OFF)
+# see
+# https://stackoverflow.com/questions/52653025/why-is-march-native-used-so-rarely
 option(BUILD_TRAINING_TOOLS ""Build training tools"" ON)
 option(BUILD_TESTS ""Build tests"" OFF)
 option(USE_SYSTEM_ICU ""Use system ICU"" OFF)
@@ -143,15 +147,18 @@ else()
   message(STATUS ""IPO / LTO not supported: <${error}>"")
 endif()
 
-check_cxx_compiler_flag(""-march=native"" COMPILER_SUPPORTS_MARCH_NATIVE)
-if(COMPILER_SUPPORTS_MARCH_NATIVE)
-  set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -march=native"")
-  if(NOT CLANG AND MSVC)
-    # clang-cl does not know this argument
-    set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -mtune=native"")
-  endif()
-  set(MARCH_NATIVE_OPT ON)
-endif()
+set(MARCH_NATIVE_OPT OFF)
+if(ENABLE_NATIVE)
+  check_cxx_compiler_flag(""-march=native"" COMPILER_SUPPORTS_MARCH_NATIVE)
+  if(COMPILER_SUPPORTS_MARCH_NATIVE)
+    set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -march=native"")
+    if(NOT CLANG AND MSVC)
+      # clang-cl does not know this argument
+      set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -mtune=native"")
+    endif()
+    set(MARCH_NATIVE_OPT ON)
+  endif(COMPILER_SUPPORTS_MARCH_NATIVE)
+endif(ENABLE_NATIVE)
 
 message(STATUS ""CMAKE_SYSTEM_PROCESSOR=<${CMAKE_SYSTEM_PROCESSOR}>"")
 
@@ -518,6 +525,8 @@ message(STATUS ""Build with libarchive support [HAVE_LIBARCHIVE]: ""
                ""${HAVE_LIBARCHIVE}"")
 message(STATUS ""Build with libcurl support [HAVE_LIBCURL]: ${HAVE_LIBCURL}"")
 message(STATUS ""Enable float for LSTM [FAST_FLOAT]: ${FAST_FLOAT}"")
+message(STATUS ""Enable optimization for host CPU (could break HW compatibility)""
+               "" [ENABLE_NATIVE]: ${ENABLE_NATIVE}"")
 message(STATUS ""Disable disable graphics (ScrollView) [GRAPHICS_DISABLED]: ""
                ""${GRAPHICS_DISABLED}"")
 message(STATUS ""Disable the legacy OCR engine [DISABLED_LEGACY_ENGINE]: ""
","{'added': [(92, 'option(ENABLE_NATIVE'), (93, '       ""Enable optimization for host CPU (could break HW compatibility)"" OFF)'), (94, '# see'), (95, '# https://stackoverflow.com/questions/52653025/why-is-march-native-used-so-rarely'), (150, 'set(MARCH_NATIVE_OPT OFF)'), (151, 'if(ENABLE_NATIVE)'), (152, '  check_cxx_compiler_flag(""-march=native"" COMPILER_SUPPORTS_MARCH_NATIVE)'), (153, '  if(COMPILER_SUPPORTS_MARCH_NATIVE)'), (154, '    set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -march=native"")'), (155, '    if(NOT CLANG AND MSVC)'), (156, '      # clang-cl does not know this argument'), (157, '      set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -mtune=native"")'), (158, '    endif()'), (159, '    set(MARCH_NATIVE_OPT ON)'), (160, '  endif(COMPILER_SUPPORTS_MARCH_NATIVE)'), (161, 'endif(ENABLE_NATIVE)'), (528, 'message(STATUS ""Enable optimization for host CPU (could break HW compatibility)""'), (529, '               "" [ENABLE_NATIVE]: ${ENABLE_NATIVE}"")')], 'deleted': [(146, 'check_cxx_compiler_flag(""-march=native"" COMPILER_SUPPORTS_MARCH_NATIVE)'), (147, 'if(COMPILER_SUPPORTS_MARCH_NATIVE)'), (148, '  set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -march=native"")'), (149, '  if(NOT CLANG AND MSVC)'), (150, '    # clang-cl does not know this argument'), (151, '    set(MARCH_NATIVE_FLAGS ""${MARCH_NATIVE_FLAGS} -mtune=native"")'), (152, '  endif()'), (153, '  set(MARCH_NATIVE_OPT ON)'), (154, 'endif()')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,a6e0aa7f4810ff7c7a47f74403a6ffbf182b2d59,a7e51c2e33e081c5bbb449fd261e2129e7cdaff9,Update issue-bug.yml,"@@ -61,14 +61,14 @@ body:
     attributes:
       label: Compiler
       placeholder: ""Enter compiler name and version (Examples: MSVC 2019 16.11, Clang 13.0.1, GCC 11.2, Xcode 14.1)""
-  - type: textarea
-    attributes:
-      label: Virtualization / Containers
-      placeholder: ""Enter the name and version of the VM / container which you use (Examples: Oracle VM VirtualBox 7.0.4,VMware Workstation 17.0, Hyper-V, Docker 20.10.22)""
   - type: textarea
     attributes:
       label: CPU
       placeholder: ""Enter your CPU vendor name and model (Examples: Intel Core i7-11700K, AMD Ryzen 7 5800X, Apple Silicon M1)""
+  - type: textarea
+    attributes:
+      label: Virtualization / Containers
+      placeholder: ""Enter the name and version of the VM / container which you use (Examples: Oracle VM VirtualBox 7.0.4,VMware Workstation 17.0, Hyper-V, Docker 20.10.22)""
   - type: textarea
     attributes:
       label: Other Information
","{'added': [(68, '  - type: textarea'), (69, '    attributes:'), (70, '      label: Virtualization / Containers'), (71, '      placeholder: ""Enter the name and version of the VM / container which you use (Examples: Oracle VM VirtualBox 7.0.4,VMware Workstation 17.0, Hyper-V, Docker 20.10.22)""')], 'deleted': [(64, '  - type: textarea'), (65, '    attributes:'), (66, '      label: Virtualization / Containers'), (67, '      placeholder: ""Enter the name and version of the VM / container which you use (Examples: Oracle VM VirtualBox 7.0.4,VMware Workstation 17.0, Hyper-V, Docker 20.10.22)""')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,a7e51c2e33e081c5bbb449fd261e2129e7cdaff9,19fe1a67850bd4091e5e2dbc7931cd7e1509b1ca,Update issue-bug.yml,"@@ -18,9 +18,18 @@ body:
         * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report.
   - type: textarea
     attributes:
-      label: Basic Information
+      label: Current Behavior
+  - type: textarea
+    attributes:
+      label: Expected Behavior
+  - type: textarea
+    attributes:
+      label: Suggested Fix
+  - type: textarea
+    attributes:
+      label: tesseract -v
       description: Version info, compiled libraries, SIMD, OpenMP
-      placeholder: ""Paste the output of the command: tesseract -v""
+      placeholder: ""Please paste the output of the command: tesseract -v""
   - type: dropdown
     id: os-linux
     attributes:
@@ -60,15 +69,6 @@ body:
     attributes:
       label: CPU
       placeholder: ""Enter your CPU vendor name and model (Examples: Intel Core i7-11700K, AMD Ryzen 7 5800X, Apple Silicon M1)""
-  - type: textarea
-    attributes:
-      label: Current Behavior
-  - type: textarea
-    attributes:
-      label: Expected Behavior
-  - type: textarea
-    attributes:
-      label: Suggested Fix
   - type: textarea
     attributes:
       label: Other Information
","{'added': [(21, '      label: Current Behavior'), (22, '  - type: textarea'), (23, '    attributes:'), (24, '      label: Expected Behavior'), (25, '  - type: textarea'), (26, '    attributes:'), (27, '      label: Suggested Fix'), (28, '  - type: textarea'), (29, '    attributes:'), (30, '      label: tesseract -v'), (32, '      placeholder: ""Please paste the output of the command: tesseract -v""')], 'deleted': [(21, '      label: Basic Information'), (23, '      placeholder: ""Paste the output of the command: tesseract -v""'), (63, '  - type: textarea'), (64, '    attributes:'), (65, '      label: Current Behavior'), (66, '  - type: textarea'), (67, '    attributes:'), (68, '      label: Expected Behavior'), (69, '  - type: textarea'), (70, '    attributes:'), (71, '      label: Suggested Fix')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,19fe1a67850bd4091e5e2dbc7931cd7e1509b1ca,c38471b90dd92340ae17771df6e62884028b90ba,autotools.yml: Update compilers,"@@ -13,14 +13,17 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: ubuntu-20.04-clang-7-autotools, os: ubuntu-20.04, cxx: clang++-7 }
-          - { name: ubuntu-20.04-clang-8-autotools, os: ubuntu-20.04, cxx: clang++-8 } #installed
-          - { name: ubuntu-20.04-clang-9-autotools, os: ubuntu-20.04, cxx: clang++-9 } #installed
+          - { name: ubuntu-22.04-clang-14-autotools, os: ubuntu-22.04, cxx: clang++-14 }
+          - { name: ubuntu-22.04-clang-13-autotools, os: ubuntu-22.04, cxx: clang++-13 } #installed
+          - { name: ubuntu-22.04-clang-12-autotools, os: ubuntu-22.04, cxx: clang++-12 } #installed
+          - { name: ubuntu-20.04-clang-11-autotools, os: ubuntu-20.04, cxx: clang++-11 } #installed
           - { name: ubuntu-20.04-clang-10-autotools, os: ubuntu-20.04, cxx: clang++-10 } #installed
 
-          - { name: ubuntu-20.04-gcc-8-autotools, os: ubuntu-20.04, cxx: g++-8 } #installed
-          - { name: ubuntu-20.04-gcc-9-autotools, os: ubuntu-20.04, cxx: g++-9 } #installed
+          - { name: ubuntu-22.04-gcc-12-autotools, os: ubuntu-22.04, cxx: g++-12 } #installed
+          - { name: ubuntu-22.04-gcc-11-autotools, os: ubuntu-22.04, cxx: g++-11 } #installed
           - { name: ubuntu-20.04-gcc-10-autotools, os: ubuntu-20.04, cxx: g++-10 } #installed
+          - { name: ubuntu-20.04-gcc-9-autotools, os: ubuntu-20.04, cxx: g++-9 } #installed
+          - { name: ubuntu-20.04-gcc-8-autotools, os: ubuntu-20.04, cxx: g++-8 }
 
     steps:
     - uses: actions/checkout@v3
","{'added': [(16, '          - { name: ubuntu-22.04-clang-14-autotools, os: ubuntu-22.04, cxx: clang++-14 }'), (17, '          - { name: ubuntu-22.04-clang-13-autotools, os: ubuntu-22.04, cxx: clang++-13 } #installed'), (18, '          - { name: ubuntu-22.04-clang-12-autotools, os: ubuntu-22.04, cxx: clang++-12 } #installed'), (19, '          - { name: ubuntu-20.04-clang-11-autotools, os: ubuntu-20.04, cxx: clang++-11 } #installed'), (22, '          - { name: ubuntu-22.04-gcc-12-autotools, os: ubuntu-22.04, cxx: g++-12 } #installed'), (23, '          - { name: ubuntu-22.04-gcc-11-autotools, os: ubuntu-22.04, cxx: g++-11 } #installed'), (25, '          - { name: ubuntu-20.04-gcc-9-autotools, os: ubuntu-20.04, cxx: g++-9 } #installed'), (26, '          - { name: ubuntu-20.04-gcc-8-autotools, os: ubuntu-20.04, cxx: g++-8 }')], 'deleted': [(16, '          - { name: ubuntu-20.04-clang-7-autotools, os: ubuntu-20.04, cxx: clang++-7 }'), (17, '          - { name: ubuntu-20.04-clang-8-autotools, os: ubuntu-20.04, cxx: clang++-8 } #installed'), (18, '          - { name: ubuntu-20.04-clang-9-autotools, os: ubuntu-20.04, cxx: clang++-9 } #installed'), (21, '          - { name: ubuntu-20.04-gcc-8-autotools, os: ubuntu-20.04, cxx: g++-8 } #installed'), (22, '          - { name: ubuntu-20.04-gcc-9-autotools, os: ubuntu-20.04, cxx: g++-9 } #installed')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,c38471b90dd92340ae17771df6e62884028b90ba,3245322d3d005af1590d8a11c0366717cbb8534a,"Update cmake.yml

G++ 8 is not installed by default on Ubuntu 20.04.","@@ -31,7 +31,7 @@ jobs:
           - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed
           - { name: ubuntu-20.04-gcc-10-cmake, os: ubuntu-20.04, cxx: g++-10 } #installed
           - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed
-          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 } #installed
+          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 }
 
     steps:
       - name: Install compilers on Linux
","{'added': [(34, '          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 }')], 'deleted': [(34, '          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 } #installed')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,3245322d3d005af1590d8a11c0366717cbb8534a,2aed93fa69734d746fba72748639d9728d69db56,Update cmake.yml,"@@ -21,7 +21,7 @@ jobs:
           - { name: macos-11-gcc-12-cmake, os: macos-11, cxx: g++-12 } #installed
           - { name: macos-11-gcc-11-cmake, os: macos-11, cxx: g++-11 } #installed
 
-          - { name: ubuntu-22.04-clang-12-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed
+          - { name: ubuntu-22.04-clang-14-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed
           - { name: ubuntu-22.04-clang-13-cmake, os: ubuntu-22.04, cxx: clang++-13 } #installed
           - { name: ubuntu-20.04-clang-12-cmake, os: ubuntu-20.04, cxx: clang++-12 } #installed
           - { name: ubuntu-20.04-clang-11-cmake, os: ubuntu-20.04, cxx: clang++-11 } #installed
","{'added': [(24, '          - { name: ubuntu-22.04-clang-14-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed')], 'deleted': [(24, '          - { name: ubuntu-22.04-clang-12-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,2aed93fa69734d746fba72748639d9728d69db56,98e61a7e10ce50d75917ec81d2c804d091a2e193,cmake.yml: Update compilers,"@@ -14,21 +14,24 @@ jobs:
       fail-fast: false
       matrix:
         config:
+        
+          - { name: macos-12-clang-14-cmake, os: macos-12, cxx: clang++ } # default
+          - { name: macos-11-clang-13-cmake, os: macos-11, cxx: clang++ } # default
 
-          - { name: macos-11-clang-12-cmake, os: macos-11, cxx: clang++ } # default
-          # - { name: macos-11-clang-11-cmake, os: macos-11, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed
-          - { name: macos-11-gcc-9-cmake, os: macos-11, cxx: g++-9 } #installed
-          - { name: macos-11-gcc-10-cmake, os: macos-11, cxx: g++-10 } #installed
+          - { name: macos-11-gcc-12-cmake, os: macos-11, cxx: g++-12 } #installed
           - { name: macos-11-gcc-11-cmake, os: macos-11, cxx: g++-11 } #installed
 
-          - { name: ubuntu-20.04-clang-7-cmake, os: ubuntu-20.04, cxx: clang++-7 }
-          - { name: ubuntu-20.04-clang-8-cmake, os: ubuntu-20.04, cxx: clang++-8 } #installed
-          - { name: ubuntu-20.04-clang-9-cmake, os: ubuntu-20.04, cxx: clang++-9 } #installed
+          - { name: ubuntu-22.04-clang-12-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed
+          - { name: ubuntu-22.04-clang-13-cmake, os: ubuntu-22.04, cxx: clang++-13 } #installed
+          - { name: ubuntu-20.04-clang-12-cmake, os: ubuntu-20.04, cxx: clang++-12 } #installed
+          - { name: ubuntu-20.04-clang-11-cmake, os: ubuntu-20.04, cxx: clang++-11 } #installed
           - { name: ubuntu-20.04-clang-10-cmake, os: ubuntu-20.04, cxx: clang++-10 } #installed
 
-          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 } #installed
-          - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed
+          - { name: ubuntu-22.04-gcc-12-cmake, os: ubuntu-22.04, cxx: g++-12 } #installed
+          - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed
           - { name: ubuntu-20.04-gcc-10-cmake, os: ubuntu-20.04, cxx: g++-10 } #installed
+          - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed
+          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 } #installed
 
     steps:
       - name: Install compilers on Linux
","{'added': [(17, ''), (18, '          - { name: macos-12-clang-14-cmake, os: macos-12, cxx: clang++ } # default'), (19, '          - { name: macos-11-clang-13-cmake, os: macos-11, cxx: clang++ } # default'), (21, '          - { name: macos-11-gcc-12-cmake, os: macos-11, cxx: g++-12 } #installed'), (24, '          - { name: ubuntu-22.04-clang-12-cmake, os: ubuntu-22.04, cxx: clang++-14 } #installed'), (25, '          - { name: ubuntu-22.04-clang-13-cmake, os: ubuntu-22.04, cxx: clang++-13 } #installed'), (26, '          - { name: ubuntu-20.04-clang-12-cmake, os: ubuntu-20.04, cxx: clang++-12 } #installed'), (27, '          - { name: ubuntu-20.04-clang-11-cmake, os: ubuntu-20.04, cxx: clang++-11 } #installed'), (30, '          - { name: ubuntu-22.04-gcc-12-cmake, os: ubuntu-22.04, cxx: g++-12 } #installed'), (31, '          - { name: ubuntu-22.04-gcc-11-cmake, os: ubuntu-22.04, cxx: g++-11 } #installed'), (33, '          - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed'), (34, '          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 } #installed')], 'deleted': [(18, '          - { name: macos-11-clang-12-cmake, os: macos-11, cxx: clang++ } # default'), (19, ""          # - { name: macos-11-clang-11-cmake, os: macos-11, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed""), (20, '          - { name: macos-11-gcc-9-cmake, os: macos-11, cxx: g++-9 } #installed'), (21, '          - { name: macos-11-gcc-10-cmake, os: macos-11, cxx: g++-10 } #installed'), (24, '          - { name: ubuntu-20.04-clang-7-cmake, os: ubuntu-20.04, cxx: clang++-7 }'), (25, '          - { name: ubuntu-20.04-clang-8-cmake, os: ubuntu-20.04, cxx: clang++-8 } #installed'), (26, '          - { name: ubuntu-20.04-clang-9-cmake, os: ubuntu-20.04, cxx: clang++-9 } #installed'), (29, '          - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 } #installed'), (30, '          - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed')]}",no
src\ccmain\paragraphs.cpp,src\ccmain\paragraphs.cpp,98e61a7e10ce50d75917ec81d2c804d091a2e193,ae3bfec757ddfab077a76f023b37d21ee49ba26a,"Improve the DebugDump output by slightly adjusting the format. (#4022)

* Improve the DebugDump output by slightly adjusting the format for the numeric columns, which was 3,3,3,3 and overflowing in our test runs, damaging the table layout. See rationale in the code comment:

------

  // The largest (positive and negative) numbers are reported for lindent & rindent.
  // While the column header has widths 5,4,4,5, it is therefore opportune to slightly
  // offset the widths in the format string here to allow ample space for lindent & rindent
  // while keeeping the final table output nicely readable: 4,5,5,4.

# Conflicts:
#	src/ccmain/paragraphs.cpp

* comment fix, pointed out by @stweil","@@ -514,8 +514,12 @@ void RowScratchRegisters::AppendDebugHeaderFields(std::vector<std::string> &head
 
 void RowScratchRegisters::AppendDebugInfo(const ParagraphTheory &theory,
                                           std::vector<std::string> &dbg) const {
-  char s[30];
-  snprintf(s, sizeof(s), ""[%3d,%3d;%3d,%3d]"", lmargin_, lindent_, rindent_, rmargin_);
+  char s[60];
+  // The largest (positive and negative) numbers are reported for lindent & rindent.
+  // While the column header has widths 5,4,4,5, it is therefore opportune to slightly
+  // offset the widths in the format string here to allow ample space for lindent & rindent
+  // while keeping the final table output nicely readable: 4,5,5,4.
+  snprintf(s, sizeof(s), ""[%4d,%5d;%5d,%4d]"", lmargin_, lindent_, rindent_, rmargin_);
   dbg.emplace_back(s);
   std::string model_string;
   model_string += static_cast<char>(GetLineType());
","{'added': [(517, '  char s[60];'), (518, '  // The largest (positive and negative) numbers are reported for lindent & rindent.'), (519, '  // While the column header has widths 5,4,4,5, it is therefore opportune to slightly'), (520, '  // offset the widths in the format string here to allow ample space for lindent & rindent'), (521, '  // while keeping the final table output nicely readable: 4,5,5,4.'), (522, '  snprintf(s, sizeof(s), ""[%4d,%5d;%5d,%4d]"", lmargin_, lindent_, rindent_, rmargin_);')], 'deleted': [(517, '  char s[30];'), (518, '  snprintf(s, sizeof(s), ""[%3d,%3d;%3d,%3d]"", lmargin_, lindent_, rindent_, rmargin_);')]}",yes
README.md,README.md,ae3bfec757ddfab077a76f023b37d21ee49ba26a,0977ded2b34d4b694f21a0046825fb2ecf572458,"Link to list of supported languages in docs (#4027)

Addresses https://github.com/tesseract-ocr/tessdoc/issues/83","@@ -32,7 +32,7 @@ It also needs [traineddata](https://tesseract-ocr.github.io/tessdoc/Data-Files.h
 Stefan Weil is the current lead developer. Ray Smith was the lead developer until 2018. The maintainer is Zdenko Podobny. For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)
 and GitHub's log of [contributors](https://github.com/tesseract-ocr/tesseract/graphs/contributors).
 
-Tesseract has **unicode (UTF-8) support**, and can **recognize more than 100 languages** ""out of the box"".
+Tesseract has **unicode (UTF-8) support**, and can **recognize [more than 100 languages](https://tesseract-ocr.github.io/tessdoc/Data-Files-in-different-versions.html)** ""out of the box"".
 
 Tesseract supports **[various image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.
 
","{'added': [(35, 'Tesseract has **unicode (UTF-8) support**, and can **recognize [more than 100 languages](https://tesseract-ocr.github.io/tessdoc/Data-Files-in-different-versions.html)** ""out of the box"".')], 'deleted': [(35, 'Tesseract has **unicode (UTF-8) support**, and can **recognize more than 100 languages** ""out of the box"".')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,0977ded2b34d4b694f21a0046825fb2ecf572458,066fc2e11c889d87ae4833e97670454c3006ae6f,"Update autotools.yml

gcc 7 does not implement all of C++17","@@ -18,7 +18,6 @@ jobs:
           - { name: ubuntu-20.04-clang-9-autotools, os: ubuntu-20.04, cxx: clang++-9 } #installed
           - { name: ubuntu-20.04-clang-10-autotools, os: ubuntu-20.04, cxx: clang++-10 } #installed
 
-          - { name: ubuntu-20.04-gcc-7-autotools, os: ubuntu-20.04, cxx: g++-7 } #installed
           - { name: ubuntu-20.04-gcc-8-autotools, os: ubuntu-20.04, cxx: g++-8 } #installed
           - { name: ubuntu-20.04-gcc-9-autotools, os: ubuntu-20.04, cxx: g++-9 } #installed
           - { name: ubuntu-20.04-gcc-10-autotools, os: ubuntu-20.04, cxx: g++-10 } #installed
","{'added': [], 'deleted': [(21, '          - { name: ubuntu-20.04-gcc-7-autotools, os: ubuntu-20.04, cxx: g++-7 } #installed')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,066fc2e11c889d87ae4833e97670454c3006ae6f,79065a03a386e7b9b7ec7b9b8496955b6b965681,"Update cmake.yml

gcc 7 does not implement all of C++17","@@ -26,7 +26,6 @@ jobs:
           - { name: ubuntu-20.04-clang-9-cmake, os: ubuntu-20.04, cxx: clang++-9 } #installed
           - { name: ubuntu-20.04-clang-10-cmake, os: ubuntu-20.04, cxx: clang++-10 } #installed
 
-          - { name: ubuntu-20.04-gcc-7-cmake, os: ubuntu-20.04, cxx: g++-7 } #installed
           - { name: ubuntu-20.04-gcc-8-cmake, os: ubuntu-20.04, cxx: g++-8 } #installed
           - { name: ubuntu-20.04-gcc-9-cmake, os: ubuntu-20.04, cxx: g++-9 } #installed
           - { name: ubuntu-20.04-gcc-10-cmake, os: ubuntu-20.04, cxx: g++-10 } #installed
","{'added': [], 'deleted': [(29, '          - { name: ubuntu-20.04-gcc-7-cmake, os: ubuntu-20.04, cxx: g++-7 } #installed')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,79065a03a386e7b9b7ec7b9b8496955b6b965681,9d71da785407d55074d51c65f382fd24839a7fed,"Update cmake.yml

fix cmake GA","@@ -145,12 +145,14 @@ jobs:
         run: |
              export ""PKG_CONFIG_PATH=$GITHUB_WORKSPACE/build/inst/lib/pkgconfig/:$(brew --prefix)/opt/libarchive/lib/pkgconfig:$(brew --prefix)/Library/Homebrew/os/mac/pkgconfig/11:$PKG_CONFIG_PATH""
              cd test
-             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libarchive libcurl) -pthread -std=c++11
+             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libcurl) -pthread -std=c++11
              ./basicapitest
         if: runner.os == 'macOS'
 
       - name: Display Compiler Version
         run: |
              ${{ matrix.config.cxx }} --version
-             git log -3 --pretty=format:'%h %ad %s | %an'
+             pwd
+             ls -la
+             # git log -3 --pretty=format:'%h %ad %s | %an'
         if: always()
","{'added': [(148, '             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libcurl) -pthread -std=c++11'), (155, '             pwd'), (156, '             ls -la'), (157, ""             # git log -3 --pretty=format:'%h %ad %s | %an'"")], 'deleted': [(148, '             ${{ matrix.config.cxx }} -o basicapitest testing/basicapitest.cpp ""-I$GITHUB_WORKSPACE/build/inst/include"" ""-L$GITHUB_WORKSPACE/build/inst/lib"" $(pkg-config --cflags --libs tesseract lept libarchive libcurl) -pthread -std=c++11'), (155, ""             git log -3 --pretty=format:'%h %ad %s | %an'"")]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,392e56cd87faa5c2660df0ba5c4232664af89a9d,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,"Update cmake.yml

libarchive is broken on macos: https://github.com/libarchive/libarchive/issues/1819","@@ -52,7 +52,7 @@ jobs:
         run: |
            brew install autoconf automake
            brew install leptonica
-           brew install libarchive
+           # brew install libarchive
            brew install pango
            brew install icu4c && brew link icu4c
            brew install cabextract
","{'added': [(55, '           # brew install libarchive')], 'deleted': [(55, '           brew install libarchive')]}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,9bac701d5e7eeb3c4e64a10d077419f90419937a,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,cmake: fix gcc-7 fatal error: filesystem: No such file or directory,"@@ -346,6 +346,7 @@ if(ICU_FOUND)
   # ############################################################################
 
   add_executable(unicharset_extractor unicharset_extractor.cpp)
+  set_property(TARGET unicharset_extractor PROPERTY CXX_STANDARD 17)
   target_link_libraries(unicharset_extractor unicharset_training)
   project_group(unicharset_extractor ""Training Tools"")
   install(
","{'added': [(349, '  set_property(TARGET unicharset_extractor PROPERTY CXX_STANDARD 17)')], 'deleted': []}",yes
src\ccmain\paramsd.cpp,src\ccmain\paramsd.cpp,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -99,7 +99,7 @@ void ParamsEditor::GetFirstWords(const char *s, // source string
                                  char *t        // target string
 ) {
   int full_length = strlen(s);
-  int reqd_len = 0; // No. of chars requird
+  int reqd_len = 0; // No. of chars required
   const char *next_word = s;
 
   while ((n > 0) && reqd_len < full_length) {
","{'added': [(102, '  int reqd_len = 0; // No. of chars required')], 'deleted': [(102, '  int reqd_len = 0; // No. of chars requird')]}",yes
src\ccstruct\ocrblock.cpp,src\ccstruct\ocrblock.cpp,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -312,7 +312,7 @@ static bool RightMargin(ICOORDELT_LIST *segments, int x, int *margin) {
 //  |  You  see this|    | |_| \|_| |   |rectangular      |
 //  |text is  flowed|    |      }   |   |boundary     that|
 //  |around  a  mid-|     \   ____  |   |forms the  ideal-|
-//  |cloumn portrait._____ \       /  __|ized  text margin|
+//  |column portrait._____ \       /  __|ized  text margin|
 //  |  Polyblobs     exist| \    /   |from which we should|
 //  |to account for insets|  |   |   |measure    paragraph|
 //  |which make  otherwise|  -----   |indentation.        |
","{'added': [(315, '//  |column portrait._____ \\       /  __|ized  text margin|')], 'deleted': [(315, '//  |cloumn portrait._____ \\       /  __|ized  text margin|')]}",yes
src\ccstruct\ratngs.cpp,src\ccstruct\ratngs.cpp,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -524,7 +524,7 @@ WERD_CHOICE &WERD_CHOICE::operator=(const WERD_CHOICE &source) {
 // bounding boxes, *this to get the unichars, and this->unicharset
 // to get the target positions. If small_caps is true, sub/super are not
 // considered, but dropcaps are.
-// NOTE: blobs_list should be the chopped_word blobs. (Fully segemented.)
+// NOTE: blobs_list should be the chopped_word blobs. (Fully segmented.)
 void WERD_CHOICE::SetScriptPositions(bool small_caps, TWERD *word, int debug) {
   // Initialize to normal.
   for (unsigned i = 0; i < length_; ++i) {
","{'added': [(527, '// NOTE: blobs_list should be the chopped_word blobs. (Fully segmented.)')], 'deleted': [(527, '// NOTE: blobs_list should be the chopped_word blobs. (Fully segemented.)')]}",yes
src\ccstruct\ratngs.h,src\ccstruct\ratngs.h,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -539,7 +539,7 @@ public:
   // bounding boxes, *this to get the unichars, and this->unicharset
   // to get the target positions. If small_caps is true, sub/super are not
   // considered, but dropcaps are.
-  // NOTE: blobs_list should be the chopped_word blobs. (Fully segemented.)
+  // NOTE: blobs_list should be the chopped_word blobs. (Fully segmented.)
   void SetScriptPositions(bool small_caps, TWERD *word, int debug = 0);
   // Sets all the script_pos_ positions to the given position.
   void SetAllScriptPositions(ScriptPos position);
","{'added': [(542, '  // NOTE: blobs_list should be the chopped_word blobs. (Fully segmented.)')], 'deleted': [(542, '  // NOTE: blobs_list should be the chopped_word blobs. (Fully segemented.)')]}",yes
src\ccutil\unicharmap.h,src\ccutil\unicharmap.h,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -33,7 +33,7 @@ public:
 
   ~UNICHARMAP();
 
-  // Insert the given unichar represention in the UNICHARMAP and associate it
+  // Insert the given unichar representation in the UNICHARMAP and associate it
   // with the given id. The length of the representation MUST be non-zero.
   void insert(const char *const unichar_repr, UNICHAR_ID id);
 
","{'added': [(36, '  // Insert the given unichar representation in the UNICHARMAP and associate it')], 'deleted': [(36, '  // Insert the given unichar represention in the UNICHARMAP and associate it')]}",yes
src\classify\mfoutline.cpp,src\classify\mfoutline.cpp,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -19,7 +19,7 @@
 
 #include ""blobs.h""
 #include ""classify.h""
-#include ""clusttool.h"" //If remove you get cought in a loop somewhere
+#include ""clusttool.h"" //If remove you get caught in a loop somewhere
 #include ""mfx.h""
 #include ""params.h""
 
","{'added': [(22, '#include ""clusttool.h"" //If remove you get caught in a loop somewhere')], 'deleted': [(22, '#include ""clusttool.h"" //If remove you get cought in a loop somewhere')]}",yes
src\dict\dawg.h,src\dict\dawg.h,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -112,7 +112,7 @@ public:
   /// Magic number to determine endianness when reading the Dawg from file.
   static const int16_t kDawgMagicNumber = 42;
   /// A special unichar id that indicates that any appropriate pattern
-  /// (e.g.dicitonary word, 0-9 digit, etc) can be inserted instead
+  /// (e.g.dictionary word, 0-9 digit, etc) can be inserted instead
   /// Used for expressing patterns in punctuation and number Dawgs.
   static const UNICHAR_ID kPatternUnicharID = 0;
 
","{'added': [(115, '  /// (e.g.dictionary word, 0-9 digit, etc) can be inserted instead')], 'deleted': [(115, '  /// (e.g.dicitonary word, 0-9 digit, etc) can be inserted instead')]}",yes
src\lstm\recodebeam.h,src\lstm\recodebeam.h,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -211,8 +211,8 @@ public:
   // Generates debug output of the content of the beams after a Decode.
   void DebugBeams(const UNICHARSET &unicharset) const;
 
-  // Extract the best charakters from the current decode iteration and block
-  // those symbols for the next iteration. In contrast to tesseracts standard
+  // Extract the best characters from the current decode iteration and block
+  // those symbols for the next iteration. In contrast to Tesseract's standard
   // method to chose the best overall node chain, this methods looks at a short
   // node chain segmented by the character boundaries and chooses the best
   // option independent of the remaining node chain.
","{'added': [(214, '  // Extract the best characters from the current decode iteration and block'), (215, ""  // those symbols for the next iteration. In contrast to Tesseract's standard"")], 'deleted': [(214, '  // Extract the best charakters from the current decode iteration and block'), (215, '  // those symbols for the next iteration. In contrast to tesseracts standard')]}",yes
src\textord\tablerecog.cpp,src\textord\tablerecog.cpp,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -365,7 +365,7 @@ bool StructuredTable::VerifyLinedTableCells() {
 
 // TODO(nbeato): Could be much better than this.
 // Examples:
-//   - Caclulate the percentage of filled cells.
+//   - Calculate the percentage of filled cells.
 //   - Calculate the average number of ColPartitions per cell.
 //   - Calculate the number of cells per row with partitions.
 //   - Check if ColPartitions in adjacent cells are similar.
","{'added': [(368, '//   - Calculate the percentage of filled cells.')], 'deleted': [(368, '//   - Caclulate the percentage of filled cells.')]}",yes
src\textord\topitch.cpp,src\textord\topitch.cpp,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1105,7 +1105,7 @@ float tune_row_pitch(           // find fp cells
     float &best_sp_sd,          // space sd
     int16_t &best_mid_cuts,     // no of cheap cuts
     ICOORDELT_LIST *best_cells, // row cells
-    bool testing_on             // inidividual words
+    bool testing_on             // individual words
 ) {
   int pitch_delta;           // offset pitch
   int16_t mid_cuts;          // cheap cuts
@@ -1204,7 +1204,7 @@ float tune_row_pitch2(          // find fp cells
     float &best_sp_sd,          // space sd
     int16_t &best_mid_cuts,     // no of cheap cuts
     ICOORDELT_LIST *best_cells, // row cells
-    bool testing_on             // inidividual words
+    bool testing_on             // individual words
 ) {
   int pitch_delta;    // offset pitch
   int16_t pixel;      // pixel coord
@@ -1297,7 +1297,7 @@ float compute_pitch_sd(        // find fp cells
     float &sp_sd,              // space sd
     int16_t &mid_cuts,         // no of free cuts
     ICOORDELT_LIST *row_cells, // list of chop pts
-    bool testing_on,           // inidividual words
+    bool testing_on,           // individual words
     int16_t start,             // start of good range
     int16_t end                // end of good range
 ) {
@@ -1453,7 +1453,7 @@ float compute_pitch_sd2(       // find fp cells
     int16_t &occupation,       // no of occupied cells
     int16_t &mid_cuts,         // no of free cuts
     ICOORDELT_LIST *row_cells, // list of chop pts
-    bool testing_on,           // inidividual words
+    bool testing_on,           // individual words
     int16_t start,             // start of good range
     int16_t end                // end of good range
 ) {
","{'added': [(1108, '    bool testing_on             // individual words'), (1207, '    bool testing_on             // individual words'), (1300, '    bool testing_on,           // individual words'), (1456, '    bool testing_on,           // individual words')], 'deleted': [(1108, '    bool testing_on             // inidividual words'), (1207, '    bool testing_on             // inidividual words'), (1300, '    bool testing_on,           // inidividual words'), (1456, '    bool testing_on,           // inidividual words')]}",yes
src\textord\topitch.h,src\textord\topitch.h,f1e3697dd4ff6ee3726edc629a2d63b6a9dcade8,0221094275d4a288ab5f7b0b3e52bb4ad61b60ba,"Fix some typos in comments (found by codespell)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -117,7 +117,7 @@ float tune_row_pitch(           // find fp cells
     float &best_sp_sd,          // space sd
     int16_t &best_mid_cuts,     // no of cheap cuts
     ICOORDELT_LIST *best_cells, // row cells
-    bool testing_on             // inidividual words
+    bool testing_on             // individual words
 );
 float tune_row_pitch2(          // find fp cells
     TO_ROW *row,                // row to do
@@ -129,7 +129,7 @@ float tune_row_pitch2(          // find fp cells
     float &best_sp_sd,          // space sd
     int16_t &best_mid_cuts,     // no of cheap cuts
     ICOORDELT_LIST *best_cells, // row cells
-    bool testing_on             // inidividual words
+    bool testing_on             // individual words
 );
 float compute_pitch_sd(        // find fp cells
     TO_ROW *row,               // row to do
@@ -141,7 +141,7 @@ float compute_pitch_sd(        // find fp cells
     float &sp_sd,              // space sd
     int16_t &mid_cuts,         // no of free cuts
     ICOORDELT_LIST *row_cells, // list of chop pts
-    bool testing_on,           // inidividual words
+    bool testing_on,           // individual words
     int16_t start = 0,         // start of good range
     int16_t end = 0            // end of good range
 );
@@ -154,7 +154,7 @@ float compute_pitch_sd2(       // find fp cells
     int16_t &occupation,       // no of occupied cells
     int16_t &mid_cuts,         // no of free cuts
     ICOORDELT_LIST *row_cells, // list of chop pts
-    bool testing_on,           // inidividual words
+    bool testing_on,           // individual words
     int16_t start = 0,         // start of good range
     int16_t end = 0            // end of good range
 );
","{'added': [(120, '    bool testing_on             // individual words'), (132, '    bool testing_on             // individual words'), (144, '    bool testing_on,           // individual words'), (157, '    bool testing_on,           // individual words')], 'deleted': [(120, '    bool testing_on             // inidividual words'), (132, '    bool testing_on             // inidividual words'), (144, '    bool testing_on,           // inidividual words'), (157, '    bool testing_on,           // inidividual words')]}",yes
Makefile.am,Makefile.am,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -821,7 +821,7 @@ if DISABLED_LEGACY_ENGINE
 training_CPPFLAGS += -DDISABLED_LEGACY_ENGINE
 endif
 
-# TODO: training programs can not be linked to shared library created
+# TODO: training programs cannot be linked to shared library created
 # with -fvisibility
 if VISIBILITY
 AM_LDFLAGS += -all-static
","{'added': [(824, '# TODO: training programs cannot be linked to shared library created')], 'deleted': [(824, '# TODO: training programs can not be linked to shared library created')]}",yes
configure.ac,configure.ac,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -640,7 +640,7 @@ AM_COND_IF([ENABLE_TRAINING],
    echo ""$ sudo make training-install""
    echo """"],
   [
-   echo ""You can not build training tools because of missing dependency.""
+   echo ""You cannot build training tools because of missing dependency.""
    echo ""Check configure output for details.""
    echo """"]
 )
","{'added': [(643, '   echo ""You cannot build training tools because of missing dependency.""')], 'deleted': [(643, '   echo ""You can not build training tools because of missing dependency.""')]}",yes
src\ccstruct\boxread.cpp,src\ccstruct\boxread.cpp,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -78,7 +78,7 @@ bool ReadAllBoxes(int target_page, bool skip_blanks, const char *filename, std::
                   std::vector<int> *pages) {
   std::ifstream input(BoxFileName(filename).c_str(), std::ios::in | std::ios::binary);
   if (input.fail()) {
-    tprintf(""Can not read box data from '%s'.\n"", BoxFileName(filename).c_str());
+    tprintf(""Cannot read box data from '%s'.\n"", BoxFileName(filename).c_str());
     tprintf(""Does it exists?\n"");
     return false;
   }
","{'added': [(81, '    tprintf(""Cannot read box data from \'%s\'.\\n"", BoxFileName(filename).c_str());')], 'deleted': [(81, '    tprintf(""Can not read box data from \'%s\'.\\n"", BoxFileName(filename).c_str());')]}",yes
src\ccutil\unicharset.cpp,src\ccutil\unicharset.cpp,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1104,7 +1104,7 @@ CHAR_FRAGMENT *CHAR_FRAGMENT::parse_from_string(const char *string) {
   const char *ptr = string;
   int len = strlen(string);
   if (len < kMinLen || *ptr != kSeparator) {
-    return nullptr; // this string can not represent a fragment
+    return nullptr; // this string cannot represent a fragment
   }
   ptr++; // move to the next character
   int step = 0;
","{'added': [(1107, '    return nullptr; // this string cannot represent a fragment')], 'deleted': [(1107, '    return nullptr; // this string can not represent a fragment')]}",yes
src\dict\dawg.h,src\dict\dawg.h,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -400,7 +400,7 @@ public:
 //
 /// Concrete class that can operate on a compacted (squished) Dawg (read,
 /// search and write to file). This class is read-only in the sense that
-/// new words can not be added to an instance of SquishedDawg.
+/// new words cannot be added to an instance of SquishedDawg.
 /// The underlying representation of the nodes and edges in SquishedDawg
 /// is stored as a contiguous EDGE_ARRAY (read from file or given as an
 /// argument to the constructor).
","{'added': [(403, '/// new words cannot be added to an instance of SquishedDawg.')], 'deleted': [(403, '/// new words can not be added to an instance of SquishedDawg.')]}",yes
src\dict\permdawg.cpp,src\dict\permdawg.cpp,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -357,7 +357,7 @@ bool Dict::fragment_state_okay(UNICHAR_ID curr_unichar_id, float curr_rating, fl
   }
   if (word_ending && char_frag_info->fragment) {
     if (debug) {
-      tprintf(""Word can not end with a fragment\n"");
+      tprintf(""Word cannot end with a fragment\n"");
     }
     return false;
   }
","{'added': [(360, '      tprintf(""Word cannot end with a fragment\\n"");')], 'deleted': [(360, '      tprintf(""Word can not end with a fragment\\n"");')]}",yes
src\textord\makerow.cpp,src\textord\makerow.cpp,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1336,7 +1336,7 @@ void Textord::compute_block_xheight(TO_BLOCK *block, float gradient) {
     // Try to search for two modes in row_cap_heights that could
     // be the xheight and the capheight (e.g. some of the rows
     // were lowercase, but did not have enough (a/de)scenders.
-    // If such two modes can not be found, this block is most
+    // If such two modes cannot be found, this block is most
     // likely all caps (or all small caps, in which case the code
     // still works as intended).
     compute_xheight_from_modes(
","{'added': [(1339, '    // If such two modes cannot be found, this block is most')], 'deleted': [(1339, '    // If such two modes can not be found, this block is most')]}",yes
src\training\pango\pango_font_info.cpp,src\training\pango\pango_font_info.cpp,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -725,7 +725,7 @@ void FontUtils::PangoFontTypeInfo() {
              CAIRO_FONT_TYPE_USER) {
     printf(""Using CAIRO_FONT_TYPE_USER.\n"");
   } else if (!font_map) {
-    printf(""Can not create pango cairo font map!\n"");
+    printf(""Cannot create pango cairo font map!\n"");
   }
 }
 
","{'added': [(728, '    printf(""Cannot create pango cairo font map!\\n"");')], 'deleted': [(728, '    printf(""Can not create pango cairo font map!\\n"");')]}",yes
src\training\unicharset_extractor.cpp,src\training\unicharset_extractor.cpp,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -77,7 +77,7 @@ static int Main(int argc, char **argv) {
                    /*continue_on_failure*/ false, /*boxes*/ nullptr, &texts,
                    /*box_texts*/ nullptr, /*pages*/ nullptr);
       if (!res) {
-        tprintf(""Can not read box data from '%s'\n"", argv[arg]);
+        tprintf(""Cannot read box data from '%s'\n"", argv[arg]);
         return EXIT_FAILURE;
       }
     } else {
","{'added': [(80, '        tprintf(""Cannot read box data from \'%s\'\\n"", argv[arg]);')], 'deleted': [(80, '        tprintf(""Can not read box data from \'%s\'\\n"", argv[arg]);')]}",yes
src\wordrec\language_model.cpp,src\wordrec\language_model.cpp,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1010,7 +1010,7 @@ float LanguageModel::ComputeDenom(BLOB_CHOICE_LIST *curr_list) {
   assert(len != 0);
   // The ideal situation would be to have the classifier scores for
   // classifying each position as each of the characters in the unicharset.
-  // Since we can not do this because of speed, we add a very crude estimate
+  // Since we cannot do this because of speed, we add a very crude estimate
   // of what these scores for the ""missing"" classifications would sum up to.
   denom +=
       (dict_->getUnicharset().size() - len) * CertaintyScore(language_model_ngram_nonmatch_score);
","{'added': [(1013, '  // Since we cannot do this because of speed, we add a very crude estimate')], 'deleted': [(1013, '  // Since we can not do this because of speed, we add a very crude estimate')]}",yes
src\wordrec\language_model.h,src\wordrec\language_model.h,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -267,7 +267,7 @@ protected:
   // could be pruned out (i.e. is neither a system/user/frequent dictionary
   // nor a top choice path).
   // In non-space delimited languages all paths can be ""somewhat"" dictionary
-  // words. In such languages we can not do dictionary-driven path pruning,
+  // words. In such languages we cannot do dictionary-driven path pruning,
   // so paths with non-empty dawg_info are considered prunable.
   inline bool PrunablePath(const ViterbiStateEntry &vse) {
     if (vse.top_choice_flags) {
","{'added': [(270, '  // words. In such languages we cannot do dictionary-driven path pruning,')], 'deleted': [(270, '  // words. In such languages we can not do dictionary-driven path pruning,')]}",yes
src\wordrec\segsearch.cpp,src\wordrec\segsearch.cpp,1e04be842d48254009c4e0e097e322815e7df04f,7becbbd627287cc6747d889ec51ca8682894f124,"Replace 'can not' by 'cannot'

Both forms are used in American English, but 'cannot' is more common
(also in Tesseract code), so use it always.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -242,7 +242,7 @@ void Wordrec::ProcessSegSearchPainPoint(float pain_point_priority, const MATRIX_
   if (lst == nullptr) {
     ratings->put(pain_point.col, pain_point.row, classified);
   } else {
-    // We can not delete old BLOB_CHOICEs, since they might contain
+    // We cannot delete old BLOB_CHOICEs, since they might contain
     // ViterbiStateEntries that are parents of other ""active"" entries.
     // Thus if the matrix cell already contains classifications we add
     // the new ones to the beginning of the list.
","{'added': [(245, '    // We cannot delete old BLOB_CHOICEs, since they might contain')], 'deleted': [(245, '    // We can not delete old BLOB_CHOICEs, since they might contain')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,7becbbd627287cc6747d889ec51ca8682894f124,efa89c6dfa0106d19a5939654eba24427424e731,Update cmake-win64.yml,"@@ -39,7 +39,6 @@ jobs:
              git clone --depth 1 https://github.com/zlib-ng/zlib-ng.git
              cd zlib-ng
              cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
-             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
              cmake --build build --config Release --target install
              cd ..
 
","{'added': [], 'deleted': [(42, '             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF')]}",yes
tesseract.pc.cmake,tesseract.pc.cmake,5e116fa5cad249b8a08d22af652cf52f44fbb8cd,1c097823542459432043454108c199d3eb507f36,"Fix libdir in tesseract.pc from CMake

tesseract.pc.cmake was hardcoding libdir to
`{prefix}/lib`, which is wrong for systems that use
`/usr/lib64/` on 64-bit. `CMAKE_INSTALL_LIBDIR`
is already expected to contain the libdir path
relative to the install prefix.","@@ -1,6 +1,6 @@
 prefix=@CMAKE_INSTALL_PREFIX@
 exec_prefix=${prefix}/bin
-libdir=${prefix}/lib
+libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
 includedir=${prefix}/include
 
 Name: @tesseract_NAME@
","{'added': [(3, 'libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@')], 'deleted': [(3, 'libdir=${prefix}/lib')]}",yes
CMakeLists.txt,CMakeLists.txt,1c097823542459432043454108c199d3eb507f36,e3fb0c657d0015552dea12a34cb3b3e55315b589,msvc debug: fix wrong lib name in generated pkgconfig file (#4008),"@@ -812,14 +812,8 @@ set_target_properties(libtesseract
 set_target_properties(libtesseract
   PROPERTIES SOVERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH})
 
-if(WIN32)
-  set_target_properties(libtesseract
-     PROPERTIES OUTPUT_NAME tesseract${VERSION_MAJOR}${VERSION_MINOR})
-  set_target_properties(libtesseract
-     PROPERTIES DEBUG_OUTPUT_NAME tesseract${VERSION_MAJOR}${VERSION_MINOR}d)
-else()
-  set_target_properties(libtesseract PROPERTIES OUTPUT_NAME tesseract)
-endif()
+set_target_properties(libtesseract
+  PROPERTIES OUTPUT_NAME tesseract$<$<BOOL:${WIN32}>:${VERSION_MAJOR}${VERSION_MINOR}$<$<CONFIG:DEBUG>:d>>)
 
 if(SW_BUILD)
   target_link_libraries(libtesseract PUBLIC org.sw.demo.danbloomberg.leptonica
@@ -884,8 +878,10 @@ get_target_property(tesseract_NAME libtesseract NAME)
 get_target_property(tesseract_VERSION libtesseract VERSION)
 get_target_property(tesseract_OUTPUT_NAME libtesseract OUTPUT_NAME)
 
-configure_file(tesseract.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc
+configure_file(tesseract.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in
                @ONLY)
+# to resolve generator expression in OUTPUT_NAME
+file(GENERATE OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc INPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in)
 
 configure_package_config_file(
   cmake/templates/TesseractConfig.cmake.in
@@ -897,8 +893,8 @@ write_basic_package_version_file(
   VERSION ${PACKAGE_VERSION}
   COMPATIBILITY SameMajorVersion)
 
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc
-        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc
+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig RENAME tesseract.pc)
 install(TARGETS tesseract DESTINATION bin)
 install(
   TARGETS libtesseract
","{'added': [(815, 'set_target_properties(libtesseract'), (816, '  PROPERTIES OUTPUT_NAME tesseract$<$<BOOL:${WIN32}>:${VERSION_MAJOR}${VERSION_MINOR}$<$<CONFIG:DEBUG>:d>>)'), (881, 'configure_file(tesseract.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in'), (883, '# to resolve generator expression in OUTPUT_NAME'), (884, 'file(GENERATE OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc INPUT ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc.in)'), (896, 'install(FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract_$<CONFIG>.pc'), (897, '        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig RENAME tesseract.pc)')], 'deleted': [(815, 'if(WIN32)'), (816, '  set_target_properties(libtesseract'), (817, '     PROPERTIES OUTPUT_NAME tesseract${VERSION_MAJOR}${VERSION_MINOR})'), (818, '  set_target_properties(libtesseract'), (819, '     PROPERTIES DEBUG_OUTPUT_NAME tesseract${VERSION_MAJOR}${VERSION_MINOR}d)'), (820, 'else()'), (821, '  set_target_properties(libtesseract PROPERTIES OUTPUT_NAME tesseract)'), (822, 'endif()'), (887, 'configure_file(tesseract.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc'), (900, 'install(FILES ${CMAKE_CURRENT_BINARY_DIR}/tesseract.pc'), (901, '        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)')]}",yes
src\ccutil\params.h,src\ccutil\params.h,2025b53de6b3d97285d7c5f80497493007c586c3,a3b9acfa4a2f28a9956e830c7354875ebb7213b4,"Fix build with gcc 13 by including <cstdint>

gcc 13 moved some includes around and as a result <cstdint> is
no longer transitively included [1]. Explicitly include it for
int32_t.

[1] https://gcc.gnu.org/gcc-13/porting_to.html#header-dep-changes

Signed-off-by: Khem Raj <raj.khem@gmail.com>","@@ -21,6 +21,7 @@
 
 #include <tesseract/export.h> // for TESS_API
 
+#include <cstdint>
 #include <cstdio>
 #include <cstring>
 #include <string>
","{'added': [(24, '#include <cstdint>')], 'deleted': []}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,680d1e231c11e31c743eca4b5af67b7b96e40ef7,3bedea1bddf0c2df7eddc1f1526949ded3978878,Fix linkage of icu and pango,"@@ -259,12 +259,10 @@ if(ICU_FOUND)
     target_link_libraries(unicharset_training
                           PUBLIC common_training org.sw.demo.unicode.icu.i18n)
   else()
-    if(${CMAKE_VERSION} VERSION_LESS ""3.12.0"")
-      target_link_libraries(unicharset_training PUBLIC common_training
-                                                       PkgConfig::ICU)
+    if(PKG_CONFIG_FOUND)
+      target_link_libraries(unicharset_training PUBLIC common_training PkgConfig::ICU)
     else()
-      target_link_libraries(unicharset_training PUBLIC common_training
-                                                       ${ICU_LIBRARIES})
+      target_link_libraries(unicharset_training PUBLIC common_training ${ICU_LIBRARIES})
     endif()
   endif()
   target_include_directories(unicharset_training
@@ -388,11 +386,7 @@ if(ICU_FOUND)
         target_include_directories(pango_training BEFORE
                                    PUBLIC ${PANGO_INCLUDE_DIRS})
         target_compile_definitions(pango_training PUBLIC -DPANGO_ENABLE_ENGINE)
-        if(${CMAKE_VERSION} VERSION_LESS ""3.12.0"")
-          target_link_libraries(pango_training PUBLIC PkgConfig::PANGO)
-        else()
-          target_link_libraries(pango_training PUBLIC ${PANGO_LINK_LIBRARIES})
-        endif()
+        target_link_libraries(pango_training PUBLIC PkgConfig::PANGO)
       endif()
     endif()
     target_include_directories(pango_training
","{'added': [(262, '    if(PKG_CONFIG_FOUND)'), (263, '      target_link_libraries(unicharset_training PUBLIC common_training PkgConfig::ICU)'), (265, '      target_link_libraries(unicharset_training PUBLIC common_training ${ICU_LIBRARIES})'), (389, '        target_link_libraries(pango_training PUBLIC PkgConfig::PANGO)')], 'deleted': [(262, '    if(${CMAKE_VERSION} VERSION_LESS ""3.12.0"")'), (263, '      target_link_libraries(unicharset_training PUBLIC common_training'), (264, '                                                       PkgConfig::ICU)'), (266, '      target_link_libraries(unicharset_training PUBLIC common_training'), (267, '                                                       ${ICU_LIBRARIES})'), (391, '        if(${CMAKE_VERSION} VERSION_LESS ""3.12.0"")'), (392, '          target_link_libraries(pango_training PUBLIC PkgConfig::PANGO)'), (393, '        else()'), (394, '          target_link_libraries(pango_training PUBLIC ${PANGO_LINK_LIBRARIES})'), (395, '        endif()')]}",yes
src\wordrec\language_model.cpp,src\wordrec\language_model.cpp,3bedea1bddf0c2df7eddc1f1526949ded3978878,1852afe9f832db106472acfaf92a09b920912560,"Fix FP division by zero in LanguageModel::ExtractFeaturesFromPath (issue #3995)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1375,7 +1375,12 @@ void LanguageModel::ExtractFeaturesFromPath(const ViterbiStateEntry &vse, float
   // features[PTRAIN_NUM_BAD_FONT] = vse.consistency_info.inconsistent_font;
 
   // Classifier-related features.
-  features[PTRAIN_RATING_PER_CHAR] = vse.ratings_sum / vse.outline_length;
+  if (vse.outline_length > 0.0f) {
+    features[PTRAIN_RATING_PER_CHAR] = vse.ratings_sum / vse.outline_length;
+  } else {
+    // Avoid FP division by 0.
+    features[PTRAIN_RATING_PER_CHAR] = 0.0f;
+  }
 }
 
 WERD_CHOICE *LanguageModel::ConstructWord(ViterbiStateEntry *vse, WERD_RES *word_res,
","{'added': [(1378, '  if (vse.outline_length > 0.0f) {'), (1379, '    features[PTRAIN_RATING_PER_CHAR] = vse.ratings_sum / vse.outline_length;'), (1380, '  } else {'), (1381, '    // Avoid FP division by 0.'), (1382, '    features[PTRAIN_RATING_PER_CHAR] = 0.0f;'), (1383, '  }')], 'deleted': [(1378, '  features[PTRAIN_RATING_PER_CHAR] = vse.ratings_sum / vse.outline_length;')]}",yes
src\wordrec\language_model.cpp,src\wordrec\language_model.cpp,1852afe9f832db106472acfaf92a09b920912560,4142b328157fa5acdb5780308ecf308f1c6e2ec7,"Remove unneeded type cast in LanguageModel::ExtractFeaturesFromPath

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1375,7 +1375,7 @@ void LanguageModel::ExtractFeaturesFromPath(const ViterbiStateEntry &vse, float
   // features[PTRAIN_NUM_BAD_FONT] = vse.consistency_info.inconsistent_font;
 
   // Classifier-related features.
-  features[PTRAIN_RATING_PER_CHAR] = vse.ratings_sum / static_cast<float>(vse.outline_length);
+  features[PTRAIN_RATING_PER_CHAR] = vse.ratings_sum / vse.outline_length;
 }
 
 WERD_CHOICE *LanguageModel::ConstructWord(ViterbiStateEntry *vse, WERD_RES *word_res,
","{'added': [(1378, '  features[PTRAIN_RATING_PER_CHAR] = vse.ratings_sum / vse.outline_length;')], 'deleted': [(1378, '  features[PTRAIN_RATING_PER_CHAR] = vse.ratings_sum / static_cast<float>(vse.outline_length);')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,4142b328157fa5acdb5780308ecf308f1c6e2ec7,2a7ed8b6a5abe10f0d59de686a6a2ff23bbeee06,"Fix some whitespace issues in source code and text files

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -6,16 +6,16 @@ body:
       value: |
         ### Attention
         Before you submit an issue, please review [the guidelines for this repository](https://github.com/tesseract-ocr/tesseract/blob/main/CONTRIBUTING.md).
-                 
+
         Have a question? Need help?
         Please use [our forum](https://groups.google.com/g/tesseract-ocr).
-        
+
         Please follow these rules:
         * Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).
         * Don't open an issue which involves 3rd party tools that use Tesseract as a library. Only report about an issue with the Tesseract command line tool or the C/C++ API.
         * Please provide the input image.
         * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.
-        * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report. 
+        * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report.
   - type: textarea
     attributes:
       label: Basic Information
@@ -51,7 +51,7 @@ body:
   - type: textarea
     attributes:
       label: Compiler
-      placeholder: ""Enter compiler name and version (Examples: MSVC 2019 16.11, Clang 13.0.1, GCC 11.2, Xcode 14.1)"" 
+      placeholder: ""Enter compiler name and version (Examples: MSVC 2019 16.11, Clang 13.0.1, GCC 11.2, Xcode 14.1)""
   - type: textarea
     attributes:
       label: Virtualization / Containers
","{'added': [(9, ''), (12, ''), (18, ""        * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report.""), (54, '      placeholder: ""Enter compiler name and version (Examples: MSVC 2019 16.11, Clang 13.0.1, GCC 11.2, Xcode 14.1)""')], 'deleted': [(9, ''), (12, ''), (18, ""        * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report.""), (54, '      placeholder: ""Enter compiler name and version (Examples: MSVC 2019 16.11, Clang 13.0.1, GCC 11.2, Xcode 14.1)""')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,4142b328157fa5acdb5780308ecf308f1c6e2ec7,2a7ed8b6a5abe10f0d59de686a6a2ff23bbeee06,"Fix some whitespace issues in source code and text files

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -122,4 +122,3 @@ jobs:
           tesseract --list-langs
           echo ""Checking OCR process""
           tesseract test/testing/phototest.tif -
-      
","{'added': [], 'deleted': [(125, '')]}",yes
.mailmap,.mailmap,4142b328157fa5acdb5780308ecf308f1c6e2ec7,2a7ed8b6a5abe10f0d59de686a6a2ff23bbeee06,"Fix some whitespace issues in source code and text files

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -13,7 +13,7 @@ Ray Smith <rays@google.com> <rays@rays-glaptop.roam.corp.google.com>
 Ray Smith <rays@google.com> <theraysmith@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
 Ray Smith <rays@google.com> <theraysmith@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
 
-Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com> 
+Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com>
 Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com> <5095331+Shreeshrii@users.noreply.github.com5095331+Shreeshrii@users.noreply.github.com>
 
 Stefan Weil <sw@weilnetz.de>
@@ -26,4 +26,4 @@ Stefan Weil <sw@weilnetz.de> <stweil@ub-blade-02.bib.uni-mannheim.de>
 Zdenko Podobný <zdenop@gmail.com>
 Zdenko Podobný <zdenop@gmail.com> <zdenko.podobny@nbazp1.SPS>
 Zdenko Podobný <zdenop@gmail.com> <zdenop@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
- Zdenko Podobný <zdenop@gmail.com> <zdenop@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+Zdenko Podobný <zdenop@gmail.com> <zdenop@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
","{'added': [(16, 'Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com>'), (29, 'Zdenko Podobný <zdenop@gmail.com> <zdenop@d0cd1f9f-072b-0410-8dd7-cf729c803f20>')], 'deleted': [(16, 'Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com>'), (29, ' Zdenko Podobný <zdenop@gmail.com> <zdenop@d0cd1f9f-072b-0410-8dd7-cf729c803f20>')]}",yes
README.md,README.md,1851e5a1c44a8a77f7c3f78ff78b5a4b01810913,0ef192050a34d046f0b324f2a1167adbdd360cdc,"Update README.md

Added a link explaining what an OCR Engine is","@@ -26,7 +26,7 @@
 
 This package contains an **OCR engine** - `libtesseract` and a **command line program** - `tesseract`.
 
-Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns. Compatibility with Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).
+Tesseract 4 adds a new neural net (LSTM) based [OCR engine](https://en.wikipedia.org/wiki/Optical_character_recognition) which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns. Compatibility with Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).
 It also needs [traineddata](https://tesseract-ocr.github.io/tessdoc/Data-Files.html) files which support the legacy engine, for example those from the [tessdata](https://github.com/tesseract-ocr/tessdata) repository.
 
 Stefan Weil is the current lead developer. Ray Smith was the lead developer until 2018. The maintainer is Zdenko Podobny. For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)
","{'added': [(29, 'Tesseract 4 adds a new neural net (LSTM) based [OCR engine](https://en.wikipedia.org/wiki/Optical_character_recognition) which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns. Compatibility with Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).')], 'deleted': [(29, 'Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns. Compatibility with Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).')]}",yes
src\training\unicharset\lang_model_helpers.cpp,src\training\unicharset\lang_model_helpers.cpp,0ef192050a34d046f0b324f2a1167adbdd360cdc,804b63646ff1b367e6c758ea19354a24b8ced17e,"fix ""cannot pass non-trivial object of type 'std::string'""","@@ -239,7 +239,7 @@ int CombineLangModel(const UNICHARSET &unicharset, const std::string &script_dir
     tprintf(""Error writing output traineddata file!!\n"");
     return EXIT_FAILURE;
   }
-  tprintf(""Created %s/%s/%s.traineddata"", output_dir, lang, lang);
+  tprintf(""Created %s/%s/%s.traineddata"", output_dir.c_str(), lang.c_str(), lang.c_str());
   return EXIT_SUCCESS;
 }
 
","{'added': [(242, '  tprintf(""Created %s/%s/%s.traineddata"", output_dir.c_str(), lang.c_str(), lang.c_str());')], 'deleted': [(242, '  tprintf(""Created %s/%s/%s.traineddata"", output_dir, lang, lang);')]}",yes
src\training\unicharset\lang_model_helpers.cpp,src\training\unicharset\lang_model_helpers.cpp,804b63646ff1b367e6c758ea19354a24b8ced17e,005bfe4950a8c82fc525af9b4c7fdd410317cae7,show out filename on successful created of traineddata (combine_lang_model),"@@ -239,6 +239,7 @@ int CombineLangModel(const UNICHARSET &unicharset, const std::string &script_dir
     tprintf(""Error writing output traineddata file!!\n"");
     return EXIT_FAILURE;
   }
+  tprintf(""Created %s/%s/%s.traineddata"", output_dir, lang, lang);
   return EXIT_SUCCESS;
 }
 
","{'added': [(242, '  tprintf(""Created %s/%s/%s.traineddata"", output_dir, lang, lang);')], 'deleted': []}",yes
src\training\unicharset_extractor.cpp,src\training\unicharset_extractor.cpp,005bfe4950a8c82fc525af9b4c7fdd410317cae7,8a26329623a017277364bc5670266c7e964c8a07,"fix ""cannot pass non-trivial object of type 'std::string'""","@@ -66,18 +66,18 @@ static int Main(int argc, char **argv) {
   // Load input files
   for (int arg = 1; arg < argc; ++arg) {
     std::filesystem::path filePath = argv[arg];
-    std::string file_data = tesseract::ReadFile(filePath.u8string());
+    std::string file_data = tesseract::ReadFile(argv[arg]);
     if (file_data.empty()) {
       continue;
     }
     std::vector<std::string> texts;
     if (filePath.extension() == "".box"") {
-      tprintf(""Extracting unicharset from box file %s\n"", filePath.u8string());
+      tprintf(""Extracting unicharset from box file %s\n"", argv[arg]);
       bool res = ReadMemBoxes(-1, /*skip_blanks*/ true, &file_data[0],
                    /*continue_on_failure*/ false, /*boxes*/ nullptr, &texts,
                    /*box_texts*/ nullptr, /*pages*/ nullptr);
       if (!res) {
-        tprintf(""Can not read box data from '%s'\n"", filePath.u8string());
+        tprintf(""Can not read box data from '%s'\n"", argv[arg]);
         return EXIT_FAILURE;
       }
     } else {
","{'added': [(69, '    std::string file_data = tesseract::ReadFile(argv[arg]);'), (75, '      tprintf(""Extracting unicharset from box file %s\\n"", argv[arg]);'), (80, '        tprintf(""Can not read box data from \'%s\'\\n"", argv[arg]);')], 'deleted': [(69, '    std::string file_data = tesseract::ReadFile(filePath.u8string());'), (75, '      tprintf(""Extracting unicharset from box file %s\\n"", filePath.u8string());'), (80, '        tprintf(""Can not read box data from \'%s\'\\n"", filePath.u8string());')]}",yes
src\training\unicharset_extractor.cpp,src\training\unicharset_extractor.cpp,8a26329623a017277364bc5670266c7e964c8a07,da3737d3716206bc2995e2567ee565f4b09c7bb4,"unicharset_extractor:
- run ReadMemBoxes only for box files
- do not write unicharset in case of broken box file","@@ -21,6 +21,7 @@
 // a unicharset.
 
 #include <cstdlib>
+#include <filesystem>
 #include ""boxread.h""
 #include ""commandlineflags.h""
 #include ""commontraining.h"" // CheckSharedLibraryVersion
@@ -64,15 +65,21 @@ static int Main(int argc, char **argv) {
   UNICHARSET unicharset;
   // Load input files
   for (int arg = 1; arg < argc; ++arg) {
-    std::string file_data = tesseract::ReadFile(argv[arg]);
+    std::filesystem::path filePath = argv[arg];
+    std::string file_data = tesseract::ReadFile(filePath.u8string());
     if (file_data.empty()) {
       continue;
     }
     std::vector<std::string> texts;
-    if (ReadMemBoxes(-1, /*skip_blanks*/ true, &file_data[0],
-                     /*continue_on_failure*/ false, /*boxes*/ nullptr, &texts,
-                     /*box_texts*/ nullptr, /*pages*/ nullptr)) {
-      tprintf(""Extracting unicharset from box file %s\n"", argv[arg]);
+    if (filePath.extension() == "".box"") {
+      tprintf(""Extracting unicharset from box file %s\n"", filePath.u8string());
+      bool res = ReadMemBoxes(-1, /*skip_blanks*/ true, &file_data[0],
+                   /*continue_on_failure*/ false, /*boxes*/ nullptr, &texts,
+                   /*box_texts*/ nullptr, /*pages*/ nullptr);
+      if (!res) {
+        tprintf(""Can not read box data from '%s'\n"", filePath.u8string());
+        return EXIT_FAILURE;
+      }
     } else {
       tprintf(""Extracting unicharset from plain text file %s\n"", argv[arg]);
       texts.clear();
","{'added': [(24, '#include <filesystem>'), (68, '    std::filesystem::path filePath = argv[arg];'), (69, '    std::string file_data = tesseract::ReadFile(filePath.u8string());'), (74, '    if (filePath.extension() == "".box"") {'), (75, '      tprintf(""Extracting unicharset from box file %s\\n"", filePath.u8string());'), (76, '      bool res = ReadMemBoxes(-1, /*skip_blanks*/ true, &file_data[0],'), (77, '                   /*continue_on_failure*/ false, /*boxes*/ nullptr, &texts,'), (78, '                   /*box_texts*/ nullptr, /*pages*/ nullptr);'), (79, '      if (!res) {'), (80, '        tprintf(""Can not read box data from \'%s\'\\n"", filePath.u8string());'), (81, '        return EXIT_FAILURE;'), (82, '      }')], 'deleted': [(67, '    std::string file_data = tesseract::ReadFile(argv[arg]);'), (72, '    if (ReadMemBoxes(-1, /*skip_blanks*/ true, &file_data[0],'), (73, '                     /*continue_on_failure*/ false, /*boxes*/ nullptr, &texts,'), (74, '                     /*box_texts*/ nullptr, /*pages*/ nullptr)) {'), (75, '      tprintf(""Extracting unicharset from box file %s\\n"", argv[arg]);')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,da3737d3716206bc2995e2567ee565f4b09c7bb4,a0f06e20b49ce4e38a211049303515729f7c2b67,Update issue-bug.yml,"@@ -35,7 +35,7 @@ body:
         - macOS 11 Big Sur
         - Ubuntu 22.04 Jammy
         - Ubuntu 20.04 Focal
-        - Debian Testing Bookwarm
+        - Debian Testing Bookworm
         - Debian 11 Bullseye
         - RHEL 9
         - RHEL 8
","{'added': [(38, '        - Debian Testing Bookworm')], 'deleted': [(38, '        - Debian Testing Bookwarm')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,a0f06e20b49ce4e38a211049303515729f7c2b67,65b8a3b019cabb8fa18a44c213b8b89f1ae740ff,Update issue-bug.yml,"@@ -12,7 +12,7 @@ body:
         
         Please follow these rules:
         * Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).
-        * Don't open an issue for that involves 3rd party tools that use the tesseract as a library. Only report issues with the Tesseract command line tool or The C/C++ API.
+        * Don't open an issue which involves 3rd party tools that use Tesseract as a library. Only report about an issue with the Tesseract command line tool or the C/C++ API.
         * Please provide the input image.
         * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.
         * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report. 
","{'added': [(15, ""        * Don't open an issue which involves 3rd party tools that use Tesseract as a library. Only report about an issue with the Tesseract command line tool or the C/C++ API."")], 'deleted': [(15, ""        * Don't open an issue for that involves 3rd party tools that use the tesseract as a library. Only report issues with the Tesseract command line tool or The C/C++ API."")]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,65b8a3b019cabb8fa18a44c213b8b89f1ae740ff,dbedbad20d9f56604c719d177586e7fb4214bc9f,Update issue-bug.yml,"@@ -12,6 +12,7 @@ body:
         
         Please follow these rules:
         * Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).
+        * Don't open an issue for that involves 3rd party tools that use the tesseract as a library. Only report issues with the Tesseract command line tool or The C/C++ API.
         * Please provide the input image.
         * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.
         * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report. 
","{'added': [(15, ""        * Don't open an issue for that involves 3rd party tools that use the tesseract as a library. Only report issues with the Tesseract command line tool or The C/C++ API."")], 'deleted': []}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,dbedbad20d9f56604c719d177586e7fb4214bc9f,95e84735d5cb4a9e32c83a6656cb862498078845,Update issue-bug.yml,"@@ -20,33 +20,18 @@ body:
       label: Basic Information
       description: Version info, compiled libraries, SIMD, OpenMP
       placeholder: ""Paste the output of the command: tesseract -v""
-  - type: markdown
-    attributes:
-      value: |
-        ### Operating System
-        Choose the OS where the bug occurs      
-  - type: checkboxes
-    id: os-windows
-    attributes:
-      label: Windows
-      options:
-        - label: Windows 11
-        - label: Windows 10
-  - type: checkboxes
-    id: os-macos
-    attributes:
-      label: macOS
-      options:
-        - label: macOS 13 Ventura
-        - label: macOS 12 Monterey
-        - label: macOS 11 Big Sur
   - type: dropdown
     id: os-linux
     attributes:
-      label: Linux
-      description: Popular Linux distros with a long time support (LTS)
+      label: Operating System
+      description:  Choose the OS where the bug occurs
       multiple: true
       options:
+        - Windows 11
+        - Windows 10
+        - macOS 13 Ventura
+        - macOS 12 Monterey
+        - macOS 11 Big Sur
         - Ubuntu 22.04 Jammy
         - Ubuntu 20.04 Focal
         - Debian Testing Bookwarm
","{'added': [(26, '      label: Operating System'), (27, '      description:  Choose the OS where the bug occurs'), (30, '        - Windows 11'), (31, '        - Windows 10'), (32, '        - macOS 13 Ventura'), (33, '        - macOS 12 Monterey'), (34, '        - macOS 11 Big Sur')], 'deleted': [(23, '  - type: markdown'), (24, '    attributes:'), (25, '      value: |'), (26, '        ### Operating System'), (27, '        Choose the OS where the bug occurs'), (28, '  - type: checkboxes'), (29, '    id: os-windows'), (30, '    attributes:'), (31, '      label: Windows'), (32, '      options:'), (33, '        - label: Windows 11'), (34, '        - label: Windows 10'), (35, '  - type: checkboxes'), (36, '    id: os-macos'), (37, '    attributes:'), (38, '      label: macOS'), (39, '      options:'), (40, '        - label: macOS 13 Ventura'), (41, '        - label: macOS 12 Monterey'), (42, '        - label: macOS 11 Big Sur'), (46, '      label: Linux'), (47, '      description: Popular Linux distros with a long time support (LTS)')]}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,95e84735d5cb4a9e32c83a6656cb862498078845,98837f83a9878dce393a7428adf53b7a4a267e8c,Update issue-bug.yml,"@@ -10,6 +10,7 @@ body:
         Have a question? Need help?
         Please use [our forum](https://groups.google.com/g/tesseract-ocr).
         
+        Please follow these rules:
         * Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).
         * Please provide the input image.
         * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.
","{'added': [(13, '        Please follow these rules:')], 'deleted': []}",yes
.github\ISSUE_TEMPLATE\issue-bug.yml,.github\ISSUE_TEMPLATE\issue-bug.yml,98837f83a9878dce393a7428adf53b7a4a267e8c,b76b5be65ca001234b4251daaebe5e49617471d5,Update issue-bug.yml,"@@ -10,7 +10,10 @@ body:
         Have a question? Need help?
         Please use [our forum](https://groups.google.com/g/tesseract-ocr).
         
-        Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).
+        * Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).
+        * Please provide the input image.
+        * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.
+        * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report. 
   - type: textarea
     attributes:
       label: Basic Information
","{'added': [(13, ""        * Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).""), (14, '        * Please provide the input image.'), (15, '        * Also provide output files (txt and/or tsv, hocr, pdf). You can make a zip archive that will contain these files, so GitHub will let you upload them.'), (16, ""        * Don't attach a screenshot of the command line and output. Instead, copy the text and paste it in your bug report."")], 'deleted': [(13, ""        Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html)."")]}",no
,.github\ISSUE_TEMPLATE\issue-feature-request.yml,b76b5be65ca001234b4251daaebe5e49617471d5,ce0ed917f6d322454cb0cba146c03eb50c5f732f,Create an issue template for a feature request,"@@ -0,0 +1,7 @@
+name: Feature Request
+description: File a feature request
+body:
+  - type: textarea
+    attributes:
+      label: Your Feature Request
+      description: Please look first at the [open issues labeled as 'feature request'](https://github.com/tesseract-ocr/tesseract/labels/feature%20request).
","{'added': [(1, 'name: Feature Request'), (2, 'description: File a feature request'), (3, 'body:'), (4, '  - type: textarea'), (5, '    attributes:'), (6, '      label: Your Feature Request'), (7, ""      description: Please look first at the [open issues labeled as 'feature request'](https://github.com/tesseract-ocr/tesseract/labels/feature%20request)."")], 'deleted': []}",yes
,.github\ISSUE_TEMPLATE\issue-bug.yml,ce0ed917f6d322454cb0cba146c03eb50c5f732f,080da83cc51c4ef8b324a7e03146fe0bd7e0944b,Create a new issue template,"@@ -0,0 +1,85 @@
+name: Bug Report
+description: File a bug report
+body:
+  - type: markdown
+    attributes:
+      value: |
+        ### Attention
+        Before you submit an issue, please review [the guidelines for this repository](https://github.com/tesseract-ocr/tesseract/blob/main/CONTRIBUTING.md).
+                 
+        Have a question? Need help?
+        Please use [our forum](https://groups.google.com/g/tesseract-ocr).
+        
+        Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).
+  - type: textarea
+    attributes:
+      label: Basic Information
+      description: Version info, compiled libraries, SIMD, OpenMP
+      placeholder: ""Paste the output of the command: tesseract -v""
+  - type: markdown
+    attributes:
+      value: |
+        ### Operating System
+        Choose the OS where the bug occurs      
+  - type: checkboxes
+    id: os-windows
+    attributes:
+      label: Windows
+      options:
+        - label: Windows 11
+        - label: Windows 10
+  - type: checkboxes
+    id: os-macos
+    attributes:
+      label: macOS
+      options:
+        - label: macOS 13 Ventura
+        - label: macOS 12 Monterey
+        - label: macOS 11 Big Sur
+  - type: dropdown
+    id: os-linux
+    attributes:
+      label: Linux
+      description: Popular Linux distros with a long time support (LTS)
+      multiple: true
+      options:
+        - Ubuntu 22.04 Jammy
+        - Ubuntu 20.04 Focal
+        - Debian Testing Bookwarm
+        - Debian 11 Bullseye
+        - RHEL 9
+        - RHEL 8
+  - type: textarea
+    attributes:
+      label: Other Operating System
+      placeholder: Enter the name and version of the OS
+  - type: textarea
+    attributes:
+      label: uname -a
+      placeholder: ""Paste the output of the command: umame -a (if available in your system).""
+
+  - type: textarea
+    attributes:
+      label: Compiler
+      placeholder: ""Enter compiler name and version (Examples: MSVC 2019 16.11, Clang 13.0.1, GCC 11.2, Xcode 14.1)"" 
+  - type: textarea
+    attributes:
+      label: Virtualization / Containers
+      placeholder: ""Enter the name and version of the VM / container which you use (Examples: Oracle VM VirtualBox 7.0.4,VMware Workstation 17.0, Hyper-V, Docker 20.10.22)""
+  - type: textarea
+    attributes:
+      label: CPU
+      placeholder: ""Enter your CPU vendor name and model (Examples: Intel Core i7-11700K, AMD Ryzen 7 5800X, Apple Silicon M1)""
+  - type: textarea
+    attributes:
+      label: Current Behavior
+  - type: textarea
+    attributes:
+      label: Expected Behavior
+  - type: textarea
+    attributes:
+      label: Suggested Fix
+  - type: textarea
+    attributes:
+      label: Other Information
+      placeholder: Add more details here.
","{'added': [(1, 'name: Bug Report'), (2, 'description: File a bug report'), (3, 'body:'), (4, '  - type: markdown'), (5, '    attributes:'), (6, '      value: |'), (7, '        ### Attention'), (8, '        Before you submit an issue, please review [the guidelines for this repository](https://github.com/tesseract-ocr/tesseract/blob/main/CONTRIBUTING.md).'), (9, ''), (10, '        Have a question? Need help?'), (11, '        Please use [our forum](https://groups.google.com/g/tesseract-ocr).'), (12, ''), (13, ""        Don't open an issue for [Tesseract version which was released more than a year ago](https://tesseract-ocr.github.io/tessdoc/ReleaseNotes.html).""), (14, '  - type: textarea'), (15, '    attributes:'), (16, '      label: Basic Information'), (17, '      description: Version info, compiled libraries, SIMD, OpenMP'), (18, '      placeholder: ""Paste the output of the command: tesseract -v""'), (19, '  - type: markdown'), (20, '    attributes:'), (21, '      value: |'), (22, '        ### Operating System'), (23, '        Choose the OS where the bug occurs'), (24, '  - type: checkboxes'), (25, '    id: os-windows'), (26, '    attributes:'), (27, '      label: Windows'), (28, '      options:'), (29, '        - label: Windows 11'), (30, '        - label: Windows 10'), (31, '  - type: checkboxes'), (32, '    id: os-macos'), (33, '    attributes:'), (34, '      label: macOS'), (35, '      options:'), (36, '        - label: macOS 13 Ventura'), (37, '        - label: macOS 12 Monterey'), (38, '        - label: macOS 11 Big Sur'), (39, '  - type: dropdown'), (40, '    id: os-linux'), (41, '    attributes:'), (42, '      label: Linux'), (43, '      description: Popular Linux distros with a long time support (LTS)'), (44, '      multiple: true'), (45, '      options:'), (46, '        - Ubuntu 22.04 Jammy'), (47, '        - Ubuntu 20.04 Focal'), (48, '        - Debian Testing Bookwarm'), (49, '        - Debian 11 Bullseye'), (50, '        - RHEL 9'), (51, '        - RHEL 8'), (52, '  - type: textarea'), (53, '    attributes:'), (54, '      label: Other Operating System'), (55, '      placeholder: Enter the name and version of the OS'), (56, '  - type: textarea'), (57, '    attributes:'), (58, '      label: uname -a'), (59, '      placeholder: ""Paste the output of the command: umame -a (if available in your system).""'), (60, ''), (61, '  - type: textarea'), (62, '    attributes:'), (63, '      label: Compiler'), (64, '      placeholder: ""Enter compiler name and version (Examples: MSVC 2019 16.11, Clang 13.0.1, GCC 11.2, Xcode 14.1)""'), (65, '  - type: textarea'), (66, '    attributes:'), (67, '      label: Virtualization / Containers'), (68, '      placeholder: ""Enter the name and version of the VM / container which you use (Examples: Oracle VM VirtualBox 7.0.4,VMware Workstation 17.0, Hyper-V, Docker 20.10.22)""'), (69, '  - type: textarea'), (70, '    attributes:'), (71, '      label: CPU'), (72, '      placeholder: ""Enter your CPU vendor name and model (Examples: Intel Core i7-11700K, AMD Ryzen 7 5800X, Apple Silicon M1)""'), (73, '  - type: textarea'), (74, '    attributes:'), (75, '      label: Current Behavior'), (76, '  - type: textarea'), (77, '    attributes:'), (78, '      label: Expected Behavior'), (79, '  - type: textarea'), (80, '    attributes:'), (81, '      label: Suggested Fix'), (82, '  - type: textarea'), (83, '    attributes:'), (84, '      label: Other Information'), (85, '      placeholder: Add more details here.')], 'deleted': []}",no
ChangeLog,ChangeLog,080da83cc51c4ef8b324a7e03146fe0bd7e0944b,7f5345d2078c77604503fc1c8b9da4c8245efdf3,"Create new release 5.3.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,6 @@
+2022-12-22 - V5.3.0
+ * Minor updates for documentation and cmake builds.
+
 2022-12-13 - V5.3.0-rc1
  * Fix the training tools for the legacy OCR engine (fix issue #3925).
  * PDF renderer: Ignore non-text blocks (fix issue #3957).
","{'added': [(1, '2022-12-22 - V5.3.0'), (2, ' * Minor updates for documentation and cmake builds.'), (3, '')], 'deleted': []}",yes
VERSION,VERSION,080da83cc51c4ef8b324a7e03146fe0bd7e0944b,7f5345d2078c77604503fc1c8b9da4c8245efdf3,"Create new release 5.3.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.3.0-rc1
+5.3.0
","{'added': [(1, '5.3.0')], 'deleted': [(1, '5.3.0-rc1')]}",yes
configure.ac,configure.ac,080da83cc51c4ef8b324a7e03146fe0bd7e0944b,7f5345d2078c77604503fc1c8b9da4c8245efdf3,"Create new release 5.3.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2022
-PACKAGE_DATE=""12/13""
+PACKAGE_DATE=""12/22""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""12/22""')], 'deleted': [(32, 'PACKAGE_DATE=""12/13""')]}",yes
README.md,README.md,7f5345d2078c77604503fc1c8b9da4c8245efdf3,f25196151b2ee2ca55b62d56acc9f302258876d1,"Update README.md

'Promote' @stweil ... :-)","@@ -29,7 +29,7 @@ This package contains an **OCR engine** - `libtesseract` and a **command line pr
 Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns. Compatibility with Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).
 It also needs [traineddata](https://tesseract-ocr.github.io/tessdoc/Data-Files.html) files which support the legacy engine, for example those from the [tessdata](https://github.com/tesseract-ocr/tessdata) repository.
 
-The lead developer is Ray Smith. The maintainer is Zdenko Podobny. For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)
+Stefan Weil is the current lead developer. Ray Smith was the lead developer until 2018. The maintainer is Zdenko Podobny. For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)
 and GitHub's log of [contributors](https://github.com/tesseract-ocr/tesseract/graphs/contributors).
 
 Tesseract has **unicode (UTF-8) support**, and can **recognize more than 100 languages** ""out of the box"".
","{'added': [(32, 'Stefan Weil is the current lead developer. Ray Smith was the lead developer until 2018. The maintainer is Zdenko Podobny. For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)')], 'deleted': [(32, 'The lead developer is Ray Smith. The maintainer is Zdenko Podobny. For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)')]}",yes
CMakeLists.txt,CMakeLists.txt,f25196151b2ee2ca55b62d56acc9f302258876d1,f2f37a83234d3ceed941f682b69c49f94c6862d3,cmake - msvc/openmp: clean&document configuration,"@@ -299,13 +299,6 @@ if(OPENMP_BUILD
 endif()
 if(OPENMP_BUILD)
   find_package(OpenMP QUIET)
-  if(OpenMP_FOUND)
-    message("">> OpenMP_FOUND ${OpenMP_FOUND} ${OpenMP_VERSION}"")
-    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}"")
-    if (NOT TARGET OpenMP::OpenMP_CXX)
-      add_library(OpenMP::OpenMP_CXX IMPORTED INTERFACE)
-    endif()
-  endif()
   # https://stackoverflow.com/questions/12399422
   # how-to-set-linker-flags-for-openmp-in-cmakes-try-compile-function
   if(NOT OpenMP_FOUND
@@ -326,8 +319,22 @@ if(OPENMP_BUILD)
     add_definitions(-D_OPENMP=201107)
   endif()
   if(MSVC)
-    string(REPLACE ""/openmp"" ""/openmp:llvm -openmp:experimental"" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
-    string(REPLACE ""-openmp"" ""/openmp:llvm -openmp:experimental"" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
+    # Note: -openmp:llvm is available for X64 from MSVC 16.9
+    # from MSVC 16.10 Preview 2 there is support also for x86 and arm64
+    # https://devblogs.microsoft.com/cppblog/openmp-updates-and-fixes-for-cpp-in-visual-studio-2019-16-10/
+    if (""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")
+      set(OpenMP_CXX_FLAGS ""-openmp:llvm"")
+    endif()
+    # 'simd': requires '-openmp:experimental'
+    set_source_files_properties(src/arch/dotproduct.cpp
+                              PROPERTIES COMPILE_FLAGS ""-openmp:experimental"")
+  endif()
+  if(OpenMP_FOUND)
+    message("">> OpenMP_FOUND ${OpenMP_FOUND} version: ${OpenMP_CXX_VERSION}"")
+    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}"")
+    if (NOT TARGET OpenMP::OpenMP_CXX)
+      add_library(OpenMP::OpenMP_CXX IMPORTED INTERFACE)
+    endif()
   endif()
 endif()
 
","{'added': [(322, '    # Note: -openmp:llvm is available for X64 from MSVC 16.9'), (323, '    # from MSVC 16.10 Preview 2 there is support also for x86 and arm64'), (324, '    # https://devblogs.microsoft.com/cppblog/openmp-updates-and-fixes-for-cpp-in-visual-studio-2019-16-10/'), (325, '    if (""${OpenMP_CXX_FLAGS}"" STREQUAL ""-openmp"")'), (326, '      set(OpenMP_CXX_FLAGS ""-openmp:llvm"")'), (327, '    endif()'), (328, ""    # 'simd': requires '-openmp:experimental'""), (329, '    set_source_files_properties(src/arch/dotproduct.cpp'), (330, '                              PROPERTIES COMPILE_FLAGS ""-openmp:experimental"")'), (331, '  endif()'), (332, '  if(OpenMP_FOUND)'), (333, '    message("">> OpenMP_FOUND ${OpenMP_FOUND} version: ${OpenMP_CXX_VERSION}"")'), (334, '    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}"")'), (335, '    if (NOT TARGET OpenMP::OpenMP_CXX)'), (336, '      add_library(OpenMP::OpenMP_CXX IMPORTED INTERFACE)'), (337, '    endif()')], 'deleted': [(302, '  if(OpenMP_FOUND)'), (303, '    message("">> OpenMP_FOUND ${OpenMP_FOUND} ${OpenMP_VERSION}"")'), (304, '    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}"")'), (305, '    if (NOT TARGET OpenMP::OpenMP_CXX)'), (306, '      add_library(OpenMP::OpenMP_CXX IMPORTED INTERFACE)'), (307, '    endif()'), (308, '  endif()'), (329, '    string(REPLACE ""/openmp"" ""/openmp:llvm -openmp:experimental"" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})'), (330, '    string(REPLACE ""-openmp"" ""/openmp:llvm -openmp:experimental"" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})')]}",yes
CMakeLists.txt,CMakeLists.txt,f2f37a83234d3ceed941f682b69c49f94c6862d3,86a7bc6c064d09ee5ecffaa39f1b1618116f8770,cmake - mscvc: silent warning C4068: unknown pragma 'GCC',"@@ -275,6 +275,8 @@ elseif(MSVC)
   # 'double' to 'float'
   set(CMAKE_CXX_FLAGS_RELEASE
       ""${CMAKE_CXX_FLAGS_RELEASE} /wd4244 /wd4305 /wd4267 /wd4251 /wd4275 /wd4005"")
+  set(CMAKE_CXX_FLAGS_RELEASE
+      ""${CMAKE_CXX_FLAGS_RELEASE} /wd4068"")
   # Don't use /Wall because it generates too many warnings.
   set(CMAKE_CXX_FLAGS_DEBUG ""${CMAKE_CXX_FLAGS_DEBUG} /W0 /bigobj"")
   # MT flag
","{'added': [(278, '  set(CMAKE_CXX_FLAGS_RELEASE'), (279, '      ""${CMAKE_CXX_FLAGS_RELEASE} /wd4068"")')], 'deleted': []}",yes
ChangeLog,ChangeLog,86a7bc6c064d09ee5ecffaa39f1b1618116f8770,6e4de524d07b2f2a05f6e789041789d768ffa086,"Create new release 5.3.0-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,23 @@
+2022-12-13 - V5.3.0-rc1
+ * Fix the training tools for the legacy OCR engine (fix issue #3925).
+ * PDF renderer: Ignore non-text blocks (fix issue #3957).
+ * Remove colormap before thresholding (fix issue #3940).
+ * Fix a number of performance issues reported by Coverity Scan.
+ * Training tools: Replace call of exit function by return statement in main function.
+ * Fix double free in function vigorous_noise_removal (fix issue #3876).
+ * Create to_win if needed in Textord::make_spline_rows (fix issue #3875).
+ * Bug fixes for ScrollView viewer:
+   * Fix memory issues in ScrollView::MessageReceiver.
+   * Catch potential nullptr in SVNetwork::SVNetwork.
+   * Move svpaint.cpp from src/viewer to src/.
+   * Add rule for svpaint executable in Autotools.
+ * Bug fixes and improvements for build tools:
+   * Fix AMD64 detection with autobuild on FreeBSD (fix issue #3964).
+   * Fix tesseract.pc generated from CMake to match Autotools.
+   * Detect availability of AVX512-VNNI.
+   * configure.ac: fix build on aarch64_be.
+ * Drop CI for old versions of macOS and Ubuntu.
+
 2022-07-06 - V5.2.0
   * Improvements and fixes for continuous integration,
     autoconf and cmake builds.
","{'added': [(1, '2022-12-13 - V5.3.0-rc1'), (2, ' * Fix the training tools for the legacy OCR engine (fix issue #3925).'), (3, ' * PDF renderer: Ignore non-text blocks (fix issue #3957).'), (4, ' * Remove colormap before thresholding (fix issue #3940).'), (5, ' * Fix a number of performance issues reported by Coverity Scan.'), (6, ' * Training tools: Replace call of exit function by return statement in main function.'), (7, ' * Fix double free in function vigorous_noise_removal (fix issue #3876).'), (8, ' * Create to_win if needed in Textord::make_spline_rows (fix issue #3875).'), (9, ' * Bug fixes for ScrollView viewer:'), (10, '   * Fix memory issues in ScrollView::MessageReceiver.'), (11, '   * Catch potential nullptr in SVNetwork::SVNetwork.'), (12, '   * Move svpaint.cpp from src/viewer to src/.'), (13, '   * Add rule for svpaint executable in Autotools.'), (14, ' * Bug fixes and improvements for build tools:'), (15, '   * Fix AMD64 detection with autobuild on FreeBSD (fix issue #3964).'), (16, '   * Fix tesseract.pc generated from CMake to match Autotools.'), (17, '   * Detect availability of AVX512-VNNI.'), (18, '   * configure.ac: fix build on aarch64_be.'), (19, ' * Drop CI for old versions of macOS and Ubuntu.'), (20, '')], 'deleted': []}",yes
VERSION,VERSION,86a7bc6c064d09ee5ecffaa39f1b1618116f8770,6e4de524d07b2f2a05f6e789041789d768ffa086,"Create new release 5.3.0-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.2.0
+5.3.0-rc1
","{'added': [(1, '5.3.0-rc1')], 'deleted': [(1, '5.2.0')]}",yes
configure.ac,configure.ac,86a7bc6c064d09ee5ecffaa39f1b1618116f8770,6e4de524d07b2f2a05f6e789041789d768ffa086,"Create new release 5.3.0-rc1

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2022
-PACKAGE_DATE=""07/06""
+PACKAGE_DATE=""12/13""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""12/13""')], 'deleted': [(32, 'PACKAGE_DATE=""07/06""')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,6e4de524d07b2f2a05f6e789041789d768ffa086,6a21a74ecfb750390922555728b55b38568ff18a,"Replace MacOS -> macOS

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -21,7 +21,7 @@ jobs:
       with:
         submodules: recursive
 
-    - name: Install dependencies (MacOS Homebrew)
+    - name: Install dependencies (macOS Homebrew)
       run: |
            brew install autoconf automake libarchive
            brew install leptonica cairo pango
@@ -32,7 +32,7 @@ jobs:
            mkdir -p m4
            ./autogen.sh
 
-    - name: Configure (MacOS Homebrew)
+    - name: Configure (macOS Homebrew)
       run: |
            ./configure '--disable-shared' '--with-pic' \
                 'CXX=${{ matrix.config.cxx }}' \
","{'added': [(24, '    - name: Install dependencies (macOS Homebrew)'), (35, '    - name: Configure (macOS Homebrew)')], 'deleted': [(24, '    - name: Install dependencies (MacOS Homebrew)'), (35, '    - name: Configure (MacOS Homebrew)')]}",yes
configure.ac,configure.ac,6e4de524d07b2f2a05f6e789041789d768ffa086,6a21a74ecfb750390922555728b55b38568ff18a,"Replace MacOS -> macOS

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -464,7 +464,7 @@ esac
 
 AC_SEARCH_LIBS([pthread_create], [pthread])
 
-# Set PKG_CONFIG_PATH for MacOS with Homebrew unless it is already set.
+# Set PKG_CONFIG_PATH for macOS with Homebrew unless it is already set.
 AC_CHECK_PROG([have_brew], brew, true, false)
 if $have_brew; then
   brew_prefix=$(brew --prefix)
@@ -487,7 +487,7 @@ AC_ARG_ENABLE([doc],
 AS_IF([test ""$enable_doc"" != ""no""], [
   AC_CHECK_PROG([have_asciidoc], asciidoc, true, false)
   AC_CHECK_PROG([have_xsltproc], xsltproc, true, false)
-  # MacOS with Homebrew requires the environment variable
+  # macOS with Homebrew requires the environment variable
   # XML_CATALOG_FILES for xsltproc.
   if $have_asciidoc && $have_xsltproc; then
     AM_CONDITIONAL([ASCIIDOC], true)
","{'added': [(467, '# Set PKG_CONFIG_PATH for macOS with Homebrew unless it is already set.'), (490, '  # macOS with Homebrew requires the environment variable')], 'deleted': [(467, '# Set PKG_CONFIG_PATH for MacOS with Homebrew unless it is already set.'), (490, '  # MacOS with Homebrew requires the environment variable')]}",yes
src\ccutil\universalambigs.h,src\ccutil\universalambigs.h,6a21a74ecfb750390922555728b55b38568ff18a,369b811c9972f45f10facb7ef00a215081c7769a,"Suppress compiler warning caused by very long string

Add pragmas which suppress this warning from gcc or clang:

    src/ccutil/universalambigs.h:26:5: warning:
     string literal of length 170929 exceeds maximum length 65536 that
     C++ compilers are required to support [-Woverlength-strings]

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -22,6 +22,8 @@
 
 namespace tesseract {
 
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored ""-Woverlength-strings""
 inline const char kUniversalAmbigsFile[] = {
     ""v2\n""
     ""'' \"" 1\n""
@@ -19033,6 +19035,7 @@ inline const char kUniversalAmbigsFile[] = {
     ""iXl in 1\n""
 #endif
 };
+#pragma GCC diagnostic pop
 
 inline const int ksizeofUniversalAmbigsFile = sizeof(kUniversalAmbigsFile);
 
","{'added': [(25, '#pragma GCC diagnostic push'), (26, '#pragma GCC diagnostic ignored ""-Woverlength-strings""'), (19038, '#pragma GCC diagnostic pop')], 'deleted': []}",yes
src\ccutil\unicity_table.h,src\ccutil\unicity_table.h,369b811c9972f45f10facb7ef00a215081c7769a,a806d218835d82ed66b0747eb0c2bc7acb8f96d7,"Replace at accessor by [] operator in function Classify::CreateIntTemplates

UnicityTable did not provide the [] operator, so add it for this change.

Suggested-by: Egor Pugin <egor.pugin@gmail.com>
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -62,6 +62,13 @@ public:
     return table_.at(id);
   }
 
+  T &operator[](size_t id) {
+    return table_[id];
+  }
+  const T &operator[](size_t id) const {
+    return table_[id];
+  }
+
   /// Return the id of the T object.
   /// This method NEEDS a compare_callback to be passed to
   /// set_compare_callback.
","{'added': [(65, '  T &operator[](size_t id) {'), (66, '    return table_[id];'), (67, '  }'), (68, '  const T &operator[](size_t id) const {'), (69, '    return table_[id];'), (70, '  }'), (71, '')], 'deleted': []}",yes
src\classify\intproto.cpp,src\classify\intproto.cpp,369b811c9972f45f10facb7ef00a215081c7769a,a806d218835d82ed66b0747eb0c2bc7acb8f96d7,"Replace at accessor by [] operator in function Classify::CreateIntTemplates

UnicityTable did not provide the [] operator, so add it for this change.

Suggested-by: Egor Pugin <egor.pugin@gmail.com>
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -509,7 +509,7 @@ INT_TEMPLATES_STRUCT *Classify::CreateIntTemplates(CLASSES FloatProtos,
     FontSet fs;
     fs.reserve(fs_size);
     for (unsigned i = 0; i < fs_size; ++i) {
-      fs.push_back(FClass->font_set.at(i));
+      fs.push_back(FClass->font_set[i]);
     }
     IClass->font_set_id = this->fontset_table_.push_back(fs);
     AddIntClass(IntTemplates, ClassId, IClass);
","{'added': [(512, '      fs.push_back(FClass->font_set[i]);')], 'deleted': [(512, '      fs.push_back(FClass->font_set.at(i));')]}",yes
src\training\common\commontraining.cpp,src\training\common\commontraining.cpp,a806d218835d82ed66b0747eb0c2bc7acb8f96d7,23138ab88afa238081f4c6e542d5544300b5d1a7,"Fix function ReadTrainingSamples (issue #3925)

This fixes duplicate delete when running cntraining.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -376,6 +376,7 @@ void ReadTrainingSamples(const FEATURE_DEFS_STRUCT &feature_definitions, const c
       if (feature_type != i) {
         delete char_desc->FeatureSets[i];
       }
+      char_desc->FeatureSets[i] = nullptr;
     }
     delete char_desc;
   }
","{'added': [(379, '      char_desc->FeatureSets[i] = nullptr;')], 'deleted': []}",yes
src\classify\intproto.cpp,src\classify\intproto.cpp,23138ab88afa238081f4c6e542d5544300b5d1a7,4fa046b1b39dc9dea22a8c1e4612e604c0c6cb0f,"Fix function Classify::WriteIntTemplates (issue #3925)

It crashed when running mftraining because unicharset_size in file
""inttemp"" was written with 8 bytes instead of 4 bytes.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -919,13 +919,13 @@ void ClearFeatureSpaceWindow(NORM_METHOD norm_method, ScrollView *window) {
 void Classify::WriteIntTemplates(FILE *File, INT_TEMPLATES_STRUCT *Templates,
                                  const UNICHARSET &target_unicharset) {
   INT_CLASS_STRUCT *Class;
-  auto unicharset_size = target_unicharset.size();
+  uint32_t unicharset_size = target_unicharset.size();
   int version_id = -5; // When negated by the reader -1 becomes +1 etc.
 
   if (Templates->NumClasses != unicharset_size) {
     tprintf(
         ""Warning: executing WriteIntTemplates() with %d classes in""
-        "" Templates, while target_unicharset size is %zu\n"",
+        "" Templates, while target_unicharset size is %"" PRIu32 ""\n"",
         Templates->NumClasses, unicharset_size);
   }
 
","{'added': [(922, '  uint32_t unicharset_size = target_unicharset.size();'), (928, '        "" Templates, while target_unicharset size is %"" PRIu32 ""\\n"",')], 'deleted': [(922, '  auto unicharset_size = target_unicharset.size();'), (928, '        "" Templates, while target_unicharset size is %zu\\n"",')]}",yes
src\ccstruct\fontinfo.cpp,src\ccstruct\fontinfo.cpp,4fa046b1b39dc9dea22a8c1e4612e604c0c6cb0f,1fd8f8165fb9168e37f4b11e97d2bc2b29aca71d,"Fix function tesseract::write_set (issue #3925)

It crashed when running mftraining with fs.size() == 0.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -221,7 +221,8 @@ bool write_spacing_info(FILE *f, const FontInfo &fi) {
 
 bool write_set(FILE *f, const FontSet &fs) {
   int size = fs.size();
-  return tesseract::Serialize(f, &size) && tesseract::Serialize(f, &fs[0], size);
+  return tesseract::Serialize(f, &size) &&
+         (size > 0 ? tesseract::Serialize(f, &fs[0], size) : true);
 }
 
 } // namespace tesseract.
","{'added': [(224, '  return tesseract::Serialize(f, &size) &&'), (225, '         (size > 0 ? tesseract::Serialize(f, &fs[0], size) : true);')], 'deleted': [(224, '  return tesseract::Serialize(f, &size) && tesseract::Serialize(f, &fs[0], size);')]}",yes
src\ccutil\unicity_table.h,src\ccutil\unicity_table.h,1fd8f8165fb9168e37f4b11e97d2bc2b29aca71d,1d3b4109682158b660fdeb9f8b02493bcb59bfa4,"Fix function UnicityTable::push_back (issue #3925)

mftraining crashed because the returned value was 1 instead of 0
for the first call of UnicityTable::push_back.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -73,8 +73,7 @@ public:
   int push_back(T object)  {
     auto idx = get_index(object);
     if (idx == -1) {
-      table_.push_back(object);
-      idx = size();
+      idx = table_.push_back(object);
     }
     return idx;
   }
","{'added': [(76, '      idx = table_.push_back(object);')], 'deleted': [(76, '      table_.push_back(object);'), (77, '      idx = size();')]}",yes
src\classify\cluster.cpp,src\classify\cluster.cpp,1d3b4109682158b660fdeb9f8b02493bcb59bfa4,5591bc04ef9c6804a46b7e6c6f54108ca0cf5c81,"Fix function ComputeChiSquared (issue #3925)

mftraining crashed if the search did not find anything.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -2774,8 +2774,8 @@ static double ComputeChiSquared(uint16_t DegreesOfFreedom, double Alpha)
    for the specified number of degrees of freedom.  Search the list for
    the desired chi-squared. */
   CHISTRUCT SearchKey(0.0, Alpha);
-  auto OldChiSquared = reinterpret_cast<CHISTRUCT *>(
-      search(ChiWith[DegreesOfFreedom], &SearchKey, AlphaMatch)->first_node());
+  auto *found = search(ChiWith[DegreesOfFreedom], &SearchKey, AlphaMatch);
+  auto OldChiSquared = reinterpret_cast<CHISTRUCT *>(found ? found->first_node() : nullptr);
 
   if (OldChiSquared == nullptr) {
     OldChiSquared = new CHISTRUCT(DegreesOfFreedom, Alpha);
","{'added': [(2777, '  auto *found = search(ChiWith[DegreesOfFreedom], &SearchKey, AlphaMatch);'), (2778, '  auto OldChiSquared = reinterpret_cast<CHISTRUCT *>(found ? found->first_node() : nullptr);')], 'deleted': [(2777, '  auto OldChiSquared = reinterpret_cast<CHISTRUCT *>('), (2778, '      search(ChiWith[DegreesOfFreedom], &SearchKey, AlphaMatch)->first_node());')]}",yes
src\classify\cluster.cpp,src\classify\cluster.cpp,5591bc04ef9c6804a46b7e6c6f54108ca0cf5c81,f969ba91616c4eff5fa40dc65e9cdc5d669d4453,"Remove assertion in function NewSimpleProto (issue #3925)

It was triggered by mftraining.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -2523,7 +2523,6 @@ static PROTOTYPE *NewMixedProto(int16_t N, CLUSTER *Cluster, STATISTICS *Statist
  */
 static PROTOTYPE *NewSimpleProto(int16_t N, CLUSTER *Cluster) {
   auto Proto = new PROTOTYPE;
-  ASSERT_HOST(N == sizeof(Cluster->Mean));
   Proto->Mean = Cluster->Mean;
   Proto->Distrib.clear();
   Proto->Significant = true;
","{'added': [], 'deleted': [(2526, '  ASSERT_HOST(N == sizeof(Cluster->Mean));')]}",yes
src\classify\intproto.cpp,src\classify\intproto.cpp,f969ba91616c4eff5fa40dc65e9cdc5d669d4453,6b7cb1cbc6aa0e473c55ef0683537e7387768fe2,"Fix function Classify::CreateIntTemplates (issue #3925)

The old code did not work correctly if FClass->font_set.size() was 0.
It created the FontSet fs with size 1 instead of 0.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -505,9 +505,11 @@ INT_TEMPLATES_STRUCT *Classify::CreateIntTemplates(CLASSES FloatProtos,
     }
     assert(UnusedClassIdIn(IntTemplates, ClassId));
     IClass = new INT_CLASS_STRUCT(FClass->NumProtos, FClass->NumConfigs);
-    FontSet fs{FClass->font_set.size()};
-    for (unsigned i = 0; i < fs.size(); ++i) {
-      fs[i] = FClass->font_set.at(i);
+    unsigned fs_size = FClass->font_set.size();
+    FontSet fs;
+    fs.reserve(fs_size);
+    for (unsigned i = 0; i < fs_size; ++i) {
+      fs.push_back(FClass->font_set.at(i));
     }
     IClass->font_set_id = this->fontset_table_.push_back(fs);
     AddIntClass(IntTemplates, ClassId, IClass);
","{'added': [(508, '    unsigned fs_size = FClass->font_set.size();'), (509, '    FontSet fs;'), (510, '    fs.reserve(fs_size);'), (511, '    for (unsigned i = 0; i < fs_size; ++i) {'), (512, '      fs.push_back(FClass->font_set.at(i));')], 'deleted': [(508, '    FontSet fs{FClass->font_set.size()};'), (509, '    for (unsigned i = 0; i < fs.size(); ++i) {'), (510, '      fs[i] = FClass->font_set.at(i);')]}",yes
src\ccutil\helpers.h,src\ccutil\helpers.h,6b7cb1cbc6aa0e473c55ef0683537e7387768fe2,90c09a3df34d1b9d1023e5f090326d6eb8839911,"Add missing serialization to FILE for vector of pointers (issue #3925)

It is required for mftraining which otherwise writes a wrong shapetable.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -31,6 +31,8 @@
 #include <string>
 #include <vector>
 
+#include ""serialis.h""
+
 namespace tesseract {
 
 template <class T>
@@ -242,6 +244,19 @@ bool Serialize(FILE *fp, const std::vector<T> &data) {
         return false;
       }
     }
+  } else if constexpr (std::is_pointer<T>::value) {
+    // Serialize pointers.
+    for (auto &item : data) {
+      uint8_t non_null = (item != nullptr);
+      if (!Serialize(fp, &non_null)) {
+        return false;
+      }
+      if (non_null) {
+        if (!item->Serialize(fp)) {
+          return false;
+        }
+      }
+    }
   } else if (size > 0) {
     if (fwrite(&data[0], sizeof(T), size, fp) != size) {
       return false;
","{'added': [(34, '#include ""serialis.h""'), (35, ''), (247, '  } else if constexpr (std::is_pointer<T>::value) {'), (248, '    // Serialize pointers.'), (249, '    for (auto &item : data) {'), (250, '      uint8_t non_null = (item != nullptr);'), (251, '      if (!Serialize(fp, &non_null)) {'), (252, '        return false;'), (253, '      }'), (254, '      if (non_null) {'), (255, '        if (!item->Serialize(fp)) {'), (256, '          return false;'), (257, '        }'), (258, '      }'), (259, '    }')], 'deleted': []}",yes
src\classify\cluster.cpp,src\classify\cluster.cpp,90c09a3df34d1b9d1023e5f090326d6eb8839911,04551ce2a600c87f7802010863160c86423006e7,"Replace void_proc by kdwald_proc with correct arguments

This allows removing a reinterpret_cast and fixes a runtime error
with sanitizers:

runtime error: call to function
tesseract::MakePotentialClusters(tesseract::ClusteringContext*, tesseract::CLUSTER*, int)
through pointer to incorrect function type 'void (*)(...)'

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1716,7 +1716,7 @@ static void CreateClusterTree(CLUSTERER *Clusterer) {
   context.candidates = new TEMPCLUSTER[Clusterer->NumberOfSamples];
   context.next = 0;
   context.heap = new ClusterHeap(Clusterer->NumberOfSamples);
-  KDWalk(context.tree, reinterpret_cast<void_proc>(MakePotentialClusters), &context);
+  KDWalk(context.tree, MakePotentialClusters, &context);
 
   // form potential clusters into actual clusters - always do ""best"" first
   while (context.heap->Pop(&HeapEntry)) {
","{'added': [(1719, '  KDWalk(context.tree, MakePotentialClusters, &context);')], 'deleted': [(1719, '  KDWalk(context.tree, reinterpret_cast<void_proc>(MakePotentialClusters), &context);')]}",yes
src\classify\kdtree.cpp,src\classify\kdtree.cpp,90c09a3df34d1b9d1023e5f090326d6eb8839911,04551ce2a600c87f7802010863160c86423006e7,"Replace void_proc by kdwald_proc with correct arguments

This allows removing a reinterpret_cast and fixes a runtime error
with sanitizers:

runtime error: call to function
tesseract::MakePotentialClusters(tesseract::ClusteringContext*, tesseract::CLUSTER*, int)
through pointer to incorrect function type 'void (*)(...)'

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -212,7 +212,7 @@ KDTREE *MakeKDTree(int16_t KeySize, const PARAM_DESC KeyDesc[]) {
  * @param Key    ptr to key by which data can be retrieved
  * @param Data    ptr to data to be stored in the tree
  */
-void KDStore(KDTREE *Tree, float *Key, void *Data) {
+void KDStore(KDTREE *Tree, float *Key, CLUSTER *Data) {
   auto PtrToNode = &(Tree->Root.Left);
   auto Node = *PtrToNode;
   auto Level = NextLevel(Tree, -1);
@@ -310,7 +310,7 @@ void KDNearestNeighborSearch(KDTREE *Tree, float Query[], int QuerySize, float M
 
 /*---------------------------------------------------------------------------*/
 /** Walk a given Tree with action. */
-void KDWalk(KDTREE *Tree, void_proc action, void *context) {
+void KDWalk(KDTREE *Tree, kdwalk_proc action, ClusteringContext *context) {
   if (Tree->Root.Left != nullptr) {
     Walk(Tree, action, context, Tree->Root.Left, NextLevel(Tree, -1));
   }
@@ -463,7 +463,7 @@ bool KDTreeSearch::BoxIntersectsSearch(float *lower, float *upper) {
  * @param sub_tree  ptr to root of subtree to be walked
  * @param level  current level in the tree for this node
  */
-void Walk(KDTREE *tree, void_proc action, void *context, KDNODE *sub_tree, int32_t level) {
+void Walk(KDTREE *tree, kdwalk_proc action, ClusteringContext *context, KDNODE *sub_tree, int32_t level) {
   (*action)(context, sub_tree->Data, level);
   if (sub_tree->Left != nullptr) {
     Walk(tree, action, context, sub_tree->Left, NextLevel(tree, level));
","{'added': [(215, 'void KDStore(KDTREE *Tree, float *Key, CLUSTER *Data) {'), (313, 'void KDWalk(KDTREE *Tree, kdwalk_proc action, ClusteringContext *context) {'), (466, 'void Walk(KDTREE *tree, kdwalk_proc action, ClusteringContext *context, KDNODE *sub_tree, int32_t level) {')], 'deleted': [(215, 'void KDStore(KDTREE *Tree, float *Key, void *Data) {'), (313, 'void KDWalk(KDTREE *Tree, void_proc action, void *context) {'), (466, 'void Walk(KDTREE *tree, void_proc action, void *context, KDNODE *sub_tree, int32_t level) {')]}",yes
src\classify\kdtree.h,src\classify\kdtree.h,90c09a3df34d1b9d1023e5f090326d6eb8839911,04551ce2a600c87f7802010863160c86423006e7,"Replace void_proc by kdwald_proc with correct arguments

This allows removing a reinterpret_cast and fixes a runtime error
with sanitizers:

runtime error: call to function
tesseract::MakePotentialClusters(tesseract::ClusteringContext*, tesseract::CLUSTER*, int)
through pointer to incorrect function type 'void (*)(...)'

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -22,8 +22,6 @@
 
 namespace tesseract {
 
-using void_proc = void (*)(...);
-
 /**
 NOTE:  All circular parameters of all keys must be in the range
 
@@ -34,8 +32,12 @@ MakeKDTree.  All KD routines assume that this is true and will not operate
 correctly if circular parameters outside the specified range are used.
 */
 
+struct ClusteringContext;
+struct CLUSTER;
 struct KDTREE;
 
+using kdwalk_proc = void (*)(ClusteringContext *context, CLUSTER *Cluster, int32_t Level);
+
 struct KDNODE {
   /// This routine allocates memory for a new K-D tree node
   /// and places the specified Key and Data into it.  The
@@ -46,14 +48,14 @@ struct KDNODE {
   /// @param Data  ptr to data to be stored in new node
   /// @param Index  index of Key to branch on
   KDNODE() = default;
-  KDNODE(KDTREE *tree, float key[], void *data, int Index);
+  KDNODE(KDTREE *tree, float key[], CLUSTER *data, int Index);
   ~KDNODE() {
     delete Left;
     delete Right;
   }
 
   float *Key;          /**< search key */
-  void *Data;          /**< data that corresponds to key */
+  CLUSTER *Data;       /**< data that corresponds to key */
   float BranchPoint;   /**< needed to make deletes work efficiently */
   float LeftBranch;    /**< used to optimize search pruning */
   float RightBranch;   /**< used to optimize search pruning */
@@ -80,7 +82,7 @@ struct KDTREE {
   std::vector<PARAM_DESC> KeyDesc; // description of each dimension
 };
 
-inline KDNODE::KDNODE(KDTREE *tree, float key[], void *data, int Index) {
+inline KDNODE::KDNODE(KDTREE *tree, float key[], CLUSTER *data, int Index) {
   Key = key;
   Data = data;
   BranchPoint = Key[Index];
@@ -100,14 +102,14 @@ inline KDNODE::KDNODE(KDTREE *tree, float key[], void *data, int Index) {
 -----------------------------------------------------------------------------*/
 KDTREE *MakeKDTree(int16_t KeySize, const PARAM_DESC KeyDesc[]);
 
-void KDStore(KDTREE *Tree, float *Key, void *Data);
+void KDStore(KDTREE *Tree, float *Key, CLUSTER *Data);
 
 void KDDelete(KDTREE *Tree, float Key[], void *Data);
 
 void KDNearestNeighborSearch(KDTREE *Tree, float Query[], int QuerySize, float MaxDistance,
                              int *NumberOfResults, void **NBuffer, float DBuffer[]);
 
-void KDWalk(KDTREE *Tree, void_proc Action, void *context);
+void KDWalk(KDTREE *Tree, kdwalk_proc Action, ClusteringContext *context);
 
 /*-----------------------------------------------------------------------------
           Private Function Prototypes
@@ -120,7 +122,7 @@ float ComputeDistance(int k, PARAM_DESC *dim, float p1[], float p2[]);
 
 int QueryInSearch(KDTREE *tree);
 
-void Walk(KDTREE *tree, void_proc action, void *context, KDNODE *SubTree, int32_t Level);
+void Walk(KDTREE *tree, kdwalk_proc action, ClusteringContext *context, KDNODE *SubTree, int32_t Level);
 
 void InsertNodes(KDTREE *tree, KDNODE *nodes);
 
","{'added': [(35, 'struct ClusteringContext;'), (36, 'struct CLUSTER;'), (39, 'using kdwalk_proc = void (*)(ClusteringContext *context, CLUSTER *Cluster, int32_t Level);'), (40, ''), (51, '  KDNODE(KDTREE *tree, float key[], CLUSTER *data, int Index);'), (58, '  CLUSTER *Data;       /**< data that corresponds to key */'), (85, 'inline KDNODE::KDNODE(KDTREE *tree, float key[], CLUSTER *data, int Index) {'), (105, 'void KDStore(KDTREE *Tree, float *Key, CLUSTER *Data);'), (112, 'void KDWalk(KDTREE *Tree, kdwalk_proc Action, ClusteringContext *context);'), (125, 'void Walk(KDTREE *tree, kdwalk_proc action, ClusteringContext *context, KDNODE *SubTree, int32_t Level);')], 'deleted': [(25, 'using void_proc = void (*)(...);'), (26, ''), (49, '  KDNODE(KDTREE *tree, float key[], void *data, int Index);'), (56, '  void *Data;          /**< data that corresponds to key */'), (83, 'inline KDNODE::KDNODE(KDTREE *tree, float key[], void *data, int Index) {'), (103, 'void KDStore(KDTREE *Tree, float *Key, void *Data);'), (110, 'void KDWalk(KDTREE *Tree, void_proc Action, void *context);'), (123, 'void Walk(KDTREE *tree, void_proc action, void *context, KDNODE *SubTree, int32_t Level);')]}",yes
.clang-format,.clang-format,04551ce2a600c87f7802010863160c86423006e7,0680ba870ea04f5be300845ce79a21295fb29a72,clang-format: use default value for line width (80),"@@ -1,7 +1,7 @@
 BasedOnStyle: Google
 
 # Modifications for Tesseract.
-ColumnLimit:     100
+
 # Only merge empty functions.
 AllowShortFunctionsOnASingleLine: Empty
 # Do not allow short if statements.
","{'added': [(4, '')], 'deleted': [(4, 'ColumnLimit:     100')]}",yes
src\ccutil\object_cache.h,src\ccutil\object_cache.h,8c34b0de6270c115074402918c954b38e97354ba,b37de16633b84aac45a66994f64e2dc9d9c33ffe,"Modernize function ObjectCache::DeleteUnusedObjects (fix issue with sanitizers)

The old code did not work with compiler option `-fsanitize=address,undefined`
and caused apiexample_test to run forever with this error message:

Running main() from unittest/third_party/googletest/googletest/src/gtest_main.cc
[==========] Running 4 tests from 2 test suites.
[----------] Global test environment set-up.
[----------] 1 test from EuroText
[ RUN      ] EuroText.FastLatinOCR
/usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/debug/safe_iterator.h:608:
In function:
    _Safe_iterator<type-parameter-0-0, type-parameter-0-1,
    std::bidirectional_iterator_tag>
    &__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<tesseract::ObjectCache<tesseract::Dawg>::ReferenceCount
    *,
    std::__cxx1998::vector<tesseract::ObjectCache<tesseract::Dawg>::ReferenceCount,
    std::allocator<tesseract::ObjectCache<tesseract::Dawg>::ReferenceCount>>>,
[...]

That error message was followed by an endless sequence of newlines.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -96,12 +96,16 @@ public:
 
   void DeleteUnusedObjects() {
     std::lock_guard<std::mutex> guard(mu_);
-    for (auto it = cache_.rbegin(); it != cache_.rend(); ++it) {
-      if (it->count <= 0) {
-        delete it->object;
-        cache_.erase(std::next(it).base());
-      }
-    }
+    cache_.erase(std::remove_if(cache_.begin(), cache_.end(),
+                                [](const ReferenceCount &it) {
+                                  if (it.count <= 0) {
+                                    delete it.object;
+                                    return true;
+                                  } else {
+                                    return false;
+                                  }
+                                }),
+                 cache_.end());
   }
 
 private:
","{'added': [(99, '    cache_.erase(std::remove_if(cache_.begin(), cache_.end(),'), (100, '                                [](const ReferenceCount &it) {'), (101, '                                  if (it.count <= 0) {'), (102, '                                    delete it.object;'), (103, '                                    return true;'), (104, '                                  } else {'), (105, '                                    return false;'), (106, '                                  }'), (107, '                                }),'), (108, '                 cache_.end());')], 'deleted': [(99, '    for (auto it = cache_.rbegin(); it != cache_.rend(); ++it) {'), (100, '      if (it->count <= 0) {'), (101, '        delete it->object;'), (102, '        cache_.erase(std::next(it).base());'), (103, '      }'), (104, '    }')]}",yes
src\ccmain\par_control.cpp,src\ccmain\par_control.cpp,b37de16633b84aac45a66994f64e2dc9d9c33ffe,d89ff4667bc401ed9a5b7726f98ae32878777040,"Revert ""fix: index variable in OpenMP 'for' statement must have signed integral type""

This reverts commit bc7a7eea2f9b897095ab2f296e70617d4afeafd7.","@@ -55,7 +55,7 @@ void Tesseract::PrerecAllWordsPar(const std::vector<WordData> &words) {
 #  pragma omp parallel for num_threads(10)
 #endif // _OPENMP
     // NOLINTNEXTLINE(modernize-loop-convert)
-    for (auto b = 0; b < blobs.size(); ++b) {
+    for (size_t b = 0; b < blobs.size(); ++b) {
       *blobs[b].choices =
           blobs[b].tesseract->classify_blob(blobs[b].blob, ""par"", ScrollView::WHITE, nullptr);
     }
","{'added': [(58, '    for (size_t b = 0; b < blobs.size(); ++b) {')], 'deleted': [(58, '    for (auto b = 0; b < blobs.size(); ++b) {')]}",yes
src\lstm\parallel.cpp,src\lstm\parallel.cpp,b37de16633b84aac45a66994f64e2dc9d9c33ffe,d89ff4667bc401ed9a5b7726f98ae32878777040,"Revert ""fix: index variable in OpenMP 'for' statement must have signed integral type""

This reverts commit bc7a7eea2f9b897095ab2f296e70617d4afeafd7.","@@ -137,7 +137,7 @@ bool Parallel::Backward(bool debug, const NetworkIO &fwd_deltas, NetworkScratch
 #ifdef _OPENMP
 #  pragma omp parallel for num_threads(stack_size)
 #endif
-    for (auto i = 0; i < stack_size; ++i) {
+    for (unsigned i = 0; i < stack_size; ++i) {
       stack_[i]->Backward(debug, *in_deltas[i], scratch, i == 0 ? back_deltas : out_deltas[i]);
     }
     if (needs_to_backprop_) {
","{'added': [(140, '    for (unsigned i = 0; i < stack_size; ++i) {')], 'deleted': [(140, '    for (auto i = 0; i < stack_size; ++i) {')]}",yes
.clang-format,.clang-format,d89ff4667bc401ed9a5b7726f98ae32878777040,f77c63d4469910453f82bec6cee3e62ca5b0bc18,reformat code (files with tabs),"@@ -1,7 +1,7 @@
 BasedOnStyle: Google
 
 # Modifications for Tesseract.
-
+ColumnLimit:     100
 # Only merge empty functions.
 AllowShortFunctionsOnASingleLine: Empty
 # Do not allow short if statements.
","{'added': [(4, 'ColumnLimit:     100')], 'deleted': [(4, '')]}",yes
src\arch\dotproductsse.cpp,src\arch\dotproductsse.cpp,d89ff4667bc401ed9a5b7726f98ae32878777040,f77c63d4469910453f82bec6cee3e62ca5b0bc18,reformat code (files with tabs),"@@ -71,9 +71,9 @@ float DotProductSSE(const float *u, const float *v, int n) {
   }
   // Add the 4 sums in sum horizontally.
 #if 0
-	alignas(32) float tmp[4];
-	_mm_store_ps(tmp, sum);
-	float result = tmp[0] + tmp[1] + tmp[2] + tmp[3];
+  alignas(32) float tmp[4];
+  _mm_store_ps(tmp, sum);
+  float result = tmp[0] + tmp[1] + tmp[2] + tmp[3];
 #else
   __m128 zero = _mm_setzero_ps();
   // https://www.felixcloutier.com/x86/haddps
","{'added': [(74, '  alignas(32) float tmp[4];'), (75, '  _mm_store_ps(tmp, sum);'), (76, '  float result = tmp[0] + tmp[1] + tmp[2] + tmp[3];')], 'deleted': [(74, '\talignas(32) float tmp[4];'), (75, '\t_mm_store_ps(tmp, sum);'), (76, '\tfloat result = tmp[0] + tmp[1] + tmp[2] + tmp[3];')]}",yes
src\ccstruct\ratngs.cpp,src\ccstruct\ratngs.cpp,d89ff4667bc401ed9a5b7726f98ae32878777040,f77c63d4469910453f82bec6cee3e62ca5b0bc18,reformat code (files with tabs),"@@ -475,7 +475,7 @@ WERD_CHOICE &WERD_CHOICE::operator+=(const WERD_CHOICE &second) {
   if (second.adjust_factor_ > adjust_factor_) {
     adjust_factor_ = second.adjust_factor_;
   }
-  rating_ += second.rating();          // add ratings
+  rating_ += second.rating();            // add ratings
   if (second.certainty() < certainty_) { // take min
     certainty_ = second.certainty();
   }
@@ -568,7 +568,7 @@ void WERD_CHOICE::SetScriptPositions(bool small_caps, TWERD *word, int debug) {
       ScriptPos sp = script_pos_[i];
       if (sp == tesseract::SP_SUBSCRIPT || sp == tesseract::SP_SUPERSCRIPT) {
         ASSERT_HOST(position_counts[sp] > 0);
-	position_counts[sp]--;
+        position_counts[sp]--;
         position_counts[tesseract::SP_NORMAL]++;
         script_pos_[i] = tesseract::SP_NORMAL;
       }
@@ -583,7 +583,7 @@ void WERD_CHOICE::SetScriptPositions(bool small_caps, TWERD *word, int debug) {
         TBLOB *tblob = word->blobs[chunk_index];
         ScriptPositionOf(true, *unicharset_, tblob->bounding_box(), unichar_id(blob_index));
       }
-      chunk_index += state_.empty() ? 1 :  state_[blob_index];
+      chunk_index += state_.empty() ? 1 : state_[blob_index];
     }
   }
 }
","{'added': [(478, '  rating_ += second.rating();            // add ratings'), (571, '        position_counts[sp]--;'), (586, '      chunk_index += state_.empty() ? 1 : state_[blob_index];')], 'deleted': [(478, '  rating_ += second.rating();          // add ratings'), (571, '\tposition_counts[sp]--;'), (586, '      chunk_index += state_.empty() ? 1 :  state_[blob_index];')]}",yes
src\ccutil\ambigs.cpp,src\ccutil\ambigs.cpp,d89ff4667bc401ed9a5b7726f98ae32878777040,f77c63d4469910453f82bec6cee3e62ca5b0bc18,reformat code (files with tabs),"@@ -138,7 +138,7 @@ void UnicharAmbigs::LoadUnicharAmbigs(const UNICHARSET &encoder_set, TFile *ambi
             ASSERT_HOST(id_to_insert != INVALID_UNICHAR_ID);
             // Add the new unichar id to adaption_ambigs_entry (only if the
             // vector does not already contain it) keeping it in sorted order.
-	    size_t j;
+            size_t j;
             for (j = 0;
                  j < adaption_ambigs_entry->size() && (*adaption_ambigs_entry)[j] > id_to_insert;
                  ++j) {
","{'added': [(141, '            size_t j;')], 'deleted': [(141, '\t    size_t j;')]}",yes
src\classify\adaptmatch.cpp,src\classify\adaptmatch.cpp,d89ff4667bc401ed9a5b7726f98ae32878777040,f77c63d4469910453f82bec6cee3e62ca5b0bc18,reformat code (files with tabs),"@@ -327,7 +327,7 @@ void Classify::LearnWord(const char *fontname, WERD_RES *word) {
               tokens[0] = CHAR_FRAGMENT::to_string(tokens[0].c_str(), frag, word->best_state[ch],
                                                    pieces_all_natural);
 
-	      std::string full_string;
+              std::string full_string;
               for (unsigned i = 0; i < tokens.size(); i++) {
                 full_string += tokens[i];
                 if (i != tokens.size() - 1) {
@@ -1149,9 +1149,9 @@ void Classify::ExpandShapesAndApplyCorrections(ADAPT_CLASS_STRUCT **classes, boo
         }
       }
       for (auto &m : mapped_results) {
-        m.rating = ComputeCorrectedRating(
-            debug, m.unichar_id, cp_rating, int_result->rating,
-            int_result->feature_misses, bottom, top, blob_length, matcher_multiplier, cn_factors);
+        m.rating = ComputeCorrectedRating(debug, m.unichar_id, cp_rating, int_result->rating,
+                                          int_result->feature_misses, bottom, top, blob_length,
+                                          matcher_multiplier, cn_factors);
         AddNewResult(m, final_results);
       }
       return;
","{'added': [(330, '              std::string full_string;'), (1152, '        m.rating = ComputeCorrectedRating(debug, m.unichar_id, cp_rating, int_result->rating,'), (1153, '                                          int_result->feature_misses, bottom, top, blob_length,'), (1154, '                                          matcher_multiplier, cn_factors);')], 'deleted': [(330, '\t      std::string full_string;'), (1152, '        m.rating = ComputeCorrectedRating('), (1153, '            debug, m.unichar_id, cp_rating, int_result->rating,'), (1154, '            int_result->feature_misses, bottom, top, blob_length, matcher_multiplier, cn_factors);')]}",yes
src\dict\permdawg.cpp,src\dict\permdawg.cpp,d89ff4667bc401ed9a5b7726f98ae32878777040,f77c63d4469910453f82bec6cee3e62ca5b0bc18,reformat code (files with tabs),"@@ -115,12 +115,12 @@ void Dict::go_deeper_dawg_fxn(const char *debug, const BLOB_CHOICE_LIST_VECTOR &
             tprintf(""Failed to open output_ambig_words_file %s\n"", output_ambig_words_file.c_str());
             exit(1);
           }
-	  std::string word_str;
+          std::string word_str;
           word->string_and_lengths(&word_str, nullptr);
           word_str += "" "";
           fprintf(output_ambig_words_file_, ""%s"", word_str.c_str());
         }
-	std::string word_str;
+        std::string word_str;
         word->string_and_lengths(&word_str, nullptr);
         word_str += "" "";
         fprintf(output_ambig_words_file_, ""%s"", word_str.c_str());
","{'added': [(118, '          std::string word_str;'), (123, '        std::string word_str;')], 'deleted': [(118, '\t  std::string word_str;'), (123, '\tstd::string word_str;')]}",yes
src\tesseract.cpp,src\tesseract.cpp,d89ff4667bc401ed9a5b7726f98ae32878777040,f77c63d4469910453f82bec6cee3e62ca5b0bc18,reformat code (files with tabs),"@@ -371,9 +371,10 @@ static bool checkArgValues(int arg, const char *mode, int count) {
 // NOTE: arg_i is used here to avoid ugly *i so many times in this function
 static bool ParseArgs(int argc, char **argv, const char **lang, const char **image,
                       const char **outputbase, const char **datapath, l_int32 *dpi,
-                      bool *list_langs, bool *print_parameters, bool* print_fonts_table, std::vector<std::string> *vars_vec,
-                      std::vector<std::string> *vars_values, l_int32 *arg_i,
-                      tesseract::PageSegMode *pagesegmode, tesseract::OcrEngineMode *enginemode) {
+                      bool *list_langs, bool *print_parameters, bool *print_fonts_table,
+                      std::vector<std::string> *vars_vec, std::vector<std::string> *vars_values,
+                      l_int32 *arg_i, tesseract::PageSegMode *pagesegmode,
+                      tesseract::OcrEngineMode *enginemode) {
   bool noocr = false;
   int i;
   for (i = 1; i < argc && (*outputbase == nullptr || argv[i][0] == '-'); i++) {
@@ -421,10 +422,10 @@ static bool ParseArgs(int argc, char **argv, const char **lang, const char **ima
       };
       try {
         auto loglevel = loglevels.at(loglevel_string);
-	log_level = loglevel;
-      } catch(const std::out_of_range& e) {
+        log_level = loglevel;
+      } catch (const std::out_of_range &e) {
         // TODO: Allow numeric argument?
-	tprintf(""Error, unsupported --loglevel %s\n"", loglevel_string.c_str());
+        tprintf(""Error, unsupported --loglevel %s\n"", loglevel_string.c_str());
         return false;
       }
     } else if (strcmp(argv[i], ""--user-words"") == 0 && i + 1 < argc) {
@@ -674,7 +675,8 @@ int main(int argc, char **argv) {
 #endif // HAVE_TIFFIO_H && _WIN32
 
   if (!ParseArgs(argc, argv, &lang, &image, &outputbase, &datapath, &dpi, &list_langs,
-                 &print_parameters, &print_fonts_table, &vars_vec, &vars_values, &arg_i, &pagesegmode, &enginemode)) {
+                 &print_parameters, &print_fonts_table, &vars_vec, &vars_values, &arg_i,
+                 &pagesegmode, &enginemode)) {
     return EXIT_FAILURE;
   }
 
@@ -728,7 +730,7 @@ int main(int argc, char **argv) {
 
 #ifndef DISABLED_LEGACY_ENGINE
   if (print_fonts_table) {
-    FILE* fout = stdout;
+    FILE *fout = stdout;
     fprintf(stdout, ""Tesseract fonts table:\n"");
     api.PrintFontsTable(fout);
     api.End();
","{'added': [(374, '                      bool *list_langs, bool *print_parameters, bool *print_fonts_table,'), (375, '                      std::vector<std::string> *vars_vec, std::vector<std::string> *vars_values,'), (376, '                      l_int32 *arg_i, tesseract::PageSegMode *pagesegmode,'), (377, '                      tesseract::OcrEngineMode *enginemode) {'), (425, '        log_level = loglevel;'), (426, '      } catch (const std::out_of_range &e) {'), (428, '        tprintf(""Error, unsupported --loglevel %s\\n"", loglevel_string.c_str());'), (678, '                 &print_parameters, &print_fonts_table, &vars_vec, &vars_values, &arg_i,'), (679, '                 &pagesegmode, &enginemode)) {'), (733, '    FILE *fout = stdout;')], 'deleted': [(374, '                      bool *list_langs, bool *print_parameters, bool* print_fonts_table, std::vector<std::string> *vars_vec,'), (375, '                      std::vector<std::string> *vars_values, l_int32 *arg_i,'), (376, '                      tesseract::PageSegMode *pagesegmode, tesseract::OcrEngineMode *enginemode) {'), (424, '\tlog_level = loglevel;'), (425, '      } catch(const std::out_of_range& e) {'), (427, '\ttprintf(""Error, unsupported --loglevel %s\\n"", loglevel_string.c_str());'), (677, '                 &print_parameters, &print_fonts_table, &vars_vec, &vars_values, &arg_i, &pagesegmode, &enginemode)) {'), (731, '    FILE* fout = stdout;')]}",yes
src\ccstruct\boxread.cpp,src\ccstruct\boxread.cpp,f77c63d4469910453f82bec6cee3e62ca5b0bc18,4ebaa4bffb828210dc9ca37b312994366e193a78,report missing or empty box file,"@@ -61,6 +61,7 @@ FILE *OpenBoxFile(const char *fname) {
   FILE *box_file = nullptr;
   if (!(box_file = fopen(filename.c_str(), ""rb""))) {
     CANTOPENFILE.error(""read_next_box"", TESSEXIT, ""Can't open box file %s"", filename.c_str());
+    tprintf(""Can't open box file %s"", filename.c_str());
   }
   return box_file;
 }
@@ -76,8 +77,14 @@ bool ReadAllBoxes(int target_page, bool skip_blanks, const char *filename, std::
                   std::vector<std::string> *texts, std::vector<std::string> *box_texts,
                   std::vector<int> *pages) {
   std::ifstream input(BoxFileName(filename).c_str(), std::ios::in | std::ios::binary);
+  if (input.fail()) {
+    tprintf(""Can not read box data from '%s'.\n"", BoxFileName(filename).c_str());
+    tprintf(""Does it exists?\n"");
+    return false;
+  }
   std::vector<char> box_data(std::istreambuf_iterator<char>(input), {});
   if (box_data.empty()) {
+    tprintf(""No box data found in '%s'.\n"", BoxFileName(filename).c_str());
     return false;
   }
   // Convert the array of bytes to a string, so it can be used by the parser.
","{'added': [(64, '    tprintf(""Can\'t open box file %s"", filename.c_str());'), (80, '  if (input.fail()) {'), (81, '    tprintf(""Can not read box data from \'%s\'.\\n"", BoxFileName(filename).c_str());'), (82, '    tprintf(""Does it exists?\\n"");'), (83, '    return false;'), (84, '  }'), (87, '    tprintf(""No box data found in \'%s\'.\\n"", BoxFileName(filename).c_str());')], 'deleted': []}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,4ebaa4bffb828210dc9ca37b312994366e193a78,b7319c26f95b32c1dc1ec9c71867bc9fe7ebc51c,GA: use png 1.6.39 from cmake-win64,"@@ -46,9 +46,9 @@ jobs:
       - name: Build and Install libpng
         shell: cmd
         run: |
-             curl -sSL -o lpng1637.zip https://download.sourceforge.net/libpng/lpng1637.zip
-             unzip.exe  -qq lpng1637.zip
-             cd lpng1637
+             curl -sSL -o lpng1639.zip https://download.sourceforge.net/libpng/lpng1639.zip
+             unzip.exe  -qq lpng1639.zip
+             cd lpng1639
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF
              cmake --build build --config Release --target install
              cd ..
","{'added': [(49, '             curl -sSL -o lpng1639.zip https://download.sourceforge.net/libpng/lpng1639.zip'), (50, '             unzip.exe  -qq lpng1639.zip'), (51, '             cd lpng1639')], 'deleted': [(49, '             curl -sSL -o lpng1637.zip https://download.sourceforge.net/libpng/lpng1637.zip'), (50, '             unzip.exe  -qq lpng1637.zip'), (51, '             cd lpng1637')]}",yes
src\ccmain\par_control.cpp,src\ccmain\par_control.cpp,bc7a7eea2f9b897095ab2f296e70617d4afeafd7,51cf430899355a420a282b7bcce67de5a8060377,fix: index variable in OpenMP 'for' statement must have signed integral type,"@@ -55,7 +55,7 @@ void Tesseract::PrerecAllWordsPar(const std::vector<WordData> &words) {
 #  pragma omp parallel for num_threads(10)
 #endif // _OPENMP
     // NOLINTNEXTLINE(modernize-loop-convert)
-    for (size_t b = 0; b < blobs.size(); ++b) {
+    for (auto b = 0; b < blobs.size(); ++b) {
       *blobs[b].choices =
           blobs[b].tesseract->classify_blob(blobs[b].blob, ""par"", ScrollView::WHITE, nullptr);
     }
","{'added': [(58, '    for (auto b = 0; b < blobs.size(); ++b) {')], 'deleted': [(58, '    for (size_t b = 0; b < blobs.size(); ++b) {')]}",yes
src\lstm\parallel.cpp,src\lstm\parallel.cpp,bc7a7eea2f9b897095ab2f296e70617d4afeafd7,51cf430899355a420a282b7bcce67de5a8060377,fix: index variable in OpenMP 'for' statement must have signed integral type,"@@ -137,7 +137,7 @@ bool Parallel::Backward(bool debug, const NetworkIO &fwd_deltas, NetworkScratch
 #ifdef _OPENMP
 #  pragma omp parallel for num_threads(stack_size)
 #endif
-    for (unsigned i = 0; i < stack_size; ++i) {
+    for (auto i = 0; i < stack_size; ++i) {
       stack_[i]->Backward(debug, *in_deltas[i], scratch, i == 0 ? back_deltas : out_deltas[i]);
     }
     if (needs_to_backprop_) {
","{'added': [(140, '    for (auto i = 0; i < stack_size; ++i) {')], 'deleted': [(140, '    for (unsigned i = 0; i < stack_size; ++i) {')]}",yes
src\ccutil\tessdatamanager.cpp,src\ccutil\tessdatamanager.cpp,51cf430899355a420a282b7bcce67de5a8060377,cdf6b601ce396ed099a331e5c4e4fda4e78cfc6b,fix typo (missing space),"@@ -278,7 +278,7 @@ bool TessdataManager::CombineDataFiles(const char *language_data_path_prefix,
   if (!IsBaseAvailable() && !IsLSTMAvailable()) {
     tprintf(
         ""Error: traineddata file must contain at least (a unicharset file""
-        ""and inttemp) OR an lstm file.\n"");
+        "" and inttemp) OR an lstm file.\n"");
     return false;
   }
   // Write updated data to the output traineddata file.
","{'added': [(281, '        "" and inttemp) OR an lstm file.\\n"");')], 'deleted': [(281, '        ""and inttemp) OR an lstm file.\\n"");')]}",yes
src\classify\ocrfeatures.cpp,src\classify\ocrfeatures.cpp,a5292214b85b71b7974894e1d0d446b059e67697,c1a1d7e00c0464885791b8a81529eb1e012766f3,"Fix function tesseract::WriteFeature (issue #3925) (#3972)

Fixes: 3b0759940c16b68e (""Replace more STRING by std::string"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -21,6 +21,7 @@
 
 #include <cassert>
 #include <cmath>
+#include <sstream> // for std::stringstream
 
 namespace tesseract {
 
@@ -106,7 +107,13 @@ static void WriteFeature(FEATURE Feature, std::string &str) {
 #ifndef WIN32
     assert(!std::isnan(Feature->Params[i]));
 #endif
-    str += "" "" + std::to_string(Feature->Params[i]);
+    std::stringstream stream;
+    // Use ""C"" locale (needed for double value).
+    stream.imbue(std::locale::classic());
+    // Use 8 digits for double value.
+    stream.precision(8);
+    stream << Feature->Params[i];
+    str += "" "" + stream.str();
   }
   str += ""\n"";
 } /* WriteFeature */
","{'added': [(24, '#include <sstream> // for std::stringstream'), (110, '    std::stringstream stream;'), (111, '    // Use ""C"" locale (needed for double value).'), (112, '    stream.imbue(std::locale::classic());'), (113, '    // Use 8 digits for double value.'), (114, '    stream.precision(8);'), (115, '    stream << Feature->Params[i];'), (116, '    str += "" "" + stream.str();')], 'deleted': [(109, '    str += "" "" + std::to_string(Feature->Params[i]);')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,c1a1d7e00c0464885791b8a81529eb1e012766f3,cdf6b601ce396ed099a331e5c4e4fda4e78cfc6b,"Update cmake-win64.yml

start scheduling cmake-win64 GA","@@ -3,8 +3,8 @@
 name: cmake-win64
 on:
   #push:
-  # schedule:
-    # - cron: 0 23 * * *
+  schedule:
+    - cron: 0 23 * * *
   workflow_dispatch:
 
 env:
","{'added': [(6, '  schedule:'), (7, '    - cron: 0 23 * * *')], 'deleted': [(6, '  # schedule:'), (7, '    # - cron: 0 23 * * *')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,cdf6b601ce396ed099a331e5c4e4fda4e78cfc6b,9cd5012e8927b43634242520c36780240533f66a,Update cmake-win64.yml,"@@ -16,7 +16,6 @@ jobs:
     runs-on: windows-latest
     steps:
       - uses: ilammy/setup-nasm@v1
-      - uses: battila7/get-version-action@v2
       - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""
         uses: actions/checkout@v3
         with:
","{'added': [], 'deleted': [(19, '      - uses: battila7/get-version-action@v2')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,9cd5012e8927b43634242520c36780240533f66a,7e51f0bac5d1e1fa00ea22621cfbc2f45b6db6e0,"Update cmake-win64.yml

remove unused features in GA test","@@ -54,16 +54,6 @@ jobs:
              cmake --build build --config Release --target install
              cd ..
 
-      - name: Build and Install giflib
-        shell: cmd
-        run: |
-             curl -sSL -o giflib-master.zip https://codeload.github.com/xbmc/giflib/zip/master
-             unzip -qq giflib-master.zip
-             cd giflib-master
-             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}}
-             cmake --build build --config Release --target install
-             cd ..
-
       - name: Build and Install libjpeg
         shell: cmd
         run: |
@@ -73,15 +63,6 @@ jobs:
              cmake --build build --config Release --target install
              cd ..
 
-      - name: Build and Install webp
-        shell: cmd
-        run: |
-             git -c advice.detachedHead=false clone --branch v1.2.3 --depth 1 https://github.com/webmproject/libwebp.git
-             cd libwebp
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWEBP_BUILD_ANIM_UTILS=OFF -DWEBP_BUILD_CWEBP=OFF -DWEBP_BUILD_DWEBP=OFF -DWEBP_BUILD_GIF2WEBP=OFF -DWEBP_BUILD_IMG2WEBP=OFF -DWEBP_BUILD_VWEBP=OFF -DWEBP_BUILD_WEBPMUX=OFF -DWEBP_BUILD_WEBPINFO=OFF -DWEBP_BUILD_EXTRAS=OFF
-             cmake --build build --config Release --target install
-             cd ..
-
       - name: Build and Install jbigkit
         shell: cmd
         run: |
@@ -91,15 +72,6 @@ jobs:
              cmake --build build --config Release --target install
              cd ..
 
-      - name: Build and Install zstd
-        shell: cmd
-        run: |
-             git clone --depth 1 https://github.com/facebook/zstd.git
-             cd zstd/build/cmake
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZSTD_BUILD_PROGRAMS=OFF -DBUILD_TESTING=OFF
-             cmake --build build --config Release --target install
-             cd ..
-
       - name: Build and Install libtiff
         shell: cmd
         run: |
@@ -109,15 +81,6 @@ jobs:
              cmake --build build --config Release --target install
              cd ..
 
-      - name: Build and Install openjpeg
-        shell: cmd
-        run: |
-             git clone --depth 1 https://github.com/uclouvain/openjpeg.git
-             cd openjpeg
-             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_CODEC=OFF -DBUILD_TESTING=OFF -DBUILD_DOC=OFF -DCMAKE_WARN_DEPRECATED=OFF
-             cmake --build build --config Release --target install
-             cd ..
-
       - name: Build and Install leptonica
         shell: cmd
         run: |
@@ -127,14 +90,6 @@ jobs:
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_PROG=OFF -DBUILD_SHARED_LIBS=ON
              cmake --build build --config Release --target install
 
-      - name: Build and Install libarchive
-        shell: cmd
-        run: |
-             git clone --depth 1 https://github.com/libarchive/libarchive.git
-             cd libarchive
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DENABLE_TEST=OFF
-             cmake --build build --config Release --target install
-
       - name: Remove not needed tools Before building tesseract
         shell: cmd
         run: >
@@ -143,8 +98,7 @@ jobs:
       - name: Build and Install tesseract
         shell: cmd
         run: |
-             REM cmake -E env CXXFLAGS=""/Qpar /fp:fast""
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=OFF
              cmake --build build --config Release --target install
 
       - name: Upload Build Results
@@ -158,13 +112,15 @@ jobs:
         shell: cmd
         run: |
           curl -L https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output ${{env.ILOC}}/share/tessdata/eng.traineddata
-          REM curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata
+          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata
           echo ""Setting TESSDATA_PREFIX...""
           set TESSDATA_PREFIX=${{env.ILOC}}/share/tessdata
           echo ""Setting PATH...""
           set PATH=${{env.ILOC}}/bin;%PATH%
           echo ""Checking installed tesseract version...""
           tesseract -v
+          echo ""Checking installed langs""
           tesseract --list-langs
+          echo ""Checking OCR process""
           tesseract test/testing/phototest.tif -
       
","{'added': [(101, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=OFF'), (115, '          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata'), (122, '          echo ""Checking installed langs""'), (124, '          echo ""Checking OCR process""')], 'deleted': [(57, '      - name: Build and Install giflib'), (58, '        shell: cmd'), (59, '        run: |'), (60, '             curl -sSL -o giflib-master.zip https://codeload.github.com/xbmc/giflib/zip/master'), (61, '             unzip -qq giflib-master.zip'), (62, '             cd giflib-master'), (63, '             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}}'), (64, '             cmake --build build --config Release --target install'), (65, '             cd ..'), (66, ''), (76, '      - name: Build and Install webp'), (77, '        shell: cmd'), (78, '        run: |'), (79, '             git -c advice.detachedHead=false clone --branch v1.2.3 --depth 1 https://github.com/webmproject/libwebp.git'), (80, '             cd libwebp'), (81, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWEBP_BUILD_ANIM_UTILS=OFF -DWEBP_BUILD_CWEBP=OFF -DWEBP_BUILD_DWEBP=OFF -DWEBP_BUILD_GIF2WEBP=OFF -DWEBP_BUILD_IMG2WEBP=OFF -DWEBP_BUILD_VWEBP=OFF -DWEBP_BUILD_WEBPMUX=OFF -DWEBP_BUILD_WEBPINFO=OFF -DWEBP_BUILD_EXTRAS=OFF'), (82, '             cmake --build build --config Release --target install'), (83, '             cd ..'), (84, ''), (94, '      - name: Build and Install zstd'), (95, '        shell: cmd'), (96, '        run: |'), (97, '             git clone --depth 1 https://github.com/facebook/zstd.git'), (98, '             cd zstd/build/cmake'), (99, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZSTD_BUILD_PROGRAMS=OFF -DBUILD_TESTING=OFF'), (100, '             cmake --build build --config Release --target install'), (101, '             cd ..'), (102, ''), (112, '      - name: Build and Install openjpeg'), (113, '        shell: cmd'), (114, '        run: |'), (115, '             git clone --depth 1 https://github.com/uclouvain/openjpeg.git'), (116, '             cd openjpeg'), (117, '             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_CODEC=OFF -DBUILD_TESTING=OFF -DBUILD_DOC=OFF -DCMAKE_WARN_DEPRECATED=OFF'), (118, '             cmake --build build --config Release --target install'), (119, '             cd ..'), (120, ''), (130, '      - name: Build and Install libarchive'), (131, '        shell: cmd'), (132, '        run: |'), (133, '             git clone --depth 1 https://github.com/libarchive/libarchive.git'), (134, '             cd libarchive'), (135, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DENABLE_TEST=OFF'), (136, '             cmake --build build --config Release --target install'), (137, ''), (146, '             REM cmake -E env CXXFLAGS=""/Qpar /fp:fast""'), (147, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON'), (161, '          REM curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,7e51f0bac5d1e1fa00ea22621cfbc2f45b6db6e0,ac8ff2eae99f517e8d097a14e6464f2528d86a75,GA cmake-win64: uninstall strawberryperl to fix libtiff build,"@@ -30,6 +30,10 @@ jobs:
       - name: Setup Instalation Location
         run: |
              mkdir ${{env.ILOC}}
+      - name: Uninstall Perl
+        run: |
+          choco uninstall strawberryperl
+
       - name: Build and Install zlib-ng
         shell: cmd
         run: |
","{'added': [(33, '      - name: Uninstall Perl'), (34, '        run: |'), (35, '          choco uninstall strawberryperl'), (36, '')], 'deleted': []}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,ac8ff2eae99f517e8d097a14e6464f2528d86a75,af131241af5427846b09a2757c0adb812dcc9a0a,GA cmake-win64: fix getting version info,"@@ -21,9 +21,12 @@ jobs:
         uses: actions/checkout@v3
         with:
           submodules: recursive
+      - run: git fetch --prune --unshallow --tags
       - name: Get the version
         id: get_version
-        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
+        run: |
+             $git_info=$(git describe --tags HEAD)
+             echo ""version=${git_info}"" >> $env:GITHUB_OUTPUT
       - name: Setup Instalation Location
         run: |
              mkdir ${{env.ILOC}}
@@ -143,10 +146,10 @@ jobs:
       - name: Upload Build Results
         uses: actions/upload-artifact@v3.1.1
         with:
-          name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64
+          name: tesseract-${{ steps.get_version.outputs.version }}-VS2019_win64
           path: ${{env.ILOC}}
           retention-days: 5
-          
+
       - name: Display Tesseract Version and Test Command Line Usage
         shell: cmd
         run: |
","{'added': [(24, '      - run: git fetch --prune --unshallow --tags'), (27, '        run: |'), (28, '             $git_info=$(git describe --tags HEAD)'), (29, '             echo ""version=${git_info}"" >> $env:GITHUB_OUTPUT'), (149, '          name: tesseract-${{ steps.get_version.outputs.version }}-VS2019_win64'), (152, '')], 'deleted': [(26, '        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\\/tags\\//}'), (146, '          name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64'), (149, '')]}",yes
src\training\common\trainingsampleset.cpp,src\training\common\trainingsampleset.cpp,af131241af5427846b09a2757c0adb812dcc9a0a,7221973c3bfe6a92645bd43b65d33012f952000d,"Fix training tools for legacy engine (issue #3925) (#3970)

Fixes: cac116dd11dc0976 (""Replace more PointerVector by std::vector [...]"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -539,22 +539,14 @@ void TrainingSampleSet::KillSample(TrainingSample *sample) {
 // Deletes all samples with zero features marked by KillSample.
 void TrainingSampleSet::DeleteDeadSamples() {
   using namespace std::placeholders; // for _1
-  auto old_it = samples_.begin();
-  for (; old_it < samples_.end(); ++old_it) {
-    if (*old_it == nullptr || (*old_it)->class_id() < 0) {
-      break;
-    }
-  }
-  auto new_it = old_it;
-  for (; old_it < samples_.end(); ++old_it) {
-    if (*old_it == nullptr || (*old_it)->class_id() < 0) {
-      delete *old_it;
+  for (auto &&it = samples_.begin(); it < samples_.end();) {
+    if (*it == nullptr || (*it)->class_id() < 0) {
+      samples_.erase(it);
+      delete *it;
     } else {
-      *new_it = *old_it;
-      ++new_it;
+      ++it;
     }
   }
-  samples_.resize(new_it - samples_.begin() + 1);
   num_raw_samples_ = samples_.size();
   // Samples must be re-organized now we have deleted a few.
 }
","{'added': [(542, '  for (auto &&it = samples_.begin(); it < samples_.end();) {'), (543, '    if (*it == nullptr || (*it)->class_id() < 0) {'), (544, '      samples_.erase(it);'), (545, '      delete *it;'), (547, '      ++it;')], 'deleted': [(542, '  auto old_it = samples_.begin();'), (543, '  for (; old_it < samples_.end(); ++old_it) {'), (544, '    if (*old_it == nullptr || (*old_it)->class_id() < 0) {'), (545, '      break;'), (546, '    }'), (547, '  }'), (548, '  auto new_it = old_it;'), (549, '  for (; old_it < samples_.end(); ++old_it) {'), (550, '    if (*old_it == nullptr || (*old_it)->class_id() < 0) {'), (551, '      delete *old_it;'), (553, '      *new_it = *old_it;'), (554, '      ++new_it;'), (557, '  samples_.resize(new_it - samples_.begin() + 1);')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,7221973c3bfe6a92645bd43b65d33012f952000d,8fffed42ad8b2aaff5e9de0bf2f50584d37fe6f7,stop cron cmake-win64 build,"@@ -3,8 +3,8 @@
 name: cmake-win64
 on:
   #push:
-  schedule:
-    - cron: 0 23 * * *
+  # schedule:
+    # - cron: 0 23 * * *
   workflow_dispatch:
 
 env:
","{'added': [(6, '  # schedule:'), (7, '    # - cron: 0 23 * * *')], 'deleted': [(6, '  schedule:'), (7, '    - cron: 0 23 * * *')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,8fffed42ad8b2aaff5e9de0bf2f50584d37fe6f7,e7307fd6b4e59ce45d3cfb2d8777d9c07d6d8db7,Update cmake-win64.yml,"@@ -16,6 +16,7 @@ jobs:
     runs-on: windows-latest
     steps:
       - uses: ilammy/setup-nasm@v1
+      - uses: battila7/get-version-action@v2
       - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""
         uses: actions/checkout@v3
         with:
@@ -139,6 +140,13 @@ jobs:
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON
              cmake --build build --config Release --target install
 
+      - name: Upload Build Results
+        uses: actions/upload-artifact@v3.1.1
+        with:
+          name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64
+          path: ${{env.ILOC}}
+          retention-days: 5
+          
       - name: Display Tesseract Version and Test Command Line Usage
         shell: cmd
         run: |
@@ -152,15 +160,4 @@ jobs:
           tesseract -v
           tesseract --list-langs
           tesseract test/testing/phototest.tif -
-
-      - name: Sleep for 15 seconds
-        run: |
-          echo ""Upload Build Results...""
-          sleep 15s
-        
-      - name: Upload Build Results
-        uses: actions/upload-artifact@v3
-        with:
-          name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64
-          path: ${{env.ILOC}}
-          retention-days: 5
+      
","{'added': [(19, '      - uses: battila7/get-version-action@v2'), (143, '      - name: Upload Build Results'), (144, '        uses: actions/upload-artifact@v3.1.1'), (145, '        with:'), (146, '          name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64'), (147, '          path: ${{env.ILOC}}'), (148, '          retention-days: 5'), (149, ''), (163, '')], 'deleted': [(155, ''), (156, '      - name: Sleep for 15 seconds'), (157, '        run: |'), (158, '          echo ""Upload Build Results...""'), (159, '          sleep 15s'), (160, ''), (161, '      - name: Upload Build Results'), (162, '        uses: actions/upload-artifact@v3'), (163, '        with:'), (164, '          name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64'), (165, '          path: ${{env.ILOC}}'), (166, '          retention-days: 5')]}",no
.github\workflows\sw.yml,.github\workflows\sw.yml,e7307fd6b4e59ce45d3cfb2d8777d9c07d6d8db7,a94a9ef01a20ae9f5f6b401450787d05b03eaeb4,[sw] Remove VS2019 builds.,"@@ -25,7 +25,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macos-12]
+        os: [windows-2022, ubuntu-22.04, ubuntu-20.04, macos-12]
 
     steps:
     - uses: actions/checkout@v3
@@ -34,59 +34,59 @@ jobs:
     - uses: egorpugin/sw-action@master
 
     - name: build
-      if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022' || matrix.os == 'windows-2019')
+      if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022')
       run: ./sw -static -shared -platform x86,x64 -config d,r build
     - name: build-pr
-      if: github.event_name == 'pull_request' && (matrix.os == 'windows-2022' || matrix.os == 'windows-2019')
+      if: github.event_name == 'pull_request' && (matrix.os == 'windows-2022')
       run: ./sw build
 
     - name: build
-      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')
+      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022')
       run: ./sw -static -shared -config d,r build -Dwith-tests=1
     - name: build-pr
-      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')
+      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022')
       run: ./sw build -Dwith-tests=1
 
     - name: download test data
       run: git clone https://github.com/egorpugin/tessdata tessdata_unittest
 
     - name: copy fonts
-      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
+      if: matrix.os != 'windows-2022'
       run: cp tessdata_unittest/fonts/* test/testing/
     - name: copy fonts
-      if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'
+      if: matrix.os == 'windows-2022'
       run: Copy-Item -Path ""tessdata_unittest\fonts\*"" -Destination ""test\testing"" -Recurse
       shell: pwsh
 
     - name: test
-      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')
+      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022')
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       continue-on-error: true
     - name: test
-      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')
+      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022')
       run: ./sw test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       continue-on-error: true
 
     - name: test-nightly
-      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'
+      if: matrix.os != 'windows-2022' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1
       continue-on-error: true
 
     # windows and macos-12 tests hang here for some reason, investigate
     #- name: test
-      #if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019' || matrix.os == 'macos-12'
+      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-12'
       #run: ./sw test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       #continue-on-error: true
 
     - name: Upload Unit Test Results
-      if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
+      if: always() && matrix.os != 'windows-2022'
       uses: actions/upload-artifact@v3
       with:
         name: Test Results (${{ matrix.os }})
         path: .sw/test/results.xml
 
     - name: Publish Test Report
-      if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
+      if: always() && matrix.os != 'windows-2022'
       uses: mikepenz/action-junit-report@v3
       with:
         check_name: test (${{ matrix.os }})
","{'added': [(28, '        os: [windows-2022, ubuntu-22.04, ubuntu-20.04, macos-12]'), (37, ""      if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022')""), (40, ""      if: github.event_name == 'pull_request' && (matrix.os == 'windows-2022')""), (44, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022')""), (47, ""      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022')""), (54, ""      if: matrix.os != 'windows-2022'""), (57, ""      if: matrix.os == 'windows-2022'""), (62, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022')""), (66, ""      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022')""), (71, ""      if: matrix.os != 'windows-2022' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'""), (77, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'macos-12'""), (82, ""      if: always() && matrix.os != 'windows-2022'""), (89, ""      if: always() && matrix.os != 'windows-2022'"")], 'deleted': [(28, '        os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macos-12]'), (37, ""      if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022' || matrix.os == 'windows-2019')""), (40, ""      if: github.event_name == 'pull_request' && (matrix.os == 'windows-2022' || matrix.os == 'windows-2019')""), (44, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')""), (47, ""      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')""), (54, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'""), (57, ""      if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'""), (62, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')""), (66, ""      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')""), (71, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'""), (77, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019' || matrix.os == 'macos-12'""), (82, ""      if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'""), (89, ""      if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'"")]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,a94a9ef01a20ae9f5f6b401450787d05b03eaeb4,e30b36bb0200ff5e6900c0a76a1f74d1f55b40f5,Update cmake-win64.yml,"@@ -143,9 +143,12 @@ jobs:
         shell: cmd
         run: |
           curl -L https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output ${{env.ILOC}}/share/tessdata/eng.traineddata
-          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata
+          REM curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata
+          echo ""Setting TESSDATA_PREFIX...""
           set TESSDATA_PREFIX=${{env.ILOC}}/share/tessdata
+          echo ""Setting PATH...""
           set PATH=${{env.ILOC}}/bin;%PATH%
+          echo ""Checking installed tesseract version...""
           tesseract -v
           tesseract --list-langs
           tesseract test/testing/phototest.tif -
","{'added': [(146, '          REM curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata'), (147, '          echo ""Setting TESSDATA_PREFIX...""'), (149, '          echo ""Setting PATH...""'), (151, '          echo ""Checking installed tesseract version...""')], 'deleted': [(146, '          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,e30b36bb0200ff5e6900c0a76a1f74d1f55b40f5,5f297dc0b8b500d57b7c073f4457e74ee537819f,"Update cmake-win64.yml

test cmake -win64 GA failure","@@ -149,7 +149,12 @@ jobs:
           tesseract -v
           tesseract --list-langs
           tesseract test/testing/phototest.tif -
-          
+
+      - name: Sleep for 15 seconds
+        run: |
+          echo ""Upload Build Results...""
+          sleep 15s
+        
       - name: Upload Build Results
         uses: actions/upload-artifact@v3
         with:
","{'added': [(152, ''), (153, '      - name: Sleep for 15 seconds'), (154, '        run: |'), (155, '          echo ""Upload Build Results...""'), (156, '          sleep 15s'), (157, '')], 'deleted': [(152, '')]}",no
src\api\hocrrenderer.cpp,src\api\hocrrenderer.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -412,7 +412,7 @@ char *TessBaseAPI::GetHOCRText(ETEXT_DESC *monitor, int page_number) {
                    << "" id='""
                    << ""timestep"" << page_id << ""_"" << wcnt << ""_"" << tcnt
                    << ""'>"";
-          for (auto conf : timestep) {
+          for (auto &&conf : timestep) {
             hocr_str << ""\n         <span class='ocrx_cinfo'""
                      << "" id='""
                      << ""choice_"" << page_id << ""_"" << wcnt << ""_"" << ccnt
","{'added': [(415, '          for (auto &&conf : timestep) {')], 'deleted': [(415, '          for (auto conf : timestep) {')]}",yes
src\ccmain\control.cpp,src\ccmain\control.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1191,7 +1191,7 @@ bool Tesseract::SelectGoodDiacriticOutlines(int pass, float certainty_threshold,
     *ok_outlines = best_outlines;
     if (debug_noise_removal) {
       tprintf(""%s noise combination "", blob ? ""Adding"" : ""New"");
-      for (auto best_outline : best_outlines) {
+      for (auto &&best_outline : best_outlines) {
         tprintf(""%c"", best_outline ? 'T' : 'F');
       }
       tprintf("" yields certainty %g, beating target of %g\n"", best_cert, target_cert);
","{'added': [(1194, '      for (auto &&best_outline : best_outlines) {')], 'deleted': [(1194, '      for (auto best_outline : best_outlines) {')]}",yes
src\ccstruct\fontinfo.cpp,src\ccstruct\fontinfo.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -67,7 +67,7 @@ bool FontInfoTable::DeSerialize(TFile *fp) {
 bool FontInfoTable::SetContainsFontProperties(int font_id,
                                               const std::vector<ScoredFont> &font_set) const {
   uint32_t properties = at(font_id).properties;
-  for (auto f : font_set) {
+  for (auto &&f : font_set) {
     if (at(f.fontinfo_id).properties == properties) {
       return true;
     }
","{'added': [(70, '  for (auto &&f : font_set) {')], 'deleted': [(70, '  for (auto f : font_set) {')]}",yes
src\ccutil\serialis.h,src\ccutil\serialis.h,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -157,7 +157,7 @@ public:
       return false;
     } else if constexpr (std::is_same<T, std::string>::value) {
       // Serialize strings.
-      for (auto string : data) {
+      for (auto &&string : data) {
         if (!Serialize(string)) {
           return false;
         }
","{'added': [(160, '      for (auto &&string : data) {')], 'deleted': [(160, '      for (auto string : data) {')]}",yes
src\classify\adaptmatch.cpp,src\classify\adaptmatch.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1079,7 +1079,7 @@ void Classify::MasterMatcher(INT_TEMPLATES_STRUCT *templates, int16_t num_featur
   int top = blob_box.top();
   int bottom = blob_box.bottom();
   UnicharRating int_result;
-  for (auto result : results) {
+  for (auto &&result : results) {
     CLASS_ID class_id = result.Class;
     BIT_VECTOR protos = classes != nullptr ? classes[class_id]->PermProtos : AllProtosOn;
     BIT_VECTOR configs = classes != nullptr ? classes[class_id]->PermConfigs : AllConfigsOn;
","{'added': [(1082, '  for (auto &&result : results) {')], 'deleted': [(1082, '  for (auto result : results) {')]}",yes
src\classify\shapeclassifier.cpp,src\classify\shapeclassifier.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -174,7 +174,7 @@ void ShapeClassifier::UnicharPrintResults(const char *context,
             GetUnicharset().id_to_unichar(result.unichar_id));
     if (!result.fonts.empty()) {
       tprintf("" Font Vector:"");
-      for (auto font : result.fonts) {
+      for (auto &&font : result.fonts) {
         tprintf("" %d"", font.fontinfo_id);
       }
     }
","{'added': [(177, '      for (auto &&font : result.fonts) {')], 'deleted': [(177, '      for (auto font : result.fonts) {')]}",yes
src\dict\dawg.h,src\dict\dawg.h,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -382,7 +382,7 @@ public:
   /// true otherwise.
   inline bool add_unique(const DawgPosition &new_pos, bool debug,
                          const char *debug_msg) {
-    for (auto position : *this) {
+    for (auto &&position : *this) {
       if (position == new_pos) {
         return false;
       }
","{'added': [(385, '    for (auto &&position : *this) {')], 'deleted': [(385, '    for (auto position : *this) {')]}",yes
src\lstm\networkio.cpp,src\lstm\networkio.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -173,7 +173,7 @@ void NetworkIO::FromPixes(const StaticShape &shape, const std::vector<Image> &pi
   int target_height = shape.height();
   int target_width = shape.width();
   std::vector<std::pair<int, int>> h_w_pairs;
-  for (auto pix : pixes) {
+  for (auto &&pix : pixes) {
     Image var_pix = pix;
     int width = pixGetWidth(var_pix);
     if (target_width != 0) {
","{'added': [(176, '  for (auto &&pix : pixes) {')], 'deleted': [(176, '  for (auto pix : pixes) {')]}",yes
src\lstm\recodebeam.cpp,src\lstm\recodebeam.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -341,7 +341,7 @@ void RecodeBeamSearch::PrintBeam2(bool uids, int num_outputs,
   // fill the topology with depths first
   for (int step = beam.size() - 1; step >= 0; --step) {
     std::vector<tesseract::RecodePair> &heaps = beam.at(step)->beams_->heap();
-    for (auto node : heaps) {
+    for (auto &&node : heaps) {
       int backtracker = 0;
       const RecodeNode *curr = &node.data();
       while (curr != nullptr && !visited.count(curr)) {
@@ -426,7 +426,7 @@ void RecodeBeamSearch::extractSymbolChoices(const UNICHARSET *unicharset) {
     std::vector<const RecodeNode *> best_nodes;
     std::vector<const RecodeNode *> best;
     // Scan the segmented node chain for valid unichar ids.
-    for (auto entry : heaps) {
+    for (auto &&entry : heaps) {
       bool validChar = false;
       int backcounter = 0;
       const RecodeNode *node = &entry.data();
","{'added': [(344, '    for (auto &&node : heaps) {'), (429, '    for (auto &&entry : heaps) {')], 'deleted': [(344, '    for (auto node : heaps) {'), (429, '    for (auto entry : heaps) {')]}",yes
src\training\pango\pango_font_info.cpp,src\training\pango\pango_font_info.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -591,7 +591,7 @@ int FontUtils::FontScore(const std::unordered_map<char32, int64_t> &ch_map,
   }
   *raw_score = 0;
   int ok_chars = 0;
-  for (auto it : ch_map) {
+  for (auto &&it : ch_map) {
     bool covered =
         (coverage != nullptr) && (IsWhitespace(it.first) ||
                                   (pango_coverage_get(coverage, it.first) == PANGO_COVERAGE_EXACT));
","{'added': [(594, '  for (auto &&it : ch_map) {')], 'deleted': [(594, '  for (auto it : ch_map) {')]}",yes
src\wordrec\chopper.cpp,src\wordrec\chopper.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -283,7 +283,7 @@ SEAM *Wordrec::chop_overlapping_blob(const std::vector<TBOX> &boxes, bool italic
 
     bool almost_equal_box = false;
     int num_overlap = 0;
-    for (auto boxe : boxes) {
+    for (auto &&boxe : boxes) {
       if (original_box.overlap_fraction(boxe) > 0.125) {
         num_overlap++;
       }
","{'added': [(286, '    for (auto &&boxe : boxes) {')], 'deleted': [(286, '    for (auto boxe : boxes) {')]}",yes
src\wordrec\lm_pain_points.cpp,src\wordrec\lm_pain_points.cpp,a9c1be658e9fee5f41369bd08709a850943d4ec5,4c0051d53336b641e0c3dbda32dc859b396ea206,"Fix a number of performance issues (reported by Coverity Scan)

Coverity Scan reports ""Unnecessary object copies can affect performance""
and suggests using the auto keyword with an &.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -130,7 +130,7 @@ void LMPainPoints::GenerateFromAmbigs(const DANGERR &fixpt, ViterbiStateEntry *v
                                       WERD_RES *word_res) {
   // Begins and ends in DANGERR vector now record the blob indices as used
   // by the ratings matrix.
-  for (auto danger : fixpt) {
+  for (auto &&danger : fixpt) {
     // Only use dangerous ambiguities.
     if (danger.dangerous) {
       GeneratePainPoint(danger.begin, danger.end - 1, LM_PPTYPE_AMBIG, vse->cost, true,
@@ -203,7 +203,7 @@ bool LMPainPoints::GeneratePainPoint(int col, int row, LMPainPointsType pp_type,
 void LMPainPoints::RemapForSplit(int index) {
   for (auto &pain_points_heap : pain_points_heaps_) {
     std::vector<MatrixCoordPair> &heap = pain_points_heap.heap();
-    for (auto entry : heap) {
+    for (auto &&entry : heap) {
       entry.data().MapForSplit(index);
     }
   }
","{'added': [(133, '  for (auto &&danger : fixpt) {'), (206, '    for (auto &&entry : heap) {')], 'deleted': [(133, '  for (auto danger : fixpt) {'), (206, '    for (auto entry : heap) {')]}",yes
src\ccstruct\points.h,src\ccstruct\points.h,4c0051d53336b641e0c3dbda32dc859b396ea206,1751fba62344cd3338cd00e2b6cb99e7cb61942b,"Add const attribute to several compare operators

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -269,11 +269,11 @@ public:
   bool normalise();
 
   /// test equality
-  bool operator==(const FCOORD &other) {
+  bool operator==(const FCOORD &other) const {
     return xcoord == other.xcoord && ycoord == other.ycoord;
   }
   /// test inequality
-  bool operator!=(const FCOORD &other) {
+  bool operator!=(const FCOORD &other) const {
     return xcoord != other.xcoord || ycoord != other.ycoord;
   }
   /// rotate 90 deg anti
","{'added': [(272, '  bool operator==(const FCOORD &other) const {'), (276, '  bool operator!=(const FCOORD &other) const {')], 'deleted': [(272, '  bool operator==(const FCOORD &other) {'), (276, '  bool operator!=(const FCOORD &other) {')]}",yes
src\ccutil\params.h,src\ccutil\params.h,4c0051d53336b641e0c3dbda32dc859b396ea206,1751fba62344cd3338cd00e2b6cb99e7cb61942b,"Add const attribute to several compare operators

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -253,7 +253,7 @@ public:
   bool empty() const {
     return value_.empty();
   }
-  bool operator==(const std::string &other) {
+  bool operator==(const std::string &other) const {
     return value_ == other;
   }
   void operator=(const std::string &value) {
","{'added': [(256, '  bool operator==(const std::string &other) const {')], 'deleted': [(256, '  bool operator==(const std::string &other) {')]}",yes
src\dict\dawg.h,src\dict\dawg.h,4c0051d53336b641e0c3dbda32dc859b396ea206,1751fba62344cd3338cd00e2b6cb99e7cb61942b,"Add const attribute to several compare operators

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -361,7 +361,7 @@ struct DawgPosition {
         dawg_index(dawg_idx),
         punc_index(punc_idx),
         back_to_punc(backtopunc) {}
-  bool operator==(const DawgPosition &other) {
+  bool operator==(const DawgPosition &other) const {
     return dawg_index == other.dawg_index && dawg_ref == other.dawg_ref &&
            punc_index == other.punc_index && punc_ref == other.punc_ref &&
            back_to_punc == other.back_to_punc;
","{'added': [(364, '  bool operator==(const DawgPosition &other) const {')], 'deleted': [(364, '  bool operator==(const DawgPosition &other) {')]}",yes
src\lstm\recodebeam.cpp,src\lstm\recodebeam.cpp,4c0051d53336b641e0c3dbda32dc859b396ea206,1751fba62344cd3338cd00e2b6cb99e7cb61942b,"Add const attribute to several compare operators

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -322,7 +322,7 @@ void RecodeBeamSearch::ExtractBestPathAsWords(const TBOX &line_box,
 }
 
 struct greater_than {
-  inline bool operator()(const RecodeNode *&node1, const RecodeNode *&node2) {
+  inline bool operator()(const RecodeNode *&node1, const RecodeNode *&node2) const {
     return (node1->score > node2->score);
   }
 };
","{'added': [(325, '  inline bool operator()(const RecodeNode *&node1, const RecodeNode *&node2) const {')], 'deleted': [(325, '  inline bool operator()(const RecodeNode *&node1, const RecodeNode *&node2) {')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,1751fba62344cd3338cd00e2b6cb99e7cb61942b,adbefa83160c42371e7a4b0cf16a16a3aff26b08,[sw] Do a lightweight build during PRs.,"@@ -34,12 +34,18 @@ jobs:
     - uses: egorpugin/sw-action@master
 
     - name: build
-      if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'
+      if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022' || matrix.os == 'windows-2019')
       run: ./sw -static -shared -platform x86,x64 -config d,r build
+    - name: build-pr
+      if: github.event_name == 'pull_request' && (matrix.os == 'windows-2022' || matrix.os == 'windows-2019')
+      run: ./sw build
 
     - name: build
-      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
+      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')
       run: ./sw -static -shared -config d,r build -Dwith-tests=1
+    - name: build-pr
+      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')
+      run: ./sw build -Dwith-tests=1
 
     - name: download test data
       run: git clone https://github.com/egorpugin/tessdata tessdata_unittest
@@ -47,16 +53,19 @@ jobs:
     - name: copy fonts
       if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
       run: cp tessdata_unittest/fonts/* test/testing/
-
     - name: copy fonts
       if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'
       run: Copy-Item -Path ""tessdata_unittest\fonts\*"" -Destination ""test\testing"" -Recurse
       shell: pwsh
 
     - name: test
-      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
+      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       continue-on-error: true
+    - name: test
+      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')
+      run: ./sw test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
+      continue-on-error: true
 
     - name: test-nightly
       if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'
","{'added': [(37, ""      if: github.event_name != 'pull_request' && (matrix.os == 'windows-2022' || matrix.os == 'windows-2019')""), (39, '    - name: build-pr'), (40, ""      if: github.event_name == 'pull_request' && (matrix.os == 'windows-2022' || matrix.os == 'windows-2019')""), (41, '      run: ./sw build'), (44, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')""), (46, '    - name: build-pr'), (47, ""      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')""), (48, '      run: ./sw build -Dwith-tests=1'), (62, ""      if: github.event_name != 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')""), (65, '    - name: test'), (66, ""      if: github.event_name == 'pull_request' && (matrix.os != 'windows-2022' && matrix.os != 'windows-2019')""), (67, '      run: ./sw test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""'), (68, '      continue-on-error: true')], 'deleted': [(37, ""      if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'""), (41, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'""), (50, ''), (57, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'"")]}",yes
configure.ac,configure.ac,adbefa83160c42371e7a4b0cf16a16a3aff26b08,8f4aae70b8665ad581762bbc7d6ac9ef04157417,"Fix AMD64 detection with autobuild on FreeBSD (#3964)

Tesseract for FreeBSD was built without support for SSE4.1, AVX,
AVX2 or FMA because it uses a different value for `host_cpu`.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -136,7 +136,7 @@ AM_CONDITIONAL([HAVE_NEON], false)
 
 case ""${host_cpu}"" in
 
-  *86*)
+  amd64|*86*)
 
     AX_CHECK_COMPILE_FLAG([-mavx], [avx=true], [avx=false], [$WERROR])
     AM_CONDITIONAL([HAVE_AVX], ${avx})
","{'added': [(139, '  amd64|*86*)')], 'deleted': [(139, '  *86*)')]}",yes
src\ccstruct\boxread.cpp,src\ccstruct\boxread.cpp,8f4aae70b8665ad581762bbc7d6ac9ef04157417,78bcc0d84c5bdb5a326af8da96051ec4a0113d3d,lstm.train: allow .box from .raw.png too,"@@ -43,7 +43,7 @@ static std::string BoxFileName(const char *image_filename) {
   std::string box_filename = image_filename;
   size_t length = box_filename.length();
   std::string last = (length > 8) ? box_filename.substr(length - 8) : """";
-  if (last == "".bin.png"" || last == "".nrm.png"") {
+  if (last == "".bin.png"" || last == "".nrm.png"" || last == "".raw.png"") {
     box_filename.resize(length - 8);
   } else {
     size_t lastdot = box_filename.find_last_of('.');
","{'added': [(46, '  if (last == "".bin.png"" || last == "".nrm.png"" || last == "".raw.png"") {')], 'deleted': [(46, '  if (last == "".bin.png"" || last == "".nrm.png"") {')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,78bcc0d84c5bdb5a326af8da96051ec4a0113d3d,fd83f3dc61d5b9b4cb328e200b8f8a09c0aa8ed4,"Update cmake.yml

github action cmake macos: add setting for compilers to find icu4c","@@ -85,6 +85,8 @@ jobs:
         run: |
              set -e
              export PKG_CONFIG_PATH=$(brew --prefix)/opt/icu4c/lib/pkgconfig:$(brew --prefix)/opt/libarchive/lib/pkgconfig:/$(brew --prefix)/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH
+             export LDFLAGS=""-L/usr/local/opt/icu4c/lib""
+             export CPPFLAGS=""-I/usr/local/opt/icu4c/include""
              mkdir build
              mkdir inst
              cmake \
","{'added': [(88, '             export LDFLAGS=""-L/usr/local/opt/icu4c/lib""'), (89, '             export CPPFLAGS=""-I/usr/local/opt/icu4c/include""')], 'deleted': []}",yes
.lgtm.yml,,c01ddc033c71f4833463665d74a371617c556307,7d073f24fb48ae3244d6062c7657dbcac7ce4ffc,"Remove remaining references to deprecated LGTM (fix for #3958)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,18 +0,0 @@
-extraction:
-  cpp:
-    prepare:
-      packages:
-        - libpango1.0-dev
-    configure:
-      command:
-        - ./autogen.sh
-        - mkdir _lgtm_build_dir
-        - cd _lgtm_build_dir
-        - ../configure
-    index:
-      build_command:
-        - cd _lgtm_build_dir
-        - make training
-  python:
-    python_setup:
-      version: 3
","{'added': [], 'deleted': [(1, 'extraction:'), (2, '  cpp:'), (3, '    prepare:'), (4, '      packages:'), (5, '        - libpango1.0-dev'), (6, '    configure:'), (7, '      command:'), (8, '        - ./autogen.sh'), (9, '        - mkdir _lgtm_build_dir'), (10, '        - cd _lgtm_build_dir'), (11, '        - ../configure'), (12, '    index:'), (13, '      build_command:'), (14, '        - cd _lgtm_build_dir'), (15, '        - make training'), (16, '  python:'), (17, '    python_setup:'), (18, '      version: 3')]}",yes
CONTRIBUTING.md,CONTRIBUTING.md,c01ddc033c71f4833463665d74a371617c556307,7d073f24fb48ae3244d6062c7657dbcac7ce4ffc,"Remove remaining references to deprecated LGTM (fix for #3958)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -77,4 +77,4 @@ In short, after running `configure` from the build directory of your choice, to
 
 As soon as your changes are building and tests are succeeding, you can publish them. If you have not already, please [fork](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) tesseract (somewhere) on GitHub, and push your changes to that fork (in a new branch). Then [submit as PR](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork).
 
-Please also keep track of reports from CI (automated build status) and Coverity/LGTM (quality scan). When the indicators show deterioration after your changes, further action may be required to improve them.
+Please also keep track of reports from CI (automated build status) and Coverity/CodeQL (quality scan). When the indicators show deterioration after your changes, further action may be required to improve them.
","{'added': [(80, 'Please also keep track of reports from CI (automated build status) and Coverity/CodeQL (quality scan). When the indicators show deterioration after your changes, further action may be required to improve them.')], 'deleted': [(80, 'Please also keep track of reports from CI (automated build status) and Coverity/LGTM (quality scan). When the indicators show deterioration after your changes, further action may be required to improve them.')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,7d073f24fb48ae3244d6062c7657dbcac7ce4ffc,490611e4c693bc70cbc872a59f259d27b182ef95,github action/cmake: fix macos icu linking,"@@ -54,6 +54,7 @@ jobs:
            brew install leptonica
            brew install libarchive
            brew install pango
+           brew install icu4c && brew link icu4c
            brew install cabextract
            brew install ninja
            ninja --version
","{'added': [(57, '           brew install icu4c && brew link icu4c')], 'deleted': []}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,7d073f24fb48ae3244d6062c7657dbcac7ce4ffc,490611e4c693bc70cbc872a59f259d27b182ef95,github action/cmake: fix macos icu linking,"@@ -264,8 +264,7 @@ if(ICU_FOUND)
                                                        PkgConfig::ICU)
     else()
       target_link_libraries(unicharset_training PUBLIC common_training
-                                                       ${ICU_LIBRARIES}
-                                                       ${ICU_LINK_LIBRARIES})
+                                                       ${ICU_LIBRARIES})
     endif()
   endif()
   target_include_directories(unicharset_training
","{'added': [(267, '                                                       ${ICU_LIBRARIES})')], 'deleted': [(267, '                                                       ${ICU_LIBRARIES}'), (268, '                                                       ${ICU_LINK_LIBRARIES})')]}",yes
src\api\pdfrenderer.cpp,src\api\pdfrenderer.cpp,c1964560b667a54ba4eb3bd9fbc7ed26c4cc86a2,490611e4c693bc70cbc872a59f259d27b182ef95,"pdfrenderer.cpp: Ignore non-text blocks

Fix #3957.","@@ -25,6 +25,7 @@
 
 #include <allheaders.h>
 #include <tesseract/baseapi.h>
+#include <tesseract/publictypes.h> // for PTIsTextType()
 #include <tesseract/renderer.h>
 #include <cmath>
 #include <cstring>
@@ -354,6 +355,12 @@ char *TessPDFRenderer::GetPDFTextObjects(TessBaseAPI *api, double width, double
   const std::unique_ptr</*non-const*/ ResultIterator> res_it(api->GetIterator());
   while (!res_it->Empty(RIL_BLOCK)) {
     if (res_it->IsAtBeginningOf(RIL_BLOCK)) {
+      auto block_type = res_it->BlockType();
+      if (!PTIsTextType(block_type)) {
+        // ignore non-text blocks
+        res_it->Next(RIL_BLOCK);
+        continue;
+      }
       pdf_str << ""BT\n3 Tr""; // Begin text object, use invisible ink
       old_fontsize = 0;      // Every block will declare its fontsize
       new_block = true;      // Every block will declare its affine matrix
","{'added': [(28, '#include <tesseract/publictypes.h> // for PTIsTextType()'), (358, '      auto block_type = res_it->BlockType();'), (359, '      if (!PTIsTextType(block_type)) {'), (360, '        // ignore non-text blocks'), (361, '        res_it->Next(RIL_BLOCK);'), (362, '        continue;'), (363, '      }')], 'deleted': []}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,490611e4c693bc70cbc872a59f259d27b182ef95,4ab09a63b24bb2c45e2d1f15f72b07e0feff03e9,cmake: fix linux&mac build,"@@ -264,7 +264,7 @@ if(ICU_FOUND)
                                                        PkgConfig::ICU)
     else()
       target_link_libraries(unicharset_training PUBLIC common_training
-                                                       ICU::uc ICU::i18n
+                                                       ${ICU_LIBRARIES}
                                                        ${ICU_LINK_LIBRARIES})
     endif()
   endif()
","{'added': [(267, '                                                       ${ICU_LIBRARIES}')], 'deleted': [(267, '                                                       ICU::uc ICU::i18n')]}",yes
src\training\pango\stringrenderer.cpp,src\training\pango\stringrenderer.cpp,4ab09a63b24bb2c45e2d1f15f72b07e0feff03e9,7cdf87c4d309aa7b3f4855ebd715b51822756228,fix typo in variable,"@@ -609,7 +609,7 @@ void StringRenderer::CorrectBoxPositionsToLayout(std::vector<BoxChar *> *boxchar
 
 int StringRenderer::StripUnrenderableWords(std::string *utf8_text) const {
   std::string output_text;
-  std::string unrendable_words;
+  std::string unrenderable_words;
   const char *text = utf8_text->c_str();
   size_t offset = 0;
   int num_dropped = 0;
@@ -626,15 +626,15 @@ int StringRenderer::StripUnrenderableWords(std::string *utf8_text) const {
       output_text.append(text + offset, word_len);
     } else {
       ++num_dropped;
-      unrendable_words.append(text + offset, word_len);
-      unrendable_words.append("" "");
+      unrenderable_words.append(text + offset, word_len);
+      unrenderable_words.append("" "");
     }
     offset += word_len;
   }
   utf8_text->swap(output_text);
 
   if (num_dropped > 0) {
-    tprintf(""Stripped %d unrenderable word(s): '%s'\n"", num_dropped, unrendable_words.c_str());
+    tprintf(""Stripped %d unrenderable word(s): '%s'\n"", num_dropped, unrenderable_words.c_str());
   }
   return num_dropped;
 }
","{'added': [(612, '  std::string unrenderable_words;'), (629, '      unrenderable_words.append(text + offset, word_len);'), (630, '      unrenderable_words.append("" "");'), (637, '    tprintf(""Stripped %d unrenderable word(s): \'%s\'\\n"", num_dropped, unrenderable_words.c_str());')], 'deleted': [(612, '  std::string unrendable_words;'), (629, '      unrendable_words.append(text + offset, word_len);'), (630, '      unrendable_words.append("" "");'), (637, '    tprintf(""Stripped %d unrenderable word(s): \'%s\'\\n"", num_dropped, unrendable_words.c_str());')]}",yes
README.md,README.md,7cdf87c4d309aa7b3f4855ebd715b51822756228,41503a826466084464bd359bc97c380ab0111332,"README.md: Show CodeQL alerts

#3958 (again).","@@ -3,7 +3,7 @@
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
 [![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
-[![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/codeql-analysis.yml)
+[![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/security/code-scanning)
 [![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)
 \
 [![GitHub license](https://img.shields.io/badge/license-Apache--2.0-blue.svg)](https://raw.githubusercontent.com/tesseract-ocr/tesseract/main/LICENSE)
","{'added': [(6, '[![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/security/code-scanning)')], 'deleted': [(6, '[![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/codeql-analysis.yml)')]}",yes
README.md,README.md,41503a826466084464bd359bc97c380ab0111332,ce84a4cac77f06401aeb0dc3bda2796b20171aa2,"README.md: Make CodeQL badge clickable

This is a better fix for issue #3958.","@@ -3,7 +3,7 @@
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
 [![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
-![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)
+[![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/codeql-analysis.yml)
 [![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)
 \
 [![GitHub license](https://img.shields.io/badge/license-Apache--2.0-blue.svg)](https://raw.githubusercontent.com/tesseract-ocr/tesseract/main/LICENSE)
","{'added': [(6, '[![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/codeql-analysis.yml)')], 'deleted': [(6, '![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)')]}",yes
README.md,README.md,ce84a4cac77f06401aeb0dc3bda2796b20171aa2,b593a576769538db7f200dad826362110ed7b754,"README.md: Add CodeQL badge

Remove LGTM badges (Fix #3958).","@@ -3,8 +3,7 @@
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
 [![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
-[![Code Quality: Cpp](https://img.shields.io/lgtm/grade/cpp/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/context:cpp)
-[![Total Alerts](https://img.shields.io/lgtm/alerts/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/alerts)
+![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)
 [![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)
 \
 [![GitHub license](https://img.shields.io/badge/license-Apache--2.0-blue.svg)](https://raw.githubusercontent.com/tesseract-ocr/tesseract/main/LICENSE)
","{'added': [(6, '![CodeQL](https://github.com/tesseract-ocr/tesseract/workflows/CodeQL/badge.svg)')], 'deleted': [(6, '[![Code Quality: Cpp](https://img.shields.io/lgtm/grade/cpp/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/context:cpp)'), (7, '[![Total Alerts](https://img.shields.io/lgtm/alerts/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/alerts)')]}",yes
src\training\pango\stringrenderer.cpp,src\training\pango\stringrenderer.cpp,b593a576769538db7f200dad826362110ed7b754,41c480d4f24392fafeb6aa3b1a1275ecc3a4c2f8,show dropped unrendable words,"@@ -609,6 +609,7 @@ void StringRenderer::CorrectBoxPositionsToLayout(std::vector<BoxChar *> *boxchar
 
 int StringRenderer::StripUnrenderableWords(std::string *utf8_text) const {
   std::string output_text;
+  std::string unrendable_words;
   const char *text = utf8_text->c_str();
   size_t offset = 0;
   int num_dropped = 0;
@@ -625,13 +626,15 @@ int StringRenderer::StripUnrenderableWords(std::string *utf8_text) const {
       output_text.append(text + offset, word_len);
     } else {
       ++num_dropped;
+      unrendable_words.append(text + offset, word_len);
+      unrendable_words.append("" "");
     }
     offset += word_len;
   }
   utf8_text->swap(output_text);
 
   if (num_dropped > 0) {
-    tprintf(""Stripped %d unrenderable words\n"", num_dropped);
+    tprintf(""Stripped %d unrenderable word(s): '%s'\n"", num_dropped, unrendable_words.c_str());
   }
   return num_dropped;
 }
","{'added': [(612, '  std::string unrendable_words;'), (629, '      unrendable_words.append(text + offset, word_len);'), (630, '      unrendable_words.append("" "");'), (637, '    tprintf(""Stripped %d unrenderable word(s): \'%s\'\\n"", num_dropped, unrendable_words.c_str());')], 'deleted': [(634, '    tprintf(""Stripped %d unrenderable words\\n"", num_dropped);')]}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,41c480d4f24392fafeb6aa3b1a1275ecc3a4c2f8,954c5413c1f71ef7b4b55d173829cc94d7d6db62,cmake: install common_training and  unicharset_training libs,"@@ -119,6 +119,11 @@ add_library(common_training ${COMMON_TRAINING_SRC})
 target_include_directories(common_training PUBLIC common
                                                   ${CMAKE_CURRENT_BINARY_DIR})
 target_link_libraries(common_training PUBLIC libtesseract)
+install(
+  TARGETS common_training
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 generate_export_header(common_training EXPORT_MACRO_NAME
                        TESS_COMMON_TRAINING_API)
 project_group(common_training ""Training Tools"")
@@ -265,6 +270,11 @@ if(ICU_FOUND)
   endif()
   target_include_directories(unicharset_training
                              PUBLIC unicharset ${CMAKE_CURRENT_BINARY_DIR})
+  install(
+    TARGETS unicharset_training
+    RUNTIME DESTINATION bin
+    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
   generate_export_header(unicharset_training EXPORT_MACRO_NAME
                          TESS_UNICHARSET_TRAINING_API)
   project_group(unicharset_training ""Training Tools"")
","{'added': [(122, 'install('), (123, '  TARGETS common_training'), (124, '  RUNTIME DESTINATION bin'), (125, '  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}'), (126, '  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})'), (273, '  install('), (274, '    TARGETS unicharset_training'), (275, '    RUNTIME DESTINATION bin'), (276, '    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}'), (277, '    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})')], 'deleted': []}",yes
CMakeLists.txt,CMakeLists.txt,954c5413c1f71ef7b4b55d173829cc94d7d6db62,64de12c857a1b916cd065d8cd567017b5304e96b,cmake: we can build training tools without PkgConfig,"@@ -363,10 +363,6 @@ if(SW_BUILD)
   sw_execute()
 else()
   find_package(PkgConfig)
-  if(BUILD_TRAINING_TOOLS AND NOT PKG_CONFIG_FOUND)
-    message(WARNING ""Building of Training Tools requires PkgConfig"")
-    set(BUILD_TRAINING_TOOLS OFF)
-  endif(BUILD_TRAINING_TOOLS AND NOT PKG_CONFIG_FOUND)
   # Check for required library. option -DLeptonica_DIR=path => cmake hint where
   # to find leptonica
   find_package(Leptonica ${MINIMUM_LEPTONICA_VERSION} CONFIG)
","{'added': [], 'deleted': [(366, '  if(BUILD_TRAINING_TOOLS AND NOT PKG_CONFIG_FOUND)'), (367, '    message(WARNING ""Building of Training Tools requires PkgConfig"")'), (368, '    set(BUILD_TRAINING_TOOLS OFF)'), (369, '  endif(BUILD_TRAINING_TOOLS AND NOT PKG_CONFIG_FOUND)')]}",yes
src\training\CMakeLists.txt,src\training\CMakeLists.txt,954c5413c1f71ef7b4b55d173829cc94d7d6db62,64de12c857a1b916cd065d8cd567017b5304e96b,cmake: we can build training tools without PkgConfig,"@@ -74,8 +74,15 @@ if(NOT SW_BUILD)
   else()
     find_package(ICU 52.1 COMPONENTS uc i18n)
   endif()
+  if(ICU_FOUND)
+    message("">> ICU_FOUND ${ICU_FOUND} ${ICU_VERSION} ${ICU_LIBRARIES} ${ICU_INCLUDE_DIRS}"")
+    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${ICU_CXX_FLAGS}"")
+  else()
+    message("">> ICU not found!"")
+  endif()
 endif()
 
+
 # ##############################################################################
 # LIBRARY common_training
 # ##############################################################################
@@ -252,6 +259,7 @@ if(ICU_FOUND)
                                                        PkgConfig::ICU)
     else()
       target_link_libraries(unicharset_training PUBLIC common_training
+                                                       ICU::uc ICU::i18n
                                                        ${ICU_LINK_LIBRARIES})
     endif()
   endif()
","{'added': [(77, '  if(ICU_FOUND)'), (78, '    message("">> ICU_FOUND ${ICU_FOUND} ${ICU_VERSION} ${ICU_LIBRARIES} ${ICU_INCLUDE_DIRS}"")'), (79, '    set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${ICU_CXX_FLAGS}"")'), (80, '  else()'), (81, '    message("">> ICU not found!"")'), (82, '  endif()'), (85, ''), (262, '                                                       ICU::uc ICU::i18n')], 'deleted': []}",yes
CONTRIBUTING.md,CONTRIBUTING.md,1f3e45f06935fadec3f1d6484e45f7971afa867c,6c772e45014f27511fc527ea51c24c3d79dcbbef,Fix broken links in CONTRIBUTING.md,"@@ -10,7 +10,7 @@ Use the [user forum](https://groups.google.com/g/tesseract-ocr) instead of creat
 * You have problems using Tesseract and need some help.
 * You have problems installing the software.
 * You are not satisfied with the accuracy of the OCR, and want to ask how you can improve it. Note: You should first read the [ImproveQuality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) documentation.
-* You are trying to train Tesseract and you have a problem and/or want to ask a question about the training process. Note: You should first read the **official** guides [[1]](https://tesseract-ocr.github.io/tessdoc/) or [[2]](https://tesseract-ocr.github.io/tessdoc/Training-Tesseract.html) found in the project documentation.
+* You are trying to train Tesseract and you have a problem and/or want to ask a question about the training process. Note: You should first read the **official** guides [[1]](https://tesseract-ocr.github.io/tessdoc/) or [[2]](https://tesseract-ocr.github.io/tessdoc/tess5/TrainingTesseract-5.html) found in the project documentation.
 * You have a general question.
 
 An issue should only be reported if the platform you are using is one of these:
@@ -71,10 +71,10 @@ You should always make sure your changes build and run successfully.
 
 For that, your clone needs to have all submodules (`googletest`, `test`) included. To do so, either specify `--recurse-submodules` during the initial clone, or run `git submodule update --init --recursive NAME` for each `NAME` later. If `configure` already created those directories (blocking the clone), remove them first (or `make distclean`), then clone and reconfigure.
 
-Have a look at [the README](./README.md) and [testing README](./test/testing/README.md) and the [documentation](https://tesseract-ocr.github.io/tessdoc/Compiling-%E2%80%93-GitInstallation.html#unit-test-builds) on installation.
+Have a look at [the README](./README.md) and [testing README](https://github.com/tesseract-ocr/test/blob/main/README.md) and the [documentation](https://tesseract-ocr.github.io/tessdoc/Compiling-%E2%80%93-GitInstallation.html#unit-test-builds) on installation.
 
 In short, after running `configure` from the build directory of your choice, to build the library and CLI, run `make`. To test it, run `make check`. To build the training tools, run `make training`.
 
-As soon as your changes are building and tests are succeeding, you can publish them. If you have not already, please [fork](https://guides.github.com/activities/forking/) tesseract (somewhere) on GitHub, and push your changes to that fork (in a new branch). Then [submit as PR](https://help.github.com/en/articles/creating-a-pull-request-from-a-fork).
+As soon as your changes are building and tests are succeeding, you can publish them. If you have not already, please [fork](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) tesseract (somewhere) on GitHub, and push your changes to that fork (in a new branch). Then [submit as PR](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork).
 
 Please also keep track of reports from CI (automated build status) and Coverity/LGTM (quality scan). When the indicators show deterioration after your changes, further action may be required to improve them.
","{'added': [(13, '* You are trying to train Tesseract and you have a problem and/or want to ask a question about the training process. Note: You should first read the **official** guides [[1]](https://tesseract-ocr.github.io/tessdoc/) or [[2]](https://tesseract-ocr.github.io/tessdoc/tess5/TrainingTesseract-5.html) found in the project documentation.'), (74, 'Have a look at [the README](./README.md) and [testing README](https://github.com/tesseract-ocr/test/blob/main/README.md) and the [documentation](https://tesseract-ocr.github.io/tessdoc/Compiling-%E2%80%93-GitInstallation.html#unit-test-builds) on installation.'), (78, 'As soon as your changes are building and tests are succeeding, you can publish them. If you have not already, please [fork](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) tesseract (somewhere) on GitHub, and push your changes to that fork (in a new branch). Then [submit as PR](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork).')], 'deleted': [(13, '* You are trying to train Tesseract and you have a problem and/or want to ask a question about the training process. Note: You should first read the **official** guides [[1]](https://tesseract-ocr.github.io/tessdoc/) or [[2]](https://tesseract-ocr.github.io/tessdoc/Training-Tesseract.html) found in the project documentation.'), (74, 'Have a look at [the README](./README.md) and [testing README](./test/testing/README.md) and the [documentation](https://tesseract-ocr.github.io/tessdoc/Compiling-%E2%80%93-GitInstallation.html#unit-test-builds) on installation.'), (78, 'As soon as your changes are building and tests are succeeding, you can publish them. If you have not already, please [fork](https://guides.github.com/activities/forking/) tesseract (somewhere) on GitHub, and push your changes to that fork (in a new branch). Then [submit as PR](https://help.github.com/en/articles/creating-a-pull-request-from-a-fork).')]}",yes
README.md,README.md,51a43b4fd93c85a13b611eecf8b4fa96048ce4c4,21e7f1b34b6eb04b4064278c89c4983f223f0c38,Apply suggestions from code review,"@@ -1,13 +1,12 @@
 # Tesseract OCR
 
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
-[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)
-
+[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
 [![Code Quality: Cpp](https://img.shields.io/lgtm/grade/cpp/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/context:cpp)
 [![Total Alerts](https://img.shields.io/lgtm/alerts/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/alerts)
 [![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)
-
+\
 [![GitHub license](https://img.shields.io/badge/license-Apache--2.0-blue.svg)](https://raw.githubusercontent.com/tesseract-ocr/tesseract/main/LICENSE)
 [![Downloads](https://img.shields.io/badge/download-all%20releases-brightgreen.svg)](https://github.com/tesseract-ocr/tesseract/releases/)
 
","{'added': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)\\'), (9, '\\')], 'deleted': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)'), (5, ''), (10, '')]}",yes
README.md,README.md,21e7f1b34b6eb04b4064278c89c4983f223f0c38,e3c06d1bcc747c2bf72961e208cff45cf9977064,Fix Markdownlint,"@@ -1,29 +1,28 @@
 # Tesseract OCR
 
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
-[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)<br>
+[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)
+
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
 [![Code Quality: Cpp](https://img.shields.io/lgtm/grade/cpp/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/context:cpp)
 [![Total Alerts](https://img.shields.io/lgtm/alerts/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/alerts)
 [![OSS-Fuzz](https://img.shields.io/badge/oss--fuzz-fuzzing-brightgreen)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=2&q=proj:tesseract-ocr)
-<br/>
+
 [![GitHub license](https://img.shields.io/badge/license-Apache--2.0-blue.svg)](https://raw.githubusercontent.com/tesseract-ocr/tesseract/main/LICENSE)
 [![Downloads](https://img.shields.io/badge/download-all%20releases-brightgreen.svg)](https://github.com/tesseract-ocr/tesseract/releases/)
 
-Table of Contents
-=================
+## Table of Contents
 
 * [Tesseract OCR](#tesseract-ocr)
-   * [About](#about)
-   * [Brief history](#brief-history)
-   * [Installing Tesseract](#installing-tesseract)
-   * [Running Tesseract](#running-tesseract)
-   * [For developers](#for-developers)
-   * [Support](#support)
-   * [License](#license)
-   * [Dependencies](#dependencies)
-   * [Latest Version of README](#latest-version-of-readme)
-
+  * [About](#about)
+  * [Brief history](#brief-history)
+  * [Installing Tesseract](#installing-tesseract)
+  * [Running Tesseract](#running-tesseract)
+  * [For developers](#for-developers)
+  * [Support](#support)
+  * [License](#license)
+  * [Dependencies](#dependencies)
+  * [Latest Version of README](#latest-version-of-readme)
 
 ## About
 
@@ -97,6 +96,7 @@ particularly the [FAQ](https://tesseract-ocr.github.io/tessdoc/FAQ.html) to see
 If not, search the [Tesseract user forum](https://groups.google.com/g/tesseract-ocr), the [Tesseract developer forum](https://groups.google.com/g/tesseract-dev) and [past issues](https://github.com/tesseract-ocr/tesseract/issues), and if you still can't find what you need, ask for support in the mailing-lists.
 
 Mailing-lists:
+
 * [tesseract-ocr](https://groups.google.com/g/tesseract-ocr) - For tesseract users.
 * [tesseract-dev](https://groups.google.com/g/tesseract-dev) - For tesseract developers.
 
@@ -133,4 +133,4 @@ It is suggested to use leptonica with built-in support for [zlib](https://zlib.n
 
 For the latest online version of the README.md see:
 
-https://github.com/tesseract-ocr/tesseract/blob/main/README.md
+<https://github.com/tesseract-ocr/tesseract/blob/main/README.md>
","{'added': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)'), (5, ''), (10, ''), (14, '## Table of Contents'), (17, '  * [About](#about)'), (18, '  * [Brief history](#brief-history)'), (19, '  * [Installing Tesseract](#installing-tesseract)'), (20, '  * [Running Tesseract](#running-tesseract)'), (21, '  * [For developers](#for-developers)'), (22, '  * [Support](#support)'), (23, '  * [License](#license)'), (24, '  * [Dependencies](#dependencies)'), (25, '  * [Latest Version of README](#latest-version-of-readme)'), (99, ''), (136, '<https://github.com/tesseract-ocr/tesseract/blob/main/README.md>')], 'deleted': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)<br>'), (9, '<br/>'), (13, 'Table of Contents'), (14, '================='), (17, '   * [About](#about)'), (18, '   * [Brief history](#brief-history)'), (19, '   * [Installing Tesseract](#installing-tesseract)'), (20, '   * [Running Tesseract](#running-tesseract)'), (21, '   * [For developers](#for-developers)'), (22, '   * [Support](#support)'), (23, '   * [License](#license)'), (24, '   * [Dependencies](#dependencies)'), (25, '   * [Latest Version of README](#latest-version-of-readme)'), (26, ''), (136, 'https://github.com/tesseract-ocr/tesseract/blob/main/README.md')]}",yes
.github\workflows\codeql-analysis.yml,.github\workflows\codeql-analysis.yml,e3c06d1bcc747c2bf72961e208cff45cf9977064,bcd9d57ce5e5ebdabc32f1097dcf22f38685ba13,Update codeql-analysis.yml,"@@ -67,7 +67,7 @@ jobs:
 
     # Initializes the CodeQL tools for scanning.
     - name: Initialize CodeQL
-      uses: github/codeql-action/init@v1
+      uses: github/codeql-action/init@v2
       with:
         languages: ${{ matrix.language }}
         # If you wish to specify custom queries, you can do so here or in a config file.
","{'added': [(70, '      uses: github/codeql-action/init@v2')], 'deleted': [(70, '      uses: github/codeql-action/init@v1')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,bcd9d57ce5e5ebdabc32f1097dcf22f38685ba13,1eed087472e45ce9c6ad3a784d39a96eea7ecfd9,Update sw.yml,"@@ -78,7 +78,7 @@ jobs:
 
     - name: Publish Test Report
       if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
-      uses: mikepenz/action-junit-report@v1
+      uses: mikepenz/action-junit-report@v3
       with:
         check_name: test (${{ matrix.os }})
         report_paths: .sw/test/results.xml
","{'added': [(81, '      uses: mikepenz/action-junit-report@v3')], 'deleted': [(81, '      uses: mikepenz/action-junit-report@v1')]}",yes
.github\workflows\codeql-analysis.yml,.github\workflows\codeql-analysis.yml,1eed087472e45ce9c6ad3a784d39a96eea7ecfd9,23613c5c24bab817c6725fbf3ee584c6f86f9122,"Update codeql-analysis.yml

v1 -> v2

https://github.blog/changelog/2022-04-27-code-scanning-deprecation-of-codeql-action-v1/","@@ -82,4 +82,4 @@ jobs:
        make all training
 
     - name: Perform CodeQL Analysis
-      uses: github/codeql-action/analyze@v1
+      uses: github/codeql-action/analyze@v2
","{'added': [(85, '      uses: github/codeql-action/analyze@v2')], 'deleted': [(85, '      uses: github/codeql-action/analyze@v1')]}",yes
src\ccmain\thresholder.cpp,src\ccmain\thresholder.cpp,23613c5c24bab817c6725fbf3ee584c6f86f9122,1ae0ec9a8279264f551c61116a5748d562c785a5,"Fix regression (broken unit tests)

Fixes: 95019a8c (""fix issue #3940 - remove colormap before thresholding"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -293,8 +293,8 @@ bool ImageThresholder::ThresholdToPix(Image *pix) {
     // allows the caller to modify the output.
     *pix = original.copy();
   } else {
-    Image tmp;
     if (pixGetColormap(original)) {
+      Image tmp;
       Image without_cmap =
           pixRemoveColormap(original, REMOVE_CMAP_BASED_ON_SRC);
       int depth = pixGetDepth(without_cmap);
@@ -304,9 +304,11 @@ bool ImageThresholder::ThresholdToPix(Image *pix) {
         tmp = without_cmap.copy();
       }
       without_cmap.destroy();
+      OtsuThresholdRectToPix(tmp, pix);
+      tmp.destroy();
+    } else {
+      OtsuThresholdRectToPix(pix_, pix);
     }
-    OtsuThresholdRectToPix(tmp, pix);
-    tmp.destroy();
   }
   original.destroy();
   return true;
","{'added': [(297, '      Image tmp;'), (307, '      OtsuThresholdRectToPix(tmp, pix);'), (308, '      tmp.destroy();'), (309, '    } else {'), (310, '      OtsuThresholdRectToPix(pix_, pix);')], 'deleted': [(296, '    Image tmp;'), (308, '    OtsuThresholdRectToPix(tmp, pix);'), (309, '    tmp.destroy();')]}",yes
src\ccmain\thresholder.cpp,src\ccmain\thresholder.cpp,1ae0ec9a8279264f551c61116a5748d562c785a5,bca0a7fe822d1eaad5852dd1484ef27c23de3966,"Restore comment

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -359,7 +359,7 @@ Image ImageThresholder::GetPixRect() {
   }
 }
 
-// Get a clone/copy of the source image rectangle,; reduced to greyscale,
+// Get a clone/copy of the source image rectangle, reduced to greyscale,
 // and at the same resolution as the output binary.
 // The returned Pix must be pixDestroyed.
 // Provided to the classifier to extract features from the greyscale image.
","{'added': [(362, '// Get a clone/copy of the source image rectangle, reduced to greyscale,')], 'deleted': [(362, '// Get a clone/copy of the source image rectangle,; reduced to greyscale,')]}",yes
src\ccmain\thresholder.cpp,src\ccmain\thresholder.cpp,bca0a7fe822d1eaad5852dd1484ef27c23de3966,14e2517d6d7d64a73b00a2df9bb3462a0c45187f,Fix memory leaks in ImageThresholder::ThresholdToPix,"@@ -293,18 +293,20 @@ bool ImageThresholder::ThresholdToPix(Image *pix) {
     // allows the caller to modify the output.
     *pix = original.copy();
   } else {
+    Image tmp;
     if (pixGetColormap(original)) {
       Image without_cmap =
           pixRemoveColormap(original, REMOVE_CMAP_BASED_ON_SRC);
       int depth = pixGetDepth(without_cmap);
       if (depth > 1 && depth < 8) {
-        original = pixConvertTo8(without_cmap, false);
+        tmp = pixConvertTo8(without_cmap, false);
       } else {
-        original = without_cmap.copy();
+        tmp = without_cmap.copy();
       }
       without_cmap.destroy();
     }
-    OtsuThresholdRectToPix(original, pix);
+    OtsuThresholdRectToPix(tmp, pix);
+    tmp.destroy();
   }
   original.destroy();
   return true;
@@ -357,7 +359,7 @@ Image ImageThresholder::GetPixRect() {
   }
 }
 
-// Get a clone/copy of the source image rectangle, reduced to greyscale,
+// Get a clone/copy of the source image rectangle,; reduced to greyscale,
 // and at the same resolution as the output binary.
 // The returned Pix must be pixDestroyed.
 // Provided to the classifier to extract features from the greyscale image.
","{'added': [(296, '    Image tmp;'), (302, '        tmp = pixConvertTo8(without_cmap, false);'), (304, '        tmp = without_cmap.copy();'), (308, '    OtsuThresholdRectToPix(tmp, pix);'), (309, '    tmp.destroy();'), (362, '// Get a clone/copy of the source image rectangle,; reduced to greyscale,')], 'deleted': [(301, '        original = pixConvertTo8(without_cmap, false);'), (303, '        original = without_cmap.copy();'), (307, '    OtsuThresholdRectToPix(original, pix);'), (360, '// Get a clone/copy of the source image rectangle, reduced to greyscale,')]}",yes
src\ccmain\thresholder.cpp,src\ccmain\thresholder.cpp,14e2517d6d7d64a73b00a2df9bb3462a0c45187f,82e400d655cd9697b9e329a23b44df8c1801e69c,remove src.destroy();,"@@ -175,7 +175,6 @@ void ImageThresholder::SetImage(const Image pix) {
   } else {
     pix_ = src.copy();
   }
-  src.destroy();
   depth = pixGetDepth(pix_);
   pix_channels_ = depth / 8;
   pix_wpl_ = pixGetWpl(pix_);
","{'added': [], 'deleted': [(178, '  src.destroy();')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,82e400d655cd9697b9e329a23b44df8c1801e69c,0819ec99484d12efb8d904f362d2f644d1153fc8,"Update autotools-macos.yml

Remove maoOS 10.15. Use macOS 12 instead.","@@ -14,7 +14,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: macos-12-clang-13-autotools, os: macos-12, cxx: clang++ }
+          - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }
           #- { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }
 
     steps:
@@ -115,7 +115,7 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: macos-10.15-clang-12-autotools, os: macos-10.15, cxx: clang++ }
+          - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }
 
     steps:
     - uses: actions/checkout@v3
","{'added': [(17, '          - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }'), (118, '          - { name: macos-12-clang-14-autotools, os: macos-12, cxx: clang++ }')], 'deleted': [(17, '          - { name: macos-12-clang-13-autotools, os: macos-12, cxx: clang++ }'), (118, '          - { name: macos-10.15-clang-12-autotools, os: macos-10.15, cxx: clang++ }')]}",yes
.github\workflows\cifuzz.yml,.github\workflows\cifuzz.yml,5c70ae820c3ca898259da96fbb3820b880c2272f,c039bba5184bdf17ea279bc8d689f40497399768,update upload action,"@@ -26,7 +26,7 @@ jobs:
         fuzz-seconds: 600
         dry-run: false
     - name: Upload Crash
-      uses: actions/upload-artifact@v1
+      uses: actions/upload-artifact@v3
       if: failure() && steps.build.outcome == 'success'
       with:
         name: artifacts
","{'added': [(29, '      uses: actions/upload-artifact@v3')], 'deleted': [(29, '      uses: actions/upload-artifact@v1')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,5c70ae820c3ca898259da96fbb3820b880c2272f,c039bba5184bdf17ea279bc8d689f40497399768,update upload action,"@@ -151,7 +151,7 @@ jobs:
           tesseract test/testing/phototest.tif -
           
       - name: Upload Build Results
-        uses: actions/upload-artifact@v2
+        uses: actions/upload-artifact@v3
         with:
           name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64
           path: ${{env.ILOC}}
","{'added': [(154, '        uses: actions/upload-artifact@v3')], 'deleted': [(154, '        uses: actions/upload-artifact@v2')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,5c70ae820c3ca898259da96fbb3820b880c2272f,c039bba5184bdf17ea279bc8d689f40497399768,update upload action,"@@ -71,7 +71,7 @@ jobs:
 
     - name: Upload Unit Test Results
       if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
-      uses: actions/upload-artifact@v2
+      uses: actions/upload-artifact@v3
       with:
         name: Test Results (${{ matrix.os }})
         path: .sw/test/results.xml
","{'added': [(74, '      uses: actions/upload-artifact@v3')], 'deleted': [(74, '      uses: actions/upload-artifact@v2')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -18,7 +18,7 @@ jobs:
           #- { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }
 
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
 
@@ -118,7 +118,7 @@ jobs:
           - { name: macos-10.15-clang-12-autotools, os: macos-10.15, cxx: clang++ }
 
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
 
","{'added': [(21, '    - uses: actions/checkout@v3'), (121, '    - uses: actions/checkout@v3')], 'deleted': [(21, '    - uses: actions/checkout@v2'), (121, '    - uses: actions/checkout@v2')]}",yes
.github\workflows\autotools-openmp.yml,.github\workflows\autotools-openmp.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -17,7 +17,7 @@ jobs:
           - { name: 22.04-openmp, os: ubuntu-22.04 }
 
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
 
","{'added': [(20, '    - uses: actions/checkout@v3')], 'deleted': [(20, '    - uses: actions/checkout@v2')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -24,7 +24,7 @@ jobs:
           - { name: ubuntu-20.04-gcc-10-autotools, os: ubuntu-20.04, cxx: g++-10 } #installed
 
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
 
","{'added': [(27, '    - uses: actions/checkout@v3')], 'deleted': [(27, '    - uses: actions/checkout@v2')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -61,7 +61,7 @@ jobs:
         if: runner.os == 'macOS'
 
       - name: Checkout Source
-        uses: actions/checkout@v2
+        uses: actions/checkout@v3
         with:
              submodules: recursive
 
","{'added': [(64, '        uses: actions/checkout@v3')], 'deleted': [(64, '        uses: actions/checkout@v2')]}",yes
.github\workflows\codeql-analysis.yml,.github\workflows\codeql-analysis.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -55,7 +55,7 @@ jobs:
 
     steps:
     - name: Checkout repository
-      uses: actions/checkout@v2
+      uses: actions/checkout@v3
 
     - name: Install dependencies
       run: |
","{'added': [(58, '      uses: actions/checkout@v3')], 'deleted': [(58, '      uses: actions/checkout@v2')]}",yes
.github\workflows\msys2.yml,.github\workflows\msys2.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -19,7 +19,7 @@ jobs:
       run:
         shell: msys2 {0}
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
     - uses: msys2/setup-msys2@v2
","{'added': [(22, '    - uses: actions/checkout@v3')], 'deleted': [(22, '    - uses: actions/checkout@v2')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -28,7 +28,7 @@ jobs:
         os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macos-12]
 
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
     - uses: egorpugin/sw-action@master
","{'added': [(31, '    - uses: actions/checkout@v3')], 'deleted': [(31, '    - uses: actions/checkout@v2')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -17,7 +17,7 @@ jobs:
         os: [ ubuntu-20.04 ]
 
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
 
","{'added': [(20, '    - uses: actions/checkout@v3')], 'deleted': [(20, '    - uses: actions/checkout@v2')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -17,7 +17,7 @@ jobs:
           - { name: macos-12-gcc-unittest, os: macos-12, cxx: g++ }
 
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
 
","{'added': [(20, '    - uses: actions/checkout@v3')], 'deleted': [(20, '    - uses: actions/checkout@v2')]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -17,7 +17,7 @@ jobs:
           - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++ }
           - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++ }
     steps:
-    - uses: actions/checkout@v2
+    - uses: actions/checkout@v3
       with:
         submodules: recursive
 
","{'added': [(20, '    - uses: actions/checkout@v3')], 'deleted': [(20, '    - uses: actions/checkout@v2')]}",yes
.github\workflows\vcpkg-4.1.1.yml,.github\workflows\vcpkg-4.1.1.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -17,7 +17,7 @@ jobs:
 
     steps:
       - name: Checkout Tesseract Source (for test images)
-        uses: actions/checkout@v2
+        uses: actions/checkout@v3
         with:
           submodules: recursive
 
","{'added': [(20, '        uses: actions/checkout@v3')], 'deleted': [(20, '        uses: actions/checkout@v2')]}",yes
.github\workflows\vcpkg.yml,.github\workflows\vcpkg.yml,6ba5391cfee0116c486f3b4a1e68ee0f6a4d4197,c039bba5184bdf17ea279bc8d689f40497399768,update checkout to version 3,"@@ -16,7 +16,7 @@ jobs:
 
     steps:
       - name: Checkout Tesseract Source (--head from main branch)
-        uses: actions/checkout@v2
+        uses: actions/checkout@v3
         with:
           submodules: recursive
 
","{'added': [(19, '        uses: actions/checkout@v3')], 'deleted': [(19, '        uses: actions/checkout@v2')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,718a4eac6c23fc7a1cdd7028a020bfef75f00ad9,ebbd498e323905150cd4b62ad681f6d3cc926059,"Update autotools-macos.yml

Disable g++-11 until we figure out how to make it work.","@@ -15,7 +15,7 @@ jobs:
       matrix:
         config:
           - { name: macos-12-clang-13-autotools, os: macos-12, cxx: clang++ }
-          - { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }
+          #- { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }
 
     steps:
     - uses: actions/checkout@v2
@@ -43,7 +43,7 @@ jobs:
 
     - name: Configure Tesseract
       run: |
-           CXX=g++-11 ./configure '--disable-shared' '--disable-openmp' '--disable-doc' '--with-pic' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'
+           ./configure '--disable-shared' '--disable-openmp' '--disable-doc' '--with-pic' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'
 
     - name: Make and Install Tesseract
       run: |
","{'added': [(18, '          #- { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }'), (46, ""           ./configure '--disable-shared' '--disable-openmp' '--disable-doc' '--with-pic' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'"")], 'deleted': [(18, '          - { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }'), (46, ""           CXX=g++-11 ./configure '--disable-shared' '--disable-openmp' '--disable-doc' '--with-pic' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'"")]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,ebbd498e323905150cd4b62ad681f6d3cc926059,a873553593988407b7a9043c30c3010e0d066205,"Update autotools-macos.yml

Try to fix the failing g++ 11 job.","@@ -43,7 +43,7 @@ jobs:
 
     - name: Configure Tesseract
       run: |
-           ./configure '--disable-shared' '--disable-openmp' '--disable-doc' '--with-pic' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'
+           CXX=g++-11 ./configure '--disable-shared' '--disable-openmp' '--disable-doc' '--with-pic' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'
 
     - name: Make and Install Tesseract
       run: |
","{'added': [(46, ""           CXX=g++-11 ./configure '--disable-shared' '--disable-openmp' '--disable-doc' '--with-pic' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'"")], 'deleted': [(46, ""           ./configure '--disable-shared' '--disable-openmp' '--disable-doc' '--with-pic' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'"")]}",yes
src\ccmain\thresholder.cpp,src\ccmain\thresholder.cpp,95019a8cf3a9dbde3174a66daa4b4a44f44ae8e3,a873553593988407b7a9043c30c3010e0d066205,fix issue #3940 - remove colormap before thresholding,"@@ -175,6 +175,7 @@ void ImageThresholder::SetImage(const Image pix) {
   } else {
     pix_ = src.copy();
   }
+  src.destroy();
   depth = pixGetDepth(pix_);
   pix_channels_ = depth / 8;
   pix_wpl_ = pixGetWpl(pix_);
@@ -287,15 +288,26 @@ bool ImageThresholder::ThresholdToPix(Image *pix) {
     tprintf(""Image too large: (%d, %d)\n"", image_width_, image_height_);
     return false;
   }
+  Image original = GetPixRect();
   if (pix_channels_ == 0) {
     // We have a binary image, but it still has to be copied, as this API
     // allows the caller to modify the output.
-    Image original = GetPixRect();
     *pix = original.copy();
-    original.destroy();
   } else {
-    OtsuThresholdRectToPix(pix_, pix);
+    if (pixGetColormap(original)) {
+      Image without_cmap =
+          pixRemoveColormap(original, REMOVE_CMAP_BASED_ON_SRC);
+      int depth = pixGetDepth(without_cmap);
+      if (depth > 1 && depth < 8) {
+        original = pixConvertTo8(without_cmap, false);
+      } else {
+        original = without_cmap.copy();
+      }
+      without_cmap.destroy();
+    }
+    OtsuThresholdRectToPix(original, pix);
   }
+  original.destroy();
   return true;
 }
 
@@ -353,7 +365,7 @@ Image ImageThresholder::GetPixRect() {
 Image ImageThresholder::GetPixRectGrey() {
   auto pix = GetPixRect(); // May have to be reduced to grey.
   int depth = pixGetDepth(pix);
-  if (depth != 8) {
+  if (depth != 8 || pixGetColormap(pix)) {
     if (depth == 24) {
       auto tmp = pixConvert24To32(pix);
       pix.destroy();
","{'added': [(178, '  src.destroy();'), (291, '  Image original = GetPixRect();'), (297, '    if (pixGetColormap(original)) {'), (298, '      Image without_cmap ='), (299, '          pixRemoveColormap(original, REMOVE_CMAP_BASED_ON_SRC);'), (300, '      int depth = pixGetDepth(without_cmap);'), (301, '      if (depth > 1 && depth < 8) {'), (302, '        original = pixConvertTo8(without_cmap, false);'), (303, '      } else {'), (304, '        original = without_cmap.copy();'), (305, '      }'), (306, '      without_cmap.destroy();'), (307, '    }'), (308, '    OtsuThresholdRectToPix(original, pix);'), (310, '  original.destroy();'), (368, '  if (depth != 8 || pixGetColormap(pix)) {')], 'deleted': [(293, '    Image original = GetPixRect();'), (295, '    original.destroy();'), (297, '    OtsuThresholdRectToPix(pix_, pix);'), (356, '  if (depth != 8) {')]}",yes
.github\workflows\autotools.yml,.github\workflows\autotools.yml,a873553593988407b7a9043c30c3010e0d066205,a1a342db7b0bb3e17aacf74648c7889369c93053,"Update autotools.yml

https://github.com/actions/runner-images/issues/6002

Drop Ubuntu 18.04.","@@ -13,16 +13,6 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: ubuntu-18.04-clang-7-autotools, os: ubuntu-18.04, cxx: clang++-7 }
-          - { name: ubuntu-18.04-clang-8-autotools, os: ubuntu-18.04, cxx: clang++-8 } #installed
-          - { name: ubuntu-18.04-clang-9-autotools, os: ubuntu-18.04, cxx: clang++-9 } #installed
-          - { name: ubuntu-18.04-clang-10-autotools, os: ubuntu-18.04, cxx: clang++-10 }
-
-          - { name: ubuntu-18.04-gcc-7-autotools, os: ubuntu-18.04, cxx: g++-7 } #installed
-          - { name: ubuntu-18.04-gcc-8-autotools, os: ubuntu-18.04, cxx: g++-8 } #installed
-          - { name: ubuntu-18.04-gcc-9-autotools, os: ubuntu-18.04, cxx: g++-9 } #installed
-          - { name: ubuntu-18.04-gcc-10-autotools, os: ubuntu-18.04, cxx: g++-10 } #installed
-
           - { name: ubuntu-20.04-clang-7-autotools, os: ubuntu-20.04, cxx: clang++-7 }
           - { name: ubuntu-20.04-clang-8-autotools, os: ubuntu-20.04, cxx: clang++-8 } #installed
           - { name: ubuntu-20.04-clang-9-autotools, os: ubuntu-20.04, cxx: clang++-9 } #installed
","{'added': [], 'deleted': [(16, '          - { name: ubuntu-18.04-clang-7-autotools, os: ubuntu-18.04, cxx: clang++-7 }'), (17, '          - { name: ubuntu-18.04-clang-8-autotools, os: ubuntu-18.04, cxx: clang++-8 } #installed'), (18, '          - { name: ubuntu-18.04-clang-9-autotools, os: ubuntu-18.04, cxx: clang++-9 } #installed'), (19, '          - { name: ubuntu-18.04-clang-10-autotools, os: ubuntu-18.04, cxx: clang++-10 }'), (20, ''), (21, '          - { name: ubuntu-18.04-gcc-7-autotools, os: ubuntu-18.04, cxx: g++-7 } #installed'), (22, '          - { name: ubuntu-18.04-gcc-8-autotools, os: ubuntu-18.04, cxx: g++-8 } #installed'), (23, '          - { name: ubuntu-18.04-gcc-9-autotools, os: ubuntu-18.04, cxx: g++-9 } #installed'), (24, '          - { name: ubuntu-18.04-gcc-10-autotools, os: ubuntu-18.04, cxx: g++-10 } #installed'), (25, '')]}",yes
.github\workflows\unittest.yml,.github\workflows\unittest.yml,a1a342db7b0bb3e17aacf74648c7889369c93053,ce8376ba724f7a7f7aff764b4f3802c37be2ac9b,"Update unittest.yml

https://github.com/actions/runner-images/issues/6002

Drop 18.04. Add 22.04.","@@ -1,6 +1,5 @@
 name: unittest
 # autotools build on ubuntu. unittests with address sanitizers. with openmp.
-# [  FAILED  ] LSTMTrainerTest.DeterminismTest - clang version 9.0.0-2~ubuntu18.04.2
 # ubuntu-20.04-gcc-unittest - CI runs out of diskspace.
 on:
   #push:
@@ -15,8 +14,8 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: ubuntu-18.04-gcc-unittest, os: ubuntu-18.04, cxx: g++ }
-          - { name: ubuntu-20.04-clang-unittest, os: ubuntu-20.04, cxx: clang++ }
+          - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++ }
+          - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++ }
     steps:
     - uses: actions/checkout@v2
       with:
","{'added': [(17, '          - { name: ubuntu-20.04-gcc-unittest, os: ubuntu-20.04, cxx: g++ }'), (18, '          - { name: ubuntu-22.04-clang-unittest, os: ubuntu-22.04, cxx: clang++ }')], 'deleted': [(3, '# [  FAILED  ] LSTMTrainerTest.DeterminismTest - clang version 9.0.0-2~ubuntu18.04.2'), (18, '          - { name: ubuntu-18.04-gcc-unittest, os: ubuntu-18.04, cxx: g++ }'), (19, '          - { name: ubuntu-20.04-clang-unittest, os: ubuntu-20.04, cxx: clang++ }')]}",yes
.github\workflows\autotools-openmp.yml,.github\workflows\autotools-openmp.yml,ce8376ba724f7a7f7aff764b4f3802c37be2ac9b,f682bae3ebb08fbab1783c893af18a3da6637d52,"Update autotools-openmp.yml

https://github.com/actions/runner-images/issues/6002

Drop 18.04. Add 22.04.","@@ -13,8 +13,8 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: 18.04-openmp, os: ubuntu-18.04 }
           - { name: 20.04-openmp, os: ubuntu-20.04 }
+          - { name: 22.04-openmp, os: ubuntu-22.04 }
 
     steps:
     - uses: actions/checkout@v2
","{'added': [(17, '          - { name: 22.04-openmp, os: ubuntu-22.04 }')], 'deleted': [(16, '          - { name: 18.04-openmp, os: ubuntu-18.04 }')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,f682bae3ebb08fbab1783c893af18a3da6637d52,97a1a3e10f6383e0c4b25d4d141ad6ef71ad0f04,"Update cmake-win64.yml

try to use the latest release of tiff instead of the latest code","@@ -95,7 +95,7 @@ jobs:
       - name: Build and Install libtiff
         shell: cmd
         run: |
-             git clone --depth 1 https://gitlab.com/libtiff/libtiff.git
+             git clone -c advice.detachedHead=false -b ""v4.0.10"" --depth 1 https://gitlab.com/libtiff/libtiff.git
              cd libtiff
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF
              cmake --build build --config Release --target install
","{'added': [(98, '             git clone -c advice.detachedHead=false -b ""v4.0.10"" --depth 1 https://gitlab.com/libtiff/libtiff.git')], 'deleted': [(98, '             git clone --depth 1 https://gitlab.com/libtiff/libtiff.git')]}",yes
tessdata\configs\txt,tessdata\configs\txt,d086c075b386b487c05e04ac5360ac59a9aba433,b5ee0816da61cdff19ae89d35efb14ff738783c5,Fixed 2 errors,"@@ -1,3 +1,3 @@
-# This config file should be used with other cofig files which creates renderers.
+# This config file should be used with other config files which create renderers.
 # usage example: tesseract eurotext.tif eurotext txt hocr pdf
 tessedit_create_txt 1
","{'added': [(1, '# This config file should be used with other config files which create renderers.')], 'deleted': [(1, '# This config file should be used with other cofig files which creates renderers.')]}",yes
tesseract.pc.cmake,tesseract.pc.cmake,9ac78f94d9e7f29d463cc67c4e7c15236cb491ac,1d07dfdd943b8f91b317756fbc32bac0317b9bed,Fix tesseract.pc from cmake to match autotools,"@@ -7,6 +7,7 @@ Name: @tesseract_NAME@
 Description: An OCR Engine that was developed at HP Labs between 1985 and 1995... and now at Google.
 URL: https://github.com/tesseract-ocr/tesseract
 Version: @tesseract_VERSION@
+Requires.private: lept
 Libs: -L${libdir} -l@tesseract_OUTPUT_NAME@ @libarchive_LIBS@ @libcurl_LIBS@ @TENSORFLOW_LIBS@
 Libs.private:
 Cflags: -I${includedir}
","{'added': [(10, 'Requires.private: lept')], 'deleted': []}",yes
.mailmap,.mailmap,1d07dfdd943b8f91b317756fbc32bac0317b9bed,3559ff7e6783439c6098dd192012215f7aa3e95a,Update .mailmap,"@@ -1,3 +1,29 @@
-Ray Smith <rays@google.com> <theraysmith@gmail.com> <theraysmith@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
-zdenop <zdenop@gmail.com> <zdenop@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
-jimregan <joregan@gmail.com> <joregan@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+Amit Dovev <amitdev2222@gmail.com>
+
+Egor Pugin <egor.pugin@gmail.com>
+
+Jim O'Regan <joregan@gmail.com>
+Jim O'Regan <joregan@gmail.com> <joregan@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+Jim O'Regan <joregan@gmail.com> <joregan@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+
+Ray Smith <rays@google.com>
+Ray Smith <rays@google.com> <theraysmith@gmail.com>
+Ray Smith <rays@google.com> <rays@rays.lon.corp.google.com>
+Ray Smith <rays@google.com> <rays@rays-glaptop.roam.corp.google.com>
+Ray Smith <rays@google.com> <theraysmith@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+Ray Smith <rays@google.com> <theraysmith@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+
+Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com> 
+Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com> <5095331+Shreeshrii@users.noreply.github.com5095331+Shreeshrii@users.noreply.github.com>
+
+Stefan Weil <sw@weilnetz.de>
+Stefan Weil <sw@weilnetz.de> <sw@weil.de>
+Stefan Weil <sw@weilnetz.de> <stefan@v2201612906741603.powersrv.de>
+Stefan Weil <sw@weilnetz.de> <stefan.weil@bib.uni-mannheim.de>
+Stefan Weil <sw@weilnetz.de> <stweil@ub-backup.bib.uni-mannheim.de>
+Stefan Weil <sw@weilnetz.de> <stweil@ub-blade-02.bib.uni-mannheim.de>
+
+Zdenko Podobný <zdenop@gmail.com>
+Zdenko Podobný <zdenop@gmail.com> <zdenko.podobny@nbazp1.SPS>
+Zdenko Podobný <zdenop@gmail.com> <zdenop@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+ Zdenko Podobný <zdenop@gmail.com> <zdenop@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
","{'added': [(1, 'Amit Dovev <amitdev2222@gmail.com>'), (2, ''), (3, 'Egor Pugin <egor.pugin@gmail.com>'), (4, ''), (5, ""Jim O'Regan <joregan@gmail.com>""), (6, ""Jim O'Regan <joregan@gmail.com> <joregan@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>""), (7, ""Jim O'Regan <joregan@gmail.com> <joregan@d0cd1f9f-072b-0410-8dd7-cf729c803f20>""), (8, ''), (9, 'Ray Smith <rays@google.com>'), (10, 'Ray Smith <rays@google.com> <theraysmith@gmail.com>'), (11, 'Ray Smith <rays@google.com> <rays@rays.lon.corp.google.com>'), (12, 'Ray Smith <rays@google.com> <rays@rays-glaptop.roam.corp.google.com>'), (13, 'Ray Smith <rays@google.com> <theraysmith@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>'), (14, 'Ray Smith <rays@google.com> <theraysmith@d0cd1f9f-072b-0410-8dd7-cf729c803f20>'), (15, ''), (16, 'Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com>'), (17, 'Shree Devi Kumar <5095331+Shreeshrii@users.noreply.github.com> <5095331+Shreeshrii@users.noreply.github.com5095331+Shreeshrii@users.noreply.github.com>'), (18, ''), (19, 'Stefan Weil <sw@weilnetz.de>'), (20, 'Stefan Weil <sw@weilnetz.de> <sw@weil.de>'), (21, 'Stefan Weil <sw@weilnetz.de> <stefan@v2201612906741603.powersrv.de>'), (22, 'Stefan Weil <sw@weilnetz.de> <stefan.weil@bib.uni-mannheim.de>'), (23, 'Stefan Weil <sw@weilnetz.de> <stweil@ub-backup.bib.uni-mannheim.de>'), (24, 'Stefan Weil <sw@weilnetz.de> <stweil@ub-blade-02.bib.uni-mannheim.de>'), (25, ''), (26, 'Zdenko Podobný <zdenop@gmail.com>'), (27, 'Zdenko Podobný <zdenop@gmail.com> <zdenko.podobny@nbazp1.SPS>'), (28, 'Zdenko Podobný <zdenop@gmail.com> <zdenop@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>'), (29, ' Zdenko Podobný <zdenop@gmail.com> <zdenop@d0cd1f9f-072b-0410-8dd7-cf729c803f20>')], 'deleted': [(1, 'Ray Smith <rays@google.com> <theraysmith@gmail.com> <theraysmith@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>'), (2, 'zdenop <zdenop@gmail.com> <zdenop@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>'), (3, 'jimregan <joregan@gmail.com> <joregan@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>')]}",no
,.mailmap,3559ff7e6783439c6098dd192012215f7aa3e95a,f2952c5445c601fd49f7e8430e18226e9a434dfb,Create .mailmap (#3910),"@@ -0,0 +1,3 @@
+Ray Smith <rays@google.com> <theraysmith@gmail.com> <theraysmith@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+zdenop <zdenop@gmail.com> <zdenop@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
+jimregan <joregan@gmail.com> <joregan@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>
","{'added': [(1, 'Ray Smith <rays@google.com> <theraysmith@gmail.com> <theraysmith@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>'), (2, 'zdenop <zdenop@gmail.com> <zdenop@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>'), (3, 'jimregan <joregan@gmail.com> <joregan@gmail.com@d0cd1f9f-072b-0410-8dd7-cf729c803f20>')], 'deleted': []}",yes
README.md,README.md,f2952c5445c601fd49f7e8430e18226e9a434dfb,672e784ef4ed49cc99d53a60f04351f080ee8256,Update README.md,"@@ -43,8 +43,7 @@ Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, inv
 
 You should note that in many cases, in order to get better OCR results, you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.
 
-This project **does not include a GUI application**.
-If you need one, please see the [3rdParty](https://tesseract-ocr.github.io/tessdoc/User-Projects-%E2%80%93-3rdParty.html) documentation.
+This project **does not include a GUI application**. If you need one, please see the [3rdParty](https://tesseract-ocr.github.io/tessdoc/User-Projects-%E2%80%93-3rdParty.html) documentation.
 
 Tesseract **can be trained to recognize other languages**.
 See [Tesseract Training](https://tesseract-ocr.github.io/tessdoc/Training-Tesseract.html) for more information.
","{'added': [(46, 'This project **does not include a GUI application**. If you need one, please see the [3rdParty](https://tesseract-ocr.github.io/tessdoc/User-Projects-%E2%80%93-3rdParty.html) documentation.')], 'deleted': [(46, 'This project **does not include a GUI application**.'), (47, 'If you need one, please see the [3rdParty](https://tesseract-ocr.github.io/tessdoc/User-Projects-%E2%80%93-3rdParty.html) documentation.')]}",yes
README.md,README.md,672e784ef4ed49cc99d53a60f04351f080ee8256,fb63d9acb84336a41518d2c8288986f5b73ce9e0,Update README.md,"@@ -29,15 +29,10 @@ Table of Contents
 
 This package contains an **OCR engine** - `libtesseract` and a **command line program** - `tesseract`.
 
-Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused
-on line recognition, but also still supports the legacy Tesseract OCR engine of
-Tesseract 3 which works by recognizing character patterns. Compatibility with
-Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).
-It also needs [traineddata](https://tesseract-ocr.github.io/tessdoc/Data-Files.html) files which support the legacy engine, for example
-those from the [tessdata](https://github.com/tesseract-ocr/tessdata) repository.
-
-The lead developer is Ray Smith. The maintainer is Zdenko Podobny.
-For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)
+Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns. Compatibility with Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).
+It also needs [traineddata](https://tesseract-ocr.github.io/tessdoc/Data-Files.html) files which support the legacy engine, for example those from the [tessdata](https://github.com/tesseract-ocr/tessdata) repository.
+
+The lead developer is Ray Smith. The maintainer is Zdenko Podobny. For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)
 and GitHub's log of [contributors](https://github.com/tesseract-ocr/tesseract/graphs/contributors).
 
 Tesseract has **unicode (UTF-8) support**, and can **recognize more than 100 languages** ""out of the box"".
@@ -46,8 +41,7 @@ Tesseract supports **[various image formats](https://tesseract-ocr.github.io/tes
 
 Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO (the last one - since version 4.1.0).
 
-You should note that in many cases, in order to get better OCR results,
-you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.
+You should note that in many cases, in order to get better OCR results, you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.
 
 This project **does not include a GUI application**.
 If you need one, please see the [3rdParty](https://tesseract-ocr.github.io/tessdoc/User-Projects-%E2%80%93-3rdParty.html) documentation.
@@ -57,13 +51,10 @@ See [Tesseract Training](https://tesseract-ocr.github.io/tessdoc/Training-Tesser
 
 ## Brief history
 
-Tesseract was originally developed at Hewlett-Packard Laboratories Bristol UK and at Hewlett-Packard Co, Greeley Colorado USA between 1985 and 1994, with some
-more changes made in 1996 to port to Windows, and some C++izing in 1998.
-In 2005 Tesseract was open sourced by HP. From 2006 until November 2018 it was developed by Google.
+Tesseract was originally developed at Hewlett-Packard Laboratories Bristol UK and at Hewlett-Packard Co, Greeley Colorado USA between 1985 and 1994, with some more changes made in 1996 to port to Windows, and some C++izing in 1998. In 2005 Tesseract was open sourced by HP. From 2006 until November 2018 it was developed by Google.
 
 Major version 5 is the current stable version and started with release
-[5.0.0](https://github.com/tesseract-ocr/tesseract/releases/tag/5.0.0) on November 30, 2021.
-Newer minor versions and bugfix versions are available from
+[5.0.0](https://github.com/tesseract-ocr/tesseract/releases/tag/5.0.0) on November 30, 2021. Newer minor versions and bugfix versions are available from
 [GitHub](https://github.com/tesseract-ocr/tesseract/releases/).
 
 Latest source code is available from [main branch on GitHub](https://github.com/tesseract-ocr/tesseract/tree/main).
@@ -93,8 +84,7 @@ Examples can be found in the [documentation](https://tesseract-ocr.github.io/tes
 ## For developers
 
 Developers can use `libtesseract` [C](https://github.com/tesseract-ocr/tesseract/blob/main/include/tesseract/capi.h) or
-[C++](https://github.com/tesseract-ocr/tesseract/blob/main/include/tesseract/baseapi.h) API to build their own application.
-If you need bindings to `libtesseract` for other programming languages, please see the
+[C++](https://github.com/tesseract-ocr/tesseract/blob/main/include/tesseract/baseapi.h) API to build their own application. If you need bindings to `libtesseract` for other programming languages, please see the
 [wrapper](https://tesseract-ocr.github.io/tessdoc/AddOns.html#tesseract-wrappers) section in the AddOns documentation.
 
 Documentation of Tesseract generated from source code by doxygen can be found on [tesseract-ocr.github.io](https://tesseract-ocr.github.io/).
","{'added': [(32, 'Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns. Compatibility with Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).'), (33, 'It also needs [traineddata](https://tesseract-ocr.github.io/tessdoc/Data-Files.html) files which support the legacy engine, for example those from the [tessdata](https://github.com/tesseract-ocr/tessdata) repository.'), (34, ''), (35, 'The lead developer is Ray Smith. The maintainer is Zdenko Podobny. For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)'), (44, ""You should note that in many cases, in order to get better OCR results, you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.""), (54, 'Tesseract was originally developed at Hewlett-Packard Laboratories Bristol UK and at Hewlett-Packard Co, Greeley Colorado USA between 1985 and 1994, with some more changes made in 1996 to port to Windows, and some C++izing in 1998. In 2005 Tesseract was open sourced by HP. From 2006 until November 2018 it was developed by Google.'), (57, '[5.0.0](https://github.com/tesseract-ocr/tesseract/releases/tag/5.0.0) on November 30, 2021. Newer minor versions and bugfix versions are available from'), (87, '[C++](https://github.com/tesseract-ocr/tesseract/blob/main/include/tesseract/baseapi.h) API to build their own application. If you need bindings to `libtesseract` for other programming languages, please see the')], 'deleted': [(32, 'Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused'), (33, 'on line recognition, but also still supports the legacy Tesseract OCR engine of'), (34, 'Tesseract 3 which works by recognizing character patterns. Compatibility with'), (35, 'Tesseract 3 is enabled by using the Legacy OCR Engine mode (--oem 0).'), (36, 'It also needs [traineddata](https://tesseract-ocr.github.io/tessdoc/Data-Files.html) files which support the legacy engine, for example'), (37, 'those from the [tessdata](https://github.com/tesseract-ocr/tessdata) repository.'), (38, ''), (39, 'The lead developer is Ray Smith. The maintainer is Zdenko Podobny.'), (40, 'For a list of contributors see [AUTHORS](https://github.com/tesseract-ocr/tesseract/blob/main/AUTHORS)'), (49, 'You should note that in many cases, in order to get better OCR results,'), (50, ""you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.""), (60, 'Tesseract was originally developed at Hewlett-Packard Laboratories Bristol UK and at Hewlett-Packard Co, Greeley Colorado USA between 1985 and 1994, with some'), (61, 'more changes made in 1996 to port to Windows, and some C++izing in 1998.'), (62, 'In 2005 Tesseract was open sourced by HP. From 2006 until November 2018 it was developed by Google.'), (65, '[5.0.0](https://github.com/tesseract-ocr/tesseract/releases/tag/5.0.0) on November 30, 2021.'), (66, 'Newer minor versions and bugfix versions are available from'), (96, '[C++](https://github.com/tesseract-ocr/tesseract/blob/main/include/tesseract/baseapi.h) API to build their own application.'), (97, 'If you need bindings to `libtesseract` for other programming languages, please see the')]}",yes
README.md,README.md,fb63d9acb84336a41518d2c8288986f5b73ce9e0,cb5174aeccd271be90629cb6083b2be645b9d2b4,Update README.md,"@@ -57,8 +57,7 @@ See [Tesseract Training](https://tesseract-ocr.github.io/tessdoc/Training-Tesser
 
 ## Brief history
 
-Tesseract was originally developed at Hewlett-Packard Laboratories Bristol and
-at Hewlett-Packard Co, Greeley Colorado between 1985 and 1994, with some
+Tesseract was originally developed at Hewlett-Packard Laboratories Bristol UK and at Hewlett-Packard Co, Greeley Colorado USA between 1985 and 1994, with some
 more changes made in 1996 to port to Windows, and some C++izing in 1998.
 In 2005 Tesseract was open sourced by HP. From 2006 until November 2018 it was developed by Google.
 
","{'added': [(60, 'Tesseract was originally developed at Hewlett-Packard Laboratories Bristol UK and at Hewlett-Packard Co, Greeley Colorado USA between 1985 and 1994, with some')], 'deleted': [(60, 'Tesseract was originally developed at Hewlett-Packard Laboratories Bristol and'), (61, 'at Hewlett-Packard Co, Greeley Colorado between 1985 and 1994, with some')]}",yes
README.md,README.md,d73075ea639fa74df46f9cc8369566262c00bc27,cb5174aeccd271be90629cb6083b2be645b9d2b4,Update README.md,"@@ -76,7 +76,7 @@ and **[Change Log](https://github.com/tesseract-ocr/tesseract/blob/main/ChangeLo
 
 ## Installing Tesseract
 
-You can either [Install Tesseract via pre-built binary package](https://tesseract-ocr.github.io/tessdoc/Home.html)
+You can either [Install Tesseract via pre-built binary package](https://tesseract-ocr.github.io/tessdoc/Installation.html)
 or [build it from source](https://tesseract-ocr.github.io/tessdoc/Compiling.html).
 
 A C++ compiler with good C++17 support is required for building Tesseract from source.
","{'added': [(79, 'You can either [Install Tesseract via pre-built binary package](https://tesseract-ocr.github.io/tessdoc/Installation.html)')], 'deleted': [(79, 'You can either [Install Tesseract via pre-built binary package](https://tesseract-ocr.github.io/tessdoc/Home.html)')]}",yes
appveyor.yml,appveyor.yml,cb5174aeccd271be90629cb6083b2be645b9d2b4,47485fe9abae769fe8ffd14a1e16832c5bf3beb3,Update appveyor.yml,"@@ -18,7 +18,7 @@ cache:
 
 only_commits:
   files:
-    - appveyor.yml    -
+    - appveyor.yml
     - '**.cpp'
     - '**.h'
     - 'unittest/**.c'
","{'added': [(21, '    - appveyor.yml')], 'deleted': [(21, '    - appveyor.yml    -')]}",yes
appveyor.yml,appveyor.yml,47485fe9abae769fe8ffd14a1e16832c5bf3beb3,b7d7b85834a4fe4ae1d11ae0a315807aa11b6456,appveyor.yml: Add files filter,"@@ -16,6 +16,14 @@ configuration:
 cache:
   - c:/Users/appveyor/.sw -> appveyor.yml
 
+only_commits:
+  files:
+    - appveyor.yml    -
+    - '**.cpp'
+    - '**.h'
+    - 'unittest/**.c'
+    - 'unittest/**.cc'
+
 before_build:
   - git submodule update --init --recursive
   - curl -fsS -L -o dl.zip https://github.com/SoftwareNetwork/binaries/raw/master/sw-master-windows-client.zip
","{'added': [(19, 'only_commits:'), (20, '  files:'), (21, '    - appveyor.yml    -'), (22, ""    - '**.cpp'""), (23, ""    - '**.h'""), (24, ""    - 'unittest/**.c'""), (25, ""    - 'unittest/**.cc'""), (26, '')], 'deleted': []}",yes
Makefile.am,Makefile.am,b7d7b85834a4fe4ae1d11ae0a315807aa11b6456,c7a2753da0837b9c68f3e76066aaea0cc2fb6c55,"Add missing .exe for training tools to fix build with msys2

Fixes: 8c573e4cefaa011d (""autotools: Add rule for svpaint executable"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -897,22 +897,22 @@ libtesseract_training_la_SOURCES += src/training/common/sampleiterator.cpp
 libtesseract_training_la_SOURCES += src/training/common/trainingsampleset.cpp
 endif
 
-trainingtools = combine_lang_model
-trainingtools += combine_tessdata
-trainingtools += dawg2wordlist
-trainingtools += lstmeval
-trainingtools += lstmtraining
-trainingtools += merge_unicharsets
-trainingtools += set_unicharset_properties
-trainingtools += text2image
-trainingtools += unicharset_extractor
-trainingtools += wordlist2dawg
+trainingtools = combine_lang_model$(EXEEXT)
+trainingtools += combine_tessdata$(EXEEXT)
+trainingtools += dawg2wordlist$(EXEEXT)
+trainingtools += lstmeval$(EXEEXT)
+trainingtools += lstmtraining$(EXEEXT)
+trainingtools += merge_unicharsets$(EXEEXT)
+trainingtools += set_unicharset_properties$(EXEEXT)
+trainingtools += text2image$(EXEEXT)
+trainingtools += unicharset_extractor$(EXEEXT)
+trainingtools += wordlist2dawg$(EXEEXT)
 if !DISABLED_LEGACY_ENGINE
-trainingtools += ambiguous_words
-trainingtools += classifier_tester
-trainingtools += cntraining
-trainingtools += mftraining
-trainingtools += shapeclustering
+trainingtools += ambiguous_words$(EXEEXT)
+trainingtools += classifier_tester$(EXEEXT)
+trainingtools += cntraining$(EXEEXT)
+trainingtools += mftraining$(EXEEXT)
+trainingtools += shapeclustering$(EXEEXT)
 endif
 
 $(trainingtools): libtesseract.la
","{'added': [(900, 'trainingtools = combine_lang_model$(EXEEXT)'), (901, 'trainingtools += combine_tessdata$(EXEEXT)'), (902, 'trainingtools += dawg2wordlist$(EXEEXT)'), (903, 'trainingtools += lstmeval$(EXEEXT)'), (904, 'trainingtools += lstmtraining$(EXEEXT)'), (905, 'trainingtools += merge_unicharsets$(EXEEXT)'), (906, 'trainingtools += set_unicharset_properties$(EXEEXT)'), (907, 'trainingtools += text2image$(EXEEXT)'), (908, 'trainingtools += unicharset_extractor$(EXEEXT)'), (909, 'trainingtools += wordlist2dawg$(EXEEXT)'), (911, 'trainingtools += ambiguous_words$(EXEEXT)'), (912, 'trainingtools += classifier_tester$(EXEEXT)'), (913, 'trainingtools += cntraining$(EXEEXT)'), (914, 'trainingtools += mftraining$(EXEEXT)'), (915, 'trainingtools += shapeclustering$(EXEEXT)')], 'deleted': [(900, 'trainingtools = combine_lang_model'), (901, 'trainingtools += combine_tessdata'), (902, 'trainingtools += dawg2wordlist'), (903, 'trainingtools += lstmeval'), (904, 'trainingtools += lstmtraining'), (905, 'trainingtools += merge_unicharsets'), (906, 'trainingtools += set_unicharset_properties'), (907, 'trainingtools += text2image'), (908, 'trainingtools += unicharset_extractor'), (909, 'trainingtools += wordlist2dawg'), (911, 'trainingtools += ambiguous_words'), (912, 'trainingtools += classifier_tester'), (913, 'trainingtools += cntraining'), (914, 'trainingtools += mftraining'), (915, 'trainingtools += shapeclustering')]}",yes
.github\workflows\codeql-analysis.yml,.github\workflows\codeql-analysis.yml,c7a2753da0837b9c68f3e76066aaea0cc2fb6c55,d74915954c74077dccdb662eaff072ec45b62aae,"Update codeql-analysis.yml

Add build files to the paths filter.","@@ -18,6 +18,10 @@ on:
       - '**.cpp'
       - '**.h'
       - '**/codeql-analysis.yml'
+      - 'm4/*.m4'
+      - 'Makefile.am'
+      - 'autogen.sh'
+      - 'configure.ac'
   pull_request:
     # The branches below must be a subset of the branches above
     branches: [ main ]
@@ -25,6 +29,10 @@ on:
       - '**.cpp'
       - '**.h'
       - '**/codeql-analysis.yml'
+      - 'm4/*.m4'
+      - 'Makefile.am'
+      - 'autogen.sh'
+      - 'configure.ac'
   schedule:
     - cron: '34 23 * * 2'
 
","{'added': [(21, ""      - 'm4/*.m4'""), (22, ""      - 'Makefile.am'""), (23, ""      - 'autogen.sh'""), (24, ""      - 'configure.ac'""), (32, ""      - 'm4/*.m4'""), (33, ""      - 'Makefile.am'""), (34, ""      - 'autogen.sh'""), (35, ""      - 'configure.ac'"")], 'deleted': []}",yes
.github\workflows\codeql-analysis.yml,.github\workflows\codeql-analysis.yml,d74915954c74077dccdb662eaff072ec45b62aae,e37ea5f07c34cd480448f10216de211df7ad918b,"Update codeql-analysis.yml [skip ci]

Add paths filter.","@@ -14,9 +14,17 @@ name: ""CodeQL""
 on:
   push:
     branches: [ main ]
+    paths:
+      - '**.cpp'
+      - '**.h'
+      - '**/codeql-analysis.yml'
   pull_request:
     # The branches below must be a subset of the branches above
     branches: [ main ]
+    paths:
+      - '**.cpp'
+      - '**.h'
+      - '**/codeql-analysis.yml'
   schedule:
     - cron: '34 23 * * 2'
 
","{'added': [(17, '    paths:'), (18, ""      - '**.cpp'""), (19, ""      - '**.h'""), (20, ""      - '**/codeql-analysis.yml'""), (24, '    paths:'), (25, ""      - '**.cpp'""), (26, ""      - '**.h'""), (27, ""      - '**/codeql-analysis.yml'"")], 'deleted': []}",yes
README.md,README.md,e37ea5f07c34cd480448f10216de211df7ad918b,444a17d9c6199c8f9c9a6d352cfb647fd8d363bf,Update README.md,"@@ -28,6 +28,7 @@ Table of Contents
 ## About
 
 This package contains an **OCR engine** - `libtesseract` and a **command line program** - `tesseract`.
+
 Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused
 on line recognition, but also still supports the legacy Tesseract OCR engine of
 Tesseract 3 which works by recognizing character patterns. Compatibility with
","{'added': [(31, '')], 'deleted': []}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,735bb7e513e79d180e2218b62627a8a2e15645e5,0b92409cf35ed4701ed280a867798dc99ea62cb4,SW CI: Add paths filter,"@@ -2,7 +2,19 @@ name: sw
 
 on:
   push:
+    paths:
+      - '**.cpp'
+      - '**.h'
+      - '**/sw.yml'
+      - 'unittest/**.c'
+      - 'unittest/**.cc'
   pull_request:
+    paths:
+      - '**.cpp'
+      - '**.h'
+      - '**/sw.yml'
+      - 'unittest/**.c'
+      - 'unittest/**.cc'
   schedule:
     # every day
     - cron: 0 0 * * *
","{'added': [(5, '    paths:'), (6, ""      - '**.cpp'""), (7, ""      - '**.h'""), (8, ""      - '**/sw.yml'""), (9, ""      - 'unittest/**.c'""), (10, ""      - 'unittest/**.cc'""), (12, '    paths:'), (13, ""      - '**.cpp'""), (14, ""      - '**.h'""), (15, ""      - '**/sw.yml'""), (16, ""      - 'unittest/**.c'""), (17, ""      - 'unittest/**.cc'"")], 'deleted': []}",yes
configure.ac,configure.ac,cffb8a36a987cd0d013d73501dd20c553ff69c77,778dfc6933521205f664913d3c98771704f8306b,"configure.ac: fix build on aarch64_be

Fix the following build failure on aarch64_be:

/home/buildroot/autobuild/instance-3/output-1/host/opt/ext-toolchain/bin/../lib/gcc/aarch64_be-none-linux-gnu/10.3.1/../../../../aarch64_be-none-linux-gnu/bin/ld: ./.libs/libtesseract.so: undefined reference to `tesseract::IntSimdMatrix::intSimdMatrixNEON'

Fixes:
 - http://autobuild.buildroot.org/results/b9246a37fcf6be4fabfc491daddadfb09e0a320a

Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>","@@ -170,7 +170,7 @@ case ""${host_cpu}"" in
 
     ;;
 
-  aarch64|arm64)
+  aarch64*|arm64)
 
     # ARMv8 always has NEON and does not need special compiler flags.
     AM_CONDITIONAL([HAVE_NEON], true)
","{'added': [(173, '  aarch64*|arm64)')], 'deleted': [(173, '  aarch64|arm64)')]}",yes
.github\workflows\msys2.yml,.github\workflows\msys2.yml,896ff2a79345f67a1d2f8bab3a821c220e6a1664,778dfc6933521205f664913d3c98771704f8306b,"Update msys2.yml [skip ci]

Split build and install step to 4 steps.","@@ -41,13 +41,23 @@ jobs:
            pacman --noconfirm -S ${{ matrix.mingw_package_prefix }}-pkg-config
            pacman --noconfirm -S ${{ matrix.mingw_package_prefix }}-zlib
 
-    - name: Build and install tesseract and training tools
+    - name: Setup Tesseract
       run: |
+           mkdir -p m4
            ./autogen.sh
-           ./configure
+
+    - name: Configure Tesseract
+      run: |
+           ./configure '--disable-shared' '--disable-openmp' '--disable-doc' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'
+
+    - name: Build and install Tesseract
+      run: |
            make
-           make training
            make install
+
+    - name: Make and install training tools
+      run: |
+           make training
            make training-install
 
     - name: Display version
","{'added': [(44, '    - name: Setup Tesseract'), (46, '           mkdir -p m4'), (48, ''), (49, '    - name: Configure Tesseract'), (50, '      run: |'), (51, ""           ./configure '--disable-shared' '--disable-openmp' '--disable-doc' 'CXX=${{ matrix.config.cxx }}' 'CXXFLAGS=-g -O2'""), (52, ''), (53, '    - name: Build and install Tesseract'), (54, '      run: |'), (57, ''), (58, '    - name: Make and install training tools'), (59, '      run: |'), (60, '           make training')], 'deleted': [(44, '    - name: Build and install tesseract and training tools'), (47, '           ./configure'), (49, '           make training')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,778dfc6933521205f664913d3c98771704f8306b,76fcb61ad8eb995982c99489611daff2f9806721,"CI: Remove Ubuntu 18.04 (#3902)

Reason: https://github.com/actions/runner-images/issues/6002

I still keep Ubuntu 18.04 in autotools CIs for now.

[skip ci]","@@ -21,16 +21,6 @@ jobs:
           - { name: macos-11-gcc-10-cmake, os: macos-11, cxx: g++-10 } #installed
           - { name: macos-11-gcc-11-cmake, os: macos-11, cxx: g++-11 } #installed
 
-          - { name: ubuntu-18.04-clang-7-cmake, os: ubuntu-18.04, cxx: clang++-7 }
-          - { name: ubuntu-18.04-clang-8-cmake, os: ubuntu-18.04, cxx: clang++-8 } #installed
-          - { name: ubuntu-18.04-clang-9-cmake, os: ubuntu-18.04, cxx: clang++-9 } #installed
-          - { name: ubuntu-18.04-clang-10-cmake, os: ubuntu-18.04, cxx: clang++-10 }
-
-          - { name: ubuntu-18.04-gcc-7-cmake, os: ubuntu-18.04, cxx: g++-7 } #installed
-          - { name: ubuntu-18.04-gcc-8-cmake, os: ubuntu-18.04, cxx: g++-8 } #installed
-          - { name: ubuntu-18.04-gcc-9-cmake, os: ubuntu-18.04, cxx: g++-9 } #installed
-          - { name: ubuntu-18.04-gcc-10-cmake, os: ubuntu-18.04, cxx: g++-10 } #installed
-
           - { name: ubuntu-20.04-clang-7-cmake, os: ubuntu-20.04, cxx: clang++-7 }
           - { name: ubuntu-20.04-clang-8-cmake, os: ubuntu-20.04, cxx: clang++-8 } #installed
           - { name: ubuntu-20.04-clang-9-cmake, os: ubuntu-20.04, cxx: clang++-9 } #installed
","{'added': [], 'deleted': [(24, '          - { name: ubuntu-18.04-clang-7-cmake, os: ubuntu-18.04, cxx: clang++-7 }'), (25, '          - { name: ubuntu-18.04-clang-8-cmake, os: ubuntu-18.04, cxx: clang++-8 } #installed'), (26, '          - { name: ubuntu-18.04-clang-9-cmake, os: ubuntu-18.04, cxx: clang++-9 } #installed'), (27, '          - { name: ubuntu-18.04-clang-10-cmake, os: ubuntu-18.04, cxx: clang++-10 }'), (28, ''), (29, '          - { name: ubuntu-18.04-gcc-7-cmake, os: ubuntu-18.04, cxx: g++-7 } #installed'), (30, '          - { name: ubuntu-18.04-gcc-8-cmake, os: ubuntu-18.04, cxx: g++-8 } #installed'), (31, '          - { name: ubuntu-18.04-gcc-9-cmake, os: ubuntu-18.04, cxx: g++-9 } #installed'), (32, '          - { name: ubuntu-18.04-gcc-10-cmake, os: ubuntu-18.04, cxx: g++-10 } #installed'), (33, '')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,778dfc6933521205f664913d3c98771704f8306b,76fcb61ad8eb995982c99489611daff2f9806721,"CI: Remove Ubuntu 18.04 (#3902)

Reason: https://github.com/actions/runner-images/issues/6002

I still keep Ubuntu 18.04 in autotools CIs for now.

[skip ci]","@@ -14,7 +14,6 @@ jobs:
       fail-fast: false
       matrix:
         compiler: [ g++, clang++ ]
-        #os: [ ubuntu-18.04, ubuntu-20.04 ]
         os: [ ubuntu-20.04 ]
 
     steps:
","{'added': [], 'deleted': [(17, '        #os: [ ubuntu-18.04, ubuntu-20.04 ]')]}",yes
.github\workflows\unittest-macos.yml,.github\workflows\unittest-macos.yml,76fcb61ad8eb995982c99489611daff2f9806721,fac690462b8f06d00c8b7b063415086665fe6ff2,"unittest-macos.yml: Use macOS 12 instead.of  10.15

Reason: https://github.com/actions/runner-images#5583

[skip-ci]","@@ -13,8 +13,8 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: macos-10.15-clang-unittest, os: macos-10.15, cxx: clang++ }
-          - { name: macos-10.15-gcc-unittest, os: macos-10.15, cxx: g++ }
+          - { name: macos-12-clang-unittest, os: macos-12, cxx: clang++ }
+          - { name: macos-12-gcc-unittest, os: macos-12, cxx: g++ }
 
     steps:
     - uses: actions/checkout@v2
","{'added': [(16, '          - { name: macos-12-clang-unittest, os: macos-12, cxx: clang++ }'), (17, '          - { name: macos-12-gcc-unittest, os: macos-12, cxx: g++ }')], 'deleted': [(16, '          - { name: macos-10.15-clang-unittest, os: macos-10.15, cxx: clang++ }'), (17, '          - { name: macos-10.15-gcc-unittest, os: macos-10.15, cxx: g++ }')]}",yes
.github\workflows\autotools-macos.yml,.github\workflows\autotools-macos.yml,fac690462b8f06d00c8b7b063415086665fe6ff2,0daf18c2028e5217cd996522816c3dd2ec1a4198,"autotools-macos.yml: Remove macOS 10.15

Reason: https://github.com/actions/runner-images/issues/5583

Use macOS 12 instead.","@@ -14,8 +14,8 @@ jobs:
       fail-fast: false
       matrix:
         config:
-          - { name: macos-10.15-clang-12-autotools, os: macos-10.15, cxx: clang++ }
-          - { name: macos-10.15-gcc-10-autotools, os: macos-10.15, cxx: g++-10 }
+          - { name: macos-12-clang-13-autotools, os: macos-12, cxx: clang++ }
+          - { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }
 
     steps:
     - uses: actions/checkout@v2
","{'added': [(17, '          - { name: macos-12-clang-13-autotools, os: macos-12, cxx: clang++ }'), (18, '          - { name: macos-12-gcc-11-autotools, os: macos-12, cxx: g++-11 }')], 'deleted': [(17, '          - { name: macos-10.15-clang-12-autotools, os: macos-10.15, cxx: clang++ }'), (18, '          - { name: macos-10.15-gcc-10-autotools, os: macos-10.15, cxx: g++-10 }')]}",yes
src\arch\simddetect.cpp,src\arch\simddetect.cpp,0daf18c2028e5217cd996522816c3dd2ec1a4198,15200c6fe7733f71a6cf52fbc1e4d94150f9f168,"Detect availability of AVX512-VNNI

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -41,6 +41,7 @@
 #endif
 
 #if defined(HAVE_AVX) || defined(HAVE_AVX2) || defined(HAVE_FMA) || defined(HAVE_SSE4_1)
+// See https://en.wikipedia.org/wiki/CPUID.
 #  define HAS_CPUID
 #endif
 
@@ -94,6 +95,7 @@ bool SIMDDetect::avx_available_;
 bool SIMDDetect::avx2_available_;
 bool SIMDDetect::avx512F_available_;
 bool SIMDDetect::avx512BW_available_;
+bool SIMDDetect::avx512VNNI_available_;
 // If true, then FMA has been detected.
 bool SIMDDetect::fma_available_;
 // If true, then SSe4.1 has been detected.
@@ -171,6 +173,7 @@ SIMDDetect::SIMDDetect() {
         avx2_available_ = (ebx & 0x00000020) != 0;
         avx512F_available_ = (ebx & 0x00010000) != 0;
         avx512BW_available_ = (ebx & 0x40000000) != 0;
+        avx512VNNI_available_ = (ecx & 0x00000800) != 0;
       }
 #      endif
     }
@@ -201,6 +204,7 @@ SIMDDetect::SIMDDetect() {
         avx2_available_ = (cpuInfo[1] & 0x00000020) != 0;
         avx512F_available_ = (cpuInfo[1] & 0x00010000) != 0;
         avx512BW_available_ = (cpuInfo[1] & 0x40000000) != 0;
+        avx512VNNI_available_ = (cpuInfo[2] & 0x00000800) != 0;
       }
 #      endif
     }
","{'added': [(44, '// See https://en.wikipedia.org/wiki/CPUID.'), (98, 'bool SIMDDetect::avx512VNNI_available_;'), (176, '        avx512VNNI_available_ = (ecx & 0x00000800) != 0;'), (207, '        avx512VNNI_available_ = (cpuInfo[2] & 0x00000800) != 0;')], 'deleted': []}",yes
src\arch\simddetect.h,src\arch\simddetect.h,0daf18c2028e5217cd996522816c3dd2ec1a4198,15200c6fe7733f71a6cf52fbc1e4d94150f9f168,"Detect availability of AVX512-VNNI

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -47,6 +47,10 @@ public:
   static inline bool IsAVX512BWAvailable() {
     return detector.avx512BW_available_;
   }
+  // Returns true if AVX512 Vector Neural Network Instructions are available.
+  static inline bool IsAVX512VNNIAvailable() {
+    return detector.avx512VNNI_available_;
+  }
   // Returns true if FMA is available on this system.
   static inline bool IsFMAAvailable() {
     return detector.fma_available_;
@@ -75,6 +79,7 @@ private:
   static TESS_API bool avx2_available_;
   static TESS_API bool avx512F_available_;
   static TESS_API bool avx512BW_available_;
+  static TESS_API bool avx512VNNI_available_;
   // If true, then FMA has been detected.
   static TESS_API bool fma_available_;
   // If true, then SSe4.1 has been detected.
","{'added': [(50, '  // Returns true if AVX512 Vector Neural Network Instructions are available.'), (51, '  static inline bool IsAVX512VNNIAvailable() {'), (52, '    return detector.avx512VNNI_available_;'), (53, '  }'), (82, '  static TESS_API bool avx512VNNI_available_;')], 'deleted': []}",yes
src\tesseract.cpp,src\tesseract.cpp,0daf18c2028e5217cd996522816c3dd2ec1a4198,15200c6fe7733f71a6cf52fbc1e4d94150f9f168,"Detect availability of AVX512-VNNI

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -149,6 +149,9 @@ static void PrintVersionInfo() {
   if (tesseract::SIMDDetect::IsAVX512FAvailable()) {
     printf("" Found AVX512F\n"");
   }
+  if (tesseract::SIMDDetect::IsAVX512VNNIAvailable()) {
+    printf("" Found AVX512VNNI\n"");
+  }
   if (tesseract::SIMDDetect::IsAVX2Available()) {
     printf("" Found AVX2\n"");
   }
","{'added': [(152, '  if (tesseract::SIMDDetect::IsAVX512VNNIAvailable()) {'), (153, '    printf("" Found AVX512VNNI\\n"");'), (154, '  }')], 'deleted': []}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,15200c6fe7733f71a6cf52fbc1e4d94150f9f168,94b9ca4343743d38fbb635ca88e50621bc2d8beb,GA cmake-win64: use webp v1.2.3 as new code requires libsharpyuv,"@@ -68,7 +68,7 @@ jobs:
       - name: Build and Install webp
         shell: cmd
         run: |
-             git clone --depth 1 https://github.com/webmproject/libwebp.git
+             git -c advice.detachedHead=false clone --branch v1.2.3 --depth 1 https://github.com/webmproject/libwebp.git
              cd libwebp
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWEBP_BUILD_ANIM_UTILS=OFF -DWEBP_BUILD_CWEBP=OFF -DWEBP_BUILD_DWEBP=OFF -DWEBP_BUILD_GIF2WEBP=OFF -DWEBP_BUILD_IMG2WEBP=OFF -DWEBP_BUILD_VWEBP=OFF -DWEBP_BUILD_WEBPMUX=OFF -DWEBP_BUILD_WEBPINFO=OFF -DWEBP_BUILD_EXTRAS=OFF
              cmake --build build --config Release --target install
","{'added': [(71, '             git -c advice.detachedHead=false clone --branch v1.2.3 --depth 1 https://github.com/webmproject/libwebp.git')], 'deleted': [(71, '             git clone --depth 1 https://github.com/webmproject/libwebp.git')]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,94b9ca4343743d38fbb635ca88e50621bc2d8beb,1c4c0b00e49e5ec2e4958278e864c6629afa2cd4,"cmake.yml: Remove macOS 10

https://github.com/actions/virtual-environments/issues/5583","@@ -15,12 +15,6 @@ jobs:
       matrix:
         config:
 
-          - { name: macos-10.15-clang-12-cmake, os: macos-10.15, cxx: clang++ } # default
-          - { name: macos-10.15-clang-11-cmake, os: macos-10.15, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed
-          - { name: macos-10.15-gcc-9-cmake, os: macos-10.15, cxx: g++-9 } #installed
-          - { name: macos-10.15-gcc-10-cmake, os: macos-10.15, cxx: g++-10 } #installed
-          - { name: macos-10.15-gcc-11-cmake, os: macos-10.15, cxx: g++-11 } #installed
-
           - { name: macos-11-clang-12-cmake, os: macos-11, cxx: clang++ } # default
           # - { name: macos-11-clang-11-cmake, os: macos-11, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed
           - { name: macos-11-gcc-9-cmake, os: macos-11, cxx: g++-9 } #installed
","{'added': [], 'deleted': [(18, '          - { name: macos-10.15-clang-12-cmake, os: macos-10.15, cxx: clang++ } # default'), (19, ""          - { name: macos-10.15-clang-11-cmake, os: macos-10.15, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed""), (20, '          - { name: macos-10.15-gcc-9-cmake, os: macos-10.15, cxx: g++-9 } #installed'), (21, '          - { name: macos-10.15-gcc-10-cmake, os: macos-10.15, cxx: g++-10 } #installed'), (22, '          - { name: macos-10.15-gcc-11-cmake, os: macos-10.15, cxx: g++-11 } #installed'), (23, '')]}",yes
src\viewer\svmnode.h,src\viewer\svmnode.h,749c90d92ec7eef32508049c7c0d5df98bf4f25b,f827e251d2fb2f016e3222040251942e61d2d8c4,Fix the build on CodeQL/Analyze,"@@ -29,6 +29,8 @@
 
 #ifndef GRAPHICS_DISABLED
 
+#include <tesseract/export.h>
+
 #include <string>
 
 namespace tesseract {
","{'added': [(32, '#include <tesseract/export.h>'), (33, '')], 'deleted': []}",yes
sw.cpp,sw.cpp,f827e251d2fb2f016e3222040251942e61d2d8c4,4c92a58afbc66ee190c87981c403a80328f7af0c,Update sw.cpp,"@@ -79,7 +79,9 @@ void build(Solution &s)
         }
         if (!win_or_mingw)
         {
+#if SW_MODULE_ABI_VERSION > 29
             if (!libtesseract.getBuildSettings().TargetOS.Android)
+#endif
                 libtesseract += ""pthread""_slib;
         }
         if (libtesseract.getBuildSettings().TargetOS.Arch == ArchType::aarch64)
","{'added': [(82, '#if SW_MODULE_ABI_VERSION > 29'), (84, '#endif')], 'deleted': []}",yes
sw.cpp,sw.cpp,4c92a58afbc66ee190c87981c403a80328f7af0c,4de02dd7f93bf3755da237d286a2632399a5cf7d,[sw] Do not link pthread on android.,"@@ -79,7 +79,8 @@ void build(Solution &s)
         }
         if (!win_or_mingw)
         {
-            libtesseract += ""pthread""_slib;
+            if (!libtesseract.getBuildSettings().TargetOS.Android)
+                libtesseract += ""pthread""_slib;
         }
         if (libtesseract.getBuildSettings().TargetOS.Arch == ArchType::aarch64)
         {
","{'added': [(82, '            if (!libtesseract.getBuildSettings().TargetOS.Android)'), (83, '                libtesseract += ""pthread""_slib;')], 'deleted': [(82, '            libtesseract += ""pthread""_slib;')]}",yes
src\viewer\scrollview.h,src\viewer\scrollview.h,4de02dd7f93bf3755da237d286a2632399a5cf7d,5781e0d5cf292dc46e2142cb2482e64cc01d1916,[sw] Add svpaint.,"@@ -89,7 +89,7 @@ struct SVEvent {
 // The SVEventHandler class is used for Event handling: If you register your
 // class as SVEventHandler to a ScrollView Window, the SVEventHandler will be
 // called whenever an appropriate event occurs.
-class SVEventHandler {
+class TESS_API SVEventHandler {
 public:
   virtual ~SVEventHandler();
 
","{'added': [(92, 'class TESS_API SVEventHandler {')], 'deleted': [(92, 'class SVEventHandler {')]}",yes
src\viewer\svmnode.h,src\viewer\svmnode.h,4de02dd7f93bf3755da237d286a2632399a5cf7d,5781e0d5cf292dc46e2142cb2482e64cc01d1916,[sw] Add svpaint.,"@@ -35,7 +35,7 @@ namespace tesseract {
 
 class ScrollView;
 
-class SVMenuNode {
+class TESS_API SVMenuNode {
 public:
   // Creating the (empty) root menu node.
   SVMenuNode();
","{'added': [(38, 'class TESS_API SVMenuNode {')], 'deleted': [(38, 'class SVMenuNode {')]}",yes
sw.cpp,sw.cpp,4de02dd7f93bf3755da237d286a2632399a5cf7d,5781e0d5cf292dc46e2142cb2482e64cc01d1916,[sw] Add svpaint.,"@@ -15,14 +15,10 @@ void build(Solution &s)
 
         libtesseract += ""TESS_API""_api;
         libtesseract += ""include/.*""_rr;
-        libtesseract += ""src/.*""_rr;
+        libtesseract += ""src/.+/.*""_rr;
         libtesseract -= ""src/lstm/.*\\.cc""_rr;
         libtesseract -= ""src/training/.*""_rr;
 
-        libtesseract -=
-            ""src/tesseract.cpp"",
-            ""src/svpaint.cpp"";
-
         libtesseract.Public += ""include""_idir;
         libtesseract.Protected +=
             ""src/opencl""_id,
@@ -121,6 +117,13 @@ void build(Solution &s)
         tesseract += libtesseract;
     }
 
+    auto &svpaint = tess.addExecutable(""svpaint"");
+    {
+        svpaint += cppstd;
+        svpaint += ""src/svpaint.cpp"";
+        svpaint += libtesseract;
+    }
+
     auto &training = tess.addDirectory(""training"");
 
     //
","{'added': [(18, '        libtesseract += ""src/.+/.*""_rr;'), (120, '    auto &svpaint = tess.addExecutable(""svpaint"");'), (121, '    {'), (122, '        svpaint += cppstd;'), (123, '        svpaint += ""src/svpaint.cpp"";'), (124, '        svpaint += libtesseract;'), (125, '    }'), (126, '')], 'deleted': [(18, '        libtesseract += ""src/.*""_rr;'), (22, '        libtesseract -='), (23, '            ""src/tesseract.cpp"",'), (24, '            ""src/svpaint.cpp"";'), (25, '')]}",yes
sw.cpp,sw.cpp,5781e0d5cf292dc46e2142cb2482e64cc01d1916,74e226b228d46052dec825604d7aac5041986e9e,[sw] Add missing file for arm64. Change branch name.,"@@ -1,6 +1,6 @@
 void build(Solution &s)
 {
-    auto &tess = s.addProject(""google.tesseract"", ""master"");
+    auto &tess = s.addProject(""google.tesseract"", ""main"");
     tess += Git(""https://github.com/tesseract-ocr/tesseract"", """", ""{v}"");
 
     auto cppstd = cpp17;
@@ -82,7 +82,13 @@ void build(Solution &s)
             libtesseract[""src/arch/intsimdmatrixavx2.cpp""].args.push_back(""-mavx2"");
         }
         if (!win_or_mingw)
+        {
             libtesseract += ""pthread""_slib;
+        }
+        if (libtesseract.getBuildSettings().TargetOS.Arch == ArchType::aarch64)
+        {
+            libtesseract += ""src/arch/dotproductneon.cpp"";
+        }
 
         libtesseract.Public += ""HAVE_CONFIG_H""_d;
         libtesseract.Public += ""_SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS=1""_d;
","{'added': [(3, '    auto &tess = s.addProject(""google.tesseract"", ""main"");'), (85, '        {'), (87, '        }'), (88, '        if (libtesseract.getBuildSettings().TargetOS.Arch == ArchType::aarch64)'), (89, '        {'), (90, '            libtesseract += ""src/arch/dotproductneon.cpp"";'), (91, '        }')], 'deleted': [(3, '    auto &tess = s.addProject(""google.tesseract"", ""master"");')]}",yes
src\training\ambiguous_words.cpp,src\training\ambiguous_words.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -33,13 +33,13 @@ int main(int argc, char **argv) {
   // Parse input arguments.
   if (argc > 1 && (!strcmp(argv[1], ""-v"") || !strcmp(argv[1], ""--version""))) {
     printf(""%s\n"", tesseract::TessBaseAPI::Version());
-    return 0;
+    return EXIT_SUCCESS;
   } else if (argc != 4 && (argc != 6 || strcmp(argv[1], ""-l"") != 0)) {
     printf(
         ""Usage: %s -v | --version | %s [-l lang] tessdata_dir wordlist_file""
         "" output_ambiguous_wordlist_file\n"",
         argv[0], argv[0]);
-    return 1;
+    return EXIT_FAILURE;
   }
   int argv_offset = 0;
   std::string lang;
@@ -65,7 +65,7 @@ int main(int argc, char **argv) {
   FILE *input_file = fopen(input_file_str, ""rb"");
   if (input_file == nullptr) {
     tesseract::tprintf(""Failed to open input wordlist file %s\n"", input_file_str);
-    exit(1);
+    return EXIT_FAILURE;
   }
   char str[CHARS_PER_LINE];
 
@@ -78,4 +78,5 @@ int main(int argc, char **argv) {
   }
   // Clean up.
   fclose(input_file);
+  return EXIT_SUCCESS;
 }
","{'added': [(36, '    return EXIT_SUCCESS;'), (42, '    return EXIT_FAILURE;'), (68, '    return EXIT_FAILURE;'), (81, '  return EXIT_SUCCESS;')], 'deleted': [(36, '    return 0;'), (42, '    return 1;'), (68, '    exit(1);')]}",yes
src\training\classifier_tester.cpp,src\training\classifier_tester.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -109,7 +109,7 @@ int main(int argc, char **argv) {
       InitializeClassifier(FLAGS_classifier.c_str(), trainer->unicharset(), argc, argv, &api);
   if (shape_classifier == nullptr) {
     fprintf(stderr, ""Classifier init failed!:%s\n"", FLAGS_classifier.c_str());
-    return 1;
+    return EXIT_FAILURE;
   }
 
   // We want to test junk as well if it is available.
@@ -123,5 +123,5 @@ int main(int argc, char **argv) {
   delete shape_classifier;
   delete api;
 
-  return 0;
+  return EXIT_SUCCESS;
 } /* main */
","{'added': [(112, '    return EXIT_FAILURE;'), (126, '  return EXIT_SUCCESS;')], 'deleted': [(112, '    return 1;'), (126, '  return 0;')]}",yes
src\training\cntraining.cpp,src\training\cntraining.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -141,7 +141,7 @@ int main(int argc, char *argv[]) {
     Clusterer = SetUpForClustering(FeatureDefs, CharSample, PROGRAM_FEATURE_TYPE);
     if (Clusterer == nullptr) { // To avoid a SIGSEGV
       fprintf(stderr, ""Error: nullptr clusterer!\n"");
-      return 1;
+      return EXIT_FAILURE;
     }
     float SavedMinSamples = Config.MinSamples;
     // To disable the tendency to produce a single cluster for all fonts,
@@ -173,7 +173,7 @@ int main(int argc, char *argv[]) {
     FreeProtoList(&freeable_proto);
   }
   printf(""\n"");
-  return 0;
+  return EXIT_SUCCESS;
 } // main
 
 /*----------------------------------------------------------------------------
","{'added': [(144, '      return EXIT_FAILURE;'), (176, '  return EXIT_SUCCESS;')], 'deleted': [(144, '      return 1;'), (176, '  return 0;')]}",yes
src\training\combine_lang_model.cpp,src\training\combine_lang_model.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -58,7 +58,7 @@ int main(int argc, char **argv) {
   UNICHARSET unicharset;
   if (!unicharset.load_from_file(FLAGS_input_unicharset.c_str(), false)) {
     tprintf(""Failed to load unicharset from %s\n"", FLAGS_input_unicharset.c_str());
-    return 1;
+    return EXIT_FAILURE;
   }
   tprintf(""Loaded unicharset of size %zu from file %s\n"", unicharset.size(),
           FLAGS_input_unicharset.c_str());
","{'added': [(61, '    return EXIT_FAILURE;')], 'deleted': [(61, '    return 1;')]}",yes
src\training\combine_tessdata.cpp,src\training\combine_tessdata.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -269,7 +269,7 @@ int main(int argc, char **argv) {
         ""Usage for compacting LSTM component to int:\n""
         ""  %s -c traineddata_file\n"",
         argv[0]);
-    return 1;
+    return EXIT_FAILURE;
   }
   tm.Directory();
   return EXIT_SUCCESS;
","{'added': [(272, '    return EXIT_FAILURE;')], 'deleted': [(272, '    return 1;')]}",yes
src\training\dawg2wordlist.cpp,src\training\dawg2wordlist.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -60,7 +60,7 @@ static int WriteDawgAsWordlist(const UNICHARSET &unicharset, const tesseract::Da
   FILE *out = fopen(outfile_name, ""wb"");
   if (out == nullptr) {
     tprintf(""Could not open %s for writing.\n"", outfile_name);
-    return 1;
+    return EXIT_FAILURE;
   }
   WordOutputter outputter(out);
   using namespace std::placeholders; // for _1
@@ -80,7 +80,7 @@ int main(int argc, char *argv[]) {
         ""Usage: %s -v | --version | %s <unicharset> <dawgfile> ""
         ""<wordlistfile>\n"",
         argv[0], argv[0]);
-    return 1;
+    return EXIT_FAILURE;
   }
   const char *unicharset_file = argv[1];
   const char *dawg_file = argv[2];
@@ -88,12 +88,12 @@ int main(int argc, char *argv[]) {
   UNICHARSET unicharset;
   if (!unicharset.load_from_file(unicharset_file)) {
     tprintf(""Error loading unicharset from %s.\n"", unicharset_file);
-    return 1;
+    return EXIT_FAILURE;
   }
   auto dict = LoadSquishedDawg(unicharset, dawg_file);
   if (dict == nullptr) {
     tprintf(""Error loading dictionary from %s.\n"", dawg_file);
-    return 1;
+    return EXIT_FAILURE;
   }
   int retval = WriteDawgAsWordlist(unicharset, dict.get(), wordlist_file);
   return retval;
","{'added': [(63, '    return EXIT_FAILURE;'), (83, '    return EXIT_FAILURE;'), (91, '    return EXIT_FAILURE;'), (96, '    return EXIT_FAILURE;')], 'deleted': [(63, '    return 1;'), (83, '    return 1;'), (91, '    return 1;'), (96, '    return 1;')]}",yes
src\training\lstmeval.cpp,src\training\lstmeval.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -34,38 +34,38 @@ int main(int argc, char **argv) {
   ParseArguments(&argc, &argv);
   if (FLAGS_model.empty()) {
     tprintf(""Must provide a --model!\n"");
-    return 1;
+    return EXIT_FAILURE;
   }
   if (FLAGS_eval_listfile.empty()) {
     tprintf(""Must provide a --eval_listfile!\n"");
-    return 1;
+    return EXIT_FAILURE;
   }
   tesseract::TessdataManager mgr;
   if (!mgr.Init(FLAGS_model.c_str())) {
     if (FLAGS_traineddata.empty()) {
       tprintf(""Must supply --traineddata to eval a training checkpoint!\n"");
-      return 1;
+      return EXIT_FAILURE;
     }
     tprintf(""%s is not a recognition model, trying training checkpoint...\n"", FLAGS_model.c_str());
     if (!mgr.Init(FLAGS_traineddata.c_str())) {
       tprintf(""Failed to load language model from %s!\n"", FLAGS_traineddata.c_str());
-      return 1;
+      return EXIT_FAILURE;
     }
     std::vector<char> model_data;
     if (!tesseract::LoadDataFromFile(FLAGS_model.c_str(), &model_data)) {
       tprintf(""Failed to load model from: %s\n"", FLAGS_model.c_str());
-      return 1;
+      return EXIT_FAILURE;
     }
     mgr.OverwriteEntry(tesseract::TESSDATA_LSTM, &model_data[0], model_data.size());
   }
   tesseract::LSTMTester tester(static_cast<int64_t>(FLAGS_max_image_MB) * 1048576);
   if (!tester.LoadAllEvalData(FLAGS_eval_listfile.c_str())) {
     tprintf(""Failed to load eval data from: %s\n"", FLAGS_eval_listfile.c_str());
-    return 1;
+    return EXIT_FAILURE;
   }
   double errs = 0.0;
   std::string result = tester.RunEvalSync(0, &errs, mgr,
                                           /*training_stage (irrelevant)*/ 0, FLAGS_verbosity);
   tprintf(""%s\n"", result.c_str());
-  return 0;
+  return EXIT_SUCCESS;
 } /* main */
","{'added': [(37, '    return EXIT_FAILURE;'), (41, '    return EXIT_FAILURE;'), (47, '      return EXIT_FAILURE;'), (52, '      return EXIT_FAILURE;'), (57, '      return EXIT_FAILURE;'), (64, '    return EXIT_FAILURE;'), (70, '  return EXIT_SUCCESS;')], 'deleted': [(37, '    return 1;'), (41, '    return 1;'), (47, '      return 1;'), (52, '      return 1;'), (57, '      return 1;'), (64, '    return 1;'), (70, '  return 0;')]}",yes
src\training\merge_unicharsets.cpp,src\training\merge_unicharsets.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -24,14 +24,14 @@ int main(int argc, char **argv) {
 
   if (argc > 1 && (!strcmp(argv[1], ""-v"") || !strcmp(argv[1], ""--version""))) {
     printf(""%s\n"", tesseract::TessBaseAPI::Version());
-    return 0;
+    return EXIT_SUCCESS;
   } else if (argc < 4) {
     // Print usage
     printf(
         ""Usage: %s -v | --version |\n""
         ""       %s unicharset-in-1 ... unicharset-in-n unicharset-out\n"",
         argv[0], argv[0]);
-    return 1;
+    return EXIT_FAILURE;
   }
 
   tesseract::UNICHARSET input_unicharset, result_unicharset;
@@ -42,7 +42,7 @@ int main(int argc, char **argv) {
       result_unicharset.AppendOtherUnicharset(input_unicharset);
     } else {
       printf(""Failed to load unicharset from file %s!!\n"", argv[arg]);
-      exit(1);
+      return EXIT_FAILURE;
     }
   }
 
@@ -51,7 +51,7 @@ int main(int argc, char **argv) {
     printf(""Wrote unicharset file %s.\n"", argv[argc - 1]);
   } else {
     printf(""Cannot save unicharset file %s.\n"", argv[argc - 1]);
-    exit(1);
+    return EXIT_FAILURE;
   }
-  return 0;
+  return EXIT_SUCCESS;
 }
","{'added': [(27, '    return EXIT_SUCCESS;'), (34, '    return EXIT_FAILURE;'), (45, '      return EXIT_FAILURE;'), (54, '    return EXIT_FAILURE;'), (56, '  return EXIT_SUCCESS;')], 'deleted': [(27, '    return 0;'), (34, '    return 1;'), (45, '      exit(1);'), (54, '    exit(1);'), (56, '  return 0;')]}",yes
src\training\mftraining.cpp,src\training\mftraining.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -201,7 +201,7 @@ int main(int argc, char **argv) {
   // Load the training data.
   auto trainer = tesseract::LoadTrainingData(argv + 1, false, &shape_table, file_prefix);
   if (trainer == nullptr) {
-    return 1; // Failed.
+    return EXIT_FAILURE; // Failed.
   }
 
   // Setup an index mapping from the shapes in the shape table to the classes
@@ -269,5 +269,5 @@ int main(int argc, char **argv) {
       ;
     }
   }
-  return 0;
+  return EXIT_SUCCESS;
 } /* main */
","{'added': [(204, '    return EXIT_FAILURE; // Failed.'), (272, '  return EXIT_SUCCESS;')], 'deleted': [(204, '    return 1; // Failed.'), (272, '  return 0;')]}",yes
src\training\set_unicharset_properties.cpp,src\training\set_unicharset_properties.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,14 +29,14 @@ int main(int argc, char **argv) {
   // Check validity of input flags.
   if (FLAGS_U.empty() || FLAGS_O.empty()) {
     tprintf(""Specify both input and output unicharsets!\n"");
-    exit(1);
+    return EXIT_FAILURE;
   }
   if (FLAGS_script_dir.empty()) {
     tprintf(""Must specify a script_dir!\n"");
-    exit(1);
+    return EXIT_FAILURE;
   }
 
   tesseract::SetPropertiesForInputFile(FLAGS_script_dir.c_str(), FLAGS_U.c_str(), FLAGS_O.c_str(),
                                        FLAGS_X.c_str());
-  return 0;
+  return EXIT_SUCCESS;
 }
","{'added': [(32, '    return EXIT_FAILURE;'), (36, '    return EXIT_FAILURE;'), (41, '  return EXIT_SUCCESS;')], 'deleted': [(32, '    exit(1);'), (36, '    exit(1);'), (41, '  return 0;')]}",yes
src\training\shapeclustering.cpp,src\training\shapeclustering.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -50,7 +50,7 @@ int main(int argc, char **argv) {
   auto trainer = tesseract::LoadTrainingData(argv + 1, false, nullptr, file_prefix);
 
   if (!trainer) {
-    return 1;
+    return EXIT_FAILURE;
   }
 
   if (FLAGS_display_cloud_font >= 0) {
@@ -58,13 +58,13 @@ int main(int argc, char **argv) {
     trainer->DisplaySamples(FLAGS_canonical_class1.c_str(), FLAGS_display_cloud_font,
                             FLAGS_canonical_class2.c_str(), FLAGS_display_canonical_font);
 #endif // !GRAPHICS_DISABLED
-    return 0;
+    return EXIT_SUCCESS;
   } else if (!FLAGS_canonical_class1.empty()) {
     trainer->DebugCanonical(FLAGS_canonical_class1.c_str(), FLAGS_canonical_class2.c_str());
-    return 0;
+    return EXIT_SUCCESS;
   }
   trainer->SetupMasterShapes();
   WriteShapeTable(file_prefix, trainer->master_shapes());
 
-  return 0;
+  return EXIT_SUCCESS;
 } /* main */
","{'added': [(53, '    return EXIT_FAILURE;'), (61, '    return EXIT_SUCCESS;'), (64, '    return EXIT_SUCCESS;'), (69, '  return EXIT_SUCCESS;')], 'deleted': [(53, '    return 1;'), (61, '    return 0;'), (64, '    return 0;'), (69, '  return 0;')]}",yes
src\training\text2image.cpp,src\training\text2image.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -458,15 +458,15 @@ static int Main() {
   // Check validity of input flags.
   if (FLAGS_text.empty()) {
     tprintf(""'--text' option is missing!\n"");
-    exit(1);
+    return EXIT_FAILURE;
   }
   if (FLAGS_outputbase.empty()) {
     tprintf(""'--outputbase' option is missing!\n"");
-    exit(1);
+    return EXIT_FAILURE;
   }
   if (!FLAGS_unicharset_file.empty() && FLAGS_render_ngrams) {
     tprintf(""Use '--unicharset_file' only if '--render_ngrams' is set.\n"");
-    exit(1);
+    return EXIT_FAILURE;
   }
 
   std::string font_name = FLAGS_font.c_str();
@@ -479,7 +479,7 @@ static int Main() {
         tprintf(""Pango suggested font '%s'.\n"", pango_name.c_str());
       }
       tprintf(""Please correct --font arg.\n"");
-      exit(1);
+      return EXIT_FAILURE;
     }
   }
 
@@ -525,14 +525,14 @@ static int Main() {
     render.set_render_fullwidth_latin(true);
   } else {
     tprintf(""Invalid writing mode: %s\n"", FLAGS_writing_mode.c_str());
-    exit(1);
+    return EXIT_FAILURE;
   }
 
   std::string src_utf8;
   // This c_str is NOT redundant!
   if (!File::ReadFileToString(FLAGS_text.c_str(), &src_utf8)) {
     tprintf(""Failed to read file: %s\n"", FLAGS_text.c_str());
-    exit(1);
+    return EXIT_FAILURE;
   }
 
   // Remove the unicode mark if present.
@@ -554,7 +554,7 @@ static int Main() {
     if (FLAGS_render_ngrams && !FLAGS_unicharset_file.empty() &&
         !unicharset.load_from_file(FLAGS_unicharset_file.c_str())) {
       tprintf(""Failed to load unicharset from file %s\n"", FLAGS_unicharset_file.c_str());
-      exit(1);
+      return EXIT_FAILURE;
     }
 
     // If we are rendering ngrams that will be OCRed later, shuffle them so that
@@ -604,7 +604,7 @@ static int Main() {
     tprintf(""Extracting font properties only\n"");
     ExtractFontProperties(src_utf8, &render, FLAGS_outputbase.c_str());
     tprintf(""Done!\n"");
-    return 0;
+    return EXIT_SUCCESS;
   }
 
   int im = 0;
@@ -708,7 +708,7 @@ static int Main() {
     }
   }
 
-  return 0;
+  return EXIT_SUCCESS;
 }
 
 int main(int argc, char **argv) {
","{'added': [(461, '    return EXIT_FAILURE;'), (465, '    return EXIT_FAILURE;'), (469, '    return EXIT_FAILURE;'), (482, '      return EXIT_FAILURE;'), (528, '    return EXIT_FAILURE;'), (535, '    return EXIT_FAILURE;'), (557, '      return EXIT_FAILURE;'), (607, '    return EXIT_SUCCESS;'), (711, '  return EXIT_SUCCESS;')], 'deleted': [(461, '    exit(1);'), (465, '    exit(1);'), (469, '    exit(1);'), (482, '      exit(1);'), (528, '    exit(1);'), (535, '    exit(1);'), (557, '      exit(1);'), (607, '    return 0;'), (711, '  return 0;')]}",yes
src\training\wordlist2dawg.cpp,src\training\wordlist2dawg.cpp,989956c998986c83586d41cb736f8c4a3f7195a4,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,"Replace call of exit function by return statement in main function

Add also a missing return statement and use EXIT_FAILURE
and EXIT_SUCCESS instead of 1 and 0 as return values.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -35,7 +35,7 @@ int main(int argc, char **argv) {
 
   if (argc > 1 && (!strcmp(argv[1], ""-v"") || !strcmp(argv[1], ""--version""))) {
     printf(""%s\n"", tesseract::TessBaseAPI::Version());
-    return 0;
+    return EXIT_SUCCESS;
   } else if (!(argc == 4 || (argc == 5 && strcmp(argv[1], ""-t"") == 0) ||
                (argc == 6 && strcmp(argv[1], ""-r"") == 0))) {
     printf(
@@ -43,7 +43,7 @@ int main(int argc, char **argv) {
         ""       %s [-t | -r [reverse policy] ] word_list_file""
         "" dawg_file unicharset_file\n"",
         argv[0], argv[0]);
-    return 1;
+    return EXIT_FAILURE;
   }
   tesseract::Classify classify;
   int argv_index = 0;
@@ -64,7 +64,7 @@ int main(int argc, char **argv) {
   tprintf(""Loading unicharset from '%s'\n"", unicharset_file);
   if (!classify.getDict().getUnicharset().load_from_file(unicharset_file)) {
     tprintf(""Failed to load unicharset from '%s'\n"", unicharset_file);
-    return 1;
+    return EXIT_FAILURE;
   }
   const UNICHARSET &unicharset = classify.getDict().getUnicharset();
   if (argc == 4 || argc == 6) {
@@ -75,7 +75,7 @@ int main(int argc, char **argv) {
     tprintf(""Reading word list from '%s'\n"", wordlist_filename);
     if (!trie.read_and_add_word_list(wordlist_filename, unicharset, reverse_policy)) {
       tprintf(""Failed to add word list from '%s'\n"", wordlist_filename);
-      exit(1);
+      return EXIT_FAILURE;
     }
     tprintf(""Reducing Trie to SquishedDawg\n"");
     std::unique_ptr<tesseract::SquishedDawg> dawg(trie.trie_to_dawg());
@@ -95,7 +95,7 @@ int main(int argc, char **argv) {
     words.check_for_words(wordlist_filename, unicharset, true);
   } else { // should never get here
     tprintf(""Invalid command-line options\n"");
-    exit(1);
+    return EXIT_FAILURE;
   }
-  return 0;
+  return EXIT_SUCCESS;
 }
","{'added': [(38, '    return EXIT_SUCCESS;'), (46, '    return EXIT_FAILURE;'), (67, '    return EXIT_FAILURE;'), (78, '      return EXIT_FAILURE;'), (98, '    return EXIT_FAILURE;'), (100, '  return EXIT_SUCCESS;')], 'deleted': [(38, '    return 0;'), (46, '    return 1;'), (67, '    return 1;'), (78, '      exit(1);'), (98, '    exit(1);'), (100, '  return 0;')]}",yes
src\textord\makerow.cpp,src\textord\makerow.cpp,ee34b100bf9b54d3f201c7417d263988a9ad0b3f,99d6717c101308a4346f8fada011966905d2f1f2,"Fix double free in function vigorous_noise_removal (fixes issue #3876)

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -546,7 +546,7 @@ void vigorous_noise_removal(TO_BLOCK *block) {
           }
         }
         // It might be noise so get rid of it.
-        delete blob->cblob();
+        delete blob->remove_cblob();
         delete b_it.extract();
       } else {
         prev = blob;
","{'added': [(549, '        delete blob->remove_cblob();')], 'deleted': [(549, '        delete blob->cblob();')]}",yes
src\textord\makerow.cpp,src\textord\makerow.cpp,99d6717c101308a4346f8fada011966905d2f1f2,8c573e4cefaa011de2b303fa4c967ac943dc55a6,"Create to_win if needed in Textord::make_spline_rows (fixes issue #3875)

There still remain memory leaks for the test scenario, but those are less
urgent as they are related to code which is only used for debugging.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -2000,6 +2000,9 @@ void Textord::make_spline_rows(TO_BLOCK *block, // block to do
                                bool testing_on) {
 #ifndef GRAPHICS_DISABLED
   ScrollView::Color colour; // of row
+  if (testing_on && to_win == nullptr) {
+    create_to_win(page_tr_);
+  }
 #endif
   TO_ROW_IT row_it = block->get_rows();
 
","{'added': [(2003, '  if (testing_on && to_win == nullptr) {'), (2004, '    create_to_win(page_tr_);'), (2005, '  }')], 'deleted': []}",yes
Makefile.am,Makefile.am,8c573e4cefaa011de2b303fa4c967ac943dc55a6,e589bfa58bb8303acf15403421299ef4088c2ce9,"autotools: Add rule for svpaint executable (#3873)

Move also its source code svpaint.cpp from src/viewer/ to src/,
so it is no longer included in libtesseract by the cmake build.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -17,6 +17,8 @@ EXTRA_DIST += CMakeLists.txt tesseract.pc.cmake cmake VERSION
 
 DIST_SUBDIRS = $(SUBDIRS)
 
+EXTRA_PROGRAMS =
+
 uninstall-hook:
 	rm -rf $(DESTDIR)$(pkgincludedir)
 
@@ -673,9 +675,16 @@ noinst_HEADERS += src/viewer/svutil.h
 libtesseract_la_SOURCES += src/viewer/scrollview.cpp
 libtesseract_la_SOURCES += src/viewer/svmnode.cpp
 libtesseract_la_SOURCES += src/viewer/svutil.cpp
-endif
 
-# TODO: Add rule to generate svpaint from svpaint.cpp.
+EXTRA_PROGRAMS += svpaint
+svpaint_CPPFLAGS =
+svpaint_CPPFLAGS += -I$(top_builddir)/include
+svpaint_CPPFLAGS += -I$(top_srcdir)/include
+svpaint_CPPFLAGS += -I$(top_srcdir)/src/ccstruct
+svpaint_CPPFLAGS += -I$(top_srcdir)/src/viewer
+svpaint_SOURCES = src/svpaint.cpp
+svpaint_LDADD = libtesseract.la
+endif
 
 # Rules for src/wordrec.
 
@@ -758,12 +767,12 @@ endif
 
 if ENABLE_TRAINING
 
-training: $(EXTRA_PROGRAMS) | $(PROGRAMS)
+training: $(trainingtools) | $(PROGRAMS)
 
-training-install: $(EXTRA_PROGRAMS)
+training-install: $(trainingtools)
 	mkdir -p $(DESTDIR)$(bindir)
 	$(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install \
-	$(INSTALL) $(INSTALL_STRIP_FLAG) $(EXTRA_PROGRAMS) $(DESTDIR)$(bindir)
+	$(INSTALL) $(INSTALL_STRIP_FLAG) $(trainingtools) $(DESTDIR)$(bindir)
 
 training-uninstall:
 
@@ -773,8 +782,6 @@ check: libtesseract_training.la
 # dawg_test runs dawg2wordlist and wordlist2dawg.
 check: dawg2wordlist wordlist2dawg
 
-CLEANFILES += $(EXTRA_PROGRAMS)
-
 else
 
 training:
@@ -782,6 +789,8 @@ training:
 
 endif
 
+CLEANFILES += $(EXTRA_PROGRAMS)
+
 training_CPPFLAGS := -DPANGO_ENABLE_ENGINE
 training_CPPFLAGS += -DTESS_COMMON_TRAINING_API=
 training_CPPFLAGS += -DTESS_PANGO_TRAINING_API=
@@ -908,7 +917,7 @@ endif
 
 $(trainingtools): libtesseract.la
 
-EXTRA_PROGRAMS = $(trainingtools)
+EXTRA_PROGRAMS += $(trainingtools)
 
 extralib = libtesseract.la
 extralib += $(libarchive_LIBS)
","{'added': [(20, 'EXTRA_PROGRAMS ='), (21, ''), (679, 'EXTRA_PROGRAMS += svpaint'), (680, 'svpaint_CPPFLAGS ='), (681, 'svpaint_CPPFLAGS += -I$(top_builddir)/include'), (682, 'svpaint_CPPFLAGS += -I$(top_srcdir)/include'), (683, 'svpaint_CPPFLAGS += -I$(top_srcdir)/src/ccstruct'), (684, 'svpaint_CPPFLAGS += -I$(top_srcdir)/src/viewer'), (685, 'svpaint_SOURCES = src/svpaint.cpp'), (686, 'svpaint_LDADD = libtesseract.la'), (687, 'endif'), (770, 'training: $(trainingtools) | $(PROGRAMS)'), (772, 'training-install: $(trainingtools)'), (775, '\t$(INSTALL) $(INSTALL_STRIP_FLAG) $(trainingtools) $(DESTDIR)$(bindir)'), (792, 'CLEANFILES += $(EXTRA_PROGRAMS)'), (793, ''), (920, 'EXTRA_PROGRAMS += $(trainingtools)')], 'deleted': [(676, 'endif'), (678, '# TODO: Add rule to generate svpaint from svpaint.cpp.'), (761, 'training: $(EXTRA_PROGRAMS) | $(PROGRAMS)'), (763, 'training-install: $(EXTRA_PROGRAMS)'), (766, '\t$(INSTALL) $(INSTALL_STRIP_FLAG) $(EXTRA_PROGRAMS) $(DESTDIR)$(bindir)'), (776, 'CLEANFILES += $(EXTRA_PROGRAMS)'), (777, ''), (911, 'EXTRA_PROGRAMS = $(trainingtools)')]}",yes
src\viewer\svpaint.cpp,src\svpaint.cpp,8c573e4cefaa011de2b303fa4c967ac943dc55a6,e589bfa58bb8303acf15403421299ef4088c2ce9,"autotools: Add rule for svpaint executable (#3873)

Move also its source code svpaint.cpp from src/viewer/ to src/,
so it is no longer included in libtesseract by the cmake build.

Signed-off-by: Stefan Weil <sw@weilnetz.de>",,"{'added': [], 'deleted': []}",yes
sw.cpp,sw.cpp,8c573e4cefaa011de2b303fa4c967ac943dc55a6,e589bfa58bb8303acf15403421299ef4088c2ce9,"autotools: Add rule for svpaint executable (#3873)

Move also its source code svpaint.cpp from src/viewer/ to src/,
so it is no longer included in libtesseract by the cmake build.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -21,7 +21,7 @@ void build(Solution &s)
 
         libtesseract -=
             ""src/tesseract.cpp"",
-            ""src/viewer/svpaint.cpp"";
+            ""src/svpaint.cpp"";
 
         libtesseract.Public += ""include""_idir;
         libtesseract.Protected +=
","{'added': [(24, '            ""src/svpaint.cpp"";')], 'deleted': [(24, '            ""src/viewer/svpaint.cpp"";')]}",yes
src\viewer\scrollview.cpp,src\viewer\scrollview.cpp,0107687a9b85e288456ef3ed026e1c2eb86db029,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,viewer: Use std::unique_ptr in event_table_ data structure,"@@ -60,8 +60,8 @@ static std::map<std::pair<ScrollView *, SVEventType>,
                 std::pair<SVSemaphore *, std::unique_ptr<SVEvent>>> waiting_for_events;
 static std::mutex *waiting_for_events_mu;
 
-SVEvent *SVEvent::copy() const {
-  auto *any = new SVEvent;
+std::unique_ptr<SVEvent> SVEvent::copy() const {
+  auto any = std::unique_ptr<SVEvent>(new SVEvent);
   any->command_id = command_id;
   any->counter = counter;
   any->parameter = new char[strlen(parameter) + 1];
@@ -319,12 +319,9 @@ void ScrollView::Initialize(const char *name, int x_pos, int y_pos, int x_size,
 
 /// Sits and waits for events on this window.
 void ScrollView::StartEventHandler() {
-  SVEvent *new_event;
-
   for (;;) {
     stream_->Flush();
     semaphore_->Wait();
-    new_event = nullptr;
     int serial = -1;
     int k = -1;
     mutex_.lock();
@@ -332,25 +329,22 @@ void ScrollView::StartEventHandler() {
 
     for (int i = 0; i < SVET_COUNT; i++) {
       if (event_table_[i] != nullptr && (serial < 0 || event_table_[i]->counter < serial)) {
-        new_event = event_table_[i];
         serial = event_table_[i]->counter;
         k = i;
       }
     }
     // If we didn't find anything we had an old alarm and just sleep again.
-    if (new_event != nullptr) {
-      event_table_[k] = nullptr;
+    if (k != -1) {
+      auto new_event = std::move(event_table_[k]);
       mutex_.unlock();
       if (event_handler_ != nullptr) {
-        event_handler_->Notify(new_event);
+        event_handler_->Notify(new_event.get());
       }
       if (new_event->type == SVET_DESTROY) {
         // Signal the destructor that it is safe to terminate.
         event_handler_ended_ = true;
-        delete new_event; // Delete the pointer after it has been processed.
         return;
       }
-      delete new_event; // Delete the pointer after it has been processed.
     } else {
       mutex_.unlock();
     }
@@ -382,9 +376,6 @@ ScrollView::~ScrollView() {
   }
   delete semaphore_;
   delete points_;
-  for (auto &i : event_table_) {
-    delete i;
-  }
 #endif // !GRAPHICS_DISABLED
 }
 
@@ -424,18 +415,15 @@ void ScrollView::Signal() {
 
 void ScrollView::SetEvent(const SVEvent *svevent) {
   // Copy event
-  SVEvent *any = svevent->copy();
-  SVEvent *specific = svevent->copy();
+  auto any = svevent->copy();
+  auto specific = svevent->copy();
   any->counter = specific->counter + 1;
 
   // Place both events into the queue.
   std::lock_guard<std::mutex> guard(mutex_);
-  // Delete the old objects..
-  delete event_table_[specific->type];
-  delete event_table_[SVET_ANY];
-  // ...and put the new ones in the table.
-  event_table_[specific->type] = specific;
-  event_table_[SVET_ANY] = any;
+
+  event_table_[specific->type] = std::move(specific);
+  event_table_[SVET_ANY] = std::move(any);
 }
 
 /// Block until an event of the given type is received.
","{'added': [(63, 'std::unique_ptr<SVEvent> SVEvent::copy() const {'), (64, '  auto any = std::unique_ptr<SVEvent>(new SVEvent);'), (337, '    if (k != -1) {'), (338, '      auto new_event = std::move(event_table_[k]);'), (341, '        event_handler_->Notify(new_event.get());'), (418, '  auto any = svevent->copy();'), (419, '  auto specific = svevent->copy();'), (424, ''), (425, '  event_table_[specific->type] = std::move(specific);'), (426, '  event_table_[SVET_ANY] = std::move(any);')], 'deleted': [(63, 'SVEvent *SVEvent::copy() const {'), (64, '  auto *any = new SVEvent;'), (322, '  SVEvent *new_event;'), (323, ''), (327, '    new_event = nullptr;'), (335, '        new_event = event_table_[i];'), (341, '    if (new_event != nullptr) {'), (342, '      event_table_[k] = nullptr;'), (345, '        event_handler_->Notify(new_event);'), (350, '        delete new_event; // Delete the pointer after it has been processed.'), (353, '      delete new_event; // Delete the pointer after it has been processed.'), (385, '  for (auto &i : event_table_) {'), (386, '    delete i;'), (387, '  }'), (427, '  SVEvent *any = svevent->copy();'), (428, '  SVEvent *specific = svevent->copy();'), (433, '  // Delete the old objects..'), (434, '  delete event_table_[specific->type];'), (435, '  delete event_table_[SVET_ANY];'), (436, '  // ...and put the new ones in the table.'), (437, '  event_table_[specific->type] = specific;'), (438, '  event_table_[SVET_ANY] = any;')]}",yes
src\viewer\scrollview.h,src\viewer\scrollview.h,0107687a9b85e288456ef3ed026e1c2eb86db029,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,viewer: Use std::unique_ptr in event_table_ data structure,"@@ -70,7 +70,7 @@ struct SVEvent {
   ~SVEvent() {
     delete[] parameter;
   }
-  SVEvent *copy() const;
+  std::unique_ptr<SVEvent> copy() const;
   SVEventType type = SVET_DESTROY; // What kind of event.
   ScrollView *window = nullptr;    // Window event relates to.
   char *parameter = nullptr;       // Any string that might have been passed as argument.
@@ -414,7 +414,7 @@ private:
   static SVNetwork *stream_;
 
   // Table of all the currently queued events.
-  SVEvent *event_table_[SVET_COUNT];
+  std::unique_ptr<SVEvent> event_table_[SVET_COUNT];
 
   // Mutex to access the event_table_ in a synchronized fashion.
   std::mutex mutex_;
","{'added': [(73, '  std::unique_ptr<SVEvent> copy() const;'), (417, '  std::unique_ptr<SVEvent> event_table_[SVET_COUNT];')], 'deleted': [(73, '  SVEvent *copy() const;'), (417, '  SVEvent *event_table_[SVET_COUNT];')]}",yes
src\classify\intproto.cpp,src\classify\intproto.cpp,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -1163,12 +1163,11 @@ void FillPPLinearBits(uint32_t ParamTable[NUM_PP_BUCKETS][WERDS_PER_PP_VECTOR],
 CLASS_ID Classify::GetClassToDebug(const char *Prompt, bool *adaptive_on, bool *pretrained_on,
                                    int *shape_id) {
   tprintf(""%s\n"", Prompt);
-  SVEvent *ev;
   SVEventType ev_type;
   int unichar_id = INVALID_UNICHAR_ID;
   // Wait until a click or popup event.
   do {
-    ev = IntMatchWindow->AwaitEvent(SVET_ANY);
+    auto ev = IntMatchWindow->AwaitEvent(SVET_ANY);
     ev_type = ev->type;
     if (ev_type == SVET_POPUP) {
       if (ev->command_id == IDA_SHAPE_INDEX) {
@@ -1214,7 +1213,6 @@ CLASS_ID Classify::GetClassToDebug(const char *Prompt, bool *adaptive_on, bool *
         }
       }
     }
-    delete ev;
   } while (ev_type != SVET_CLICK);
   return 0;
 } /* GetClassToDebug */
","{'added': [(1170, '    auto ev = IntMatchWindow->AwaitEvent(SVET_ANY);')], 'deleted': [(1166, '  SVEvent *ev;'), (1171, '    ev = IntMatchWindow->AwaitEvent(SVET_ANY);'), (1217, '    delete ev;')]}",yes
src\classify\shapeclassifier.cpp,src\classify\shapeclassifier.cpp,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -115,7 +115,6 @@ void ShapeClassifier::DebugDisplay(const TrainingSample &sample, Image page_pix,
   std::vector<UnicharRating> results;
   // Debug classification until the user quits.
   const UNICHARSET &unicharset = GetUnicharset();
-  SVEvent *ev;
   SVEventType ev_type;
   do {
     std::vector<ScrollView *> windows;
@@ -135,7 +134,7 @@ void ShapeClassifier::DebugDisplay(const TrainingSample &sample, Image page_pix,
     UNICHAR_ID old_unichar_id;
     do {
       old_unichar_id = unichar_id;
-      ev = debug_win->AwaitEvent(SVET_ANY);
+      auto ev = debug_win->AwaitEvent(SVET_ANY);
       ev_type = ev->type;
       if (ev_type == SVET_POPUP) {
         if (unicharset.contains_unichar(ev->parameter)) {
@@ -144,7 +143,6 @@ void ShapeClassifier::DebugDisplay(const TrainingSample &sample, Image page_pix,
           tprintf(""Char class '%s' not found in unicharset"", ev->parameter);
         }
       }
-      delete ev;
     } while (unichar_id == old_unichar_id && ev_type != SVET_CLICK && ev_type != SVET_DESTROY);
     for (auto window : windows) {
       delete window;
","{'added': [(137, '      auto ev = debug_win->AwaitEvent(SVET_ANY);')], 'deleted': [(118, '  SVEvent *ev;'), (138, '      ev = debug_win->AwaitEvent(SVET_ANY);'), (147, '      delete ev;')]}",yes
src\textord\ccnontextdetect.cpp,src\textord\ccnontextdetect.cpp,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -134,7 +134,7 @@ Image CCNonTextDetect::ComputeNonTextMask(bool debug, Image photo_map, TO_BLOCK
 #endif // !GRAPHICS_DISABLED
     pixWrite(""junkccphotomask.png"", pix, IFF_PNG);
 #ifndef GRAPHICS_DISABLED
-    delete win->AwaitEvent(SVET_DESTROY);
+    win->AwaitEvent(SVET_DESTROY);
     delete win;
 #endif // !GRAPHICS_DISABLED
   }
","{'added': [(137, '    win->AwaitEvent(SVET_DESTROY);')], 'deleted': [(137, '    delete win->AwaitEvent(SVET_DESTROY);')]}",yes
src\textord\colfind.cpp,src\textord\colfind.cpp,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -440,7 +440,7 @@ int ColumnFinder::FindBlocks(PageSegMode pageseg_mode, Image scaled_color, int s
           DisplayTabVectors(window);
         }
         if (window != nullptr && textord_tabfind_show_partitions > 1) {
-          delete window->AwaitEvent(SVET_DESTROY);
+          window->AwaitEvent(SVET_DESTROY);
         }
       }
     }
@@ -476,7 +476,7 @@ int ColumnFinder::FindBlocks(PageSegMode pageseg_mode, Image scaled_color, int s
     bool waiting = false;
     do {
       waiting = false;
-      SVEvent *event = blocks_win_->AwaitEvent(SVET_ANY);
+      auto event = blocks_win_->AwaitEvent(SVET_ANY);
       if (event->type == SVET_INPUT && event->parameter != nullptr) {
         if (*event->parameter == 'd') {
           result = -1;
@@ -488,7 +488,6 @@ int ColumnFinder::FindBlocks(PageSegMode pageseg_mode, Image scaled_color, int s
       } else {
         waiting = true;
       }
-      delete event;
     } while (waiting);
   }
 #endif // !GRAPHICS_DISABLED
","{'added': [(443, '          window->AwaitEvent(SVET_DESTROY);'), (479, '      auto event = blocks_win_->AwaitEvent(SVET_ANY);')], 'deleted': [(443, '          delete window->AwaitEvent(SVET_DESTROY);'), (479, '      SVEvent *event = blocks_win_->AwaitEvent(SVET_ANY);'), (491, '      delete event;')]}",yes
src\textord\strokewidth.cpp,src\textord\strokewidth.cpp,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -123,7 +123,7 @@ StrokeWidth::StrokeWidth(int gridsize, const ICOORD &bleft, const ICOORD &tright
 StrokeWidth::~StrokeWidth() {
 #ifndef GRAPHICS_DISABLED
   if (widths_win_ != nullptr) {
-    delete widths_win_->AwaitEvent(SVET_DESTROY);
+    widths_win_->AwaitEvent(SVET_DESTROY);
     if (textord_tabfind_only_strokewidths) {
       exit(0);
     }
","{'added': [(126, '    widths_win_->AwaitEvent(SVET_DESTROY);')], 'deleted': [(126, '    delete widths_win_->AwaitEvent(SVET_DESTROY);')]}",yes
src\training\common\mastertrainer.cpp,src\training\common\mastertrainer.cpp,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -785,9 +785,8 @@ void MasterTrainer::DisplaySamples(const char *unichar_str1, int cloud_font,
   ScrollView *s_window = CreateFeatureSpaceWindow(""Samples"", 100, 500);
   SVEventType ev_type;
   do {
-    SVEvent *ev;
     // Wait until a click or popup event.
-    ev = f_window->AwaitEvent(SVET_ANY);
+    auto ev = f_window->AwaitEvent(SVET_ANY);
     ev_type = ev->type;
     if (ev_type == SVET_CLICK) {
       int feature_index = feature_space.XYToFeatureIndex(ev->x, ev->y);
@@ -801,7 +800,6 @@ void MasterTrainer::DisplaySamples(const char *unichar_str1, int cloud_font,
         s_window->Update();
       }
     }
-    delete ev;
   } while (ev_type != SVET_DESTROY);
 }
 #endif // !GRAPHICS_DISABLED
","{'added': [(789, '    auto ev = f_window->AwaitEvent(SVET_ANY);')], 'deleted': [(788, '    SVEvent *ev;'), (790, '    ev = f_window->AwaitEvent(SVET_ANY);'), (804, '    delete ev;')]}",yes
src\training\unicharset\lstmtrainer.cpp,src\training\unicharset\lstmtrainer.cpp,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -891,7 +891,7 @@ Trainability LSTMTrainer::TrainOnLine(const ImageData *trainingdata,
   }
 #ifndef GRAPHICS_DISABLED
   if (debug_interval_ == 1 && debug_win_ != nullptr) {
-    delete debug_win_->AwaitEvent(SVET_CLICK);
+    debug_win_->AwaitEvent(SVET_CLICK);
   }
 #endif // !GRAPHICS_DISABLED
   // Roll the memory of past means.
","{'added': [(894, '    debug_win_->AwaitEvent(SVET_CLICK);')], 'deleted': [(894, '    delete debug_win_->AwaitEvent(SVET_CLICK);')]}",yes
src\viewer\scrollview.cpp,src\viewer\scrollview.cpp,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -56,8 +56,8 @@ struct SVPolyLineBuffer {
 static std::map<int, ScrollView *> svmap;
 static std::mutex *svmap_mu;
 // A map of all semaphores waiting for a specific event on a specific window.
-static std::map<std::pair<ScrollView *, SVEventType>, std::pair<SVSemaphore *, SVEvent *>>
-    waiting_for_events;
+static std::map<std::pair<ScrollView *, SVEventType>,
+                std::pair<SVSemaphore *, std::unique_ptr<SVEvent>>> waiting_for_events;
 static std::mutex *waiting_for_events_mu;
 
 SVEvent *SVEvent::copy() const {
@@ -158,13 +158,13 @@ void ScrollView::MessageReceiver() {
                                                                     SVET_ANY);
       waiting_for_events_mu->lock();
       if (waiting_for_events.count(awaiting_list) > 0) {
-        waiting_for_events[awaiting_list].second = cur.release();
+        waiting_for_events[awaiting_list].second = std::move(cur);
         waiting_for_events[awaiting_list].first->Signal();
       } else if (waiting_for_events.count(awaiting_list_any) > 0) {
-        waiting_for_events[awaiting_list_any].second = cur.release();
+        waiting_for_events[awaiting_list_any].second = std::move(cur);
         waiting_for_events[awaiting_list_any].first->Signal();
       } else if (waiting_for_events.count(awaiting_list_any_window) > 0) {
-        waiting_for_events[awaiting_list_any_window].second = cur.release();
+        waiting_for_events[awaiting_list_any_window].second = std::move(cur);
         waiting_for_events[awaiting_list_any_window].first->Signal();
       }
       waiting_for_events_mu->unlock();
@@ -367,8 +367,7 @@ ScrollView::~ScrollView() {
     // So the event handling thread can quit.
     SendMsg(""destroy()"");
 
-    SVEvent *sve = AwaitEvent(SVET_DESTROY);
-    delete sve;
+    AwaitEvent(SVET_DESTROY);
     svmap_mu->lock();
     svmap[window_id_] = nullptr;
     svmap_mu->unlock();
@@ -442,19 +441,19 @@ void ScrollView::SetEvent(const SVEvent *svevent) {
 /// Block until an event of the given type is received.
 /// Note: The calling function is responsible for deleting the returned
 /// SVEvent afterwards!
-SVEvent *ScrollView::AwaitEvent(SVEventType type) {
+std::unique_ptr<SVEvent> ScrollView::AwaitEvent(SVEventType type) {
   // Initialize the waiting semaphore.
   auto *sem = new SVSemaphore();
   std::pair<ScrollView *, SVEventType> ea(this, type);
   waiting_for_events_mu->lock();
-  waiting_for_events[ea] = std::pair<SVSemaphore *, SVEvent *>(sem, (SVEvent *)nullptr);
+  waiting_for_events[ea] = {sem, nullptr};
   waiting_for_events_mu->unlock();
   // Wait on it, but first flush.
   stream_->Flush();
   sem->Wait();
   // Process the event we got woken up for (its in waiting_for_events pair).
   waiting_for_events_mu->lock();
-  SVEvent *ret = waiting_for_events[ea].second;
+  auto ret = std::move(waiting_for_events[ea].second);
   waiting_for_events.erase(ea);
   delete sem;
   waiting_for_events_mu->unlock();
@@ -734,23 +733,19 @@ void ScrollView::Brush(Color color) {
 // Shows a modal Input Dialog which can return any kind of String
 char *ScrollView::ShowInputDialog(const char *msg) {
   SendMsg(""showInputDialog(\""%s\"")"", msg);
-  SVEvent *ev;
   // wait till an input event (all others are thrown away)
-  ev = AwaitEvent(SVET_INPUT);
+  auto ev = AwaitEvent(SVET_INPUT);
   char *p = new char[strlen(ev->parameter) + 1];
   strcpy(p, ev->parameter);
-  delete ev;
   return p;
 }
 
 // Shows a modal Yes/No Dialog which will return 'y' or 'n'
 int ScrollView::ShowYesNoDialog(const char *msg) {
   SendMsg(""showYesNoDialog(\""%s\"")"", msg);
-  SVEvent *ev;
   // Wait till an input event (all others are thrown away)
-  ev = AwaitEvent(SVET_INPUT);
+  auto ev = AwaitEvent(SVET_INPUT);
   int a = ev->parameter[0];
-  delete ev;
   return a;
 }
 
","{'added': [(59, 'static std::map<std::pair<ScrollView *, SVEventType>,'), (60, '                std::pair<SVSemaphore *, std::unique_ptr<SVEvent>>> waiting_for_events;'), (161, '        waiting_for_events[awaiting_list].second = std::move(cur);'), (164, '        waiting_for_events[awaiting_list_any].second = std::move(cur);'), (167, '        waiting_for_events[awaiting_list_any_window].second = std::move(cur);'), (370, '    AwaitEvent(SVET_DESTROY);'), (444, 'std::unique_ptr<SVEvent> ScrollView::AwaitEvent(SVEventType type) {'), (449, '  waiting_for_events[ea] = {sem, nullptr};'), (456, '  auto ret = std::move(waiting_for_events[ea].second);'), (737, '  auto ev = AwaitEvent(SVET_INPUT);'), (747, '  auto ev = AwaitEvent(SVET_INPUT);')], 'deleted': [(59, 'static std::map<std::pair<ScrollView *, SVEventType>, std::pair<SVSemaphore *, SVEvent *>>'), (60, '    waiting_for_events;'), (161, '        waiting_for_events[awaiting_list].second = cur.release();'), (164, '        waiting_for_events[awaiting_list_any].second = cur.release();'), (167, '        waiting_for_events[awaiting_list_any_window].second = cur.release();'), (370, '    SVEvent *sve = AwaitEvent(SVET_DESTROY);'), (371, '    delete sve;'), (445, 'SVEvent *ScrollView::AwaitEvent(SVEventType type) {'), (450, '  waiting_for_events[ea] = std::pair<SVSemaphore *, SVEvent *>(sem, (SVEvent *)nullptr);'), (457, '  SVEvent *ret = waiting_for_events[ea].second;'), (737, '  SVEvent *ev;'), (739, '  ev = AwaitEvent(SVET_INPUT);'), (742, '  delete ev;'), (749, '  SVEvent *ev;'), (751, '  ev = AwaitEvent(SVET_INPUT);'), (753, '  delete ev;')]}",yes
src\viewer\scrollview.h,src\viewer\scrollview.h,9a74c4ccad886ca5488fedff5b67a2fc509f2a76,4f831ff48967c6a8b7f927051bda1b432e105772,"viewer: Use std::unique_ptr in waiting_for_events data structure

The current usage of waiting_for_events is taking ownership of SVEvent
pointer from a unique_ptr. This is error prone as all code paths using
waiting_for_events need to ensure deletion. We fix it by using
unique_ptr in waiting_for_events and all dependent code paths.","@@ -36,6 +36,7 @@
 #include <tesseract/export.h>
 
 #include <cstdio>
+#include <memory>
 #include <mutex>
 
 namespace tesseract {
@@ -186,7 +187,7 @@ public:
   void AddEventHandler(SVEventHandler *listener);
 
   // Block until an event of the given type is received.
-  SVEvent *AwaitEvent(SVEventType type);
+  std::unique_ptr<SVEvent> AwaitEvent(SVEventType type);
 
   /*******************************************************************************
    * Getters and Setters
","{'added': [(39, '#include <memory>'), (190, '  std::unique_ptr<SVEvent> AwaitEvent(SVEventType type);')], 'deleted': [(189, '  SVEvent *AwaitEvent(SVEventType type);')]}",yes
src\viewer\scrollview.cpp,src\viewer\scrollview.cpp,4f831ff48967c6a8b7f927051bda1b432e105772,87dd04fe26ac255f7912644d27153b846ed2ebe2,"viewer: Fix double free caused by ScrollView::MessageReceiver

waiting_for_events takes ownership of the passed event which is later
deleted. Since we use unique_ptr::get() to acquire the pointer, we cause
double free: one free happens in the code path where the event from
waiting_for_events goes and the other free happens in unique_ptr
destructor.

The fix is to move ownership out of unique_ptr by unique_ptr::release().

Fixes: https://github.com/tesseract-ocr/tesseract/issues/3869
Fixes: 37b33749da56f5762346e16d0cc843460caacdb5","@@ -158,13 +158,13 @@ void ScrollView::MessageReceiver() {
                                                                     SVET_ANY);
       waiting_for_events_mu->lock();
       if (waiting_for_events.count(awaiting_list) > 0) {
-        waiting_for_events[awaiting_list].second = cur.get();
+        waiting_for_events[awaiting_list].second = cur.release();
         waiting_for_events[awaiting_list].first->Signal();
       } else if (waiting_for_events.count(awaiting_list_any) > 0) {
-        waiting_for_events[awaiting_list_any].second = cur.get();
+        waiting_for_events[awaiting_list_any].second = cur.release();
         waiting_for_events[awaiting_list_any].first->Signal();
       } else if (waiting_for_events.count(awaiting_list_any_window) > 0) {
-        waiting_for_events[awaiting_list_any_window].second = cur.get();
+        waiting_for_events[awaiting_list_any_window].second = cur.release();
         waiting_for_events[awaiting_list_any_window].first->Signal();
       }
       waiting_for_events_mu->unlock();
","{'added': [(161, '        waiting_for_events[awaiting_list].second = cur.release();'), (164, '        waiting_for_events[awaiting_list_any].second = cur.release();'), (167, '        waiting_for_events[awaiting_list_any_window].second = cur.release();')], 'deleted': [(161, '        waiting_for_events[awaiting_list].second = cur.get();'), (164, '        waiting_for_events[awaiting_list_any].second = cur.get();'), (167, '        waiting_for_events[awaiting_list_any_window].second = cur.get();')]}",yes
src\viewer\svutil.cpp,src\viewer\svutil.cpp,02e834000ce1d7871c90ed7b34c2cd7426eb6c88,87dd04fe26ac255f7912644d27153b846ed2ebe2,"Catch potential nullptr in SVNetwork::SVNetwork

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -297,8 +297,13 @@ SVNetwork::SVNetwork(const char *hostname, int port) {
 #  endif // _WIN32
   }
 
-  stream_ = socket(addr_info->ai_family, addr_info->ai_socktype,
-                   addr_info->ai_protocol);
+  if (addr_info == nullptr) {
+    // Mark stream_ as invalid.
+    stream_ = -1;
+  } else {
+    stream_ = socket(addr_info->ai_family, addr_info->ai_socktype,
+                     addr_info->ai_protocol);
+  }
 
   if (stream_ < 0) {
     std::cerr << ""Failed to open socket"" << std::endl;
","{'added': [(300, '  if (addr_info == nullptr) {'), (301, '    // Mark stream_ as invalid.'), (302, '    stream_ = -1;'), (303, '  } else {'), (304, '    stream_ = socket(addr_info->ai_family, addr_info->ai_socktype,'), (305, '                     addr_info->ai_protocol);'), (306, '  }')], 'deleted': [(300, '  stream_ = socket(addr_info->ai_family, addr_info->ai_socktype,'), (301, '                   addr_info->ai_protocol);')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,87dd04fe26ac255f7912644d27153b846ed2ebe2,ca9ab49758281a1248bea7f56257cec6f1d3fc87,[ci][sw] Disable nightly macos tests.,"@@ -47,13 +47,13 @@ jobs:
       continue-on-error: true
 
     - name: test-nightly
-      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && github.event.schedule=='0 0 * * *'
+      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1
       continue-on-error: true
 
-    # windows tests hang here for some reason, investigate
+    # windows and macos-12 tests hang here for some reason, investigate
     #- name: test
-      #if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'
+      #if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019' || matrix.os == 'macos-12'
       #run: ./sw test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       #continue-on-error: true
 
","{'added': [(50, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && matrix.os != 'macos-12' && github.event.schedule=='0 0 * * *'""), (54, '    # windows and macos-12 tests hang here for some reason, investigate'), (56, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019' || matrix.os == 'macos-12'"")], 'deleted': [(50, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && github.event.schedule=='0 0 * * *'""), (54, '    # windows tests hang here for some reason, investigate'), (56, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'"")]}",yes
.github\workflows\cmake.yml,.github\workflows\cmake.yml,ca9ab49758281a1248bea7f56257cec6f1d3fc87,677f5822f247ccb12b4e026265e88b959059fb59,"Update cmake.yml

clang-11 does not seem to work on macos","@@ -22,7 +22,7 @@ jobs:
           - { name: macos-10.15-gcc-11-cmake, os: macos-10.15, cxx: g++-11 } #installed
 
           - { name: macos-11-clang-12-cmake, os: macos-11, cxx: clang++ } # default
-          - { name: macos-11-clang-11-cmake, os: macos-11, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed
+          # - { name: macos-11-clang-11-cmake, os: macos-11, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed
           - { name: macos-11-gcc-9-cmake, os: macos-11, cxx: g++-9 } #installed
           - { name: macos-11-gcc-10-cmake, os: macos-11, cxx: g++-10 } #installed
           - { name: macos-11-gcc-11-cmake, os: macos-11, cxx: g++-11 } #installed
","{'added': [(25, ""          # - { name: macos-11-clang-11-cmake, os: macos-11, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed"")], 'deleted': [(25, ""          - { name: macos-11-clang-11-cmake, os: macos-11, cxx: '$(brew --prefix llvm)/bin/clang++' }  #installed"")]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,677f5822f247ccb12b4e026265e88b959059fb59,5ad5325a0aa8effc47ca033625b6a51682f82767,Update sw.yml,"@@ -13,7 +13,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macOS-latest]
+        os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macos-12]
 
     steps:
     - uses: actions/checkout@v2
","{'added': [(16, '        os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macos-12]')], 'deleted': [(16, '        os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macOS-latest]')]}",yes
ChangeLog,ChangeLog,5ad5325a0aa8effc47ca033625b6a51682f82767,b8b6c158a7f356971d7ffc76b6d688606e05690d,"Create new release 5.2.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,3 +1,22 @@
+2022-07-06 - V5.2.0
+  * Improvements and fixes for continuous integration,
+    autoconf and cmake builds.
+  * Set /Os for some 32 bit MS compilers (fixes #3769).
+  * Improve comments and other documentation.
+  * Add initial support for Intel AVX512F.
+  * Fix for very large PDF files on 32 bit hosts (fixes #3805).
+  * Fix NEON detection on FreeBSD.
+  * Fix regression with UZN files (fixes #3837).
+  * Fix calling delete[] for memory allocated by malloc in C API.
+  * Add an API function to init tesseract with traineddata from memory
+    (fixes #3691).
+  * Replace direct access to Leptonica internal data structures by
+    function calls and support latest releases of Leptonica.
+  * Replace std::regex by std::string functions (fixes issue #3830).
+  * Use compiled-in TESSDATA_PREFIX also on Windows (fixes #3767).
+  * Add new parameter 'invert_threshold', change the default threshold
+    from 0.5 to 0.7 and mark parameter 'tessedit_do_invert' as deprecated.
+
 2022-03-01 - V5.1.0
   * Handle image and line regions in output formats ALTO, hOCR and text.
   * New parameter curl_timeout for curl_easy_setop.
@@ -200,7 +219,7 @@
   * Removed old/dead serialise/deserialze methods on *LISTIZED classes.
   * Total rewrite of DENORM to better encapsulate operation and make
     for potential to extract features from images.
-  * Thread-safety! Moved all critical globals and statics to members of the appropriate class. Tesseract is now thread-safe (multiple instances can be used in parallel in multiple threads.) with the minor exception that some control parameters are still global and affect all threads.
+  * Thread-safety! Moved all critical global and static variables to members of the appropriate class. Tesseract is now thread-safe (multiple instances can be used in parallel in multiple threads.) with the minor exception that some control parameters are still global and affect all threads.
   * Added Cube, a new recognizer for Arabic. Cube can also be used in combination with normal Tesseract for other languages with an improvement in accuracy at the cost of (much) lower speed. *There is no training module for Cube yet.*
   * `OcrEngineMode` in `Init` replaces `AccuracyVSpeed` to control cube.
   * Greatly improved segmentation search with consequent accuracy and speed improvements, especially for Chinese.
","{'added': [(1, '2022-07-06 - V5.2.0'), (2, '  * Improvements and fixes for continuous integration,'), (3, '    autoconf and cmake builds.'), (4, '  * Set /Os for some 32 bit MS compilers (fixes #3769).'), (5, '  * Improve comments and other documentation.'), (6, '  * Add initial support for Intel AVX512F.'), (7, '  * Fix for very large PDF files on 32 bit hosts (fixes #3805).'), (8, '  * Fix NEON detection on FreeBSD.'), (9, '  * Fix regression with UZN files (fixes #3837).'), (10, '  * Fix calling delete[] for memory allocated by malloc in C API.'), (11, '  * Add an API function to init tesseract with traineddata from memory'), (12, '    (fixes #3691).'), (13, '  * Replace direct access to Leptonica internal data structures by'), (14, '    function calls and support latest releases of Leptonica.'), (15, '  * Replace std::regex by std::string functions (fixes issue #3830).'), (16, '  * Use compiled-in TESSDATA_PREFIX also on Windows (fixes #3767).'), (17, ""  * Add new parameter 'invert_threshold', change the default threshold""), (18, ""    from 0.5 to 0.7 and mark parameter 'tessedit_do_invert' as deprecated.""), (19, ''), (222, '  * Thread-safety! Moved all critical global and static variables to members of the appropriate class. Tesseract is now thread-safe (multiple instances can be used in parallel in multiple threads.) with the minor exception that some control parameters are still global and affect all threads.')], 'deleted': [(203, '  * Thread-safety! Moved all critical globals and statics to members of the appropriate class. Tesseract is now thread-safe (multiple instances can be used in parallel in multiple threads.) with the minor exception that some control parameters are still global and affect all threads.')]}",yes
VERSION,VERSION,5ad5325a0aa8effc47ca033625b6a51682f82767,b8b6c158a7f356971d7ffc76b6d688606e05690d,"Create new release 5.2.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1 +1 @@
-5.1.0
+5.2.0
","{'added': [(1, '5.2.0')], 'deleted': [(1, '5.1.0')]}",yes
configure.ac,configure.ac,5ad5325a0aa8effc47ca033625b6a51682f82767,b8b6c158a7f356971d7ffc76b6d688606e05690d,"Create new release 5.2.0

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -29,7 +29,7 @@ AM_INIT_AUTOMAKE([foreign subdir-objects nostdinc])
 # Define date of package, etc. Could be useful in auto-generated
 # documentation.
 PACKAGE_YEAR=2022
-PACKAGE_DATE=""03/01""
+PACKAGE_DATE=""07/06""
 
 abs_top_srcdir=`AS_DIRNAME([$0])`
 
","{'added': [(32, 'PACKAGE_DATE=""07/06""')], 'deleted': [(32, 'PACKAGE_DATE=""03/01""')]}",yes
src\ccmain\tesseractclass.cpp,src\ccmain\tesseractclass.cpp,b8b6c158a7f356971d7ffc76b6d688606e05690d,96861b58aebd4cf5d0c3aa517ad98541db8a3f50,"Mark parameter 'tessedit_do_invert' as deprecated

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -63,7 +63,10 @@ Tesseract::Tesseract()
                   ""Break input into lines and remap boxes if present"", this->params())
     , BOOL_MEMBER(tessedit_dump_pageseg_images, false,
                   ""Dump intermediate images made during page segmentation"", this->params())
-    , BOOL_MEMBER(tessedit_do_invert, true, ""Try inverted line image if necessary"",
+    // TODO: remove deprecated tessedit_do_invert in release 6.
+    , BOOL_MEMBER(tessedit_do_invert, true,
+                  ""Try inverted line image if necessary (deprecated, will be ""
+                  ""removed in release 6, use the 'invert_threshold' parameter instead)"",
                   this->params())
     , double_MEMBER(invert_threshold, 0.7,
                     ""For lines with a mean confidence below this value, OCR is also tried with an inverted image"",
","{'added': [(66, '    // TODO: remove deprecated tessedit_do_invert in release 6.'), (67, '    , BOOL_MEMBER(tessedit_do_invert, true,'), (68, '                  ""Try inverted line image if necessary (deprecated, will be ""'), (69, '                  ""removed in release 6, use the \'invert_threshold\' parameter instead)"",')], 'deleted': [(66, '    , BOOL_MEMBER(tessedit_do_invert, true, ""Try inverted line image if necessary"",')]}",yes
src\ccmain\tesseractclass.h,src\ccmain\tesseractclass.h,b8b6c158a7f356971d7ffc76b6d688606e05690d,96861b58aebd4cf5d0c3aa517ad98541db8a3f50,"Mark parameter 'tessedit_do_invert' as deprecated

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -755,6 +755,7 @@ public:
   BOOL_VAR_H(tessedit_make_boxes_from_boxes);
   BOOL_VAR_H(tessedit_train_line_recognizer);
   BOOL_VAR_H(tessedit_dump_pageseg_images);
+  // TODO: remove deprecated tessedit_do_invert in release 6.
   BOOL_VAR_H(tessedit_do_invert);
   double_VAR_H(invert_threshold);
   INT_VAR_H(tessedit_pageseg_mode);
","{'added': [(758, '  // TODO: remove deprecated tessedit_do_invert in release 6.')], 'deleted': []}",yes
src\ccmain\linerec.cpp,src\ccmain\linerec.cpp,96861b58aebd4cf5d0c3aa517ad98541db8a3f50,0df584e65ddd9a7d4be48074de82c157d5e9d7ba,"Add new parameter for invert_threshold (#3852)

Change default value from 0.5 to 0.7.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -250,7 +250,8 @@ void Tesseract::LSTMRecognizeWord(const BLOCK &block, ROW *row, WERD_RES *word,
   }
 
   bool do_invert = tessedit_do_invert;
-  lstm_recognizer_->RecognizeLine(*im_data, do_invert, classify_debug_level > 0,
+  float threshold = do_invert ? double(invert_threshold) : 0.0f;
+  lstm_recognizer_->RecognizeLine(*im_data, threshold, classify_debug_level > 0,
                                   kWorstDictCertainty / kCertaintyScale, word_box, words,
                                   lstm_choice_mode, lstm_choice_iterations);
   delete im_data;
","{'added': [(253, '  float threshold = do_invert ? double(invert_threshold) : 0.0f;'), (254, '  lstm_recognizer_->RecognizeLine(*im_data, threshold, classify_debug_level > 0,')], 'deleted': [(253, '  lstm_recognizer_->RecognizeLine(*im_data, do_invert, classify_debug_level > 0,')]}",yes
src\ccmain\tesseractclass.cpp,src\ccmain\tesseractclass.cpp,96861b58aebd4cf5d0c3aa517ad98541db8a3f50,0df584e65ddd9a7d4be48074de82c157d5e9d7ba,"Add new parameter for invert_threshold (#3852)

Change default value from 0.5 to 0.7.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -63,8 +63,11 @@ Tesseract::Tesseract()
                   ""Break input into lines and remap boxes if present"", this->params())
     , BOOL_MEMBER(tessedit_dump_pageseg_images, false,
                   ""Dump intermediate images made during page segmentation"", this->params())
-    , BOOL_MEMBER(tessedit_do_invert, true, ""Try inverting the image in `LSTMRecognizeWord`"",
+    , BOOL_MEMBER(tessedit_do_invert, true, ""Try inverted line image if necessary"",
                   this->params())
+    , double_MEMBER(invert_threshold, 0.7,
+                    ""For lines with a mean confidence below this value, OCR is also tried with an inverted image"",
+                    this->params())
     ,
     // The default for pageseg_mode is the old behaviour, so as not to
     // upset anything that relies on that.
","{'added': [(66, '    , BOOL_MEMBER(tessedit_do_invert, true, ""Try inverted line image if necessary"",'), (68, '    , double_MEMBER(invert_threshold, 0.7,'), (69, '                    ""For lines with a mean confidence below this value, OCR is also tried with an inverted image"",'), (70, '                    this->params())')], 'deleted': [(66, '    , BOOL_MEMBER(tessedit_do_invert, true, ""Try inverting the image in `LSTMRecognizeWord`"",')]}",yes
src\ccmain\tesseractclass.h,src\ccmain\tesseractclass.h,96861b58aebd4cf5d0c3aa517ad98541db8a3f50,0df584e65ddd9a7d4be48074de82c157d5e9d7ba,"Add new parameter for invert_threshold (#3852)

Change default value from 0.5 to 0.7.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -756,6 +756,7 @@ public:
   BOOL_VAR_H(tessedit_train_line_recognizer);
   BOOL_VAR_H(tessedit_dump_pageseg_images);
   BOOL_VAR_H(tessedit_do_invert);
+  double_VAR_H(invert_threshold);
   INT_VAR_H(tessedit_pageseg_mode);
   INT_VAR_H(thresholding_method);
   BOOL_VAR_H(thresholding_debug);
","{'added': [(759, '  double_VAR_H(invert_threshold);')], 'deleted': []}",yes
src\lstm\lstmrecognizer.cpp,src\lstm\lstmrecognizer.cpp,96861b58aebd4cf5d0c3aa517ad98541db8a3f50,0df584e65ddd9a7d4be48074de82c157d5e9d7ba,"Add new parameter for invert_threshold (#3852)

Change default value from 0.5 to 0.7.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -244,14 +244,15 @@ bool LSTMRecognizer::LoadDictionary(const ParamsVectors *params, const std::stri
 
 // Recognizes the line image, contained within image_data, returning the
 // ratings matrix and matching box_word for each WERD_RES in the output.
-void LSTMRecognizer::RecognizeLine(const ImageData &image_data, bool invert, bool debug,
+void LSTMRecognizer::RecognizeLine(const ImageData &image_data,
+                                   float invert_threshold, bool debug,
                                    double worst_dict_cert, const TBOX &line_box,
                                    PointerVector<WERD_RES> *words, int lstm_choice_mode,
                                    int lstm_choice_amount) {
   NetworkIO outputs;
   float scale_factor;
   NetworkIO inputs;
-  if (!RecognizeLine(image_data, invert, debug, false, false, &scale_factor, &inputs, &outputs)) {
+  if (!RecognizeLine(image_data, invert_threshold, debug, false, false, &scale_factor, &inputs, &outputs)) {
     return;
   }
   if (search_ == nullptr) {
@@ -317,7 +318,8 @@ void LSTMRecognizer::OutputStats(const NetworkIO &outputs, float *min_output, fl
 
 // Recognizes the image_data, returning the labels,
 // scores, and corresponding pairs of start, end x-coords in coords.
-bool LSTMRecognizer::RecognizeLine(const ImageData &image_data, bool invert, bool debug,
+bool LSTMRecognizer::RecognizeLine(const ImageData &image_data,
+                                   float invert_threshold, bool debug,
                                    bool re_invert, bool upside_down, float *scale_factor,
                                    NetworkIO *inputs, NetworkIO *outputs) {
   // This ensures consistent recognition results.
@@ -345,10 +347,10 @@ bool LSTMRecognizer::RecognizeLine(const ImageData &image_data, bool invert, boo
   Input::PreparePixInput(network_->InputShape(), pix, &randomizer_, inputs);
   network_->Forward(debug, *inputs, nullptr, &scratch_space_, outputs);
   // Check for auto inversion.
-  if (invert) {
+  if (invert_threshold > 0.0f) {
     float pos_min, pos_mean, pos_sd;
     OutputStats(*outputs, &pos_min, &pos_mean, &pos_sd);
-    if (pos_mean < 0.5f) {
+    if (pos_mean < invert_threshold) {
       // Run again inverted and see if it is any better.
       NetworkIO inv_inputs, inv_outputs;
       inv_inputs.set_int_mode(IsIntMode());
","{'added': [(247, 'void LSTMRecognizer::RecognizeLine(const ImageData &image_data,'), (248, '                                   float invert_threshold, bool debug,'), (255, '  if (!RecognizeLine(image_data, invert_threshold, debug, false, false, &scale_factor, &inputs, &outputs)) {'), (321, 'bool LSTMRecognizer::RecognizeLine(const ImageData &image_data,'), (322, '                                   float invert_threshold, bool debug,'), (350, '  if (invert_threshold > 0.0f) {'), (353, '    if (pos_mean < invert_threshold) {')], 'deleted': [(247, 'void LSTMRecognizer::RecognizeLine(const ImageData &image_data, bool invert, bool debug,'), (254, '  if (!RecognizeLine(image_data, invert, debug, false, false, &scale_factor, &inputs, &outputs)) {'), (320, 'bool LSTMRecognizer::RecognizeLine(const ImageData &image_data, bool invert, bool debug,'), (348, '  if (invert) {'), (351, '    if (pos_mean < 0.5f) {')]}",yes
src\lstm\lstmrecognizer.h,src\lstm\lstmrecognizer.h,96861b58aebd4cf5d0c3aa517ad98541db8a3f50,0df584e65ddd9a7d4be48074de82c157d5e9d7ba,"Add new parameter for invert_threshold (#3852)

Change default value from 0.5 to 0.7.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -244,11 +244,12 @@ public:
 
   // Recognizes the line image, contained within image_data, returning the
   // recognized tesseract WERD_RES for the words.
-  // If invert, tries inverted as well if the normal interpretation doesn't
-  // produce a good enough result. The line_box is used for computing the
+  // If invert_threshold > 0, tries inverted as well if the normal
+  // interpretation doesn't produce a result which at least reaches
+  // that threshold. The line_box is used for computing the
   // box_word in the output words. worst_dict_cert is the worst certainty that
   // will be used in a dictionary word.
-  void RecognizeLine(const ImageData &image_data, bool invert, bool debug, double worst_dict_cert,
+  void RecognizeLine(const ImageData &image_data, float invert_threshold, bool debug, double worst_dict_cert,
                      const TBOX &line_box, PointerVector<WERD_RES> *words, int lstm_choice_mode = 0,
                      int lstm_choice_amount = 5);
 
@@ -263,7 +264,7 @@ public:
   // improve the results. This ensures that outputs contains the correct
   // forward outputs for the best photometric interpretation.
   // inputs is filled with the used inputs to the network.
-  bool RecognizeLine(const ImageData &image_data, bool invert, bool debug, bool re_invert,
+  bool RecognizeLine(const ImageData &image_data, float invert_threshold, bool debug, bool re_invert,
                      bool upside_down, float *scale_factor, NetworkIO *inputs, NetworkIO *outputs);
 
   // Converts an array of labels to utf-8, whether or not the labels are
","{'added': [(247, '  // If invert_threshold > 0, tries inverted as well if the normal'), (248, ""  // interpretation doesn't produce a result which at least reaches""), (249, '  // that threshold. The line_box is used for computing the'), (252, '  void RecognizeLine(const ImageData &image_data, float invert_threshold, bool debug, double worst_dict_cert,'), (267, '  bool RecognizeLine(const ImageData &image_data, float invert_threshold, bool debug, bool re_invert,')], 'deleted': [(247, ""  // If invert, tries inverted as well if the normal interpretation doesn't""), (248, '  // produce a good enough result. The line_box is used for computing the'), (251, '  void RecognizeLine(const ImageData &image_data, bool invert, bool debug, double worst_dict_cert,'), (266, '  bool RecognizeLine(const ImageData &image_data, bool invert, bool debug, bool re_invert,')]}",yes
src\training\unicharset\lstmtrainer.cpp,src\training\unicharset\lstmtrainer.cpp,96861b58aebd4cf5d0c3aa517ad98541db8a3f50,0df584e65ddd9a7d4be48074de82c157d5e9d7ba,"Add new parameter for invert_threshold (#3852)

Change default value from 0.5 to 0.7.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -948,7 +948,7 @@ Trainability LSTMTrainer::PrepareForBackward(const ImageData *trainingdata,
   float image_scale;
   NetworkIO inputs;
   bool invert = trainingdata->boxes().empty();
-  if (!RecognizeLine(*trainingdata, invert, debug, invert, upside_down,
+  if (!RecognizeLine(*trainingdata, invert ? 0.5f : 0.0f, debug, invert, upside_down,
                      &image_scale, &inputs, fwd_outputs)) {
     tprintf(""Image %s not trainable\n"", trainingdata->imagefilename().c_str());
     return UNENCODABLE;
","{'added': [(951, '  if (!RecognizeLine(*trainingdata, invert ? 0.5f : 0.0f, debug, invert, upside_down,')], 'deleted': [(951, '  if (!RecognizeLine(*trainingdata, invert, debug, invert, upside_down,')]}",yes
src\api\capi.cpp,src\api\capi.cpp,0df584e65ddd9a7d4be48074de82c157d5e9d7ba,38c8c76c3405cfdd4f55fb93204af3e6eeacbf04,capi: Fix calling delete[] for memory allocated by malloc,"@@ -17,16 +17,30 @@
 
 #include <tesseract/capi.h>
 
-#include <cstring> // for strdup
-
 const char *TessVersion() {
   return TessBaseAPI::Version();
 }
 
+static char *MakeText(const std::string& srcText) {
+  auto *text = new char[srcText.size() + 1];
+  srcText.copy(text, srcText.size());
+  text[srcText.size()] = 0;
+  return text;
+}
+
 void TessDeleteText(const char *text) {
   delete[] text;
 }
 
+static char **MakeTextArray(const std::vector<std::string>& srcArr) {
+  auto **arr = new char *[srcArr.size() + 1];
+  for (size_t i = 0; i < srcArr.size(); ++i) {
+    arr[i] = MakeText(srcArr[i]);
+  }
+  arr[srcArr.size()] = nullptr;
+  return arr;
+}
+
 void TessDeleteTextArray(char **arr) {
   for (char **pos = arr; *pos != nullptr; ++pos) {
     delete[] * pos;
@@ -251,23 +265,13 @@ const char *TessBaseAPIGetInitLanguagesAsString(const TessBaseAPI *handle) {
 char **TessBaseAPIGetLoadedLanguagesAsVector(const TessBaseAPI *handle) {
   std::vector<std::string> languages;
   handle->GetLoadedLanguagesAsVector(&languages);
-  char **arr = new char *[languages.size() + 1];
-  for (auto &language : languages) {
-    arr[&language - &languages[0]] = strdup(language.c_str());
-  }
-  arr[languages.size()] = nullptr;
-  return arr;
+  return MakeTextArray(languages);
 }
 
 char **TessBaseAPIGetAvailableLanguagesAsVector(const TessBaseAPI *handle) {
   std::vector<std::string> languages;
   handle->GetAvailableLanguagesAsVector(&languages);
-  char **arr = new char *[languages.size() + 1];
-  for (auto &language : languages) {
-    arr[&language - &languages[0]] = strdup(language.c_str());
-  }
-  arr[languages.size()] = nullptr;
-  return arr;
+  return MakeTextArray(languages);
 }
 
 void TessBaseAPIInitForAnalysePage(TessBaseAPI *handle) {
","{'added': [(24, 'static char *MakeText(const std::string& srcText) {'), (25, '  auto *text = new char[srcText.size() + 1];'), (26, '  srcText.copy(text, srcText.size());'), (27, '  text[srcText.size()] = 0;'), (28, '  return text;'), (29, '}'), (30, ''), (35, 'static char **MakeTextArray(const std::vector<std::string>& srcArr) {'), (36, '  auto **arr = new char *[srcArr.size() + 1];'), (37, '  for (size_t i = 0; i < srcArr.size(); ++i) {'), (38, '    arr[i] = MakeText(srcArr[i]);'), (39, '  }'), (40, '  arr[srcArr.size()] = nullptr;'), (41, '  return arr;'), (42, '}'), (43, ''), (268, '  return MakeTextArray(languages);'), (274, '  return MakeTextArray(languages);')], 'deleted': [(20, '#include <cstring> // for strdup'), (21, ''), (254, '  char **arr = new char *[languages.size() + 1];'), (255, '  for (auto &language : languages) {'), (256, '    arr[&language - &languages[0]] = strdup(language.c_str());'), (257, '  }'), (258, '  arr[languages.size()] = nullptr;'), (259, '  return arr;'), (265, '  char **arr = new char *[languages.size() + 1];'), (266, '  for (auto &language : languages) {'), (267, '    arr[&language - &languages[0]] = strdup(language.c_str());'), (268, '  }'), (269, '  arr[languages.size()] = nullptr;'), (270, '  return arr;')]}",yes
src\ccmain\thresholder.cpp,src\ccmain\thresholder.cpp,18fb5aa977d5fe0e72998bb9d6215ba4ef5a868a,27b1827ccde6014df1231e1cec6263ee108066e9,fix issue #3092 - skip removing colormap,"@@ -170,16 +170,7 @@ void ImageThresholder::SetImage(const Image pix) {
   // Convert the image as necessary so it is one of binary, plain RGB, or
   // 8 bit with no colormap. Guarantee that we always end up with our own copy,
   // not just a clone of the input.
-  if (pixGetColormap(src)) {
-    Image tmp = pixRemoveColormap(src, REMOVE_CMAP_BASED_ON_SRC);
-    depth = pixGetDepth(tmp);
-    if (depth > 1 && depth < 8) {
-      pix_ = pixConvertTo8(tmp, false);
-      tmp.destroy();
-    } else {
-      pix_ = tmp;
-    }
-  } else if (depth > 1 && depth < 8) {
+  if (depth > 1 && depth < 8) {
     pix_ = pixConvertTo8(src, false);
   } else {
     pix_ = src.copy();
","{'added': [(173, '  if (depth > 1 && depth < 8) {')], 'deleted': [(173, '  if (pixGetColormap(src)) {'), (174, '    Image tmp = pixRemoveColormap(src, REMOVE_CMAP_BASED_ON_SRC);'), (175, '    depth = pixGetDepth(tmp);'), (176, '    if (depth > 1 && depth < 8) {'), (177, '      pix_ = pixConvertTo8(tmp, false);'), (178, '      tmp.destroy();'), (179, '    } else {'), (180, '      pix_ = tmp;'), (181, '    }'), (182, '  } else if (depth > 1 && depth < 8) {')]}",yes
src\training\pango\boxchar.h,src\training\pango\boxchar.h,27b1827ccde6014df1231e1cec6263ee108066e9,70109f1e8fc4926b9ab2e11b4d881c1e1f9a8274,"Update code to support Leptonica 1.83.0 and newer

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -5,7 +5,6 @@
  *              is rotated for degradation.  Also includes routines to output
  *              the character-tagged boxes to a boxfile.
  * Author:      Ray Smith
- * Created:     Mon Nov 18 2013
  *
  * (C) Copyright 2013, Google Inc.
  * Licensed under the Apache License, Version 2.0 (the ""License"");
@@ -26,11 +25,12 @@
 #include <string>
 #include <vector>
 
-#include <allheaders.h> // from Leptonica
+#include <allheaders.h>   // for Leptonica API
+#if (LIBLEPT_MAJOR_VERSION == 1 && LIBLEPT_MINOR_VERSION >= 83) || LIBLEPT_MAJOR_VERSION > 1
+#include <pix_internal.h> // for fast access to Box geometry
+#endif
 #include <tesseract/export.h>
 
-struct Box;
-
 namespace tesseract {
 
 class BoxChar {
","{'added': [(28, '#include <allheaders.h>   // for Leptonica API'), (29, '#if (LIBLEPT_MAJOR_VERSION == 1 && LIBLEPT_MINOR_VERSION >= 83) || LIBLEPT_MAJOR_VERSION > 1'), (30, '#include <pix_internal.h> // for fast access to Box geometry'), (31, '#endif')], 'deleted': [(8, ' * Created:     Mon Nov 18 2013'), (29, '#include <allheaders.h> // from Leptonica'), (32, 'struct Box;'), (33, '')]}",yes
src\training\degradeimage.cpp,src\training\degradeimage.cpp,70109f1e8fc4926b9ab2e11b4d881c1e1f9a8274,71b045cf2012e0f80cf5ad86f9753e5a61d51215,"Use Leptonica API to access internals of Pix

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -166,7 +166,7 @@ Image DegradeImage(Image input, int exposure, TRand *randomizer, float *rotation
       }
       SET_DATA_BYTE(data, x, pixel);
     }
-    data += input->wpl;
+    data += pixGetWpl(input);
   }
   return input;
 }
","{'added': [(169, '    data += pixGetWpl(input);')], 'deleted': [(169, '    data += input->wpl;')]}",yes
src\training\pango\stringrenderer.cpp,src\training\pango\stringrenderer.cpp,70109f1e8fc4926b9ab2e11b4d881c1e1f9a8274,71b045cf2012e0f80cf5ad86f9753e5a61d51215,"Use Leptonica API to access internals of Pix

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -85,7 +85,7 @@ static Image CairoARGB32ToPixFormat(cairo_surface_t *surface) {
   int byte_stride = cairo_image_surface_get_stride(surface);
 
   for (int i = 0; i < height; ++i) {
-    memcpy(reinterpret_cast<unsigned char *>(pix->data + i * pix->wpl) + 1,
+    memcpy(reinterpret_cast<unsigned char *>(pixGetData(pix) + i * pixGetWpl(pix)) + 1,
            cairo_image_surface_get_data(surface) + i * byte_stride,
            byte_stride - ((i == height - 1) ? 1 : 0));
   }
","{'added': [(88, '    memcpy(reinterpret_cast<unsigned char *>(pixGetData(pix) + i * pixGetWpl(pix)) + 1,')], 'deleted': [(88, '    memcpy(reinterpret_cast<unsigned char *>(pix->data + i * pix->wpl) + 1,')]}",yes
include\tesseract\capi.h,include\tesseract\capi.h,71b045cf2012e0f80cf5ad86f9753e5a61d51215,cc06ae456ee9c94b5dea8636df8b1faf34a2e01d,"C API: Add a function to init tesseract with traineddata from memory (#3780)

Fixes #3691.

* retrigger checks","@@ -231,6 +231,12 @@ TESS_API int TessBaseAPIInit4(TessBaseAPI *handle, const char *datapath,
                               char **vars_values, size_t vars_vec_size,
                               BOOL set_only_non_debug_params);
 
+TESS_API int TessBaseAPIInit5(TessBaseAPI *handle, const char *data, int data_size,
+                              const char *language, TessOcrEngineMode mode,
+                              char **configs, int configs_size, char **vars_vec,
+                              char **vars_values, size_t vars_vec_size,
+                              BOOL set_only_non_debug_params);
+
 TESS_API const char *TessBaseAPIGetInitLanguagesAsString(
     const TessBaseAPI *handle);
 TESS_API char **TessBaseAPIGetLoadedLanguagesAsVector(
","{'added': [(234, 'TESS_API int TessBaseAPIInit5(TessBaseAPI *handle, const char *data, int data_size,'), (235, '                              const char *language, TessOcrEngineMode mode,'), (236, '                              char **configs, int configs_size, char **vars_vec,'), (237, '                              char **vars_values, size_t vars_vec_size,'), (238, '                              BOOL set_only_non_debug_params);'), (239, '')], 'deleted': []}",yes
src\api\capi.cpp,src\api\capi.cpp,71b045cf2012e0f80cf5ad86f9753e5a61d51215,cc06ae456ee9c94b5dea8636df8b1faf34a2e01d,"C API: Add a function to init tesseract with traineddata from memory (#3780)

Fixes #3691.

* retrigger checks","@@ -228,6 +228,22 @@ int TessBaseAPIInit3(TessBaseAPI *handle, const char *datapath, const char *lang
   return handle->Init(datapath, language);
 }
 
+int TessBaseAPIInit5(TessBaseAPI *handle, const char *data, int data_size, const char *language,
+                     TessOcrEngineMode mode, char **configs, int configs_size, char **vars_vec,
+                     char **vars_values, size_t vars_vec_size, BOOL set_only_non_debug_params) {
+  std::vector<std::string> varNames;
+  std::vector<std::string> varValues;
+  if (vars_vec != nullptr && vars_values != nullptr) {
+    for (size_t i = 0; i < vars_vec_size; i++) {
+      varNames.emplace_back(vars_vec[i]);
+      varValues.emplace_back(vars_values[i]);
+    }
+  }
+
+  return handle->Init(data, data_size, language, mode, configs, configs_size, &varNames, &varValues,
+                      set_only_non_debug_params != 0, nullptr);
+}
+
 const char *TessBaseAPIGetInitLanguagesAsString(const TessBaseAPI *handle) {
   return handle->GetInitLanguagesAsString();
 }
","{'added': [(231, 'int TessBaseAPIInit5(TessBaseAPI *handle, const char *data, int data_size, const char *language,'), (232, '                     TessOcrEngineMode mode, char **configs, int configs_size, char **vars_vec,'), (233, '                     char **vars_values, size_t vars_vec_size, BOOL set_only_non_debug_params) {'), (234, '  std::vector<std::string> varNames;'), (235, '  std::vector<std::string> varValues;'), (236, '  if (vars_vec != nullptr && vars_values != nullptr) {'), (237, '    for (size_t i = 0; i < vars_vec_size; i++) {'), (238, '      varNames.emplace_back(vars_vec[i]);'), (239, '      varValues.emplace_back(vars_values[i]);'), (240, '    }'), (241, '  }'), (242, ''), (243, '  return handle->Init(data, data_size, language, mode, configs, configs_size, &varNames, &varValues,'), (244, '                      set_only_non_debug_params != 0, nullptr);'), (245, '}'), (246, '')], 'deleted': []}",yes
README.md,README.md,cc06ae456ee9c94b5dea8636df8b1faf34a2e01d,b5878c23a70a6709e722aea5a3304a4c5c87313b,Update README.md [skip ci],"@@ -41,9 +41,9 @@ and GitHub's log of [contributors](https://github.com/tesseract-ocr/tesseract/gr
 
 Tesseract has **unicode (UTF-8) support**, and can **recognize more than 100 languages** ""out of the box"".
 
-Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO (the last one - since version 4.1.0).
+Tesseract supports **[various image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.
 
-Tesseract supports **various [image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.
+Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO (the last one - since version 4.1.0).
 
 You should note that in many cases, in order to get better OCR results,
 you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.
","{'added': [(44, 'Tesseract supports **[various image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.'), (46, 'Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO (the last one - since version 4.1.0).')], 'deleted': [(44, 'Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO (the last one - since version 4.1.0).'), (46, 'Tesseract supports **various [image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.')]}",yes
README.md,README.md,b5878c23a70a6709e722aea5a3304a4c5c87313b,330d49a0a39060d477673573abb4611e37c8fe4c,"README: Add link to tessdoc/InputFormats

[skip ci]","@@ -43,6 +43,8 @@ Tesseract has **unicode (UTF-8) support**, and can **recognize more than 100 lan
 
 Tesseract supports **various output formats**: plain text, hOCR (HTML), PDF, invisible-text-only PDF, TSV and ALTO (the last one - since version 4.1.0).
 
+Tesseract supports **various [image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.
+
 You should note that in many cases, in order to get better OCR results,
 you'll need to **[improve the quality](https://tesseract-ocr.github.io/tessdoc/ImproveQuality.html) of the image** you are giving Tesseract.
 
","{'added': [(46, 'Tesseract supports **various [image formats](https://tesseract-ocr.github.io/tessdoc/InputFormats)** including PNG, JPEG and TIFF.'), (47, '')], 'deleted': []}",yes
src\training\pango\boxchar.cpp,src\training\pango\boxchar.cpp,330d49a0a39060d477673573abb4611e37c8fe4c,395f2315bc9ddd4434e2ad30a178ea3f28226d55,"Replace BOX -> Box

Both are equivalent, but the rest of the code already uses Box.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -82,7 +82,7 @@ void BoxChar::ReverseUnicodesInBox() {
 /* static */
 void BoxChar::TranslateBoxes(int xshift, int yshift, std::vector<BoxChar *> *boxes) {
   for (auto &boxe : *boxes) {
-    BOX *box = boxe->box_;
+    Box *box = boxe->box_;
     if (box != nullptr) {
       box->x += xshift;
       box->y += yshift;
@@ -303,7 +303,7 @@ void BoxChar::RotateBoxes(float rotation, int xcenter, int ycenter, int start_bo
                           std::vector<BoxChar *> *boxes) {
   Boxa *orig = boxaCreate(0);
   for (int i = start_box; i < end_box; ++i) {
-    BOX *box = (*boxes)[i]->box_;
+    Box *box = (*boxes)[i]->box_;
     if (box) {
       boxaAddBox(orig, box, L_CLONE);
     }
","{'added': [(85, '    Box *box = boxe->box_;'), (306, '    Box *box = (*boxes)[i]->box_;')], 'deleted': [(85, '    BOX *box = boxe->box_;'), (306, '    BOX *box = (*boxes)[i]->box_;')]}",yes
README.md,README.md,395f2315bc9ddd4434e2ad30a178ea3f28226d55,6bc304d121090ad36414ed5fa3980576c323a33a,"Update README.md

Fix sw status link.","@@ -1,7 +1,7 @@
 # Tesseract OCR
 
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
-![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)<br>
+[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)<br>
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
 [![Code Quality: Cpp](https://img.shields.io/lgtm/grade/cpp/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/context:cpp)
 [![Total Alerts](https://img.shields.io/lgtm/alerts/g/tesseract-ocr/tesseract.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/tesseract-ocr/tesseract/alerts)
","{'added': [(4, '[![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)](https://github.com/tesseract-ocr/tesseract/actions/workflows/sw.yml)<br>')], 'deleted': [(4, '![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)<br>')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,6bc304d121090ad36414ed5fa3980576c323a33a,34cfeafc7f5269fe25100aa4e1b22ae521b9ebed,Update cmake-win64.yml (D8016: '/Qpar' and '/openmp:llvm' command-line options are incompatible ),"@@ -135,7 +135,8 @@ jobs:
       - name: Build and Install tesseract
         shell: cmd
         run: |
-             cmake -E env CXXFLAGS=""/Qpar /fp:fast"" cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON
+             REM cmake -E env CXXFLAGS=""/Qpar /fp:fast""
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON
              cmake --build build --config Release --target install
 
       - name: Display Tesseract Version and Test Command Line Usage
","{'added': [(138, '             REM cmake -E env CXXFLAGS=""/Qpar /fp:fast""'), (139, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON')], 'deleted': [(138, '             cmake -E env CXXFLAGS=""/Qpar /fp:fast"" cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,34cfeafc7f5269fe25100aa4e1b22ae521b9ebed,2e8ff001e1e8ac0626cc9f4c7ba41e4d5673f8be,Update cmake-win64.yml,"@@ -16,10 +16,13 @@ jobs:
     runs-on: windows-latest
     steps:
       - uses: ilammy/setup-nasm@v1
-      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} ) (${GITHUB_REF#refs/*/})""
+      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""
         uses: actions/checkout@v3
         with:
           submodules: recursive
+      - name: Get the version
+        id: get_version
+        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
       - name: Setup Instalation Location
         run: |
              mkdir ${{env.ILOC}}
@@ -74,8 +77,8 @@ jobs:
       - name: Build and Install jbigkit
         shell: cmd
         run: |
-             git clone --depth 1 https://github.com/zdenop/jbigkit
-             cd jbigkit-2.1
+             git clone --depth 1 https://github.com/zdenop/jbigkit.git
+             cd jbigkit
              cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_PROGRAMS=OFF -DBUILD_TOOLS=OFF -DCMAKE_WARN_DEPRECATED=OFF
              cmake --build build --config Release --target install
              cd ..
@@ -92,7 +95,7 @@ jobs:
       - name: Build and Install libtiff
         shell: cmd
         run: |
-             git clone --depth 1 https://gitlab.com/libtiff/libtiff
+             git clone --depth 1 https://gitlab.com/libtiff/libtiff.git
              cd libtiff
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF
              cmake --build build --config Release --target install
@@ -122,7 +125,7 @@ jobs:
              git clone --depth 1 https://github.com/libarchive/libarchive.git
              cd libarchive
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DENABLE_TEST=OFF
-             cmake --build build --config Release --target instal
+             cmake --build build --config Release --target install
 
       - name: Remove not needed tools Before building tesseract
         shell: cmd
@@ -149,6 +152,6 @@ jobs:
       - name: Upload Build Results
         uses: actions/upload-artifact@v2
         with:
-          name: tesseract-${{env.RELEASE_VERSION}}-VS2019_win64
+          name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64
           path: ${{env.ILOC}}
           retention-days: 5
","{'added': [(19, '      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""'), (23, '      - name: Get the version'), (24, '        id: get_version'), (25, '        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\\/tags\\//}'), (80, '             git clone --depth 1 https://github.com/zdenop/jbigkit.git'), (81, '             cd jbigkit'), (98, '             git clone --depth 1 https://gitlab.com/libtiff/libtiff.git'), (128, '             cmake --build build --config Release --target install'), (155, '          name: tesseract-${{ steps.get_version.outputs.VERSION }}-VS2019_win64')], 'deleted': [(19, '      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} ) (${GITHUB_REF#refs/*/})""'), (77, '             git clone --depth 1 https://github.com/zdenop/jbigkit'), (78, '             cd jbigkit-2.1'), (95, '             git clone --depth 1 https://gitlab.com/libtiff/libtiff'), (125, '             cmake --build build --config Release --target instal'), (152, '          name: tesseract-${{env.RELEASE_VERSION}}-VS2019_win64')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,2e8ff001e1e8ac0626cc9f4c7ba41e4d5673f8be,e3aed54d1daad62c13ddf48374df7dfc500359d4,Update cmake-win64.yml,"@@ -16,15 +16,14 @@ jobs:
     runs-on: windows-latest
     steps:
       - uses: ilammy/setup-nasm@v1
-      - name: Checkout code
+      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} ) (${GITHUB_REF#refs/*/})""
         uses: actions/checkout@v3
         with:
           submodules: recursive
-      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""
-        shell: cmd
+      - name: Setup Instalation Location
         run: |
              mkdir ${{env.ILOC}}
-      - name: Build and Install zlib
+      - name: Build and Install zlib-ng
         shell: cmd
         run: |
              git clone --depth 1 https://github.com/zlib-ng/zlib-ng.git
","{'added': [(19, '      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} ) (${GITHUB_REF#refs/*/})""'), (23, '      - name: Setup Instalation Location'), (26, '      - name: Build and Install zlib-ng')], 'deleted': [(19, '      - name: Checkout code'), (23, '      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""'), (24, '        shell: cmd'), (27, '      - name: Build and Install zlib')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,e3aed54d1daad62c13ddf48374df7dfc500359d4,74800c0cc445fcdf84dae89582d52d41dcb53173,Update cmake-win64.yml,"@@ -20,11 +20,10 @@ jobs:
         uses: actions/checkout@v3
         with:
           submodules: recursive
-      - name: Build and Install leptonica dependencies
+      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""
         shell: cmd
         run: |
              mkdir ${{env.ILOC}}
-             echo ""RELEASE_VERSION=${GITHUB_REF#refs/*/}"" >> $GITHUB_ENV
       - name: Build and Install zlib
         shell: cmd
         run: |
","{'added': [(23, '      - name: ""Checkout ${{ github.ref }} ( ${{ github.sha }} )""')], 'deleted': [(23, '      - name: Build and Install leptonica dependencies'), (27, '             echo ""RELEASE_VERSION=${GITHUB_REF#refs/*/}"" >> $GITHUB_ENV')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,74800c0cc445fcdf84dae89582d52d41dcb53173,ffb6c09db6215b8bb282508686f07abb7255e763,Update cmake-win64.yml,"@@ -12,19 +12,8 @@ env:
 
 jobs:
   build:
-    name: ${{ matrix.config.name }}
-    runs-on: ${{ matrix.config.os }}
-    strategy:
-      fail-fast: True
-      matrix:
-        config:
-        - {
-            name: ""Windows Latest MSVC - cmake"", artifact: ""Windows-MSVC"",
-            os: windows-latest,
-            cc: ""cl"", cxx: ""cl"",
-            environment_script: ""C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat""
-          }
-
+    name: cmake-win64
+    runs-on: windows-latest
     steps:
       - uses: ilammy/setup-nasm@v1
       - name: Checkout code
@@ -36,15 +25,14 @@ jobs:
         run: |
              mkdir ${{env.ILOC}}
              echo ""RELEASE_VERSION=${GITHUB_REF#refs/*/}"" >> $GITHUB_ENV
-
       - name: Build and Install zlib
         shell: cmd
         run: |
              git clone --depth 1 https://github.com/zlib-ng/zlib-ng.git
-            cd zlib-ng
-            cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
-            cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
-            cmake --build build --config Release --target install
+             cd zlib-ng
+             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
+             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
+             cmake --build build --config Release --target install
              cd ..
 
       - name: Build and Install libpng
","{'added': [(15, '    name: cmake-win64'), (16, '    runs-on: windows-latest'), (32, '             cd zlib-ng'), (33, '             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF'), (34, '             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF'), (35, '             cmake --build build --config Release --target install')], 'deleted': [(15, '    name: ${{ matrix.config.name }}'), (16, '    runs-on: ${{ matrix.config.os }}'), (17, '    strategy:'), (18, '      fail-fast: True'), (19, '      matrix:'), (20, '        config:'), (21, '        - {'), (22, '            name: ""Windows Latest MSVC - cmake"", artifact: ""Windows-MSVC"",'), (23, '            os: windows-latest,'), (24, '            cc: ""cl"", cxx: ""cl"",'), (25, '            environment_script: ""C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat""'), (26, '          }'), (27, ''), (39, ''), (44, '            cd zlib-ng'), (45, '            cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF'), (46, '            cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF'), (47, '            cmake --build build --config Release --target install')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,ffb6c09db6215b8bb282508686f07abb7255e763,67841aa89ff8828e5ab1eeae5a9140483da20c23,"GA: improve cmake-win64: use variable for location, add libarchive build, disabple not need functions","@@ -7,6 +7,9 @@ on:
     - cron: 0 23 * * *
   workflow_dispatch:
 
+env:
+  ILOC: d:/a/local
+
 jobs:
   build:
     name: ${{ matrix.config.name }}
@@ -23,66 +26,62 @@ jobs:
           }
 
     steps:
+      - uses: ilammy/setup-nasm@v1
       - name: Checkout code
-        uses: actions/checkout@v2
+        uses: actions/checkout@v3
         with:
           submodules: recursive
-
       - name: Build and Install leptonica dependencies
         shell: cmd
         run: |
-             mkdir d:/a/local
-             set PKG_CONFIG_PATH=d:/a/local/lib/pkgconfig
-             echo ""PKG_CONFIG_PATH=d:/a/local/lib/pkgconfig"" >> $GITHUB_ENV
+             mkdir ${{env.ILOC}}
+             echo ""RELEASE_VERSION=${GITHUB_REF#refs/*/}"" >> $GITHUB_ENV
 
       - name: Build and Install zlib
         shell: cmd
         run: |
-             curl -sSL -o zlib1212.zip https://zlib.net/zlib1212.zip
-             unzip.exe zlib1212.zip
-             cd zlib-1.2.12
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
-             cmake --build build --config Release --target install
+             git clone --depth 1 https://github.com/zlib-ng/zlib-ng.git
+            cd zlib-ng
+            cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
+            cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF
+            cmake --build build --config Release --target install
+             cd ..
 
       - name: Build and Install libpng
         shell: cmd
         run: |
              curl -sSL -o lpng1637.zip https://download.sourceforge.net/libpng/lpng1637.zip
-             unzip.exe lpng1637.zip
+             unzip.exe  -qq lpng1637.zip
              cd lpng1637
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF
              cmake --build build --config Release --target install
-
-#      - name: Build and Install webp
-#        shell: cmd
-#        run: |
-#             git clone --depth 1 https://github.com/webmproject/libwebp.git && cd libwebp
-#             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local -DWEBP_BUILD_ANIM_UTILS =OFF
-#             cmake --build build --config Release --target install
+             cd ..
 
       - name: Build and Install giflib
         shell: cmd
         run: |
              curl -sSL -o giflib-master.zip https://codeload.github.com/xbmc/giflib/zip/master
-             unzip giflib-master.zip
+             unzip -qq giflib-master.zip
              cd giflib-master
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}}
              cmake --build build --config Release --target install
+             cd ..
 
       - name: Build and Install libjpeg
         shell: cmd
         run: |
              git clone --depth 1 https://github.com/libjpeg-turbo/libjpeg-turbo.git
              cd libjpeg-turbo
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWITH_TURBOJPEG=OFF -DENABLE_SHARED=OFF
              cmake --build build --config Release --target install
+             cd ..
 
-      - name: Build and Install openjpeg
+      - name: Build and Install webp
         shell: cmd
         run: |
-             git clone --depth 1 https://github.com/uclouvain/openjpeg.git
-             cd openjpeg
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             git clone --depth 1 https://github.com/webmproject/libwebp.git
+             cd libwebp
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWEBP_BUILD_ANIM_UTILS=OFF -DWEBP_BUILD_CWEBP=OFF -DWEBP_BUILD_DWEBP=OFF -DWEBP_BUILD_GIF2WEBP=OFF -DWEBP_BUILD_IMG2WEBP=OFF -DWEBP_BUILD_VWEBP=OFF -DWEBP_BUILD_WEBPMUX=OFF -DWEBP_BUILD_WEBPINFO=OFF -DWEBP_BUILD_EXTRAS=OFF
              cmake --build build --config Release --target install
              cd ..
 
@@ -91,7 +90,7 @@ jobs:
         run: |
              git clone --depth 1 https://github.com/zdenop/jbigkit
              cd jbigkit-2.1
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_PROGRAMS=OFF -DBUILD_TOOLS=OFF -DCMAKE_WARN_DEPRECATED=OFF
              cmake --build build --config Release --target install
              cd ..
 
@@ -99,8 +98,8 @@ jobs:
         shell: cmd
         run: |
              git clone --depth 1 https://github.com/facebook/zstd.git
-             cd zstd
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             cd zstd/build/cmake
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZSTD_BUILD_PROGRAMS=OFF -DBUILD_TESTING=OFF
              cmake --build build --config Release --target install
              cd ..
 
@@ -109,7 +108,16 @@ jobs:
         run: |
              git clone --depth 1 https://gitlab.com/libtiff/libtiff
              cd libtiff
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF
+             cmake --build build --config Release --target install
+             cd ..
+
+      - name: Build and Install openjpeg
+        shell: cmd
+        run: |
+             git clone --depth 1 https://github.com/uclouvain/openjpeg.git
+             cd openjpeg
+             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_CODEC=OFF -DBUILD_TESTING=OFF -DBUILD_DOC=OFF -DCMAKE_WARN_DEPRECATED=OFF
              cmake --build build --config Release --target install
              cd ..
 
@@ -117,26 +125,37 @@ jobs:
         shell: cmd
         run: |
              echo ""Building leptonica...""
-             git clone --depth 1 https://github.com/DanBloomberg/leptonica.git && cd leptonica
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DBUILD_PROG=OFF -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             git clone --depth 1 https://github.com/DanBloomberg/leptonica.git
+             cd leptonica
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_PROG=OFF -DBUILD_SHARED_LIBS=ON
              cmake --build build --config Release --target install
 
+      - name: Build and Install libarchive
+        shell: cmd
+        run: |
+             git clone --depth 1 https://github.com/libarchive/libarchive.git
+             cd libarchive
+             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DENABLE_TEST=OFF
+             cmake --build build --config Release --target instal
+
+      - name: Remove not needed tools Before building tesseract
+        shell: cmd
+        run: >
+             rm -Rf ${{env.ILOC}}/bin/*.exe
+
       - name: Build and Install tesseract
         shell: cmd
         run: |
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DBUILD_TRAINING_TOOLS=OFF -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOPENMP_BUILD=OFF -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
+             cmake -E env CXXFLAGS=""/Qpar /fp:fast"" cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON
              cmake --build build --config Release --target install
 
       - name: Display Tesseract Version and Test Command Line Usage
         shell: cmd
         run: |
-          git clone --depth 1 https://github.com/tesseract-ocr/tessconfigs
-          mkdir d:/a/local/share
-          move tessconfigs d:/a/local/share
-          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output d:/a/local/share/tessconfigs/eng.traineddata
-          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output d:/a/local/share/tessconfigs/osd.traineddata
-          set TESSDATA_PREFIX=d:/a/local/share/tessconfigs
-          set PATH=d:/a/local/bin;%PATH%
+          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output ${{env.ILOC}}/share/tessdata/eng.traineddata
+          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata
+          set TESSDATA_PREFIX=${{env.ILOC}}/share/tessdata
+          set PATH=${{env.ILOC}}/bin;%PATH%
           tesseract -v
           tesseract --list-langs
           tesseract test/testing/phototest.tif -
@@ -144,15 +163,6 @@ jobs:
       - name: Upload Build Results
         uses: actions/upload-artifact@v2
         with:
-          name: tesseract-cmake-win64
-          path: d:/a/local
+          name: tesseract-${{env.RELEASE_VERSION}}-VS2019_win64
+          path: ${{env.ILOC}}
           retention-days: 5
-          
-      - name: Download a Build Artifact
-        uses: actions/download-artifact@v3.0.0
-        with:
-          # Artifact name
-          name: # optional
-          # Destination path
-          path: # optional          
-          
","{'added': [(10, 'env:'), (11, '  ILOC: d:/a/local'), (12, ''), (29, '      - uses: ilammy/setup-nasm@v1'), (31, '        uses: actions/checkout@v3'), (37, '             mkdir ${{env.ILOC}}'), (38, '             echo ""RELEASE_VERSION=${GITHUB_REF#refs/*/}"" >> $GITHUB_ENV'), (43, '             git clone --depth 1 https://github.com/zlib-ng/zlib-ng.git'), (44, '            cd zlib-ng'), (45, '            cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_SHARED_LIBS=OFF -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF'), (46, '            cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZLIB_COMPAT=ON -DZLIB_ENABLE_TESTS=OFF -DINSTALL_UTILS=OFF'), (47, '            cmake --build build --config Release --target install'), (48, '             cd ..'), (54, '             unzip.exe  -qq lpng1637.zip'), (56, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DPNG_TESTS=OFF -DPNG_SHARED=OFF'), (58, '             cd ..'), (64, '             unzip -qq giflib-master.zip'), (66, '             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}}'), (68, '             cd ..'), (75, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWITH_TURBOJPEG=OFF -DENABLE_SHARED=OFF'), (77, '             cd ..'), (79, '      - name: Build and Install webp'), (82, '             git clone --depth 1 https://github.com/webmproject/libwebp.git'), (83, '             cd libwebp'), (84, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DWEBP_BUILD_ANIM_UTILS=OFF -DWEBP_BUILD_CWEBP=OFF -DWEBP_BUILD_DWEBP=OFF -DWEBP_BUILD_GIF2WEBP=OFF -DWEBP_BUILD_IMG2WEBP=OFF -DWEBP_BUILD_VWEBP=OFF -DWEBP_BUILD_WEBPMUX=OFF -DWEBP_BUILD_WEBPINFO=OFF -DWEBP_BUILD_EXTRAS=OFF'), (93, '             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_PROGRAMS=OFF -DBUILD_TOOLS=OFF -DCMAKE_WARN_DEPRECATED=OFF'), (101, '             cd zstd/build/cmake'), (102, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DZSTD_BUILD_PROGRAMS=OFF -DBUILD_TESTING=OFF'), (111, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -Dtiff-tools=OFF -Dtiff-tests=OFF -Dtiff-contrib=OFF -Dtiff-docs=OFF'), (112, '             cmake --build build --config Release --target install'), (113, '             cd ..'), (114, ''), (115, '      - name: Build and Install openjpeg'), (116, '        shell: cmd'), (117, '        run: |'), (118, '             git clone --depth 1 https://github.com/uclouvain/openjpeg.git'), (119, '             cd openjpeg'), (120, '             cmake -Bbuild -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DBUILD_CODEC=OFF -DBUILD_TESTING=OFF -DBUILD_DOC=OFF -DCMAKE_WARN_DEPRECATED=OFF'), (128, '             git clone --depth 1 https://github.com/DanBloomberg/leptonica.git'), (129, '             cd leptonica'), (130, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_PROG=OFF -DBUILD_SHARED_LIBS=ON'), (133, '      - name: Build and Install libarchive'), (134, '        shell: cmd'), (135, '        run: |'), (136, '             git clone --depth 1 https://github.com/libarchive/libarchive.git'), (137, '             cd libarchive'), (138, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DENABLE_TEST=OFF'), (139, '             cmake --build build --config Release --target instal'), (140, ''), (141, '      - name: Remove not needed tools Before building tesseract'), (142, '        shell: cmd'), (143, '        run: >'), (144, '             rm -Rf ${{env.ILOC}}/bin/*.exe'), (145, ''), (149, '             cmake -E env CXXFLAGS=""/Qpar /fp:fast"" cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{env.ILOC}} -DCMAKE_INSTALL_PREFIX=${{env.ILOC}} -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DENABLE_LTO=ON -DBUILD_TRAINING_TOOLS=OFF -DFAST_FLOAT=ON -DGRAPHICS_DISABLED=ON -DOPENMP_BUILD=ON'), (155, '          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output ${{env.ILOC}}/share/tessdata/eng.traineddata'), (156, '          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output ${{env.ILOC}}/share/tessdata/osd.traineddata'), (157, '          set TESSDATA_PREFIX=${{env.ILOC}}/share/tessdata'), (158, '          set PATH=${{env.ILOC}}/bin;%PATH%'), (166, '          name: tesseract-${{env.RELEASE_VERSION}}-VS2019_win64'), (167, '          path: ${{env.ILOC}}')], 'deleted': [(27, '        uses: actions/checkout@v2'), (30, ''), (34, '             mkdir d:/a/local'), (35, '             set PKG_CONFIG_PATH=d:/a/local/lib/pkgconfig'), (36, '             echo ""PKG_CONFIG_PATH=d:/a/local/lib/pkgconfig"" >> $GITHUB_ENV'), (41, '             curl -sSL -o zlib1212.zip https://zlib.net/zlib1212.zip'), (42, '             unzip.exe zlib1212.zip'), (43, '             cd zlib-1.2.12'), (44, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (45, '             cmake --build build --config Release --target install'), (51, '             unzip.exe lpng1637.zip'), (53, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (55, ''), (56, '#      - name: Build and Install webp'), (57, '#        shell: cmd'), (58, '#        run: |'), (59, '#             git clone --depth 1 https://github.com/webmproject/libwebp.git && cd libwebp'), (60, '#             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local -DWEBP_BUILD_ANIM_UTILS =OFF'), (61, '#             cmake --build build --config Release --target install'), (67, '             unzip giflib-master.zip'), (69, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (77, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (80, '      - name: Build and Install openjpeg'), (83, '             git clone --depth 1 https://github.com/uclouvain/openjpeg.git'), (84, '             cd openjpeg'), (85, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (94, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (102, '             cd zstd'), (103, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (112, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (120, '             git clone --depth 1 https://github.com/DanBloomberg/leptonica.git && cd leptonica'), (121, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DBUILD_PROG=OFF -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (127, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DBUILD_TRAINING_TOOLS=OFF -DSW_BUILD=OFF -DBUILD_SHARED_LIBS=ON -DOPENMP_BUILD=OFF -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (133, '          git clone --depth 1 https://github.com/tesseract-ocr/tessconfigs'), (134, '          mkdir d:/a/local/share'), (135, '          move tessconfigs d:/a/local/share'), (136, '          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata --output d:/a/local/share/tessconfigs/eng.traineddata'), (137, '          curl -L https://github.com/tesseract-ocr/tessdata/raw/main/osd.traineddata --output d:/a/local/share/tessconfigs/osd.traineddata'), (138, '          set TESSDATA_PREFIX=d:/a/local/share/tessconfigs'), (139, '          set PATH=d:/a/local/bin;%PATH%'), (147, '          name: tesseract-cmake-win64'), (148, '          path: d:/a/local'), (150, ''), (151, '      - name: Download a Build Artifact'), (152, '        uses: actions/download-artifact@v3.0.0'), (153, '        with:'), (154, '          # Artifact name'), (155, '          name: # optional'), (156, '          # Destination path'), (157, '          path: # optional'), (158, '')]}",yes
src\ccmain\pagesegmain.cpp,src\ccmain\pagesegmain.cpp,67841aa89ff8828e5ab1eeae5a9140483da20c23,d2015a6119f95130c962539d794095ab1418931c,do not use '\0' in std::string => fixes issue #3837 (loading uzn file),"@@ -108,10 +108,8 @@ int Tesseract::SegmentPage(const char *input_file, BLOCK_LIST *blocks, Tesseract
   // If a UNLV zone file can be found, use that instead of segmentation.
   if (!PSM_COL_FIND_ENABLED(pageseg_mode) && input_file != nullptr && input_file[0] != '\0') {
     std::string name = input_file;
-    const char *lastdot = strrchr(name.c_str(), '.');
-    if (lastdot != nullptr) {
-      name[lastdot - name.c_str()] = '\0';
-    }
+    std::size_t lastdot = name.find_last_of(""."");
+    name = name.substr(0, lastdot);
     read_unlv_file(name, width, height, blocks);
   }
   if (blocks->empty()) {
","{'added': [(111, '    std::size_t lastdot = name.find_last_of(""."");'), (112, '    name = name.substr(0, lastdot);')], 'deleted': [(111, ""    const char *lastdot = strrchr(name.c_str(), '.');""), (112, '    if (lastdot != nullptr) {'), (113, ""      name[lastdot - name.c_str()] = '\\0';""), (114, '    }')]}",yes
src\ccutil\tprintf.h,src\ccutil\tprintf.h,d2015a6119f95130c962539d794095ab1418931c,d1912d70100d6e13ff0241c478735bbca7256d1e,cmake: fix Build with clang-cl on Windows; fixes #3683,"@@ -38,4 +38,6 @@ extern TESS_API void tprintf( // Trace printf
 
 } // namespace tesseract
 
+#undef __attribute__
+
 #endif // define TESSERACT_CCUTIL_TPRINTF_H
","{'added': [(41, '#undef __attribute__'), (42, '')], 'deleted': []}",yes
include\tesseract\ltrresultiterator.h,include\tesseract\ltrresultiterator.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -181,7 +181,7 @@ class TESS_API ChoiceIterator {
 public:
   // Construction is from a LTRResultIterator that points to the symbol of
   // interest. The ChoiceIterator allows a one-shot iteration over the
-  // choices for this symbol and after that is is useless.
+  // choices for this symbol and after that it is useless.
   explicit ChoiceIterator(const LTRResultIterator &result_it);
   ~ChoiceIterator();
 
","{'added': [(184, '  // choices for this symbol and after that it is useless.')], 'deleted': [(184, '  // choices for this symbol and after that is is useless.')]}",yes
src\ccmain\pageiterator.cpp,src\ccmain\pageiterator.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -225,7 +225,7 @@ bool PageIterator::IsAtFinalElement(PageIteratorLevel level,
     return true; // Already at the end!
   }
   // The result is true if we step forward by element and find we are
-  // at the the end of the page or at beginning of *all* levels in:
+  // at the end of the page or at beginning of *all* levels in:
   // [level, element).
   // When there is more than one level difference between element and level,
   // we could for instance move forward one symbol and still be at the first
","{'added': [(228, '  // at the end of the page or at beginning of *all* levels in:')], 'deleted': [(228, '  // at the the end of the page or at beginning of *all* levels in:')]}",yes
src\ccmain\resultiterator.cpp,src\ccmain\resultiterator.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -616,7 +616,7 @@ bool ResultIterator::IsAtFinalElement(PageIteratorLevel level, PageIteratorLevel
     return true; // Already at the end!
   }
   // The result is true if we step forward by element and find we are
-  // at the the end of the page or at beginning of *all* levels in:
+  // at the end of the page or at beginning of *all* levels in:
   // [level, element).
   // When there is more than one level difference between element and level,
   // we could for instance move forward one symbol and still be at the first
","{'added': [(619, '  // at the end of the page or at beginning of *all* levels in:')], 'deleted': [(619, '  // at the the end of the page or at beginning of *all* levels in:')]}",yes
src\ccstruct\blobbox.h,src\ccstruct\blobbox.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -769,7 +769,7 @@ public:
 #ifndef GRAPHICS_DISABLED
   // Draw the noise blobs from all lists in red.
   void plot_noise_blobs(ScrollView *to_win);
-  // Draw the blobs on on the various lists in the block in different colors.
+  // Draw the blobs on the various lists in the block in different colors.
   void plot_graded_blobs(ScrollView *to_win);
 #endif
 
","{'added': [(772, '  // Draw the blobs on the various lists in the block in different colors.')], 'deleted': [(772, '  // Draw the blobs on on the various lists in the block in different colors.')]}",yes
src\ccstruct\coutln.cpp,src\ccstruct\coutln.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -871,7 +871,7 @@ void C_OUTLINE::ComputeBinaryOffsets() {
     increment_step(s, 1, &head_pos, dir_counts, pos_totals);
   }
   for (int s = 0; s < stepcount; pos += step(s++)) {
-    // At step s, s in in the middle of [s-2, s+2].
+    // At step s, s in the middle of [s-2, s+2].
     increment_step(s + 2, 1, &head_pos, dir_counts, pos_totals);
     int dir_index = chain_code(s);
     ICOORD step_vec = step(s);
","{'added': [(874, '    // At step s, s in the middle of [s-2, s+2].')], 'deleted': [(874, '    // At step s, s in in the middle of [s-2, s+2].')]}",yes
src\ccstruct\normalis.cpp,src\ccstruct\normalis.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -180,7 +180,7 @@ static void ComputeRunlengthImage(const TBOX &box,
       ++y;
     }
   }
-  // Now set the image pixels the the MIN of the x and y runlengths.
+  // Now set the image pixels the MIN of the x and y runlengths.
   for (int iy = 0; iy < height; ++iy) {
     int x = 0;
     for (auto x_coord : x_coords[iy]) {
","{'added': [(183, '  // Now set the image pixels the MIN of the x and y runlengths.')], 'deleted': [(183, '  // Now set the image pixels the the MIN of the x and y runlengths.')]}",yes
src\ccstruct\pdblock.cpp,src\ccstruct\pdblock.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -347,7 +347,7 @@ void BLOCK_RECT_IT::forward() { // next rectangle
 /**********************************************************************
  * BLOCK_LINE_IT::get_line
  *
- * Get the the start and width of a line in the block.
+ * Get the start and width of a line in the block.
  **********************************************************************/
 
 TDimension BLOCK_LINE_IT::get_line( // get a line
","{'added': [(350, ' * Get the start and width of a line in the block.')], 'deleted': [(350, ' * Get the the start and width of a line in the block.')]}",yes
src\ccutil\ambigs.h,src\ccutil\ambigs.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -116,7 +116,7 @@ public:
 
   // Comparator function for sorting AmbigSpec_LISTs. The lists will
   // be sorted by their wrong_ngram arrays. Example of wrong_ngram vectors
-  // in a a sorted AmbigSpec_LIST: [9 1 3], [9 3 4], [9 8], [9, 8 1].
+  // in a sorted AmbigSpec_LIST: [9 1 3], [9 3 4], [9 8], [9, 8 1].
   static int compare_ambig_specs(const void *spec1, const void *spec2) {
     const AmbigSpec *s1 = *static_cast<const AmbigSpec *const *>(spec1);
     const AmbigSpec *s2 = *static_cast<const AmbigSpec *const *>(spec2);
","{'added': [(119, '  // in a sorted AmbigSpec_LIST: [9 1 3], [9 3 4], [9 8], [9, 8 1].')], 'deleted': [(119, '  // in a a sorted AmbigSpec_LIST: [9 1 3], [9 3 4], [9 8], [9, 8 1].')]}",yes
src\ccutil\tessdatamanager.cpp,src\ccutil\tessdatamanager.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -48,7 +48,7 @@ TessdataManager::TessdataManager(FileReader reader)
   SetVersionString(TESSERACT_VERSION_STR);
 }
 
-// Lazily loads from the the given filename. Won't actually read the file
+// Lazily loads from the given filename. Won't actually read the file
 // until it needs it.
 void TessdataManager::LoadFileLater(const char *data_file_name) {
   Clear();
","{'added': [(51, ""// Lazily loads from the given filename. Won't actually read the file"")], 'deleted': [(51, ""// Lazily loads from the the given filename. Won't actually read the file"")]}",yes
src\ccutil\tessdatamanager.h,src\ccutil\tessdatamanager.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -138,7 +138,7 @@ public:
     return is_loaded_;
   }
 
-  // Lazily loads from the the given filename. Won't actually read the file
+  // Lazily loads from the given filename. Won't actually read the file
   // until it needs it.
   void LoadFileLater(const char *data_file_name);
   /**
","{'added': [(141, ""  // Lazily loads from the given filename. Won't actually read the file"")], 'deleted': [(141, ""  // Lazily loads from the the given filename. Won't actually read the file"")]}",yes
src\classify\intproto.h,src\classify\intproto.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -66,7 +66,7 @@ class FCOORD;
 
 /* The first 3 dimensions of the CLASS_PRUNER_STRUCT are the
  * 3 axes of the quantized feature space.
- * The position of the the bits recorded for each class in the
+ * The position of the bits recorded for each class in the
  * 4th dimension is determined by using CPrunerWordIndexFor(c),
  * where c is the corresponding class id. */
 struct CLASS_PRUNER_STRUCT {
","{'added': [(69, ' * The position of the bits recorded for each class in the')], 'deleted': [(69, ' * The position of the the bits recorded for each class in the')]}",yes
src\dict\trie.h,src\dict\trie.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -333,7 +333,7 @@ protected:
 
   // Finds the edge with the given direction, word_end and unichar_id
   // in the node indicated by node_ref. Fills in the pointer to the
-  // EDGE_RECORD and the index of the edge with the the values
+  // EDGE_RECORD and the index of the edge with the values
   // corresponding to the edge found. Returns true if an edge was found.
   bool edge_char_of(NODE_REF node_ref, NODE_REF next_node, int direction, bool word_end,
                     UNICHAR_ID unichar_id, EDGE_RECORD **edge_ptr, EDGE_INDEX *edge_index) const;
","{'added': [(336, '  // EDGE_RECORD and the index of the edge with the values')], 'deleted': [(336, '  // EDGE_RECORD and the index of the edge with the the values')]}",yes
src\textord\colfind.h,src\textord\colfind.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -87,7 +87,7 @@ public:
   // 6. Destruction. Use of a single column finder for multiple images does not
   //    make sense.
   // Throughout these steps, the ColPartitions are owned by part_grid_, which
-  // means that that it must be kept correct. Exception: big_parts_ owns its
+  // means that it must be kept correct. Exception: big_parts_ owns its
   // own ColPartitions.
   // The BLOBNBOXes are owned by the input TO_BLOCK for the whole time, except
   // for a phase in FindBlocks before TransformToBlocks, when they become
","{'added': [(90, '  // means that it must be kept correct. Exception: big_parts_ owns its')], 'deleted': [(90, '  // means that that it must be kept correct. Exception: big_parts_ owns its')]}",yes
src\textord\colpartition.cpp,src\textord\colpartition.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -1378,7 +1378,7 @@ bool ColPartition::HasGoodBaseline() {
   } else {
     // Horizontal lines use the bottom as the baseline.
     TBOX box(it.data()->bounding_box());
-    // Use the bottom-left of the first box, the the bottom-right of the last,
+    // Use the bottom-left of the first box, the bottom-right of the last,
     // and the middle of all others.
     ICOORD first_pt(box.left(), box.bottom());
     linepoints.Add(first_pt);
@@ -1623,7 +1623,7 @@ static TO_BLOCK *MoveBlobsToBlock(bool vertical_text, int line_spacing,
                                   ColPartition_LIST *used_parts) {
   // Make a matching TO_BLOCK and put all the BLOBNBOXes from the parts in it.
   // Move all the parts to a done list as they are no longer needed, except
-  // that have have to continue to exist until the part grid is deleted.
+  // that have to continue to exist until the part grid is deleted.
   // Compute the median blob size as we go, as the block needs to know.
   TBOX block_box(block->pdblk.bounding_box());
   STATS sizes(0, std::max(block_box.width(), block_box.height()) - 1);
@@ -1780,7 +1780,7 @@ TO_BLOCK *ColPartition::MakeVerticalTextBlock(const ICOORD &bleft,
 }
 
 // Makes a TO_ROW matching this and moves all the blobs to it, transferring
-// ownership to to returned TO_ROW.
+// ownership to returned TO_ROW.
 TO_ROW *ColPartition::MakeToRow() {
   BLOBNBOX_C_IT blob_it(&boxes_);
   TO_ROW *row = nullptr;
","{'added': [(1381, '    // Use the bottom-left of the first box, the bottom-right of the last,'), (1626, '  // that have to continue to exist until the part grid is deleted.'), (1783, '// ownership to returned TO_ROW.')], 'deleted': [(1381, '    // Use the bottom-left of the first box, the the bottom-right of the last,'), (1626, '  // that have have to continue to exist until the part grid is deleted.'), (1783, '// ownership to to returned TO_ROW.')]}",yes
src\textord\colpartition.h,src\textord\colpartition.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -671,7 +671,7 @@ public:
                                          ColPartition_LIST *used_parts);
 
   // Makes a TO_ROW matching this and moves all the blobs to it, transferring
-  // ownership to to returned TO_ROW.
+  // ownership to returned TO_ROW.
   TO_ROW *MakeToRow();
 
   // Returns a copy of everything except the list of boxes. The resulting
","{'added': [(674, '  // ownership to returned TO_ROW.')], 'deleted': [(674, '  // ownership to to returned TO_ROW.')]}",yes
src\textord\devanagari_processing.cpp,src\textord\devanagari_processing.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -199,7 +199,7 @@ int ShiroRekhaSplitter::GetXheightForCC(Box *cc_bbox) {
       int baseline = static_cast<int>(row->base_line(box_middle) + 0.5);
       TBOX test_box(box_middle - row->x_height() / 2, baseline, box_middle + row->x_height() / 2,
                     static_cast<int>(baseline + row->x_height()));
-      // Compute overlap. If it is is a major overlap, this is the right row.
+      // Compute overlap. If it is a major overlap, this is the right row.
       if (bbox.major_overlap(test_box)) {
         return row->x_height();
       }
","{'added': [(202, '      // Compute overlap. If it is a major overlap, this is the right row.')], 'deleted': [(202, '      // Compute overlap. If it is is a major overlap, this is the right row.')]}",yes
src\textord\tospace.cpp,src\textord\tospace.cpp,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -787,7 +787,7 @@ void Textord::improve_row_threshold(TO_ROW *row, STATS *all_gap_stats) {
   /*
 Look for the first region of all 0's in the histogram which is wider than
 max(3, (sp - kn) / 3) and starts between kn and sp. If found, and current
-threshold is not within it, move the threshold so that is is just inside it.
+threshold is not within it, move the threshold so that is just inside it.
 */
   reqd_zero_width = static_cast<int16_t>(floor((sp - kn) / 3 + 0.5));
   if (reqd_zero_width < 3) {
","{'added': [(790, 'threshold is not within it, move the threshold so that is just inside it.')], 'deleted': [(790, 'threshold is not within it, move the threshold so that is is just inside it.')]}",yes
src\training\unicharset\lstmtrainer.h,src\training\unicharset\lstmtrainer.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -466,7 +466,7 @@ protected:
   // significant learning. learning_iteration_ <= training_iteration_.
   // learning_iteration_ is used to measure rate of learning progress.
   int learning_iteration_;
-  // Saved value of sample_iteration_ before looking for the the next sample.
+  // Saved value of sample_iteration_ before looking for the next sample.
   int prev_sample_iteration_;
   // How often to include a PERFECT training sample in backprop.
   // A PERFECT training sample is used if the current
","{'added': [(469, '  // Saved value of sample_iteration_ before looking for the next sample.')], 'deleted': [(469, '  // Saved value of sample_iteration_ before looking for the the next sample.')]}",yes
src\wordrec\language_model.h,src\wordrec\language_model.h,8bc7a9591d7ce3fbd76e83dca142f221882b9bd5,11796584a24b10c6ce4309e48c5b86f6af504321,Fix some typos.,"@@ -236,7 +236,7 @@ protected:
   // Constructs WERD_CHOICE by recording unichar_ids of the BLOB_CHOICEs
   // on the path represented by the given BLOB_CHOICE and language model
   // state entries (lmse, dse). The path is re-constructed by following
-  // the parent pointers in the the lang model state entries). If the
+  // the parent pointers in the lang model state entries). If the
   // constructed WERD_CHOICE is better than the best/raw choice recorded
   // in the best_choice_bundle, this function updates the corresponding
   // fields and sets best_choice_bunldle->updated to true.
@@ -367,7 +367,7 @@ protected:
   // Set to true if a choice representing correct segmentation was explored.
   bool correct_segmentation_explored_ = false;
 
-  // Params models containing weights for for computing ViterbiStateEntry costs.
+  // Params models containing weights for computing ViterbiStateEntry costs.
   ParamsModel params_model_;
 };
 
","{'added': [(239, '  // the parent pointers in the lang model state entries). If the'), (370, '  // Params models containing weights for computing ViterbiStateEntry costs.')], 'deleted': [(239, '  // the parent pointers in the the lang model state entries). If the'), (370, '  // Params models containing weights for for computing ViterbiStateEntry costs.')]}",yes
sw.cpp,sw.cpp,11796584a24b10c6ce4309e48c5b86f6af504321,554c7ddd93c9052a3ff744628938e2b3a83fde52,[sw] Fix macos aarch64 build.,"@@ -72,7 +72,8 @@ void build(Solution &s)
         // check arch (arm)
         libtesseract -= ""src/arch/dotproductneon.cpp"";
 
-        if (libtesseract.getBuildSettings().TargetOS.Type != OSType::Windows)
+        if (libtesseract.getBuildSettings().TargetOS.Type != OSType::Windows &&
+            libtesseract.getBuildSettings().TargetOS.Arch != ArchType::aarch64)
         {
             libtesseract[""src/arch/dotproductavx.cpp""].args.push_back(""-mavx"");
             libtesseract[""src/arch/dotproductavx512.cpp""].args.push_back(""-mavx512f"");
","{'added': [(75, '        if (libtesseract.getBuildSettings().TargetOS.Type != OSType::Windows &&'), (76, '            libtesseract.getBuildSettings().TargetOS.Arch != ArchType::aarch64)')], 'deleted': [(75, '        if (libtesseract.getBuildSettings().TargetOS.Type != OSType::Windows)')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,554c7ddd93c9052a3ff744628938e2b3a83fde52,e74f877d5bfb2fa0da637de82a3b9befb85aab32,Update cmake-win64.yml,"@@ -145,7 +145,7 @@ jobs:
         uses: actions/upload-artifact@v2
         with:
           name: tesseract-cmake-win64
-          # path: d:/a/local
+          path: d:/a/local
           retention-days: 5
           
       - name: Download a Build Artifact
","{'added': [(148, '          path: d:/a/local')], 'deleted': [(148, '          # path: d:/a/local')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,e74f877d5bfb2fa0da637de82a3b9befb85aab32,d645a0333fecebabf6afc7aea4533473d30733f5,"Update cmake-win64.yml

test artifact","@@ -140,3 +140,19 @@ jobs:
           tesseract -v
           tesseract --list-langs
           tesseract test/testing/phototest.tif -
+          
+      - name: Upload Build Results
+        uses: actions/upload-artifact@v2
+        with:
+          name: tesseract-cmake-win64
+          # path: d:/a/local
+          retention-days: 5
+          
+      - name: Download a Build Artifact
+        uses: actions/download-artifact@v3.0.0
+        with:
+          # Artifact name
+          name: # optional
+          # Destination path
+          path: # optional          
+          
","{'added': [(143, ''), (144, '      - name: Upload Build Results'), (145, '        uses: actions/upload-artifact@v2'), (146, '        with:'), (147, '          name: tesseract-cmake-win64'), (148, '          # path: d:/a/local'), (149, '          retention-days: 5'), (150, ''), (151, '      - name: Download a Build Artifact'), (152, '        uses: actions/download-artifact@v3.0.0'), (153, '        with:'), (154, '          # Artifact name'), (155, '          name: # optional'), (156, '          # Destination path'), (157, '          path: # optional'), (158, '')], 'deleted': []}",no
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,d645a0333fecebabf6afc7aea4533473d30733f5,968b6db0b474d5b5b01789cffcc9ed1170087f9f,"Update cmake-win64.yml

skip webp build","@@ -53,12 +53,12 @@ jobs:
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
              cmake --build build --config Release --target install
 
-      - name: Build and Install webp
-        shell: cmd
-        run: |
-             git clone --depth 1 https://github.com/webmproject/libwebp.git && cd libwebp
-             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
-             cmake --build build --config Release --target install
+#      - name: Build and Install webp
+#        shell: cmd
+#        run: |
+#             git clone --depth 1 https://github.com/webmproject/libwebp.git && cd libwebp
+#             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local -DWEBP_BUILD_ANIM_UTILS =OFF
+#             cmake --build build --config Release --target install
 
       - name: Build and Install giflib
         shell: cmd
","{'added': [(56, '#      - name: Build and Install webp'), (57, '#        shell: cmd'), (58, '#        run: |'), (59, '#             git clone --depth 1 https://github.com/webmproject/libwebp.git && cd libwebp'), (60, '#             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local -DWEBP_BUILD_ANIM_UTILS =OFF'), (61, '#             cmake --build build --config Release --target install')], 'deleted': [(56, '      - name: Build and Install webp'), (57, '        shell: cmd'), (58, '        run: |'), (59, '             git clone --depth 1 https://github.com/webmproject/libwebp.git && cd libwebp'), (60, '             cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local'), (61, '             cmake --build build --config Release --target install')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,968b6db0b474d5b5b01789cffcc9ed1170087f9f,fdafe6c5b62dd8ca47be53fa7b636926e4813c76,Update cmake-win64.yml,"@@ -5,20 +5,20 @@ on:
   #push:
   schedule:
     - cron: 0 23 * * *
+  workflow_dispatch:
 
 jobs:
   build:
     name: ${{ matrix.config.name }}
     runs-on: ${{ matrix.config.os }}
     strategy:
-      fail-fast: false
+      fail-fast: True
       matrix:
         config:
         - {
-            name: ""Windows Latest MSVC - cmake"",
+            name: ""Windows Latest MSVC - cmake"", artifact: ""Windows-MSVC"",
             os: windows-latest,
-            cc: ""cl"",
-            cxx: ""cl"",
+            cc: ""cl"", cxx: ""cl"",
             environment_script: ""C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat""
           }
 
","{'added': [(8, '  workflow_dispatch:'), (15, '      fail-fast: True'), (19, '            name: ""Windows Latest MSVC - cmake"", artifact: ""Windows-MSVC"",'), (21, '            cc: ""cl"", cxx: ""cl"",')], 'deleted': [(14, '      fail-fast: false'), (18, '            name: ""Windows Latest MSVC - cmake"",'), (20, '            cc: ""cl"",'), (21, '            cxx: ""cl"",')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,fdafe6c5b62dd8ca47be53fa7b636926e4813c76,71ca12f6937604e0ad809666911af615757224c8,Update cmake-win64.yml,"@@ -38,9 +38,9 @@ jobs:
       - name: Build and Install zlib
         shell: cmd
         run: |
-             curl -sSL -o zlib1212.zip https://zlib.net/zlib1211.zip
+             curl -sSL -o zlib1212.zip https://zlib.net/zlib1212.zip
              unzip.exe zlib1212.zip
-             cd zlib-1.2.11
+             cd zlib-1.2.12
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
              cmake --build build --config Release --target install
 
","{'added': [(41, '             curl -sSL -o zlib1212.zip https://zlib.net/zlib1212.zip'), (43, '             cd zlib-1.2.12')], 'deleted': [(41, '             curl -sSL -o zlib1212.zip https://zlib.net/zlib1211.zip'), (43, '             cd zlib-1.2.11')]}",yes
.github\workflows\cmake-win64.yml,.github\workflows\cmake-win64.yml,71ca12f6937604e0ad809666911af615757224c8,cfccc599f32776d8124d7e269ec9d6e40efb76bd,"Update cmake-win64.yml

zlib 1.2.11 zip archive is broken. Download and install 1.2.12 instead.","@@ -38,8 +38,8 @@ jobs:
       - name: Build and Install zlib
         shell: cmd
         run: |
-             curl -sSL -o zlib1211.zip https://zlib.net/zlib1211.zip
-             unzip.exe zlib1211.zip
+             curl -sSL -o zlib1212.zip https://zlib.net/zlib1211.zip
+             unzip.exe zlib1212.zip
              cd zlib-1.2.11
              cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=d:/a/local -DCMAKE_INSTALL_PREFIX=d:/a/local
              cmake --build build --config Release --target install
","{'added': [(41, '             curl -sSL -o zlib1212.zip https://zlib.net/zlib1211.zip'), (42, '             unzip.exe zlib1212.zip')], 'deleted': [(41, '             curl -sSL -o zlib1211.zip https://zlib.net/zlib1211.zip'), (42, '             unzip.exe zlib1211.zip')]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,cfccc599f32776d8124d7e269ec9d6e40efb76bd,b3011ef72ce9ba6f27d791d5efdbb970f03fbd3f,Update sw.yml,"@@ -22,50 +22,50 @@ jobs:
     - uses: egorpugin/sw-action@master
 
     - name: build
-      if: matrix.os == 'windows-latest' || matrix.os == 'windows-2022'
+      if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'
       run: ./sw -static -shared -platform x86,x64 -config d,r build
 
     - name: build
-      if: matrix.os != 'windows-latest' && matrix.os != 'windows-2022'
+      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
       run: ./sw -static -shared -config d,r build -Dwith-tests=1
 
     - name: download test data
       run: git clone https://github.com/egorpugin/tessdata tessdata_unittest
 
     - name: copy fonts
-      if: matrix.os != 'windows-latest' && matrix.os != 'windows-2022'
+      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
       run: cp tessdata_unittest/fonts/* test/testing/
 
     - name: copy fonts
-      if: matrix.os == 'windows-latest' || matrix.os == 'windows-2022'
+      if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'
       run: Copy-Item -Path ""tessdata_unittest\fonts\*"" -Destination ""test\testing"" -Recurse
       shell: pwsh
 
     - name: test
-      if: matrix.os != 'windows-latest' && matrix.os != 'windows-2022'
+      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       continue-on-error: true
 
     - name: test-nightly
-      if: matrix.os != 'windows-latest' && matrix.os != 'windows-2022' && github.event.schedule=='0 0 * * *'
+      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && github.event.schedule=='0 0 * * *'
       run: ./sw -static -shared -config ""d,r"" test -Dwith-tests=1
       continue-on-error: true
 
     # windows tests hang here for some reason, investigate
     #- name: test
-      #if: matrix.os == 'windows-latest' || matrix.os == 'windows-2022'
+      #if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'
       #run: ./sw test -Dwith-tests=1 ""-Dskip-tests=lstm,lstm_recode""
       #continue-on-error: true
 
     - name: Upload Unit Test Results
-      if: always() && matrix.os != 'windows-latest' && matrix.os != 'windows-2022'
+      if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
       uses: actions/upload-artifact@v2
       with:
         name: Test Results (${{ matrix.os }})
         path: .sw/test/results.xml
 
     - name: Publish Test Report
-      if: always() && matrix.os != 'windows-latest' && matrix.os != 'windows-2022'
+      if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'
       uses: mikepenz/action-junit-report@v1
       with:
         check_name: test (${{ matrix.os }})
","{'added': [(25, ""      if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'""), (29, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'""), (36, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'""), (40, ""      if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'""), (45, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019'""), (50, ""      if: matrix.os != 'windows-2022' && matrix.os != 'windows-2019' && github.event.schedule=='0 0 * * *'""), (56, ""      #if: matrix.os == 'windows-2022' || matrix.os == 'windows-2019'""), (61, ""      if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'""), (68, ""      if: always() && matrix.os != 'windows-2022' && matrix.os != 'windows-2019'"")], 'deleted': [(25, ""      if: matrix.os == 'windows-latest' || matrix.os == 'windows-2022'""), (29, ""      if: matrix.os != 'windows-latest' && matrix.os != 'windows-2022'""), (36, ""      if: matrix.os != 'windows-latest' && matrix.os != 'windows-2022'""), (40, ""      if: matrix.os == 'windows-latest' || matrix.os == 'windows-2022'""), (45, ""      if: matrix.os != 'windows-latest' && matrix.os != 'windows-2022'""), (50, ""      if: matrix.os != 'windows-latest' && matrix.os != 'windows-2022' && github.event.schedule=='0 0 * * *'""), (56, ""      #if: matrix.os == 'windows-latest' || matrix.os == 'windows-2022'""), (61, ""      if: always() && matrix.os != 'windows-latest' && matrix.os != 'windows-2022'""), (68, ""      if: always() && matrix.os != 'windows-latest' && matrix.os != 'windows-2022'"")]}",yes
.github\workflows\sw.yml,.github\workflows\sw.yml,b3011ef72ce9ba6f27d791d5efdbb970f03fbd3f,75f17800e0396381cc7e92049a3f4304f5c62e9e,[ci][sw] Add vs2019 and ubuntu22.04.,"@@ -13,7 +13,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
-        os: [windows-latest, windows-2022, ubuntu-20.04, macOS-latest]
+        os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macOS-latest]
 
     steps:
     - uses: actions/checkout@v2
","{'added': [(16, '        os: [windows-2022, windows-2019, ubuntu-22.04, ubuntu-20.04, macOS-latest]')], 'deleted': [(16, '        os: [windows-latest, windows-2022, ubuntu-20.04, macOS-latest]')]}",yes
README.md,README.md,75f17800e0396381cc7e92049a3f4304f5c62e9e,2aa6eda1c20f0370db7404a750a869208680213d,"Remove Travis from README.md

Tesseract no longer uses Travis CI, so remove the link to old results.

Fixes: 9ff97cd8a3c78255 (""Delete .travis.yml"")
Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -1,6 +1,5 @@
 # Tesseract OCR
 
-[![Build Status](https://travis-ci.org/tesseract-ocr/tesseract.svg?branch=master)](https://travis-ci.org/tesseract-ocr/tesseract)
 [![Build status](https://ci.appveyor.com/api/projects/status/miah0ikfsf0j3819/branch/master?svg=true)](https://ci.appveyor.com/project/zdenop/tesseract/)
 ![Build status](https://github.com/tesseract-ocr/tesseract/workflows/sw/badge.svg)<br>
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/tesseract-ocr/badge.svg)](https://scan.coverity.com/projects/tesseract-ocr)
","{'added': [], 'deleted': [(3, '[![Build Status](https://travis-ci.org/tesseract-ocr/tesseract.svg?branch=master)](https://travis-ci.org/tesseract-ocr/tesseract)')]}",yes
.github\workflows\autotools-openmp.yml,.github\workflows\autotools-openmp.yml,2aa6eda1c20f0370db7404a750a869208680213d,2e7ae6eeb6218f95fd0e2b0a92a0357c98dd216f,"Remove trailing blanks

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -60,7 +60,7 @@ jobs:
            lscpu
            free
            g++ --version
-           tesseract -v 
+           tesseract -v
            time tesseract benchmarks.list - --tessdata-dir ../tessdata_fast > /dev/null 2>&1
            echo ""tessdata_fast""
 
@@ -79,6 +79,5 @@ jobs:
     - name: Run Tesseract using image from issue 263 with tessdata and OpenMP Thread Limit
       run: |
            for lmt in {1..3}; do
-                time OMP_THREAD_LIMIT=$lmt tesseract benchmarks.list - --tessdata-dir ../tessdata > /dev/null 2>&1 && echo ""OMP_THREAD_LIMIT="" $lmt ""tessdata"" 
+                time OMP_THREAD_LIMIT=$lmt tesseract benchmarks.list - --tessdata-dir ../tessdata > /dev/null 2>&1 && echo ""OMP_THREAD_LIMIT="" $lmt ""tessdata""
            done
- 
","{'added': [(63, '           tesseract -v'), (82, '                time OMP_THREAD_LIMIT=$lmt tesseract benchmarks.list - --tessdata-dir ../tessdata > /dev/null 2>&1 && echo ""OMP_THREAD_LIMIT="" $lmt ""tessdata""')], 'deleted': [(63, '           tesseract -v'), (82, '                time OMP_THREAD_LIMIT=$lmt tesseract benchmarks.list - --tessdata-dir ../tessdata > /dev/null 2>&1 && echo ""OMP_THREAD_LIMIT="" $lmt ""tessdata""'), (84, '')]}",yes
.github\workflows\unittest-disablelegacy.yml,.github\workflows\unittest-disablelegacy.yml,2aa6eda1c20f0370db7404a750a869208680213d,2e7ae6eeb6218f95fd0e2b0a92a0357c98dd216f,"Remove trailing blanks

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -28,7 +28,7 @@ jobs:
            sudo apt-get install autoconf libleptonica-dev libpango1.0-dev -y
            sudo apt-get install cabextract -y
            #sudo apt-get install libc++-7-dev libc++abi-7-dev -y
-           
+
     - name: Setup
       run: |
            mkdir -p m4
","{'added': [(31, '')], 'deleted': [(31, '')]}",yes
configure.ac,configure.ac,2e7ae6eeb6218f95fd0e2b0a92a0357c98dd216f,64bcdce60755dcc9c32865308a4c195e99ff3e0f,"Fix NEON detection on FreeBSD (#3782)

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -170,7 +170,7 @@ case ""${host_cpu}"" in
 
     ;;
 
-  aarch64)
+  aarch64|arm64)
 
     # ARMv8 always has NEON and does not need special compiler flags.
     AM_CONDITIONAL([HAVE_NEON], true)
@@ -185,6 +185,7 @@ case ""${host_cpu}"" in
       AC_DEFINE([HAVE_NEON], [1], [Enable NEON instructions])
       NEON_CXXFLAGS=""-mfpu=neon""
       AC_SUBST([NEON_CXXFLAGS])
+      check_for_neon=1
     fi
 
     ;;
@@ -198,6 +199,16 @@ esac
 # check whether feenableexcept is supported. some C libraries (e.g. uclibc) don't.
 AC_CHECK_FUNCS([feenableexcept])
 
+# additional checks for NEON targets
+if test x$check_for_neon = x1; then
+  AC_MSG_NOTICE([checking how to detect NEON availability])
+  AC_CHECK_FUNCS([getauxval elf_aux_info android_getCpuFamily])
+
+  if test $ac_cv_func_getauxval = no && test $ac_cv_func_elf_aux_info = no && test $ac_cv_func_android_getCpuFamily = no; then
+      AC_MSG_WARN([NEON is available, but we don't know how to check for it.  Will not be able to use NEON.])
+  fi
+fi
+
 AX_CHECK_COMPILE_FLAG([-fopenmp-simd], [openmp_simd=true], [openmp_simd=false], [$WERROR])
 AM_CONDITIONAL([OPENMP_SIMD], $openmp_simd)
 
","{'added': [(173, '  aarch64|arm64)'), (188, '      check_for_neon=1'), (202, '# additional checks for NEON targets'), (203, 'if test x$check_for_neon = x1; then'), (204, '  AC_MSG_NOTICE([checking how to detect NEON availability])'), (205, '  AC_CHECK_FUNCS([getauxval elf_aux_info android_getCpuFamily])'), (206, ''), (207, '  if test $ac_cv_func_getauxval = no && test $ac_cv_func_elf_aux_info = no && test $ac_cv_func_android_getCpuFamily = no; then'), (208, ""      AC_MSG_WARN([NEON is available, but we don't know how to check for it.  Will not be able to use NEON.])""), (209, '  fi'), (210, 'fi'), (211, '')], 'deleted': [(173, '  aarch64)')]}",yes
src\arch\simddetect.cpp,src\arch\simddetect.cpp,2e7ae6eeb6218f95fd0e2b0a92a0357c98dd216f,64bcdce60755dcc9c32865308a4c195e99ff3e0f,"Fix NEON detection on FreeBSD (#3782)

Co-authored-by: Stefan Weil <sw@weilnetz.de>","@@ -53,12 +53,14 @@
 #endif
 
 #if defined(HAVE_NEON) && !defined(__aarch64__)
-#  ifdef ANDROID
+#  if defined(HAVE_ANDROID_GETCPUFAMILY)
 #    include <cpu-features.h>
-#  else
-/* Assume linux */
+#  elif defined(HAVE_GETAUXVAL)
 #    include <asm/hwcap.h>
 #    include <sys/auxv.h>
+#  elif defined(HAVE_ELF_AUX_INFO)
+#    include <sys/auxv.h>
+#    include <sys/elf.h>
 #  endif
 #endif
 
@@ -210,15 +212,18 @@ SIMDDetect::SIMDDetect() {
 #endif
 
 #if defined(HAVE_NEON) && !defined(__aarch64__)
-#  ifdef ANDROID
+#  if defined(HAVE_ANDROID_GETCPUFAMILY)
   {
     AndroidCpuFamily family = android_getCpuFamily();
     if (family == ANDROID_CPU_FAMILY_ARM)
       neon_available_ = (android_getCpuFeatures() & ANDROID_CPU_ARM_FEATURE_NEON);
   }
-#  else
-  /* Assume linux */
+#  elif defined(HAVE_GETAUXVAL)
   neon_available_ = getauxval(AT_HWCAP) & HWCAP_NEON;
+#  elif defined(HAVE_ELF_AUX_INFO)
+  unsigned long hwcap = 0;
+  elf_aux_info(AT_HWCAP, &hwcap, sizeof hwcap);
+  neon_available_ = hwcap & HWCAP_NEON;
 #  endif
 #endif
 
","{'added': [(56, '#  if defined(HAVE_ANDROID_GETCPUFAMILY)'), (58, '#  elif defined(HAVE_GETAUXVAL)'), (61, '#  elif defined(HAVE_ELF_AUX_INFO)'), (62, '#    include <sys/auxv.h>'), (63, '#    include <sys/elf.h>'), (215, '#  if defined(HAVE_ANDROID_GETCPUFAMILY)'), (221, '#  elif defined(HAVE_GETAUXVAL)'), (223, '#  elif defined(HAVE_ELF_AUX_INFO)'), (224, '  unsigned long hwcap = 0;'), (225, '  elf_aux_info(AT_HWCAP, &hwcap, sizeof hwcap);'), (226, '  neon_available_ = hwcap & HWCAP_NEON;')], 'deleted': [(56, '#  ifdef ANDROID'), (58, '#  else'), (59, '/* Assume linux */'), (213, '#  ifdef ANDROID'), (219, '#  else'), (220, '  /* Assume linux */')]}",yes
src\ccmain\tessedit.cpp,src\ccmain\tessedit.cpp,64bcdce60755dcc9c32865308a4c195e99ff3e0f,f36c0d019be59cae3b96da0d89d870dbe83e9714,"Replace std::regex by std::string functions (fixes issue #3830)

On Windows with UCRT and a UTF-8 locale std::regex takes a lot of time
(several minutes!). Replacing it avoids that bottleneck.

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -23,8 +23,6 @@
 #  include ""config_auto.h""
 #endif
 
-#include <regex> // for std::regex_match
-
 #include ""control.h""
 #include ""matchdefs.h""
 #include ""pageres.h""
@@ -248,12 +246,11 @@ void Tesseract::ParseLanguageString(const std::string &lang_str, std::vector<std
   std::string remains(lang_str);
   // Look whether the model file uses a prefix which must be applied to
   // included model files as well.
-  std::regex e(""(.*)/[^/]*"");
-  std::cmatch cm;
   std::string prefix;
-  if (std::regex_match(lang.c_str(), cm, e, std::regex_constants::match_default)) {
+  size_t found = lang.find_last_of('/');
+  if (found != std::string::npos) {
     // A prefix was found.
-    prefix = cm[1].str() + ""/"";
+    prefix = lang.substr(0, found + 1);
   }
   while (!remains.empty()) {
     // Find the start of the lang code and which vector to add to.
","{'added': [(250, ""  size_t found = lang.find_last_of('/');""), (251, '  if (found != std::string::npos) {'), (253, '    prefix = lang.substr(0, found + 1);')], 'deleted': [(26, '#include <regex> // for std::regex_match'), (27, ''), (251, '  std::regex e(""(.*)/[^/]*"");'), (252, '  std::cmatch cm;'), (254, '  if (std::regex_match(lang.c_str(), cm, e, std::regex_constants::match_default)) {'), (256, '    prefix = cm[1].str() + ""/"";')]}",yes
src\textord\devanagari_processing.cpp,src\textord\devanagari_processing.cpp,f36c0d019be59cae3b96da0d89d870dbe83e9714,9aa81cddbf85a7696d92e03206dd725516be6ff1,"Replace direct access to Leptonica internal data structures by function calls

This fixes builds with latest Leptonica code (for example for OSS-Fuzz).

Signed-off-by: Stefan Weil <sw@weilnetz.de>","@@ -126,7 +126,7 @@ bool ShiroRekhaSplitter::Split(bool split_for_pageseg, DebugPixa *pixa_debug) {
     num_ccs = pixaGetCount(ccs);
   }
   for (int i = 0; i < num_ccs; ++i) {
-    Box *box = ccs->boxa->box[i];
+    Box *box = pixaGetBox(ccs, i, L_CLONE);
     Image word_pix = pixClipRectangle(orig_pix_, box, nullptr);
     ASSERT_HOST(word_pix);
     int xheight = GetXheightForCC(box);
@@ -137,12 +137,15 @@ bool ShiroRekhaSplitter::Split(bool split_for_pageseg, DebugPixa *pixa_debug) {
     // blobs from the shiro-rekha process. This is primarily to save the CCs
     // corresponding to punctuation marks/small dots etc which are part of
     // larger graphemes.
-    if (xheight == kUnspecifiedXheight || (box->w > xheight / 3 && box->h > xheight / 2)) {
-      SplitWordShiroRekha(split_strategy, word_pix, xheight, box->x, box->y, regions_to_clear);
+    l_int32 x, y, w, h;
+    boxGetGeometry(box, &x, &y, &w, &h);
+    if (xheight == kUnspecifiedXheight || (w > xheight / 3 && h > xheight / 2)) {
+      SplitWordShiroRekha(split_strategy, word_pix, xheight, x, y, regions_to_clear);
     } else if (devanagari_split_debuglevel > 0) {
-      tprintf(""CC dropped from splitting: %d,%d (%d, %d)\n"", box->x, box->y, box->w, box->h);
+      tprintf(""CC dropped from splitting: %d,%d (%d, %d)\n"", x, y, w, h);
     }
     word_pix.destroy();
+    boxDestroy(&box);
   }
   // Actually clear the boxes now.
   for (int i = 0; i < boxaGetCount(regions_to_clear); ++i) {
@@ -171,8 +174,10 @@ int ShiroRekhaSplitter::GetXheightForCC(Box *cc_bbox) {
     return global_xheight_;
   }
   // Compute the box coordinates in Tesseract's coordinate system.
-  TBOX bbox(cc_bbox->x, pixGetHeight(orig_pix_) - cc_bbox->y - cc_bbox->h - 1,
-            cc_bbox->x + cc_bbox->w, pixGetHeight(orig_pix_) - cc_bbox->y - 1);
+  l_int32 x, y, w, h;
+  boxGetGeometry(cc_bbox, &x, &y, &w, &h);
+  TBOX bbox(x, pixGetHeight(orig_pix_) - y - h - 1,
+            x + w, pixGetHeight(orig_pix_) - y - 1);
   // Iterate over all blocks.
   BLOCK_IT block_it(segmentation_block_list_);
   for (block_it.mark_cycle_pt(); !block_it.cycled_list(); block_it.forward()) {
@@ -268,8 +273,8 @@ void ShiroRekhaSplitter::SplitWordShiroRekha(SplitStrategy split_strategy, Image
     // shiro-rekha.
     leeway_to_keep = xheight - stroke_width;
   }
-  box_to_clear->y = shirorekha_bottom + leeway_to_keep;
-  box_to_clear->h = height - box_to_clear->y;
+  auto y = shirorekha_bottom + leeway_to_keep;
+  boxSetGeometry(box_to_clear, -1, y, -1, height - y);
   pixClearInRect(word_in_xheight, box_to_clear);
   boxDestroy(&box_to_clear);
 
@@ -390,8 +395,10 @@ int ShiroRekhaSplitter::GetModeHeight(Image pix) {
   heights.clear();
   for (int i = 0; i < boxaGetCount(boxa); ++i) {
     Box *box = boxaGetBox(boxa, i, L_CLONE);
-    if (box->h >= 3 || box->w >= 3) {
-      heights.add(box->h, 1);
+    l_int32 x, y, w, h;
+    boxGetGeometry(box, &x, &y, &w, &h);
+    if (h >= 3 || w >= 3) {
+      heights.add(h, 1);
     }
     boxDestroy(&box);
   }
","{'added': [(129, '    Box *box = pixaGetBox(ccs, i, L_CLONE);'), (140, '    l_int32 x, y, w, h;'), (141, '    boxGetGeometry(box, &x, &y, &w, &h);'), (142, '    if (xheight == kUnspecifiedXheight || (w > xheight / 3 && h > xheight / 2)) {'), (143, '      SplitWordShiroRekha(split_strategy, word_pix, xheight, x, y, regions_to_clear);'), (145, '      tprintf(""CC dropped from splitting: %d,%d (%d, %d)\\n"", x, y, w, h);'), (148, '    boxDestroy(&box);'), (177, '  l_int32 x, y, w, h;'), (178, '  boxGetGeometry(cc_bbox, &x, &y, &w, &h);'), (179, '  TBOX bbox(x, pixGetHeight(orig_pix_) - y - h - 1,'), (180, '            x + w, pixGetHeight(orig_pix_) - y - 1);'), (276, '  auto y = shirorekha_bottom + leeway_to_keep;'), (277, '  boxSetGeometry(box_to_clear, -1, y, -1, height - y);'), (398, '    l_int32 x, y, w, h;'), (399, '    boxGetGeometry(box, &x, &y, &w, &h);'), (400, '    if (h >= 3 || w >= 3) {'), (401, '      heights.add(h, 1);')], 'deleted': [(129, '    Box *box = ccs->boxa->box[i];'), (140, '    if (xheight == kUnspecifiedXheight || (box->w > xheight / 3 && box->h > xheight / 2)) {'), (141, '      SplitWordShiroRekha(split_strategy, word_pix, xheight, box->x, box->y, regions_to_clear);'), (143, '      tprintf(""CC dropped from splitting: %d,%d (%d, %d)\\n"", box->x, box->y, box->w, box->h);'), (174, '  TBOX bbox(cc_bbox->x, pixGetHeight(orig_pix_) - cc_bbox->y - cc_bbox->h - 1,'), (175, '            cc_bbox->x + cc_bbox->w, pixGetHeight(orig_pix_) - cc_bbox->y - 1);'), (271, '  box_to_clear->y = shirorekha_bottom + leeway_to_keep;'), (272, '  box_to_clear->h = height - box_to_clear->y;'), (393, '    if (box->h >= 3 || box->w >= 3) {'), (394, '      heights.add(box->h, 1);')]}",yes
